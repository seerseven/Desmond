function getFocusableElements(e) {
	return Array.from(
		e.querySelectorAll(
			"summary, a[href], button:enabled, [tabindex]:not([tabindex^='-']), [draggable], area, input:not([type=hidden]):enabled, select:enabled, textarea:enabled, object, iframe"
		)
	);
}
const trapFocusHandlers = {};
function trapFocus(t, e = t) {
	var i = getFocusableElements(t),
		n = i[0],
		s = i[i.length - 1];
	removeTrapFocus(),
		(trapFocusHandlers.focusin = (e) => {
			(e.target !== t && e.target !== s && e.target !== n) ||
				document.addEventListener('keydown', trapFocusHandlers.keydown);
		}),
		(trapFocusHandlers.focusout = function () {
			document.removeEventListener('keydown', trapFocusHandlers.keydown);
		}),
		(trapFocusHandlers.keydown = function (e) {
			'TAB' === e.code.toUpperCase() &&
				(e.target !== s || e.shiftKey || (e.preventDefault(), n.focus()),
				(e.target !== t && e.target !== n) ||
					!e.shiftKey ||
					(e.preventDefault(), s.focus()));
		}),
		document.addEventListener('focusout', trapFocusHandlers.focusout),
		document.addEventListener('focusin', trapFocusHandlers.focusin),
		e.focus();
}
try {
	document.querySelector(':focus-visible');
} catch {
	focusVisiblePolyfill();
}
function focusVisiblePolyfill() {
	const t = [
		'ARROWUP',
		'ARROWDOWN',
		'ARROWLEFT',
		'ARROWRIGHT',
		'TAB',
		'ENTER',
		'SPACE',
		'ESCAPE',
		'HOME',
		'END',
		'PAGEUP',
		'PAGEDOWN',
	];
	let e = null,
		i = null;
	window.addEventListener('keydown', (e) => {
		t.includes(e.code.toUpperCase()) && (i = !1);
	}),
		window.addEventListener('mousedown', (e) => {
			i = !0;
		}),
		window.addEventListener(
			'focus',
			() => {
				e && e.classList.remove('focused'),
					i || ((e = document.activeElement), e.classList.add('focused'));
			},
			!0
		);
}
function pauseAllMedia() {
	document.querySelectorAll('.js-youtube').forEach((e) => {
		e.contentWindow.postMessage(
			'{"event":"command","func":"pauseVideo","args":""}',
			'*'
		);
	}),
		document.querySelectorAll('.js-vimeo').forEach((e) => {
			e.contentWindow.postMessage('{"method":"pause"}', '*');
		}),
		document.querySelectorAll('video').forEach((e) => e.pause()),
		document.querySelectorAll('product-model').forEach((e) => {
			e.modelViewerUI && e.modelViewerUI.pause();
		});
}
function removeTrapFocus(e = null) {
	document.removeEventListener('focusin', trapFocusHandlers.focusin),
		document.removeEventListener('focusout', trapFocusHandlers.focusout),
		document.removeEventListener('keydown', trapFocusHandlers.keydown),
		e && e.focus();
}
function onKeyUpEscape(e) {
	if ('ESCAPE' === e.code.toUpperCase()) {
		const t = e.target.closest('details[open]');
		if (t) {
			const i = t.querySelector('summary');
			t.removeAttribute('open'), i.focus();
		}
	}
}
class QuantityInput extends HTMLElement {
	constructor() {
		super(),
			(this.input = this.querySelector('input')),
			(this.changeEvent = new Event('change', { bubbles: !0 })),
			this.querySelectorAll('button').forEach((e) =>
				e.addEventListener('click', this.onButtonClick.bind(this))
			);
	}
	onButtonClick(e) {
		e.preventDefault();
		var t = this.input.value;
		'plus' === e.target.name ? this.input.stepUp() : this.input.stepDown(),
			t !== this.input.value && this.input.dispatchEvent(this.changeEvent);
	}
}
function debounce(t, i) {
	let n;
	return (...e) => {
		clearTimeout(n), (n = setTimeout(() => t.apply(this, e), i));
	};
}
function fetchConfig(e = 'json') {
	return {
		method: 'POST',
		headers: { 'Content-Type': 'application/json', Accept: 'application/' + e },
	};
}
customElements.define('quantity-input', QuantityInput),
	void 0 === window.Shopify && (window.Shopify = {}),
	(Shopify.bind = function (e, t) {
		return function () {
			return e.apply(t, arguments);
		};
	}),
	(Shopify.setSelectorByValue = function (e, t) {
		for (var i = 0, n = e.options.length; i < n; i++) {
			var s = e.options[i];
			if (t == s.value || t == s.innerHTML) return (e.selectedIndex = i);
		}
	}),
	(Shopify.addListener = function (e, t, i) {
		e.addEventListener
			? e.addEventListener(t, i, !1)
			: e.attachEvent('on' + t, i);
	}),
	(Shopify.postLink = function (e, t) {
		var i,
			n = (t = t || {}).method || 'post',
			s = t.parameters || {},
			o = document.createElement('form');
		for (i in (o.setAttribute('method', n), o.setAttribute('action', e), s)) {
			var r = document.createElement('input');
			r.setAttribute('type', 'hidden'),
				r.setAttribute('name', i),
				r.setAttribute('value', s[i]),
				o.appendChild(r);
		}
		document.body.appendChild(o), o.submit(), document.body.removeChild(o);
	}),
	(Shopify.CountryProvinceSelector = function (e, t, i) {
		(this.countryEl = document.getElementById(e)),
			(this.provinceEl = document.getElementById(t)),
			(this.provinceContainer = document.getElementById(i.hideElement || t)),
			Shopify.addListener(
				this.countryEl,
				'change',
				Shopify.bind(this.countryHandler, this)
			),
			this.initCountry(),
			this.initProvince();
	}),
	(Shopify.CountryProvinceSelector.prototype = {
		initCountry: function () {
			var e = this.countryEl.getAttribute('data-default');
			Shopify.setSelectorByValue(this.countryEl, e), this.countryHandler();
		},
		initProvince: function () {
			var e = this.provinceEl.getAttribute('data-default');
			e &&
				0 < this.provinceEl.options.length &&
				Shopify.setSelectorByValue(this.provinceEl, e);
		},
		countryHandler: function (e) {
			var t = (n =
					this.countryEl.options[this.countryEl.selectedIndex]).getAttribute(
					'data-provinces'
				),
				i = JSON.parse(t);
			if ((this.clearOptions(this.provinceEl), i && 0 == i.length))
				this.provinceContainer.style.display = 'none';
			else {
				for (var n, s = 0; s < i.length; s++)
					((n = document.createElement('option')).value = i[s][0]),
						(n.innerHTML = i[s][1]),
						this.provinceEl.appendChild(n);
				this.provinceContainer.style.display = '';
			}
		},
		clearOptions: function (e) {
			for (; e.firstChild; ) e.removeChild(e.firstChild);
		},
		setOptions: function (e, t) {
			var i = 0;
			for (t.length; i < t.length; i++) {
				var n = document.createElement('option');
				(n.value = t[i]), (n.innerHTML = t[i]), e.appendChild(n);
			}
		},
	});
class MenuDrawer extends HTMLElement {
	constructor() {
		super(), (this.mainDetailsToggle = this.querySelector('details'));
		var e = this.querySelectorAll('summary');
		this.addAccessibilityAttributes(e),
			'iPhone' === navigator.platform &&
				document.documentElement.style.setProperty(
					'--viewport-height',
					window.innerHeight + 'px'
				),
			this.addEventListener('keyup', this.onKeyUp.bind(this)),
			this.addEventListener('focusout', this.onFocusOut.bind(this)),
			this.bindEvents();
	}
	bindEvents() {
		this.querySelectorAll('summary').forEach((e) =>
			e.addEventListener('click', this.onSummaryClick.bind(this))
		),
			this.querySelectorAll('button').forEach((e) =>
				e.addEventListener('click', this.onCloseButtonClick.bind(this))
			);
	}
	addAccessibilityAttributes(e) {
		e.forEach((e) => {
			e.setAttribute('role', 'button'),
				e.setAttribute('aria-expanded', !1),
				e.setAttribute('aria-controls', e.nextElementSibling.id);
		});
	}
	onKeyUp(e) {
		'ESCAPE' !== e.code.toUpperCase() ||
			((e = e.target.closest('details[open]')) &&
				(e === this.mainDetailsToggle
					? this.closeMenuDrawer(
							this.mainDetailsToggle.querySelector('summary')
					  )
					: this.closeSubmenu(e)));
	}
	onSummaryClick(e) {
		var t = e.currentTarget;
		const i = t.parentNode;
		var n = i.hasAttribute('open');
		i === this.mainDetailsToggle
			? (n && e.preventDefault(),
			  n ? this.closeMenuDrawer(t) : this.openMenuDrawer(t))
			: (trapFocus(t.nextElementSibling, i.querySelector('button')),
			  setTimeout(() => {
					i.classList.add('menu-opening');
			  }));
	}
	openMenuDrawer(e) {
		setTimeout(() => {
			this.mainDetailsToggle.classList.add('menu-opening');
		}),
			e.setAttribute('aria-expanded', !0),
			trapFocus(this.mainDetailsToggle, e),
			document.body.classList.add('overflow-hidden-' + this.dataset.breakpoint);
	}
	closeMenuDrawer(e, t = !1) {
		void 0 !== e &&
			(this.mainDetailsToggle.classList.remove('menu-opening'),
			this.mainDetailsToggle.querySelectorAll('details').forEach((e) => {
				e.removeAttribute('open'), e.classList.remove('menu-opening');
			}),
			this.mainDetailsToggle
				.querySelector('summary')
				.setAttribute('aria-expanded', !1),
			document.body.classList.remove(
				'overflow-hidden-' + this.dataset.breakpoint
			),
			removeTrapFocus(t),
			this.closeAnimation(this.mainDetailsToggle));
	}
	onFocusOut(e) {
		setTimeout(() => {
			this.mainDetailsToggle.hasAttribute('open') &&
				!this.mainDetailsToggle.contains(document.activeElement) &&
				this.closeMenuDrawer();
		});
	}
	onCloseButtonClick(e) {
		e = e.currentTarget.closest('details');
		this.closeSubmenu(e);
	}
	closeSubmenu(e) {
		e.classList.remove('menu-opening'),
			removeTrapFocus(),
			this.closeAnimation(e);
	}
	closeAnimation(t) {
		let i;
		const n = (e) => {
			void 0 === i && (i = e),
				e - i < 400
					? window.requestAnimationFrame(n)
					: (t.removeAttribute('open'),
					  t.closest('details[open]') &&
							trapFocus(
								t.closest('details[open]'),
								t.querySelector('summary')
							));
		};
		window.requestAnimationFrame(n);
	}
}
customElements.define('menu-drawer', MenuDrawer);
class HeaderDrawer extends MenuDrawer {
	constructor() {
		super();
	}
	openMenuDrawer(e) {
		(this.header =
			this.header || document.getElementById('shopify-section-header')),
			(this.borderOffset =
				this.borderOffset ||
				this.closest('.header-wrapper').classList.contains(
					'header-wrapper--border-bottom'
				)
					? 1
					: 0),
			document.documentElement.style.setProperty(
				'--header-bottom-position',
				parseInt(
					this.header.getBoundingClientRect().bottom - this.borderOffset
				) + 'px'
			),
			setTimeout(() => {
				this.mainDetailsToggle.classList.add('menu-opening');
			}),
			e.setAttribute('aria-expanded', !0),
			trapFocus(this.mainDetailsToggle, e),
			document.body.classList.add('overflow-hidden-' + this.dataset.breakpoint);
	}
}
customElements.define('header-drawer', HeaderDrawer);
class ModalDialog extends HTMLElement {
	constructor() {
		super(),
			this.querySelector('[id^="ModalClose-"]').addEventListener(
				'click',
				this.hide.bind(this)
			),
			this.addEventListener('keyup', (e) => {
				'ESCAPE' === e.code.toUpperCase() && this.hide();
			}),
			this.classList.contains('media-modal')
				? this.addEventListener('pointerup', (e) => {
						'mouse' !== e.pointerType ||
							e.target.closest('deferred-media, product-model') ||
							this.hide();
				  })
				: this.addEventListener('click', (e) => {
						'MODAL-DIALOG' === e.target.nodeName && this.hide();
				  });
	}
	show(e) {
		this.openedBy = e;
		const t = this.querySelector('.template-popup');
		document.body.classList.add('overflow-hidden'),
			this.setAttribute('open', ''),
			t && t.loadContent(),
			trapFocus(this, this.querySelector('[role="dialog"]')),
			window.pauseAllMedia();
	}
	hide() {
		document.body.classList.remove('overflow-hidden'),
			this.removeAttribute('open'),
			removeTrapFocus(this.openedBy),
			window.pauseAllMedia();
	}
}
customElements.define('modal-dialog', ModalDialog);
class ModalOpener extends HTMLElement {
	constructor() {
		super();
		const t = this.querySelector('button');
		t &&
			t.addEventListener('click', () => {
				const e = document.querySelector(this.getAttribute('data-modal'));
				e && e.show(t);
			});
	}
}
customElements.define('modal-opener', ModalOpener);
class DeferredMedia extends HTMLElement {
	constructor() {
		super();
		const e = this.querySelector('[id^="Deferred-Poster-"]');
		e && e.addEventListener('click', this.loadContent.bind(this));
	}
	loadContent() {
		if ((window.pauseAllMedia(), !this.getAttribute('loaded'))) {
			const e = document.createElement('div');
			e.appendChild(
				this.querySelector('template').content.firstElementChild.cloneNode(!0)
			),
				this.setAttribute('loaded', !0),
				this.appendChild(
					e.querySelector('video, model-viewer, iframe')
				).focus();
		}
	}
}
customElements.define('deferred-media', DeferredMedia);
class SliderComponent extends HTMLElement {
	constructor() {
		if (
			(super(),
			(this.slider = this.querySelector('ul')),
			(this.sliderItems = this.querySelectorAll('li')),
			(this.pageCount = this.querySelector('.slider-counter--current')),
			(this.pageTotal = this.querySelector('.slider-counter--total')),
			(this.prevButton = this.querySelector('button[name="previous"]')),
			(this.nextButton = this.querySelector('button[name="next"]')),
			this.slider && this.nextButton)
		) {
			const e = new ResizeObserver((e) => this.initPages());
			e.observe(this.slider),
				this.slider.addEventListener('scroll', this.update.bind(this)),
				this.prevButton.addEventListener(
					'click',
					this.onButtonClick.bind(this)
				),
				this.nextButton.addEventListener(
					'click',
					this.onButtonClick.bind(this)
				);
		}
	}
	initPages() {
		var e = Array.from(this.sliderItems).filter((e) => 0 < e.clientWidth);
		(this.sliderLastItem = e[e.length - 1]),
			0 !== e.length &&
				((this.slidesPerPage = Math.floor(
					this.slider.clientWidth / e[0].clientWidth
				)),
				(this.totalPages = e.length - this.slidesPerPage + 1),
				this.update());
	}
	update() {
		this.pageCount &&
			this.pageTotal &&
			((this.currentPage =
				Math.round(this.slider.scrollLeft / this.sliderLastItem.clientWidth) +
				1),
			1 === this.currentPage
				? this.prevButton.setAttribute('disabled', !0)
				: this.prevButton.removeAttribute('disabled'),
			this.currentPage === this.totalPages
				? this.nextButton.setAttribute('disabled', !0)
				: this.nextButton.removeAttribute('disabled'),
			(this.pageCount.textContent = this.currentPage),
			(this.pageTotal.textContent = this.totalPages));
	}
	onButtonClick(e) {
		e.preventDefault();
		e =
			'next' === e.currentTarget.name
				? this.slider.scrollLeft + this.sliderLastItem.clientWidth
				: this.slider.scrollLeft - this.sliderLastItem.clientWidth;
		this.slider.scrollTo({ left: e });
	}
}
customElements.define('slider-component', SliderComponent);
class VariantSelects extends HTMLElement {
	constructor() {
		super(), this.addEventListener('change', this.onVariantChange);
	}
	onVariantChange() {
		this.updateOptions(),
			this.updateMasterId(),
			this.toggleAddButton(!0, '', !1),
			this.updatePickupAvailability(),
			this.removeErrorMessage(),
			this.currentVariant
				? (this.updateMedia(),
				  this.updateURL(),
				  this.updateVariantInput(),
				  this.renderProductInfo())
				: (this.toggleAddButton(!0, '', !0), this.setUnavailable());
	}
	updateOptions() {
		this.options = Array.from(this.querySelectorAll('select'), (e) => e.value);
	}
	updateMasterId() {
		this.currentVariant = this.getVariantData().find(
			(e) => !e.options.map((e, t) => this.options[t] === e).includes(!1)
		);
	}
	updateMedia() {
		if (this.currentVariant && this.currentVariant.featured_media) {
			var e = document.querySelector(
				`[data-media-id="${this.dataset.section}-${this.currentVariant.featured_media.id}"]`
			);
			if (e) {
				const i = document.querySelector(
					`#ProductModal-${this.dataset.section} .product-media-modal__content`
				);
				var t = i.querySelector(
					`[data-media-id="${this.currentVariant.featured_media.id}"]`
				);
				const n = e.parentElement;
				n.firstChild != e &&
					(i.prepend(t),
					n.prepend(e),
					(this.stickyHeader =
						this.stickyHeader || document.querySelector('sticky-header')),
					this.stickyHeader &&
						this.stickyHeader.dispatchEvent(new Event('preventHeaderReveal')),
					window.setTimeout(() => {
						n.querySelector('li.product__media-item').scrollIntoView({
							behavior: 'smooth',
						});
					}));
			}
		}
	}
	updateURL() {
		this.currentVariant &&
			'false' !== this.dataset.updateUrl &&
			window.history.replaceState(
				{},
				'',
				this.dataset.url + '?variant=' + this.currentVariant.id
			);
	}
	updateVariantInput() {
		const e = document.querySelectorAll(
			`#product-form-${this.dataset.section}, #product-form-installment`
		);
		e.forEach((e) => {
			const t = e.querySelector('input[name="id"]');
			(t.value = this.currentVariant.id),
				t.dispatchEvent(new Event('change', { bubbles: !0 }));
		});
	}
	updatePickupAvailability() {
		const e = document.querySelector('pickup-availability');
		e &&
			(this.currentVariant && this.currentVariant.available
				? e.fetchAvailability(this.currentVariant.id)
				: (e.removeAttribute('available'), (e.innerHTML = '')));
	}
	removeErrorMessage() {
		const e = this.closest('section');
		if (e) {
			const t = e.querySelector('product-form');
			t && t.handleErrorMessage();
		}
	}
	renderProductInfo() {
		fetch(
			`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=` +
				this.dataset.section
		)
			.then((e) => e.text())
			.then((e) => {
				var t = 'price-' + this.dataset.section;
				const i = new DOMParser().parseFromString(e, 'text/html'),
					n = document.getElementById(t);
				t = i.getElementById(t);
				t && n && (n.innerHTML = t.innerHTML);
				const s = document.getElementById('price-' + this.dataset.section);
				s && s.classList.remove('visibility-hidden'),
					this.toggleAddButton(
						!this.currentVariant.available,
						window.variantStrings.soldOut
					);
			});
	}
	toggleAddButton(e = !0, t, i) {
		const n = document.getElementById('product-form-' + this.dataset.section);
		if (n) {
			const s = n.querySelector('[name="add"]'),
				o = n.querySelector('[name="add"] > span');
			s &&
				(e
					? (s.setAttribute('disabled', !0), t && (o.textContent = t))
					: (s.removeAttribute('disabled'),
					  (o.textContent = window.variantStrings.addToCart)));
		}
	}
	setUnavailable() {
		const e = document.getElementById('product-form-' + this.dataset.section);
		var t = e.querySelector('[name="add"]');
		const i = e.querySelector('[name="add"] > span'),
			n = document.getElementById('price-' + this.dataset.section);
		t &&
			((i.textContent = window.variantStrings.unavailable),
			n && n.classList.add('visibility-hidden'));
	}
	getVariantData() {
		return (
			(this.variantData =
				this.variantData ||
				JSON.parse(
					this.querySelector('[type="application/json"]').textContent
				)),
			this.variantData
		);
	}
}
customElements.define('variant-selects', VariantSelects);
class VariantRadios extends VariantSelects {
	constructor() {
		super();
	}
	updateOptions() {
		const e = Array.from(this.querySelectorAll('fieldset'));
		this.options = e.map(
			(e) =>
				Array.from(e.querySelectorAll('input')).find((e) => e.checked).value
		);
	}
}
customElements.define('variant-radios', VariantRadios);
class CartNotification extends HTMLElement {
	constructor() {
		super(),
			(this.notification = document.getElementById('cart-notification')),
			(this.header = document.querySelector('sticky-header')),
			(this.onBodyClick = this.handleBodyClick.bind(this)),
			this.notification.addEventListener(
				'keyup',
				(t) => 'Escape' === t.code && this.close()
			),
			this.querySelectorAll('button[type="button"]').forEach((t) =>
				t.addEventListener('click', this.close.bind(this))
			);
	}
	open() {
		this.notification.classList.add('animate', 'active'),
			this.notification.addEventListener(
				'transitionend',
				() => {
					this.notification.focus(), trapFocus(this.notification);
				},
				{ once: !0 }
			),
			document.body.addEventListener('click', this.onBodyClick);
	}
	close() {
		this.notification.classList.remove('active'),
			document.body.removeEventListener('click', this.onBodyClick),
			removeTrapFocus(this.activeElement);
	}
	renderContents(e) {
		(this.productId = e.id),
			this.getSectionsToRender().forEach((t) => {
				document.getElementById(t.id).innerHTML = this.getSectionInnerHTML(
					e.sections[t.id],
					t.selector
				);
			}),
			this.header && this.header.reveal(),
			this.open();
	}
	getSectionsToRender() {
		return [
			{
				id: 'cart-notification-product',
				selector: '#cart-notification-product-' + this.productId,
			},
			{ id: 'cart-notification-button' },
			{ id: 'cart-icon-bubble' },
		];
	}
	getSectionInnerHTML(t, e = '.shopify-section') {
		return new DOMParser().parseFromString(t, 'text/html').querySelector(e)
			.innerHTML;
	}
	handleBodyClick(t) {
		const e = t.target;
		if (e !== this.notification && !e.closest('cart-notification')) {
			const i = e.closest('details-disclosure');
			(this.activeElement = i ? i.querySelector('summary') : null),
				this.close();
		}
	}
	setActiveElement(t) {
		this.activeElement = t;
	}
}
customElements.define('cart-notification', CartNotification);
class CartRemoveButton extends HTMLElement {
	constructor() {
		super(),
			this.addEventListener('click', (e) => {
				e.preventDefault(),
					this.closest('cart-items').updateQuantity(this.dataset.index, 0);
			});
	}
}
customElements.define('cart-remove-button', CartRemoveButton);
class CartItems extends HTMLElement {
	constructor() {
		super(),
			(this.lineItemStatusElement = document.getElementById(
				'shopping-cart-line-item-status'
			)),
			(this.currentItemCount = Array.from(
				this.querySelectorAll('[name="updates[]"]')
			).reduce((e, t) => e + parseInt(t.value), 0)),
			(this.debouncedOnChange = debounce((e) => {
				this.onChange(e);
			}, 300)),
			this.addEventListener('change', this.debouncedOnChange.bind(this));
	}
	onChange(e) {
		this.updateQuantity(
			e.target.dataset.index,
			e.target.value,
			document.activeElement.getAttribute('name')
		);
	}
	getSectionsToRender() {
		return [
			{
				id: 'main-cart-items',
				section: document.getElementById('main-cart-items').dataset.id,
				selector: '.js-contents',
			},
			{
				id: 'cart-icon-bubble',
				section: 'cart-icon-bubble',
				selector: '.shopify-section',
			},
			{
				id: 'cart-live-region-text',
				section: 'cart-live-region-text',
				selector: '.shopify-section',
			},
			{
				id: 'main-cart-footer',
				section: document.getElementById('main-cart-footer').dataset.id,
				selector: '.js-contents',
			},
		];
	}
	updateQuantity(s, e, r) {
		this.enableLoading(s);
		e = JSON.stringify({
			line: s,
			quantity: e,
			sections: this.getSectionsToRender().map((e) => e.section),
			sections_url: window.location.pathname,
		});
		fetch('' + routes.cart_change_url, { ...fetchConfig(), body: e })
			.then((e) => e.text())
			.then((e) => {
				const n = JSON.parse(e);
				this.classList.toggle('is-empty', 0 === n.item_count);
				const t = document.getElementById('main-cart-footer');
				t && t.classList.toggle('is-empty', 0 === n.item_count),
					this.getSectionsToRender().forEach((e) => {
						const t =
							document.getElementById(e.id).querySelector(e.selector) ||
							document.getElementById(e.id);
						t.innerHTML = this.getSectionInnerHTML(
							n.sections[e.section],
							e.selector
						);
					}),
					this.updateLiveRegions(s, n.item_count);
				const i = document.getElementById('CartItem-' + s);
				i &&
					i.querySelector(`[name="${r}"]`) &&
					i.querySelector(`[name="${r}"]`).focus(),
					this.disableLoading();
			})
			.catch(() => {
				this.querySelectorAll('.loading-overlay').forEach((e) =>
					e.classList.add('hidden')
				),
					(document.getElementById('cart-errors').textContent =
						window.cartStrings.error),
					this.disableLoading();
			});
	}
	updateLiveRegions(e, t) {
		this.currentItemCount === t &&
			(document
				.getElementById('Line-item-error-' + e)
				.querySelector('.cart-item__error-text').innerHTML =
				window.cartStrings.quantityError.replace(
					'[quantity]',
					document.getElementById('Quantity-' + e).value
				)),
			(this.currentItemCount = t),
			this.lineItemStatusElement.setAttribute('aria-hidden', !0);
		const n = document.getElementById('cart-live-region-text');
		n.setAttribute('aria-hidden', !1),
			setTimeout(() => {
				n.setAttribute('aria-hidden', !0);
			}, 1e3);
	}
	getSectionInnerHTML(e, t) {
		return new DOMParser().parseFromString(e, 'text/html').querySelector(t)
			.innerHTML;
	}
	enableLoading(e) {
		document
			.getElementById('main-cart-items')
			.classList.add('cart__items--disabled'),
			this.querySelectorAll(`#CartItem-${e} .loading-overlay`).forEach((e) =>
				e.classList.remove('hidden')
			),
			document.activeElement.blur(),
			this.lineItemStatusElement.setAttribute('aria-hidden', !1);
	}
	disableLoading() {
		document
			.getElementById('main-cart-items')
			.classList.remove('cart__items--disabled');
	}
}
customElements.define('cart-items', CartItems);
class DetailsDisclosure extends HTMLElement {
	constructor() {
		super(),
			(this.mainDetailsToggle = this.querySelector('details')),
			this.addEventListener('keyup', onKeyUpEscape),
			this.mainDetailsToggle.addEventListener(
				'focusout',
				this.onFocusOut.bind(this)
			);
	}
	onFocusOut() {
		setTimeout(() => {
			this.contains(document.activeElement) || this.close();
		});
	}
	close() {
		this.mainDetailsToggle.removeAttribute('open');
	}
}
customElements.define('details-disclosure', DetailsDisclosure);
class DetailsModal extends HTMLElement {
	constructor() {
		super(),
			(this.detailsContainer = this.querySelector('details')),
			(this.summaryToggle = this.querySelector('summary')),
			this.detailsContainer.addEventListener(
				'keyup',
				(t) => 'ESCAPE' === t.code.toUpperCase() && this.close()
			),
			this.summaryToggle.addEventListener(
				'click',
				this.onSummaryClick.bind(this)
			),
			this.querySelector('button[type="button"]').addEventListener(
				'click',
				this.close.bind(this)
			),
			this.summaryToggle.setAttribute('role', 'button'),
			this.summaryToggle.setAttribute('aria-expanded', 'false');
	}
	isOpen() {
		return this.detailsContainer.hasAttribute('open');
	}
	onSummaryClick(t) {
		t.preventDefault(),
			t.target.closest('details').hasAttribute('open')
				? this.close()
				: this.open(t);
	}
	onBodyClick(t) {
		(this.contains(t.target) &&
			!t.target.classList.contains('modal-overlay')) ||
			this.close(!1);
	}
	open(t) {
		(this.onBodyClickEvent =
			this.onBodyClickEvent || this.onBodyClick.bind(this)),
			t.target.closest('details').setAttribute('open', !0),
			document.body.addEventListener('click', this.onBodyClickEvent),
			document.body.classList.add('overflow-hidden'),
			trapFocus(
				this.detailsContainer.querySelector('[tabindex="-1"]'),
				this.detailsContainer.querySelector('input:not([type="hidden"])')
			);
	}
	close(t = !0) {
		removeTrapFocus(t ? this.summaryToggle : null),
			this.detailsContainer.removeAttribute('open'),
			document.body.removeEventListener('click', this.onBodyClickEvent),
			document.body.classList.remove('overflow-hidden');
	}
}
customElements.define('details-modal', DetailsModal);
class FacetFiltersForm extends HTMLElement {
	constructor() {
		super(),
			(this.onActiveFilterClick = this.onActiveFilterClick.bind(this)),
			(this.debouncedOnSubmit = debounce((e) => {
				this.onSubmitHandler(e);
			}, 500)),
			this.querySelector('form').addEventListener(
				'input',
				this.debouncedOnSubmit.bind(this)
			);
		const e = this.querySelector('#FacetsWrapperDesktop');
		e && e.addEventListener('keyup', onKeyUpEscape);
	}
	static setListeners() {
		window.addEventListener('popstate', (e) => {
			e = e.state ? e.state.searchParams : FacetFiltersForm.searchParamsInitial;
			e !== FacetFiltersForm.searchParamsPrev &&
				FacetFiltersForm.renderPage(e, null, !1);
		});
	}
	static toggleActiveFacets(t = !0) {
		document.querySelectorAll('.js-facet-remove').forEach((e) => {
			e.classList.toggle('disabled', t);
		});
	}
	static renderPage(r, a, e = !0) {
		FacetFiltersForm.searchParamsPrev = r;
		const t = FacetFiltersForm.getSections(),
			n = document.getElementById('ProductCount'),
			s = document.getElementById('ProductCountDesktop');
		document
			.getElementById('ProductGridContainer')
			.querySelector('.collection')
			.classList.add('loading'),
			n && n.classList.add('loading'),
			s && s.classList.add('loading'),
			t.forEach((e) => {
				const t = `${window.location.pathname}?section_id=${e.section}&` + r;
				e = (e) => e.url === t;
				FacetFiltersForm.filterData.some(e)
					? FacetFiltersForm.renderSectionFromCache(e, a)
					: FacetFiltersForm.renderSectionFromFetch(t, a);
			}),
			e && FacetFiltersForm.updateURLHash(r);
	}
	static renderSectionFromFetch(t, r) {
		fetch(t)
			.then((e) => e.text())
			.then((e) => {
				(FacetFiltersForm.filterData = [
					...FacetFiltersForm.filterData,
					{ html: e, url: t },
				]),
					FacetFiltersForm.renderFilters(e, r),
					FacetFiltersForm.renderProductGridContainer(e),
					FacetFiltersForm.renderProductCount(e);
			});
	}
	static renderSectionFromCache(e, t) {
		e = FacetFiltersForm.filterData.find(e).html;
		FacetFiltersForm.renderFilters(e, t),
			FacetFiltersForm.renderProductGridContainer(e),
			FacetFiltersForm.renderProductCount(e);
	}
	static renderProductGridContainer(e) {
		document.getElementById('ProductGridContainer').innerHTML = new DOMParser()
			.parseFromString(e, 'text/html')
			.getElementById('ProductGridContainer').innerHTML;
	}
	static renderProductCount(e) {
		e = new DOMParser()
			.parseFromString(e, 'text/html')
			.getElementById('ProductCount').innerHTML;
		const t = document.getElementById('ProductCount'),
			r = document.getElementById('ProductCountDesktop');
		(t.innerHTML = e),
			t.classList.remove('loading'),
			r && ((r.innerHTML = e), r.classList.remove('loading'));
	}
	static renderFilters(e, r) {
		const t = new DOMParser().parseFromString(e, 'text/html');
		e = t.querySelectorAll(
			'#FacetFiltersForm .js-filter, #FacetFiltersFormMobile .js-filter'
		);
		const a = (e) => {
				var t = r ? r.target.closest('.js-filter') : void 0;
				return !!t && e.dataset.index === t.dataset.index;
			},
			n = Array.from(e).filter((e) => !a(e));
		e = Array.from(e).find(a);
		n.forEach((e) => {
			document.querySelector(
				`.js-filter[data-index="${e.dataset.index}"]`
			).innerHTML = e.innerHTML;
		}),
			FacetFiltersForm.renderActiveFacets(t),
			FacetFiltersForm.renderAdditionalElements(t),
			e && FacetFiltersForm.renderCounts(e, r.target.closest('.js-filter'));
	}
	static renderActiveFacets(r) {
		['.active-facets-mobile', '.active-facets-desktop'].forEach((e) => {
			var t = r.querySelector(e);
			t && (document.querySelector(e).innerHTML = t.innerHTML);
		}),
			FacetFiltersForm.toggleActiveFacets(!1);
	}
	static renderAdditionalElements(t) {
		['.mobile-facets__open', '.mobile-facets__count', '.sorting'].forEach(
			(e) => {
				t.querySelector(e) &&
					(document.querySelector(e).innerHTML = t.querySelector(e).innerHTML);
			}
		),
			document
				.getElementById('FacetFiltersFormMobile')
				.closest('menu-drawer')
				.bindEvents();
	}
	static renderCounts(e, t) {
		var r = t.querySelector('.facets__selected');
		e.querySelector('.facets__selected') &&
			r &&
			(t.querySelector('.facets__selected').outerHTML =
				e.querySelector('.facets__selected').outerHTML);
	}
	static updateURLHash(e) {
		history.pushState(
			{ searchParams: e },
			'',
			'' + window.location.pathname + (e && '?'.concat(e))
		);
	}
	static getSections() {
		return [{ section: document.getElementById('product-grid').dataset.id }];
	}
	onSubmitHandler(e) {
		e.preventDefault();
		var t = new FormData(e.target.closest('form')),
			t = new URLSearchParams(t).toString();
		FacetFiltersForm.renderPage(t, e);
	}
	onActiveFilterClick(e) {
		e.preventDefault(), FacetFiltersForm.toggleActiveFacets();
		e =
			-1 == e.currentTarget.href.indexOf('?')
				? ''
				: e.currentTarget.href.slice(e.currentTarget.href.indexOf('?') + 1);
		FacetFiltersForm.renderPage(e);
	}
}
(FacetFiltersForm.filterData = []),
	(FacetFiltersForm.searchParamsInitial = window.location.search.slice(1)),
	(FacetFiltersForm.searchParamsPrev = window.location.search.slice(1)),
	customElements.define('facet-filters-form', FacetFiltersForm),
	FacetFiltersForm.setListeners();
class PriceRange extends HTMLElement {
	constructor() {
		super(),
			this.querySelectorAll('input').forEach((e) =>
				e.addEventListener('change', this.onRangeChange.bind(this))
			),
			this.setMinAndMaxValues();
	}
	onRangeChange(e) {
		this.adjustToValidValues(e.currentTarget), this.setMinAndMaxValues();
	}
	setMinAndMaxValues() {
		var e = this.querySelectorAll('input');
		const t = e[0],
			r = e[1];
		r.value && t.setAttribute('max', r.value),
			t.value && r.setAttribute('min', t.value),
			'' === t.value && r.setAttribute('min', 0),
			'' === r.value && t.setAttribute('max', r.getAttribute('max'));
	}
	adjustToValidValues(e) {
		var t = Number(e.value),
			r = Number(e.getAttribute('min')),
			a = Number(e.getAttribute('max'));
		t < r && (e.value = r), a < t && (e.value = a);
	}
}
customElements.define('price-range', PriceRange);
class FacetRemove extends HTMLElement {
	constructor() {
		super(),
			this.querySelector('a').addEventListener('click', (e) => {
				e.preventDefault();
				const t =
					this.closest('facet-filters-form') ||
					document.querySelector('facet-filters-form');
				t.onActiveFilterClick(e);
			});
	}
}
customElements.define('facet-remove', FacetRemove);
class PasswordModal extends DetailsModal {
	constructor() {
		super(),
			this.querySelector('input[aria-invalid="true"]') &&
				this.open({ target: this.querySelector('details') });
	}
}
customElements.define('password-modal', PasswordModal);
customElements.get('pickup-availability') ||
	customElements.define(
		'pickup-availability',
		class extends HTMLElement {
			constructor() {
				super(),
					this.hasAttribute('available') &&
						((this.errorHtml = this.querySelector(
							'template'
						).content.firstElementChild.cloneNode(!0)),
						(this.onClickRefreshList = this.onClickRefreshList.bind(this)),
						this.fetchAvailability(this.dataset.variantId));
			}
			fetchAvailability(e) {
				e =
					this.dataset.baseUrl +
					`variants/${e}/?section_id=pickup-availability`;
				fetch(e)
					.then((e) => e.text())
					.then((e) => {
						e = new DOMParser()
							.parseFromString(e, 'text/html')
							.querySelector('.shopify-section');
						this.renderPreview(e);
					})
					.catch((e) => {
						const t = this.querySelector('button');
						t && t.removeEventListener('click', this.onClickRefreshList),
							this.renderError();
					});
			}
			onClickRefreshList(e) {
				this.fetchAvailability(this.dataset.variantId);
			}
			renderError() {
				(this.innerHTML = ''),
					this.appendChild(this.errorHtml),
					this.querySelector('button').addEventListener(
						'click',
						this.onClickRefreshList
					);
			}
			renderPreview(e) {
				const t = document.querySelector('pickup-availability-drawer');
				if ((t && t.remove(), !e.querySelector('pickup-availability-preview')))
					return (this.innerHTML = ''), void this.removeAttribute('available');
				(this.innerHTML = e.querySelector(
					'pickup-availability-preview'
				).outerHTML),
					this.setAttribute('available', ''),
					document.body.appendChild(
						e.querySelector('pickup-availability-drawer')
					),
					this.querySelector('button').addEventListener('click', (e) => {
						document.querySelector('pickup-availability-drawer').show(e.target);
					});
			}
		}
	),
	customElements.get('pickup-availability-drawer') ||
		customElements.define(
			'pickup-availability-drawer',
			class extends HTMLElement {
				constructor() {
					super(),
						(this.onBodyClick = this.handleBodyClick.bind(this)),
						this.querySelector('button').addEventListener('click', () => {
							this.hide();
						}),
						this.addEventListener('keyup', () => {
							'ESCAPE' === event.code.toUpperCase() && this.hide();
						});
				}
				handleBodyClick(e) {
					const t = e.target;
					t == this ||
						t.closest('pickup-availability-drawer') ||
						'ShowPickupAvailabilityDrawer' == t.id ||
						this.hide();
				}
				hide() {
					this.removeAttribute('open'),
						document.body.removeEventListener('click', this.onBodyClick),
						document.body.classList.remove('overflow-hidden'),
						removeTrapFocus(this.focusElement);
				}
				show(e) {
					(this.focusElement = e),
						this.setAttribute('open', ''),
						document.body.addEventListener('click', this.onBodyClick),
						document.body.classList.add('overflow-hidden'),
						trapFocus(this);
				}
			}
		);
class PredictiveSearch extends HTMLElement {
	constructor() {
		super(),
			(this.cachedResults = {}),
			(this.input = this.querySelector('input[type="search"]')),
			(this.predictiveSearchResults = this.querySelector(
				'[data-predictive-search]'
			)),
			this.setupEventListeners();
	}
	setupEventListeners() {
		const e = this.querySelector('form.search');
		e.addEventListener('submit', this.onFormSubmit.bind(this)),
			this.input.addEventListener(
				'input',
				debounce((e) => {
					this.onChange(e);
				}, 300).bind(this)
			),
			this.input.addEventListener('focus', this.onFocus.bind(this)),
			this.addEventListener('focusout', this.onFocusOut.bind(this)),
			this.addEventListener('keyup', this.onKeyup.bind(this)),
			this.addEventListener('keydown', this.onKeydown.bind(this));
	}
	getQuery() {
		return this.input.value.trim();
	}
	onChange() {
		var e = this.getQuery();
		e.length ? this.getSearchResults(e) : this.close(!0);
	}
	onFormSubmit(e) {
		(this.getQuery().length &&
			!this.querySelector('[aria-selected="true"] a')) ||
			e.preventDefault();
	}
	onFocus() {
		var e = this.getQuery();
		e.length &&
			('true' === this.getAttribute('results')
				? this.open()
				: this.getSearchResults(e));
	}
	onFocusOut() {
		setTimeout(() => {
			this.contains(document.activeElement) || this.close();
		});
	}
	onKeyup(e) {
		switch (
			(this.getQuery().length || this.close(!0), e.preventDefault(), e.code)
		) {
			case 'ArrowUp':
				this.switchOption('up');
				break;
			case 'ArrowDown':
				this.switchOption('down');
				break;
			case 'Enter':
				this.selectOption();
		}
	}
	onKeydown(e) {
		('ArrowUp' !== e.code && 'ArrowDown' !== e.code) || e.preventDefault();
	}
	switchOption(t) {
		if (this.getAttribute('open')) {
			var s = 'up' === t;
			const i = this.querySelector('[aria-selected="true"]');
			t = this.querySelectorAll('li');
			let e = this.querySelector('li');
			(s && !i) ||
				((this.statusElement.textContent = ''),
				!s && i
					? (e = i.nextElementSibling || t[0])
					: s && (e = i.previousElementSibling || t[t.length - 1]),
				e !== i &&
					(e.setAttribute('aria-selected', !0),
					i && i.setAttribute('aria-selected', !1),
					this.setLiveRegionText(e.textContent),
					this.input.setAttribute('aria-activedescendant', e.id)));
		}
	}
	selectOption() {
		const e = this.querySelector(
			'[aria-selected="true"] a, [aria-selected="true"] button'
		);
		e && e.click();
	}
	getSearchResults(e) {
		const t = e.replace(' ', '-').toLowerCase();
		this.setLiveRegionLoadingState(),
			this.cachedResults[t]
				? this.renderSearchResults(this.cachedResults[t])
				: fetch(
						`${routes.predictive_search_url}?q=${encodeURIComponent(
							e
						)}&${encodeURIComponent(
							'resources[type]'
						)}=product&${encodeURIComponent(
							'resources[limit]'
						)}=4&section_id=predictive-search`
				  )
						.then((e) => {
							if (e.ok) return e.text();
							e = new Error(e.status);
							throw (this.close(), e);
						})
						.then((e) => {
							e = new DOMParser()
								.parseFromString(e, 'text/html')
								.querySelector('#shopify-section-predictive-search').innerHTML;
							(this.cachedResults[t] = e), this.renderSearchResults(e);
						})
						.catch((e) => {
							throw (this.close(), e);
						});
	}
	setLiveRegionLoadingState() {
		(this.statusElement =
			this.statusElement || this.querySelector('.predictive-search-status')),
			(this.loadingText =
				this.loadingText || this.getAttribute('data-loading-text')),
			this.setLiveRegionText(this.loadingText),
			this.setAttribute('loading', !0);
	}
	setLiveRegionText(e) {
		this.statusElement.setAttribute('aria-hidden', 'false'),
			(this.statusElement.textContent = e),
			setTimeout(() => {
				this.statusElement.setAttribute('aria-hidden', 'true');
			}, 1e3);
	}
	renderSearchResults(e) {
		(this.predictiveSearchResults.innerHTML = e),
			this.setAttribute('results', !0),
			this.setLiveRegionResults(),
			this.open();
	}
	setLiveRegionResults() {
		this.removeAttribute('loading'),
			this.setLiveRegionText(
				this.querySelector('[data-predictive-search-live-region-count-value]')
					.textContent
			);
	}
	getResultsMaxHeight() {
		return (
			(this.resultsMaxHeight =
				window.innerHeight -
				document
					.getElementById('shopify-section-header')
					.getBoundingClientRect().bottom),
			this.resultsMaxHeight
		);
	}
	open() {
		(this.predictiveSearchResults.style.maxHeight =
			this.resultsMaxHeight || this.getResultsMaxHeight() + 'px'),
			this.setAttribute('open', !0),
			this.input.setAttribute('aria-expanded', !0);
	}
	close(e = !1) {
		e && ((this.input.value = ''), this.removeAttribute('results'));
		const t = this.querySelector('[aria-selected="true"]');
		t && t.setAttribute('aria-selected', !1),
			this.input.setAttribute('aria-activedescendant', ''),
			this.removeAttribute('open'),
			this.input.setAttribute('aria-expanded', !1),
			(this.resultsMaxHeight = !1),
			this.predictiveSearchResults.removeAttribute('style');
	}
}
customElements.define('predictive-search', PredictiveSearch);
customElements.get('product-form') ||
	customElements.define(
		'product-form',
		class extends HTMLElement {
			constructor() {
				super(),
					(this.form = this.querySelector('form')),
					(this.form.querySelector('[name=id]').disabled = !1),
					this.form.addEventListener('submit', this.onSubmitHandler.bind(this)),
					(this.cartNotification = document.querySelector('cart-notification'));
			}
			onSubmitHandler(e) {
				e.preventDefault();
				const t = this.querySelector('[type="submit"]');
				if (!t.classList.contains('loading')) {
					this.handleErrorMessage(),
						this.cartNotification.setActiveElement(document.activeElement),
						t.setAttribute('aria-disabled', !0),
						t.classList.add('loading'),
						this.querySelector('.loading-overlay__spinner').classList.remove(
							'hidden'
						);
					const r = fetchConfig('javascript');
					(r.headers['X-Requested-With'] = 'XMLHttpRequest'),
						delete r.headers['Content-Type'];
					const s = new FormData(this.form);
					s.append(
						'sections',
						this.cartNotification.getSectionsToRender().map((e) => e.id)
					),
						s.append('sections_url', window.location.pathname),
						(r.body = s),
						fetch('' + routes.cart_add_url, r)
							.then((e) => e.json())
							.then((e) => {
								e.status
									? this.handleErrorMessage(e.description)
									: this.cartNotification.renderContents(e);
							})
							.catch((e) => {
								console.error(e);
							})
							.finally(() => {
								t.classList.remove('loading'),
									t.removeAttribute('aria-disabled'),
									this.querySelector('.loading-overlay__spinner').classList.add(
										'hidden'
									);
							});
				}
			}
			handleErrorMessage(e = !1) {
				(this.errorMessageWrapper =
					this.errorMessageWrapper ||
					this.querySelector('.product-form__error-message-wrapper')),
					(this.errorMessage =
						this.errorMessage ||
						this.errorMessageWrapper.querySelector(
							'.product-form__error-message'
						)),
					this.errorMessageWrapper.toggleAttribute('hidden', !e),
					e && (this.errorMessage.textContent = e);
			}
		}
	);
customElements.get('product-model') ||
	customElements.define(
		'product-model',
		class extends DeferredMedia {
			constructor() {
				super();
			}
			loadContent() {
				super.loadContent(),
					Shopify.loadFeatures([
						{
							name: 'model-viewer-ui',
							version: '1.0',
							onLoad: this.setupModelViewerUI.bind(this),
						},
					]);
			}
			setupModelViewerUI(e) {
				e ||
					(this.modelViewerUI = new Shopify.ModelViewerUI(
						this.querySelector('model-viewer')
					));
			}
		}
	),
	(window.ProductModel = {
		loadShopifyXR() {
			Shopify.loadFeatures([
				{
					name: 'shopify-xr',
					version: '1.0',
					onLoad: this.setupShopifyXR.bind(this),
				},
			]);
		},
		setupShopifyXR(e) {
			e ||
				(window.ShopifyXR
					? (document.querySelectorAll('[id^="ProductJSON-"]').forEach((e) => {
							window.ShopifyXR.addModels(JSON.parse(e.textContent)), e.remove();
					  }),
					  window.ShopifyXR.setupXRElements())
					: document.addEventListener('shopify_xr_initialized', () =>
							this.setupShopifyXR()
					  ));
		},
	}),
	window.addEventListener('DOMContentLoaded', () => {
		Shopify.designMode &&
			document
				.querySelectorAll('[data-shopify-xr-hidden]')
				.forEach((e) => e.classList.add('hidden')),
			window.ProductModel && window.ProductModel.loadShopifyXR();
	});
customElements.get('share-button') ||
	customElements.define(
		'share-button',
		class extends DetailsDisclosure {
			constructor() {
				super(),
					(this.elements = {
						shareButton: this.querySelector('button'),
						shareSummary: this.querySelector('summary'),
						closeButton: this.querySelector('.share-button__close'),
						successMessage: this.querySelector('[id^="ShareMessage"]'),
						urlInput: this.querySelector('input'),
					}),
					(this.urlToShare = this.elements.urlInput
						? this.elements.urlInput.value
						: document.location.href),
					navigator.share
						? (this.mainDetailsToggle.setAttribute('hidden', ''),
						  this.elements.shareButton.classList.remove('hidden'),
						  this.elements.shareButton.addEventListener('click', () => {
								navigator.share({
									url: this.urlToShare,
									title: document.title,
								});
						  }))
						: (this.addAccessibilityAttributes(),
						  this.mainDetailsToggle.addEventListener(
								'toggle',
								this.toggleDetails.bind(this)
						  ),
						  this.mainDetailsToggle
								.querySelector('.share-button__copy')
								.addEventListener('click', this.copyToClipboard.bind(this)),
						  this.mainDetailsToggle
								.querySelector('.share-button__close')
								.addEventListener('click', this.close.bind(this)));
			}
			addAccessibilityAttributes() {
				this.elements.shareSummary.setAttribute('role', 'button'),
					this.elements.shareSummary.setAttribute('aria-expanded', 'false'),
					this.elements.shareSummary.setAttribute(
						'aria-controls',
						this.elements.shareSummary.nextElementSibling.id
					);
			}
			toggleDetails() {
				this.mainDetailsToggle.open ||
					(this.elements.successMessage.classList.add('hidden'),
					(this.elements.successMessage.textContent = ''),
					this.elements.closeButton.classList.add('hidden'),
					this.elements.shareSummary.focus()),
					this.elements.shareSummary.setAttribute(
						'aria-expanded',
						this.mainDetailsToggle.open
					);
			}
			copyToClipboard() {
				navigator.clipboard.writeText(this.elements.urlInput.value).then(() => {
					this.elements.successMessage.classList.remove('hidden'),
						(this.elements.successMessage.textContent =
							window.accessibilityStrings.shareSuccess),
						this.elements.closeButton.classList.remove('hidden'),
						this.elements.closeButton.focus();
				});
			}
		}
	);

/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
(function (global, factory) {
	'use strict';

	if (typeof module === 'object' && typeof module.exports === 'object') {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document
			? factory(global, true)
			: function (w) {
					if (!w.document) {
						throw new Error('jQuery requires a window with a document');
					}
					return factory(w);
			  };
	} else {
		factory(global);
	}

	// Pass this if window is not defined yet
})(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {
	// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
	// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
	// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
	// enough that all such attempts are guarded in a try block.
	'use strict';

	var arr = [];

	var getProto = Object.getPrototypeOf;

	var slice = arr.slice;

	var flat = arr.flat
		? function (array) {
				return arr.flat.call(array);
		  }
		: function (array) {
				return arr.concat.apply([], array);
		  };

	var push = arr.push;

	var indexOf = arr.indexOf;

	var class2type = {};

	var toString = class2type.toString;

	var hasOwn = class2type.hasOwnProperty;

	var fnToString = hasOwn.toString;

	var ObjectFunctionString = fnToString.call(Object);

	var support = {};

	var isFunction = function isFunction(obj) {
		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return (
			typeof obj === 'function' &&
			typeof obj.nodeType !== 'number' &&
			typeof obj.item !== 'function'
		);
	};

	var isWindow = function isWindow(obj) {
		return obj != null && obj === obj.window;
	};

	var document = window.document;

	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true,
	};

	function DOMEval(code, node, doc) {
		doc = doc || document;

		var i,
			val,
			script = doc.createElement('script');

		script.text = code;
		if (node) {
			for (i in preservedScriptAttributes) {
				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[i] || (node.getAttribute && node.getAttribute(i));
				if (val) {
					script.setAttribute(i, val);
				}
			}
		}
		doc.head.appendChild(script).parentNode.removeChild(script);
	}

	function toType(obj) {
		if (obj == null) {
			return obj + '';
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === 'object' || typeof obj === 'function'
			? class2type[toString.call(obj)] || 'object'
			: typeof obj;
	}
	/* global Symbol */
	// Defining this global in .eslintrc.json would create a danger of using the global
	// unguarded in another place, it seems safer to define global only for this module

	var version = '3.6.0',
		// Define a local copy of jQuery
		jQuery = function (selector, context) {
			// The jQuery object is actually just the init constructor 'enhanced'
			// Need init if jQuery is called (just allow error to be thrown if not included)
			return new jQuery.fn.init(selector, context);
		};

	jQuery.fn = jQuery.prototype = {
		// The current version of jQuery being used
		jquery: version,

		constructor: jQuery,

		// The default length of a jQuery object is 0
		length: 0,

		toArray: function () {
			return slice.call(this);
		},

		// Get the Nth element in the matched element set OR
		// Get the whole matched element set as a clean array
		get: function (num) {
			// Return all the elements in a clean array
			if (num == null) {
				return slice.call(this);
			}

			// Return just the one element from the set
			return num < 0 ? this[num + this.length] : this[num];
		},

		// Take an array of elements and push it onto the stack
		// (returning the new matched element set)
		pushStack: function (elems) {
			// Build a new jQuery matched element set
			var ret = jQuery.merge(this.constructor(), elems);

			// Add the old object onto the stack (as a reference)
			ret.prevObject = this;

			// Return the newly-formed element set
			return ret;
		},

		// Execute a callback for every element in the matched set.
		each: function (callback) {
			return jQuery.each(this, callback);
		},

		map: function (callback) {
			return this.pushStack(
				jQuery.map(this, function (elem, i) {
					return callback.call(elem, i, elem);
				})
			);
		},

		slice: function () {
			return this.pushStack(slice.apply(this, arguments));
		},

		first: function () {
			return this.eq(0);
		},

		last: function () {
			return this.eq(-1);
		},

		even: function () {
			return this.pushStack(
				jQuery.grep(this, function (_elem, i) {
					return (i + 1) % 2;
				})
			);
		},

		odd: function () {
			return this.pushStack(
				jQuery.grep(this, function (_elem, i) {
					return i % 2;
				})
			);
		},

		eq: function (i) {
			var len = this.length,
				j = +i + (i < 0 ? len : 0);
			return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
		},

		end: function () {
			return this.prevObject || this.constructor();
		},

		// For internal use only.
		// Behaves like an Array's method, not like a jQuery method.
		push: push,
		sort: arr.sort,
		splice: arr.splice,
	};

	jQuery.extend = jQuery.fn.extend = function () {
		var options,
			name,
			src,
			copy,
			copyIsArray,
			clone,
			target = arguments[0] || {},
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if (typeof target === 'boolean') {
			deep = target;

			// Skip the boolean and the target
			target = arguments[i] || {};
			i++;
		}

		// Handle case when target is a string or something (possible in deep copy)
		if (typeof target !== 'object' && !isFunction(target)) {
			target = {};
		}

		// Extend jQuery itself if only one argument is passed
		if (i === length) {
			target = this;
			i--;
		}

		for (; i < length; i++) {
			// Only deal with non-null/undefined values
			if ((options = arguments[i]) != null) {
				// Extend the base object
				for (name in options) {
					copy = options[name];

					// Prevent Object.prototype pollution
					// Prevent never-ending loop
					if (name === '__proto__' || target === copy) {
						continue;
					}

					// Recurse if we're merging plain objects or arrays
					if (
						deep &&
						copy &&
						(jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))
					) {
						src = target[name];

						// Ensure proper type for the source value
						if (copyIsArray && !Array.isArray(src)) {
							clone = [];
						} else if (!copyIsArray && !jQuery.isPlainObject(src)) {
							clone = {};
						} else {
							clone = src;
						}
						copyIsArray = false;

						// Never move original objects, clone them
						target[name] = jQuery.extend(deep, clone, copy);

						// Don't bring in undefined values
					} else if (copy !== undefined) {
						target[name] = copy;
					}
				}
			}
		}

		// Return the modified object
		return target;
	};

	jQuery.extend({
		// Unique for each copy of jQuery on the page
		expando: 'jQuery' + (version + Math.random()).replace(/\D/g, ''),

		// Assume jQuery is ready without the ready module
		isReady: true,

		error: function (msg) {
			throw new Error(msg);
		},

		noop: function () {},

		isPlainObject: function (obj) {
			var proto, Ctor;

			// Detect obvious negatives
			// Use toString instead of jQuery.type to catch host objects
			if (!obj || toString.call(obj) !== '[object Object]') {
				return false;
			}

			proto = getProto(obj);

			// Objects with no prototype (e.g., `Object.create( null )`) are plain
			if (!proto) {
				return true;
			}

			// Objects with prototype are plain iff they were constructed by a global Object function
			Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;
			return (
				typeof Ctor === 'function' &&
				fnToString.call(Ctor) === ObjectFunctionString
			);
		},

		isEmptyObject: function (obj) {
			var name;

			for (name in obj) {
				return false;
			}
			return true;
		},

		// Evaluates a script in a provided context; falls back to the global one
		// if not specified.
		globalEval: function (code, options, doc) {
			DOMEval(code, { nonce: options && options.nonce }, doc);
		},

		each: function (obj, callback) {
			var length,
				i = 0;

			if (isArrayLike(obj)) {
				length = obj.length;
				for (; i < length; i++) {
					if (callback.call(obj[i], i, obj[i]) === false) {
						break;
					}
				}
			} else {
				for (i in obj) {
					if (callback.call(obj[i], i, obj[i]) === false) {
						break;
					}
				}
			}

			return obj;
		},

		// results is for internal usage only
		makeArray: function (arr, results) {
			var ret = results || [];

			if (arr != null) {
				if (isArrayLike(Object(arr))) {
					jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);
				} else {
					push.call(ret, arr);
				}
			}

			return ret;
		},

		inArray: function (elem, arr, i) {
			return arr == null ? -1 : indexOf.call(arr, elem, i);
		},

		// Support: Android <=4.0 only, PhantomJS 1 only
		// push.apply(_, arraylike) throws on ancient WebKit
		merge: function (first, second) {
			var len = +second.length,
				j = 0,
				i = first.length;

			for (; j < len; j++) {
				first[i++] = second[j];
			}

			first.length = i;

			return first;
		},

		grep: function (elems, callback, invert) {
			var callbackInverse,
				matches = [],
				i = 0,
				length = elems.length,
				callbackExpect = !invert;

			// Go through the array, only saving the items
			// that pass the validator function
			for (; i < length; i++) {
				callbackInverse = !callback(elems[i], i);
				if (callbackInverse !== callbackExpect) {
					matches.push(elems[i]);
				}
			}

			return matches;
		},

		// arg is for internal usage only
		map: function (elems, callback, arg) {
			var length,
				value,
				i = 0,
				ret = [];

			// Go through the array, translating each of the items to their new values
			if (isArrayLike(elems)) {
				length = elems.length;
				for (; i < length; i++) {
					value = callback(elems[i], i, arg);

					if (value != null) {
						ret.push(value);
					}
				}

				// Go through every key on the object,
			} else {
				for (i in elems) {
					value = callback(elems[i], i, arg);

					if (value != null) {
						ret.push(value);
					}
				}
			}

			// Flatten any nested arrays
			return flat(ret);
		},

		// A global GUID counter for objects
		guid: 1,

		// jQuery.support is not used in Core but other projects attach their
		// properties to it so it needs to exist.
		support: support,
	});

	if (typeof Symbol === 'function') {
		jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
	}

	// Populate the class2type map
	jQuery.each(
		'Boolean Number String Function Array Date RegExp Object Error Symbol'.split(
			' '
		),
		function (_i, name) {
			class2type['[object ' + name + ']'] = name.toLowerCase();
		}
	);

	function isArrayLike(obj) {
		// Support: real iOS 8.2 only (not reproducible in simulator)
		// `in` check used to prevent JIT error (gh-2145)
		// hasOwn isn't used here due to false negatives
		// regarding Nodelist length in IE
		var length = !!obj && 'length' in obj && obj.length,
			type = toType(obj);

		if (isFunction(obj) || isWindow(obj)) {
			return false;
		}

		return (
			type === 'array' ||
			length === 0 ||
			(typeof length === 'number' && length > 0 && length - 1 in obj)
		);
	}
	var Sizzle =
		/*!
		 * Sizzle CSS Selector Engine v2.3.6
		 * https://sizzlejs.com/
		 *
		 * Copyright JS Foundation and other contributors
		 * Released under the MIT license
		 * https://js.foundation/
		 *
		 * Date: 2021-02-16
		 */
		(function (window) {
			var i,
				support,
				Expr,
				getText,
				isXML,
				tokenize,
				compile,
				select,
				outermostContext,
				sortInput,
				hasDuplicate,
				// Local document vars
				setDocument,
				document,
				docElem,
				documentIsHTML,
				rbuggyQSA,
				rbuggyMatches,
				matches,
				contains,
				// Instance-specific data
				expando = 'sizzle' + 1 * new Date(),
				preferredDoc = window.document,
				dirruns = 0,
				done = 0,
				classCache = createCache(),
				tokenCache = createCache(),
				compilerCache = createCache(),
				nonnativeSelectorCache = createCache(),
				sortOrder = function (a, b) {
					if (a === b) {
						hasDuplicate = true;
					}
					return 0;
				},
				// Instance methods
				hasOwn = {}.hasOwnProperty,
				arr = [],
				pop = arr.pop,
				pushNative = arr.push,
				push = arr.push,
				slice = arr.slice,
				// Use a stripped-down indexOf as it's faster than native
				// https://jsperf.com/thor-indexof-vs-for/5
				indexOf = function (list, elem) {
					var i = 0,
						len = list.length;
					for (; i < len; i++) {
						if (list[i] === elem) {
							return i;
						}
					}
					return -1;
				},
				booleans =
					'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|' +
					'ismap|loop|multiple|open|readonly|required|scoped',
				// Regular expressions

				// http://www.w3.org/TR/css3-selectors/#whitespace
				whitespace = '[\\x20\\t\\r\\n\\f]',
				// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
				identifier =
					'(?:\\\\[\\da-fA-F]{1,6}' +
					whitespace +
					'?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+',
				// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
				attributes =
					'\\[' +
					whitespace +
					'*(' +
					identifier +
					')(?:' +
					whitespace +
					// Operator (capture 2)
					'*([*^$|!~]?=)' +
					whitespace +
					// "Attribute values must be CSS identifiers [capture 5]
					// or strings [capture 3 or capture 4]"
					'*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' +
					identifier +
					'))|)' +
					whitespace +
					'*\\]',
				pseudos =
					':(' +
					identifier +
					')(?:\\((' +
					// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
					// 1. quoted (capture 3; capture 4 or capture 5)
					'(\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|' +
					// 2. simple (capture 6)
					'((?:\\\\.|[^\\\\()[\\]]|' +
					attributes +
					')*)|' +
					// 3. anything else (capture 2)
					'.*' +
					')\\)|)',
				// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
				rwhitespace = new RegExp(whitespace + '+', 'g'),
				rtrim = new RegExp(
					'^' + whitespace + '+|((?:^|[^\\\\])(?:\\\\.)*)' + whitespace + '+$',
					'g'
				),
				rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'),
				rcombinators = new RegExp(
					'^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'
				),
				rdescend = new RegExp(whitespace + '|>'),
				rpseudo = new RegExp(pseudos),
				ridentifier = new RegExp('^' + identifier + '$'),
				matchExpr = {
					ID: new RegExp('^#(' + identifier + ')'),
					CLASS: new RegExp('^\\.(' + identifier + ')'),
					TAG: new RegExp('^(' + identifier + '|[*])'),
					ATTR: new RegExp('^' + attributes),
					PSEUDO: new RegExp('^' + pseudos),
					CHILD: new RegExp(
						'^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' +
							whitespace +
							'*(even|odd|(([+-]|)(\\d*)n|)' +
							whitespace +
							'*(?:([+-]|)' +
							whitespace +
							'*(\\d+)|))' +
							whitespace +
							'*\\)|)',
						'i'
					),
					bool: new RegExp('^(?:' + booleans + ')$', 'i'),

					// For use in libraries implementing .is()
					// We use this for POS matching in `select`
					needsContext: new RegExp(
						'^' +
							whitespace +
							'*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' +
							whitespace +
							'*((?:-\\d)?\\d*)' +
							whitespace +
							'*\\)|)(?=[^-]|$)',
						'i'
					),
				},
				rhtml = /HTML$/i,
				rinputs = /^(?:input|select|textarea|button)$/i,
				rheader = /^h\d$/i,
				rnative = /^[^{]+\{\s*\[native \w/,
				// Easily-parseable/retrievable ID or TAG or CLASS selectors
				rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
				rsibling = /[+~]/,
				// CSS escapes
				// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
				runescape = new RegExp(
					'\\\\[\\da-fA-F]{1,6}' + whitespace + '?|\\\\([^\\r\\n\\f])',
					'g'
				),
				funescape = function (escape, nonHex) {
					var high = '0x' + escape.slice(1) - 0x10000;

					return nonHex
						? // Strip the backslash prefix from a non-hex escape sequence
						  nonHex
						: // Replace a hexadecimal escape sequence with the encoded Unicode code point
						// Support: IE <=11+
						// For values outside the Basic Multilingual Plane (BMP), manually construct a
						// surrogate pair
						high < 0
						? String.fromCharCode(high + 0x10000)
						: String.fromCharCode(
								(high >> 10) | 0xd800,
								(high & 0x3ff) | 0xdc00
						  );
				},
				// CSS string/identifier serialization
				// https://drafts.csswg.org/cssom/#common-serializing-idioms
				rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
				fcssescape = function (ch, asCodePoint) {
					if (asCodePoint) {
						// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
						if (ch === '\0') {
							return '\uFFFD';
						}

						// Control characters and (dependent upon position) numbers get escaped as code points
						return (
							ch.slice(0, -1) +
							'\\' +
							ch.charCodeAt(ch.length - 1).toString(16) +
							' '
						);
					}

					// Other potentially-special ASCII characters get backslash-escaped
					return '\\' + ch;
				},
				// Used for iframes
				// See setDocument()
				// Removing the function wrapper causes a "Permission Denied"
				// error in IE
				unloadHandler = function () {
					setDocument();
				},
				inDisabledFieldset = addCombinator(
					function (elem) {
						return (
							elem.disabled === true &&
							elem.nodeName.toLowerCase() === 'fieldset'
						);
					},
					{ dir: 'parentNode', next: 'legend' }
				);

			// Optimize for push.apply( _, NodeList )
			try {
				push.apply(
					(arr = slice.call(preferredDoc.childNodes)),
					preferredDoc.childNodes
				);

				// Support: Android<4.0
				// Detect silently failing push.apply
				// eslint-disable-next-line no-unused-expressions
				arr[preferredDoc.childNodes.length].nodeType;
			} catch (e) {
				push = {
					apply: arr.length
						? // Leverage slice if possible
						  function (target, els) {
								pushNative.apply(target, slice.call(els));
						  }
						: // Support: IE<9
						  // Otherwise append directly
						  function (target, els) {
								var j = target.length,
									i = 0;

								// Can't trust NodeList.length
								while ((target[j++] = els[i++])) {}
								target.length = j - 1;
						  },
				};
			}

			function Sizzle(selector, context, results, seed) {
				var m,
					i,
					elem,
					nid,
					match,
					groups,
					newSelector,
					newContext = context && context.ownerDocument,
					// nodeType defaults to 9, since context defaults to document
					nodeType = context ? context.nodeType : 9;

				results = results || [];

				// Return early from calls with invalid selector or context
				if (
					typeof selector !== 'string' ||
					!selector ||
					(nodeType !== 1 && nodeType !== 9 && nodeType !== 11)
				) {
					return results;
				}

				// Try to shortcut find operations (as opposed to filters) in HTML documents
				if (!seed) {
					setDocument(context);
					context = context || document;

					if (documentIsHTML) {
						// If the selector is sufficiently simple, try using a "get*By*" DOM method
						// (excepting DocumentFragment context, where the methods don't exist)
						if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
							// ID selector
							if ((m = match[1])) {
								// Document context
								if (nodeType === 9) {
									if ((elem = context.getElementById(m))) {
										// Support: IE, Opera, Webkit
										// TODO: identify versions
										// getElementById can match elements by name instead of ID
										if (elem.id === m) {
											results.push(elem);
											return results;
										}
									} else {
										return results;
									}

									// Element context
								} else {
									// Support: IE, Opera, Webkit
									// TODO: identify versions
									// getElementById can match elements by name instead of ID
									if (
										newContext &&
										(elem = newContext.getElementById(m)) &&
										contains(context, elem) &&
										elem.id === m
									) {
										results.push(elem);
										return results;
									}
								}

								// Type selector
							} else if (match[2]) {
								push.apply(results, context.getElementsByTagName(selector));
								return results;

								// Class selector
							} else if (
								(m = match[3]) &&
								support.getElementsByClassName &&
								context.getElementsByClassName
							) {
								push.apply(results, context.getElementsByClassName(m));
								return results;
							}
						}

						// Take advantage of querySelectorAll
						if (
							support.qsa &&
							!nonnativeSelectorCache[selector + ' '] &&
							(!rbuggyQSA || !rbuggyQSA.test(selector)) &&
							// Support: IE 8 only
							// Exclude object elements
							(nodeType !== 1 || context.nodeName.toLowerCase() !== 'object')
						) {
							newSelector = selector;
							newContext = context;

							// qSA considers elements outside a scoping root when evaluating child or
							// descendant combinators, which is not what we want.
							// In such cases, we work around the behavior by prefixing every selector in the
							// list with an ID selector referencing the scope context.
							// The technique has to be used as well when a leading combinator is used
							// as such selectors are not recognized by querySelectorAll.
							// Thanks to Andrew Dupont for this technique.
							if (
								nodeType === 1 &&
								(rdescend.test(selector) || rcombinators.test(selector))
							) {
								// Expand context for sibling selectors
								newContext =
									(rsibling.test(selector) &&
										testContext(context.parentNode)) ||
									context;

								// We can use :scope instead of the ID hack if the browser
								// supports it & if we're not changing the context.
								if (newContext !== context || !support.scope) {
									// Capture the context ID, setting it first if necessary
									if ((nid = context.getAttribute('id'))) {
										nid = nid.replace(rcssescape, fcssescape);
									} else {
										context.setAttribute('id', (nid = expando));
									}
								}

								// Prefix every selector in the list
								groups = tokenize(selector);
								i = groups.length;
								while (i--) {
									groups[i] =
										(nid ? '#' + nid : ':scope') + ' ' + toSelector(groups[i]);
								}
								newSelector = groups.join(',');
							}

							try {
								push.apply(results, newContext.querySelectorAll(newSelector));
								return results;
							} catch (qsaError) {
								nonnativeSelectorCache(selector, true);
							} finally {
								if (nid === expando) {
									context.removeAttribute('id');
								}
							}
						}
					}
				}

				// All others
				return select(selector.replace(rtrim, '$1'), context, results, seed);
			}

			/**
			 * Create key-value caches of limited size
			 * @returns {function(string, object)} Returns the Object data after storing it on itself with
			 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
			 *	deleting the oldest entry
			 */
			function createCache() {
				var keys = [];

				function cache(key, value) {
					// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
					if (keys.push(key + ' ') > Expr.cacheLength) {
						// Only keep the most recent entries
						delete cache[keys.shift()];
					}
					return (cache[key + ' '] = value);
				}
				return cache;
			}

			/**
			 * Mark a function for special use by Sizzle
			 * @param {Function} fn The function to mark
			 */
			function markFunction(fn) {
				fn[expando] = true;
				return fn;
			}

			/**
			 * Support testing using an element
			 * @param {Function} fn Passed the created element and returns a boolean result
			 */
			function assert(fn) {
				var el = document.createElement('fieldset');

				try {
					return !!fn(el);
				} catch (e) {
					return false;
				} finally {
					// Remove from its parent by default
					if (el.parentNode) {
						el.parentNode.removeChild(el);
					}

					// release memory in IE
					el = null;
				}
			}

			/**
			 * Adds the same handler for all of the specified attrs
			 * @param {String} attrs Pipe-separated list of attributes
			 * @param {Function} handler The method that will be applied
			 */
			function addHandle(attrs, handler) {
				var arr = attrs.split('|'),
					i = arr.length;

				while (i--) {
					Expr.attrHandle[arr[i]] = handler;
				}
			}

			/**
			 * Checks document order of two siblings
			 * @param {Element} a
			 * @param {Element} b
			 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
			 */
			function siblingCheck(a, b) {
				var cur = b && a,
					diff =
						cur &&
						a.nodeType === 1 &&
						b.nodeType === 1 &&
						a.sourceIndex - b.sourceIndex;

				// Use IE sourceIndex if available on both nodes
				if (diff) {
					return diff;
				}

				// Check if b follows a
				if (cur) {
					while ((cur = cur.nextSibling)) {
						if (cur === b) {
							return -1;
						}
					}
				}

				return a ? 1 : -1;
			}

			/**
			 * Returns a function to use in pseudos for input types
			 * @param {String} type
			 */
			function createInputPseudo(type) {
				return function (elem) {
					var name = elem.nodeName.toLowerCase();
					return name === 'input' && elem.type === type;
				};
			}

			/**
			 * Returns a function to use in pseudos for buttons
			 * @param {String} type
			 */
			function createButtonPseudo(type) {
				return function (elem) {
					var name = elem.nodeName.toLowerCase();
					return (name === 'input' || name === 'button') && elem.type === type;
				};
			}

			/**
			 * Returns a function to use in pseudos for :enabled/:disabled
			 * @param {Boolean} disabled true for :disabled; false for :enabled
			 */
			function createDisabledPseudo(disabled) {
				// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
				return function (elem) {
					// Only certain elements can match :enabled or :disabled
					// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
					// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
					if ('form' in elem) {
						// Check for inherited disabledness on relevant non-disabled elements:
						// * listed form-associated elements in a disabled fieldset
						//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
						//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
						// * option elements in a disabled optgroup
						//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
						// All such elements have a "form" property.
						if (elem.parentNode && elem.disabled === false) {
							// Option elements defer to a parent optgroup if present
							if ('label' in elem) {
								if ('label' in elem.parentNode) {
									return elem.parentNode.disabled === disabled;
								} else {
									return elem.disabled === disabled;
								}
							}

							// Support: IE 6 - 11
							// Use the isDisabled shortcut property to check for disabled fieldset ancestors
							return (
								elem.isDisabled === disabled ||
								// Where there is no isDisabled, check manually
								/* jshint -W018 */
								(elem.isDisabled !== !disabled &&
									inDisabledFieldset(elem) === disabled)
							);
						}

						return elem.disabled === disabled;

						// Try to winnow out elements that can't be disabled before trusting the disabled property.
						// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
						// even exist on them, let alone have a boolean value.
					} else if ('label' in elem) {
						return elem.disabled === disabled;
					}

					// Remaining elements are neither :enabled nor :disabled
					return false;
				};
			}

			/**
			 * Returns a function to use in pseudos for positionals
			 * @param {Function} fn
			 */
			function createPositionalPseudo(fn) {
				return markFunction(function (argument) {
					argument = +argument;
					return markFunction(function (seed, matches) {
						var j,
							matchIndexes = fn([], seed.length, argument),
							i = matchIndexes.length;

						// Match elements found at the specified indexes
						while (i--) {
							if (seed[(j = matchIndexes[i])]) {
								seed[j] = !(matches[j] = seed[j]);
							}
						}
					});
				});
			}

			/**
			 * Checks a node for validity as a Sizzle context
			 * @param {Element|Object=} context
			 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
			 */
			function testContext(context) {
				return (
					context &&
					typeof context.getElementsByTagName !== 'undefined' &&
					context
				);
			}

			// Expose support vars for convenience
			support = Sizzle.support = {};

			/**
			 * Detects XML nodes
			 * @param {Element|Object} elem An element or a document
			 * @returns {Boolean} True iff elem is a non-HTML XML node
			 */
			isXML = Sizzle.isXML = function (elem) {
				var namespace = elem && elem.namespaceURI,
					docElem = elem && (elem.ownerDocument || elem).documentElement;

				// Support: IE <=8
				// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
				// https://bugs.jquery.com/ticket/4833
				return !rhtml.test(
					namespace || (docElem && docElem.nodeName) || 'HTML'
				);
			};

			/**
			 * Sets document-related variables once based on the current document
			 * @param {Element|Object} [doc] An element or document object to use to set the document
			 * @returns {Object} Returns the current document
			 */
			setDocument = Sizzle.setDocument = function (node) {
				var hasCompare,
					subWindow,
					doc = node ? node.ownerDocument || node : preferredDoc;

				// Return early if doc is invalid or already selected
				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {
					return document;
				}

				// Update global variables
				document = doc;
				docElem = document.documentElement;
				documentIsHTML = !isXML(document);

				// Support: IE 9 - 11+, Edge 12 - 18+
				// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				if (
					preferredDoc != document &&
					(subWindow = document.defaultView) &&
					subWindow.top !== subWindow
				) {
					// Support: IE 11, Edge
					if (subWindow.addEventListener) {
						subWindow.addEventListener('unload', unloadHandler, false);

						// Support: IE 9 - 10 only
					} else if (subWindow.attachEvent) {
						subWindow.attachEvent('onunload', unloadHandler);
					}
				}

				// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
				// Safari 4 - 5 only, Opera <=11.6 - 12.x only
				// IE/Edge & older browsers don't support the :scope pseudo-class.
				// Support: Safari 6.0 only
				// Safari 6.0 supports :scope but it's an alias of :root there.
				support.scope = assert(function (el) {
					docElem.appendChild(el).appendChild(document.createElement('div'));
					return (
						typeof el.querySelectorAll !== 'undefined' &&
						!el.querySelectorAll(':scope fieldset div').length
					);
				});

				/* Attributes
	---------------------------------------------------------------------- */

				// Support: IE<8
				// Verify that getAttribute really returns attributes and not properties
				// (excepting IE8 booleans)
				support.attributes = assert(function (el) {
					el.className = 'i';
					return !el.getAttribute('className');
				});

				/* getElement(s)By*
	---------------------------------------------------------------------- */

				// Check if getElementsByTagName("*") returns only elements
				support.getElementsByTagName = assert(function (el) {
					el.appendChild(document.createComment(''));
					return !el.getElementsByTagName('*').length;
				});

				// Support: IE<9
				support.getElementsByClassName = rnative.test(
					document.getElementsByClassName
				);

				// Support: IE<10
				// Check if getElementById returns elements by name
				// The broken getElementById methods don't pick up programmatically-set names,
				// so use a roundabout getElementsByName test
				support.getById = assert(function (el) {
					docElem.appendChild(el).id = expando;
					return (
						!document.getElementsByName ||
						!document.getElementsByName(expando).length
					);
				});

				// ID filter and find
				if (support.getById) {
					Expr.filter['ID'] = function (id) {
						var attrId = id.replace(runescape, funescape);
						return function (elem) {
							return elem.getAttribute('id') === attrId;
						};
					};
					Expr.find['ID'] = function (id, context) {
						if (
							typeof context.getElementById !== 'undefined' &&
							documentIsHTML
						) {
							var elem = context.getElementById(id);
							return elem ? [elem] : [];
						}
					};
				} else {
					Expr.filter['ID'] = function (id) {
						var attrId = id.replace(runescape, funescape);
						return function (elem) {
							var node =
								typeof elem.getAttributeNode !== 'undefined' &&
								elem.getAttributeNode('id');
							return node && node.value === attrId;
						};
					};

					// Support: IE 6 - 7 only
					// getElementById is not reliable as a find shortcut
					Expr.find['ID'] = function (id, context) {
						if (
							typeof context.getElementById !== 'undefined' &&
							documentIsHTML
						) {
							var node,
								i,
								elems,
								elem = context.getElementById(id);

							if (elem) {
								// Verify the id attribute
								node = elem.getAttributeNode('id');
								if (node && node.value === id) {
									return [elem];
								}

								// Fall back on getElementsByName
								elems = context.getElementsByName(id);
								i = 0;
								while ((elem = elems[i++])) {
									node = elem.getAttributeNode('id');
									if (node && node.value === id) {
										return [elem];
									}
								}
							}

							return [];
						}
					};
				}

				// Tag
				Expr.find['TAG'] = support.getElementsByTagName
					? function (tag, context) {
							if (typeof context.getElementsByTagName !== 'undefined') {
								return context.getElementsByTagName(tag);

								// DocumentFragment nodes don't have gEBTN
							} else if (support.qsa) {
								return context.querySelectorAll(tag);
							}
					  }
					: function (tag, context) {
							var elem,
								tmp = [],
								i = 0,
								// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
								results = context.getElementsByTagName(tag);

							// Filter out possible comments
							if (tag === '*') {
								while ((elem = results[i++])) {
									if (elem.nodeType === 1) {
										tmp.push(elem);
									}
								}

								return tmp;
							}
							return results;
					  };

				// Class
				Expr.find['CLASS'] =
					support.getElementsByClassName &&
					function (className, context) {
						if (
							typeof context.getElementsByClassName !== 'undefined' &&
							documentIsHTML
						) {
							return context.getElementsByClassName(className);
						}
					};

				/* QSA/matchesSelector
	---------------------------------------------------------------------- */

				// QSA and matchesSelector support

				// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
				rbuggyMatches = [];

				// qSa(:focus) reports false when true (Chrome 21)
				// We allow this because of a bug in IE8/9 that throws an error
				// whenever `document.activeElement` is accessed on an iframe
				// So, we allow :focus to pass through QSA all the time to avoid the IE error
				// See https://bugs.jquery.com/ticket/13378
				rbuggyQSA = [];

				if ((support.qsa = rnative.test(document.querySelectorAll))) {
					// Build QSA regex
					// Regex strategy adopted from Diego Perini
					assert(function (el) {
						var input;

						// Select is set to empty string on purpose
						// This is to test IE's treatment of not explicitly
						// setting a boolean content attribute,
						// since its presence should be enough
						// https://bugs.jquery.com/ticket/12359
						docElem.appendChild(el).innerHTML =
							"<a id='" +
							expando +
							"'></a>" +
							"<select id='" +
							expando +
							"-\r\\' msallowcapture=''>" +
							"<option selected=''></option></select>";

						// Support: IE8, Opera 11-12.16
						// Nothing should be selected when empty strings follow ^= or $= or *=
						// The test attribute must be unknown in Opera but "safe" for WinRT
						// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
						if (el.querySelectorAll("[msallowcapture^='']").length) {
							rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\'\'|"")');
						}

						// Support: IE8
						// Boolean attributes and "value" are not treated correctly
						if (!el.querySelectorAll('[selected]').length) {
							rbuggyQSA.push(
								'\\[' + whitespace + '*(?:value|' + booleans + ')'
							);
						}

						// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
						if (!el.querySelectorAll('[id~=' + expando + '-]').length) {
							rbuggyQSA.push('~=');
						}

						// Support: IE 11+, Edge 15 - 18+
						// IE 11/Edge don't find elements on a `[name='']` query in some cases.
						// Adding a temporary attribute to the document before the selection works
						// around the issue.
						// Interestingly, IE 10 & older don't seem to have the issue.
						input = document.createElement('input');
						input.setAttribute('name', '');
						el.appendChild(input);
						if (!el.querySelectorAll("[name='']").length) {
							rbuggyQSA.push(
								'\\[' +
									whitespace +
									'*name' +
									whitespace +
									'*=' +
									whitespace +
									'*(?:\'\'|"")'
							);
						}

						// Webkit/Opera - :checked should return selected option elements
						// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
						// IE8 throws error here and will not see later tests
						if (!el.querySelectorAll(':checked').length) {
							rbuggyQSA.push(':checked');
						}

						// Support: Safari 8+, iOS 8+
						// https://bugs.webkit.org/show_bug.cgi?id=136851
						// In-page `selector#id sibling-combinator selector` fails
						if (!el.querySelectorAll('a#' + expando + '+*').length) {
							rbuggyQSA.push('.#.+[+~]');
						}

						// Support: Firefox <=3.6 - 5 only
						// Old Firefox doesn't throw on a badly-escaped identifier.
						el.querySelectorAll('\\\f');
						rbuggyQSA.push('[\\r\\n\\f]');
					});

					assert(function (el) {
						el.innerHTML =
							"<a href='' disabled='disabled'></a>" +
							"<select disabled='disabled'><option/></select>";

						// Support: Windows 8 Native Apps
						// The type and name attributes are restricted during .innerHTML assignment
						var input = document.createElement('input');
						input.setAttribute('type', 'hidden');
						el.appendChild(input).setAttribute('name', 'D');

						// Support: IE8
						// Enforce case-sensitivity of name attribute
						if (el.querySelectorAll('[name=d]').length) {
							rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');
						}

						// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
						// IE8 throws error here and will not see later tests
						if (el.querySelectorAll(':enabled').length !== 2) {
							rbuggyQSA.push(':enabled', ':disabled');
						}

						// Support: IE9-11+
						// IE's :disabled selector does not pick up the children of disabled fieldsets
						docElem.appendChild(el).disabled = true;
						if (el.querySelectorAll(':disabled').length !== 2) {
							rbuggyQSA.push(':enabled', ':disabled');
						}

						// Support: Opera 10 - 11 only
						// Opera 10-11 does not throw on post-comma invalid pseudos
						el.querySelectorAll('*,:x');
						rbuggyQSA.push(',.*:');
					});
				}

				if (
					(support.matchesSelector = rnative.test(
						(matches =
							docElem.matches ||
							docElem.webkitMatchesSelector ||
							docElem.mozMatchesSelector ||
							docElem.oMatchesSelector ||
							docElem.msMatchesSelector)
					))
				) {
					assert(function (el) {
						// Check to see if it's possible to do matchesSelector
						// on a disconnected node (IE 9)
						support.disconnectedMatch = matches.call(el, '*');

						// This should fail with an exception
						// Gecko does not error, returns false instead
						matches.call(el, "[s!='']:x");
						rbuggyMatches.push('!=', pseudos);
					});
				}

				rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));
				rbuggyMatches =
					rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));

				/* Contains
	---------------------------------------------------------------------- */
				hasCompare = rnative.test(docElem.compareDocumentPosition);

				// Element contains another
				// Purposefully self-exclusive
				// As in, an element does not contain itself
				contains =
					hasCompare || rnative.test(docElem.contains)
						? function (a, b) {
								var adown = a.nodeType === 9 ? a.documentElement : a,
									bup = b && b.parentNode;
								return (
									a === bup ||
									!!(
										bup &&
										bup.nodeType === 1 &&
										(adown.contains
											? adown.contains(bup)
											: a.compareDocumentPosition &&
											  a.compareDocumentPosition(bup) & 16)
									)
								);
						  }
						: function (a, b) {
								if (b) {
									while ((b = b.parentNode)) {
										if (b === a) {
											return true;
										}
									}
								}
								return false;
						  };

				/* Sorting
	---------------------------------------------------------------------- */

				// Document order sorting
				sortOrder = hasCompare
					? function (a, b) {
							// Flag for duplicate removal
							if (a === b) {
								hasDuplicate = true;
								return 0;
							}

							// Sort on method existence if only one input has compareDocumentPosition
							var compare =
								!a.compareDocumentPosition - !b.compareDocumentPosition;
							if (compare) {
								return compare;
							}

							// Calculate position if both inputs belong to the same document
							// Support: IE 11+, Edge 17 - 18+
							// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
							// two documents; shallow comparisons work.
							// eslint-disable-next-line eqeqeq
							compare =
								(a.ownerDocument || a) == (b.ownerDocument || b)
									? a.compareDocumentPosition(b)
									: // Otherwise we know they are disconnected
									  1;

							// Disconnected nodes
							if (
								compare & 1 ||
								(!support.sortDetached &&
									b.compareDocumentPosition(a) === compare)
							) {
								// Choose the first element that is related to our preferred document
								// Support: IE 11+, Edge 17 - 18+
								// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
								// two documents; shallow comparisons work.
								// eslint-disable-next-line eqeqeq
								if (
									a == document ||
									(a.ownerDocument == preferredDoc && contains(preferredDoc, a))
								) {
									return -1;
								}

								// Support: IE 11+, Edge 17 - 18+
								// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
								// two documents; shallow comparisons work.
								// eslint-disable-next-line eqeqeq
								if (
									b == document ||
									(b.ownerDocument == preferredDoc && contains(preferredDoc, b))
								) {
									return 1;
								}

								// Maintain original order
								return sortInput
									? indexOf(sortInput, a) - indexOf(sortInput, b)
									: 0;
							}

							return compare & 4 ? -1 : 1;
					  }
					: function (a, b) {
							// Exit early if the nodes are identical
							if (a === b) {
								hasDuplicate = true;
								return 0;
							}

							var cur,
								i = 0,
								aup = a.parentNode,
								bup = b.parentNode,
								ap = [a],
								bp = [b];

							// Parentless nodes are either documents or disconnected
							if (!aup || !bup) {
								// Support: IE 11+, Edge 17 - 18+
								// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
								// two documents; shallow comparisons work.
								/* eslint-disable eqeqeq */
								return a == document
									? -1
									: b == document
									? 1
									: /* eslint-enable eqeqeq */
									aup
									? -1
									: bup
									? 1
									: sortInput
									? indexOf(sortInput, a) - indexOf(sortInput, b)
									: 0;

								// If the nodes are siblings, we can do a quick check
							} else if (aup === bup) {
								return siblingCheck(a, b);
							}

							// Otherwise we need full lists of their ancestors for comparison
							cur = a;
							while ((cur = cur.parentNode)) {
								ap.unshift(cur);
							}
							cur = b;
							while ((cur = cur.parentNode)) {
								bp.unshift(cur);
							}

							// Walk down the tree looking for a discrepancy
							while (ap[i] === bp[i]) {
								i++;
							}

							return i
								? // Do a sibling check if the nodes have a common ancestor
								  siblingCheck(ap[i], bp[i])
								: // Otherwise nodes in our document sort first
								// Support: IE 11+, Edge 17 - 18+
								// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
								// two documents; shallow comparisons work.
								/* eslint-disable eqeqeq */
								ap[i] == preferredDoc
								? -1
								: bp[i] == preferredDoc
								? 1
								: /* eslint-enable eqeqeq */
								  0;
					  };

				return document;
			};

			Sizzle.matches = function (expr, elements) {
				return Sizzle(expr, null, null, elements);
			};

			Sizzle.matchesSelector = function (elem, expr) {
				setDocument(elem);

				if (
					support.matchesSelector &&
					documentIsHTML &&
					!nonnativeSelectorCache[expr + ' '] &&
					(!rbuggyMatches || !rbuggyMatches.test(expr)) &&
					(!rbuggyQSA || !rbuggyQSA.test(expr))
				) {
					try {
						var ret = matches.call(elem, expr);

						// IE 9's matchesSelector returns false on disconnected nodes
						if (
							ret ||
							support.disconnectedMatch ||
							// As well, disconnected nodes are said to be in a document
							// fragment in IE 9
							(elem.document && elem.document.nodeType !== 11)
						) {
							return ret;
						}
					} catch (e) {
						nonnativeSelectorCache(expr, true);
					}
				}

				return Sizzle(expr, document, null, [elem]).length > 0;
			};

			Sizzle.contains = function (context, elem) {
				// Set document vars if needed
				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				if ((context.ownerDocument || context) != document) {
					setDocument(context);
				}
				return contains(context, elem);
			};

			Sizzle.attr = function (elem, name) {
				// Set document vars if needed
				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				if ((elem.ownerDocument || elem) != document) {
					setDocument(elem);
				}

				var fn = Expr.attrHandle[name.toLowerCase()],
					// Don't get fooled by Object.prototype properties (jQuery #13807)
					val =
						fn && hasOwn.call(Expr.attrHandle, name.toLowerCase())
							? fn(elem, name, !documentIsHTML)
							: undefined;

				return val !== undefined
					? val
					: support.attributes || !documentIsHTML
					? elem.getAttribute(name)
					: (val = elem.getAttributeNode(name)) && val.specified
					? val.value
					: null;
			};

			Sizzle.escape = function (sel) {
				return (sel + '').replace(rcssescape, fcssescape);
			};

			Sizzle.error = function (msg) {
				throw new Error('Syntax error, unrecognized expression: ' + msg);
			};

			/**
			 * Document sorting and removing duplicates
			 * @param {ArrayLike} results
			 */
			Sizzle.uniqueSort = function (results) {
				var elem,
					duplicates = [],
					j = 0,
					i = 0;

				// Unless we *know* we can detect duplicates, assume their presence
				hasDuplicate = !support.detectDuplicates;
				sortInput = !support.sortStable && results.slice(0);
				results.sort(sortOrder);

				if (hasDuplicate) {
					while ((elem = results[i++])) {
						if (elem === results[i]) {
							j = duplicates.push(i);
						}
					}
					while (j--) {
						results.splice(duplicates[j], 1);
					}
				}

				// Clear input after sorting to release objects
				// See https://github.com/jquery/sizzle/pull/225
				sortInput = null;

				return results;
			};

			/**
			 * Utility function for retrieving the text value of an array of DOM nodes
			 * @param {Array|Element} elem
			 */
			getText = Sizzle.getText = function (elem) {
				var node,
					ret = '',
					i = 0,
					nodeType = elem.nodeType;

				if (!nodeType) {
					// If no nodeType, this is expected to be an array
					while ((node = elem[i++])) {
						// Do not traverse comment nodes
						ret += getText(node);
					}
				} else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
					// Use textContent for elements
					// innerText usage removed for consistency of new lines (jQuery #11153)
					if (typeof elem.textContent === 'string') {
						return elem.textContent;
					} else {
						// Traverse its children
						for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
							ret += getText(elem);
						}
					}
				} else if (nodeType === 3 || nodeType === 4) {
					return elem.nodeValue;
				}

				// Do not include comment or processing instruction nodes

				return ret;
			};

			Expr = Sizzle.selectors = {
				// Can be adjusted by the user
				cacheLength: 50,

				createPseudo: markFunction,

				match: matchExpr,

				attrHandle: {},

				find: {},

				relative: {
					'>': { dir: 'parentNode', first: true },
					' ': { dir: 'parentNode' },
					'+': { dir: 'previousSibling', first: true },
					'~': { dir: 'previousSibling' },
				},

				preFilter: {
					ATTR: function (match) {
						match[1] = match[1].replace(runescape, funescape);

						// Move the given value to match[3] whether quoted or unquoted
						match[3] = (match[3] || match[4] || match[5] || '').replace(
							runescape,
							funescape
						);

						if (match[2] === '~=') {
							match[3] = ' ' + match[3] + ' ';
						}

						return match.slice(0, 4);
					},

					CHILD: function (match) {
						/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
						match[1] = match[1].toLowerCase();

						if (match[1].slice(0, 3) === 'nth') {
							// nth-* requires argument
							if (!match[3]) {
								Sizzle.error(match[0]);
							}

							// numeric x and y parameters for Expr.filter.CHILD
							// remember that false/true cast respectively to 0/1
							match[4] = +(match[4]
								? match[5] + (match[6] || 1)
								: 2 * (match[3] === 'even' || match[3] === 'odd'));
							match[5] = +(match[7] + match[8] || match[3] === 'odd');

							// other types prohibit arguments
						} else if (match[3]) {
							Sizzle.error(match[0]);
						}

						return match;
					},

					PSEUDO: function (match) {
						var excess,
							unquoted = !match[6] && match[2];

						if (matchExpr['CHILD'].test(match[0])) {
							return null;
						}

						// Accept quoted arguments as-is
						if (match[3]) {
							match[2] = match[4] || match[5] || '';

							// Strip excess characters from unquoted arguments
						} else if (
							unquoted &&
							rpseudo.test(unquoted) &&
							// Get excess from tokenize (recursively)
							(excess = tokenize(unquoted, true)) &&
							// advance to the next closing parenthesis
							(excess =
								unquoted.indexOf(')', unquoted.length - excess) -
								unquoted.length)
						) {
							// excess is a negative index
							match[0] = match[0].slice(0, excess);
							match[2] = unquoted.slice(0, excess);
						}

						// Return only captures needed by the pseudo filter method (type and argument)
						return match.slice(0, 3);
					},
				},

				filter: {
					TAG: function (nodeNameSelector) {
						var nodeName = nodeNameSelector
							.replace(runescape, funescape)
							.toLowerCase();
						return nodeNameSelector === '*'
							? function () {
									return true;
							  }
							: function (elem) {
									return (
										elem.nodeName && elem.nodeName.toLowerCase() === nodeName
									);
							  };
					},

					CLASS: function (className) {
						var pattern = classCache[className + ' '];

						return (
							pattern ||
							((pattern = new RegExp(
								'(^|' + whitespace + ')' + className + '(' + whitespace + '|$)'
							)) &&
								classCache(className, function (elem) {
									return pattern.test(
										(typeof elem.className === 'string' && elem.className) ||
											(typeof elem.getAttribute !== 'undefined' &&
												elem.getAttribute('class')) ||
											''
									);
								}))
						);
					},

					ATTR: function (name, operator, check) {
						return function (elem) {
							var result = Sizzle.attr(elem, name);

							if (result == null) {
								return operator === '!=';
							}
							if (!operator) {
								return true;
							}

							result += '';

							/* eslint-disable max-len */

							return operator === '='
								? result === check
								: operator === '!='
								? result !== check
								: operator === '^='
								? check && result.indexOf(check) === 0
								: operator === '*='
								? check && result.indexOf(check) > -1
								: operator === '$='
								? check && result.slice(-check.length) === check
								: operator === '~='
								? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(
										check
								  ) > -1
								: operator === '|='
								? result === check ||
								  result.slice(0, check.length + 1) === check + '-'
								: false;
							/* eslint-enable max-len */
						};
					},

					CHILD: function (type, what, _argument, first, last) {
						var simple = type.slice(0, 3) !== 'nth',
							forward = type.slice(-4) !== 'last',
							ofType = what === 'of-type';

						return first === 1 && last === 0
							? // Shortcut for :nth-*(n)
							  function (elem) {
									return !!elem.parentNode;
							  }
							: function (elem, _context, xml) {
									var cache,
										uniqueCache,
										outerCache,
										node,
										nodeIndex,
										start,
										dir =
											simple !== forward ? 'nextSibling' : 'previousSibling',
										parent = elem.parentNode,
										name = ofType && elem.nodeName.toLowerCase(),
										useCache = !xml && !ofType,
										diff = false;

									if (parent) {
										// :(first|last|only)-(child|of-type)
										if (simple) {
											while (dir) {
												node = elem;
												while ((node = node[dir])) {
													if (
														ofType
															? node.nodeName.toLowerCase() === name
															: node.nodeType === 1
													) {
														return false;
													}
												}

												// Reverse direction for :only-* (if we haven't yet done so)
												start = dir =
													type === 'only' && !start && 'nextSibling';
											}
											return true;
										}

										start = [forward ? parent.firstChild : parent.lastChild];

										// non-xml :nth-child(...) stores cache data on `parent`
										if (forward && useCache) {
											// Seek `elem` from a previously-cached index

											// ...in a gzip-friendly way
											node = parent;
											outerCache = node[expando] || (node[expando] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache =
												outerCache[node.uniqueID] ||
												(outerCache[node.uniqueID] = {});

											cache = uniqueCache[type] || [];
											nodeIndex = cache[0] === dirruns && cache[1];
											diff = nodeIndex && cache[2];
											node = nodeIndex && parent.childNodes[nodeIndex];

											while (
												(node =
													(++nodeIndex && node && node[dir]) ||
													// Fallback to seeking `elem` from the start
													(diff = nodeIndex = 0) ||
													start.pop())
											) {
												// When found, cache indexes on `parent` and break
												if (node.nodeType === 1 && ++diff && node === elem) {
													uniqueCache[type] = [dirruns, nodeIndex, diff];
													break;
												}
											}
										} else {
											// Use previously-cached element index if available
											if (useCache) {
												// ...in a gzip-friendly way
												node = elem;
												outerCache = node[expando] || (node[expando] = {});

												// Support: IE <9 only
												// Defend against cloned attroperties (jQuery gh-1709)
												uniqueCache =
													outerCache[node.uniqueID] ||
													(outerCache[node.uniqueID] = {});

												cache = uniqueCache[type] || [];
												nodeIndex = cache[0] === dirruns && cache[1];
												diff = nodeIndex;
											}

											// xml :nth-child(...)
											// or :nth-last-child(...) or :nth(-last)?-of-type(...)
											if (diff === false) {
												// Use the same loop as above to seek `elem` from the start
												while (
													(node =
														(++nodeIndex && node && node[dir]) ||
														(diff = nodeIndex = 0) ||
														start.pop())
												) {
													if (
														(ofType
															? node.nodeName.toLowerCase() === name
															: node.nodeType === 1) &&
														++diff
													) {
														// Cache the index of each encountered element
														if (useCache) {
															outerCache =
																node[expando] || (node[expando] = {});

															// Support: IE <9 only
															// Defend against cloned attroperties (jQuery gh-1709)
															uniqueCache =
																outerCache[node.uniqueID] ||
																(outerCache[node.uniqueID] = {});

															uniqueCache[type] = [dirruns, diff];
														}

														if (node === elem) {
															break;
														}
													}
												}
											}
										}

										// Incorporate the offset, then check against cycle size
										diff -= last;
										return (
											diff === first ||
											(diff % first === 0 && diff / first >= 0)
										);
									}
							  };
					},

					PSEUDO: function (pseudo, argument) {
						// pseudo-class names are case-insensitive
						// http://www.w3.org/TR/selectors/#pseudo-classes
						// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
						// Remember that setFilters inherits from pseudos
						var args,
							fn =
								Expr.pseudos[pseudo] ||
								Expr.setFilters[pseudo.toLowerCase()] ||
								Sizzle.error('unsupported pseudo: ' + pseudo);

						// The user may use createPseudo to indicate that
						// arguments are needed to create the filter function
						// just as Sizzle does
						if (fn[expando]) {
							return fn(argument);
						}

						// But maintain support for old signatures
						if (fn.length > 1) {
							args = [pseudo, pseudo, '', argument];
							return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())
								? markFunction(function (seed, matches) {
										var idx,
											matched = fn(seed, argument),
											i = matched.length;
										while (i--) {
											idx = indexOf(seed, matched[i]);
											seed[idx] = !(matches[idx] = matched[i]);
										}
								  })
								: function (elem) {
										return fn(elem, 0, args);
								  };
						}

						return fn;
					},
				},

				pseudos: {
					// Potentially complex pseudos
					not: markFunction(function (selector) {
						// Trim the selector passed to compile
						// to avoid treating leading and trailing
						// spaces as combinators
						var input = [],
							results = [],
							matcher = compile(selector.replace(rtrim, '$1'));

						return matcher[expando]
							? markFunction(function (seed, matches, _context, xml) {
									var elem,
										unmatched = matcher(seed, null, xml, []),
										i = seed.length;

									// Match elements unmatched by `matcher`
									while (i--) {
										if ((elem = unmatched[i])) {
											seed[i] = !(matches[i] = elem);
										}
									}
							  })
							: function (elem, _context, xml) {
									input[0] = elem;
									matcher(input, null, xml, results);

									// Don't keep the element (issue #299)
									input[0] = null;
									return !results.pop();
							  };
					}),

					has: markFunction(function (selector) {
						return function (elem) {
							return Sizzle(selector, elem).length > 0;
						};
					}),

					contains: markFunction(function (text) {
						text = text.replace(runescape, funescape);
						return function (elem) {
							return (elem.textContent || getText(elem)).indexOf(text) > -1;
						};
					}),

					// "Whether an element is represented by a :lang() selector
					// is based solely on the element's language value
					// being equal to the identifier C,
					// or beginning with the identifier C immediately followed by "-".
					// The matching of C against the element's language value is performed case-insensitively.
					// The identifier C does not have to be a valid language name."
					// http://www.w3.org/TR/selectors/#lang-pseudo
					lang: markFunction(function (lang) {
						// lang value must be a valid identifier
						if (!ridentifier.test(lang || '')) {
							Sizzle.error('unsupported lang: ' + lang);
						}
						lang = lang.replace(runescape, funescape).toLowerCase();
						return function (elem) {
							var elemLang;
							do {
								if (
									(elemLang = documentIsHTML
										? elem.lang
										: elem.getAttribute('xml:lang') ||
										  elem.getAttribute('lang'))
								) {
									elemLang = elemLang.toLowerCase();
									return (
										elemLang === lang || elemLang.indexOf(lang + '-') === 0
									);
								}
							} while ((elem = elem.parentNode) && elem.nodeType === 1);
							return false;
						};
					}),

					// Miscellaneous
					target: function (elem) {
						var hash = window.location && window.location.hash;
						return hash && hash.slice(1) === elem.id;
					},

					root: function (elem) {
						return elem === docElem;
					},

					focus: function (elem) {
						return (
							elem === document.activeElement &&
							(!document.hasFocus || document.hasFocus()) &&
							!!(elem.type || elem.href || ~elem.tabIndex)
						);
					},

					// Boolean properties
					enabled: createDisabledPseudo(false),
					disabled: createDisabledPseudo(true),

					checked: function (elem) {
						// In CSS3, :checked should return both checked and selected elements
						// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
						var nodeName = elem.nodeName.toLowerCase();
						return (
							(nodeName === 'input' && !!elem.checked) ||
							(nodeName === 'option' && !!elem.selected)
						);
					},

					selected: function (elem) {
						// Accessing this property makes selected-by-default
						// options in Safari work properly
						if (elem.parentNode) {
							// eslint-disable-next-line no-unused-expressions
							elem.parentNode.selectedIndex;
						}

						return elem.selected === true;
					},

					// Contents
					empty: function (elem) {
						// http://www.w3.org/TR/selectors/#empty-pseudo
						// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
						//   but not by others (comment: 8; processing instruction: 7; etc.)
						// nodeType < 6 works because attributes (2) do not appear as children
						for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
							if (elem.nodeType < 6) {
								return false;
							}
						}
						return true;
					},

					parent: function (elem) {
						return !Expr.pseudos['empty'](elem);
					},

					// Element/input types
					header: function (elem) {
						return rheader.test(elem.nodeName);
					},

					input: function (elem) {
						return rinputs.test(elem.nodeName);
					},

					button: function (elem) {
						var name = elem.nodeName.toLowerCase();
						return (
							(name === 'input' && elem.type === 'button') || name === 'button'
						);
					},

					text: function (elem) {
						var attr;
						return (
							elem.nodeName.toLowerCase() === 'input' &&
							elem.type === 'text' &&
							// Support: IE<8
							// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
							((attr = elem.getAttribute('type')) == null ||
								attr.toLowerCase() === 'text')
						);
					},

					// Position-in-collection
					first: createPositionalPseudo(function () {
						return [0];
					}),

					last: createPositionalPseudo(function (_matchIndexes, length) {
						return [length - 1];
					}),

					eq: createPositionalPseudo(function (
						_matchIndexes,
						length,
						argument
					) {
						return [argument < 0 ? argument + length : argument];
					}),

					even: createPositionalPseudo(function (matchIndexes, length) {
						var i = 0;
						for (; i < length; i += 2) {
							matchIndexes.push(i);
						}
						return matchIndexes;
					}),

					odd: createPositionalPseudo(function (matchIndexes, length) {
						var i = 1;
						for (; i < length; i += 2) {
							matchIndexes.push(i);
						}
						return matchIndexes;
					}),

					lt: createPositionalPseudo(function (matchIndexes, length, argument) {
						var i =
							argument < 0
								? argument + length
								: argument > length
								? length
								: argument;
						for (; --i >= 0; ) {
							matchIndexes.push(i);
						}
						return matchIndexes;
					}),

					gt: createPositionalPseudo(function (matchIndexes, length, argument) {
						var i = argument < 0 ? argument + length : argument;
						for (; ++i < length; ) {
							matchIndexes.push(i);
						}
						return matchIndexes;
					}),
				},
			};

			Expr.pseudos['nth'] = Expr.pseudos['eq'];

			// Add button/input type pseudos
			for (i in {
				radio: true,
				checkbox: true,
				file: true,
				password: true,
				image: true,
			}) {
				Expr.pseudos[i] = createInputPseudo(i);
			}
			for (i in { submit: true, reset: true }) {
				Expr.pseudos[i] = createButtonPseudo(i);
			}

			// Easy API for creating new setFilters
			function setFilters() {}
			setFilters.prototype = Expr.filters = Expr.pseudos;
			Expr.setFilters = new setFilters();

			tokenize = Sizzle.tokenize = function (selector, parseOnly) {
				var matched,
					match,
					tokens,
					type,
					soFar,
					groups,
					preFilters,
					cached = tokenCache[selector + ' '];

				if (cached) {
					return parseOnly ? 0 : cached.slice(0);
				}

				soFar = selector;
				groups = [];
				preFilters = Expr.preFilter;

				while (soFar) {
					// Comma and first run
					if (!matched || (match = rcomma.exec(soFar))) {
						if (match) {
							// Don't consume trailing commas as valid
							soFar = soFar.slice(match[0].length) || soFar;
						}
						groups.push((tokens = []));
					}

					matched = false;

					// Combinators
					if ((match = rcombinators.exec(soFar))) {
						matched = match.shift();
						tokens.push({
							value: matched,

							// Cast descendant combinators to space
							type: match[0].replace(rtrim, ' '),
						});
						soFar = soFar.slice(matched.length);
					}

					// Filters
					for (type in Expr.filter) {
						if (
							(match = matchExpr[type].exec(soFar)) &&
							(!preFilters[type] || (match = preFilters[type](match)))
						) {
							matched = match.shift();
							tokens.push({
								value: matched,
								type: type,
								matches: match,
							});
							soFar = soFar.slice(matched.length);
						}
					}

					if (!matched) {
						break;
					}
				}

				// Return the length of the invalid excess
				// if we're just parsing
				// Otherwise, throw an error or return tokens
				return parseOnly
					? soFar.length
					: soFar
					? Sizzle.error(selector)
					: // Cache the tokens
					  tokenCache(selector, groups).slice(0);
			};

			function toSelector(tokens) {
				var i = 0,
					len = tokens.length,
					selector = '';
				for (; i < len; i++) {
					selector += tokens[i].value;
				}
				return selector;
			}

			function addCombinator(matcher, combinator, base) {
				var dir = combinator.dir,
					skip = combinator.next,
					key = skip || dir,
					checkNonElements = base && key === 'parentNode',
					doneName = done++;

				return combinator.first
					? // Check against closest ancestor/preceding element
					  function (elem, context, xml) {
							while ((elem = elem[dir])) {
								if (elem.nodeType === 1 || checkNonElements) {
									return matcher(elem, context, xml);
								}
							}
							return false;
					  }
					: // Check against all ancestor/preceding elements
					  function (elem, context, xml) {
							var oldCache,
								uniqueCache,
								outerCache,
								newCache = [dirruns, doneName];

							// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
							if (xml) {
								while ((elem = elem[dir])) {
									if (elem.nodeType === 1 || checkNonElements) {
										if (matcher(elem, context, xml)) {
											return true;
										}
									}
								}
							} else {
								while ((elem = elem[dir])) {
									if (elem.nodeType === 1 || checkNonElements) {
										outerCache = elem[expando] || (elem[expando] = {});

										// Support: IE <9 only
										// Defend against cloned attroperties (jQuery gh-1709)
										uniqueCache =
											outerCache[elem.uniqueID] ||
											(outerCache[elem.uniqueID] = {});

										if (skip && skip === elem.nodeName.toLowerCase()) {
											elem = elem[dir] || elem;
										} else if (
											(oldCache = uniqueCache[key]) &&
											oldCache[0] === dirruns &&
											oldCache[1] === doneName
										) {
											// Assign to newCache so results back-propagate to previous elements
											return (newCache[2] = oldCache[2]);
										} else {
											// Reuse newcache so results back-propagate to previous elements
											uniqueCache[key] = newCache;

											// A match means we're done; a fail means we have to keep checking
											if ((newCache[2] = matcher(elem, context, xml))) {
												return true;
											}
										}
									}
								}
							}
							return false;
					  };
			}

			function elementMatcher(matchers) {
				return matchers.length > 1
					? function (elem, context, xml) {
							var i = matchers.length;
							while (i--) {
								if (!matchers[i](elem, context, xml)) {
									return false;
								}
							}
							return true;
					  }
					: matchers[0];
			}

			function multipleContexts(selector, contexts, results) {
				var i = 0,
					len = contexts.length;
				for (; i < len; i++) {
					Sizzle(selector, contexts[i], results);
				}
				return results;
			}

			function condense(unmatched, map, filter, context, xml) {
				var elem,
					newUnmatched = [],
					i = 0,
					len = unmatched.length,
					mapped = map != null;

				for (; i < len; i++) {
					if ((elem = unmatched[i])) {
						if (!filter || filter(elem, context, xml)) {
							newUnmatched.push(elem);
							if (mapped) {
								map.push(i);
							}
						}
					}
				}

				return newUnmatched;
			}

			function setMatcher(
				preFilter,
				selector,
				matcher,
				postFilter,
				postFinder,
				postSelector
			) {
				if (postFilter && !postFilter[expando]) {
					postFilter = setMatcher(postFilter);
				}
				if (postFinder && !postFinder[expando]) {
					postFinder = setMatcher(postFinder, postSelector);
				}
				return markFunction(function (seed, results, context, xml) {
					var temp,
						i,
						elem,
						preMap = [],
						postMap = [],
						preexisting = results.length,
						// Get initial elements from seed or context
						elems =
							seed ||
							multipleContexts(
								selector || '*',
								context.nodeType ? [context] : context,
								[]
							),
						// Prefilter to get matcher input, preserving a map for seed-results synchronization
						matcherIn =
							preFilter && (seed || !selector)
								? condense(elems, preMap, preFilter, context, xml)
								: elems,
						matcherOut = matcher
							? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
							  postFinder || (seed ? preFilter : preexisting || postFilter)
								? // ...intermediate processing is necessary
								  []
								: // ...otherwise use results directly
								  results
							: matcherIn;

					// Find primary matches
					if (matcher) {
						matcher(matcherIn, matcherOut, context, xml);
					}

					// Apply postFilter
					if (postFilter) {
						temp = condense(matcherOut, postMap);
						postFilter(temp, [], context, xml);

						// Un-match failing elements by moving them back to matcherIn
						i = temp.length;
						while (i--) {
							if ((elem = temp[i])) {
								matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
							}
						}
					}

					if (seed) {
						if (postFinder || preFilter) {
							if (postFinder) {
								// Get the final matcherOut by condensing this intermediate into postFinder contexts
								temp = [];
								i = matcherOut.length;
								while (i--) {
									if ((elem = matcherOut[i])) {
										// Restore matcherIn since elem is not yet a final match
										temp.push((matcherIn[i] = elem));
									}
								}
								postFinder(null, (matcherOut = []), temp, xml);
							}

							// Move matched elements from seed to results to keep them synchronized
							i = matcherOut.length;
							while (i--) {
								if (
									(elem = matcherOut[i]) &&
									(temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1
								) {
									seed[temp] = !(results[temp] = elem);
								}
							}
						}

						// Add elements to results, through postFinder if defined
					} else {
						matcherOut = condense(
							matcherOut === results
								? matcherOut.splice(preexisting, matcherOut.length)
								: matcherOut
						);
						if (postFinder) {
							postFinder(null, results, matcherOut, xml);
						} else {
							push.apply(results, matcherOut);
						}
					}
				});
			}

			function matcherFromTokens(tokens) {
				var checkContext,
					matcher,
					j,
					len = tokens.length,
					leadingRelative = Expr.relative[tokens[0].type],
					implicitRelative = leadingRelative || Expr.relative[' '],
					i = leadingRelative ? 1 : 0,
					// The foundational matcher ensures that elements are reachable from top-level context(s)
					matchContext = addCombinator(
						function (elem) {
							return elem === checkContext;
						},
						implicitRelative,
						true
					),
					matchAnyContext = addCombinator(
						function (elem) {
							return indexOf(checkContext, elem) > -1;
						},
						implicitRelative,
						true
					),
					matchers = [
						function (elem, context, xml) {
							var ret =
								(!leadingRelative && (xml || context !== outermostContext)) ||
								((checkContext = context).nodeType
									? matchContext(elem, context, xml)
									: matchAnyContext(elem, context, xml));

							// Avoid hanging onto element (issue #299)
							checkContext = null;
							return ret;
						},
					];

				for (; i < len; i++) {
					if ((matcher = Expr.relative[tokens[i].type])) {
						matchers = [addCombinator(elementMatcher(matchers), matcher)];
					} else {
						matcher = Expr.filter[tokens[i].type].apply(
							null,
							tokens[i].matches
						);

						// Return special upon seeing a positional matcher
						if (matcher[expando]) {
							// Find the next relative operator (if any) for proper handling
							j = ++i;
							for (; j < len; j++) {
								if (Expr.relative[tokens[j].type]) {
									break;
								}
							}
							return setMatcher(
								i > 1 && elementMatcher(matchers),
								i > 1 &&
									toSelector(
										// If the preceding token was a descendant combinator, insert an implicit any-element `*`
										tokens
											.slice(0, i - 1)
											.concat({ value: tokens[i - 2].type === ' ' ? '*' : '' })
									).replace(rtrim, '$1'),
								matcher,
								i < j && matcherFromTokens(tokens.slice(i, j)),
								j < len && matcherFromTokens((tokens = tokens.slice(j))),
								j < len && toSelector(tokens)
							);
						}
						matchers.push(matcher);
					}
				}

				return elementMatcher(matchers);
			}

			function matcherFromGroupMatchers(elementMatchers, setMatchers) {
				var bySet = setMatchers.length > 0,
					byElement = elementMatchers.length > 0,
					superMatcher = function (seed, context, xml, results, outermost) {
						var elem,
							j,
							matcher,
							matchedCount = 0,
							i = '0',
							unmatched = seed && [],
							setMatched = [],
							contextBackup = outermostContext,
							// We must always have either seed elements or outermost context
							elems = seed || (byElement && Expr.find['TAG']('*', outermost)),
							// Use integer dirruns iff this is the outermost matcher
							dirrunsUnique = (dirruns +=
								contextBackup == null ? 1 : Math.random() || 0.1),
							len = elems.length;

						if (outermost) {
							// Support: IE 11+, Edge 17 - 18+
							// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
							// two documents; shallow comparisons work.
							// eslint-disable-next-line eqeqeq
							outermostContext = context == document || context || outermost;
						}

						// Add elements passing elementMatchers directly to results
						// Support: IE<9, Safari
						// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
						for (; i !== len && (elem = elems[i]) != null; i++) {
							if (byElement && elem) {
								j = 0;

								// Support: IE 11+, Edge 17 - 18+
								// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
								// two documents; shallow comparisons work.
								// eslint-disable-next-line eqeqeq
								if (!context && elem.ownerDocument != document) {
									setDocument(elem);
									xml = !documentIsHTML;
								}
								while ((matcher = elementMatchers[j++])) {
									if (matcher(elem, context || document, xml)) {
										results.push(elem);
										break;
									}
								}
								if (outermost) {
									dirruns = dirrunsUnique;
								}
							}

							// Track unmatched elements for set filters
							if (bySet) {
								// They will have gone through all possible matchers
								if ((elem = !matcher && elem)) {
									matchedCount--;
								}

								// Lengthen the array for every element, matched or not
								if (seed) {
									unmatched.push(elem);
								}
							}
						}

						// `i` is now the count of elements visited above, and adding it to `matchedCount`
						// makes the latter nonnegative.
						matchedCount += i;

						// Apply set filters to unmatched elements
						// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
						// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
						// no element matchers and no seed.
						// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
						// case, which will result in a "00" `matchedCount` that differs from `i` but is also
						// numerically zero.
						if (bySet && i !== matchedCount) {
							j = 0;
							while ((matcher = setMatchers[j++])) {
								matcher(unmatched, setMatched, context, xml);
							}

							if (seed) {
								// Reintegrate element matches to eliminate the need for sorting
								if (matchedCount > 0) {
									while (i--) {
										if (!(unmatched[i] || setMatched[i])) {
											setMatched[i] = pop.call(results);
										}
									}
								}

								// Discard index placeholder values to get only actual matches
								setMatched = condense(setMatched);
							}

							// Add matches to results
							push.apply(results, setMatched);

							// Seedless set matches succeeding multiple successful matchers stipulate sorting
							if (
								outermost &&
								!seed &&
								setMatched.length > 0 &&
								matchedCount + setMatchers.length > 1
							) {
								Sizzle.uniqueSort(results);
							}
						}

						// Override manipulation of globals by nested matchers
						if (outermost) {
							dirruns = dirrunsUnique;
							outermostContext = contextBackup;
						}

						return unmatched;
					};

				return bySet ? markFunction(superMatcher) : superMatcher;
			}

			compile = Sizzle.compile = function (
				selector,
				match /* Internal Use Only */
			) {
				var i,
					setMatchers = [],
					elementMatchers = [],
					cached = compilerCache[selector + ' '];

				if (!cached) {
					// Generate a function of recursive functions that can be used to check each element
					if (!match) {
						match = tokenize(selector);
					}
					i = match.length;
					while (i--) {
						cached = matcherFromTokens(match[i]);
						if (cached[expando]) {
							setMatchers.push(cached);
						} else {
							elementMatchers.push(cached);
						}
					}

					// Cache the compiled function
					cached = compilerCache(
						selector,
						matcherFromGroupMatchers(elementMatchers, setMatchers)
					);

					// Save selector and tokenization
					cached.selector = selector;
				}
				return cached;
			};

			/**
			 * A low-level selection function that works with Sizzle's compiled
			 *  selector functions
			 * @param {String|Function} selector A selector or a pre-compiled
			 *  selector function built with Sizzle.compile
			 * @param {Element} context
			 * @param {Array} [results]
			 * @param {Array} [seed] A set of elements to match against
			 */
			select = Sizzle.select = function (selector, context, results, seed) {
				var i,
					tokens,
					token,
					type,
					find,
					compiled = typeof selector === 'function' && selector,
					match = !seed && tokenize((selector = compiled.selector || selector));

				results = results || [];

				// Try to minimize operations if there is only one selector in the list and no seed
				// (the latter of which guarantees us context)
				if (match.length === 1) {
					// Reduce context if the leading compound selector is an ID
					tokens = match[0] = match[0].slice(0);
					if (
						tokens.length > 2 &&
						(token = tokens[0]).type === 'ID' &&
						context.nodeType === 9 &&
						documentIsHTML &&
						Expr.relative[tokens[1].type]
					) {
						context = (Expr.find['ID'](
							token.matches[0].replace(runescape, funescape),
							context
						) || [])[0];
						if (!context) {
							return results;

							// Precompiled matchers will still verify ancestry, so step up a level
						} else if (compiled) {
							context = context.parentNode;
						}

						selector = selector.slice(tokens.shift().value.length);
					}

					// Fetch a seed set for right-to-left matching
					i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;
					while (i--) {
						token = tokens[i];

						// Abort if we hit a combinator
						if (Expr.relative[(type = token.type)]) {
							break;
						}
						if ((find = Expr.find[type])) {
							// Search, expanding context for leading sibling combinators
							if (
								(seed = find(
									token.matches[0].replace(runescape, funescape),
									(rsibling.test(tokens[0].type) &&
										testContext(context.parentNode)) ||
										context
								))
							) {
								// If seed is empty or no tokens remain, we can return early
								tokens.splice(i, 1);
								selector = seed.length && toSelector(tokens);
								if (!selector) {
									push.apply(results, seed);
									return results;
								}

								break;
							}
						}
					}
				}

				// Compile and execute a filtering function if one is not provided
				// Provide `match` to avoid retokenization if we modified the selector above
				(compiled || compile(selector, match))(
					seed,
					context,
					!documentIsHTML,
					results,
					!context ||
						(rsibling.test(selector) && testContext(context.parentNode)) ||
						context
				);
				return results;
			};

			// One-time assignments

			// Sort stability
			support.sortStable =
				expando.split('').sort(sortOrder).join('') === expando;

			// Support: Chrome 14-35+
			// Always assume duplicates if they aren't passed to the comparison function
			support.detectDuplicates = !!hasDuplicate;

			// Initialize against the default document
			setDocument();

			// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
			// Detached nodes confoundingly follow *each other*
			support.sortDetached = assert(function (el) {
				// Should return 1, but returns 4 (following)
				return (
					el.compareDocumentPosition(document.createElement('fieldset')) & 1
				);
			});

			// Support: IE<8
			// Prevent attribute/property "interpolation"
			// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
			if (
				!assert(function (el) {
					el.innerHTML = "<a href='#'></a>";
					return el.firstChild.getAttribute('href') === '#';
				})
			) {
				addHandle('type|href|height|width', function (elem, name, isXML) {
					if (!isXML) {
						return elem.getAttribute(
							name,
							name.toLowerCase() === 'type' ? 1 : 2
						);
					}
				});
			}

			// Support: IE<9
			// Use defaultValue in place of getAttribute("value")
			if (
				!support.attributes ||
				!assert(function (el) {
					el.innerHTML = '<input/>';
					el.firstChild.setAttribute('value', '');
					return el.firstChild.getAttribute('value') === '';
				})
			) {
				addHandle('value', function (elem, _name, isXML) {
					if (!isXML && elem.nodeName.toLowerCase() === 'input') {
						return elem.defaultValue;
					}
				});
			}

			// Support: IE<9
			// Use getAttributeNode to fetch booleans when getAttribute lies
			if (
				!assert(function (el) {
					return el.getAttribute('disabled') == null;
				})
			) {
				addHandle(booleans, function (elem, name, isXML) {
					var val;
					if (!isXML) {
						return elem[name] === true
							? name.toLowerCase()
							: (val = elem.getAttributeNode(name)) && val.specified
							? val.value
							: null;
					}
				});
			}

			return Sizzle;
		})(window);

	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;

	// Deprecated
	jQuery.expr[':'] = jQuery.expr.pseudos;
	jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;
	jQuery.escapeSelector = Sizzle.escape;

	var dir = function (elem, dir, until) {
		var matched = [],
			truncate = until !== undefined;

		while ((elem = elem[dir]) && elem.nodeType !== 9) {
			if (elem.nodeType === 1) {
				if (truncate && jQuery(elem).is(until)) {
					break;
				}
				matched.push(elem);
			}
		}
		return matched;
	};

	var siblings = function (n, elem) {
		var matched = [];

		for (; n; n = n.nextSibling) {
			if (n.nodeType === 1 && n !== elem) {
				matched.push(n);
			}
		}

		return matched;
	};

	var rneedsContext = jQuery.expr.match.needsContext;

	function nodeName(elem, name) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	}
	var rsingleTag =
		/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

	// Implement the identical functionality for filter and not
	function winnow(elements, qualifier, not) {
		if (isFunction(qualifier)) {
			return jQuery.grep(elements, function (elem, i) {
				return !!qualifier.call(elem, i, elem) !== not;
			});
		}

		// Single element
		if (qualifier.nodeType) {
			return jQuery.grep(elements, function (elem) {
				return (elem === qualifier) !== not;
			});
		}

		// Arraylike of elements (jQuery, arguments, Array)
		if (typeof qualifier !== 'string') {
			return jQuery.grep(elements, function (elem) {
				return indexOf.call(qualifier, elem) > -1 !== not;
			});
		}

		// Filtered directly for both simple and complex selectors
		return jQuery.filter(qualifier, elements, not);
	}

	jQuery.filter = function (expr, elems, not) {
		var elem = elems[0];

		if (not) {
			expr = ':not(' + expr + ')';
		}

		if (elems.length === 1 && elem.nodeType === 1) {
			return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];
		}

		return jQuery.find.matches(
			expr,
			jQuery.grep(elems, function (elem) {
				return elem.nodeType === 1;
			})
		);
	};

	jQuery.fn.extend({
		find: function (selector) {
			var i,
				ret,
				len = this.length,
				self = this;

			if (typeof selector !== 'string') {
				return this.pushStack(
					jQuery(selector).filter(function () {
						for (i = 0; i < len; i++) {
							if (jQuery.contains(self[i], this)) {
								return true;
							}
						}
					})
				);
			}

			ret = this.pushStack([]);

			for (i = 0; i < len; i++) {
				jQuery.find(selector, self[i], ret);
			}

			return len > 1 ? jQuery.uniqueSort(ret) : ret;
		},
		filter: function (selector) {
			return this.pushStack(winnow(this, selector || [], false));
		},
		not: function (selector) {
			return this.pushStack(winnow(this, selector || [], true));
		},
		is: function (selector) {
			return !!winnow(
				this,

				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				typeof selector === 'string' && rneedsContext.test(selector)
					? jQuery(selector)
					: selector || [],
				false
			).length;
		},
	});

	// Initialize a jQuery object

	// A central reference to the root jQuery(document)
	var rootjQuery,
		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
		// Strict HTML recognition (#11290: must start with <)
		// Shortcut simple #id case for speed
		rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
		init = (jQuery.fn.init = function (selector, context, root) {
			var match, elem;

			// HANDLE: $(""), $(null), $(undefined), $(false)
			if (!selector) {
				return this;
			}

			// Method init() accepts an alternate rootjQuery
			// so migrate can support jQuery.sub (gh-2101)
			root = root || rootjQuery;

			// Handle HTML strings
			if (typeof selector === 'string') {
				if (
					selector[0] === '<' &&
					selector[selector.length - 1] === '>' &&
					selector.length >= 3
				) {
					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [null, selector, null];
				} else {
					match = rquickExpr.exec(selector);
				}

				// Match html or make sure no context is specified for #id
				if (match && (match[1] || !context)) {
					// HANDLE: $(html) -> $(array)
					if (match[1]) {
						context = context instanceof jQuery ? context[0] : context;

						// Option to run scripts is true for back-compat
						// Intentionally let the error be thrown if parseHTML is not present
						jQuery.merge(
							this,
							jQuery.parseHTML(
								match[1],
								context && context.nodeType
									? context.ownerDocument || context
									: document,
								true
							)
						);

						// HANDLE: $(html, props)
						if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
							for (match in context) {
								// Properties of context are called as methods if possible
								if (isFunction(this[match])) {
									this[match](context[match]);

									// ...and otherwise set as attributes
								} else {
									this.attr(match, context[match]);
								}
							}
						}

						return this;

						// HANDLE: $(#id)
					} else {
						elem = document.getElementById(match[2]);

						if (elem) {
							// Inject the element directly into the jQuery object
							this[0] = elem;
							this.length = 1;
						}
						return this;
					}

					// HANDLE: $(expr, $(...))
				} else if (!context || context.jquery) {
					return (context || root).find(selector);

					// HANDLE: $(expr, context)
					// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor(context).find(selector);
				}

				// HANDLE: $(DOMElement)
			} else if (selector.nodeType) {
				this[0] = selector;
				this.length = 1;
				return this;

				// HANDLE: $(function)
				// Shortcut for document ready
			} else if (isFunction(selector)) {
				return root.ready !== undefined
					? root.ready(selector)
					: // Execute immediately if ready is not present
					  selector(jQuery);
			}

			return jQuery.makeArray(selector, this);
		});

	// Give the init function the jQuery prototype for later instantiation
	init.prototype = jQuery.fn;

	// Initialize central reference
	rootjQuery = jQuery(document);

	var rparentsprev = /^(?:parents|prev(?:Until|All))/,
		// Methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true,
		};

	jQuery.fn.extend({
		has: function (target) {
			var targets = jQuery(target, this),
				l = targets.length;

			return this.filter(function () {
				var i = 0;
				for (; i < l; i++) {
					if (jQuery.contains(this, targets[i])) {
						return true;
					}
				}
			});
		},

		closest: function (selectors, context) {
			var cur,
				i = 0,
				l = this.length,
				matched = [],
				targets = typeof selectors !== 'string' && jQuery(selectors);

			// Positional selectors never match, since there's no _selection_ context
			if (!rneedsContext.test(selectors)) {
				for (; i < l; i++) {
					for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
						// Always skip document fragments
						if (
							cur.nodeType < 11 &&
							(targets
								? targets.index(cur) > -1
								: // Don't pass non-elements to Sizzle
								  cur.nodeType === 1 &&
								  jQuery.find.matchesSelector(cur, selectors))
						) {
							matched.push(cur);
							break;
						}
					}
				}
			}

			return this.pushStack(
				matched.length > 1 ? jQuery.uniqueSort(matched) : matched
			);
		},

		// Determine the position of an element within the set
		index: function (elem) {
			// No argument, return index in parent
			if (!elem) {
				return this[0] && this[0].parentNode
					? this.first().prevAll().length
					: -1;
			}

			// Index in selector
			if (typeof elem === 'string') {
				return indexOf.call(jQuery(elem), this[0]);
			}

			// Locate the position of the desired element
			return indexOf.call(
				this,

				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[0] : elem
			);
		},

		add: function (selector, context) {
			return this.pushStack(
				jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context)))
			);
		},

		addBack: function (selector) {
			return this.add(
				selector == null ? this.prevObject : this.prevObject.filter(selector)
			);
		},
	});

	function sibling(cur, dir) {
		while ((cur = cur[dir]) && cur.nodeType !== 1) {}
		return cur;
	}

	jQuery.each(
		{
			parent: function (elem) {
				var parent = elem.parentNode;
				return parent && parent.nodeType !== 11 ? parent : null;
			},
			parents: function (elem) {
				return dir(elem, 'parentNode');
			},
			parentsUntil: function (elem, _i, until) {
				return dir(elem, 'parentNode', until);
			},
			next: function (elem) {
				return sibling(elem, 'nextSibling');
			},
			prev: function (elem) {
				return sibling(elem, 'previousSibling');
			},
			nextAll: function (elem) {
				return dir(elem, 'nextSibling');
			},
			prevAll: function (elem) {
				return dir(elem, 'previousSibling');
			},
			nextUntil: function (elem, _i, until) {
				return dir(elem, 'nextSibling', until);
			},
			prevUntil: function (elem, _i, until) {
				return dir(elem, 'previousSibling', until);
			},
			siblings: function (elem) {
				return siblings((elem.parentNode || {}).firstChild, elem);
			},
			children: function (elem) {
				return siblings(elem.firstChild);
			},
			contents: function (elem) {
				if (
					elem.contentDocument != null &&
					// Support: IE 11+
					// <object> elements with no `data` attribute has an object
					// `contentDocument` with a `null` prototype.
					getProto(elem.contentDocument)
				) {
					return elem.contentDocument;
				}

				// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
				// Treat the template element as a regular one in browsers that
				// don't support it.
				if (nodeName(elem, 'template')) {
					elem = elem.content || elem;
				}

				return jQuery.merge([], elem.childNodes);
			},
		},
		function (name, fn) {
			jQuery.fn[name] = function (until, selector) {
				var matched = jQuery.map(this, fn, until);

				if (name.slice(-5) !== 'Until') {
					selector = until;
				}

				if (selector && typeof selector === 'string') {
					matched = jQuery.filter(selector, matched);
				}

				if (this.length > 1) {
					// Remove duplicates
					if (!guaranteedUnique[name]) {
						jQuery.uniqueSort(matched);
					}

					// Reverse order for parents* and prev-derivatives
					if (rparentsprev.test(name)) {
						matched.reverse();
					}
				}

				return this.pushStack(matched);
			};
		}
	);
	var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;

	// Convert String-formatted options into Object-formatted ones
	function createOptions(options) {
		var object = {};
		jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {
			object[flag] = true;
		});
		return object;
	}

	/*
	 * Create a callback list using the following parameters:
	 *
	 *	options: an optional list of space-separated options that will change how
	 *			the callback list behaves or a more traditional option object
	 *
	 * By default a callback list will act like an event callback list and can be
	 * "fired" multiple times.
	 *
	 * Possible options:
	 *
	 *	once:			will ensure the callback list can only be fired once (like a Deferred)
	 *
	 *	memory:			will keep track of previous values and will call any callback added
	 *					after the list has been fired right away with the latest "memorized"
	 *					values (like a Deferred)
	 *
	 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	 *
	 *	stopOnFalse:	interrupt callings when a callback returns false
	 *
	 */
	jQuery.Callbacks = function (options) {
		// Convert options from String-formatted to Object-formatted if needed
		// (we check in cache first)
		options =
			typeof options === 'string'
				? createOptions(options)
				: jQuery.extend({}, options);

		var // Flag to know if list is currently firing
			firing,
			// Last fire value for non-forgettable lists
			memory,
			// Flag to know if list was already fired
			fired,
			// Flag to prevent firing
			locked,
			// Actual callback list
			list = [],
			// Queue of execution data for repeatable lists
			queue = [],
			// Index of currently firing callback (modified by add/remove as needed)
			firingIndex = -1,
			// Fire callbacks
			fire = function () {
				// Enforce single-firing
				locked = locked || options.once;

				// Execute callbacks for all pending executions,
				// respecting firingIndex overrides and runtime changes
				fired = firing = true;
				for (; queue.length; firingIndex = -1) {
					memory = queue.shift();
					while (++firingIndex < list.length) {
						// Run callback and check for early termination
						if (
							list[firingIndex].apply(memory[0], memory[1]) === false &&
							options.stopOnFalse
						) {
							// Jump to end and forget the data so .add doesn't re-fire
							firingIndex = list.length;
							memory = false;
						}
					}
				}

				// Forget the data if we're done with it
				if (!options.memory) {
					memory = false;
				}

				firing = false;

				// Clean up if we're done firing for good
				if (locked) {
					// Keep an empty list if we have data for future add calls
					if (memory) {
						list = [];

						// Otherwise, this object is spent
					} else {
						list = '';
					}
				}
			},
			// Actual Callbacks object
			self = {
				// Add a callback or a collection of callbacks to the list
				add: function () {
					if (list) {
						// If we have memory from a past run, we should fire after adding
						if (memory && !firing) {
							firingIndex = list.length - 1;
							queue.push(memory);
						}

						(function add(args) {
							jQuery.each(args, function (_, arg) {
								if (isFunction(arg)) {
									if (!options.unique || !self.has(arg)) {
										list.push(arg);
									}
								} else if (arg && arg.length && toType(arg) !== 'string') {
									// Inspect recursively
									add(arg);
								}
							});
						})(arguments);

						if (memory && !firing) {
							fire();
						}
					}
					return this;
				},

				// Remove a callback from the list
				remove: function () {
					jQuery.each(arguments, function (_, arg) {
						var index;
						while ((index = jQuery.inArray(arg, list, index)) > -1) {
							list.splice(index, 1);

							// Handle firing indexes
							if (index <= firingIndex) {
								firingIndex--;
							}
						}
					});
					return this;
				},

				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function (fn) {
					return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
				},

				// Remove all callbacks from the list
				empty: function () {
					if (list) {
						list = [];
					}
					return this;
				},

				// Disable .fire and .add
				// Abort any current/pending executions
				// Clear all callbacks and values
				disable: function () {
					locked = queue = [];
					list = memory = '';
					return this;
				},
				disabled: function () {
					return !list;
				},

				// Disable .fire
				// Also disable .add unless we have memory (since it would have no effect)
				// Abort any pending executions
				lock: function () {
					locked = queue = [];
					if (!memory && !firing) {
						list = memory = '';
					}
					return this;
				},
				locked: function () {
					return !!locked;
				},

				// Call all callbacks with the given context and arguments
				fireWith: function (context, args) {
					if (!locked) {
						args = args || [];
						args = [context, args.slice ? args.slice() : args];
						queue.push(args);
						if (!firing) {
							fire();
						}
					}
					return this;
				},

				// Call all the callbacks with the given arguments
				fire: function () {
					self.fireWith(this, arguments);
					return this;
				},

				// To know if the callbacks have already been called at least once
				fired: function () {
					return !!fired;
				},
			};

		return self;
	};

	function Identity(v) {
		return v;
	}
	function Thrower(ex) {
		throw ex;
	}

	function adoptValue(value, resolve, reject, noValue) {
		var method;

		try {
			// Check for promise aspect first to privilege synchronous behavior
			if (value && isFunction((method = value.promise))) {
				method.call(value).done(resolve).fail(reject);

				// Other thenables
			} else if (value && isFunction((method = value.then))) {
				method.call(value, resolve, reject);

				// Other non-thenables
			} else {
				// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
				// * false: [ value ].slice( 0 ) => resolve( value )
				// * true: [ value ].slice( 1 ) => resolve()
				resolve.apply(undefined, [value].slice(noValue));
			}

			// For Promises/A+, convert exceptions into rejections
			// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
			// Deferred#then to conditionally suppress rejection.
		} catch (value) {
			// Support: Android 4.0 only
			// Strict mode functions invoked without .call/.apply get global-object context
			reject.apply(undefined, [value]);
		}
	}

	jQuery.extend({
		Deferred: function (func) {
			var tuples = [
					// action, add listener, callbacks,
					// ... .then handlers, argument index, [final state]
					[
						'notify',
						'progress',
						jQuery.Callbacks('memory'),
						jQuery.Callbacks('memory'),
						2,
					],
					[
						'resolve',
						'done',
						jQuery.Callbacks('once memory'),
						jQuery.Callbacks('once memory'),
						0,
						'resolved',
					],
					[
						'reject',
						'fail',
						jQuery.Callbacks('once memory'),
						jQuery.Callbacks('once memory'),
						1,
						'rejected',
					],
				],
				state = 'pending',
				promise = {
					state: function () {
						return state;
					},
					always: function () {
						deferred.done(arguments).fail(arguments);
						return this;
					},
					catch: function (fn) {
						return promise.then(null, fn);
					},

					// Keep pipe for back-compat
					pipe: function (/* fnDone, fnFail, fnProgress */) {
						var fns = arguments;

						return jQuery
							.Deferred(function (newDefer) {
								jQuery.each(tuples, function (_i, tuple) {
									// Map tuples (progress, done, fail) to arguments (done, fail, progress)
									var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];

									// deferred.progress(function() { bind to newDefer or newDefer.notify })
									// deferred.done(function() { bind to newDefer or newDefer.resolve })
									// deferred.fail(function() { bind to newDefer or newDefer.reject })
									deferred[tuple[1]](function () {
										var returned = fn && fn.apply(this, arguments);
										if (returned && isFunction(returned.promise)) {
											returned
												.promise()
												.progress(newDefer.notify)
												.done(newDefer.resolve)
												.fail(newDefer.reject);
										} else {
											newDefer[tuple[0] + 'With'](
												this,
												fn ? [returned] : arguments
											);
										}
									});
								});
								fns = null;
							})
							.promise();
					},
					then: function (onFulfilled, onRejected, onProgress) {
						var maxDepth = 0;
						function resolve(depth, deferred, handler, special) {
							return function () {
								var that = this,
									args = arguments,
									mightThrow = function () {
										var returned, then;

										// Support: Promises/A+ section 2.3.3.3.3
										// https://promisesaplus.com/#point-59
										// Ignore double-resolution attempts
										if (depth < maxDepth) {
											return;
										}

										returned = handler.apply(that, args);

										// Support: Promises/A+ section 2.3.1
										// https://promisesaplus.com/#point-48
										if (returned === deferred.promise()) {
											throw new TypeError('Thenable self-resolution');
										}

										// Support: Promises/A+ sections 2.3.3.1, 3.5
										// https://promisesaplus.com/#point-54
										// https://promisesaplus.com/#point-75
										// Retrieve `then` only once
										then =
											returned &&
											// Support: Promises/A+ section 2.3.4
											// https://promisesaplus.com/#point-64
											// Only check objects and functions for thenability
											(typeof returned === 'object' ||
												typeof returned === 'function') &&
											returned.then;

										// Handle a returned thenable
										if (isFunction(then)) {
											// Special processors (notify) just wait for resolution
											if (special) {
												then.call(
													returned,
													resolve(maxDepth, deferred, Identity, special),
													resolve(maxDepth, deferred, Thrower, special)
												);

												// Normal processors (resolve) also hook into progress
											} else {
												// ...and disregard older resolution values
												maxDepth++;

												then.call(
													returned,
													resolve(maxDepth, deferred, Identity, special),
													resolve(maxDepth, deferred, Thrower, special),
													resolve(
														maxDepth,
														deferred,
														Identity,
														deferred.notifyWith
													)
												);
											}

											// Handle all other returned values
										} else {
											// Only substitute handlers pass on context
											// and multiple values (non-spec behavior)
											if (handler !== Identity) {
												that = undefined;
												args = [returned];
											}

											// Process the value(s)
											// Default process is resolve
											(special || deferred.resolveWith)(that, args);
										}
									},
									// Only normal processors (resolve) catch and reject exceptions
									process = special
										? mightThrow
										: function () {
												try {
													mightThrow();
												} catch (e) {
													if (jQuery.Deferred.exceptionHook) {
														jQuery.Deferred.exceptionHook(
															e,
															process.stackTrace
														);
													}

													// Support: Promises/A+ section 2.3.3.3.4.1
													// https://promisesaplus.com/#point-61
													// Ignore post-resolution exceptions
													if (depth + 1 >= maxDepth) {
														// Only substitute handlers pass on context
														// and multiple values (non-spec behavior)
														if (handler !== Thrower) {
															that = undefined;
															args = [e];
														}

														deferred.rejectWith(that, args);
													}
												}
										  };

								// Support: Promises/A+ section 2.3.3.3.1
								// https://promisesaplus.com/#point-57
								// Re-resolve promises immediately to dodge false rejection from
								// subsequent errors
								if (depth) {
									process();
								} else {
									// Call an optional hook to record the stack, in case of exception
									// since it's otherwise lost when execution goes async
									if (jQuery.Deferred.getStackHook) {
										process.stackTrace = jQuery.Deferred.getStackHook();
									}
									window.setTimeout(process);
								}
							};
						}

						return jQuery
							.Deferred(function (newDefer) {
								// progress_handlers.add( ... )
								tuples[0][3].add(
									resolve(
										0,
										newDefer,
										isFunction(onProgress) ? onProgress : Identity,
										newDefer.notifyWith
									)
								);

								// fulfilled_handlers.add( ... )
								tuples[1][3].add(
									resolve(
										0,
										newDefer,
										isFunction(onFulfilled) ? onFulfilled : Identity
									)
								);

								// rejected_handlers.add( ... )
								tuples[2][3].add(
									resolve(
										0,
										newDefer,
										isFunction(onRejected) ? onRejected : Thrower
									)
								);
							})
							.promise();
					},

					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function (obj) {
						return obj != null ? jQuery.extend(obj, promise) : promise;
					},
				},
				deferred = {};

			// Add list-specific methods
			jQuery.each(tuples, function (i, tuple) {
				var list = tuple[2],
					stateString = tuple[5];

				// promise.progress = list.add
				// promise.done = list.add
				// promise.fail = list.add
				promise[tuple[1]] = list.add;

				// Handle state
				if (stateString) {
					list.add(
						function () {
							// state = "resolved" (i.e., fulfilled)
							// state = "rejected"
							state = stateString;
						},

						// rejected_callbacks.disable
						// fulfilled_callbacks.disable
						tuples[3 - i][2].disable,

						// rejected_handlers.disable
						// fulfilled_handlers.disable
						tuples[3 - i][3].disable,

						// progress_callbacks.lock
						tuples[0][2].lock,

						// progress_handlers.lock
						tuples[0][3].lock
					);
				}

				// progress_handlers.fire
				// fulfilled_handlers.fire
				// rejected_handlers.fire
				list.add(tuple[3].fire);

				// deferred.notify = function() { deferred.notifyWith(...) }
				// deferred.resolve = function() { deferred.resolveWith(...) }
				// deferred.reject = function() { deferred.rejectWith(...) }
				deferred[tuple[0]] = function () {
					deferred[tuple[0] + 'With'](
						this === deferred ? undefined : this,
						arguments
					);
					return this;
				};

				// deferred.notifyWith = list.fireWith
				// deferred.resolveWith = list.fireWith
				// deferred.rejectWith = list.fireWith
				deferred[tuple[0] + 'With'] = list.fireWith;
			});

			// Make the deferred a promise
			promise.promise(deferred);

			// Call given func if any
			if (func) {
				func.call(deferred, deferred);
			}

			// All done!
			return deferred;
		},

		// Deferred helper
		when: function (singleValue) {
			var // count of uncompleted subordinates
				remaining = arguments.length,
				// count of unprocessed arguments
				i = remaining,
				// subordinate fulfillment data
				resolveContexts = Array(i),
				resolveValues = slice.call(arguments),
				// the primary Deferred
				primary = jQuery.Deferred(),
				// subordinate callback factory
				updateFunc = function (i) {
					return function (value) {
						resolveContexts[i] = this;
						resolveValues[i] =
							arguments.length > 1 ? slice.call(arguments) : value;
						if (!--remaining) {
							primary.resolveWith(resolveContexts, resolveValues);
						}
					};
				};

			// Single- and empty arguments are adopted like Promise.resolve
			if (remaining <= 1) {
				adoptValue(
					singleValue,
					primary.done(updateFunc(i)).resolve,
					primary.reject,
					!remaining
				);

				// Use .then() to unwrap secondary thenables (cf. gh-3000)
				if (
					primary.state() === 'pending' ||
					isFunction(resolveValues[i] && resolveValues[i].then)
				) {
					return primary.then();
				}
			}

			// Multiple arguments are aggregated like Promise.all array elements
			while (i--) {
				adoptValue(resolveValues[i], updateFunc(i), primary.reject);
			}

			return primary.promise();
		},
	});

	// These usually indicate a programmer mistake during development,
	// warn about them ASAP rather than swallowing them by default.
	var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

	jQuery.Deferred.exceptionHook = function (error, stack) {
		// Support: IE 8 - 9 only
		// Console exists when dev tools are open, which can happen at any time
		if (
			window.console &&
			window.console.warn &&
			error &&
			rerrorNames.test(error.name)
		) {
			window.console.warn(
				'jQuery.Deferred exception: ' + error.message,
				error.stack,
				stack
			);
		}
	};

	jQuery.readyException = function (error) {
		window.setTimeout(function () {
			throw error;
		});
	};

	// The deferred used on DOM ready
	var readyList = jQuery.Deferred();

	jQuery.fn.ready = function (fn) {
		readyList
			.then(fn)

			// Wrap jQuery.readyException in a function so that the lookup
			// happens at the time of error handling instead of callback
			// registration.
			.catch(function (error) {
				jQuery.readyException(error);
			});

		return this;
	};

	jQuery.extend({
		// Is the DOM ready to be used? Set to true once it occurs.
		isReady: false,

		// A counter to track how many items to wait for before
		// the ready event fires. See #6781
		readyWait: 1,

		// Handle when the DOM is ready
		ready: function (wait) {
			// Abort if there are pending holds or we're already ready
			if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
				return;
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if (wait !== true && --jQuery.readyWait > 0) {
				return;
			}

			// If there are functions bound, to execute
			readyList.resolveWith(document, [jQuery]);
		},
	});

	jQuery.ready.then = readyList.then;

	// The ready event handler and self cleanup method
	function completed() {
		document.removeEventListener('DOMContentLoaded', completed);
		window.removeEventListener('load', completed);
		jQuery.ready();
	}

	// Catch cases where $(document).ready() is called
	// after the browser event has already occurred.
	// Support: IE <=9 - 10 only
	// Older IE sometimes signals "interactive" too soon
	if (
		document.readyState === 'complete' ||
		(document.readyState !== 'loading' && !document.documentElement.doScroll)
	) {
		// Handle it asynchronously to allow scripts the opportunity to delay ready
		window.setTimeout(jQuery.ready);
	} else {
		// Use the handy event callback
		document.addEventListener('DOMContentLoaded', completed);

		// A fallback to window.onload, that will always work
		window.addEventListener('load', completed);
	}

	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	var access = function (elems, fn, key, value, chainable, emptyGet, raw) {
		var i = 0,
			len = elems.length,
			bulk = key == null;

		// Sets many values
		if (toType(key) === 'object') {
			chainable = true;
			for (i in key) {
				access(elems, fn, i, key[i], true, emptyGet, raw);
			}

			// Sets one value
		} else if (value !== undefined) {
			chainable = true;

			if (!isFunction(value)) {
				raw = true;
			}

			if (bulk) {
				// Bulk operations run against the entire set
				if (raw) {
					fn.call(elems, value);
					fn = null;

					// ...except when executing function values
				} else {
					bulk = fn;
					fn = function (elem, _key, value) {
						return bulk.call(jQuery(elem), value);
					};
				}
			}

			if (fn) {
				for (; i < len; i++) {
					fn(
						elems[i],
						key,
						raw ? value : value.call(elems[i], i, fn(elems[i], key))
					);
				}
			}
		}

		if (chainable) {
			return elems;
		}

		// Gets
		if (bulk) {
			return fn.call(elems);
		}

		return len ? fn(elems[0], key) : emptyGet;
	};

	// Matches dashed string for camelizing
	var rmsPrefix = /^-ms-/,
		rdashAlpha = /-([a-z])/g;

	// Used by camelCase as callback to replace()
	function fcamelCase(_all, letter) {
		return letter.toUpperCase();
	}

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 15
	// Microsoft forgot to hump their vendor prefix (#9572)
	function camelCase(string) {
		return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);
	}
	var acceptData = function (owner) {
		// Accepts only:
		//  - Node
		//    - Node.ELEMENT_NODE
		//    - Node.DOCUMENT_NODE
		//  - Object
		//    - Any
		return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
	};

	function Data() {
		this.expando = jQuery.expando + Data.uid++;
	}

	Data.uid = 1;

	Data.prototype = {
		cache: function (owner) {
			// Check if the owner object already has a cache
			var value = owner[this.expando];

			// If not, create one
			if (!value) {
				value = {};

				// We can accept data for non-element nodes in modern browsers,
				// but we should not, see #8335.
				// Always return an empty object.
				if (acceptData(owner)) {
					// If it is a node unlikely to be stringify-ed or looped over
					// use plain assignment
					if (owner.nodeType) {
						owner[this.expando] = value;

						// Otherwise secure it in a non-enumerable property
						// configurable must be true to allow the property to be
						// deleted when data is removed
					} else {
						Object.defineProperty(owner, this.expando, {
							value: value,
							configurable: true,
						});
					}
				}
			}

			return value;
		},
		set: function (owner, data, value) {
			var prop,
				cache = this.cache(owner);

			// Handle: [ owner, key, value ] args
			// Always use camelCase key (gh-2257)
			if (typeof data === 'string') {
				cache[camelCase(data)] = value;

				// Handle: [ owner, { properties } ] args
			} else {
				// Copy the properties one-by-one to the cache object
				for (prop in data) {
					cache[camelCase(prop)] = data[prop];
				}
			}
			return cache;
		},
		get: function (owner, key) {
			return key === undefined
				? this.cache(owner)
				: // Always use camelCase key (gh-2257)
				  owner[this.expando] && owner[this.expando][camelCase(key)];
		},
		access: function (owner, key, value) {
			// In cases where either:
			//
			//   1. No key was specified
			//   2. A string key was specified, but no value provided
			//
			// Take the "read" path and allow the get method to determine
			// which value to return, respectively either:
			//
			//   1. The entire cache object
			//   2. The data stored at the key
			//
			if (
				key === undefined ||
				(key && typeof key === 'string' && value === undefined)
			) {
				return this.get(owner, key);
			}

			// When the key is not a string, or both a key and value
			// are specified, set or extend (existing objects) with either:
			//
			//   1. An object of properties
			//   2. A key and value
			//
			this.set(owner, key, value);

			// Since the "set" path can have two possible entry points
			// return the expected data based on which path was taken[*]
			return value !== undefined ? value : key;
		},
		remove: function (owner, key) {
			var i,
				cache = owner[this.expando];

			if (cache === undefined) {
				return;
			}

			if (key !== undefined) {
				// Support array or space separated string of keys
				if (Array.isArray(key)) {
					// If key is an array of keys...
					// We always set camelCase keys, so remove that.
					key = key.map(camelCase);
				} else {
					key = camelCase(key);

					// If a key with the spaces exists, use it.
					// Otherwise, create an array by matching non-whitespace
					key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
				}

				i = key.length;

				while (i--) {
					delete cache[key[i]];
				}
			}

			// Remove the expando if there's no more data
			if (key === undefined || jQuery.isEmptyObject(cache)) {
				// Support: Chrome <=35 - 45
				// Webkit & Blink performance suffers when deleting properties
				// from DOM nodes, so set to undefined instead
				// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
				if (owner.nodeType) {
					owner[this.expando] = undefined;
				} else {
					delete owner[this.expando];
				}
			}
		},
		hasData: function (owner) {
			var cache = owner[this.expando];
			return cache !== undefined && !jQuery.isEmptyObject(cache);
		},
	};
	var dataPriv = new Data();

	var dataUser = new Data();

	//	Implementation Summary
	//
	//	1. Enforce API surface and semantic compatibility with 1.9.x branch
	//	2. Improve the module's maintainability by reducing the storage
	//		paths to a single mechanism.
	//	3. Use the same single mechanism to support "private" and "user" data.
	//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	//	5. Avoid exposing implementation details on user objects (eg. expando properties)
	//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

	var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
		rmultiDash = /[A-Z]/g;

	function getData(data) {
		if (data === 'true') {
			return true;
		}

		if (data === 'false') {
			return false;
		}

		if (data === 'null') {
			return null;
		}

		// Only convert to a number if it doesn't change the string
		if (data === +data + '') {
			return +data;
		}

		if (rbrace.test(data)) {
			return JSON.parse(data);
		}

		return data;
	}

	function dataAttr(elem, key, data) {
		var name;

		// If nothing was found internally, try to fetch any
		// data from the HTML5 data-* attribute
		if (data === undefined && elem.nodeType === 1) {
			name = 'data-' + key.replace(rmultiDash, '-$&').toLowerCase();
			data = elem.getAttribute(name);

			if (typeof data === 'string') {
				try {
					data = getData(data);
				} catch (e) {}

				// Make sure we set the data so it isn't changed later
				dataUser.set(elem, key, data);
			} else {
				data = undefined;
			}
		}
		return data;
	}

	jQuery.extend({
		hasData: function (elem) {
			return dataUser.hasData(elem) || dataPriv.hasData(elem);
		},

		data: function (elem, name, data) {
			return dataUser.access(elem, name, data);
		},

		removeData: function (elem, name) {
			dataUser.remove(elem, name);
		},

		// TODO: Now that all calls to _data and _removeData have been replaced
		// with direct calls to dataPriv methods, these can be deprecated.
		_data: function (elem, name, data) {
			return dataPriv.access(elem, name, data);
		},

		_removeData: function (elem, name) {
			dataPriv.remove(elem, name);
		},
	});

	jQuery.fn.extend({
		data: function (key, value) {
			var i,
				name,
				data,
				elem = this[0],
				attrs = elem && elem.attributes;

			// Gets all values
			if (key === undefined) {
				if (this.length) {
					data = dataUser.get(elem);

					if (elem.nodeType === 1 && !dataPriv.get(elem, 'hasDataAttrs')) {
						i = attrs.length;
						while (i--) {
							// Support: IE 11 only
							// The attrs elements can be null (#14894)
							if (attrs[i]) {
								name = attrs[i].name;
								if (name.indexOf('data-') === 0) {
									name = camelCase(name.slice(5));
									dataAttr(elem, name, data[name]);
								}
							}
						}
						dataPriv.set(elem, 'hasDataAttrs', true);
					}
				}

				return data;
			}

			// Sets multiple values
			if (typeof key === 'object') {
				return this.each(function () {
					dataUser.set(this, key);
				});
			}

			return access(
				this,
				function (value) {
					var data;

					// The calling jQuery object (element matches) is not empty
					// (and therefore has an element appears at this[ 0 ]) and the
					// `value` parameter was not undefined. An empty jQuery object
					// will result in `undefined` for elem = this[ 0 ] which will
					// throw an exception if an attempt to read a data cache is made.
					if (elem && value === undefined) {
						// Attempt to get data from the cache
						// The key will always be camelCased in Data
						data = dataUser.get(elem, key);
						if (data !== undefined) {
							return data;
						}

						// Attempt to "discover" the data in
						// HTML5 custom data-* attrs
						data = dataAttr(elem, key);
						if (data !== undefined) {
							return data;
						}

						// We tried really hard, but the data doesn't exist.
						return;
					}

					// Set the data...
					this.each(function () {
						// We always store the camelCased key
						dataUser.set(this, key, value);
					});
				},
				null,
				value,
				arguments.length > 1,
				null,
				true
			);
		},

		removeData: function (key) {
			return this.each(function () {
				dataUser.remove(this, key);
			});
		},
	});

	jQuery.extend({
		queue: function (elem, type, data) {
			var queue;

			if (elem) {
				type = (type || 'fx') + 'queue';
				queue = dataPriv.get(elem, type);

				// Speed up dequeue by getting out quickly if this is just a lookup
				if (data) {
					if (!queue || Array.isArray(data)) {
						queue = dataPriv.access(elem, type, jQuery.makeArray(data));
					} else {
						queue.push(data);
					}
				}
				return queue || [];
			}
		},

		dequeue: function (elem, type) {
			type = type || 'fx';

			var queue = jQuery.queue(elem, type),
				startLength = queue.length,
				fn = queue.shift(),
				hooks = jQuery._queueHooks(elem, type),
				next = function () {
					jQuery.dequeue(elem, type);
				};

			// If the fx queue is dequeued, always remove the progress sentinel
			if (fn === 'inprogress') {
				fn = queue.shift();
				startLength--;
			}

			if (fn) {
				// Add a progress sentinel to prevent the fx queue from being
				// automatically dequeued
				if (type === 'fx') {
					queue.unshift('inprogress');
				}

				// Clear up the last queue stop function
				delete hooks.stop;
				fn.call(elem, next, hooks);
			}

			if (!startLength && hooks) {
				hooks.empty.fire();
			}
		},

		// Not public - generate a queueHooks object, or return the current one
		_queueHooks: function (elem, type) {
			var key = type + 'queueHooks';
			return (
				dataPriv.get(elem, key) ||
				dataPriv.access(elem, key, {
					empty: jQuery.Callbacks('once memory').add(function () {
						dataPriv.remove(elem, [type + 'queue', key]);
					}),
				})
			);
		},
	});

	jQuery.fn.extend({
		queue: function (type, data) {
			var setter = 2;

			if (typeof type !== 'string') {
				data = type;
				type = 'fx';
				setter--;
			}

			if (arguments.length < setter) {
				return jQuery.queue(this[0], type);
			}

			return data === undefined
				? this
				: this.each(function () {
						var queue = jQuery.queue(this, type, data);

						// Ensure a hooks for this queue
						jQuery._queueHooks(this, type);

						if (type === 'fx' && queue[0] !== 'inprogress') {
							jQuery.dequeue(this, type);
						}
				  });
		},
		dequeue: function (type) {
			return this.each(function () {
				jQuery.dequeue(this, type);
			});
		},
		clearQueue: function (type) {
			return this.queue(type || 'fx', []);
		},

		// Get a promise resolved when queues of a certain type
		// are emptied (fx is the type by default)
		promise: function (type, obj) {
			var tmp,
				count = 1,
				defer = jQuery.Deferred(),
				elements = this,
				i = this.length,
				resolve = function () {
					if (!--count) {
						defer.resolveWith(elements, [elements]);
					}
				};

			if (typeof type !== 'string') {
				obj = type;
				type = undefined;
			}
			type = type || 'fx';

			while (i--) {
				tmp = dataPriv.get(elements[i], type + 'queueHooks');
				if (tmp && tmp.empty) {
					count++;
					tmp.empty.add(resolve);
				}
			}
			resolve();
			return defer.promise(obj);
		},
	});
	var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;

	var rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i');

	var cssExpand = ['Top', 'Right', 'Bottom', 'Left'];

	var documentElement = document.documentElement;

	var isAttached = function (elem) {
			return jQuery.contains(elem.ownerDocument, elem);
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if (documentElement.getRootNode) {
		isAttached = function (elem) {
			return (
				jQuery.contains(elem.ownerDocument, elem) ||
				elem.getRootNode(composed) === elem.ownerDocument
			);
		};
	}
	var isHiddenWithinTree = function (elem, el) {
		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return (
			elem.style.display === 'none' ||
			(elem.style.display === '' &&
				// Otherwise, check computed style
				// Support: Firefox <=43 - 45
				// Disconnected elements can have computed display: none, so first confirm that elem is
				// in the document.
				isAttached(elem) &&
				jQuery.css(elem, 'display') === 'none')
		);
	};

	function adjustCSS(elem, prop, valueParts, tween) {
		var adjusted,
			scale,
			maxIterations = 20,
			currentValue = tween
				? function () {
						return tween.cur();
				  }
				: function () {
						return jQuery.css(elem, prop, '');
				  },
			initial = currentValue(),
			unit =
				(valueParts && valueParts[3]) || (jQuery.cssNumber[prop] ? '' : 'px'),
			// Starting value computation is required for potential unit mismatches
			initialInUnit =
				elem.nodeType &&
				(jQuery.cssNumber[prop] || (unit !== 'px' && +initial)) &&
				rcssNum.exec(jQuery.css(elem, prop));

		if (initialInUnit && initialInUnit[3] !== unit) {
			// Support: Firefox <=54
			// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
			initial = initial / 2;

			// Trust units reported by jQuery.css
			unit = unit || initialInUnit[3];

			// Iteratively approximate from a nonzero starting point
			initialInUnit = +initial || 1;

			while (maxIterations--) {
				// Evaluate and update our best guess (doubling guesses that zero out).
				// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
				jQuery.style(elem, prop, initialInUnit + unit);
				if (
					(1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <=
					0
				) {
					maxIterations = 0;
				}
				initialInUnit = initialInUnit / scale;
			}

			initialInUnit = initialInUnit * 2;
			jQuery.style(elem, prop, initialInUnit + unit);

			// Make sure we update the tween properties later on
			valueParts = valueParts || [];
		}

		if (valueParts) {
			initialInUnit = +initialInUnit || +initial || 0;

			// Apply relative offset (+=/-=) if specified
			adjusted = valueParts[1]
				? initialInUnit + (valueParts[1] + 1) * valueParts[2]
				: +valueParts[2];
			if (tween) {
				tween.unit = unit;
				tween.start = initialInUnit;
				tween.end = adjusted;
			}
		}
		return adjusted;
	}

	var defaultDisplayMap = {};

	function getDefaultDisplay(elem) {
		var temp,
			doc = elem.ownerDocument,
			nodeName = elem.nodeName,
			display = defaultDisplayMap[nodeName];

		if (display) {
			return display;
		}

		temp = doc.body.appendChild(doc.createElement(nodeName));
		display = jQuery.css(temp, 'display');

		temp.parentNode.removeChild(temp);

		if (display === 'none') {
			display = 'block';
		}
		defaultDisplayMap[nodeName] = display;

		return display;
	}

	function showHide(elements, show) {
		var display,
			elem,
			values = [],
			index = 0,
			length = elements.length;

		// Determine new display value for elements that need to change
		for (; index < length; index++) {
			elem = elements[index];
			if (!elem.style) {
				continue;
			}

			display = elem.style.display;
			if (show) {
				// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
				// check is required in this first loop unless we have a nonempty display value (either
				// inline or about-to-be-restored)
				if (display === 'none') {
					values[index] = dataPriv.get(elem, 'display') || null;
					if (!values[index]) {
						elem.style.display = '';
					}
				}
				if (elem.style.display === '' && isHiddenWithinTree(elem)) {
					values[index] = getDefaultDisplay(elem);
				}
			} else {
				if (display !== 'none') {
					values[index] = 'none';

					// Remember what we're overwriting
					dataPriv.set(elem, 'display', display);
				}
			}
		}

		// Set the display of the elements in a second loop to avoid constant reflow
		for (index = 0; index < length; index++) {
			if (values[index] != null) {
				elements[index].style.display = values[index];
			}
		}

		return elements;
	}

	jQuery.fn.extend({
		show: function () {
			return showHide(this, true);
		},
		hide: function () {
			return showHide(this);
		},
		toggle: function (state) {
			if (typeof state === 'boolean') {
				return state ? this.show() : this.hide();
			}

			return this.each(function () {
				if (isHiddenWithinTree(this)) {
					jQuery(this).show();
				} else {
					jQuery(this).hide();
				}
			});
		},
	});
	var rcheckableType = /^(?:checkbox|radio)$/i;

	var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;

	var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;

	(function () {
		var fragment = document.createDocumentFragment(),
			div = fragment.appendChild(document.createElement('div')),
			input = document.createElement('input');

		// Support: Android 4.0 - 4.3 only
		// Check state lost if the name is set (#11217)
		// Support: Windows Web Apps (WWA)
		// `name` and `type` must use .setAttribute for WWA (#14901)
		input.setAttribute('type', 'radio');
		input.setAttribute('checked', 'checked');
		input.setAttribute('name', 't');

		div.appendChild(input);

		// Support: Android <=4.1 only
		// Older WebKit doesn't clone checked state correctly in fragments
		support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;

		// Support: IE <=11 only
		// Make sure textarea (and checkbox) defaultValue is properly cloned
		div.innerHTML = '<textarea>x</textarea>';
		support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;

		// Support: IE <=9 only
		// IE <=9 replaces <option> tags with their contents when inserted outside of
		// the select element.
		div.innerHTML = '<option></option>';
		support.option = !!div.lastChild;
	})();

	// We have to close these tags to support XHTML (#13200)
	var wrapMap = {
		// XHTML parsers do not magically insert elements in the
		// same way that tag soup parsers do. So we cannot shorten
		// this by omitting <tbody> or other required elements.
		thead: [1, '<table>', '</table>'],
		col: [2, '<table><colgroup>', '</colgroup></table>'],
		tr: [2, '<table><tbody>', '</tbody></table>'],
		td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],

		_default: [0, '', ''],
	};

	wrapMap.tbody =
		wrapMap.tfoot =
		wrapMap.colgroup =
		wrapMap.caption =
			wrapMap.thead;
	wrapMap.th = wrapMap.td;

	// Support: IE <=9 only
	if (!support.option) {
		wrapMap.optgroup = wrapMap.option = [
			1,
			"<select multiple='multiple'>",
			'</select>',
		];
	}

	function getAll(context, tag) {
		// Support: IE <=9 - 11 only
		// Use typeof to avoid zero-argument method invocation on host objects (#15151)
		var ret;

		if (typeof context.getElementsByTagName !== 'undefined') {
			ret = context.getElementsByTagName(tag || '*');
		} else if (typeof context.querySelectorAll !== 'undefined') {
			ret = context.querySelectorAll(tag || '*');
		} else {
			ret = [];
		}

		if (tag === undefined || (tag && nodeName(context, tag))) {
			return jQuery.merge([context], ret);
		}

		return ret;
	}

	// Mark scripts as having already been evaluated
	function setGlobalEval(elems, refElements) {
		var i = 0,
			l = elems.length;

		for (; i < l; i++) {
			dataPriv.set(
				elems[i],
				'globalEval',
				!refElements || dataPriv.get(refElements[i], 'globalEval')
			);
		}
	}

	var rhtml = /<|&#?\w+;/;

	function buildFragment(elems, context, scripts, selection, ignored) {
		var elem,
			tmp,
			tag,
			wrap,
			attached,
			j,
			fragment = context.createDocumentFragment(),
			nodes = [],
			i = 0,
			l = elems.length;

		for (; i < l; i++) {
			elem = elems[i];

			if (elem || elem === 0) {
				// Add nodes directly
				if (toType(elem) === 'object') {
					// Support: Android <=4.0 only, PhantomJS 1 only
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge(nodes, elem.nodeType ? [elem] : elem);

					// Convert non-html into a text node
				} else if (!rhtml.test(elem)) {
					nodes.push(context.createTextNode(elem));

					// Convert html into DOM nodes
				} else {
					tmp = tmp || fragment.appendChild(context.createElement('div'));

					// Deserialize a standard representation
					tag = (rtagName.exec(elem) || ['', ''])[1].toLowerCase();
					wrap = wrapMap[tag] || wrapMap._default;
					tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];

					// Descend through wrappers to the right content
					j = wrap[0];
					while (j--) {
						tmp = tmp.lastChild;
					}

					// Support: Android <=4.0 only, PhantomJS 1 only
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge(nodes, tmp.childNodes);

					// Remember the top-level container
					tmp = fragment.firstChild;

					// Ensure the created nodes are orphaned (#12392)
					tmp.textContent = '';
				}
			}
		}

		// Remove wrapper from fragment
		fragment.textContent = '';

		i = 0;
		while ((elem = nodes[i++])) {
			// Skip elements already in the context collection (trac-4087)
			if (selection && jQuery.inArray(elem, selection) > -1) {
				if (ignored) {
					ignored.push(elem);
				}
				continue;
			}

			attached = isAttached(elem);

			// Append to fragment
			tmp = getAll(fragment.appendChild(elem), 'script');

			// Preserve script evaluation history
			if (attached) {
				setGlobalEval(tmp);
			}

			// Capture executables
			if (scripts) {
				j = 0;
				while ((elem = tmp[j++])) {
					if (rscriptType.test(elem.type || '')) {
						scripts.push(elem);
					}
				}
			}
		}

		return fragment;
	}

	var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

	function returnTrue() {
		return true;
	}

	function returnFalse() {
		return false;
	}

	// Support: IE <=9 - 11+
	// focus() and blur() are asynchronous, except when they are no-op.
	// So expect focus to be synchronous when the element is already active,
	// and blur to be synchronous when the element is not already active.
	// (focus and blur are always synchronous in other supported browsers,
	// this just defines when we can count on it).
	function expectSync(elem, type) {
		return (elem === safeActiveElement()) === (type === 'focus');
	}

	// Support: IE <=9 only
	// Accessing document.activeElement can throw unexpectedly
	// https://bugs.jquery.com/ticket/13393
	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch (err) {}
	}

	function on(elem, types, selector, data, fn, one) {
		var origFn, type;

		// Types can be a map of types/handlers
		if (typeof types === 'object') {
			// ( types-Object, selector, data )
			if (typeof selector !== 'string') {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for (type in types) {
				on(elem, type, selector, data, types[type], one);
			}
			return elem;
		}

		if (data == null && fn == null) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if (fn == null) {
			if (typeof selector === 'string') {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if (fn === false) {
			fn = returnFalse;
		} else if (!fn) {
			return elem;
		}

		if (one === 1) {
			origFn = fn;
			fn = function (event) {
				// Can use an empty set, since event contains the info
				jQuery().off(event);
				return origFn.apply(this, arguments);
			};

			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
		}
		return elem.each(function () {
			jQuery.event.add(this, types, fn, data, selector);
		});
	}

	/*
	 * Helper functions for managing events -- not part of the public interface.
	 * Props to Dean Edwards' addEvent library for many of the ideas.
	 */
	jQuery.event = {
		global: {},

		add: function (elem, types, handler, data, selector) {
			var handleObjIn,
				eventHandle,
				tmp,
				events,
				t,
				handleObj,
				special,
				handlers,
				type,
				namespaces,
				origType,
				elemData = dataPriv.get(elem);

			// Only attach events to objects that accept data
			if (!acceptData(elem)) {
				return;
			}

			// Caller can pass in an object of custom data in lieu of the handler
			if (handler.handler) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}

			// Ensure that invalid selectors throw exceptions at attach time
			// Evaluate against documentElement in case elem is a non-element node (e.g., document)
			if (selector) {
				jQuery.find.matchesSelector(documentElement, selector);
			}

			// Make sure that the handler has a unique ID, used to find/remove it later
			if (!handler.guid) {
				handler.guid = jQuery.guid++;
			}

			// Init the element's event structure and main handler, if this is the first
			if (!(events = elemData.events)) {
				events = elemData.events = Object.create(null);
			}
			if (!(eventHandle = elemData.handle)) {
				eventHandle = elemData.handle = function (e) {
					// Discard the second event of a jQuery.event.trigger() and
					// when an event is called after a page has unloaded
					return typeof jQuery !== 'undefined' &&
						jQuery.event.triggered !== e.type
						? jQuery.event.dispatch.apply(elem, arguments)
						: undefined;
				};
			}

			// Handle multiple events separated by a space
			types = (types || '').match(rnothtmlwhite) || [''];
			t = types.length;
			while (t--) {
				tmp = rtypenamespace.exec(types[t]) || [];
				type = origType = tmp[1];
				namespaces = (tmp[2] || '').split('.').sort();

				// There *must* be a type, no attaching namespace-only handlers
				if (!type) {
					continue;
				}

				// If event changes its type, use the special event handlers for the changed type
				special = jQuery.event.special[type] || {};

				// If selector defined, determine special event api type, otherwise given type
				type = (selector ? special.delegateType : special.bindType) || type;

				// Update special based on newly reset type
				special = jQuery.event.special[type] || {};

				// handleObj is passed to all event handlers
				handleObj = jQuery.extend(
					{
						type: type,
						origType: origType,
						data: data,
						handler: handler,
						guid: handler.guid,
						selector: selector,
						needsContext:
							selector && jQuery.expr.match.needsContext.test(selector),
						namespace: namespaces.join('.'),
					},
					handleObjIn
				);

				// Init the event handler queue if we're the first
				if (!(handlers = events[type])) {
					handlers = events[type] = [];
					handlers.delegateCount = 0;

					// Only use addEventListener if the special events handler returns false
					if (
						!special.setup ||
						special.setup.call(elem, data, namespaces, eventHandle) === false
					) {
						if (elem.addEventListener) {
							elem.addEventListener(type, eventHandle);
						}
					}
				}

				if (special.add) {
					special.add.call(elem, handleObj);

					if (!handleObj.handler.guid) {
						handleObj.handler.guid = handler.guid;
					}
				}

				// Add to the element's handler list, delegates in front
				if (selector) {
					handlers.splice(handlers.delegateCount++, 0, handleObj);
				} else {
					handlers.push(handleObj);
				}

				// Keep track of which events have ever been used, for event optimization
				jQuery.event.global[type] = true;
			}
		},

		// Detach an event or set of events from an element
		remove: function (elem, types, handler, selector, mappedTypes) {
			var j,
				origCount,
				tmp,
				events,
				t,
				handleObj,
				special,
				handlers,
				type,
				namespaces,
				origType,
				elemData = dataPriv.hasData(elem) && dataPriv.get(elem);

			if (!elemData || !(events = elemData.events)) {
				return;
			}

			// Once for each type.namespace in types; type may be omitted
			types = (types || '').match(rnothtmlwhite) || [''];
			t = types.length;
			while (t--) {
				tmp = rtypenamespace.exec(types[t]) || [];
				type = origType = tmp[1];
				namespaces = (tmp[2] || '').split('.').sort();

				// Unbind all events (on this namespace, if provided) for the element
				if (!type) {
					for (type in events) {
						jQuery.event.remove(elem, type + types[t], handler, selector, true);
					}
					continue;
				}

				special = jQuery.event.special[type] || {};
				type = (selector ? special.delegateType : special.bindType) || type;
				handlers = events[type] || [];
				tmp =
					tmp[2] &&
					new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)');

				// Remove matching events
				origCount = j = handlers.length;
				while (j--) {
					handleObj = handlers[j];

					if (
						(mappedTypes || origType === handleObj.origType) &&
						(!handler || handler.guid === handleObj.guid) &&
						(!tmp || tmp.test(handleObj.namespace)) &&
						(!selector ||
							selector === handleObj.selector ||
							(selector === '**' && handleObj.selector))
					) {
						handlers.splice(j, 1);

						if (handleObj.selector) {
							handlers.delegateCount--;
						}
						if (special.remove) {
							special.remove.call(elem, handleObj);
						}
					}
				}

				// Remove generic event handler if we removed something and no more handlers exist
				// (avoids potential for endless recursion during removal of special event handlers)
				if (origCount && !handlers.length) {
					if (
						!special.teardown ||
						special.teardown.call(elem, namespaces, elemData.handle) === false
					) {
						jQuery.removeEvent(elem, type, elemData.handle);
					}

					delete events[type];
				}
			}

			// Remove data and the expando if it's no longer used
			if (jQuery.isEmptyObject(events)) {
				dataPriv.remove(elem, 'handle events');
			}
		},

		dispatch: function (nativeEvent) {
			var i,
				j,
				ret,
				matched,
				handleObj,
				handlerQueue,
				args = new Array(arguments.length),
				// Make a writable jQuery.Event from the native event object
				event = jQuery.event.fix(nativeEvent),
				handlers =
					(dataPriv.get(this, 'events') || Object.create(null))[event.type] ||
					[],
				special = jQuery.event.special[event.type] || {};

			// Use the fix-ed jQuery.Event rather than the (read-only) native event
			args[0] = event;

			for (i = 1; i < arguments.length; i++) {
				args[i] = arguments[i];
			}

			event.delegateTarget = this;

			// Call the preDispatch hook for the mapped type, and let it bail if desired
			if (
				special.preDispatch &&
				special.preDispatch.call(this, event) === false
			) {
				return;
			}

			// Determine handlers
			handlerQueue = jQuery.event.handlers.call(this, event, handlers);

			// Run delegates first; they may want to stop propagation beneath us
			i = 0;
			while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
				event.currentTarget = matched.elem;

				j = 0;
				while (
					(handleObj = matched.handlers[j++]) &&
					!event.isImmediatePropagationStopped()
				) {
					// If the event is namespaced, then each handler is only invoked if it is
					// specially universal or its namespaces are a superset of the event's.
					if (
						!event.rnamespace ||
						handleObj.namespace === false ||
						event.rnamespace.test(handleObj.namespace)
					) {
						event.handleObj = handleObj;
						event.data = handleObj.data;

						ret = (
							(jQuery.event.special[handleObj.origType] || {}).handle ||
							handleObj.handler
						).apply(matched.elem, args);

						if (ret !== undefined) {
							if ((event.result = ret) === false) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}

			// Call the postDispatch hook for the mapped type
			if (special.postDispatch) {
				special.postDispatch.call(this, event);
			}

			return event.result;
		},

		handlers: function (event, handlers) {
			var i,
				handleObj,
				sel,
				matchedHandlers,
				matchedSelectors,
				handlerQueue = [],
				delegateCount = handlers.delegateCount,
				cur = event.target;

			// Find delegate handlers
			if (
				delegateCount &&
				// Support: IE <=9
				// Black-hole SVG <use> instance trees (trac-13180)
				cur.nodeType &&
				// Support: Firefox <=42
				// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
				// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
				// Support: IE 11 only
				// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
				!(event.type === 'click' && event.button >= 1)
			) {
				for (; cur !== this; cur = cur.parentNode || this) {
					// Don't check non-elements (#13208)
					// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
					if (
						cur.nodeType === 1 &&
						!(event.type === 'click' && cur.disabled === true)
					) {
						matchedHandlers = [];
						matchedSelectors = {};
						for (i = 0; i < delegateCount; i++) {
							handleObj = handlers[i];

							// Don't conflict with Object.prototype properties (#13203)
							sel = handleObj.selector + ' ';

							if (matchedSelectors[sel] === undefined) {
								matchedSelectors[sel] = handleObj.needsContext
									? jQuery(sel, this).index(cur) > -1
									: jQuery.find(sel, this, null, [cur]).length;
							}
							if (matchedSelectors[sel]) {
								matchedHandlers.push(handleObj);
							}
						}
						if (matchedHandlers.length) {
							handlerQueue.push({ elem: cur, handlers: matchedHandlers });
						}
					}
				}
			}

			// Add the remaining (directly-bound) handlers
			cur = this;
			if (delegateCount < handlers.length) {
				handlerQueue.push({
					elem: cur,
					handlers: handlers.slice(delegateCount),
				});
			}

			return handlerQueue;
		},

		addProp: function (name, hook) {
			Object.defineProperty(jQuery.Event.prototype, name, {
				enumerable: true,
				configurable: true,

				get: isFunction(hook)
					? function () {
							if (this.originalEvent) {
								return hook(this.originalEvent);
							}
					  }
					: function () {
							if (this.originalEvent) {
								return this.originalEvent[name];
							}
					  },

				set: function (value) {
					Object.defineProperty(this, name, {
						enumerable: true,
						configurable: true,
						writable: true,
						value: value,
					});
				},
			});
		},

		fix: function (originalEvent) {
			return originalEvent[jQuery.expando]
				? originalEvent
				: new jQuery.Event(originalEvent);
		},

		special: {
			load: {
				// Prevent triggered image.load events from bubbling to window.load
				noBubble: true,
			},
			click: {
				// Utilize native event to ensure correct state for checkable inputs
				setup: function (data) {
					// For mutual compressibility with _default, replace `this` access with a local var.
					// `|| data` is dead code meant only to preserve the variable through minification.
					var el = this || data;

					// Claim the first handler
					if (
						rcheckableType.test(el.type) &&
						el.click &&
						nodeName(el, 'input')
					) {
						// dataPriv.set( el, "click", ... )
						leverageNative(el, 'click', returnTrue);
					}

					// Return false to allow normal processing in the caller
					return false;
				},
				trigger: function (data) {
					// For mutual compressibility with _default, replace `this` access with a local var.
					// `|| data` is dead code meant only to preserve the variable through minification.
					var el = this || data;

					// Force setup before triggering a click
					if (
						rcheckableType.test(el.type) &&
						el.click &&
						nodeName(el, 'input')
					) {
						leverageNative(el, 'click');
					}

					// Return non-false to allow normal event-path propagation
					return true;
				},

				// For cross-browser consistency, suppress native .click() on links
				// Also prevent it if we're currently inside a leveraged native-event stack
				_default: function (event) {
					var target = event.target;
					return (
						(rcheckableType.test(target.type) &&
							target.click &&
							nodeName(target, 'input') &&
							dataPriv.get(target, 'click')) ||
						nodeName(target, 'a')
					);
				},
			},

			beforeunload: {
				postDispatch: function (event) {
					// Support: Firefox 20+
					// Firefox doesn't alert if the returnValue field is not set.
					if (event.result !== undefined && event.originalEvent) {
						event.originalEvent.returnValue = event.result;
					}
				},
			},
		},
	};

	// Ensure the presence of an event listener that handles manually-triggered
	// synthetic events by interrupting progress until reinvoked in response to
	// *native* events that it fires directly, ensuring that state changes have
	// already occurred before other listeners are invoked.
	function leverageNative(el, type, expectSync) {
		// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
		if (!expectSync) {
			if (dataPriv.get(el, type) === undefined) {
				jQuery.event.add(el, type, returnTrue);
			}
			return;
		}

		// Register the controller as a special universal handler for all event namespaces
		dataPriv.set(el, type, false);
		jQuery.event.add(el, type, {
			namespace: false,
			handler: function (event) {
				var notAsync,
					result,
					saved = dataPriv.get(this, type);

				if (event.isTrigger & 1 && this[type]) {
					// Interrupt processing of the outer synthetic .trigger()ed event
					// Saved data should be false in such cases, but might be a leftover capture object
					// from an async native handler (gh-4350)
					if (!saved.length) {
						// Store arguments for use when handling the inner native event
						// There will always be at least one argument (an event object), so this array
						// will not be confused with a leftover capture object.
						saved = slice.call(arguments);
						dataPriv.set(this, type, saved);

						// Trigger the native event and capture its result
						// Support: IE <=9 - 11+
						// focus() and blur() are asynchronous
						notAsync = expectSync(this, type);
						this[type]();
						result = dataPriv.get(this, type);
						if (saved !== result || notAsync) {
							dataPriv.set(this, type, false);
						} else {
							result = {};
						}
						if (saved !== result) {
							// Cancel the outer synthetic event
							event.stopImmediatePropagation();
							event.preventDefault();

							// Support: Chrome 86+
							// In Chrome, if an element having a focusout handler is blurred by
							// clicking outside of it, it invokes the handler synchronously. If
							// that handler calls `.remove()` on the element, the data is cleared,
							// leaving `result` undefined. We need to guard against this.
							return result && result.value;
						}

						// If this is an inner synthetic event for an event with a bubbling surrogate
						// (focus or blur), assume that the surrogate already propagated from triggering the
						// native event and prevent that from happening again here.
						// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
						// bubbling surrogate propagates *after* the non-bubbling base), but that seems
						// less bad than duplication.
					} else if ((jQuery.event.special[type] || {}).delegateType) {
						event.stopPropagation();
					}

					// If this is a native event triggered above, everything is now in order
					// Fire an inner synthetic event with the original arguments
				} else if (saved.length) {
					// ...and capture the result
					dataPriv.set(this, type, {
						value: jQuery.event.trigger(
							// Support: IE <=9 - 11+
							// Extend with the prototype to reset the above stopImmediatePropagation()
							jQuery.extend(saved[0], jQuery.Event.prototype),
							saved.slice(1),
							this
						),
					});

					// Abort handling of the native event
					event.stopImmediatePropagation();
				}
			},
		});
	}

	jQuery.removeEvent = function (elem, type, handle) {
		// This "if" is needed for plain objects
		if (elem.removeEventListener) {
			elem.removeEventListener(type, handle);
		}
	};

	jQuery.Event = function (src, props) {
		// Allow instantiation without the 'new' keyword
		if (!(this instanceof jQuery.Event)) {
			return new jQuery.Event(src, props);
		}

		// Event object
		if (src && src.type) {
			this.originalEvent = src;
			this.type = src.type;

			// Events bubbling up the document may have been marked as prevented
			// by a handler lower down the tree; reflect the correct value.
			this.isDefaultPrevented =
				src.defaultPrevented ||
				(src.defaultPrevented === undefined &&
					// Support: Android <=2.3 only
					src.returnValue === false)
					? returnTrue
					: returnFalse;

			// Create target properties
			// Support: Safari <=6 - 7 only
			// Target should not be a text node (#504, #13143)
			this.target =
				src.target && src.target.nodeType === 3
					? src.target.parentNode
					: src.target;

			this.currentTarget = src.currentTarget;
			this.relatedTarget = src.relatedTarget;

			// Event type
		} else {
			this.type = src;
		}

		// Put explicitly provided properties onto the event object
		if (props) {
			jQuery.extend(this, props);
		}

		// Create a timestamp if incoming event doesn't have one
		this.timeStamp = (src && src.timeStamp) || Date.now();

		// Mark it as fixed
		this[jQuery.expando] = true;
	};

	// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
	// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	jQuery.Event.prototype = {
		constructor: jQuery.Event,
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,
		isSimulated: false,

		preventDefault: function () {
			var e = this.originalEvent;

			this.isDefaultPrevented = returnTrue;

			if (e && !this.isSimulated) {
				e.preventDefault();
			}
		},
		stopPropagation: function () {
			var e = this.originalEvent;

			this.isPropagationStopped = returnTrue;

			if (e && !this.isSimulated) {
				e.stopPropagation();
			}
		},
		stopImmediatePropagation: function () {
			var e = this.originalEvent;

			this.isImmediatePropagationStopped = returnTrue;

			if (e && !this.isSimulated) {
				e.stopImmediatePropagation();
			}

			this.stopPropagation();
		},
	};

	// Includes all common event props including KeyEvent and MouseEvent specific props
	jQuery.each(
		{
			altKey: true,
			bubbles: true,
			cancelable: true,
			changedTouches: true,
			ctrlKey: true,
			detail: true,
			eventPhase: true,
			metaKey: true,
			pageX: true,
			pageY: true,
			shiftKey: true,
			view: true,
			char: true,
			code: true,
			charCode: true,
			key: true,
			keyCode: true,
			button: true,
			buttons: true,
			clientX: true,
			clientY: true,
			offsetX: true,
			offsetY: true,
			pointerId: true,
			pointerType: true,
			screenX: true,
			screenY: true,
			targetTouches: true,
			toElement: true,
			touches: true,
			which: true,
		},
		jQuery.event.addProp
	);

	jQuery.each(
		{ focus: 'focusin', blur: 'focusout' },
		function (type, delegateType) {
			jQuery.event.special[type] = {
				// Utilize native event if possible so blur/focus sequence is correct
				setup: function () {
					// Claim the first handler
					// dataPriv.set( this, "focus", ... )
					// dataPriv.set( this, "blur", ... )
					leverageNative(this, type, expectSync);

					// Return false to allow normal processing in the caller
					return false;
				},
				trigger: function () {
					// Force setup before trigger
					leverageNative(this, type);

					// Return non-false to allow normal event-path propagation
					return true;
				},

				// Suppress native focus or blur as it's already being fired
				// in leverageNative.
				_default: function () {
					return true;
				},

				delegateType: delegateType,
			};
		}
	);

	// Create mouseenter/leave events using mouseover/out and event-time checks
	// so that event delegation works in jQuery.
	// Do the same for pointerenter/pointerleave and pointerover/pointerout
	//
	// Support: Safari 7 only
	// Safari sends mouseenter too often; see:
	// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
	// for the description of the bug (it existed in older Chrome versions as well).
	jQuery.each(
		{
			mouseenter: 'mouseover',
			mouseleave: 'mouseout',
			pointerenter: 'pointerover',
			pointerleave: 'pointerout',
		},
		function (orig, fix) {
			jQuery.event.special[orig] = {
				delegateType: fix,
				bindType: fix,

				handle: function (event) {
					var ret,
						target = this,
						related = event.relatedTarget,
						handleObj = event.handleObj;

					// For mouseenter/leave call the handler if related is outside the target.
					// NB: No relatedTarget if the mouse left/entered the browser window
					if (
						!related ||
						(related !== target && !jQuery.contains(target, related))
					) {
						event.type = handleObj.origType;
						ret = handleObj.handler.apply(this, arguments);
						event.type = fix;
					}
					return ret;
				},
			};
		}
	);

	jQuery.fn.extend({
		on: function (types, selector, data, fn) {
			return on(this, types, selector, data, fn);
		},
		one: function (types, selector, data, fn) {
			return on(this, types, selector, data, fn, 1);
		},
		off: function (types, selector, fn) {
			var handleObj, type;
			if (types && types.preventDefault && types.handleObj) {
				// ( event )  dispatched jQuery.Event
				handleObj = types.handleObj;
				jQuery(types.delegateTarget).off(
					handleObj.namespace
						? handleObj.origType + '.' + handleObj.namespace
						: handleObj.origType,
					handleObj.selector,
					handleObj.handler
				);
				return this;
			}
			if (typeof types === 'object') {
				// ( types-object [, selector] )
				for (type in types) {
					this.off(type, selector, types[type]);
				}
				return this;
			}
			if (selector === false || typeof selector === 'function') {
				// ( types [, fn] )
				fn = selector;
				selector = undefined;
			}
			if (fn === false) {
				fn = returnFalse;
			}
			return this.each(function () {
				jQuery.event.remove(this, types, fn, selector);
			});
		},
	});

	var // Support: IE <=10 - 11, Edge 12 - 13 only
		// In IE/Edge using regex groups here causes severe slowdowns.
		// See https://connect.microsoft.com/IE/feedback/details/1736512/
		rnoInnerhtml = /<script|<style|<link/i,
		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

	// Prefer a tbody over its parent table for containing new rows
	function manipulationTarget(elem, content) {
		if (
			nodeName(elem, 'table') &&
			nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr')
		) {
			return jQuery(elem).children('tbody')[0] || elem;
		}

		return elem;
	}

	// Replace/restore the type attribute of script elements for safe DOM manipulation
	function disableScript(elem) {
		elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type;
		return elem;
	}
	function restoreScript(elem) {
		if ((elem.type || '').slice(0, 5) === 'true/') {
			elem.type = elem.type.slice(5);
		} else {
			elem.removeAttribute('type');
		}

		return elem;
	}

	function cloneCopyEvent(src, dest) {
		var i, l, type, pdataOld, udataOld, udataCur, events;

		if (dest.nodeType !== 1) {
			return;
		}

		// 1. Copy private data: events, handlers, etc.
		if (dataPriv.hasData(src)) {
			pdataOld = dataPriv.get(src);
			events = pdataOld.events;

			if (events) {
				dataPriv.remove(dest, 'handle events');

				for (type in events) {
					for (i = 0, l = events[type].length; i < l; i++) {
						jQuery.event.add(dest, type, events[type][i]);
					}
				}
			}
		}

		// 2. Copy user data
		if (dataUser.hasData(src)) {
			udataOld = dataUser.access(src);
			udataCur = jQuery.extend({}, udataOld);

			dataUser.set(dest, udataCur);
		}
	}

	// Fix IE bugs, see support tests
	function fixInput(src, dest) {
		var nodeName = dest.nodeName.toLowerCase();

		// Fails to persist the checked state of a cloned checkbox or radio button.
		if (nodeName === 'input' && rcheckableType.test(src.type)) {
			dest.checked = src.checked;

			// Fails to return the selected option to the default selected state when cloning options
		} else if (nodeName === 'input' || nodeName === 'textarea') {
			dest.defaultValue = src.defaultValue;
		}
	}

	function domManip(collection, args, callback, ignored) {
		// Flatten any nested arrays
		args = flat(args);

		var fragment,
			first,
			scripts,
			hasScripts,
			node,
			doc,
			i = 0,
			l = collection.length,
			iNoClone = l - 1,
			value = args[0],
			valueIsFunction = isFunction(value);

		// We can't cloneNode fragments that contain checked, in WebKit
		if (
			valueIsFunction ||
			(l > 1 &&
				typeof value === 'string' &&
				!support.checkClone &&
				rchecked.test(value))
		) {
			return collection.each(function (index) {
				var self = collection.eq(index);
				if (valueIsFunction) {
					args[0] = value.call(this, index, self.html());
				}
				domManip(self, args, callback, ignored);
			});
		}

		if (l) {
			fragment = buildFragment(
				args,
				collection[0].ownerDocument,
				false,
				collection,
				ignored
			);
			first = fragment.firstChild;

			if (fragment.childNodes.length === 1) {
				fragment = first;
			}

			// Require either new content or an interest in ignored elements to invoke the callback
			if (first || ignored) {
				scripts = jQuery.map(getAll(fragment, 'script'), disableScript);
				hasScripts = scripts.length;

				// Use the original fragment for the last item
				// instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for (; i < l; i++) {
					node = fragment;

					if (i !== iNoClone) {
						node = jQuery.clone(node, true, true);

						// Keep references to cloned scripts for later restoration
						if (hasScripts) {
							// Support: Android <=4.0 only, PhantomJS 1 only
							// push.apply(_, arraylike) throws on ancient WebKit
							jQuery.merge(scripts, getAll(node, 'script'));
						}
					}

					callback.call(collection[i], node, i);
				}

				if (hasScripts) {
					doc = scripts[scripts.length - 1].ownerDocument;

					// Reenable scripts
					jQuery.map(scripts, restoreScript);

					// Evaluate executable scripts on first document insertion
					for (i = 0; i < hasScripts; i++) {
						node = scripts[i];
						if (
							rscriptType.test(node.type || '') &&
							!dataPriv.access(node, 'globalEval') &&
							jQuery.contains(doc, node)
						) {
							if (node.src && (node.type || '').toLowerCase() !== 'module') {
								// Optional AJAX dependency, but won't run scripts if not present
								if (jQuery._evalUrl && !node.noModule) {
									jQuery._evalUrl(
										node.src,
										{
											nonce: node.nonce || node.getAttribute('nonce'),
										},
										doc
									);
								}
							} else {
								DOMEval(node.textContent.replace(rcleanScript, ''), node, doc);
							}
						}
					}
				}
			}
		}

		return collection;
	}

	function remove(elem, selector, keepData) {
		var node,
			nodes = selector ? jQuery.filter(selector, elem) : elem,
			i = 0;

		for (; (node = nodes[i]) != null; i++) {
			if (!keepData && node.nodeType === 1) {
				jQuery.cleanData(getAll(node));
			}

			if (node.parentNode) {
				if (keepData && isAttached(node)) {
					setGlobalEval(getAll(node, 'script'));
				}
				node.parentNode.removeChild(node);
			}
		}

		return elem;
	}

	jQuery.extend({
		htmlPrefilter: function (html) {
			return html;
		},

		clone: function (elem, dataAndEvents, deepDataAndEvents) {
			var i,
				l,
				srcElements,
				destElements,
				clone = elem.cloneNode(true),
				inPage = isAttached(elem);

			// Fix IE cloning issues
			if (
				!support.noCloneChecked &&
				(elem.nodeType === 1 || elem.nodeType === 11) &&
				!jQuery.isXMLDoc(elem)
			) {
				// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
				destElements = getAll(clone);
				srcElements = getAll(elem);

				for (i = 0, l = srcElements.length; i < l; i++) {
					fixInput(srcElements[i], destElements[i]);
				}
			}

			// Copy the events from the original to the clone
			if (dataAndEvents) {
				if (deepDataAndEvents) {
					srcElements = srcElements || getAll(elem);
					destElements = destElements || getAll(clone);

					for (i = 0, l = srcElements.length; i < l; i++) {
						cloneCopyEvent(srcElements[i], destElements[i]);
					}
				} else {
					cloneCopyEvent(elem, clone);
				}
			}

			// Preserve script evaluation history
			destElements = getAll(clone, 'script');
			if (destElements.length > 0) {
				setGlobalEval(destElements, !inPage && getAll(elem, 'script'));
			}

			// Return the cloned set
			return clone;
		},

		cleanData: function (elems) {
			var data,
				elem,
				type,
				special = jQuery.event.special,
				i = 0;

			for (; (elem = elems[i]) !== undefined; i++) {
				if (acceptData(elem)) {
					if ((data = elem[dataPriv.expando])) {
						if (data.events) {
							for (type in data.events) {
								if (special[type]) {
									jQuery.event.remove(elem, type);

									// This is a shortcut to avoid jQuery.event.remove's overhead
								} else {
									jQuery.removeEvent(elem, type, data.handle);
								}
							}
						}

						// Support: Chrome <=35 - 45+
						// Assign undefined instead of using delete, see Data#remove
						elem[dataPriv.expando] = undefined;
					}
					if (elem[dataUser.expando]) {
						// Support: Chrome <=35 - 45+
						// Assign undefined instead of using delete, see Data#remove
						elem[dataUser.expando] = undefined;
					}
				}
			}
		},
	});

	jQuery.fn.extend({
		detach: function (selector) {
			return remove(this, selector, true);
		},

		remove: function (selector) {
			return remove(this, selector);
		},

		text: function (value) {
			return access(
				this,
				function (value) {
					return value === undefined
						? jQuery.text(this)
						: this.empty().each(function () {
								if (
									this.nodeType === 1 ||
									this.nodeType === 11 ||
									this.nodeType === 9
								) {
									this.textContent = value;
								}
						  });
				},
				null,
				value,
				arguments.length
			);
		},

		append: function () {
			return domManip(this, arguments, function (elem) {
				if (
					this.nodeType === 1 ||
					this.nodeType === 11 ||
					this.nodeType === 9
				) {
					var target = manipulationTarget(this, elem);
					target.appendChild(elem);
				}
			});
		},

		prepend: function () {
			return domManip(this, arguments, function (elem) {
				if (
					this.nodeType === 1 ||
					this.nodeType === 11 ||
					this.nodeType === 9
				) {
					var target = manipulationTarget(this, elem);
					target.insertBefore(elem, target.firstChild);
				}
			});
		},

		before: function () {
			return domManip(this, arguments, function (elem) {
				if (this.parentNode) {
					this.parentNode.insertBefore(elem, this);
				}
			});
		},

		after: function () {
			return domManip(this, arguments, function (elem) {
				if (this.parentNode) {
					this.parentNode.insertBefore(elem, this.nextSibling);
				}
			});
		},

		empty: function () {
			var elem,
				i = 0;

			for (; (elem = this[i]) != null; i++) {
				if (elem.nodeType === 1) {
					// Prevent memory leaks
					jQuery.cleanData(getAll(elem, false));

					// Remove any remaining nodes
					elem.textContent = '';
				}
			}

			return this;
		},

		clone: function (dataAndEvents, deepDataAndEvents) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents =
				deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

			return this.map(function () {
				return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
			});
		},

		html: function (value) {
			return access(
				this,
				function (value) {
					var elem = this[0] || {},
						i = 0,
						l = this.length;

					if (value === undefined && elem.nodeType === 1) {
						return elem.innerHTML;
					}

					// See if we can take a shortcut and just use innerHTML
					if (
						typeof value === 'string' &&
						!rnoInnerhtml.test(value) &&
						!wrapMap[(rtagName.exec(value) || ['', ''])[1].toLowerCase()]
					) {
						value = jQuery.htmlPrefilter(value);

						try {
							for (; i < l; i++) {
								elem = this[i] || {};

								// Remove element nodes and prevent memory leaks
								if (elem.nodeType === 1) {
									jQuery.cleanData(getAll(elem, false));
									elem.innerHTML = value;
								}
							}

							elem = 0;

							// If using innerHTML throws an exception, use the fallback method
						} catch (e) {}
					}

					if (elem) {
						this.empty().append(value);
					}
				},
				null,
				value,
				arguments.length
			);
		},

		replaceWith: function () {
			var ignored = [];

			// Make the changes, replacing each non-ignored context element with the new content
			return domManip(
				this,
				arguments,
				function (elem) {
					var parent = this.parentNode;

					if (jQuery.inArray(this, ignored) < 0) {
						jQuery.cleanData(getAll(this));
						if (parent) {
							parent.replaceChild(elem, this);
						}
					}

					// Force callback invocation
				},
				ignored
			);
		},
	});

	jQuery.each(
		{
			appendTo: 'append',
			prependTo: 'prepend',
			insertBefore: 'before',
			insertAfter: 'after',
			replaceAll: 'replaceWith',
		},
		function (name, original) {
			jQuery.fn[name] = function (selector) {
				var elems,
					ret = [],
					insert = jQuery(selector),
					last = insert.length - 1,
					i = 0;

				for (; i <= last; i++) {
					elems = i === last ? this : this.clone(true);
					jQuery(insert[i])[original](elems);

					// Support: Android <=4.0 only, PhantomJS 1 only
					// .get() because push.apply(_, arraylike) throws on ancient WebKit
					push.apply(ret, elems.get());
				}

				return this.pushStack(ret);
			};
		}
	);
	var rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i');

	var getStyles = function (elem) {
		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if (!view || !view.opener) {
			view = window;
		}

		return view.getComputedStyle(elem);
	};

	var swap = function (elem, options, callback) {
		var ret,
			name,
			old = {};

		// Remember the old values, and insert the new ones
		for (name in options) {
			old[name] = elem.style[name];
			elem.style[name] = options[name];
		}

		ret = callback.call(elem);

		// Revert the old values
		for (name in options) {
			elem.style[name] = old[name];
		}

		return ret;
	};

	var rboxStyle = new RegExp(cssExpand.join('|'), 'i');

	(function () {
		// Executing both pixelPosition & boxSizingReliable tests require only one layout
		// so they're executed at the same time to save the second computation.
		function computeStyleTests() {
			// This is a singleton, we need to execute it only once
			if (!div) {
				return;
			}

			container.style.cssText =
				'position:absolute;left:-11111px;width:60px;' +
				'margin-top:1px;padding:0;border:0';
			div.style.cssText =
				'position:relative;display:block;box-sizing:border-box;overflow:scroll;' +
				'margin:auto;border:1px;padding:1px;' +
				'width:60%;top:1%';
			documentElement.appendChild(container).appendChild(div);

			var divStyle = window.getComputedStyle(div);
			pixelPositionVal = divStyle.top !== '1%';

			// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
			reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;

			// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
			// Some styles come back with percentage values, even though they shouldn't
			div.style.right = '60%';
			pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;

			// Support: IE 9 - 11 only
			// Detect misreporting of content dimensions for box-sizing:border-box elements
			boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;

			// Support: IE 9 only
			// Detect overflow:scroll screwiness (gh-3699)
			// Support: Chrome <=64
			// Don't get tricked when zoom affects offsetWidth (gh-4029)
			div.style.position = 'absolute';
			scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;

			documentElement.removeChild(container);

			// Nullify the div so it wouldn't be stored in the memory and
			// it will also be a sign that checks already performed
			div = null;
		}

		function roundPixelMeasures(measure) {
			return Math.round(parseFloat(measure));
		}

		var pixelPositionVal,
			boxSizingReliableVal,
			scrollboxSizeVal,
			pixelBoxStylesVal,
			reliableTrDimensionsVal,
			reliableMarginLeftVal,
			container = document.createElement('div'),
			div = document.createElement('div');

		// Finish early in limited (non-browser) environments
		if (!div.style) {
			return;
		}

		// Support: IE <=9 - 11 only
		// Style of cloned element affects source element cloned (#8908)
		div.style.backgroundClip = 'content-box';
		div.cloneNode(true).style.backgroundClip = '';
		support.clearCloneStyle = div.style.backgroundClip === 'content-box';

		jQuery.extend(support, {
			boxSizingReliable: function () {
				computeStyleTests();
				return boxSizingReliableVal;
			},
			pixelBoxStyles: function () {
				computeStyleTests();
				return pixelBoxStylesVal;
			},
			pixelPosition: function () {
				computeStyleTests();
				return pixelPositionVal;
			},
			reliableMarginLeft: function () {
				computeStyleTests();
				return reliableMarginLeftVal;
			},
			scrollboxSize: function () {
				computeStyleTests();
				return scrollboxSizeVal;
			},

			// Support: IE 9 - 11+, Edge 15 - 18+
			// IE/Edge misreport `getComputedStyle` of table rows with width/height
			// set in CSS while `offset*` properties report correct values.
			// Behavior in IE 9 is more subtle than in newer versions & it passes
			// some versions of this test; make sure not to make it pass there!
			//
			// Support: Firefox 70+
			// Only Firefox includes border widths
			// in computed dimensions. (gh-4529)
			reliableTrDimensions: function () {
				var table, tr, trChild, trStyle;
				if (reliableTrDimensionsVal == null) {
					table = document.createElement('table');
					tr = document.createElement('tr');
					trChild = document.createElement('div');

					table.style.cssText =
						'position:absolute;left:-11111px;border-collapse:separate';
					tr.style.cssText = 'border:1px solid';

					// Support: Chrome 86+
					// Height set through cssText does not get applied.
					// Computed height then comes back as 0.
					tr.style.height = '1px';
					trChild.style.height = '9px';

					// Support: Android 8 Chrome 86+
					// In our bodyBackground.html iframe,
					// display for all div elements is set to "inline",
					// which causes a problem only in Android 8 Chrome 86.
					// Ensuring the div is display: block
					// gets around this issue.
					trChild.style.display = 'block';

					documentElement
						.appendChild(table)
						.appendChild(tr)
						.appendChild(trChild);

					trStyle = window.getComputedStyle(tr);
					reliableTrDimensionsVal =
						parseInt(trStyle.height, 10) +
							parseInt(trStyle.borderTopWidth, 10) +
							parseInt(trStyle.borderBottomWidth, 10) ===
						tr.offsetHeight;

					documentElement.removeChild(table);
				}
				return reliableTrDimensionsVal;
			},
		});
	})();

	function curCSS(elem, name, computed) {
		var width,
			minWidth,
			maxWidth,
			ret,
			// Support: Firefox 51+
			// Retrieving style before computed somehow
			// fixes an issue with getting wrong values
			// on detached elements
			style = elem.style;

		computed = computed || getStyles(elem);

		// getPropertyValue is needed for:
		//   .css('filter') (IE 9 only, #12537)
		//   .css('--customProperty) (#3144)
		if (computed) {
			ret = computed.getPropertyValue(name) || computed[name];

			if (ret === '' && !isAttached(elem)) {
				ret = jQuery.style(elem, name);
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Android Browser returns percentage for some values,
			// but width seems to be reliably pixels.
			// This is against the CSSOM draft spec:
			// https://drafts.csswg.org/cssom/#resolved-values
			if (
				!support.pixelBoxStyles() &&
				rnumnonpx.test(ret) &&
				rboxStyle.test(name)
			) {
				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret !== undefined
			? // Support: IE <=9 - 11 only
			  // IE returns zIndex value as an integer.
			  ret + ''
			: ret;
	}

	function addGetHookIf(conditionFn, hookFn) {
		// Define the hook, we'll check on the first run if it's really needed.
		return {
			get: function () {
				if (conditionFn()) {
					// Hook not needed (or it's not possible to use it due
					// to missing dependency), remove it.
					delete this.get;
					return;
				}

				// Hook needed; redefine it so that the support test is not executed again.
				return (this.get = hookFn).apply(this, arguments);
			},
		};
	}

	var cssPrefixes = ['Webkit', 'Moz', 'ms'],
		emptyStyle = document.createElement('div').style,
		vendorProps = {};

	// Return a vendor-prefixed property or undefined
	function vendorPropName(name) {
		// Check for vendor prefixed names
		var capName = name[0].toUpperCase() + name.slice(1),
			i = cssPrefixes.length;

		while (i--) {
			name = cssPrefixes[i] + capName;
			if (name in emptyStyle) {
				return name;
			}
		}
	}

	// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
	function finalPropName(name) {
		var final = jQuery.cssProps[name] || vendorProps[name];

		if (final) {
			return final;
		}
		if (name in emptyStyle) {
			return name;
		}
		return (vendorProps[name] = vendorPropName(name) || name);
	}

	var // Swappable if display is none or starts with table
		// except "table", "table-cell", or "table-caption"
		// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,
		rcustomProp = /^--/,
		cssShow = { position: 'absolute', visibility: 'hidden', display: 'block' },
		cssNormalTransform = {
			letterSpacing: '0',
			fontWeight: '400',
		};

	function setPositiveNumber(_elem, value, subtract) {
		// Any relative (+/-) values have already been
		// normalized at this point
		var matches = rcssNum.exec(value);
		return matches
			? // Guard against undefined "subtract", e.g., when used as in cssHooks
			  Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || 'px')
			: value;
	}

	function boxModelAdjustment(
		elem,
		dimension,
		box,
		isBorderBox,
		styles,
		computedVal
	) {
		var i = dimension === 'width' ? 1 : 0,
			extra = 0,
			delta = 0;

		// Adjustment may not be necessary
		if (box === (isBorderBox ? 'border' : 'content')) {
			return 0;
		}

		for (; i < 4; i += 2) {
			// Both box models exclude margin
			if (box === 'margin') {
				delta += jQuery.css(elem, box + cssExpand[i], true, styles);
			}

			// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
			if (!isBorderBox) {
				// Add padding
				delta += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);

				// For "border" or "margin", add border
				if (box !== 'padding') {
					delta += jQuery.css(
						elem,
						'border' + cssExpand[i] + 'Width',
						true,
						styles
					);

					// But still keep track of it otherwise
				} else {
					extra += jQuery.css(
						elem,
						'border' + cssExpand[i] + 'Width',
						true,
						styles
					);
				}

				// If we get here with a border-box (content + padding + border), we're seeking "content" or
				// "padding" or "margin"
			} else {
				// For "content", subtract padding
				if (box === 'content') {
					delta -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
				}

				// For "content" or "padding", subtract border
				if (box !== 'margin') {
					delta -= jQuery.css(
						elem,
						'border' + cssExpand[i] + 'Width',
						true,
						styles
					);
				}
			}
		}

		// Account for positive content-box scroll gutter when requested by providing computedVal
		if (!isBorderBox && computedVal >= 0) {
			// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
			// Assuming integer scroll gutter, subtract the rest and round down
			delta +=
				Math.max(
					0,
					Math.ceil(
						elem['offset' + dimension[0].toUpperCase() + dimension.slice(1)] -
							computedVal -
							delta -
							extra -
							0.5

						// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
						// Use an explicit zero to avoid NaN (gh-3964)
					)
				) || 0;
		}

		return delta;
	}

	function getWidthOrHeight(elem, dimension, extra) {
		// Start with computed style
		var styles = getStyles(elem),
			// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
			// Fake content-box until we know it's needed to know the true value.
			boxSizingNeeded = !support.boxSizingReliable() || extra,
			isBorderBox =
				boxSizingNeeded &&
				jQuery.css(elem, 'boxSizing', false, styles) === 'border-box',
			valueIsBorderBox = isBorderBox,
			val = curCSS(elem, dimension, styles),
			offsetProp = 'offset' + dimension[0].toUpperCase() + dimension.slice(1);

		// Support: Firefox <=54
		// Return a confounding non-pixel value or feign ignorance, as appropriate.
		if (rnumnonpx.test(val)) {
			if (!extra) {
				return val;
			}
			val = 'auto';
		}

		// Support: IE 9 - 11 only
		// Use offsetWidth/offsetHeight for when box sizing is unreliable.
		// In those cases, the computed value can be trusted to be border-box.
		if (
			((!support.boxSizingReliable() && isBorderBox) ||
				// Support: IE 10 - 11+, Edge 15 - 18+
				// IE/Edge misreport `getComputedStyle` of table rows with width/height
				// set in CSS while `offset*` properties report correct values.
				// Interestingly, in some cases IE 9 doesn't suffer from this issue.
				(!support.reliableTrDimensions() && nodeName(elem, 'tr')) ||
				// Fall back to offsetWidth/offsetHeight when value is "auto"
				// This happens for inline elements with no explicit setting (gh-3571)
				val === 'auto' ||
				// Support: Android <=4.1 - 4.3 only
				// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
				(!parseFloat(val) &&
					jQuery.css(elem, 'display', false, styles) === 'inline')) &&
			// Make sure the element is visible & connected
			elem.getClientRects().length
		) {
			isBorderBox =
				jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';

			// Where available, offsetWidth/offsetHeight approximate border box dimensions.
			// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
			// retrieved value as a content box dimension.
			valueIsBorderBox = offsetProp in elem;
			if (valueIsBorderBox) {
				val = elem[offsetProp];
			}
		}

		// Normalize "" and auto
		val = parseFloat(val) || 0;

		// Adjust for the element's box model
		return (
			val +
			boxModelAdjustment(
				elem,
				dimension,
				extra || (isBorderBox ? 'border' : 'content'),
				valueIsBorderBox,
				styles,

				// Provide the current computed size to request scroll gutter calculation (gh-3589)
				val
			) +
			'px'
		);
	}

	jQuery.extend({
		// Add in style property hooks for overriding the default
		// behavior of getting and setting a style property
		cssHooks: {
			opacity: {
				get: function (elem, computed) {
					if (computed) {
						// We should always get a number back from opacity
						var ret = curCSS(elem, 'opacity');
						return ret === '' ? '1' : ret;
					}
				},
			},
		},

		// Don't automatically add "px" to these possibly-unitless properties
		cssNumber: {
			animationIterationCount: true,
			columnCount: true,
			fillOpacity: true,
			flexGrow: true,
			flexShrink: true,
			fontWeight: true,
			gridArea: true,
			gridColumn: true,
			gridColumnEnd: true,
			gridColumnStart: true,
			gridRow: true,
			gridRowEnd: true,
			gridRowStart: true,
			lineHeight: true,
			opacity: true,
			order: true,
			orphans: true,
			widows: true,
			zIndex: true,
			zoom: true,
		},

		// Add in properties whose names you wish to fix before
		// setting or getting the value
		cssProps: {},

		// Get and set the style property on a DOM Node
		style: function (elem, name, value, extra) {
			// Don't set styles on text and comment nodes
			if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
				return;
			}

			// Make sure that we're working with the right name
			var ret,
				type,
				hooks,
				origName = camelCase(name),
				isCustomProp = rcustomProp.test(name),
				style = elem.style;

			// Make sure that we're working with the right name. We don't
			// want to query the value if it is a CSS custom property
			// since they are user-defined.
			if (!isCustomProp) {
				name = finalPropName(origName);
			}

			// Gets hook for the prefixed version, then unprefixed version
			hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

			// Check if we're setting a value
			if (value !== undefined) {
				type = typeof value;

				// Convert "+=" or "-=" to relative numbers (#7345)
				if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {
					value = adjustCSS(elem, name, ret);

					// Fixes bug #9237
					type = 'number';
				}

				// Make sure that null and NaN values aren't set (#7116)
				if (value == null || value !== value) {
					return;
				}

				// If a number was passed in, add the unit (except for certain CSS properties)
				// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
				// "px" to a few hardcoded values.
				if (type === 'number' && !isCustomProp) {
					value += (ret && ret[3]) || (jQuery.cssNumber[origName] ? '' : 'px');
				}

				// background-* props affect original clone's values
				if (
					!support.clearCloneStyle &&
					value === '' &&
					name.indexOf('background') === 0
				) {
					style[name] = 'inherit';
				}

				// If a hook was provided, use that value, otherwise just set the specified value
				if (
					!hooks ||
					!('set' in hooks) ||
					(value = hooks.set(elem, value, extra)) !== undefined
				) {
					if (isCustomProp) {
						style.setProperty(name, value);
					} else {
						style[name] = value;
					}
				}
			} else {
				// If a hook was provided get the non-computed value from there
				if (
					hooks &&
					'get' in hooks &&
					(ret = hooks.get(elem, false, extra)) !== undefined
				) {
					return ret;
				}

				// Otherwise just get the value from the style object
				return style[name];
			}
		},

		css: function (elem, name, extra, styles) {
			var val,
				num,
				hooks,
				origName = camelCase(name),
				isCustomProp = rcustomProp.test(name);

			// Make sure that we're working with the right name. We don't
			// want to modify the value if it is a CSS custom property
			// since they are user-defined.
			if (!isCustomProp) {
				name = finalPropName(origName);
			}

			// Try prefixed name followed by the unprefixed name
			hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];

			// If a hook was provided get the computed value from there
			if (hooks && 'get' in hooks) {
				val = hooks.get(elem, true, extra);
			}

			// Otherwise, if a way to get the computed value exists, use that
			if (val === undefined) {
				val = curCSS(elem, name, styles);
			}

			// Convert "normal" to computed value
			if (val === 'normal' && name in cssNormalTransform) {
				val = cssNormalTransform[name];
			}

			// Make numeric if forced or a qualifier was provided and val looks numeric
			if (extra === '' || extra) {
				num = parseFloat(val);
				return extra === true || isFinite(num) ? num || 0 : val;
			}

			return val;
		},
	});

	jQuery.each(['height', 'width'], function (_i, dimension) {
		jQuery.cssHooks[dimension] = {
			get: function (elem, computed, extra) {
				if (computed) {
					// Certain elements can have dimension info if we invisibly show them
					// but it must have a current display style that would benefit
					return rdisplayswap.test(jQuery.css(elem, 'display')) &&
						// Support: Safari 8+
						// Table columns in Safari have non-zero offsetWidth & zero
						// getBoundingClientRect().width unless display is changed.
						// Support: IE <=11 only
						// Running getBoundingClientRect on a disconnected node
						// in IE throws an error.
						(!elem.getClientRects().length ||
							!elem.getBoundingClientRect().width)
						? swap(elem, cssShow, function () {
								return getWidthOrHeight(elem, dimension, extra);
						  })
						: getWidthOrHeight(elem, dimension, extra);
				}
			},

			set: function (elem, value, extra) {
				var matches,
					styles = getStyles(elem),
					// Only read styles.position if the test has a chance to fail
					// to avoid forcing a reflow.
					scrollboxSizeBuggy =
						!support.scrollboxSize() && styles.position === 'absolute',
					// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
					boxSizingNeeded = scrollboxSizeBuggy || extra,
					isBorderBox =
						boxSizingNeeded &&
						jQuery.css(elem, 'boxSizing', false, styles) === 'border-box',
					subtract = extra
						? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles)
						: 0;

				// Account for unreliable border-box dimensions by comparing offset* to computed and
				// faking a content-box to get border and padding (gh-3699)
				if (isBorderBox && scrollboxSizeBuggy) {
					subtract -= Math.ceil(
						elem['offset' + dimension[0].toUpperCase() + dimension.slice(1)] -
							parseFloat(styles[dimension]) -
							boxModelAdjustment(elem, dimension, 'border', false, styles) -
							0.5
					);
				}

				// Convert to pixels if value adjustment is needed
				if (
					subtract &&
					(matches = rcssNum.exec(value)) &&
					(matches[3] || 'px') !== 'px'
				) {
					elem.style[dimension] = value;
					value = jQuery.css(elem, dimension);
				}

				return setPositiveNumber(elem, value, subtract);
			},
		};
	});

	jQuery.cssHooks.marginLeft = addGetHookIf(
		support.reliableMarginLeft,
		function (elem, computed) {
			if (computed) {
				return (
					(parseFloat(curCSS(elem, 'marginLeft')) ||
						elem.getBoundingClientRect().left -
							swap(elem, { marginLeft: 0 }, function () {
								return elem.getBoundingClientRect().left;
							})) + 'px'
				);
			}
		}
	);

	// These hooks are used by animate to expand properties
	jQuery.each(
		{
			margin: '',
			padding: '',
			border: 'Width',
		},
		function (prefix, suffix) {
			jQuery.cssHooks[prefix + suffix] = {
				expand: function (value) {
					var i = 0,
						expanded = {},
						// Assumes a single number if not a string
						parts = typeof value === 'string' ? value.split(' ') : [value];

					for (; i < 4; i++) {
						expanded[prefix + cssExpand[i] + suffix] =
							parts[i] || parts[i - 2] || parts[0];
					}

					return expanded;
				},
			};

			if (prefix !== 'margin') {
				jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
			}
		}
	);

	jQuery.fn.extend({
		css: function (name, value) {
			return access(
				this,
				function (elem, name, value) {
					var styles,
						len,
						map = {},
						i = 0;

					if (Array.isArray(name)) {
						styles = getStyles(elem);
						len = name.length;

						for (; i < len; i++) {
							map[name[i]] = jQuery.css(elem, name[i], false, styles);
						}

						return map;
					}

					return value !== undefined
						? jQuery.style(elem, name, value)
						: jQuery.css(elem, name);
				},
				name,
				value,
				arguments.length > 1
			);
		},
	});

	function Tween(elem, options, prop, end, easing) {
		return new Tween.prototype.init(elem, options, prop, end, easing);
	}
	jQuery.Tween = Tween;

	Tween.prototype = {
		constructor: Tween,
		init: function (elem, options, prop, end, easing, unit) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || jQuery.easing._default;
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');
		},
		cur: function () {
			var hooks = Tween.propHooks[this.prop];

			return hooks && hooks.get
				? hooks.get(this)
				: Tween.propHooks._default.get(this);
		},
		run: function (percent) {
			var eased,
				hooks = Tween.propHooks[this.prop];

			if (this.options.duration) {
				this.pos = eased = jQuery.easing[this.easing](
					percent,
					this.options.duration * percent,
					0,
					1,
					this.options.duration
				);
			} else {
				this.pos = eased = percent;
			}
			this.now = (this.end - this.start) * eased + this.start;

			if (this.options.step) {
				this.options.step.call(this.elem, this.now, this);
			}

			if (hooks && hooks.set) {
				hooks.set(this);
			} else {
				Tween.propHooks._default.set(this);
			}
			return this;
		},
	};

	Tween.prototype.init.prototype = Tween.prototype;

	Tween.propHooks = {
		_default: {
			get: function (tween) {
				var result;

				// Use a property on the element directly when it is not a DOM element,
				// or when there is no matching style property that exists.
				if (
					tween.elem.nodeType !== 1 ||
					(tween.elem[tween.prop] != null &&
						tween.elem.style[tween.prop] == null)
				) {
					return tween.elem[tween.prop];
				}

				// Passing an empty string as a 3rd parameter to .css will automatically
				// attempt a parseFloat and fallback to a string if the parse fails.
				// Simple values such as "10px" are parsed to Float;
				// complex values such as "rotate(1rad)" are returned as-is.
				result = jQuery.css(tween.elem, tween.prop, '');

				// Empty strings, null, undefined and "auto" are converted to 0.
				return !result || result === 'auto' ? 0 : result;
			},
			set: function (tween) {
				// Use step hook for back compat.
				// Use cssHook if its there.
				// Use .style if available and use plain properties where available.
				if (jQuery.fx.step[tween.prop]) {
					jQuery.fx.step[tween.prop](tween);
				} else if (
					tween.elem.nodeType === 1 &&
					(jQuery.cssHooks[tween.prop] ||
						tween.elem.style[finalPropName(tween.prop)] != null)
				) {
					jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
				} else {
					tween.elem[tween.prop] = tween.now;
				}
			},
		},
	};

	// Support: IE <=9 only
	// Panic based approach to setting things on disconnected nodes
	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function (tween) {
			if (tween.elem.nodeType && tween.elem.parentNode) {
				tween.elem[tween.prop] = tween.now;
			}
		},
	};

	jQuery.easing = {
		linear: function (p) {
			return p;
		},
		swing: function (p) {
			return 0.5 - Math.cos(p * Math.PI) / 2;
		},
		_default: 'swing',
	};

	jQuery.fx = Tween.prototype.init;

	// Back compat <1.8 extension point
	jQuery.fx.step = {};

	var fxNow,
		inProgress,
		rfxtypes = /^(?:toggle|show|hide)$/,
		rrun = /queueHooks$/;

	function schedule() {
		if (inProgress) {
			if (document.hidden === false && window.requestAnimationFrame) {
				window.requestAnimationFrame(schedule);
			} else {
				window.setTimeout(schedule, jQuery.fx.interval);
			}

			jQuery.fx.tick();
		}
	}

	// Animations created synchronously will run synchronously
	function createFxNow() {
		window.setTimeout(function () {
			fxNow = undefined;
		});
		return (fxNow = Date.now());
	}

	// Generate parameters to create a standard animation
	function genFx(type, includeWidth) {
		var which,
			i = 0,
			attrs = { height: type };

		// If we include width, step value is 1 to do all cssExpand values,
		// otherwise step value is 2 to skip over Left and Right
		includeWidth = includeWidth ? 1 : 0;
		for (; i < 4; i += 2 - includeWidth) {
			which = cssExpand[i];
			attrs['margin' + which] = attrs['padding' + which] = type;
		}

		if (includeWidth) {
			attrs.opacity = attrs.width = type;
		}

		return attrs;
	}

	function createTween(value, prop, animation) {
		var tween,
			collection = (Animation.tweeners[prop] || []).concat(
				Animation.tweeners['*']
			),
			index = 0,
			length = collection.length;
		for (; index < length; index++) {
			if ((tween = collection[index].call(animation, prop, value))) {
				// We're done with this property
				return tween;
			}
		}
	}

	function defaultPrefilter(elem, props, opts) {
		var prop,
			value,
			toggle,
			hooks,
			oldfire,
			propTween,
			restoreDisplay,
			display,
			isBox = 'width' in props || 'height' in props,
			anim = this,
			orig = {},
			style = elem.style,
			hidden = elem.nodeType && isHiddenWithinTree(elem),
			dataShow = dataPriv.get(elem, 'fxshow');

		// Queue-skipping animations hijack the fx hooks
		if (!opts.queue) {
			hooks = jQuery._queueHooks(elem, 'fx');
			if (hooks.unqueued == null) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function () {
					if (!hooks.unqueued) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;

			anim.always(function () {
				// Ensure the complete handler is called before this completes
				anim.always(function () {
					hooks.unqueued--;
					if (!jQuery.queue(elem, 'fx').length) {
						hooks.empty.fire();
					}
				});
			});
		}

		// Detect show/hide animations
		for (prop in props) {
			value = props[prop];
			if (rfxtypes.test(value)) {
				delete props[prop];
				toggle = toggle || value === 'toggle';
				if (value === (hidden ? 'hide' : 'show')) {
					// Pretend to be hidden if this is a "show" and
					// there is still data from a stopped show/hide
					if (value === 'show' && dataShow && dataShow[prop] !== undefined) {
						hidden = true;

						// Ignore all other no-op show/hide data
					} else {
						continue;
					}
				}
				orig[prop] = (dataShow && dataShow[prop]) || jQuery.style(elem, prop);
			}
		}

		// Bail out if this is a no-op like .hide().hide()
		propTween = !jQuery.isEmptyObject(props);
		if (!propTween && jQuery.isEmptyObject(orig)) {
			return;
		}

		// Restrict "overflow" and "display" styles during box animations
		if (isBox && elem.nodeType === 1) {
			// Support: IE <=9 - 11, Edge 12 - 15
			// Record all 3 overflow attributes because IE does not infer the shorthand
			// from identically-valued overflowX and overflowY and Edge just mirrors
			// the overflowX value there.
			opts.overflow = [style.overflow, style.overflowX, style.overflowY];

			// Identify a display type, preferring old show/hide data over the CSS cascade
			restoreDisplay = dataShow && dataShow.display;
			if (restoreDisplay == null) {
				restoreDisplay = dataPriv.get(elem, 'display');
			}
			display = jQuery.css(elem, 'display');
			if (display === 'none') {
				if (restoreDisplay) {
					display = restoreDisplay;
				} else {
					// Get nonempty value(s) by temporarily forcing visibility
					showHide([elem], true);
					restoreDisplay = elem.style.display || restoreDisplay;
					display = jQuery.css(elem, 'display');
					showHide([elem]);
				}
			}

			// Animate inline elements as inline-block
			if (
				display === 'inline' ||
				(display === 'inline-block' && restoreDisplay != null)
			) {
				if (jQuery.css(elem, 'float') === 'none') {
					// Restore the original display value at the end of pure show/hide animations
					if (!propTween) {
						anim.done(function () {
							style.display = restoreDisplay;
						});
						if (restoreDisplay == null) {
							display = style.display;
							restoreDisplay = display === 'none' ? '' : display;
						}
					}
					style.display = 'inline-block';
				}
			}
		}

		if (opts.overflow) {
			style.overflow = 'hidden';
			anim.always(function () {
				style.overflow = opts.overflow[0];
				style.overflowX = opts.overflow[1];
				style.overflowY = opts.overflow[2];
			});
		}

		// Implement show/hide animations
		propTween = false;
		for (prop in orig) {
			// General show/hide setup for this element animation
			if (!propTween) {
				if (dataShow) {
					if ('hidden' in dataShow) {
						hidden = dataShow.hidden;
					}
				} else {
					dataShow = dataPriv.access(elem, 'fxshow', {
						display: restoreDisplay,
					});
				}

				// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
				if (toggle) {
					dataShow.hidden = !hidden;
				}

				// Show elements before animating them
				if (hidden) {
					showHide([elem], true);
				}

				/* eslint-disable no-loop-func */

				anim.done(function () {
					/* eslint-enable no-loop-func */

					// The final step of a "hide" animation is actually hiding the element
					if (!hidden) {
						showHide([elem]);
					}
					dataPriv.remove(elem, 'fxshow');
					for (prop in orig) {
						jQuery.style(elem, prop, orig[prop]);
					}
				});
			}

			// Per-property setup
			propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
			if (!(prop in dataShow)) {
				dataShow[prop] = propTween.start;
				if (hidden) {
					propTween.end = propTween.start;
					propTween.start = 0;
				}
			}
		}
	}

	function propFilter(props, specialEasing) {
		var index, name, easing, value, hooks;

		// camelCase, specialEasing and expand cssHook pass
		for (index in props) {
			name = camelCase(index);
			easing = specialEasing[name];
			value = props[index];
			if (Array.isArray(value)) {
				easing = value[1];
				value = props[index] = value[0];
			}

			if (index !== name) {
				props[name] = value;
				delete props[index];
			}

			hooks = jQuery.cssHooks[name];
			if (hooks && 'expand' in hooks) {
				value = hooks.expand(value);
				delete props[name];

				// Not quite $.extend, this won't overwrite existing keys.
				// Reusing 'index' because we have the correct "name"
				for (index in value) {
					if (!(index in props)) {
						props[index] = value[index];
						specialEasing[index] = easing;
					}
				}
			} else {
				specialEasing[name] = easing;
			}
		}
	}

	function Animation(elem, properties, options) {
		var result,
			stopped,
			index = 0,
			length = Animation.prefilters.length,
			deferred = jQuery.Deferred().always(function () {
				// Don't match elem in the :animated selector
				delete tick.elem;
			}),
			tick = function () {
				if (stopped) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
					remaining = Math.max(
						0,
						animation.startTime + animation.duration - currentTime
					),
					// Support: Android 2.3 only
					// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
					temp = remaining / animation.duration || 0,
					percent = 1 - temp,
					index = 0,
					length = animation.tweens.length;

				for (; index < length; index++) {
					animation.tweens[index].run(percent);
				}

				deferred.notifyWith(elem, [animation, percent, remaining]);

				// If there's more to do, yield
				if (percent < 1 && length) {
					return remaining;
				}

				// If this was an empty animation, synthesize a final progress notification
				if (!length) {
					deferred.notifyWith(elem, [animation, 1, 0]);
				}

				// Resolve the animation and report its conclusion
				deferred.resolveWith(elem, [animation]);
				return false;
			},
			animation = deferred.promise({
				elem: elem,
				props: jQuery.extend({}, properties),
				opts: jQuery.extend(
					true,
					{
						specialEasing: {},
						easing: jQuery.easing._default,
					},
					options
				),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function (prop, end) {
					var tween = jQuery.Tween(
						elem,
						animation.opts,
						prop,
						end,
						animation.opts.specialEasing[prop] || animation.opts.easing
					);
					animation.tweens.push(tween);
					return tween;
				},
				stop: function (gotoEnd) {
					var index = 0,
						// If we are going to the end, we want to run all the tweens
						// otherwise we skip this part
						length = gotoEnd ? animation.tweens.length : 0;
					if (stopped) {
						return this;
					}
					stopped = true;
					for (; index < length; index++) {
						animation.tweens[index].run(1);
					}

					// Resolve when we played the last frame; otherwise, reject
					if (gotoEnd) {
						deferred.notifyWith(elem, [animation, 1, 0]);
						deferred.resolveWith(elem, [animation, gotoEnd]);
					} else {
						deferred.rejectWith(elem, [animation, gotoEnd]);
					}
					return this;
				},
			}),
			props = animation.props;

		propFilter(props, animation.opts.specialEasing);

		for (; index < length; index++) {
			result = Animation.prefilters[index].call(
				animation,
				elem,
				props,
				animation.opts
			);
			if (result) {
				if (isFunction(result.stop)) {
					jQuery._queueHooks(animation.elem, animation.opts.queue).stop =
						result.stop.bind(result);
				}
				return result;
			}
		}

		jQuery.map(props, createTween, animation);

		if (isFunction(animation.opts.start)) {
			animation.opts.start.call(elem, animation);
		}

		// Attach callbacks from options
		animation
			.progress(animation.opts.progress)
			.done(animation.opts.done, animation.opts.complete)
			.fail(animation.opts.fail)
			.always(animation.opts.always);

		jQuery.fx.timer(
			jQuery.extend(tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue,
			})
		);

		return animation;
	}

	jQuery.Animation = jQuery.extend(Animation, {
		tweeners: {
			'*': [
				function (prop, value) {
					var tween = this.createTween(prop, value);
					adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
					return tween;
				},
			],
		},

		tweener: function (props, callback) {
			if (isFunction(props)) {
				callback = props;
				props = ['*'];
			} else {
				props = props.match(rnothtmlwhite);
			}

			var prop,
				index = 0,
				length = props.length;

			for (; index < length; index++) {
				prop = props[index];
				Animation.tweeners[prop] = Animation.tweeners[prop] || [];
				Animation.tweeners[prop].unshift(callback);
			}
		},

		prefilters: [defaultPrefilter],

		prefilter: function (callback, prepend) {
			if (prepend) {
				Animation.prefilters.unshift(callback);
			} else {
				Animation.prefilters.push(callback);
			}
		},
	});

	jQuery.speed = function (speed, easing, fn) {
		var opt =
			speed && typeof speed === 'object'
				? jQuery.extend({}, speed)
				: {
						complete: fn || (!fn && easing) || (isFunction(speed) && speed),
						duration: speed,
						easing: (fn && easing) || (easing && !isFunction(easing) && easing),
				  };

		// Go to the end state if fx are off
		if (jQuery.fx.off) {
			opt.duration = 0;
		} else {
			if (typeof opt.duration !== 'number') {
				if (opt.duration in jQuery.fx.speeds) {
					opt.duration = jQuery.fx.speeds[opt.duration];
				} else {
					opt.duration = jQuery.fx.speeds._default;
				}
			}
		}

		// Normalize opt.queue - true/undefined/null -> "fx"
		if (opt.queue == null || opt.queue === true) {
			opt.queue = 'fx';
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function () {
			if (isFunction(opt.old)) {
				opt.old.call(this);
			}

			if (opt.queue) {
				jQuery.dequeue(this, opt.queue);
			}
		};

		return opt;
	};

	jQuery.fn.extend({
		fadeTo: function (speed, to, easing, callback) {
			// Show any hidden elements after setting opacity to 0
			return (
				this.filter(isHiddenWithinTree)
					.css('opacity', 0)
					.show()

					// Animate to the value specified
					.end()
					.animate({ opacity: to }, speed, easing, callback)
			);
		},
		animate: function (prop, speed, easing, callback) {
			var empty = jQuery.isEmptyObject(prop),
				optall = jQuery.speed(speed, easing, callback),
				doAnimation = function () {
					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation(this, jQuery.extend({}, prop), optall);

					// Empty animations, or finishing resolves immediately
					if (empty || dataPriv.get(this, 'finish')) {
						anim.stop(true);
					}
				};

			doAnimation.finish = doAnimation;

			return empty || optall.queue === false
				? this.each(doAnimation)
				: this.queue(optall.queue, doAnimation);
		},
		stop: function (type, clearQueue, gotoEnd) {
			var stopQueue = function (hooks) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop(gotoEnd);
			};

			if (typeof type !== 'string') {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if (clearQueue) {
				this.queue(type || 'fx', []);
			}

			return this.each(function () {
				var dequeue = true,
					index = type != null && type + 'queueHooks',
					timers = jQuery.timers,
					data = dataPriv.get(this);

				if (index) {
					if (data[index] && data[index].stop) {
						stopQueue(data[index]);
					}
				} else {
					for (index in data) {
						if (data[index] && data[index].stop && rrun.test(index)) {
							stopQueue(data[index]);
						}
					}
				}

				for (index = timers.length; index--; ) {
					if (
						timers[index].elem === this &&
						(type == null || timers[index].queue === type)
					) {
						timers[index].anim.stop(gotoEnd);
						dequeue = false;
						timers.splice(index, 1);
					}
				}

				// Start the next in the queue if the last step wasn't forced.
				// Timers currently will call their complete callbacks, which
				// will dequeue but only if they were gotoEnd.
				if (dequeue || !gotoEnd) {
					jQuery.dequeue(this, type);
				}
			});
		},
		finish: function (type) {
			if (type !== false) {
				type = type || 'fx';
			}
			return this.each(function () {
				var index,
					data = dataPriv.get(this),
					queue = data[type + 'queue'],
					hooks = data[type + 'queueHooks'],
					timers = jQuery.timers,
					length = queue ? queue.length : 0;

				// Enable finishing flag on private data
				data.finish = true;

				// Empty the queue first
				jQuery.queue(this, type, []);

				if (hooks && hooks.stop) {
					hooks.stop.call(this, true);
				}

				// Look for any active animations, and finish them
				for (index = timers.length; index--; ) {
					if (timers[index].elem === this && timers[index].queue === type) {
						timers[index].anim.stop(true);
						timers.splice(index, 1);
					}
				}

				// Look for any animations in the old queue and finish them
				for (index = 0; index < length; index++) {
					if (queue[index] && queue[index].finish) {
						queue[index].finish.call(this);
					}
				}

				// Turn off finishing flag
				delete data.finish;
			});
		},
	});

	jQuery.each(['toggle', 'show', 'hide'], function (_i, name) {
		var cssFn = jQuery.fn[name];
		jQuery.fn[name] = function (speed, easing, callback) {
			return speed == null || typeof speed === 'boolean'
				? cssFn.apply(this, arguments)
				: this.animate(genFx(name, true), speed, easing, callback);
		};
	});

	// Generate shortcuts for custom animations
	jQuery.each(
		{
			slideDown: genFx('show'),
			slideUp: genFx('hide'),
			slideToggle: genFx('toggle'),
			fadeIn: { opacity: 'show' },
			fadeOut: { opacity: 'hide' },
			fadeToggle: { opacity: 'toggle' },
		},
		function (name, props) {
			jQuery.fn[name] = function (speed, easing, callback) {
				return this.animate(props, speed, easing, callback);
			};
		}
	);

	jQuery.timers = [];
	jQuery.fx.tick = function () {
		var timer,
			i = 0,
			timers = jQuery.timers;

		fxNow = Date.now();

		for (; i < timers.length; i++) {
			timer = timers[i];

			// Run the timer and safely remove it when done (allowing for external removal)
			if (!timer() && timers[i] === timer) {
				timers.splice(i--, 1);
			}
		}

		if (!timers.length) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};

	jQuery.fx.timer = function (timer) {
		jQuery.timers.push(timer);
		jQuery.fx.start();
	};

	jQuery.fx.interval = 13;
	jQuery.fx.start = function () {
		if (inProgress) {
			return;
		}

		inProgress = true;
		schedule();
	};

	jQuery.fx.stop = function () {
		inProgress = null;
	};

	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,

		// Default speed
		_default: 400,
	};

	// Based off of the plugin by Clint Helfers, with permission.
	// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
	jQuery.fn.delay = function (time, type) {
		time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
		type = type || 'fx';

		return this.queue(type, function (next, hooks) {
			var timeout = window.setTimeout(next, time);
			hooks.stop = function () {
				window.clearTimeout(timeout);
			};
		});
	};

	(function () {
		var input = document.createElement('input'),
			select = document.createElement('select'),
			opt = select.appendChild(document.createElement('option'));

		input.type = 'checkbox';

		// Support: Android <=4.3 only
		// Default value for a checkbox should be "on"
		support.checkOn = input.value !== '';

		// Support: IE <=11 only
		// Must access selectedIndex to make default options select
		support.optSelected = opt.selected;

		// Support: IE <=11 only
		// An input loses its value after becoming a radio
		input = document.createElement('input');
		input.value = 't';
		input.type = 'radio';
		support.radioValue = input.value === 't';
	})();

	var boolHook,
		attrHandle = jQuery.expr.attrHandle;

	jQuery.fn.extend({
		attr: function (name, value) {
			return access(this, jQuery.attr, name, value, arguments.length > 1);
		},

		removeAttr: function (name) {
			return this.each(function () {
				jQuery.removeAttr(this, name);
			});
		},
	});

	jQuery.extend({
		attr: function (elem, name, value) {
			var ret,
				hooks,
				nType = elem.nodeType;

			// Don't get/set attributes on text, comment and attribute nodes
			if (nType === 3 || nType === 8 || nType === 2) {
				return;
			}

			// Fallback to prop when attributes are not supported
			if (typeof elem.getAttribute === 'undefined') {
				return jQuery.prop(elem, name, value);
			}

			// Attribute hooks are determined by the lowercase version
			// Grab necessary hook if one is defined
			if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
				hooks =
					jQuery.attrHooks[name.toLowerCase()] ||
					(jQuery.expr.match.bool.test(name) ? boolHook : undefined);
			}

			if (value !== undefined) {
				if (value === null) {
					jQuery.removeAttr(elem, name);
					return;
				}

				if (
					hooks &&
					'set' in hooks &&
					(ret = hooks.set(elem, value, name)) !== undefined
				) {
					return ret;
				}

				elem.setAttribute(name, value + '');
				return value;
			}

			if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
				return ret;
			}

			ret = jQuery.find.attr(elem, name);

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ? undefined : ret;
		},

		attrHooks: {
			type: {
				set: function (elem, value) {
					if (
						!support.radioValue &&
						value === 'radio' &&
						nodeName(elem, 'input')
					) {
						var val = elem.value;
						elem.setAttribute('type', value);
						if (val) {
							elem.value = val;
						}
						return value;
					}
				},
			},
		},

		removeAttr: function (elem, value) {
			var name,
				i = 0,
				// Attribute names can contain non-HTML whitespace characters
				// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
				attrNames = value && value.match(rnothtmlwhite);

			if (attrNames && elem.nodeType === 1) {
				while ((name = attrNames[i++])) {
					elem.removeAttribute(name);
				}
			}
		},
	});

	// Hooks for boolean attributes
	boolHook = {
		set: function (elem, value, name) {
			if (value === false) {
				// Remove boolean attributes when set to false
				jQuery.removeAttr(elem, name);
			} else {
				elem.setAttribute(name, name);
			}
			return name;
		},
	};

	jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (_i, name) {
		var getter = attrHandle[name] || jQuery.find.attr;

		attrHandle[name] = function (elem, name, isXML) {
			var ret,
				handle,
				lowercaseName = name.toLowerCase();

			if (!isXML) {
				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[lowercaseName];
				attrHandle[lowercaseName] = ret;
				ret = getter(elem, name, isXML) != null ? lowercaseName : null;
				attrHandle[lowercaseName] = handle;
			}
			return ret;
		};
	});

	var rfocusable = /^(?:input|select|textarea|button)$/i,
		rclickable = /^(?:a|area)$/i;

	jQuery.fn.extend({
		prop: function (name, value) {
			return access(this, jQuery.prop, name, value, arguments.length > 1);
		},

		removeProp: function (name) {
			return this.each(function () {
				delete this[jQuery.propFix[name] || name];
			});
		},
	});

	jQuery.extend({
		prop: function (elem, name, value) {
			var ret,
				hooks,
				nType = elem.nodeType;

			// Don't get/set properties on text, comment and attribute nodes
			if (nType === 3 || nType === 8 || nType === 2) {
				return;
			}

			if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
				// Fix name and attach hooks
				name = jQuery.propFix[name] || name;
				hooks = jQuery.propHooks[name];
			}

			if (value !== undefined) {
				if (
					hooks &&
					'set' in hooks &&
					(ret = hooks.set(elem, value, name)) !== undefined
				) {
					return ret;
				}

				return (elem[name] = value);
			}

			if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
				return ret;
			}

			return elem[name];
		},

		propHooks: {
			tabIndex: {
				get: function (elem) {
					// Support: IE <=9 - 11 only
					// elem.tabIndex doesn't always return the
					// correct value when it hasn't been explicitly set
					// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
					// Use proper attribute retrieval(#12072)
					var tabindex = jQuery.find.attr(elem, 'tabindex');

					if (tabindex) {
						return parseInt(tabindex, 10);
					}

					if (
						rfocusable.test(elem.nodeName) ||
						(rclickable.test(elem.nodeName) && elem.href)
					) {
						return 0;
					}

					return -1;
				},
			},
		},

		propFix: {
			for: 'htmlFor',
			class: 'className',
		},
	});

	// Support: IE <=11 only
	// Accessing the selectedIndex property
	// forces the browser to respect setting selected
	// on the option
	// The getter ensures a default option is selected
	// when in an optgroup
	// eslint rule "no-unused-expressions" is disabled for this code
	// since it considers such accessions noop
	if (!support.optSelected) {
		jQuery.propHooks.selected = {
			get: function (elem) {
				/* eslint no-unused-expressions: "off" */

				var parent = elem.parentNode;
				if (parent && parent.parentNode) {
					parent.parentNode.selectedIndex;
				}
				return null;
			},
			set: function (elem) {
				/* eslint no-unused-expressions: "off" */

				var parent = elem.parentNode;
				if (parent) {
					parent.selectedIndex;

					if (parent.parentNode) {
						parent.parentNode.selectedIndex;
					}
				}
			},
		};
	}

	jQuery.each(
		[
			'tabIndex',
			'readOnly',
			'maxLength',
			'cellSpacing',
			'cellPadding',
			'rowSpan',
			'colSpan',
			'useMap',
			'frameBorder',
			'contentEditable',
		],
		function () {
			jQuery.propFix[this.toLowerCase()] = this;
		}
	);

	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse(value) {
		var tokens = value.match(rnothtmlwhite) || [];
		return tokens.join(' ');
	}

	function getClass(elem) {
		return (elem.getAttribute && elem.getAttribute('class')) || '';
	}

	function classesToArray(value) {
		if (Array.isArray(value)) {
			return value;
		}
		if (typeof value === 'string') {
			return value.match(rnothtmlwhite) || [];
		}
		return [];
	}

	jQuery.fn.extend({
		addClass: function (value) {
			var classes,
				elem,
				cur,
				curValue,
				clazz,
				j,
				finalValue,
				i = 0;

			if (isFunction(value)) {
				return this.each(function (j) {
					jQuery(this).addClass(value.call(this, j, getClass(this)));
				});
			}

			classes = classesToArray(value);

			if (classes.length) {
				while ((elem = this[i++])) {
					curValue = getClass(elem);
					cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';

					if (cur) {
						j = 0;
						while ((clazz = classes[j++])) {
							if (cur.indexOf(' ' + clazz + ' ') < 0) {
								cur += clazz + ' ';
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = stripAndCollapse(cur);
						if (curValue !== finalValue) {
							elem.setAttribute('class', finalValue);
						}
					}
				}
			}

			return this;
		},

		removeClass: function (value) {
			var classes,
				elem,
				cur,
				curValue,
				clazz,
				j,
				finalValue,
				i = 0;

			if (isFunction(value)) {
				return this.each(function (j) {
					jQuery(this).removeClass(value.call(this, j, getClass(this)));
				});
			}

			if (!arguments.length) {
				return this.attr('class', '');
			}

			classes = classesToArray(value);

			if (classes.length) {
				while ((elem = this[i++])) {
					curValue = getClass(elem);

					// This expression is here for better compressibility (see addClass)
					cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';

					if (cur) {
						j = 0;
						while ((clazz = classes[j++])) {
							// Remove *all* instances
							while (cur.indexOf(' ' + clazz + ' ') > -1) {
								cur = cur.replace(' ' + clazz + ' ', ' ');
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = stripAndCollapse(cur);
						if (curValue !== finalValue) {
							elem.setAttribute('class', finalValue);
						}
					}
				}
			}

			return this;
		},

		toggleClass: function (value, stateVal) {
			var type = typeof value,
				isValidValue = type === 'string' || Array.isArray(value);

			if (typeof stateVal === 'boolean' && isValidValue) {
				return stateVal ? this.addClass(value) : this.removeClass(value);
			}

			if (isFunction(value)) {
				return this.each(function (i) {
					jQuery(this).toggleClass(
						value.call(this, i, getClass(this), stateVal),
						stateVal
					);
				});
			}

			return this.each(function () {
				var className, i, self, classNames;

				if (isValidValue) {
					// Toggle individual class names
					i = 0;
					self = jQuery(this);
					classNames = classesToArray(value);

					while ((className = classNames[i++])) {
						// Check each className given, space separated list
						if (self.hasClass(className)) {
							self.removeClass(className);
						} else {
							self.addClass(className);
						}
					}

					// Toggle whole class name
				} else if (value === undefined || type === 'boolean') {
					className = getClass(this);
					if (className) {
						// Store className if set
						dataPriv.set(this, '__className__', className);
					}

					// If the element has a class name or if we're passed `false`,
					// then remove the whole classname (if there was one, the above saved it).
					// Otherwise bring back whatever was previously saved (if anything),
					// falling back to the empty string if nothing was stored.
					if (this.setAttribute) {
						this.setAttribute(
							'class',
							className || value === false
								? ''
								: dataPriv.get(this, '__className__') || ''
						);
					}
				}
			});
		},

		hasClass: function (selector) {
			var className,
				elem,
				i = 0;

			className = ' ' + selector + ' ';
			while ((elem = this[i++])) {
				if (
					elem.nodeType === 1 &&
					(' ' + stripAndCollapse(getClass(elem)) + ' ').indexOf(className) > -1
				) {
					return true;
				}
			}

			return false;
		},
	});

	var rreturn = /\r/g;

	jQuery.fn.extend({
		val: function (value) {
			var hooks,
				ret,
				valueIsFunction,
				elem = this[0];

			if (!arguments.length) {
				if (elem) {
					hooks =
						jQuery.valHooks[elem.type] ||
						jQuery.valHooks[elem.nodeName.toLowerCase()];

					if (
						hooks &&
						'get' in hooks &&
						(ret = hooks.get(elem, 'value')) !== undefined
					) {
						return ret;
					}

					ret = elem.value;

					// Handle most common string cases
					if (typeof ret === 'string') {
						return ret.replace(rreturn, '');
					}

					// Handle cases where value is null/undef or number
					return ret == null ? '' : ret;
				}

				return;
			}

			valueIsFunction = isFunction(value);

			return this.each(function (i) {
				var val;

				if (this.nodeType !== 1) {
					return;
				}

				if (valueIsFunction) {
					val = value.call(this, i, jQuery(this).val());
				} else {
					val = value;
				}

				// Treat null/undefined as ""; convert numbers to string
				if (val == null) {
					val = '';
				} else if (typeof val === 'number') {
					val += '';
				} else if (Array.isArray(val)) {
					val = jQuery.map(val, function (value) {
						return value == null ? '' : value + '';
					});
				}

				hooks =
					jQuery.valHooks[this.type] ||
					jQuery.valHooks[this.nodeName.toLowerCase()];

				// If set returns undefined, fall back to normal setting
				if (
					!hooks ||
					!('set' in hooks) ||
					hooks.set(this, val, 'value') === undefined
				) {
					this.value = val;
				}
			});
		},
	});

	jQuery.extend({
		valHooks: {
			option: {
				get: function (elem) {
					var val = jQuery.find.attr(elem, 'value');
					return val != null
						? val
						: // Support: IE <=10 - 11 only
						  // option.text throws exceptions (#14686, #14858)
						  // Strip and collapse whitespace
						  // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
						  stripAndCollapse(jQuery.text(elem));
				},
			},
			select: {
				get: function (elem) {
					var value,
						option,
						i,
						options = elem.options,
						index = elem.selectedIndex,
						one = elem.type === 'select-one',
						values = one ? null : [],
						max = one ? index + 1 : options.length;

					if (index < 0) {
						i = max;
					} else {
						i = one ? index : 0;
					}

					// Loop through all the selected options
					for (; i < max; i++) {
						option = options[i];

						// Support: IE <=9 only
						// IE8-9 doesn't update selected after form reset (#2551)
						if (
							(option.selected || i === index) &&
							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							(!option.parentNode.disabled ||
								!nodeName(option.parentNode, 'optgroup'))
						) {
							// Get the specific value for the option
							value = jQuery(option).val();

							// We don't need an array for one selects
							if (one) {
								return value;
							}

							// Multi-Selects return an array
							values.push(value);
						}
					}

					return values;
				},

				set: function (elem, value) {
					var optionSet,
						option,
						options = elem.options,
						values = jQuery.makeArray(value),
						i = options.length;

					while (i--) {
						option = options[i];

						/* eslint-disable no-cond-assign */

						if (
							(option.selected =
								jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1)
						) {
							optionSet = true;
						}

						/* eslint-enable no-cond-assign */
					}

					// Force browsers to behave consistently when non-matching value is set
					if (!optionSet) {
						elem.selectedIndex = -1;
					}
					return values;
				},
			},
		},
	});

	// Radios and checkboxes getter/setter
	jQuery.each(['radio', 'checkbox'], function () {
		jQuery.valHooks[this] = {
			set: function (elem, value) {
				if (Array.isArray(value)) {
					return (elem.checked =
						jQuery.inArray(jQuery(elem).val(), value) > -1);
				}
			},
		};
		if (!support.checkOn) {
			jQuery.valHooks[this].get = function (elem) {
				return elem.getAttribute('value') === null ? 'on' : elem.value;
			};
		}
	});

	// Return jQuery for attributes-only inclusion

	support.focusin = 'onfocusin' in window;

	var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
		stopPropagationCallback = function (e) {
			e.stopPropagation();
		};

	jQuery.extend(jQuery.event, {
		trigger: function (event, data, elem, onlyHandlers) {
			var i,
				cur,
				tmp,
				bubbleType,
				ontype,
				handle,
				special,
				lastElement,
				eventPath = [elem || document],
				type = hasOwn.call(event, 'type') ? event.type : event,
				namespaces = hasOwn.call(event, 'namespace')
					? event.namespace.split('.')
					: [];

			cur = lastElement = tmp = elem = elem || document;

			// Don't do events on text and comment nodes
			if (elem.nodeType === 3 || elem.nodeType === 8) {
				return;
			}

			// focus/blur morphs to focusin/out; ensure we're not firing them right now
			if (rfocusMorph.test(type + jQuery.event.triggered)) {
				return;
			}

			if (type.indexOf('.') > -1) {
				// Namespaced trigger; create a regexp to match event type in handle()
				namespaces = type.split('.');
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf(':') < 0 && 'on' + type;

			// Caller can pass in a jQuery.Event object, Object, or just an event type string
			event = event[jQuery.expando]
				? event
				: new jQuery.Event(type, typeof event === 'object' && event);

			// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join('.');
			event.rnamespace = event.namespace
				? new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)')
				: null;

			// Clean up the event in case it is being reused
			event.result = undefined;
			if (!event.target) {
				event.target = elem;
			}

			// Clone any incoming data and prepend the event, creating the handler arg list
			data = data == null ? [event] : jQuery.makeArray(data, [event]);

			// Allow special events to draw outside the lines
			special = jQuery.event.special[type] || {};
			if (
				!onlyHandlers &&
				special.trigger &&
				special.trigger.apply(elem, data) === false
			) {
				return;
			}

			// Determine event propagation path in advance, per W3C events spec (#9951)
			// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
			if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
				bubbleType = special.delegateType || type;
				if (!rfocusMorph.test(bubbleType + type)) {
					cur = cur.parentNode;
				}
				for (; cur; cur = cur.parentNode) {
					eventPath.push(cur);
					tmp = cur;
				}

				// Only add window if we got to document (e.g., not plain obj or detached DOM)
				if (tmp === (elem.ownerDocument || document)) {
					eventPath.push(tmp.defaultView || tmp.parentWindow || window);
				}
			}

			// Fire handlers on the event path
			i = 0;
			while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
				lastElement = cur;
				event.type = i > 1 ? bubbleType : special.bindType || type;

				// jQuery handler
				handle =
					(dataPriv.get(cur, 'events') || Object.create(null))[event.type] &&
					dataPriv.get(cur, 'handle');
				if (handle) {
					handle.apply(cur, data);
				}

				// Native handler
				handle = ontype && cur[ontype];
				if (handle && handle.apply && acceptData(cur)) {
					event.result = handle.apply(cur, data);
					if (event.result === false) {
						event.preventDefault();
					}
				}
			}
			event.type = type;

			// If nobody prevented the default action, do it now
			if (!onlyHandlers && !event.isDefaultPrevented()) {
				if (
					(!special._default ||
						special._default.apply(eventPath.pop(), data) === false) &&
					acceptData(elem)
				) {
					// Call a native DOM method on the target with the same name as the event.
					// Don't do default actions on window, that's where global variables be (#6170)
					if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
						// Don't re-trigger an onFOO event when we call its FOO() method
						tmp = elem[ontype];

						if (tmp) {
							elem[ontype] = null;
						}

						// Prevent re-triggering of the same event, since we already bubbled it above
						jQuery.event.triggered = type;

						if (event.isPropagationStopped()) {
							lastElement.addEventListener(type, stopPropagationCallback);
						}

						elem[type]();

						if (event.isPropagationStopped()) {
							lastElement.removeEventListener(type, stopPropagationCallback);
						}

						jQuery.event.triggered = undefined;

						if (tmp) {
							elem[ontype] = tmp;
						}
					}
				}
			}

			return event.result;
		},

		// Piggyback on a donor event to simulate a different one
		// Used only for `focus(in | out)` events
		simulate: function (type, elem, event) {
			var e = jQuery.extend(new jQuery.Event(), event, {
				type: type,
				isSimulated: true,
			});

			jQuery.event.trigger(e, null, elem);
		},
	});

	jQuery.fn.extend({
		trigger: function (type, data) {
			return this.each(function () {
				jQuery.event.trigger(type, data, this);
			});
		},
		triggerHandler: function (type, data) {
			var elem = this[0];
			if (elem) {
				return jQuery.event.trigger(type, data, elem, true);
			}
		},
	});

	// Support: Firefox <=44
	// Firefox doesn't have focus(in | out) events
	// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
	//
	// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
	// focus(in | out) events fire after focus & blur events,
	// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
	// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
	if (!support.focusin) {
		jQuery.each({ focus: 'focusin', blur: 'focusout' }, function (orig, fix) {
			// Attach a single capturing handler on the document while someone wants focusin/focusout
			var handler = function (event) {
				jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
			};

			jQuery.event.special[fix] = {
				setup: function () {
					// Handle: regular nodes (via `this.ownerDocument`), window
					// (via `this.document`) & document (via `this`).
					var doc = this.ownerDocument || this.document || this,
						attaches = dataPriv.access(doc, fix);

					if (!attaches) {
						doc.addEventListener(orig, handler, true);
					}
					dataPriv.access(doc, fix, (attaches || 0) + 1);
				},
				teardown: function () {
					var doc = this.ownerDocument || this.document || this,
						attaches = dataPriv.access(doc, fix) - 1;

					if (!attaches) {
						doc.removeEventListener(orig, handler, true);
						dataPriv.remove(doc, fix);
					} else {
						dataPriv.access(doc, fix, attaches);
					}
				},
			};
		});
	}
	var location = window.location;

	var nonce = { guid: Date.now() };

	var rquery = /\?/;

	// Cross-browser xml parsing
	jQuery.parseXML = function (data) {
		var xml, parserErrorElem;
		if (!data || typeof data !== 'string') {
			return null;
		}

		// Support: IE 9 - 11 only
		// IE throws on parseFromString with invalid input.
		try {
			xml = new window.DOMParser().parseFromString(data, 'text/xml');
		} catch (e) {}

		parserErrorElem = xml && xml.getElementsByTagName('parsererror')[0];
		if (!xml || parserErrorElem) {
			jQuery.error(
				'Invalid XML: ' +
					(parserErrorElem
						? jQuery
								.map(parserErrorElem.childNodes, function (el) {
									return el.textContent;
								})
								.join('\n')
						: data)
			);
		}
		return xml;
	};

	var rbracket = /\[\]$/,
		rCRLF = /\r?\n/g,
		rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		rsubmittable = /^(?:input|select|textarea|keygen)/i;

	function buildParams(prefix, obj, traditional, add) {
		var name;

		if (Array.isArray(obj)) {
			// Serialize array item.
			jQuery.each(obj, function (i, v) {
				if (traditional || rbracket.test(prefix)) {
					// Treat each array item as a scalar.
					add(prefix, v);
				} else {
					// Item is non-scalar (array or object), encode its numeric index.
					buildParams(
						prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']',
						v,
						traditional,
						add
					);
				}
			});
		} else if (!traditional && toType(obj) === 'object') {
			// Serialize object item.
			for (name in obj) {
				buildParams(prefix + '[' + name + ']', obj[name], traditional, add);
			}
		} else {
			// Serialize scalar item.
			add(prefix, obj);
		}
	}

	// Serialize an array of form elements or a set of
	// key/values into a query string
	jQuery.param = function (a, traditional) {
		var prefix,
			s = [],
			add = function (key, valueOrFunction) {
				// If value is a function, invoke it and use its return value
				var value = isFunction(valueOrFunction)
					? valueOrFunction()
					: valueOrFunction;

				s[s.length] =
					encodeURIComponent(key) +
					'=' +
					encodeURIComponent(value == null ? '' : value);
			};

		if (a == null) {
			return '';
		}

		// If an array was passed in, assume that it is an array of form elements.
		if (Array.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
			// Serialize the form elements
			jQuery.each(a, function () {
				add(this.name, this.value);
			});
		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for (prefix in a) {
				buildParams(prefix, a[prefix], traditional, add);
			}
		}

		// Return the resulting serialization
		return s.join('&');
	};

	jQuery.fn.extend({
		serialize: function () {
			return jQuery.param(this.serializeArray());
		},
		serializeArray: function () {
			return this.map(function () {
				// Can add propHook for "elements" to filter or add form elements
				var elements = jQuery.prop(this, 'elements');
				return elements ? jQuery.makeArray(elements) : this;
			})
				.filter(function () {
					var type = this.type;

					// Use .is( ":disabled" ) so that fieldset[disabled] works
					return (
						this.name &&
						!jQuery(this).is(':disabled') &&
						rsubmittable.test(this.nodeName) &&
						!rsubmitterTypes.test(type) &&
						(this.checked || !rcheckableType.test(type))
					);
				})
				.map(function (_i, elem) {
					var val = jQuery(this).val();

					if (val == null) {
						return null;
					}

					if (Array.isArray(val)) {
						return jQuery.map(val, function (val) {
							return { name: elem.name, value: val.replace(rCRLF, '\r\n') };
						});
					}

					return { name: elem.name, value: val.replace(rCRLF, '\r\n') };
				})
				.get();
		},
	});

	var r20 = /%20/g,
		rhash = /#.*$/,
		rantiCache = /([?&])_=[^&]*/,
		rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm,
		// #7653, #8125, #8152: local protocol detection
		rlocalProtocol =
			/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		rnoContent = /^(?:GET|HEAD)$/,
		rprotocol = /^\/\//,
		/* Prefilters
		 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
		 * 2) These are called:
		 *    - BEFORE asking for a transport
		 *    - AFTER param serialization (s.data is a string if s.processData is true)
		 * 3) key is the dataType
		 * 4) the catchall symbol "*" can be used
		 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
		 */
		prefilters = {},
		/* Transports bindings
		 * 1) key is the dataType
		 * 2) the catchall symbol "*" can be used
		 * 3) selection will start with transport dataType and THEN go to "*" if needed
		 */
		transports = {},
		// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
		allTypes = '*/'.concat('*'),
		// Anchor tag for parsing the document origin
		originAnchor = document.createElement('a');

	originAnchor.href = location.href;

	// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
	function addToPrefiltersOrTransports(structure) {
		// dataTypeExpression is optional and defaults to "*"
		return function (dataTypeExpression, func) {
			if (typeof dataTypeExpression !== 'string') {
				func = dataTypeExpression;
				dataTypeExpression = '*';
			}

			var dataType,
				i = 0,
				dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];

			if (isFunction(func)) {
				// For each dataType in the dataTypeExpression
				while ((dataType = dataTypes[i++])) {
					// Prepend if requested
					if (dataType[0] === '+') {
						dataType = dataType.slice(1) || '*';
						(structure[dataType] = structure[dataType] || []).unshift(func);

						// Otherwise append
					} else {
						(structure[dataType] = structure[dataType] || []).push(func);
					}
				}
			}
		};
	}

	// Base inspection function for prefilters and transports
	function inspectPrefiltersOrTransports(
		structure,
		options,
		originalOptions,
		jqXHR
	) {
		var inspected = {},
			seekingTransport = structure === transports;

		function inspect(dataType) {
			var selected;
			inspected[dataType] = true;
			jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
				var dataTypeOrTransport = prefilterOrFactory(
					options,
					originalOptions,
					jqXHR
				);
				if (
					typeof dataTypeOrTransport === 'string' &&
					!seekingTransport &&
					!inspected[dataTypeOrTransport]
				) {
					options.dataTypes.unshift(dataTypeOrTransport);
					inspect(dataTypeOrTransport);
					return false;
				} else if (seekingTransport) {
					return !(selected = dataTypeOrTransport);
				}
			});
			return selected;
		}

		return inspect(options.dataTypes[0]) || (!inspected['*'] && inspect('*'));
	}

	// A special extend for ajax options
	// that takes "flat" options (not to be deep extended)
	// Fixes #9887
	function ajaxExtend(target, src) {
		var key,
			deep,
			flatOptions = jQuery.ajaxSettings.flatOptions || {};

		for (key in src) {
			if (src[key] !== undefined) {
				(flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
			}
		}
		if (deep) {
			jQuery.extend(true, target, deep);
		}

		return target;
	}

	/* Handles responses to an ajax request:
	 * - finds the right dataType (mediates between content-type and expected dataType)
	 * - returns the corresponding response
	 */
	function ajaxHandleResponses(s, jqXHR, responses) {
		var ct,
			type,
			finalDataType,
			firstDataType,
			contents = s.contents,
			dataTypes = s.dataTypes;

		// Remove auto dataType and get content-type in the process
		while (dataTypes[0] === '*') {
			dataTypes.shift();
			if (ct === undefined) {
				ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');
			}
		}

		// Check if we're dealing with a known content-type
		if (ct) {
			for (type in contents) {
				if (contents[type] && contents[type].test(ct)) {
					dataTypes.unshift(type);
					break;
				}
			}
		}

		// Check to see if we have a response for the expected dataType
		if (dataTypes[0] in responses) {
			finalDataType = dataTypes[0];
		} else {
			// Try convertible dataTypes
			for (type in responses) {
				if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {
					finalDataType = type;
					break;
				}
				if (!firstDataType) {
					firstDataType = type;
				}
			}

			// Or just use first one
			finalDataType = finalDataType || firstDataType;
		}

		// If we found a dataType
		// We add the dataType to the list if needed
		// and return the corresponding response
		if (finalDataType) {
			if (finalDataType !== dataTypes[0]) {
				dataTypes.unshift(finalDataType);
			}
			return responses[finalDataType];
		}
	}

	/* Chain conversions given the request and the original response
	 * Also sets the responseXXX fields on the jqXHR instance
	 */
	function ajaxConvert(s, response, jqXHR, isSuccess) {
		var conv2,
			current,
			conv,
			tmp,
			prev,
			converters = {},
			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();

		// Create converters map with lowercased keys
		if (dataTypes[1]) {
			for (conv in s.converters) {
				converters[conv.toLowerCase()] = s.converters[conv];
			}
		}

		current = dataTypes.shift();

		// Convert to each sequential dataType
		while (current) {
			if (s.responseFields[current]) {
				jqXHR[s.responseFields[current]] = response;
			}

			// Apply the dataFilter if provided
			if (!prev && isSuccess && s.dataFilter) {
				response = s.dataFilter(response, s.dataType);
			}

			prev = current;
			current = dataTypes.shift();

			if (current) {
				// There's only work to do if current dataType is non-auto
				if (current === '*') {
					current = prev;

					// Convert response if prev dataType is non-auto and differs from current
				} else if (prev !== '*' && prev !== current) {
					// Seek a direct converter
					conv = converters[prev + ' ' + current] || converters['* ' + current];

					// If none found, seek a pair
					if (!conv) {
						for (conv2 in converters) {
							// If conv2 outputs current
							tmp = conv2.split(' ');
							if (tmp[1] === current) {
								// If prev can be converted to accepted input
								conv =
									converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];
								if (conv) {
									// Condense equivalence converters
									if (conv === true) {
										conv = converters[conv2];

										// Otherwise, insert the intermediate dataType
									} else if (converters[conv2] !== true) {
										current = tmp[0];
										dataTypes.unshift(tmp[1]);
									}
									break;
								}
							}
						}
					}

					// Apply converter (if not an equivalence)
					if (conv !== true) {
						// Unless errors are allowed to bubble, catch and return them
						if (conv && s.throws) {
							response = conv(response);
						} else {
							try {
								response = conv(response);
							} catch (e) {
								return {
									state: 'parsererror',
									error: conv
										? e
										: 'No conversion from ' + prev + ' to ' + current,
								};
							}
						}
					}
				}
			}
		}

		return { state: 'success', data: response };
	}

	jQuery.extend({
		// Counter for holding the number of active queries
		active: 0,

		// Last-Modified header cache for next request
		lastModified: {},
		etag: {},

		ajaxSettings: {
			url: location.href,
			type: 'GET',
			isLocal: rlocalProtocol.test(location.protocol),
			global: true,
			processData: true,
			async: true,
			contentType: 'application/x-www-form-urlencoded; charset=UTF-8',

			/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

			accepts: {
				'*': allTypes,
				text: 'text/plain',
				html: 'text/html',
				xml: 'application/xml, text/xml',
				json: 'application/json, text/javascript',
			},

			contents: {
				xml: /\bxml\b/,
				html: /\bhtml/,
				json: /\bjson\b/,
			},

			responseFields: {
				xml: 'responseXML',
				text: 'responseText',
				json: 'responseJSON',
			},

			// Data converters
			// Keys separate source (or catchall "*") and destination types with a single space
			converters: {
				// Convert anything to text
				'* text': String,

				// Text to html (true = no transformation)
				'text html': true,

				// Evaluate text as a json expression
				'text json': JSON.parse,

				// Parse text as xml
				'text xml': jQuery.parseXML,
			},

			// For options that shouldn't be deep extended:
			// you can add your own custom options here if
			// and when you create one that shouldn't be
			// deep extended (see ajaxExtend)
			flatOptions: {
				url: true,
				context: true,
			},
		},

		// Creates a full fledged settings object into target
		// with both ajaxSettings and settings fields.
		// If target is omitted, writes into ajaxSettings.
		ajaxSetup: function (target, settings) {
			return settings
				? // Building a settings object
				  ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings)
				: // Extending ajaxSettings
				  ajaxExtend(jQuery.ajaxSettings, target);
		},

		ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
		ajaxTransport: addToPrefiltersOrTransports(transports),

		// Main method
		ajax: function (url, options) {
			// If url is an object, simulate pre-1.5 signature
			if (typeof url === 'object') {
				options = url;
				url = undefined;
			}

			// Force options to be an object
			options = options || {};

			var transport,
				// URL without anti-cache param
				cacheURL,
				// Response headers
				responseHeadersString,
				responseHeaders,
				// timeout handle
				timeoutTimer,
				// Url cleanup var
				urlAnchor,
				// Request state (becomes false upon send and true upon completion)
				completed,
				// To know if global events are to be dispatched
				fireGlobals,
				// Loop variable
				i,
				// uncached part of the url
				uncached,
				// Create the final options object
				s = jQuery.ajaxSetup({}, options),
				// Callbacks context
				callbackContext = s.context || s,
				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext =
					s.context && (callbackContext.nodeType || callbackContext.jquery)
						? jQuery(callbackContext)
						: jQuery.event,
				// Deferreds
				deferred = jQuery.Deferred(),
				completeDeferred = jQuery.Callbacks('once memory'),
				// Status-dependent callbacks
				statusCode = s.statusCode || {},
				// Headers (they are sent all at once)
				requestHeaders = {},
				requestHeadersNames = {},
				// Default abort message
				strAbort = 'canceled',
				// Fake xhr
				jqXHR = {
					readyState: 0,

					// Builds headers hashtable if needed
					getResponseHeader: function (key) {
						var match;
						if (completed) {
							if (!responseHeaders) {
								responseHeaders = {};
								while ((match = rheaders.exec(responseHeadersString))) {
									responseHeaders[match[1].toLowerCase() + ' '] = (
										responseHeaders[match[1].toLowerCase() + ' '] || []
									).concat(match[2]);
								}
							}
							match = responseHeaders[key.toLowerCase() + ' '];
						}
						return match == null ? null : match.join(', ');
					},

					// Raw string
					getAllResponseHeaders: function () {
						return completed ? responseHeadersString : null;
					},

					// Caches the header
					setRequestHeader: function (name, value) {
						if (completed == null) {
							name = requestHeadersNames[name.toLowerCase()] =
								requestHeadersNames[name.toLowerCase()] || name;
							requestHeaders[name] = value;
						}
						return this;
					},

					// Overrides response content-type header
					overrideMimeType: function (type) {
						if (completed == null) {
							s.mimeType = type;
						}
						return this;
					},

					// Status-dependent callbacks
					statusCode: function (map) {
						var code;
						if (map) {
							if (completed) {
								// Execute the appropriate callbacks
								jqXHR.always(map[jqXHR.status]);
							} else {
								// Lazy-add the new callbacks in a way that preserves old ones
								for (code in map) {
									statusCode[code] = [statusCode[code], map[code]];
								}
							}
						}
						return this;
					},

					// Cancel the request
					abort: function (statusText) {
						var finalText = statusText || strAbort;
						if (transport) {
							transport.abort(finalText);
						}
						done(0, finalText);
						return this;
					},
				};

			// Attach deferreds
			deferred.promise(jqXHR);

			// Add protocol if not provided (prefilters might expect it)
			// Handle falsy url in the settings object (#10093: consistency with old signature)
			// We also use the url parameter if available
			s.url = ((url || s.url || location.href) + '').replace(
				rprotocol,
				location.protocol + '//'
			);

			// Alias method option to type as per ticket #12004
			s.type = options.method || options.type || s.method || s.type;

			// Extract dataTypes list
			s.dataTypes = (s.dataType || '*').toLowerCase().match(rnothtmlwhite) || [
				'',
			];

			// A cross-domain request is in order when the origin doesn't match the current origin.
			if (s.crossDomain == null) {
				urlAnchor = document.createElement('a');

				// Support: IE <=8 - 11, Edge 12 - 15
				// IE throws exception on accessing the href property if url is malformed,
				// e.g. http://example.com:80x/
				try {
					urlAnchor.href = s.url;

					// Support: IE <=8 - 11 only
					// Anchor's host property isn't correctly set when s.url is relative
					urlAnchor.href = urlAnchor.href;
					s.crossDomain =
						originAnchor.protocol + '//' + originAnchor.host !==
						urlAnchor.protocol + '//' + urlAnchor.host;
				} catch (e) {
					// If there is an error parsing the URL, assume it is crossDomain,
					// it can be rejected by the transport if it is invalid
					s.crossDomain = true;
				}
			}

			// Convert data if not already a string
			if (s.data && s.processData && typeof s.data !== 'string') {
				s.data = jQuery.param(s.data, s.traditional);
			}

			// Apply prefilters
			inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);

			// If request was aborted inside a prefilter, stop there
			if (completed) {
				return jqXHR;
			}

			// We can fire global events as of now if asked to
			// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
			fireGlobals = jQuery.event && s.global;

			// Watch for a new set of requests
			if (fireGlobals && jQuery.active++ === 0) {
				jQuery.event.trigger('ajaxStart');
			}

			// Uppercase the type
			s.type = s.type.toUpperCase();

			// Determine if request has content
			s.hasContent = !rnoContent.test(s.type);

			// Save the URL in case we're toying with the If-Modified-Since
			// and/or If-None-Match header later on
			// Remove hash to simplify url manipulation
			cacheURL = s.url.replace(rhash, '');

			// More options handling for requests with no content
			if (!s.hasContent) {
				// Remember the hash so we can put it back
				uncached = s.url.slice(cacheURL.length);

				// If data is available and should be processed, append data to url
				if (s.data && (s.processData || typeof s.data === 'string')) {
					cacheURL += (rquery.test(cacheURL) ? '&' : '?') + s.data;

					// #9682: remove data so that it's not used in an eventual retry
					delete s.data;
				}

				// Add or update anti-cache param if needed
				if (s.cache === false) {
					cacheURL = cacheURL.replace(rantiCache, '$1');
					uncached =
						(rquery.test(cacheURL) ? '&' : '?') +
						'_=' +
						nonce.guid++ +
						uncached;
				}

				// Put hash and anti-cache on the URL that will be requested (gh-1732)
				s.url = cacheURL + uncached;

				// Change '%20' to '+' if this is encoded form body content (gh-2658)
			} else if (
				s.data &&
				s.processData &&
				(s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0
			) {
				s.data = s.data.replace(r20, '+');
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
			if (s.ifModified) {
				if (jQuery.lastModified[cacheURL]) {
					jqXHR.setRequestHeader(
						'If-Modified-Since',
						jQuery.lastModified[cacheURL]
					);
				}
				if (jQuery.etag[cacheURL]) {
					jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);
				}
			}

			// Set the correct header, if data is being sent
			if (
				(s.data && s.hasContent && s.contentType !== false) ||
				options.contentType
			) {
				jqXHR.setRequestHeader('Content-Type', s.contentType);
			}

			// Set the Accepts header for the server, depending on the dataType
			jqXHR.setRequestHeader(
				'Accept',
				s.dataTypes[0] && s.accepts[s.dataTypes[0]]
					? s.accepts[s.dataTypes[0]] +
							(s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '')
					: s.accepts['*']
			);

			// Check for headers option
			for (i in s.headers) {
				jqXHR.setRequestHeader(i, s.headers[i]);
			}

			// Allow custom headers/mimetypes and early abort
			if (
				s.beforeSend &&
				(s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)
			) {
				// Abort if not done already and return
				return jqXHR.abort();
			}

			// Aborting is no longer a cancellation
			strAbort = 'abort';

			// Install callbacks on deferreds
			completeDeferred.add(s.complete);
			jqXHR.done(s.success);
			jqXHR.fail(s.error);

			// Get transport
			transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);

			// If no transport, we auto-abort
			if (!transport) {
				done(-1, 'No Transport');
			} else {
				jqXHR.readyState = 1;

				// Send global event
				if (fireGlobals) {
					globalEventContext.trigger('ajaxSend', [jqXHR, s]);
				}

				// If request was aborted inside ajaxSend, stop there
				if (completed) {
					return jqXHR;
				}

				// Timeout
				if (s.async && s.timeout > 0) {
					timeoutTimer = window.setTimeout(function () {
						jqXHR.abort('timeout');
					}, s.timeout);
				}

				try {
					completed = false;
					transport.send(requestHeaders, done);
				} catch (e) {
					// Rethrow post-completion exceptions
					if (completed) {
						throw e;
					}

					// Propagate others as results
					done(-1, e);
				}
			}

			// Callback for when everything is done
			function done(status, nativeStatusText, responses, headers) {
				var isSuccess,
					success,
					error,
					response,
					modified,
					statusText = nativeStatusText;

				// Ignore repeat invocations
				if (completed) {
					return;
				}

				completed = true;

				// Clear timeout if it exists
				if (timeoutTimer) {
					window.clearTimeout(timeoutTimer);
				}

				// Dereference transport for early garbage collection
				// (no matter how long the jqXHR object will be used)
				transport = undefined;

				// Cache response headers
				responseHeadersString = headers || '';

				// Set readyState
				jqXHR.readyState = status > 0 ? 4 : 0;

				// Determine if successful
				isSuccess = (status >= 200 && status < 300) || status === 304;

				// Get response data
				if (responses) {
					response = ajaxHandleResponses(s, jqXHR, responses);
				}

				// Use a noop converter for missing script but not if jsonp
				if (
					!isSuccess &&
					jQuery.inArray('script', s.dataTypes) > -1 &&
					jQuery.inArray('json', s.dataTypes) < 0
				) {
					s.converters['text script'] = function () {};
				}

				// Convert no matter what (that way responseXXX fields are always set)
				response = ajaxConvert(s, response, jqXHR, isSuccess);

				// If successful, handle type chaining
				if (isSuccess) {
					// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
					if (s.ifModified) {
						modified = jqXHR.getResponseHeader('Last-Modified');
						if (modified) {
							jQuery.lastModified[cacheURL] = modified;
						}
						modified = jqXHR.getResponseHeader('etag');
						if (modified) {
							jQuery.etag[cacheURL] = modified;
						}
					}

					// if no content
					if (status === 204 || s.type === 'HEAD') {
						statusText = 'nocontent';

						// if not modified
					} else if (status === 304) {
						statusText = 'notmodified';

						// If we have data, let's convert it
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {
					// Extract error from statusText and normalize for non-aborts
					error = statusText;
					if (status || !statusText) {
						statusText = 'error';
						if (status < 0) {
							status = 0;
						}
					}
				}

				// Set data for the fake xhr object
				jqXHR.status = status;
				jqXHR.statusText = (nativeStatusText || statusText) + '';

				// Success/Error
				if (isSuccess) {
					deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
				} else {
					deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
				}

				// Status-dependent callbacks
				jqXHR.statusCode(statusCode);
				statusCode = undefined;

				if (fireGlobals) {
					globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [
						jqXHR,
						s,
						isSuccess ? success : error,
					]);
				}

				// Complete
				completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);

				if (fireGlobals) {
					globalEventContext.trigger('ajaxComplete', [jqXHR, s]);

					// Handle the global AJAX counter
					if (!--jQuery.active) {
						jQuery.event.trigger('ajaxStop');
					}
				}
			}

			return jqXHR;
		},

		getJSON: function (url, data, callback) {
			return jQuery.get(url, data, callback, 'json');
		},

		getScript: function (url, callback) {
			return jQuery.get(url, undefined, callback, 'script');
		},
	});

	jQuery.each(['get', 'post'], function (_i, method) {
		jQuery[method] = function (url, data, callback, type) {
			// Shift arguments if data argument was omitted
			if (isFunction(data)) {
				type = type || callback;
				callback = data;
				data = undefined;
			}

			// The url can be an options object (which then must have .url)
			return jQuery.ajax(
				jQuery.extend(
					{
						url: url,
						type: method,
						dataType: type,
						data: data,
						success: callback,
					},
					jQuery.isPlainObject(url) && url
				)
			);
		};
	});

	jQuery.ajaxPrefilter(function (s) {
		var i;
		for (i in s.headers) {
			if (i.toLowerCase() === 'content-type') {
				s.contentType = s.headers[i] || '';
			}
		}
	});

	jQuery._evalUrl = function (url, options, doc) {
		return jQuery.ajax({
			url: url,

			// Make this explicit, since user can override this through ajaxSetup (#11264)
			type: 'GET',
			dataType: 'script',
			cache: true,
			async: false,
			global: false,

			// Only evaluate the response if it is successful (gh-4126)
			// dataFilter is not invoked for failure responses, so using it instead
			// of the default converter is kludgy but it works.
			converters: {
				'text script': function () {},
			},
			dataFilter: function (response) {
				jQuery.globalEval(response, options, doc);
			},
		});
	};

	jQuery.fn.extend({
		wrapAll: function (html) {
			var wrap;

			if (this[0]) {
				if (isFunction(html)) {
					html = html.call(this[0]);
				}

				// The elements to wrap the target around
				wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);

				if (this[0].parentNode) {
					wrap.insertBefore(this[0]);
				}

				wrap
					.map(function () {
						var elem = this;

						while (elem.firstElementChild) {
							elem = elem.firstElementChild;
						}

						return elem;
					})
					.append(this);
			}

			return this;
		},

		wrapInner: function (html) {
			if (isFunction(html)) {
				return this.each(function (i) {
					jQuery(this).wrapInner(html.call(this, i));
				});
			}

			return this.each(function () {
				var self = jQuery(this),
					contents = self.contents();

				if (contents.length) {
					contents.wrapAll(html);
				} else {
					self.append(html);
				}
			});
		},

		wrap: function (html) {
			var htmlIsFunction = isFunction(html);

			return this.each(function (i) {
				jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
			});
		},

		unwrap: function (selector) {
			this.parent(selector)
				.not('body')
				.each(function () {
					jQuery(this).replaceWith(this.childNodes);
				});
			return this;
		},
	});

	jQuery.expr.pseudos.hidden = function (elem) {
		return !jQuery.expr.pseudos.visible(elem);
	};
	jQuery.expr.pseudos.visible = function (elem) {
		return !!(
			elem.offsetWidth ||
			elem.offsetHeight ||
			elem.getClientRects().length
		);
	};

	jQuery.ajaxSettings.xhr = function () {
		try {
			return new window.XMLHttpRequest();
		} catch (e) {}
	};

	var xhrSuccessStatus = {
			// File protocol always yields status code 0, assume 200
			0: 200,

			// Support: IE <=9 only
			// #1450: sometimes IE returns 1223 when it should be 204
			1223: 204,
		},
		xhrSupported = jQuery.ajaxSettings.xhr();

	support.cors = !!xhrSupported && 'withCredentials' in xhrSupported;
	support.ajax = xhrSupported = !!xhrSupported;

	jQuery.ajaxTransport(function (options) {
		var callback, errorCallback;

		// Cross domain only allowed if supported through XMLHttpRequest
		if (support.cors || (xhrSupported && !options.crossDomain)) {
			return {
				send: function (headers, complete) {
					var i,
						xhr = options.xhr();

					xhr.open(
						options.type,
						options.url,
						options.async,
						options.username,
						options.password
					);

					// Apply custom fields if provided
					if (options.xhrFields) {
						for (i in options.xhrFields) {
							xhr[i] = options.xhrFields[i];
						}
					}

					// Override mime type if needed
					if (options.mimeType && xhr.overrideMimeType) {
						xhr.overrideMimeType(options.mimeType);
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if (!options.crossDomain && !headers['X-Requested-With']) {
						headers['X-Requested-With'] = 'XMLHttpRequest';
					}

					// Set headers
					for (i in headers) {
						xhr.setRequestHeader(i, headers[i]);
					}

					// Callback
					callback = function (type) {
						return function () {
							if (callback) {
								callback =
									errorCallback =
									xhr.onload =
									xhr.onerror =
									xhr.onabort =
									xhr.ontimeout =
									xhr.onreadystatechange =
										null;

								if (type === 'abort') {
									xhr.abort();
								} else if (type === 'error') {
									// Support: IE <=9 only
									// On a manual native abort, IE9 throws
									// errors on any property access that is not readyState
									if (typeof xhr.status !== 'number') {
										complete(0, 'error');
									} else {
										complete(
											// File: protocol always yields status 0; see #8605, #14207
											xhr.status,
											xhr.statusText
										);
									}
								} else {
									complete(
										xhrSuccessStatus[xhr.status] || xhr.status,
										xhr.statusText,

										// Support: IE <=9 only
										// IE9 has no XHR2 but throws on binary (trac-11426)
										// For XHR2 non-text, let the caller handle it (gh-2498)
										(xhr.responseType || 'text') !== 'text' ||
											typeof xhr.responseText !== 'string'
											? { binary: xhr.response }
											: { text: xhr.responseText },
										xhr.getAllResponseHeaders()
									);
								}
							}
						};
					};

					// Listen to events
					xhr.onload = callback();
					errorCallback = xhr.onerror = xhr.ontimeout = callback('error');

					// Support: IE 9 only
					// Use onreadystatechange to replace onabort
					// to handle uncaught aborts
					if (xhr.onabort !== undefined) {
						xhr.onabort = errorCallback;
					} else {
						xhr.onreadystatechange = function () {
							// Check readyState before timeout as it changes
							if (xhr.readyState === 4) {
								// Allow onerror to be called first,
								// but that will not handle a native abort
								// Also, save errorCallback to a variable
								// as xhr.onerror cannot be accessed
								window.setTimeout(function () {
									if (callback) {
										errorCallback();
									}
								});
							}
						};
					}

					// Create the abort callback
					callback = callback('abort');

					try {
						// Do send the request (this may raise an exception)
						xhr.send((options.hasContent && options.data) || null);
					} catch (e) {
						// #14683: Only rethrow if this hasn't been notified as an error yet
						if (callback) {
							throw e;
						}
					}
				},

				abort: function () {
					if (callback) {
						callback();
					}
				},
			};
		}
	});

	// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
	jQuery.ajaxPrefilter(function (s) {
		if (s.crossDomain) {
			s.contents.script = false;
		}
	});

	// Install script dataType
	jQuery.ajaxSetup({
		accepts: {
			script:
				'text/javascript, application/javascript, ' +
				'application/ecmascript, application/x-ecmascript',
		},
		contents: {
			script: /\b(?:java|ecma)script\b/,
		},
		converters: {
			'text script': function (text) {
				jQuery.globalEval(text);
				return text;
			},
		},
	});

	// Handle cache's special case and crossDomain
	jQuery.ajaxPrefilter('script', function (s) {
		if (s.cache === undefined) {
			s.cache = false;
		}
		if (s.crossDomain) {
			s.type = 'GET';
		}
	});

	// Bind script tag hack transport
	jQuery.ajaxTransport('script', function (s) {
		// This transport only deals with cross domain or forced-by-attrs requests
		if (s.crossDomain || s.scriptAttrs) {
			var script, callback;
			return {
				send: function (_, complete) {
					script = jQuery('<script>')
						.attr(s.scriptAttrs || {})
						.prop({ charset: s.scriptCharset, src: s.url })
						.on(
							'load error',
							(callback = function (evt) {
								script.remove();
								callback = null;
								if (evt) {
									complete(evt.type === 'error' ? 404 : 200, evt.type);
								}
							})
						);

					// Use native DOM manipulation to avoid our domManip AJAX trickery
					document.head.appendChild(script[0]);
				},
				abort: function () {
					if (callback) {
						callback();
					}
				},
			};
		}
	});

	var oldCallbacks = [],
		rjsonp = /(=)\?(?=&|$)|\?\?/;

	// Default jsonp settings
	jQuery.ajaxSetup({
		jsonp: 'callback',
		jsonpCallback: function () {
			var callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce.guid++;
			this[callback] = true;
			return callback;
		},
	});

	// Detect, normalize options and install callbacks for jsonp requests
	jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {
		var callbackName,
			overwritten,
			responseContainer,
			jsonProp =
				s.jsonp !== false &&
				(rjsonp.test(s.url)
					? 'url'
					: typeof s.data === 'string' &&
					  (s.contentType || '').indexOf(
							'application/x-www-form-urlencoded'
					  ) === 0 &&
					  rjsonp.test(s.data) &&
					  'data');

		// Handle iff the expected data type is "jsonp" or we have a parameter to set
		if (jsonProp || s.dataTypes[0] === 'jsonp') {
			// Get callback name, remembering preexisting value associated with it
			callbackName = s.jsonpCallback = isFunction(s.jsonpCallback)
				? s.jsonpCallback()
				: s.jsonpCallback;

			// Insert callback into url or form data
			if (jsonProp) {
				s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);
			} else if (s.jsonp !== false) {
				s.url +=
					(rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;
			}

			// Use data converter to retrieve json after script execution
			s.converters['script json'] = function () {
				if (!responseContainer) {
					jQuery.error(callbackName + ' was not called');
				}
				return responseContainer[0];
			};

			// Force json dataType
			s.dataTypes[0] = 'json';

			// Install callback
			overwritten = window[callbackName];
			window[callbackName] = function () {
				responseContainer = arguments;
			};

			// Clean-up function (fires after converters)
			jqXHR.always(function () {
				// If previous value didn't exist - remove it
				if (overwritten === undefined) {
					jQuery(window).removeProp(callbackName);

					// Otherwise restore preexisting value
				} else {
					window[callbackName] = overwritten;
				}

				// Save back as free
				if (s[callbackName]) {
					// Make sure that re-using the options doesn't screw things around
					s.jsonpCallback = originalSettings.jsonpCallback;

					// Save the callback name for future use
					oldCallbacks.push(callbackName);
				}

				// Call if it was a function and we have a response
				if (responseContainer && isFunction(overwritten)) {
					overwritten(responseContainer[0]);
				}

				responseContainer = overwritten = undefined;
			});

			// Delegate to script
			return 'script';
		}
	});

	// Support: Safari 8 only
	// In Safari 8 documents created via document.implementation.createHTMLDocument
	// collapse sibling forms: the second one becomes a child of the first one.
	// Because of that, this security measure has to be disabled in Safari 8.
	// https://bugs.webkit.org/show_bug.cgi?id=137337
	support.createHTMLDocument = (function () {
		var body = document.implementation.createHTMLDocument('').body;
		body.innerHTML = '<form></form><form></form>';
		return body.childNodes.length === 2;
	})();

	// Argument "data" should be string of html
	// context (optional): If specified, the fragment will be created in this context,
	// defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	jQuery.parseHTML = function (data, context, keepScripts) {
		if (typeof data !== 'string') {
			return [];
		}
		if (typeof context === 'boolean') {
			keepScripts = context;
			context = false;
		}

		var base, parsed, scripts;

		if (!context) {
			// Stop scripts or inline event handlers from being executed immediately
			// by using document.implementation
			if (support.createHTMLDocument) {
				context = document.implementation.createHTMLDocument('');

				// Set the base href for the created document
				// so any parsed elements with URLs
				// are based on the document's URL (gh-2965)
				base = context.createElement('base');
				base.href = document.location.href;
				context.head.appendChild(base);
			} else {
				context = document;
			}
		}

		parsed = rsingleTag.exec(data);
		scripts = !keepScripts && [];

		// Single tag
		if (parsed) {
			return [context.createElement(parsed[1])];
		}

		parsed = buildFragment([data], context, scripts);

		if (scripts && scripts.length) {
			jQuery(scripts).remove();
		}

		return jQuery.merge([], parsed.childNodes);
	};

	/**
	 * Load a url into a page
	 */
	jQuery.fn.load = function (url, params, callback) {
		var selector,
			type,
			response,
			self = this,
			off = url.indexOf(' ');

		if (off > -1) {
			selector = stripAndCollapse(url.slice(off));
			url = url.slice(0, off);
		}

		// If it's a function
		if (isFunction(params)) {
			// We assume that it's the callback
			callback = params;
			params = undefined;

			// Otherwise, build a param string
		} else if (params && typeof params === 'object') {
			type = 'POST';
		}

		// If we have elements to modify, make the request
		if (self.length > 0) {
			jQuery
				.ajax({
					url: url,

					// If "type" variable is undefined, then "GET" method will be used.
					// Make value of this field explicit since
					// user can override it through ajaxSetup method
					type: type || 'GET',
					dataType: 'html',
					data: params,
				})
				.done(function (responseText) {
					// Save response for use in complete callback
					response = arguments;

					self.html(
						selector
							? // If a selector was specified, locate the right elements in a dummy div
							  // Exclude scripts to avoid IE 'Permission Denied' errors
							  jQuery('<div>')
									.append(jQuery.parseHTML(responseText))
									.find(selector)
							: // Otherwise use the full result
							  responseText
					);

					// If the request succeeds, this function gets "data", "status", "jqXHR"
					// but they are ignored because response was set above.
					// If it fails, this function gets "jqXHR", "status", "error"
				})
				.always(
					callback &&
						function (jqXHR, status) {
							self.each(function () {
								callback.apply(
									this,
									response || [jqXHR.responseText, status, jqXHR]
								);
							});
						}
				);
		}

		return this;
	};

	jQuery.expr.pseudos.animated = function (elem) {
		return jQuery.grep(jQuery.timers, function (fn) {
			return elem === fn.elem;
		}).length;
	};

	jQuery.offset = {
		setOffset: function (elem, options, i) {
			var curPosition,
				curLeft,
				curCSSTop,
				curTop,
				curOffset,
				curCSSLeft,
				calculatePosition,
				position = jQuery.css(elem, 'position'),
				curElem = jQuery(elem),
				props = {};

			// Set position first, in-case top/left are set even on static elem
			if (position === 'static') {
				elem.style.position = 'relative';
			}

			curOffset = curElem.offset();
			curCSSTop = jQuery.css(elem, 'top');
			curCSSLeft = jQuery.css(elem, 'left');
			calculatePosition =
				(position === 'absolute' || position === 'fixed') &&
				(curCSSTop + curCSSLeft).indexOf('auto') > -1;

			// Need to be able to calculate position if either
			// top or left is auto and position is either absolute or fixed
			if (calculatePosition) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;
			} else {
				curTop = parseFloat(curCSSTop) || 0;
				curLeft = parseFloat(curCSSLeft) || 0;
			}

			if (isFunction(options)) {
				// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
				options = options.call(elem, i, jQuery.extend({}, curOffset));
			}

			if (options.top != null) {
				props.top = options.top - curOffset.top + curTop;
			}
			if (options.left != null) {
				props.left = options.left - curOffset.left + curLeft;
			}

			if ('using' in options) {
				options.using.call(elem, props);
			} else {
				curElem.css(props);
			}
		},
	};

	jQuery.fn.extend({
		// offset() relates an element's border box to the document origin
		offset: function (options) {
			// Preserve chaining for setter
			if (arguments.length) {
				return options === undefined
					? this
					: this.each(function (i) {
							jQuery.offset.setOffset(this, options, i);
					  });
			}

			var rect,
				win,
				elem = this[0];

			if (!elem) {
				return;
			}

			// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
			// Support: IE <=11 only
			// Running getBoundingClientRect on a
			// disconnected node in IE throws an error
			if (!elem.getClientRects().length) {
				return { top: 0, left: 0 };
			}

			// Get document-relative position by adding viewport scroll to viewport-relative gBCR
			rect = elem.getBoundingClientRect();
			win = elem.ownerDocument.defaultView;
			return {
				top: rect.top + win.pageYOffset,
				left: rect.left + win.pageXOffset,
			};
		},

		// position() relates an element's margin box to its offset parent's padding box
		// This corresponds to the behavior of CSS absolute positioning
		position: function () {
			if (!this[0]) {
				return;
			}

			var offsetParent,
				offset,
				doc,
				elem = this[0],
				parentOffset = { top: 0, left: 0 };

			// position:fixed elements are offset from the viewport, which itself always has zero offset
			if (jQuery.css(elem, 'position') === 'fixed') {
				// Assume position:fixed implies availability of getBoundingClientRect
				offset = elem.getBoundingClientRect();
			} else {
				offset = this.offset();

				// Account for the *real* offset parent, which can be the document or its root element
				// when a statically positioned element is identified
				doc = elem.ownerDocument;
				offsetParent = elem.offsetParent || doc.documentElement;
				while (
					offsetParent &&
					(offsetParent === doc.body || offsetParent === doc.documentElement) &&
					jQuery.css(offsetParent, 'position') === 'static'
				) {
					offsetParent = offsetParent.parentNode;
				}
				if (
					offsetParent &&
					offsetParent !== elem &&
					offsetParent.nodeType === 1
				) {
					// Incorporate borders into its offset, since they are outside its content origin
					parentOffset = jQuery(offsetParent).offset();
					parentOffset.top += jQuery.css(offsetParent, 'borderTopWidth', true);
					parentOffset.left += jQuery.css(
						offsetParent,
						'borderLeftWidth',
						true
					);
				}
			}

			// Subtract parent offsets and element margins
			return {
				top:
					offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),
				left:
					offset.left -
					parentOffset.left -
					jQuery.css(elem, 'marginLeft', true),
			};
		},

		// This method will return documentElement in the following cases:
		// 1) For the element inside the iframe without offsetParent, this method will return
		//    documentElement of the parent window
		// 2) For the hidden or detached element
		// 3) For body or html element, i.e. in case of the html node - it will return itself
		//
		// but those exceptions were never presented as a real life use-cases
		// and might be considered as more preferable results.
		//
		// This logic, however, is not guaranteed and can change at any point in the future
		offsetParent: function () {
			return this.map(function () {
				var offsetParent = this.offsetParent;

				while (
					offsetParent &&
					jQuery.css(offsetParent, 'position') === 'static'
				) {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || documentElement;
			});
		},
	});

	// Create scrollLeft and scrollTop methods
	jQuery.each(
		{ scrollLeft: 'pageXOffset', scrollTop: 'pageYOffset' },
		function (method, prop) {
			var top = 'pageYOffset' === prop;

			jQuery.fn[method] = function (val) {
				return access(
					this,
					function (elem, method, val) {
						// Coalesce documents and windows
						var win;
						if (isWindow(elem)) {
							win = elem;
						} else if (elem.nodeType === 9) {
							win = elem.defaultView;
						}

						if (val === undefined) {
							return win ? win[prop] : elem[method];
						}

						if (win) {
							win.scrollTo(
								!top ? val : win.pageXOffset,
								top ? val : win.pageYOffset
							);
						} else {
							elem[method] = val;
						}
					},
					method,
					val,
					arguments.length
				);
			};
		}
	);

	// Support: Safari <=7 - 9.1, Chrome <=37 - 49
	// Add the top/left cssHooks using jQuery.fn.position
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
	// getComputedStyle returns percent when specified for top/left/bottom/right;
	// rather than make the css module depend on the offset module, just check for it here
	jQuery.each(['top', 'left'], function (_i, prop) {
		jQuery.cssHooks[prop] = addGetHookIf(
			support.pixelPosition,
			function (elem, computed) {
				if (computed) {
					computed = curCSS(elem, prop);

					// If curCSS returns percentage, fallback to offset
					return rnumnonpx.test(computed)
						? jQuery(elem).position()[prop] + 'px'
						: computed;
				}
			}
		);
	});

	// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
	jQuery.each({ Height: 'height', Width: 'width' }, function (name, type) {
		jQuery.each(
			{
				padding: 'inner' + name,
				content: type,
				'': 'outer' + name,
			},
			function (defaultExtra, funcName) {
				// Margin is only for outerHeight, outerWidth
				jQuery.fn[funcName] = function (margin, value) {
					var chainable =
							arguments.length && (defaultExtra || typeof margin !== 'boolean'),
						extra =
							defaultExtra ||
							(margin === true || value === true ? 'margin' : 'border');

					return access(
						this,
						function (elem, type, value) {
							var doc;

							if (isWindow(elem)) {
								// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
								return funcName.indexOf('outer') === 0
									? elem['inner' + name]
									: elem.document.documentElement['client' + name];
							}

							// Get document width or height
							if (elem.nodeType === 9) {
								doc = elem.documentElement;

								// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
								// whichever is greatest
								return Math.max(
									elem.body['scroll' + name],
									doc['scroll' + name],
									elem.body['offset' + name],
									doc['offset' + name],
									doc['client' + name]
								);
							}

							return value === undefined
								? // Get width or height on the element, requesting but not forcing parseFloat
								  jQuery.css(elem, type, extra)
								: // Set width or height on the element
								  jQuery.style(elem, type, value, extra);
						},
						type,
						chainable ? margin : undefined,
						chainable
					);
				};
			}
		);
	});

	jQuery.each(
		[
			'ajaxStart',
			'ajaxStop',
			'ajaxComplete',
			'ajaxError',
			'ajaxSuccess',
			'ajaxSend',
		],
		function (_i, type) {
			jQuery.fn[type] = function (fn) {
				return this.on(type, fn);
			};
		}
	);

	jQuery.fn.extend({
		bind: function (types, data, fn) {
			return this.on(types, null, data, fn);
		},
		unbind: function (types, fn) {
			return this.off(types, null, fn);
		},

		delegate: function (selector, types, data, fn) {
			return this.on(types, selector, data, fn);
		},
		undelegate: function (selector, types, fn) {
			// ( namespace ) or ( selector, types [, fn] )
			return arguments.length === 1
				? this.off(selector, '**')
				: this.off(types, selector || '**', fn);
		},

		hover: function (fnOver, fnOut) {
			return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
		},
	});

	jQuery.each(
		(
			'blur focus focusin focusout resize scroll click dblclick ' +
			'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +
			'change select submit keydown keypress keyup contextmenu'
		).split(' '),
		function (_i, name) {
			// Handle event binding
			jQuery.fn[name] = function (data, fn) {
				return arguments.length > 0
					? this.on(name, null, data, fn)
					: this.trigger(name);
			};
		}
	);

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

	// Bind a function to a context, optionally partially applying any
	// arguments.
	// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
	// However, it is not slated for removal any time soon
	jQuery.proxy = function (fn, context) {
		var tmp, args, proxy;

		if (typeof context === 'string') {
			tmp = fn[context];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if (!isFunction(fn)) {
			return undefined;
		}

		// Simulated bind
		args = slice.call(arguments, 2);
		proxy = function () {
			return fn.apply(context || this, args.concat(slice.call(arguments)));
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	};

	jQuery.holdReady = function (hold) {
		if (hold) {
			jQuery.readyWait++;
		} else {
			jQuery.ready(true);
		}
	};
	jQuery.isArray = Array.isArray;
	jQuery.parseJSON = JSON.parse;
	jQuery.nodeName = nodeName;
	jQuery.isFunction = isFunction;
	jQuery.isWindow = isWindow;
	jQuery.camelCase = camelCase;
	jQuery.type = toType;

	jQuery.now = Date.now;

	jQuery.isNumeric = function (obj) {
		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type(obj);
		return (
			(type === 'number' || type === 'string') &&
			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN(obj - parseFloat(obj))
		);
	};

	jQuery.trim = function (text) {
		return text == null ? '' : (text + '').replace(rtrim, '');
	};

	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.

	// Note that for maximum portability, libraries that are not jQuery should
	// declare themselves as anonymous modules, and avoid setting a global if an
	// AMD loader is present. jQuery is a special case. For more information, see
	// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

	if (typeof define === 'function' && define.amd) {
		define('jquery', [], function () {
			return jQuery;
		});
	}

	var // Map over jQuery in case of overwrite
		_jQuery = window.jQuery,
		// Map over the $ in case of overwrite
		_$ = window.$;

	jQuery.noConflict = function (deep) {
		if (window.$ === jQuery) {
			window.$ = _$;
		}

		if (deep && window.jQuery === jQuery) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	};

	// Expose jQuery and $ identifiers, even in AMD
	// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
	// and CommonJS for browser emulators (#13566)
	if (typeof noGlobal === 'undefined') {
		window.jQuery = window.$ = jQuery;
	}

	return jQuery;
});

/*! jQuery UI - v1.13.1 - 2022-02-10
 * http://jqueryui.com
 * Includes: widget.js, position.js, data.js, disable-selection.js, focusable.js, form-reset-mixin.js, jquery-patch.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/draggable.js, widgets/droppable.js, widgets/resizable.js, widgets/selectable.js, widgets/sortable.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/selectmenu.js, widgets/slider.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js
 * Copyright jQuery Foundation and other contributors; Licensed MIT */

(function (factory) {
	'use strict';

	if (typeof define === 'function' && define.amd) {
		// AMD. Register as an anonymous module.
		define(['jquery'], factory);
	} else {
		// Browser globals
		factory(jQuery);
	}
})(function ($) {
	'use strict';

	$.ui = $.ui || {};

	var version = ($.ui.version = '1.13.1');

	/*!
	 * jQuery UI Widget 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Widget
	//>>group: Core
	//>>description: Provides a factory for creating stateful widgets with a common API.
	//>>docs: http://api.jqueryui.com/jQuery.widget/
	//>>demos: http://jqueryui.com/widget/

	var widgetUuid = 0;
	var widgetHasOwnProperty = Array.prototype.hasOwnProperty;
	var widgetSlice = Array.prototype.slice;

	$.cleanData = (function (orig) {
		return function (elems) {
			var events, elem, i;
			for (i = 0; (elem = elems[i]) != null; i++) {
				// Only trigger remove when necessary to save time
				events = $._data(elem, 'events');
				if (events && events.remove) {
					$(elem).triggerHandler('remove');
				}
			}
			orig(elems);
		};
	})($.cleanData);

	$.widget = function (name, base, prototype) {
		var existingConstructor, constructor, basePrototype;

		// ProxiedPrototype allows the provided prototype to remain unmodified
		// so that it can be used as a mixin for multiple widgets (#8876)
		var proxiedPrototype = {};

		var namespace = name.split('.')[0];
		name = name.split('.')[1];
		var fullName = namespace + '-' + name;

		if (!prototype) {
			prototype = base;
			base = $.Widget;
		}

		if (Array.isArray(prototype)) {
			prototype = $.extend.apply(null, [{}].concat(prototype));
		}

		// Create selector for plugin
		$.expr.pseudos[fullName.toLowerCase()] = function (elem) {
			return !!$.data(elem, fullName);
		};

		$[namespace] = $[namespace] || {};
		existingConstructor = $[namespace][name];
		constructor = $[namespace][name] = function (options, element) {
			// Allow instantiation without "new" keyword
			if (!this || !this._createWidget) {
				return new constructor(options, element);
			}

			// Allow instantiation without initializing for simple inheritance
			// must use "new" keyword (the code above always passes args)
			if (arguments.length) {
				this._createWidget(options, element);
			}
		};

		// Extend with the existing constructor to carry over any static properties
		$.extend(constructor, existingConstructor, {
			version: prototype.version,

			// Copy the object used to create the prototype in case we need to
			// redefine the widget later
			_proto: $.extend({}, prototype),

			// Track widgets that inherit from this widget in case this widget is
			// redefined after a widget inherits from it
			_childConstructors: [],
		});

		basePrototype = new base();

		// We need to make the options hash a property directly on the new instance
		// otherwise we'll modify the options hash on the prototype that we're
		// inheriting from
		basePrototype.options = $.widget.extend({}, basePrototype.options);
		$.each(prototype, function (prop, value) {
			if (typeof value !== 'function') {
				proxiedPrototype[prop] = value;
				return;
			}
			proxiedPrototype[prop] = (function () {
				function _super() {
					return base.prototype[prop].apply(this, arguments);
				}

				function _superApply(args) {
					return base.prototype[prop].apply(this, args);
				}

				return function () {
					var __super = this._super;
					var __superApply = this._superApply;
					var returnValue;

					this._super = _super;
					this._superApply = _superApply;

					returnValue = value.apply(this, arguments);

					this._super = __super;
					this._superApply = __superApply;

					return returnValue;
				};
			})();
		});
		constructor.prototype = $.widget.extend(
			basePrototype,
			{
				// TODO: remove support for widgetEventPrefix
				// always use the name + a colon as the prefix, e.g., draggable:start
				// don't prefix for widgets that aren't DOM-based
				widgetEventPrefix: existingConstructor
					? basePrototype.widgetEventPrefix || name
					: name,
			},
			proxiedPrototype,
			{
				constructor: constructor,
				namespace: namespace,
				widgetName: name,
				widgetFullName: fullName,
			}
		);

		// If this widget is being redefined then we need to find all widgets that
		// are inheriting from it and redefine all of them so that they inherit from
		// the new version of this widget. We're essentially trying to replace one
		// level in the prototype chain.
		if (existingConstructor) {
			$.each(existingConstructor._childConstructors, function (i, child) {
				var childPrototype = child.prototype;

				// Redefine the child widget using the same prototype that was
				// originally used, but inherit from the new version of the base
				$.widget(
					childPrototype.namespace + '.' + childPrototype.widgetName,
					constructor,
					child._proto
				);
			});

			// Remove the list of existing child constructors from the old constructor
			// so the old child constructors can be garbage collected
			delete existingConstructor._childConstructors;
		} else {
			base._childConstructors.push(constructor);
		}

		$.widget.bridge(name, constructor);

		return constructor;
	};

	$.widget.extend = function (target) {
		var input = widgetSlice.call(arguments, 1);
		var inputIndex = 0;
		var inputLength = input.length;
		var key;
		var value;

		for (; inputIndex < inputLength; inputIndex++) {
			for (key in input[inputIndex]) {
				value = input[inputIndex][key];
				if (
					widgetHasOwnProperty.call(input[inputIndex], key) &&
					value !== undefined
				) {
					// Clone objects
					if ($.isPlainObject(value)) {
						target[key] = $.isPlainObject(target[key])
							? $.widget.extend({}, target[key], value)
							: // Don't extend strings, arrays, etc. with objects
							  $.widget.extend({}, value);

						// Copy everything else by reference
					} else {
						target[key] = value;
					}
				}
			}
		}
		return target;
	};

	$.widget.bridge = function (name, object) {
		var fullName = object.prototype.widgetFullName || name;
		$.fn[name] = function (options) {
			var isMethodCall = typeof options === 'string';
			var args = widgetSlice.call(arguments, 1);
			var returnValue = this;

			if (isMethodCall) {
				// If this is an empty collection, we need to have the instance method
				// return undefined instead of the jQuery instance
				if (!this.length && options === 'instance') {
					returnValue = undefined;
				} else {
					this.each(function () {
						var methodValue;
						var instance = $.data(this, fullName);

						if (options === 'instance') {
							returnValue = instance;
							return false;
						}

						if (!instance) {
							return $.error(
								'cannot call methods on ' +
									name +
									' prior to initialization; ' +
									"attempted to call method '" +
									options +
									"'"
							);
						}

						if (
							typeof instance[options] !== 'function' ||
							options.charAt(0) === '_'
						) {
							return $.error(
								"no such method '" +
									options +
									"' for " +
									name +
									' widget instance'
							);
						}

						methodValue = instance[options].apply(instance, args);

						if (methodValue !== instance && methodValue !== undefined) {
							returnValue =
								methodValue && methodValue.jquery
									? returnValue.pushStack(methodValue.get())
									: methodValue;
							return false;
						}
					});
				}
			} else {
				// Allow multiple hashes to be passed on init
				if (args.length) {
					options = $.widget.extend.apply(null, [options].concat(args));
				}

				this.each(function () {
					var instance = $.data(this, fullName);
					if (instance) {
						instance.option(options || {});
						if (instance._init) {
							instance._init();
						}
					} else {
						$.data(this, fullName, new object(options, this));
					}
				});
			}

			return returnValue;
		};
	};

	$.Widget = function (/* options, element */) {};
	$.Widget._childConstructors = [];

	$.Widget.prototype = {
		widgetName: 'widget',
		widgetEventPrefix: '',
		defaultElement: '<div>',

		options: {
			classes: {},
			disabled: false,

			// Callbacks
			create: null,
		},

		_createWidget: function (options, element) {
			element = $(element || this.defaultElement || this)[0];
			this.element = $(element);
			this.uuid = widgetUuid++;
			this.eventNamespace = '.' + this.widgetName + this.uuid;

			this.bindings = $();
			this.hoverable = $();
			this.focusable = $();
			this.classesElementLookup = {};

			if (element !== this) {
				$.data(element, this.widgetFullName, this);
				this._on(true, this.element, {
					remove: function (event) {
						if (event.target === element) {
							this.destroy();
						}
					},
				});
				this.document = $(
					element.style
						? // Element within the document
						  element.ownerDocument
						: // Element is window or document
						  element.document || element
				);
				this.window = $(
					this.document[0].defaultView || this.document[0].parentWindow
				);
			}

			this.options = $.widget.extend(
				{},
				this.options,
				this._getCreateOptions(),
				options
			);

			this._create();

			if (this.options.disabled) {
				this._setOptionDisabled(this.options.disabled);
			}

			this._trigger('create', null, this._getCreateEventData());
			this._init();
		},

		_getCreateOptions: function () {
			return {};
		},

		_getCreateEventData: $.noop,

		_create: $.noop,

		_init: $.noop,

		destroy: function () {
			var that = this;

			this._destroy();
			$.each(this.classesElementLookup, function (key, value) {
				that._removeClass(value, key);
			});

			// We can probably remove the unbind calls in 2.0
			// all event bindings should go through this._on()
			this.element.off(this.eventNamespace).removeData(this.widgetFullName);
			this.widget().off(this.eventNamespace).removeAttr('aria-disabled');

			// Clean up events and states
			this.bindings.off(this.eventNamespace);
		},

		_destroy: $.noop,

		widget: function () {
			return this.element;
		},

		option: function (key, value) {
			var options = key;
			var parts;
			var curOption;
			var i;

			if (arguments.length === 0) {
				// Don't return a reference to the internal hash
				return $.widget.extend({}, this.options);
			}

			if (typeof key === 'string') {
				// Handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
				options = {};
				parts = key.split('.');
				key = parts.shift();
				if (parts.length) {
					curOption = options[key] = $.widget.extend({}, this.options[key]);
					for (i = 0; i < parts.length - 1; i++) {
						curOption[parts[i]] = curOption[parts[i]] || {};
						curOption = curOption[parts[i]];
					}
					key = parts.pop();
					if (arguments.length === 1) {
						return curOption[key] === undefined ? null : curOption[key];
					}
					curOption[key] = value;
				} else {
					if (arguments.length === 1) {
						return this.options[key] === undefined ? null : this.options[key];
					}
					options[key] = value;
				}
			}

			this._setOptions(options);

			return this;
		},

		_setOptions: function (options) {
			var key;

			for (key in options) {
				this._setOption(key, options[key]);
			}

			return this;
		},

		_setOption: function (key, value) {
			if (key === 'classes') {
				this._setOptionClasses(value);
			}

			this.options[key] = value;

			if (key === 'disabled') {
				this._setOptionDisabled(value);
			}

			return this;
		},

		_setOptionClasses: function (value) {
			var classKey, elements, currentElements;

			for (classKey in value) {
				currentElements = this.classesElementLookup[classKey];
				if (
					value[classKey] === this.options.classes[classKey] ||
					!currentElements ||
					!currentElements.length
				) {
					continue;
				}

				// We are doing this to create a new jQuery object because the _removeClass() call
				// on the next line is going to destroy the reference to the current elements being
				// tracked. We need to save a copy of this collection so that we can add the new classes
				// below.
				elements = $(currentElements.get());
				this._removeClass(currentElements, classKey);

				// We don't use _addClass() here, because that uses this.options.classes
				// for generating the string of classes. We want to use the value passed in from
				// _setOption(), this is the new value of the classes option which was passed to
				// _setOption(). We pass this value directly to _classes().
				elements.addClass(
					this._classes({
						element: elements,
						keys: classKey,
						classes: value,
						add: true,
					})
				);
			}
		},

		_setOptionDisabled: function (value) {
			this._toggleClass(
				this.widget(),
				this.widgetFullName + '-disabled',
				null,
				!!value
			);

			// If the widget is becoming disabled, then nothing is interactive
			if (value) {
				this._removeClass(this.hoverable, null, 'ui-state-hover');
				this._removeClass(this.focusable, null, 'ui-state-focus');
			}
		},

		enable: function () {
			return this._setOptions({ disabled: false });
		},

		disable: function () {
			return this._setOptions({ disabled: true });
		},

		_classes: function (options) {
			var full = [];
			var that = this;

			options = $.extend(
				{
					element: this.element,
					classes: this.options.classes || {},
				},
				options
			);

			function bindRemoveEvent() {
				var nodesToBind = [];

				options.element.each(function (_, element) {
					var isTracked = $.map(that.classesElementLookup, function (elements) {
						return elements;
					}).some(function (elements) {
						return elements.is(element);
					});

					if (!isTracked) {
						nodesToBind.push(element);
					}
				});

				that._on($(nodesToBind), {
					remove: '_untrackClassesElement',
				});
			}

			function processClassString(classes, checkOption) {
				var current, i;
				for (i = 0; i < classes.length; i++) {
					current = that.classesElementLookup[classes[i]] || $();
					if (options.add) {
						bindRemoveEvent();
						current = $(
							$.uniqueSort(current.get().concat(options.element.get()))
						);
					} else {
						current = $(current.not(options.element).get());
					}
					that.classesElementLookup[classes[i]] = current;
					full.push(classes[i]);
					if (checkOption && options.classes[classes[i]]) {
						full.push(options.classes[classes[i]]);
					}
				}
			}

			if (options.keys) {
				processClassString(options.keys.match(/\S+/g) || [], true);
			}
			if (options.extra) {
				processClassString(options.extra.match(/\S+/g) || []);
			}

			return full.join(' ');
		},

		_untrackClassesElement: function (event) {
			var that = this;
			$.each(that.classesElementLookup, function (key, value) {
				if ($.inArray(event.target, value) !== -1) {
					that.classesElementLookup[key] = $(value.not(event.target).get());
				}
			});

			this._off($(event.target));
		},

		_removeClass: function (element, keys, extra) {
			return this._toggleClass(element, keys, extra, false);
		},

		_addClass: function (element, keys, extra) {
			return this._toggleClass(element, keys, extra, true);
		},

		_toggleClass: function (element, keys, extra, add) {
			add = typeof add === 'boolean' ? add : extra;
			var shift = typeof element === 'string' || element === null,
				options = {
					extra: shift ? keys : extra,
					keys: shift ? element : keys,
					element: shift ? this.element : element,
					add: add,
				};
			options.element.toggleClass(this._classes(options), add);
			return this;
		},

		_on: function (suppressDisabledCheck, element, handlers) {
			var delegateElement;
			var instance = this;

			// No suppressDisabledCheck flag, shuffle arguments
			if (typeof suppressDisabledCheck !== 'boolean') {
				handlers = element;
				element = suppressDisabledCheck;
				suppressDisabledCheck = false;
			}

			// No element argument, shuffle and use this.element
			if (!handlers) {
				handlers = element;
				element = this.element;
				delegateElement = this.widget();
			} else {
				element = delegateElement = $(element);
				this.bindings = this.bindings.add(element);
			}

			$.each(handlers, function (event, handler) {
				function handlerProxy() {
					// Allow widgets to customize the disabled handling
					// - disabled as an array instead of boolean
					// - disabled class as method for disabling individual parts
					if (
						!suppressDisabledCheck &&
						(instance.options.disabled === true ||
							$(this).hasClass('ui-state-disabled'))
					) {
						return;
					}
					return (
						typeof handler === 'string' ? instance[handler] : handler
					).apply(instance, arguments);
				}

				// Copy the guid so direct unbinding works
				if (typeof handler !== 'string') {
					handlerProxy.guid = handler.guid =
						handler.guid || handlerProxy.guid || $.guid++;
				}

				var match = event.match(/^([\w:-]*)\s*(.*)$/);
				var eventName = match[1] + instance.eventNamespace;
				var selector = match[2];

				if (selector) {
					delegateElement.on(eventName, selector, handlerProxy);
				} else {
					element.on(eventName, handlerProxy);
				}
			});
		},

		_off: function (element, eventName) {
			eventName =
				(eventName || '').split(' ').join(this.eventNamespace + ' ') +
				this.eventNamespace;
			element.off(eventName);

			// Clear the stack to avoid memory leaks (#10056)
			this.bindings = $(this.bindings.not(element).get());
			this.focusable = $(this.focusable.not(element).get());
			this.hoverable = $(this.hoverable.not(element).get());
		},

		_delay: function (handler, delay) {
			function handlerProxy() {
				return (
					typeof handler === 'string' ? instance[handler] : handler
				).apply(instance, arguments);
			}
			var instance = this;
			return setTimeout(handlerProxy, delay || 0);
		},

		_hoverable: function (element) {
			this.hoverable = this.hoverable.add(element);
			this._on(element, {
				mouseenter: function (event) {
					this._addClass($(event.currentTarget), null, 'ui-state-hover');
				},
				mouseleave: function (event) {
					this._removeClass($(event.currentTarget), null, 'ui-state-hover');
				},
			});
		},

		_focusable: function (element) {
			this.focusable = this.focusable.add(element);
			this._on(element, {
				focusin: function (event) {
					this._addClass($(event.currentTarget), null, 'ui-state-focus');
				},
				focusout: function (event) {
					this._removeClass($(event.currentTarget), null, 'ui-state-focus');
				},
			});
		},

		_trigger: function (type, event, data) {
			var prop, orig;
			var callback = this.options[type];

			data = data || {};
			event = $.Event(event);
			event.type = (
				type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type
			).toLowerCase();

			// The original event may come from any element
			// so we need to reset the target on the new event
			event.target = this.element[0];

			// Copy original event properties over to the new event
			orig = event.originalEvent;
			if (orig) {
				for (prop in orig) {
					if (!(prop in event)) {
						event[prop] = orig[prop];
					}
				}
			}

			this.element.trigger(event, data);
			return !(
				(typeof callback === 'function' &&
					callback.apply(this.element[0], [event].concat(data)) === false) ||
				event.isDefaultPrevented()
			);
		},
	};

	$.each({ show: 'fadeIn', hide: 'fadeOut' }, function (method, defaultEffect) {
		$.Widget.prototype['_' + method] = function (element, options, callback) {
			if (typeof options === 'string') {
				options = { effect: options };
			}

			var hasOptions;
			var effectName = !options
				? method
				: options === true || typeof options === 'number'
				? defaultEffect
				: options.effect || defaultEffect;

			options = options || {};
			if (typeof options === 'number') {
				options = { duration: options };
			} else if (options === true) {
				options = {};
			}

			hasOptions = !$.isEmptyObject(options);
			options.complete = callback;

			if (options.delay) {
				element.delay(options.delay);
			}

			if (hasOptions && $.effects && $.effects.effect[effectName]) {
				element[method](options);
			} else if (effectName !== method && element[effectName]) {
				element[effectName](options.duration, options.easing, callback);
			} else {
				element.queue(function (next) {
					$(this)[method]();
					if (callback) {
						callback.call(element[0]);
					}
					next();
				});
			}
		};
	});

	var widget = $.widget;

	/*!
	 * jQuery UI Position 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 *
	 * http://api.jqueryui.com/position/
	 */

	//>>label: Position
	//>>group: Core
	//>>description: Positions elements relative to other elements.
	//>>docs: http://api.jqueryui.com/position/
	//>>demos: http://jqueryui.com/position/

	(function () {
		var cachedScrollbarWidth,
			max = Math.max,
			abs = Math.abs,
			rhorizontal = /left|center|right/,
			rvertical = /top|center|bottom/,
			roffset = /[\+\-]\d+(\.[\d]+)?%?/,
			rposition = /^\w+/,
			rpercent = /%$/,
			_position = $.fn.position;

		function getOffsets(offsets, width, height) {
			return [
				parseFloat(offsets[0]) * (rpercent.test(offsets[0]) ? width / 100 : 1),
				parseFloat(offsets[1]) * (rpercent.test(offsets[1]) ? height / 100 : 1),
			];
		}

		function parseCss(element, property) {
			return parseInt($.css(element, property), 10) || 0;
		}

		function isWindow(obj) {
			return obj != null && obj === obj.window;
		}

		function getDimensions(elem) {
			var raw = elem[0];
			if (raw.nodeType === 9) {
				return {
					width: elem.width(),
					height: elem.height(),
					offset: { top: 0, left: 0 },
				};
			}
			if (isWindow(raw)) {
				return {
					width: elem.width(),
					height: elem.height(),
					offset: { top: elem.scrollTop(), left: elem.scrollLeft() },
				};
			}
			if (raw.preventDefault) {
				return {
					width: 0,
					height: 0,
					offset: { top: raw.pageY, left: raw.pageX },
				};
			}
			return {
				width: elem.outerWidth(),
				height: elem.outerHeight(),
				offset: elem.offset(),
			};
		}

		$.position = {
			scrollbarWidth: function () {
				if (cachedScrollbarWidth !== undefined) {
					return cachedScrollbarWidth;
				}
				var w1,
					w2,
					div = $(
						'<div style=' +
							"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>" +
							"<div style='height:300px;width:auto;'></div></div>"
					),
					innerDiv = div.children()[0];

				$('body').append(div);
				w1 = innerDiv.offsetWidth;
				div.css('overflow', 'scroll');

				w2 = innerDiv.offsetWidth;

				if (w1 === w2) {
					w2 = div[0].clientWidth;
				}

				div.remove();

				return (cachedScrollbarWidth = w1 - w2);
			},
			getScrollInfo: function (within) {
				var overflowX =
						within.isWindow || within.isDocument
							? ''
							: within.element.css('overflow-x'),
					overflowY =
						within.isWindow || within.isDocument
							? ''
							: within.element.css('overflow-y'),
					hasOverflowX =
						overflowX === 'scroll' ||
						(overflowX === 'auto' &&
							within.width < within.element[0].scrollWidth),
					hasOverflowY =
						overflowY === 'scroll' ||
						(overflowY === 'auto' &&
							within.height < within.element[0].scrollHeight);
				return {
					width: hasOverflowY ? $.position.scrollbarWidth() : 0,
					height: hasOverflowX ? $.position.scrollbarWidth() : 0,
				};
			},
			getWithinInfo: function (element) {
				var withinElement = $(element || window),
					isElemWindow = isWindow(withinElement[0]),
					isDocument = !!withinElement[0] && withinElement[0].nodeType === 9,
					hasOffset = !isElemWindow && !isDocument;
				return {
					element: withinElement,
					isWindow: isElemWindow,
					isDocument: isDocument,
					offset: hasOffset ? $(element).offset() : { left: 0, top: 0 },
					scrollLeft: withinElement.scrollLeft(),
					scrollTop: withinElement.scrollTop(),
					width: withinElement.outerWidth(),
					height: withinElement.outerHeight(),
				};
			},
		};

		$.fn.position = function (options) {
			if (!options || !options.of) {
				return _position.apply(this, arguments);
			}

			// Make a copy, we don't want to modify arguments
			options = $.extend({}, options);

			var atOffset,
				targetWidth,
				targetHeight,
				targetOffset,
				basePosition,
				dimensions,
				// Make sure string options are treated as CSS selectors
				target =
					typeof options.of === 'string'
						? $(document).find(options.of)
						: $(options.of),
				within = $.position.getWithinInfo(options.within),
				scrollInfo = $.position.getScrollInfo(within),
				collision = (options.collision || 'flip').split(' '),
				offsets = {};

			dimensions = getDimensions(target);
			if (target[0].preventDefault) {
				// Force left top to allow flipping
				options.at = 'left top';
			}
			targetWidth = dimensions.width;
			targetHeight = dimensions.height;
			targetOffset = dimensions.offset;

			// Clone to reuse original targetOffset later
			basePosition = $.extend({}, targetOffset);

			// Force my and at to have valid horizontal and vertical positions
			// if a value is missing or invalid, it will be converted to center
			$.each(['my', 'at'], function () {
				var pos = (options[this] || '').split(' '),
					horizontalOffset,
					verticalOffset;

				if (pos.length === 1) {
					pos = rhorizontal.test(pos[0])
						? pos.concat(['center'])
						: rvertical.test(pos[0])
						? ['center'].concat(pos)
						: ['center', 'center'];
				}
				pos[0] = rhorizontal.test(pos[0]) ? pos[0] : 'center';
				pos[1] = rvertical.test(pos[1]) ? pos[1] : 'center';

				// Calculate offsets
				horizontalOffset = roffset.exec(pos[0]);
				verticalOffset = roffset.exec(pos[1]);
				offsets[this] = [
					horizontalOffset ? horizontalOffset[0] : 0,
					verticalOffset ? verticalOffset[0] : 0,
				];

				// Reduce to just the positions without the offsets
				options[this] = [rposition.exec(pos[0])[0], rposition.exec(pos[1])[0]];
			});

			// Normalize collision option
			if (collision.length === 1) {
				collision[1] = collision[0];
			}

			if (options.at[0] === 'right') {
				basePosition.left += targetWidth;
			} else if (options.at[0] === 'center') {
				basePosition.left += targetWidth / 2;
			}

			if (options.at[1] === 'bottom') {
				basePosition.top += targetHeight;
			} else if (options.at[1] === 'center') {
				basePosition.top += targetHeight / 2;
			}

			atOffset = getOffsets(offsets.at, targetWidth, targetHeight);
			basePosition.left += atOffset[0];
			basePosition.top += atOffset[1];

			return this.each(function () {
				var collisionPosition,
					using,
					elem = $(this),
					elemWidth = elem.outerWidth(),
					elemHeight = elem.outerHeight(),
					marginLeft = parseCss(this, 'marginLeft'),
					marginTop = parseCss(this, 'marginTop'),
					collisionWidth =
						elemWidth +
						marginLeft +
						parseCss(this, 'marginRight') +
						scrollInfo.width,
					collisionHeight =
						elemHeight +
						marginTop +
						parseCss(this, 'marginBottom') +
						scrollInfo.height,
					position = $.extend({}, basePosition),
					myOffset = getOffsets(
						offsets.my,
						elem.outerWidth(),
						elem.outerHeight()
					);

				if (options.my[0] === 'right') {
					position.left -= elemWidth;
				} else if (options.my[0] === 'center') {
					position.left -= elemWidth / 2;
				}

				if (options.my[1] === 'bottom') {
					position.top -= elemHeight;
				} else if (options.my[1] === 'center') {
					position.top -= elemHeight / 2;
				}

				position.left += myOffset[0];
				position.top += myOffset[1];

				collisionPosition = {
					marginLeft: marginLeft,
					marginTop: marginTop,
				};

				$.each(['left', 'top'], function (i, dir) {
					if ($.ui.position[collision[i]]) {
						$.ui.position[collision[i]][dir](position, {
							targetWidth: targetWidth,
							targetHeight: targetHeight,
							elemWidth: elemWidth,
							elemHeight: elemHeight,
							collisionPosition: collisionPosition,
							collisionWidth: collisionWidth,
							collisionHeight: collisionHeight,
							offset: [atOffset[0] + myOffset[0], atOffset[1] + myOffset[1]],
							my: options.my,
							at: options.at,
							within: within,
							elem: elem,
						});
					}
				});

				if (options.using) {
					// Adds feedback as second argument to using callback, if present
					using = function (props) {
						var left = targetOffset.left - position.left,
							right = left + targetWidth - elemWidth,
							top = targetOffset.top - position.top,
							bottom = top + targetHeight - elemHeight,
							feedback = {
								target: {
									element: target,
									left: targetOffset.left,
									top: targetOffset.top,
									width: targetWidth,
									height: targetHeight,
								},
								element: {
									element: elem,
									left: position.left,
									top: position.top,
									width: elemWidth,
									height: elemHeight,
								},
								horizontal: right < 0 ? 'left' : left > 0 ? 'right' : 'center',
								vertical: bottom < 0 ? 'top' : top > 0 ? 'bottom' : 'middle',
							};
						if (targetWidth < elemWidth && abs(left + right) < targetWidth) {
							feedback.horizontal = 'center';
						}
						if (targetHeight < elemHeight && abs(top + bottom) < targetHeight) {
							feedback.vertical = 'middle';
						}
						if (max(abs(left), abs(right)) > max(abs(top), abs(bottom))) {
							feedback.important = 'horizontal';
						} else {
							feedback.important = 'vertical';
						}
						options.using.call(this, props, feedback);
					};
				}

				elem.offset($.extend(position, { using: using }));
			});
		};

		$.ui.position = {
			fit: {
				left: function (position, data) {
					var within = data.within,
						withinOffset = within.isWindow
							? within.scrollLeft
							: within.offset.left,
						outerWidth = within.width,
						collisionPosLeft =
							position.left - data.collisionPosition.marginLeft,
						overLeft = withinOffset - collisionPosLeft,
						overRight =
							collisionPosLeft +
							data.collisionWidth -
							outerWidth -
							withinOffset,
						newOverRight;

					// Element is wider than within
					if (data.collisionWidth > outerWidth) {
						// Element is initially over the left side of within
						if (overLeft > 0 && overRight <= 0) {
							newOverRight =
								position.left +
								overLeft +
								data.collisionWidth -
								outerWidth -
								withinOffset;
							position.left += overLeft - newOverRight;

							// Element is initially over right side of within
						} else if (overRight > 0 && overLeft <= 0) {
							position.left = withinOffset;

							// Element is initially over both left and right sides of within
						} else {
							if (overLeft > overRight) {
								position.left = withinOffset + outerWidth - data.collisionWidth;
							} else {
								position.left = withinOffset;
							}
						}

						// Too far left -> align with left edge
					} else if (overLeft > 0) {
						position.left += overLeft;

						// Too far right -> align with right edge
					} else if (overRight > 0) {
						position.left -= overRight;

						// Adjust based on position and margin
					} else {
						position.left = max(
							position.left - collisionPosLeft,
							position.left
						);
					}
				},
				top: function (position, data) {
					var within = data.within,
						withinOffset = within.isWindow
							? within.scrollTop
							: within.offset.top,
						outerHeight = data.within.height,
						collisionPosTop = position.top - data.collisionPosition.marginTop,
						overTop = withinOffset - collisionPosTop,
						overBottom =
							collisionPosTop +
							data.collisionHeight -
							outerHeight -
							withinOffset,
						newOverBottom;

					// Element is taller than within
					if (data.collisionHeight > outerHeight) {
						// Element is initially over the top of within
						if (overTop > 0 && overBottom <= 0) {
							newOverBottom =
								position.top +
								overTop +
								data.collisionHeight -
								outerHeight -
								withinOffset;
							position.top += overTop - newOverBottom;

							// Element is initially over bottom of within
						} else if (overBottom > 0 && overTop <= 0) {
							position.top = withinOffset;

							// Element is initially over both top and bottom of within
						} else {
							if (overTop > overBottom) {
								position.top =
									withinOffset + outerHeight - data.collisionHeight;
							} else {
								position.top = withinOffset;
							}
						}

						// Too far up -> align with top
					} else if (overTop > 0) {
						position.top += overTop;

						// Too far down -> align with bottom edge
					} else if (overBottom > 0) {
						position.top -= overBottom;

						// Adjust based on position and margin
					} else {
						position.top = max(position.top - collisionPosTop, position.top);
					}
				},
			},
			flip: {
				left: function (position, data) {
					var within = data.within,
						withinOffset = within.offset.left + within.scrollLeft,
						outerWidth = within.width,
						offsetLeft = within.isWindow
							? within.scrollLeft
							: within.offset.left,
						collisionPosLeft =
							position.left - data.collisionPosition.marginLeft,
						overLeft = collisionPosLeft - offsetLeft,
						overRight =
							collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
						myOffset =
							data.my[0] === 'left'
								? -data.elemWidth
								: data.my[0] === 'right'
								? data.elemWidth
								: 0,
						atOffset =
							data.at[0] === 'left'
								? data.targetWidth
								: data.at[0] === 'right'
								? -data.targetWidth
								: 0,
						offset = -2 * data.offset[0],
						newOverRight,
						newOverLeft;

					if (overLeft < 0) {
						newOverRight =
							position.left +
							myOffset +
							atOffset +
							offset +
							data.collisionWidth -
							outerWidth -
							withinOffset;
						if (newOverRight < 0 || newOverRight < abs(overLeft)) {
							position.left += myOffset + atOffset + offset;
						}
					} else if (overRight > 0) {
						newOverLeft =
							position.left -
							data.collisionPosition.marginLeft +
							myOffset +
							atOffset +
							offset -
							offsetLeft;
						if (newOverLeft > 0 || abs(newOverLeft) < overRight) {
							position.left += myOffset + atOffset + offset;
						}
					}
				},
				top: function (position, data) {
					var within = data.within,
						withinOffset = within.offset.top + within.scrollTop,
						outerHeight = within.height,
						offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
						collisionPosTop = position.top - data.collisionPosition.marginTop,
						overTop = collisionPosTop - offsetTop,
						overBottom =
							collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
						top = data.my[1] === 'top',
						myOffset = top
							? -data.elemHeight
							: data.my[1] === 'bottom'
							? data.elemHeight
							: 0,
						atOffset =
							data.at[1] === 'top'
								? data.targetHeight
								: data.at[1] === 'bottom'
								? -data.targetHeight
								: 0,
						offset = -2 * data.offset[1],
						newOverTop,
						newOverBottom;
					if (overTop < 0) {
						newOverBottom =
							position.top +
							myOffset +
							atOffset +
							offset +
							data.collisionHeight -
							outerHeight -
							withinOffset;
						if (newOverBottom < 0 || newOverBottom < abs(overTop)) {
							position.top += myOffset + atOffset + offset;
						}
					} else if (overBottom > 0) {
						newOverTop =
							position.top -
							data.collisionPosition.marginTop +
							myOffset +
							atOffset +
							offset -
							offsetTop;
						if (newOverTop > 0 || abs(newOverTop) < overBottom) {
							position.top += myOffset + atOffset + offset;
						}
					}
				},
			},
			flipfit: {
				left: function () {
					$.ui.position.flip.left.apply(this, arguments);
					$.ui.position.fit.left.apply(this, arguments);
				},
				top: function () {
					$.ui.position.flip.top.apply(this, arguments);
					$.ui.position.fit.top.apply(this, arguments);
				},
			},
		};
	})();

	var position = $.ui.position;

	/*!
	 * jQuery UI :data 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: :data Selector
	//>>group: Core
	//>>description: Selects elements which have data stored under the specified key.
	//>>docs: http://api.jqueryui.com/data-selector/

	var data = $.extend($.expr.pseudos, {
		data: $.expr.createPseudo
			? $.expr.createPseudo(function (dataName) {
					return function (elem) {
						return !!$.data(elem, dataName);
					};
			  })
			: // Support: jQuery <1.8
			  function (elem, i, match) {
					return !!$.data(elem, match[3]);
			  },
	});

	/*!
	 * jQuery UI Disable Selection 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: disableSelection
	//>>group: Core
	//>>description: Disable selection of text content within the set of matched elements.
	//>>docs: http://api.jqueryui.com/disableSelection/

	// This file is deprecated

	var disableSelection = $.fn.extend({
		disableSelection: (function () {
			var eventType =
				'onselectstart' in document.createElement('div')
					? 'selectstart'
					: 'mousedown';

			return function () {
				return this.on(eventType + '.ui-disableSelection', function (event) {
					event.preventDefault();
				});
			};
		})(),

		enableSelection: function () {
			return this.off('.ui-disableSelection');
		},
	});

	/*!
	 * jQuery UI Focusable 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: :focusable Selector
	//>>group: Core
	//>>description: Selects elements which can be focused.
	//>>docs: http://api.jqueryui.com/focusable-selector/

	// Selectors
	$.ui.focusable = function (element, hasTabindex) {
		var map,
			mapName,
			img,
			focusableIfVisible,
			fieldset,
			nodeName = element.nodeName.toLowerCase();

		if ('area' === nodeName) {
			map = element.parentNode;
			mapName = map.name;
			if (!element.href || !mapName || map.nodeName.toLowerCase() !== 'map') {
				return false;
			}
			img = $("img[usemap='#" + mapName + "']");
			return img.length > 0 && img.is(':visible');
		}

		if (/^(input|select|textarea|button|object)$/.test(nodeName)) {
			focusableIfVisible = !element.disabled;

			if (focusableIfVisible) {
				// Form controls within a disabled fieldset are disabled.
				// However, controls within the fieldset's legend do not get disabled.
				// Since controls generally aren't placed inside legends, we skip
				// this portion of the check.
				fieldset = $(element).closest('fieldset')[0];
				if (fieldset) {
					focusableIfVisible = !fieldset.disabled;
				}
			}
		} else if ('a' === nodeName) {
			focusableIfVisible = element.href || hasTabindex;
		} else {
			focusableIfVisible = hasTabindex;
		}

		return (
			focusableIfVisible && $(element).is(':visible') && visible($(element))
		);
	};

	// Support: IE 8 only
	// IE 8 doesn't resolve inherit to visible/hidden for computed values
	function visible(element) {
		var visibility = element.css('visibility');
		while (visibility === 'inherit') {
			element = element.parent();
			visibility = element.css('visibility');
		}
		return visibility === 'visible';
	}

	$.extend($.expr.pseudos, {
		focusable: function (element) {
			return $.ui.focusable(element, $.attr(element, 'tabindex') != null);
		},
	});

	var focusable = $.ui.focusable;

	// Support: IE8 Only
	// IE8 does not support the form attribute and when it is supplied. It overwrites the form prop
	// with a string, so we need to find the proper form.
	var form = ($.fn._form = function () {
		return typeof this[0].form === 'string'
			? this.closest('form')
			: $(this[0].form);
	});

	/*!
	 * jQuery UI Form Reset Mixin 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Form Reset Mixin
	//>>group: Core
	//>>description: Refresh input widgets when their form is reset
	//>>docs: http://api.jqueryui.com/form-reset-mixin/

	var formResetMixin = ($.ui.formResetMixin = {
		_formResetHandler: function () {
			var form = $(this);

			// Wait for the form reset to actually happen before refreshing
			setTimeout(function () {
				var instances = form.data('ui-form-reset-instances');
				$.each(instances, function () {
					this.refresh();
				});
			});
		},

		_bindFormResetHandler: function () {
			this.form = this.element._form();
			if (!this.form.length) {
				return;
			}

			var instances = this.form.data('ui-form-reset-instances') || [];
			if (!instances.length) {
				// We don't use _on() here because we use a single event handler per form
				this.form.on('reset.ui-form-reset', this._formResetHandler);
			}
			instances.push(this);
			this.form.data('ui-form-reset-instances', instances);
		},

		_unbindFormResetHandler: function () {
			if (!this.form.length) {
				return;
			}

			var instances = this.form.data('ui-form-reset-instances');
			instances.splice($.inArray(this, instances), 1);
			if (instances.length) {
				this.form.data('ui-form-reset-instances', instances);
			} else {
				this.form
					.removeData('ui-form-reset-instances')
					.off('reset.ui-form-reset');
			}
		},
	});

	/*!
	 * jQuery UI Support for jQuery core 1.8.x and newer 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 *
	 */

	//>>label: jQuery 1.8+ Support
	//>>group: Core
	//>>description: Support version 1.8.x and newer of jQuery core

	// Support: jQuery 1.9.x or older
	// $.expr[ ":" ] is deprecated.
	if (!$.expr.pseudos) {
		$.expr.pseudos = $.expr[':'];
	}

	// Support: jQuery 1.11.x or older
	// $.unique has been renamed to $.uniqueSort
	if (!$.uniqueSort) {
		$.uniqueSort = $.unique;
	}

	// Support: jQuery 2.2.x or older.
	// This method has been defined in jQuery 3.0.0.
	// Code from https://github.com/jquery/jquery/blob/e539bac79e666bba95bba86d690b4e609dca2286/src/selector/escapeSelector.js
	if (!$.escapeSelector) {
		// CSS string/identifier serialization
		// https://drafts.csswg.org/cssom/#common-serializing-idioms
		var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;

		var fcssescape = function (ch, asCodePoint) {
			if (asCodePoint) {
				// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
				if (ch === '\0') {
					return '\uFFFD';
				}

				// Control characters and (dependent upon position) numbers get escaped as code points
				return (
					ch.slice(0, -1) +
					'\\' +
					ch.charCodeAt(ch.length - 1).toString(16) +
					' '
				);
			}

			// Other potentially-special ASCII characters get backslash-escaped
			return '\\' + ch;
		};

		$.escapeSelector = function (sel) {
			return (sel + '').replace(rcssescape, fcssescape);
		};
	}

	// Support: jQuery 3.4.x or older
	// These methods have been defined in jQuery 3.5.0.
	if (!$.fn.even || !$.fn.odd) {
		$.fn.extend({
			even: function () {
				return this.filter(function (i) {
					return i % 2 === 0;
				});
			},
			odd: function () {
				return this.filter(function (i) {
					return i % 2 === 1;
				});
			},
		});
	}

	/*!
	 * jQuery UI Keycode 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Keycode
	//>>group: Core
	//>>description: Provide keycodes as keynames
	//>>docs: http://api.jqueryui.com/jQuery.ui.keyCode/

	var keycode = ($.ui.keyCode = {
		BACKSPACE: 8,
		COMMA: 188,
		DELETE: 46,
		DOWN: 40,
		END: 35,
		ENTER: 13,
		ESCAPE: 27,
		HOME: 36,
		LEFT: 37,
		PAGE_DOWN: 34,
		PAGE_UP: 33,
		PERIOD: 190,
		RIGHT: 39,
		SPACE: 32,
		TAB: 9,
		UP: 38,
	});

	/*!
	 * jQuery UI Labels 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: labels
	//>>group: Core
	//>>description: Find all the labels associated with a given input
	//>>docs: http://api.jqueryui.com/labels/

	var labels = ($.fn.labels = function () {
		var ancestor, selector, id, labels, ancestors;

		if (!this.length) {
			return this.pushStack([]);
		}

		// Check control.labels first
		if (this[0].labels && this[0].labels.length) {
			return this.pushStack(this[0].labels);
		}

		// Support: IE <= 11, FF <= 37, Android <= 2.3 only
		// Above browsers do not support control.labels. Everything below is to support them
		// as well as document fragments. control.labels does not work on document fragments
		labels = this.eq(0).parents('label');

		// Look for the label based on the id
		id = this.attr('id');
		if (id) {
			// We don't search against the document in case the element
			// is disconnected from the DOM
			ancestor = this.eq(0).parents().last();

			// Get a full set of top level ancestors
			ancestors = ancestor.add(
				ancestor.length ? ancestor.siblings() : this.siblings()
			);

			// Create a selector for the label based on the id
			selector = "label[for='" + $.escapeSelector(id) + "']";

			labels = labels.add(ancestors.find(selector).addBack(selector));
		}

		// Return whatever we have found for labels
		return this.pushStack(labels);
	});

	/*!
	 * jQuery UI Scroll Parent 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: scrollParent
	//>>group: Core
	//>>description: Get the closest ancestor element that is scrollable.
	//>>docs: http://api.jqueryui.com/scrollParent/

	var scrollParent = ($.fn.scrollParent = function (includeHidden) {
		var position = this.css('position'),
			excludeStaticParent = position === 'absolute',
			overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
			scrollParent = this.parents()
				.filter(function () {
					var parent = $(this);
					if (excludeStaticParent && parent.css('position') === 'static') {
						return false;
					}
					return overflowRegex.test(
						parent.css('overflow') +
							parent.css('overflow-y') +
							parent.css('overflow-x')
					);
				})
				.eq(0);

		return position === 'fixed' || !scrollParent.length
			? $(this[0].ownerDocument || document)
			: scrollParent;
	});

	/*!
	 * jQuery UI Tabbable 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: :tabbable Selector
	//>>group: Core
	//>>description: Selects elements which can be tabbed to.
	//>>docs: http://api.jqueryui.com/tabbable-selector/

	var tabbable = $.extend($.expr.pseudos, {
		tabbable: function (element) {
			var tabIndex = $.attr(element, 'tabindex'),
				hasTabindex = tabIndex != null;
			return (
				(!hasTabindex || tabIndex >= 0) && $.ui.focusable(element, hasTabindex)
			);
		},
	});

	/*!
	 * jQuery UI Unique ID 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: uniqueId
	//>>group: Core
	//>>description: Functions to generate and remove uniqueId's
	//>>docs: http://api.jqueryui.com/uniqueId/

	var uniqueId = $.fn.extend({
		uniqueId: (function () {
			var uuid = 0;

			return function () {
				return this.each(function () {
					if (!this.id) {
						this.id = 'ui-id-' + ++uuid;
					}
				});
			};
		})(),

		removeUniqueId: function () {
			return this.each(function () {
				if (/^ui-id-\d+$/.test(this.id)) {
					$(this).removeAttr('id');
				}
			});
		},
	});

	// This file is deprecated
	var ie = ($.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()));

	/*!
	 * jQuery UI Mouse 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Mouse
	//>>group: Widgets
	//>>description: Abstracts mouse-based interactions to assist in creating certain widgets.
	//>>docs: http://api.jqueryui.com/mouse/

	var mouseHandled = false;
	$(document).on('mouseup', function () {
		mouseHandled = false;
	});

	var widgetsMouse = $.widget('ui.mouse', {
		version: '1.13.1',
		options: {
			cancel: 'input, textarea, button, select, option',
			distance: 1,
			delay: 0,
		},
		_mouseInit: function () {
			var that = this;

			this.element
				.on('mousedown.' + this.widgetName, function (event) {
					return that._mouseDown(event);
				})
				.on('click.' + this.widgetName, function (event) {
					if (
						true ===
						$.data(event.target, that.widgetName + '.preventClickEvent')
					) {
						$.removeData(event.target, that.widgetName + '.preventClickEvent');
						event.stopImmediatePropagation();
						return false;
					}
				});

			this.started = false;
		},

		// TODO: make sure destroying one instance of mouse doesn't mess with
		// other instances of mouse
		_mouseDestroy: function () {
			this.element.off('.' + this.widgetName);
			if (this._mouseMoveDelegate) {
				this.document
					.off('mousemove.' + this.widgetName, this._mouseMoveDelegate)
					.off('mouseup.' + this.widgetName, this._mouseUpDelegate);
			}
		},

		_mouseDown: function (event) {
			// don't let more than one widget handle mouseStart
			if (mouseHandled) {
				return;
			}

			this._mouseMoved = false;

			// We may have missed mouseup (out of window)
			if (this._mouseStarted) {
				this._mouseUp(event);
			}

			this._mouseDownEvent = event;

			var that = this,
				btnIsLeft = event.which === 1,
				// event.target.nodeName works around a bug in IE 8 with
				// disabled inputs (#7620)
				elIsCancel =
					typeof this.options.cancel === 'string' && event.target.nodeName
						? $(event.target).closest(this.options.cancel).length
						: false;
			if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
				return true;
			}

			this.mouseDelayMet = !this.options.delay;
			if (!this.mouseDelayMet) {
				this._mouseDelayTimer = setTimeout(function () {
					that.mouseDelayMet = true;
				}, this.options.delay);
			}

			if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
				this._mouseStarted = this._mouseStart(event) !== false;
				if (!this._mouseStarted) {
					event.preventDefault();
					return true;
				}
			}

			// Click event may never have fired (Gecko & Opera)
			if (
				true === $.data(event.target, this.widgetName + '.preventClickEvent')
			) {
				$.removeData(event.target, this.widgetName + '.preventClickEvent');
			}

			// These delegates are required to keep context
			this._mouseMoveDelegate = function (event) {
				return that._mouseMove(event);
			};
			this._mouseUpDelegate = function (event) {
				return that._mouseUp(event);
			};

			this.document
				.on('mousemove.' + this.widgetName, this._mouseMoveDelegate)
				.on('mouseup.' + this.widgetName, this._mouseUpDelegate);

			event.preventDefault();

			mouseHandled = true;
			return true;
		},

		_mouseMove: function (event) {
			// Only check for mouseups outside the document if you've moved inside the document
			// at least once. This prevents the firing of mouseup in the case of IE<9, which will
			// fire a mousemove event if content is placed under the cursor. See #7778
			// Support: IE <9
			if (this._mouseMoved) {
				// IE mouseup check - mouseup happened when mouse was out of window
				if (
					$.ui.ie &&
					(!document.documentMode || document.documentMode < 9) &&
					!event.button
				) {
					return this._mouseUp(event);

					// Iframe mouseup check - mouseup occurred in another document
				} else if (!event.which) {
					// Support: Safari <=8 - 9
					// Safari sets which to 0 if you press any of the following keys
					// during a drag (#14461)
					if (
						event.originalEvent.altKey ||
						event.originalEvent.ctrlKey ||
						event.originalEvent.metaKey ||
						event.originalEvent.shiftKey
					) {
						this.ignoreMissingWhich = true;
					} else if (!this.ignoreMissingWhich) {
						return this._mouseUp(event);
					}
				}
			}

			if (event.which || event.button) {
				this._mouseMoved = true;
			}

			if (this._mouseStarted) {
				this._mouseDrag(event);
				return event.preventDefault();
			}

			if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
				this._mouseStarted =
					this._mouseStart(this._mouseDownEvent, event) !== false;
				if (this._mouseStarted) {
					this._mouseDrag(event);
				} else {
					this._mouseUp(event);
				}
			}

			return !this._mouseStarted;
		},

		_mouseUp: function (event) {
			this.document
				.off('mousemove.' + this.widgetName, this._mouseMoveDelegate)
				.off('mouseup.' + this.widgetName, this._mouseUpDelegate);

			if (this._mouseStarted) {
				this._mouseStarted = false;

				if (event.target === this._mouseDownEvent.target) {
					$.data(event.target, this.widgetName + '.preventClickEvent', true);
				}

				this._mouseStop(event);
			}

			if (this._mouseDelayTimer) {
				clearTimeout(this._mouseDelayTimer);
				delete this._mouseDelayTimer;
			}

			this.ignoreMissingWhich = false;
			mouseHandled = false;
			event.preventDefault();
		},

		_mouseDistanceMet: function (event) {
			return (
				Math.max(
					Math.abs(this._mouseDownEvent.pageX - event.pageX),
					Math.abs(this._mouseDownEvent.pageY - event.pageY)
				) >= this.options.distance
			);
		},

		_mouseDelayMet: function (/* event */) {
			return this.mouseDelayMet;
		},

		// These are placeholder methods, to be overriden by extending plugin
		_mouseStart: function (/* event */) {},
		_mouseDrag: function (/* event */) {},
		_mouseStop: function (/* event */) {},
		_mouseCapture: function (/* event */) {
			return true;
		},
	});

	// $.ui.plugin is deprecated. Use $.widget() extensions instead.
	var plugin = ($.ui.plugin = {
		add: function (module, option, set) {
			var i,
				proto = $.ui[module].prototype;
			for (i in set) {
				proto.plugins[i] = proto.plugins[i] || [];
				proto.plugins[i].push([option, set[i]]);
			}
		},
		call: function (instance, name, args, allowDisconnected) {
			var i,
				set = instance.plugins[name];

			if (!set) {
				return;
			}

			if (
				!allowDisconnected &&
				(!instance.element[0].parentNode ||
					instance.element[0].parentNode.nodeType === 11)
			) {
				return;
			}

			for (i = 0; i < set.length; i++) {
				if (instance.options[set[i][0]]) {
					set[i][1].apply(instance.element, args);
				}
			}
		},
	});

	var safeActiveElement = ($.ui.safeActiveElement = function (document) {
		var activeElement;

		// Support: IE 9 only
		// IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
		try {
			activeElement = document.activeElement;
		} catch (error) {
			activeElement = document.body;
		}

		// Support: IE 9 - 11 only
		// IE may return null instead of an element
		// Interestingly, this only seems to occur when NOT in an iframe
		if (!activeElement) {
			activeElement = document.body;
		}

		// Support: IE 11 only
		// IE11 returns a seemingly empty object in some cases when accessing
		// document.activeElement from an <iframe>
		if (!activeElement.nodeName) {
			activeElement = document.body;
		}

		return activeElement;
	});

	var safeBlur = ($.ui.safeBlur = function (element) {
		// Support: IE9 - 10 only
		// If the <body> is blurred, IE will switch windows, see #9420
		if (element && element.nodeName.toLowerCase() !== 'body') {
			$(element).trigger('blur');
		}
	});

	/*!
	 * jQuery UI Draggable 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Draggable
	//>>group: Interactions
	//>>description: Enables dragging functionality for any element.
	//>>docs: http://api.jqueryui.com/draggable/
	//>>demos: http://jqueryui.com/draggable/
	//>>css.structure: ../../themes/base/draggable.css

	$.widget('ui.draggable', $.ui.mouse, {
		version: '1.13.1',
		widgetEventPrefix: 'drag',
		options: {
			addClasses: true,
			appendTo: 'parent',
			axis: false,
			connectToSortable: false,
			containment: false,
			cursor: 'auto',
			cursorAt: false,
			grid: false,
			handle: false,
			helper: 'original',
			iframeFix: false,
			opacity: false,
			refreshPositions: false,
			revert: false,
			revertDuration: 500,
			scope: 'default',
			scroll: true,
			scrollSensitivity: 20,
			scrollSpeed: 20,
			snap: false,
			snapMode: 'both',
			snapTolerance: 20,
			stack: false,
			zIndex: false,

			// Callbacks
			drag: null,
			start: null,
			stop: null,
		},
		_create: function () {
			if (this.options.helper === 'original') {
				this._setPositionRelative();
			}
			if (this.options.addClasses) {
				this._addClass('ui-draggable');
			}
			this._setHandleClassName();

			this._mouseInit();
		},

		_setOption: function (key, value) {
			this._super(key, value);
			if (key === 'handle') {
				this._removeHandleClassName();
				this._setHandleClassName();
			}
		},

		_destroy: function () {
			if ((this.helper || this.element).is('.ui-draggable-dragging')) {
				this.destroyOnClear = true;
				return;
			}
			this._removeHandleClassName();
			this._mouseDestroy();
		},

		_mouseCapture: function (event) {
			var o = this.options;

			// Among others, prevent a drag on a resizable-handle
			if (
				this.helper ||
				o.disabled ||
				$(event.target).closest('.ui-resizable-handle').length > 0
			) {
				return false;
			}

			//Quit if we're not on a valid handle
			this.handle = this._getHandle(event);
			if (!this.handle) {
				return false;
			}

			this._blurActiveElement(event);

			this._blockFrames(o.iframeFix === true ? 'iframe' : o.iframeFix);

			return true;
		},

		_blockFrames: function (selector) {
			this.iframeBlocks = this.document.find(selector).map(function () {
				var iframe = $(this);

				return $('<div>')
					.css('position', 'absolute')
					.appendTo(iframe.parent())
					.outerWidth(iframe.outerWidth())
					.outerHeight(iframe.outerHeight())
					.offset(iframe.offset())[0];
			});
		},

		_unblockFrames: function () {
			if (this.iframeBlocks) {
				this.iframeBlocks.remove();
				delete this.iframeBlocks;
			}
		},

		_blurActiveElement: function (event) {
			var activeElement = $.ui.safeActiveElement(this.document[0]),
				target = $(event.target);

			// Don't blur if the event occurred on an element that is within
			// the currently focused element
			// See #10527, #12472
			if (target.closest(activeElement).length) {
				return;
			}

			// Blur any element that currently has focus, see #4261
			$.ui.safeBlur(activeElement);
		},

		_mouseStart: function (event) {
			var o = this.options;

			//Create and append the visible helper
			this.helper = this._createHelper(event);

			this._addClass(this.helper, 'ui-draggable-dragging');

			//Cache the helper size
			this._cacheHelperProportions();

			//If ddmanager is used for droppables, set the global draggable
			if ($.ui.ddmanager) {
				$.ui.ddmanager.current = this;
			}

			/*
			 * - Position generation -
			 * This block generates everything position related - it's the core of draggables.
			 */

			//Cache the margins of the original element
			this._cacheMargins();

			//Store the helper's css position
			this.cssPosition = this.helper.css('position');
			this.scrollParent = this.helper.scrollParent(true);
			this.offsetParent = this.helper.offsetParent();
			this.hasFixedAncestor =
				this.helper.parents().filter(function () {
					return $(this).css('position') === 'fixed';
				}).length > 0;

			//The element's absolute position on the page minus margins
			this.positionAbs = this.element.offset();
			this._refreshOffsets(event);

			//Generate the original position
			this.originalPosition = this.position = this._generatePosition(
				event,
				false
			);
			this.originalPageX = event.pageX;
			this.originalPageY = event.pageY;

			//Adjust the mouse offset relative to the helper if "cursorAt" is supplied
			if (o.cursorAt) {
				this._adjustOffsetFromHelper(o.cursorAt);
			}

			//Set a containment if given in the options
			this._setContainment();

			//Trigger event + callbacks
			if (this._trigger('start', event) === false) {
				this._clear();
				return false;
			}

			//Recache the helper size
			this._cacheHelperProportions();

			//Prepare the droppable offsets
			if ($.ui.ddmanager && !o.dropBehaviour) {
				$.ui.ddmanager.prepareOffsets(this, event);
			}

			// Execute the drag once - this causes the helper not to be visible before getting its
			// correct position
			this._mouseDrag(event, true);

			// If the ddmanager is used for droppables, inform the manager that dragging has started
			// (see #5003)
			if ($.ui.ddmanager) {
				$.ui.ddmanager.dragStart(this, event);
			}

			return true;
		},

		_refreshOffsets: function (event) {
			this.offset = {
				top: this.positionAbs.top - this.margins.top,
				left: this.positionAbs.left - this.margins.left,
				scroll: false,
				parent: this._getParentOffset(),
				relative: this._getRelativeOffset(),
			};

			this.offset.click = {
				left: event.pageX - this.offset.left,
				top: event.pageY - this.offset.top,
			};
		},

		_mouseDrag: function (event, noPropagation) {
			// reset any necessary cached properties (see #5009)
			if (this.hasFixedAncestor) {
				this.offset.parent = this._getParentOffset();
			}

			//Compute the helpers position
			this.position = this._generatePosition(event, true);
			this.positionAbs = this._convertPositionTo('absolute');

			//Call plugins and callbacks and use the resulting position if something is returned
			if (!noPropagation) {
				var ui = this._uiHash();
				if (this._trigger('drag', event, ui) === false) {
					this._mouseUp(new $.Event('mouseup', event));
					return false;
				}
				this.position = ui.position;
			}

			this.helper[0].style.left = this.position.left + 'px';
			this.helper[0].style.top = this.position.top + 'px';

			if ($.ui.ddmanager) {
				$.ui.ddmanager.drag(this, event);
			}

			return false;
		},

		_mouseStop: function (event) {
			//If we are using droppables, inform the manager about the drop
			var that = this,
				dropped = false;
			if ($.ui.ddmanager && !this.options.dropBehaviour) {
				dropped = $.ui.ddmanager.drop(this, event);
			}

			//if a drop comes from outside (a sortable)
			if (this.dropped) {
				dropped = this.dropped;
				this.dropped = false;
			}

			if (
				(this.options.revert === 'invalid' && !dropped) ||
				(this.options.revert === 'valid' && dropped) ||
				this.options.revert === true ||
				(typeof this.options.revert === 'function' &&
					this.options.revert.call(this.element, dropped))
			) {
				$(this.helper).animate(
					this.originalPosition,
					parseInt(this.options.revertDuration, 10),
					function () {
						if (that._trigger('stop', event) !== false) {
							that._clear();
						}
					}
				);
			} else {
				if (this._trigger('stop', event) !== false) {
					this._clear();
				}
			}

			return false;
		},

		_mouseUp: function (event) {
			this._unblockFrames();

			// If the ddmanager is used for droppables, inform the manager that dragging has stopped
			// (see #5003)
			if ($.ui.ddmanager) {
				$.ui.ddmanager.dragStop(this, event);
			}

			// Only need to focus if the event occurred on the draggable itself, see #10527
			if (this.handleElement.is(event.target)) {
				// The interaction is over; whether or not the click resulted in a drag,
				// focus the element
				this.element.trigger('focus');
			}

			return $.ui.mouse.prototype._mouseUp.call(this, event);
		},

		cancel: function () {
			if (this.helper.is('.ui-draggable-dragging')) {
				this._mouseUp(new $.Event('mouseup', { target: this.element[0] }));
			} else {
				this._clear();
			}

			return this;
		},

		_getHandle: function (event) {
			return this.options.handle
				? !!$(event.target).closest(this.element.find(this.options.handle))
						.length
				: true;
		},

		_setHandleClassName: function () {
			this.handleElement = this.options.handle
				? this.element.find(this.options.handle)
				: this.element;
			this._addClass(this.handleElement, 'ui-draggable-handle');
		},

		_removeHandleClassName: function () {
			this._removeClass(this.handleElement, 'ui-draggable-handle');
		},

		_createHelper: function (event) {
			var o = this.options,
				helperIsFunction = typeof o.helper === 'function',
				helper = helperIsFunction
					? $(o.helper.apply(this.element[0], [event]))
					: o.helper === 'clone'
					? this.element.clone().removeAttr('id')
					: this.element;

			if (!helper.parents('body').length) {
				helper.appendTo(
					o.appendTo === 'parent' ? this.element[0].parentNode : o.appendTo
				);
			}

			// Http://bugs.jqueryui.com/ticket/9446
			// a helper function can return the original element
			// which wouldn't have been set to relative in _create
			if (helperIsFunction && helper[0] === this.element[0]) {
				this._setPositionRelative();
			}

			if (
				helper[0] !== this.element[0] &&
				!/(fixed|absolute)/.test(helper.css('position'))
			) {
				helper.css('position', 'absolute');
			}

			return helper;
		},

		_setPositionRelative: function () {
			if (!/^(?:r|a|f)/.test(this.element.css('position'))) {
				this.element[0].style.position = 'relative';
			}
		},

		_adjustOffsetFromHelper: function (obj) {
			if (typeof obj === 'string') {
				obj = obj.split(' ');
			}
			if (Array.isArray(obj)) {
				obj = { left: +obj[0], top: +obj[1] || 0 };
			}
			if ('left' in obj) {
				this.offset.click.left = obj.left + this.margins.left;
			}
			if ('right' in obj) {
				this.offset.click.left =
					this.helperProportions.width - obj.right + this.margins.left;
			}
			if ('top' in obj) {
				this.offset.click.top = obj.top + this.margins.top;
			}
			if ('bottom' in obj) {
				this.offset.click.top =
					this.helperProportions.height - obj.bottom + this.margins.top;
			}
		},

		_isRootNode: function (element) {
			return (
				/(html|body)/i.test(element.tagName) || element === this.document[0]
			);
		},

		_getParentOffset: function () {
			//Get the offsetParent and cache its position
			var po = this.offsetParent.offset(),
				document = this.document[0];

			// This is a special case where we need to modify a offset calculated on start, since the
			// following happened:
			// 1. The position of the helper is absolute, so it's position is calculated based on the
			// next positioned parent
			// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't
			// the document, which means that the scroll is included in the initial calculation of the
			// offset of the parent, and never recalculated upon drag
			if (
				this.cssPosition === 'absolute' &&
				this.scrollParent[0] !== document &&
				$.contains(this.scrollParent[0], this.offsetParent[0])
			) {
				po.left += this.scrollParent.scrollLeft();
				po.top += this.scrollParent.scrollTop();
			}

			if (this._isRootNode(this.offsetParent[0])) {
				po = { top: 0, left: 0 };
			}

			return {
				top:
					po.top + (parseInt(this.offsetParent.css('borderTopWidth'), 10) || 0),
				left:
					po.left +
					(parseInt(this.offsetParent.css('borderLeftWidth'), 10) || 0),
			};
		},

		_getRelativeOffset: function () {
			if (this.cssPosition !== 'relative') {
				return { top: 0, left: 0 };
			}

			var p = this.element.position(),
				scrollIsRootNode = this._isRootNode(this.scrollParent[0]);

			return {
				top:
					p.top -
					(parseInt(this.helper.css('top'), 10) || 0) +
					(!scrollIsRootNode ? this.scrollParent.scrollTop() : 0),
				left:
					p.left -
					(parseInt(this.helper.css('left'), 10) || 0) +
					(!scrollIsRootNode ? this.scrollParent.scrollLeft() : 0),
			};
		},

		_cacheMargins: function () {
			this.margins = {
				left: parseInt(this.element.css('marginLeft'), 10) || 0,
				top: parseInt(this.element.css('marginTop'), 10) || 0,
				right: parseInt(this.element.css('marginRight'), 10) || 0,
				bottom: parseInt(this.element.css('marginBottom'), 10) || 0,
			};
		},

		_cacheHelperProportions: function () {
			this.helperProportions = {
				width: this.helper.outerWidth(),
				height: this.helper.outerHeight(),
			};
		},

		_setContainment: function () {
			var isUserScrollable,
				c,
				ce,
				o = this.options,
				document = this.document[0];

			this.relativeContainer = null;

			if (!o.containment) {
				this.containment = null;
				return;
			}

			if (o.containment === 'window') {
				this.containment = [
					$(window).scrollLeft() -
						this.offset.relative.left -
						this.offset.parent.left,
					$(window).scrollTop() -
						this.offset.relative.top -
						this.offset.parent.top,
					$(window).scrollLeft() +
						$(window).width() -
						this.helperProportions.width -
						this.margins.left,
					$(window).scrollTop() +
						($(window).height() || document.body.parentNode.scrollHeight) -
						this.helperProportions.height -
						this.margins.top,
				];
				return;
			}

			if (o.containment === 'document') {
				this.containment = [
					0,
					0,
					$(document).width() -
						this.helperProportions.width -
						this.margins.left,
					($(document).height() || document.body.parentNode.scrollHeight) -
						this.helperProportions.height -
						this.margins.top,
				];
				return;
			}

			if (o.containment.constructor === Array) {
				this.containment = o.containment;
				return;
			}

			if (o.containment === 'parent') {
				o.containment = this.helper[0].parentNode;
			}

			c = $(o.containment);
			ce = c[0];

			if (!ce) {
				return;
			}

			isUserScrollable = /(scroll|auto)/.test(c.css('overflow'));

			this.containment = [
				(parseInt(c.css('borderLeftWidth'), 10) || 0) +
					(parseInt(c.css('paddingLeft'), 10) || 0),
				(parseInt(c.css('borderTopWidth'), 10) || 0) +
					(parseInt(c.css('paddingTop'), 10) || 0),
				(isUserScrollable
					? Math.max(ce.scrollWidth, ce.offsetWidth)
					: ce.offsetWidth) -
					(parseInt(c.css('borderRightWidth'), 10) || 0) -
					(parseInt(c.css('paddingRight'), 10) || 0) -
					this.helperProportions.width -
					this.margins.left -
					this.margins.right,
				(isUserScrollable
					? Math.max(ce.scrollHeight, ce.offsetHeight)
					: ce.offsetHeight) -
					(parseInt(c.css('borderBottomWidth'), 10) || 0) -
					(parseInt(c.css('paddingBottom'), 10) || 0) -
					this.helperProportions.height -
					this.margins.top -
					this.margins.bottom,
			];
			this.relativeContainer = c;
		},

		_convertPositionTo: function (d, pos) {
			if (!pos) {
				pos = this.position;
			}

			var mod = d === 'absolute' ? 1 : -1,
				scrollIsRootNode = this._isRootNode(this.scrollParent[0]);

			return {
				top:
					// The absolute mouse position
					pos.top +
					// Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.relative.top * mod +
					// The offsetParent's offset without borders (offset + border)
					this.offset.parent.top * mod -
					(this.cssPosition === 'fixed'
						? -this.offset.scroll.top
						: scrollIsRootNode
						? 0
						: this.offset.scroll.top) *
						mod,
				left:
					// The absolute mouse position
					pos.left +
					// Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.relative.left * mod +
					// The offsetParent's offset without borders (offset + border)
					this.offset.parent.left * mod -
					(this.cssPosition === 'fixed'
						? -this.offset.scroll.left
						: scrollIsRootNode
						? 0
						: this.offset.scroll.left) *
						mod,
			};
		},

		_generatePosition: function (event, constrainPosition) {
			var containment,
				co,
				top,
				left,
				o = this.options,
				scrollIsRootNode = this._isRootNode(this.scrollParent[0]),
				pageX = event.pageX,
				pageY = event.pageY;

			// Cache the scroll
			if (!scrollIsRootNode || !this.offset.scroll) {
				this.offset.scroll = {
					top: this.scrollParent.scrollTop(),
					left: this.scrollParent.scrollLeft(),
				};
			}

			/*
			 * - Position constraining -
			 * Constrain the position to a mix of grid, containment.
			 */

			// If we are not dragging yet, we won't check for options
			if (constrainPosition) {
				if (this.containment) {
					if (this.relativeContainer) {
						co = this.relativeContainer.offset();
						containment = [
							this.containment[0] + co.left,
							this.containment[1] + co.top,
							this.containment[2] + co.left,
							this.containment[3] + co.top,
						];
					} else {
						containment = this.containment;
					}

					if (event.pageX - this.offset.click.left < containment[0]) {
						pageX = containment[0] + this.offset.click.left;
					}
					if (event.pageY - this.offset.click.top < containment[1]) {
						pageY = containment[1] + this.offset.click.top;
					}
					if (event.pageX - this.offset.click.left > containment[2]) {
						pageX = containment[2] + this.offset.click.left;
					}
					if (event.pageY - this.offset.click.top > containment[3]) {
						pageY = containment[3] + this.offset.click.top;
					}
				}

				if (o.grid) {
					//Check for grid elements set to 0 to prevent divide by 0 error causing invalid
					// argument errors in IE (see ticket #6950)
					top = o.grid[1]
						? this.originalPageY +
						  Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1]
						: this.originalPageY;
					pageY = containment
						? top - this.offset.click.top >= containment[1] ||
						  top - this.offset.click.top > containment[3]
							? top
							: top - this.offset.click.top >= containment[1]
							? top - o.grid[1]
							: top + o.grid[1]
						: top;

					left = o.grid[0]
						? this.originalPageX +
						  Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0]
						: this.originalPageX;
					pageX = containment
						? left - this.offset.click.left >= containment[0] ||
						  left - this.offset.click.left > containment[2]
							? left
							: left - this.offset.click.left >= containment[0]
							? left - o.grid[0]
							: left + o.grid[0]
						: left;
				}

				if (o.axis === 'y') {
					pageX = this.originalPageX;
				}

				if (o.axis === 'x') {
					pageY = this.originalPageY;
				}
			}

			return {
				top:
					// The absolute mouse position
					pageY -
					// Click offset (relative to the element)
					this.offset.click.top -
					// Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.relative.top -
					// The offsetParent's offset without borders (offset + border)
					this.offset.parent.top +
					(this.cssPosition === 'fixed'
						? -this.offset.scroll.top
						: scrollIsRootNode
						? 0
						: this.offset.scroll.top),
				left:
					// The absolute mouse position
					pageX -
					// Click offset (relative to the element)
					this.offset.click.left -
					// Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.relative.left -
					// The offsetParent's offset without borders (offset + border)
					this.offset.parent.left +
					(this.cssPosition === 'fixed'
						? -this.offset.scroll.left
						: scrollIsRootNode
						? 0
						: this.offset.scroll.left),
			};
		},

		_clear: function () {
			this._removeClass(this.helper, 'ui-draggable-dragging');
			if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
				this.helper.remove();
			}
			this.helper = null;
			this.cancelHelperRemoval = false;
			if (this.destroyOnClear) {
				this.destroy();
			}
		},

		// From now on bulk stuff - mainly helpers

		_trigger: function (type, event, ui) {
			ui = ui || this._uiHash();
			$.ui.plugin.call(this, type, [event, ui, this], true);

			// Absolute position and offset (see #6884 ) have to be recalculated after plugins
			if (/^(drag|start|stop)/.test(type)) {
				this.positionAbs = this._convertPositionTo('absolute');
				ui.offset = this.positionAbs;
			}
			return $.Widget.prototype._trigger.call(this, type, event, ui);
		},

		plugins: {},

		_uiHash: function () {
			return {
				helper: this.helper,
				position: this.position,
				originalPosition: this.originalPosition,
				offset: this.positionAbs,
			};
		},
	});

	$.ui.plugin.add('draggable', 'connectToSortable', {
		start: function (event, ui, draggable) {
			var uiSortable = $.extend({}, ui, {
				item: draggable.element,
			});

			draggable.sortables = [];
			$(draggable.options.connectToSortable).each(function () {
				var sortable = $(this).sortable('instance');

				if (sortable && !sortable.options.disabled) {
					draggable.sortables.push(sortable);

					// RefreshPositions is called at drag start to refresh the containerCache
					// which is used in drag. This ensures it's initialized and synchronized
					// with any changes that might have happened on the page since initialization.
					sortable.refreshPositions();
					sortable._trigger('activate', event, uiSortable);
				}
			});
		},
		stop: function (event, ui, draggable) {
			var uiSortable = $.extend({}, ui, {
				item: draggable.element,
			});

			draggable.cancelHelperRemoval = false;

			$.each(draggable.sortables, function () {
				var sortable = this;

				if (sortable.isOver) {
					sortable.isOver = 0;

					// Allow this sortable to handle removing the helper
					draggable.cancelHelperRemoval = true;
					sortable.cancelHelperRemoval = false;

					// Use _storedCSS To restore properties in the sortable,
					// as this also handles revert (#9675) since the draggable
					// may have modified them in unexpected ways (#8809)
					sortable._storedCSS = {
						position: sortable.placeholder.css('position'),
						top: sortable.placeholder.css('top'),
						left: sortable.placeholder.css('left'),
					};

					sortable._mouseStop(event);

					// Once drag has ended, the sortable should return to using
					// its original helper, not the shared helper from draggable
					sortable.options.helper = sortable.options._helper;
				} else {
					// Prevent this Sortable from removing the helper.
					// However, don't set the draggable to remove the helper
					// either as another connected Sortable may yet handle the removal.
					sortable.cancelHelperRemoval = true;

					sortable._trigger('deactivate', event, uiSortable);
				}
			});
		},
		drag: function (event, ui, draggable) {
			$.each(draggable.sortables, function () {
				var innermostIntersecting = false,
					sortable = this;

				// Copy over variables that sortable's _intersectsWith uses
				sortable.positionAbs = draggable.positionAbs;
				sortable.helperProportions = draggable.helperProportions;
				sortable.offset.click = draggable.offset.click;

				if (sortable._intersectsWith(sortable.containerCache)) {
					innermostIntersecting = true;

					$.each(draggable.sortables, function () {
						// Copy over variables that sortable's _intersectsWith uses
						this.positionAbs = draggable.positionAbs;
						this.helperProportions = draggable.helperProportions;
						this.offset.click = draggable.offset.click;

						if (
							this !== sortable &&
							this._intersectsWith(this.containerCache) &&
							$.contains(sortable.element[0], this.element[0])
						) {
							innermostIntersecting = false;
						}

						return innermostIntersecting;
					});
				}

				if (innermostIntersecting) {
					// If it intersects, we use a little isOver variable and set it once,
					// so that the move-in stuff gets fired only once.
					if (!sortable.isOver) {
						sortable.isOver = 1;

						// Store draggable's parent in case we need to reappend to it later.
						draggable._parent = ui.helper.parent();

						sortable.currentItem = ui.helper
							.appendTo(sortable.element)
							.data('ui-sortable-item', true);

						// Store helper option to later restore it
						sortable.options._helper = sortable.options.helper;

						sortable.options.helper = function () {
							return ui.helper[0];
						};

						// Fire the start events of the sortable with our passed browser event,
						// and our own helper (so it doesn't create a new one)
						event.target = sortable.currentItem[0];
						sortable._mouseCapture(event, true);
						sortable._mouseStart(event, true, true);

						// Because the browser event is way off the new appended portlet,
						// modify necessary variables to reflect the changes
						sortable.offset.click.top = draggable.offset.click.top;
						sortable.offset.click.left = draggable.offset.click.left;
						sortable.offset.parent.left -=
							draggable.offset.parent.left - sortable.offset.parent.left;
						sortable.offset.parent.top -=
							draggable.offset.parent.top - sortable.offset.parent.top;

						draggable._trigger('toSortable', event);

						// Inform draggable that the helper is in a valid drop zone,
						// used solely in the revert option to handle "valid/invalid".
						draggable.dropped = sortable.element;

						// Need to refreshPositions of all sortables in the case that
						// adding to one sortable changes the location of the other sortables (#9675)
						$.each(draggable.sortables, function () {
							this.refreshPositions();
						});

						// Hack so receive/update callbacks work (mostly)
						draggable.currentItem = draggable.element;
						sortable.fromOutside = draggable;
					}

					if (sortable.currentItem) {
						sortable._mouseDrag(event);

						// Copy the sortable's position because the draggable's can potentially reflect
						// a relative position, while sortable is always absolute, which the dragged
						// element has now become. (#8809)
						ui.position = sortable.position;
					}
				} else {
					// If it doesn't intersect with the sortable, and it intersected before,
					// we fake the drag stop of the sortable, but make sure it doesn't remove
					// the helper by using cancelHelperRemoval.
					if (sortable.isOver) {
						sortable.isOver = 0;
						sortable.cancelHelperRemoval = true;

						// Calling sortable's mouseStop would trigger a revert,
						// so revert must be temporarily false until after mouseStop is called.
						sortable.options._revert = sortable.options.revert;
						sortable.options.revert = false;

						sortable._trigger('out', event, sortable._uiHash(sortable));
						sortable._mouseStop(event, true);

						// Restore sortable behaviors that were modfied
						// when the draggable entered the sortable area (#9481)
						sortable.options.revert = sortable.options._revert;
						sortable.options.helper = sortable.options._helper;

						if (sortable.placeholder) {
							sortable.placeholder.remove();
						}

						// Restore and recalculate the draggable's offset considering the sortable
						// may have modified them in unexpected ways. (#8809, #10669)
						ui.helper.appendTo(draggable._parent);
						draggable._refreshOffsets(event);
						ui.position = draggable._generatePosition(event, true);

						draggable._trigger('fromSortable', event);

						// Inform draggable that the helper is no longer in a valid drop zone
						draggable.dropped = false;

						// Need to refreshPositions of all sortables just in case removing
						// from one sortable changes the location of other sortables (#9675)
						$.each(draggable.sortables, function () {
							this.refreshPositions();
						});
					}
				}
			});
		},
	});

	$.ui.plugin.add('draggable', 'cursor', {
		start: function (event, ui, instance) {
			var t = $('body'),
				o = instance.options;

			if (t.css('cursor')) {
				o._cursor = t.css('cursor');
			}
			t.css('cursor', o.cursor);
		},
		stop: function (event, ui, instance) {
			var o = instance.options;
			if (o._cursor) {
				$('body').css('cursor', o._cursor);
			}
		},
	});

	$.ui.plugin.add('draggable', 'opacity', {
		start: function (event, ui, instance) {
			var t = $(ui.helper),
				o = instance.options;
			if (t.css('opacity')) {
				o._opacity = t.css('opacity');
			}
			t.css('opacity', o.opacity);
		},
		stop: function (event, ui, instance) {
			var o = instance.options;
			if (o._opacity) {
				$(ui.helper).css('opacity', o._opacity);
			}
		},
	});

	$.ui.plugin.add('draggable', 'scroll', {
		start: function (event, ui, i) {
			if (!i.scrollParentNotHidden) {
				i.scrollParentNotHidden = i.helper.scrollParent(false);
			}

			if (
				i.scrollParentNotHidden[0] !== i.document[0] &&
				i.scrollParentNotHidden[0].tagName !== 'HTML'
			) {
				i.overflowOffset = i.scrollParentNotHidden.offset();
			}
		},
		drag: function (event, ui, i) {
			var o = i.options,
				scrolled = false,
				scrollParent = i.scrollParentNotHidden[0],
				document = i.document[0];

			if (scrollParent !== document && scrollParent.tagName !== 'HTML') {
				if (!o.axis || o.axis !== 'x') {
					if (
						i.overflowOffset.top + scrollParent.offsetHeight - event.pageY <
						o.scrollSensitivity
					) {
						scrollParent.scrollTop = scrolled =
							scrollParent.scrollTop + o.scrollSpeed;
					} else if (event.pageY - i.overflowOffset.top < o.scrollSensitivity) {
						scrollParent.scrollTop = scrolled =
							scrollParent.scrollTop - o.scrollSpeed;
					}
				}

				if (!o.axis || o.axis !== 'y') {
					if (
						i.overflowOffset.left + scrollParent.offsetWidth - event.pageX <
						o.scrollSensitivity
					) {
						scrollParent.scrollLeft = scrolled =
							scrollParent.scrollLeft + o.scrollSpeed;
					} else if (
						event.pageX - i.overflowOffset.left <
						o.scrollSensitivity
					) {
						scrollParent.scrollLeft = scrolled =
							scrollParent.scrollLeft - o.scrollSpeed;
					}
				}
			} else {
				if (!o.axis || o.axis !== 'x') {
					if (event.pageY - $(document).scrollTop() < o.scrollSensitivity) {
						scrolled = $(document).scrollTop(
							$(document).scrollTop() - o.scrollSpeed
						);
					} else if (
						$(window).height() - (event.pageY - $(document).scrollTop()) <
						o.scrollSensitivity
					) {
						scrolled = $(document).scrollTop(
							$(document).scrollTop() + o.scrollSpeed
						);
					}
				}

				if (!o.axis || o.axis !== 'y') {
					if (event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {
						scrolled = $(document).scrollLeft(
							$(document).scrollLeft() - o.scrollSpeed
						);
					} else if (
						$(window).width() - (event.pageX - $(document).scrollLeft()) <
						o.scrollSensitivity
					) {
						scrolled = $(document).scrollLeft(
							$(document).scrollLeft() + o.scrollSpeed
						);
					}
				}
			}

			if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
				$.ui.ddmanager.prepareOffsets(i, event);
			}
		},
	});

	$.ui.plugin.add('draggable', 'snap', {
		start: function (event, ui, i) {
			var o = i.options;

			i.snapElements = [];

			$(
				o.snap.constructor !== String
					? o.snap.items || ':data(ui-draggable)'
					: o.snap
			).each(function () {
				var $t = $(this),
					$o = $t.offset();
				if (this !== i.element[0]) {
					i.snapElements.push({
						item: this,
						width: $t.outerWidth(),
						height: $t.outerHeight(),
						top: $o.top,
						left: $o.left,
					});
				}
			});
		},
		drag: function (event, ui, inst) {
			var ts,
				bs,
				ls,
				rs,
				l,
				r,
				t,
				b,
				i,
				first,
				o = inst.options,
				d = o.snapTolerance,
				x1 = ui.offset.left,
				x2 = x1 + inst.helperProportions.width,
				y1 = ui.offset.top,
				y2 = y1 + inst.helperProportions.height;

			for (i = inst.snapElements.length - 1; i >= 0; i--) {
				l = inst.snapElements[i].left - inst.margins.left;
				r = l + inst.snapElements[i].width;
				t = inst.snapElements[i].top - inst.margins.top;
				b = t + inst.snapElements[i].height;

				if (
					x2 < l - d ||
					x1 > r + d ||
					y2 < t - d ||
					y1 > b + d ||
					!$.contains(
						inst.snapElements[i].item.ownerDocument,
						inst.snapElements[i].item
					)
				) {
					if (inst.snapElements[i].snapping) {
						if (inst.options.snap.release) {
							inst.options.snap.release.call(
								inst.element,
								event,
								$.extend(inst._uiHash(), {
									snapItem: inst.snapElements[i].item,
								})
							);
						}
					}
					inst.snapElements[i].snapping = false;
					continue;
				}

				if (o.snapMode !== 'inner') {
					ts = Math.abs(t - y2) <= d;
					bs = Math.abs(b - y1) <= d;
					ls = Math.abs(l - x2) <= d;
					rs = Math.abs(r - x1) <= d;
					if (ts) {
						ui.position.top = inst._convertPositionTo('relative', {
							top: t - inst.helperProportions.height,
							left: 0,
						}).top;
					}
					if (bs) {
						ui.position.top = inst._convertPositionTo('relative', {
							top: b,
							left: 0,
						}).top;
					}
					if (ls) {
						ui.position.left = inst._convertPositionTo('relative', {
							top: 0,
							left: l - inst.helperProportions.width,
						}).left;
					}
					if (rs) {
						ui.position.left = inst._convertPositionTo('relative', {
							top: 0,
							left: r,
						}).left;
					}
				}

				first = ts || bs || ls || rs;

				if (o.snapMode !== 'outer') {
					ts = Math.abs(t - y1) <= d;
					bs = Math.abs(b - y2) <= d;
					ls = Math.abs(l - x1) <= d;
					rs = Math.abs(r - x2) <= d;
					if (ts) {
						ui.position.top = inst._convertPositionTo('relative', {
							top: t,
							left: 0,
						}).top;
					}
					if (bs) {
						ui.position.top = inst._convertPositionTo('relative', {
							top: b - inst.helperProportions.height,
							left: 0,
						}).top;
					}
					if (ls) {
						ui.position.left = inst._convertPositionTo('relative', {
							top: 0,
							left: l,
						}).left;
					}
					if (rs) {
						ui.position.left = inst._convertPositionTo('relative', {
							top: 0,
							left: r - inst.helperProportions.width,
						}).left;
					}
				}

				if (!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {
					if (inst.options.snap.snap) {
						inst.options.snap.snap.call(
							inst.element,
							event,
							$.extend(inst._uiHash(), {
								snapItem: inst.snapElements[i].item,
							})
						);
					}
				}
				inst.snapElements[i].snapping = ts || bs || ls || rs || first;
			}
		},
	});

	$.ui.plugin.add('draggable', 'stack', {
		start: function (event, ui, instance) {
			var min,
				o = instance.options,
				group = $.makeArray($(o.stack)).sort(function (a, b) {
					return (
						(parseInt($(a).css('zIndex'), 10) || 0) -
						(parseInt($(b).css('zIndex'), 10) || 0)
					);
				});

			if (!group.length) {
				return;
			}

			min = parseInt($(group[0]).css('zIndex'), 10) || 0;
			$(group).each(function (i) {
				$(this).css('zIndex', min + i);
			});
			this.css('zIndex', min + group.length);
		},
	});

	$.ui.plugin.add('draggable', 'zIndex', {
		start: function (event, ui, instance) {
			var t = $(ui.helper),
				o = instance.options;

			if (t.css('zIndex')) {
				o._zIndex = t.css('zIndex');
			}
			t.css('zIndex', o.zIndex);
		},
		stop: function (event, ui, instance) {
			var o = instance.options;

			if (o._zIndex) {
				$(ui.helper).css('zIndex', o._zIndex);
			}
		},
	});

	var widgetsDraggable = $.ui.draggable;

	/*!
	 * jQuery UI Droppable 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Droppable
	//>>group: Interactions
	//>>description: Enables drop targets for draggable elements.
	//>>docs: http://api.jqueryui.com/droppable/
	//>>demos: http://jqueryui.com/droppable/

	$.widget('ui.droppable', {
		version: '1.13.1',
		widgetEventPrefix: 'drop',
		options: {
			accept: '*',
			addClasses: true,
			greedy: false,
			scope: 'default',
			tolerance: 'intersect',

			// Callbacks
			activate: null,
			deactivate: null,
			drop: null,
			out: null,
			over: null,
		},
		_create: function () {
			var proportions,
				o = this.options,
				accept = o.accept;

			this.isover = false;
			this.isout = true;

			this.accept =
				typeof accept === 'function'
					? accept
					: function (d) {
							return d.is(accept);
					  };

			this.proportions = function (/* valueToWrite */) {
				if (arguments.length) {
					// Store the droppable's proportions
					proportions = arguments[0];
				} else {
					// Retrieve or derive the droppable's proportions
					return proportions
						? proportions
						: (proportions = {
								width: this.element[0].offsetWidth,
								height: this.element[0].offsetHeight,
						  });
				}
			};

			this._addToManager(o.scope);

			if (o.addClasses) {
				this._addClass('ui-droppable');
			}
		},

		_addToManager: function (scope) {
			// Add the reference and positions to the manager
			$.ui.ddmanager.droppables[scope] = $.ui.ddmanager.droppables[scope] || [];
			$.ui.ddmanager.droppables[scope].push(this);
		},

		_splice: function (drop) {
			var i = 0;
			for (; i < drop.length; i++) {
				if (drop[i] === this) {
					drop.splice(i, 1);
				}
			}
		},

		_destroy: function () {
			var drop = $.ui.ddmanager.droppables[this.options.scope];

			this._splice(drop);
		},

		_setOption: function (key, value) {
			if (key === 'accept') {
				this.accept =
					typeof value === 'function'
						? value
						: function (d) {
								return d.is(value);
						  };
			} else if (key === 'scope') {
				var drop = $.ui.ddmanager.droppables[this.options.scope];

				this._splice(drop);
				this._addToManager(value);
			}

			this._super(key, value);
		},

		_activate: function (event) {
			var draggable = $.ui.ddmanager.current;

			this._addActiveClass();
			if (draggable) {
				this._trigger('activate', event, this.ui(draggable));
			}
		},

		_deactivate: function (event) {
			var draggable = $.ui.ddmanager.current;

			this._removeActiveClass();
			if (draggable) {
				this._trigger('deactivate', event, this.ui(draggable));
			}
		},

		_over: function (event) {
			var draggable = $.ui.ddmanager.current;

			// Bail if draggable and droppable are same element
			if (
				!draggable ||
				(draggable.currentItem || draggable.element)[0] === this.element[0]
			) {
				return;
			}

			if (
				this.accept.call(
					this.element[0],
					draggable.currentItem || draggable.element
				)
			) {
				this._addHoverClass();
				this._trigger('over', event, this.ui(draggable));
			}
		},

		_out: function (event) {
			var draggable = $.ui.ddmanager.current;

			// Bail if draggable and droppable are same element
			if (
				!draggable ||
				(draggable.currentItem || draggable.element)[0] === this.element[0]
			) {
				return;
			}

			if (
				this.accept.call(
					this.element[0],
					draggable.currentItem || draggable.element
				)
			) {
				this._removeHoverClass();
				this._trigger('out', event, this.ui(draggable));
			}
		},

		_drop: function (event, custom) {
			var draggable = custom || $.ui.ddmanager.current,
				childrenIntersection = false;

			// Bail if draggable and droppable are same element
			if (
				!draggable ||
				(draggable.currentItem || draggable.element)[0] === this.element[0]
			) {
				return false;
			}

			this.element
				.find(':data(ui-droppable)')
				.not('.ui-draggable-dragging')
				.each(function () {
					var inst = $(this).droppable('instance');
					if (
						inst.options.greedy &&
						!inst.options.disabled &&
						inst.options.scope === draggable.options.scope &&
						inst.accept.call(
							inst.element[0],
							draggable.currentItem || draggable.element
						) &&
						$.ui.intersect(
							draggable,
							$.extend(inst, { offset: inst.element.offset() }),
							inst.options.tolerance,
							event
						)
					) {
						childrenIntersection = true;
						return false;
					}
				});
			if (childrenIntersection) {
				return false;
			}

			if (
				this.accept.call(
					this.element[0],
					draggable.currentItem || draggable.element
				)
			) {
				this._removeActiveClass();
				this._removeHoverClass();

				this._trigger('drop', event, this.ui(draggable));
				return this.element;
			}

			return false;
		},

		ui: function (c) {
			return {
				draggable: c.currentItem || c.element,
				helper: c.helper,
				position: c.position,
				offset: c.positionAbs,
			};
		},

		// Extension points just to make backcompat sane and avoid duplicating logic
		// TODO: Remove in 1.14 along with call to it below
		_addHoverClass: function () {
			this._addClass('ui-droppable-hover');
		},

		_removeHoverClass: function () {
			this._removeClass('ui-droppable-hover');
		},

		_addActiveClass: function () {
			this._addClass('ui-droppable-active');
		},

		_removeActiveClass: function () {
			this._removeClass('ui-droppable-active');
		},
	});

	$.ui.intersect = (function () {
		function isOverAxis(x, reference, size) {
			return x >= reference && x < reference + size;
		}

		return function (draggable, droppable, toleranceMode, event) {
			if (!droppable.offset) {
				return false;
			}

			var x1 =
					(draggable.positionAbs || draggable.position.absolute).left +
					draggable.margins.left,
				y1 =
					(draggable.positionAbs || draggable.position.absolute).top +
					draggable.margins.top,
				x2 = x1 + draggable.helperProportions.width,
				y2 = y1 + draggable.helperProportions.height,
				l = droppable.offset.left,
				t = droppable.offset.top,
				r = l + droppable.proportions().width,
				b = t + droppable.proportions().height;

			switch (toleranceMode) {
				case 'fit':
					return l <= x1 && x2 <= r && t <= y1 && y2 <= b;
				case 'intersect':
					return (
						l < x1 + draggable.helperProportions.width / 2 && // Right Half
						x2 - draggable.helperProportions.width / 2 < r && // Left Half
						t < y1 + draggable.helperProportions.height / 2 && // Bottom Half
						y2 - draggable.helperProportions.height / 2 < b
					); // Top Half
				case 'pointer':
					return (
						isOverAxis(event.pageY, t, droppable.proportions().height) &&
						isOverAxis(event.pageX, l, droppable.proportions().width)
					);
				case 'touch':
					return (
						((y1 >= t && y1 <= b) || // Top edge touching
							(y2 >= t && y2 <= b) || // Bottom edge touching
							(y1 < t && y2 > b)) && // Surrounded vertically
						((x1 >= l && x1 <= r) || // Left edge touching
							(x2 >= l && x2 <= r) || // Right edge touching
							(x1 < l && x2 > r)) // Surrounded horizontally
					);
				default:
					return false;
			}
		};
	})();

	/*
	This manager tracks offsets of draggables and droppables
*/
	$.ui.ddmanager = {
		current: null,
		droppables: { default: [] },
		prepareOffsets: function (t, event) {
			var i,
				j,
				m = $.ui.ddmanager.droppables[t.options.scope] || [],
				type = event ? event.type : null, // workaround for #2317
				list = (t.currentItem || t.element)
					.find(':data(ui-droppable)')
					.addBack();

			droppablesLoop: for (i = 0; i < m.length; i++) {
				// No disabled and non-accepted
				if (
					m[i].options.disabled ||
					(t && !m[i].accept.call(m[i].element[0], t.currentItem || t.element))
				) {
					continue;
				}

				// Filter out elements in the current dragged item
				for (j = 0; j < list.length; j++) {
					if (list[j] === m[i].element[0]) {
						m[i].proportions().height = 0;
						continue droppablesLoop;
					}
				}

				m[i].visible = m[i].element.css('display') !== 'none';
				if (!m[i].visible) {
					continue;
				}

				// Activate the droppable if used directly from draggables
				if (type === 'mousedown') {
					m[i]._activate.call(m[i], event);
				}

				m[i].offset = m[i].element.offset();
				m[i].proportions({
					width: m[i].element[0].offsetWidth,
					height: m[i].element[0].offsetHeight,
				});
			}
		},
		drop: function (draggable, event) {
			var dropped = false;

			// Create a copy of the droppables in case the list changes during the drop (#9116)
			$.each(
				($.ui.ddmanager.droppables[draggable.options.scope] || []).slice(),
				function () {
					if (!this.options) {
						return;
					}
					if (
						!this.options.disabled &&
						this.visible &&
						$.ui.intersect(draggable, this, this.options.tolerance, event)
					) {
						dropped = this._drop.call(this, event) || dropped;
					}

					if (
						!this.options.disabled &&
						this.visible &&
						this.accept.call(
							this.element[0],
							draggable.currentItem || draggable.element
						)
					) {
						this.isout = true;
						this.isover = false;
						this._deactivate.call(this, event);
					}
				}
			);
			return dropped;
		},
		dragStart: function (draggable, event) {
			// Listen for scrolling so that if the dragging causes scrolling the position of the
			// droppables can be recalculated (see #5003)
			draggable.element
				.parentsUntil('body')
				.on('scroll.droppable', function () {
					if (!draggable.options.refreshPositions) {
						$.ui.ddmanager.prepareOffsets(draggable, event);
					}
				});
		},
		drag: function (draggable, event) {
			// If you have a highly dynamic page, you might try this option. It renders positions
			// every time you move the mouse.
			if (draggable.options.refreshPositions) {
				$.ui.ddmanager.prepareOffsets(draggable, event);
			}

			// Run through all droppables and check their positions based on specific tolerance options
			$.each(
				$.ui.ddmanager.droppables[draggable.options.scope] || [],
				function () {
					if (this.options.disabled || this.greedyChild || !this.visible) {
						return;
					}

					var parentInstance,
						scope,
						parent,
						intersects = $.ui.intersect(
							draggable,
							this,
							this.options.tolerance,
							event
						),
						c =
							!intersects && this.isover
								? 'isout'
								: intersects && !this.isover
								? 'isover'
								: null;
					if (!c) {
						return;
					}

					if (this.options.greedy) {
						// find droppable parents with same scope
						scope = this.options.scope;
						parent = this.element
							.parents(':data(ui-droppable)')
							.filter(function () {
								return $(this).droppable('instance').options.scope === scope;
							});

						if (parent.length) {
							parentInstance = $(parent[0]).droppable('instance');
							parentInstance.greedyChild = c === 'isover';
						}
					}

					// We just moved into a greedy child
					if (parentInstance && c === 'isover') {
						parentInstance.isover = false;
						parentInstance.isout = true;
						parentInstance._out.call(parentInstance, event);
					}

					this[c] = true;
					this[c === 'isout' ? 'isover' : 'isout'] = false;
					this[c === 'isover' ? '_over' : '_out'].call(this, event);

					// We just moved out of a greedy child
					if (parentInstance && c === 'isout') {
						parentInstance.isout = false;
						parentInstance.isover = true;
						parentInstance._over.call(parentInstance, event);
					}
				}
			);
		},
		dragStop: function (draggable, event) {
			draggable.element.parentsUntil('body').off('scroll.droppable');

			// Call prepareOffsets one final time since IE does not fire return scroll events when
			// overflow was caused by drag (see #5003)
			if (!draggable.options.refreshPositions) {
				$.ui.ddmanager.prepareOffsets(draggable, event);
			}
		},
	};

	// DEPRECATED
	// TODO: switch return back to widget declaration at top of file when this is removed
	if ($.uiBackCompat !== false) {
		// Backcompat for activeClass and hoverClass options
		$.widget('ui.droppable', $.ui.droppable, {
			options: {
				hoverClass: false,
				activeClass: false,
			},
			_addActiveClass: function () {
				this._super();
				if (this.options.activeClass) {
					this.element.addClass(this.options.activeClass);
				}
			},
			_removeActiveClass: function () {
				this._super();
				if (this.options.activeClass) {
					this.element.removeClass(this.options.activeClass);
				}
			},
			_addHoverClass: function () {
				this._super();
				if (this.options.hoverClass) {
					this.element.addClass(this.options.hoverClass);
				}
			},
			_removeHoverClass: function () {
				this._super();
				if (this.options.hoverClass) {
					this.element.removeClass(this.options.hoverClass);
				}
			},
		});
	}

	var widgetsDroppable = $.ui.droppable;

	/*!
	 * jQuery UI Resizable 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Resizable
	//>>group: Interactions
	//>>description: Enables resize functionality for any element.
	//>>docs: http://api.jqueryui.com/resizable/
	//>>demos: http://jqueryui.com/resizable/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/resizable.css
	//>>css.theme: ../../themes/base/theme.css

	$.widget('ui.resizable', $.ui.mouse, {
		version: '1.13.1',
		widgetEventPrefix: 'resize',
		options: {
			alsoResize: false,
			animate: false,
			animateDuration: 'slow',
			animateEasing: 'swing',
			aspectRatio: false,
			autoHide: false,
			classes: {
				'ui-resizable-se': 'ui-icon ui-icon-gripsmall-diagonal-se',
			},
			containment: false,
			ghost: false,
			grid: false,
			handles: 'e,s,se',
			helper: false,
			maxHeight: null,
			maxWidth: null,
			minHeight: 10,
			minWidth: 10,

			// See #7960
			zIndex: 90,

			// Callbacks
			resize: null,
			start: null,
			stop: null,
		},

		_num: function (value) {
			return parseFloat(value) || 0;
		},

		_isNumber: function (value) {
			return !isNaN(parseFloat(value));
		},

		_hasScroll: function (el, a) {
			if ($(el).css('overflow') === 'hidden') {
				return false;
			}

			var scroll = a && a === 'left' ? 'scrollLeft' : 'scrollTop',
				has = false;

			if (el[scroll] > 0) {
				return true;
			}

			// TODO: determine which cases actually cause this to happen
			// if the element doesn't have the scroll set, see if it's possible to
			// set the scroll
			try {
				el[scroll] = 1;
				has = el[scroll] > 0;
				el[scroll] = 0;
			} catch (e) {
				// `el` might be a string, then setting `scroll` will throw
				// an error in strict mode; ignore it.
			}
			return has;
		},

		_create: function () {
			var margins,
				o = this.options,
				that = this;
			this._addClass('ui-resizable');

			$.extend(this, {
				_aspectRatio: !!o.aspectRatio,
				aspectRatio: o.aspectRatio,
				originalElement: this.element,
				_proportionallyResizeElements: [],
				_helper:
					o.helper || o.ghost || o.animate
						? o.helper || 'ui-resizable-helper'
						: null,
			});

			// Wrap the element if it cannot hold child nodes
			if (
				this.element[0].nodeName.match(
					/^(canvas|textarea|input|select|button|img)$/i
				)
			) {
				this.element.wrap(
					$("<div class='ui-wrapper'></div>").css({
						overflow: 'hidden',
						position: this.element.css('position'),
						width: this.element.outerWidth(),
						height: this.element.outerHeight(),
						top: this.element.css('top'),
						left: this.element.css('left'),
					})
				);

				this.element = this.element
					.parent()
					.data('ui-resizable', this.element.resizable('instance'));

				this.elementIsWrapper = true;

				margins = {
					marginTop: this.originalElement.css('marginTop'),
					marginRight: this.originalElement.css('marginRight'),
					marginBottom: this.originalElement.css('marginBottom'),
					marginLeft: this.originalElement.css('marginLeft'),
				};

				this.element.css(margins);
				this.originalElement.css('margin', 0);

				// support: Safari
				// Prevent Safari textarea resize
				this.originalResizeStyle = this.originalElement.css('resize');
				this.originalElement.css('resize', 'none');

				this._proportionallyResizeElements.push(
					this.originalElement.css({
						position: 'static',
						zoom: 1,
						display: 'block',
					})
				);

				// Support: IE9
				// avoid IE jump (hard set the margin)
				this.originalElement.css(margins);

				this._proportionallyResize();
			}

			this._setupHandles();

			if (o.autoHide) {
				$(this.element)
					.on('mouseenter', function () {
						if (o.disabled) {
							return;
						}
						that._removeClass('ui-resizable-autohide');
						that._handles.show();
					})
					.on('mouseleave', function () {
						if (o.disabled) {
							return;
						}
						if (!that.resizing) {
							that._addClass('ui-resizable-autohide');
							that._handles.hide();
						}
					});
			}

			this._mouseInit();
		},

		_destroy: function () {
			this._mouseDestroy();
			this._addedHandles.remove();

			var wrapper,
				_destroy = function (exp) {
					$(exp)
						.removeData('resizable')
						.removeData('ui-resizable')
						.off('.resizable');
				};

			// TODO: Unwrap at same DOM position
			if (this.elementIsWrapper) {
				_destroy(this.element);
				wrapper = this.element;
				this.originalElement
					.css({
						position: wrapper.css('position'),
						width: wrapper.outerWidth(),
						height: wrapper.outerHeight(),
						top: wrapper.css('top'),
						left: wrapper.css('left'),
					})
					.insertAfter(wrapper);
				wrapper.remove();
			}

			this.originalElement.css('resize', this.originalResizeStyle);
			_destroy(this.originalElement);

			return this;
		},

		_setOption: function (key, value) {
			this._super(key, value);

			switch (key) {
				case 'handles':
					this._removeHandles();
					this._setupHandles();
					break;
				case 'aspectRatio':
					this._aspectRatio = !!value;
					break;
				default:
					break;
			}
		},

		_setupHandles: function () {
			var o = this.options,
				handle,
				i,
				n,
				hname,
				axis,
				that = this;
			this.handles =
				o.handles ||
				(!$('.ui-resizable-handle', this.element).length
					? 'e,s,se'
					: {
							n: '.ui-resizable-n',
							e: '.ui-resizable-e',
							s: '.ui-resizable-s',
							w: '.ui-resizable-w',
							se: '.ui-resizable-se',
							sw: '.ui-resizable-sw',
							ne: '.ui-resizable-ne',
							nw: '.ui-resizable-nw',
					  });

			this._handles = $();
			this._addedHandles = $();
			if (this.handles.constructor === String) {
				if (this.handles === 'all') {
					this.handles = 'n,e,s,w,se,sw,ne,nw';
				}

				n = this.handles.split(',');
				this.handles = {};

				for (i = 0; i < n.length; i++) {
					handle = String.prototype.trim.call(n[i]);
					hname = 'ui-resizable-' + handle;
					axis = $('<div>');
					this._addClass(axis, 'ui-resizable-handle ' + hname);

					axis.css({ zIndex: o.zIndex });

					this.handles[handle] = '.ui-resizable-' + handle;
					if (!this.element.children(this.handles[handle]).length) {
						this.element.append(axis);
						this._addedHandles = this._addedHandles.add(axis);
					}
				}
			}

			this._renderAxis = function (target) {
				var i, axis, padPos, padWrapper;

				target = target || this.element;

				for (i in this.handles) {
					if (this.handles[i].constructor === String) {
						this.handles[i] = this.element
							.children(this.handles[i])
							.first()
							.show();
					} else if (this.handles[i].jquery || this.handles[i].nodeType) {
						this.handles[i] = $(this.handles[i]);
						this._on(this.handles[i], { mousedown: that._mouseDown });
					}

					if (
						this.elementIsWrapper &&
						this.originalElement[0].nodeName.match(
							/^(textarea|input|select|button)$/i
						)
					) {
						axis = $(this.handles[i], this.element);

						padWrapper = /sw|ne|nw|se|n|s/.test(i)
							? axis.outerHeight()
							: axis.outerWidth();

						padPos = [
							'padding',
							/ne|nw|n/.test(i)
								? 'Top'
								: /se|sw|s/.test(i)
								? 'Bottom'
								: /^e$/.test(i)
								? 'Right'
								: 'Left',
						].join('');

						target.css(padPos, padWrapper);

						this._proportionallyResize();
					}

					this._handles = this._handles.add(this.handles[i]);
				}
			};

			// TODO: make renderAxis a prototype function
			this._renderAxis(this.element);

			this._handles = this._handles.add(
				this.element.find('.ui-resizable-handle')
			);
			this._handles.disableSelection();

			this._handles.on('mouseover', function () {
				if (!that.resizing) {
					if (this.className) {
						axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
					}
					that.axis = axis && axis[1] ? axis[1] : 'se';
				}
			});

			if (o.autoHide) {
				this._handles.hide();
				this._addClass('ui-resizable-autohide');
			}
		},

		_removeHandles: function () {
			this._addedHandles.remove();
		},

		_mouseCapture: function (event) {
			var i,
				handle,
				capture = false;

			for (i in this.handles) {
				handle = $(this.handles[i])[0];
				if (handle === event.target || $.contains(handle, event.target)) {
					capture = true;
				}
			}

			return !this.options.disabled && capture;
		},

		_mouseStart: function (event) {
			var curleft,
				curtop,
				cursor,
				o = this.options,
				el = this.element;

			this.resizing = true;

			this._renderProxy();

			curleft = this._num(this.helper.css('left'));
			curtop = this._num(this.helper.css('top'));

			if (o.containment) {
				curleft += $(o.containment).scrollLeft() || 0;
				curtop += $(o.containment).scrollTop() || 0;
			}

			this.offset = this.helper.offset();
			this.position = { left: curleft, top: curtop };

			this.size = this._helper
				? {
						width: this.helper.width(),
						height: this.helper.height(),
				  }
				: {
						width: el.width(),
						height: el.height(),
				  };

			this.originalSize = this._helper
				? {
						width: el.outerWidth(),
						height: el.outerHeight(),
				  }
				: {
						width: el.width(),
						height: el.height(),
				  };

			this.sizeDiff = {
				width: el.outerWidth() - el.width(),
				height: el.outerHeight() - el.height(),
			};

			this.originalPosition = { left: curleft, top: curtop };
			this.originalMousePosition = { left: event.pageX, top: event.pageY };

			this.aspectRatio =
				typeof o.aspectRatio === 'number'
					? o.aspectRatio
					: this.originalSize.width / this.originalSize.height || 1;

			cursor = $('.ui-resizable-' + this.axis).css('cursor');
			$('body').css(
				'cursor',
				cursor === 'auto' ? this.axis + '-resize' : cursor
			);

			this._addClass('ui-resizable-resizing');
			this._propagate('start', event);
			return true;
		},

		_mouseDrag: function (event) {
			var data,
				props,
				smp = this.originalMousePosition,
				a = this.axis,
				dx = event.pageX - smp.left || 0,
				dy = event.pageY - smp.top || 0,
				trigger = this._change[a];

			this._updatePrevProperties();

			if (!trigger) {
				return false;
			}

			data = trigger.apply(this, [event, dx, dy]);

			this._updateVirtualBoundaries(event.shiftKey);
			if (this._aspectRatio || event.shiftKey) {
				data = this._updateRatio(data, event);
			}

			data = this._respectSize(data, event);

			this._updateCache(data);

			this._propagate('resize', event);

			props = this._applyChanges();

			if (!this._helper && this._proportionallyResizeElements.length) {
				this._proportionallyResize();
			}

			if (!$.isEmptyObject(props)) {
				this._updatePrevProperties();
				this._trigger('resize', event, this.ui());
				this._applyChanges();
			}

			return false;
		},

		_mouseStop: function (event) {
			this.resizing = false;
			var pr,
				ista,
				soffseth,
				soffsetw,
				s,
				left,
				top,
				o = this.options,
				that = this;

			if (this._helper) {
				pr = this._proportionallyResizeElements;
				ista = pr.length && /textarea/i.test(pr[0].nodeName);
				soffseth =
					ista && this._hasScroll(pr[0], 'left') ? 0 : that.sizeDiff.height;
				soffsetw = ista ? 0 : that.sizeDiff.width;

				s = {
					width: that.helper.width() - soffsetw,
					height: that.helper.height() - soffseth,
				};
				left =
					parseFloat(that.element.css('left')) +
						(that.position.left - that.originalPosition.left) || null;
				top =
					parseFloat(that.element.css('top')) +
						(that.position.top - that.originalPosition.top) || null;

				if (!o.animate) {
					this.element.css($.extend(s, { top: top, left: left }));
				}

				that.helper.height(that.size.height);
				that.helper.width(that.size.width);

				if (this._helper && !o.animate) {
					this._proportionallyResize();
				}
			}

			$('body').css('cursor', 'auto');

			this._removeClass('ui-resizable-resizing');

			this._propagate('stop', event);

			if (this._helper) {
				this.helper.remove();
			}

			return false;
		},

		_updatePrevProperties: function () {
			this.prevPosition = {
				top: this.position.top,
				left: this.position.left,
			};
			this.prevSize = {
				width: this.size.width,
				height: this.size.height,
			};
		},

		_applyChanges: function () {
			var props = {};

			if (this.position.top !== this.prevPosition.top) {
				props.top = this.position.top + 'px';
			}
			if (this.position.left !== this.prevPosition.left) {
				props.left = this.position.left + 'px';
			}
			if (this.size.width !== this.prevSize.width) {
				props.width = this.size.width + 'px';
			}
			if (this.size.height !== this.prevSize.height) {
				props.height = this.size.height + 'px';
			}

			this.helper.css(props);

			return props;
		},

		_updateVirtualBoundaries: function (forceAspectRatio) {
			var pMinWidth,
				pMaxWidth,
				pMinHeight,
				pMaxHeight,
				b,
				o = this.options;

			b = {
				minWidth: this._isNumber(o.minWidth) ? o.minWidth : 0,
				maxWidth: this._isNumber(o.maxWidth) ? o.maxWidth : Infinity,
				minHeight: this._isNumber(o.minHeight) ? o.minHeight : 0,
				maxHeight: this._isNumber(o.maxHeight) ? o.maxHeight : Infinity,
			};

			if (this._aspectRatio || forceAspectRatio) {
				pMinWidth = b.minHeight * this.aspectRatio;
				pMinHeight = b.minWidth / this.aspectRatio;
				pMaxWidth = b.maxHeight * this.aspectRatio;
				pMaxHeight = b.maxWidth / this.aspectRatio;

				if (pMinWidth > b.minWidth) {
					b.minWidth = pMinWidth;
				}
				if (pMinHeight > b.minHeight) {
					b.minHeight = pMinHeight;
				}
				if (pMaxWidth < b.maxWidth) {
					b.maxWidth = pMaxWidth;
				}
				if (pMaxHeight < b.maxHeight) {
					b.maxHeight = pMaxHeight;
				}
			}
			this._vBoundaries = b;
		},

		_updateCache: function (data) {
			this.offset = this.helper.offset();
			if (this._isNumber(data.left)) {
				this.position.left = data.left;
			}
			if (this._isNumber(data.top)) {
				this.position.top = data.top;
			}
			if (this._isNumber(data.height)) {
				this.size.height = data.height;
			}
			if (this._isNumber(data.width)) {
				this.size.width = data.width;
			}
		},

		_updateRatio: function (data) {
			var cpos = this.position,
				csize = this.size,
				a = this.axis;

			if (this._isNumber(data.height)) {
				data.width = data.height * this.aspectRatio;
			} else if (this._isNumber(data.width)) {
				data.height = data.width / this.aspectRatio;
			}

			if (a === 'sw') {
				data.left = cpos.left + (csize.width - data.width);
				data.top = null;
			}
			if (a === 'nw') {
				data.top = cpos.top + (csize.height - data.height);
				data.left = cpos.left + (csize.width - data.width);
			}

			return data;
		},

		_respectSize: function (data) {
			var o = this._vBoundaries,
				a = this.axis,
				ismaxw =
					this._isNumber(data.width) && o.maxWidth && o.maxWidth < data.width,
				ismaxh =
					this._isNumber(data.height) &&
					o.maxHeight &&
					o.maxHeight < data.height,
				isminw =
					this._isNumber(data.width) && o.minWidth && o.minWidth > data.width,
				isminh =
					this._isNumber(data.height) &&
					o.minHeight &&
					o.minHeight > data.height,
				dw = this.originalPosition.left + this.originalSize.width,
				dh = this.originalPosition.top + this.originalSize.height,
				cw = /sw|nw|w/.test(a),
				ch = /nw|ne|n/.test(a);
			if (isminw) {
				data.width = o.minWidth;
			}
			if (isminh) {
				data.height = o.minHeight;
			}
			if (ismaxw) {
				data.width = o.maxWidth;
			}
			if (ismaxh) {
				data.height = o.maxHeight;
			}

			if (isminw && cw) {
				data.left = dw - o.minWidth;
			}
			if (ismaxw && cw) {
				data.left = dw - o.maxWidth;
			}
			if (isminh && ch) {
				data.top = dh - o.minHeight;
			}
			if (ismaxh && ch) {
				data.top = dh - o.maxHeight;
			}

			// Fixing jump error on top/left - bug #2330
			if (!data.width && !data.height && !data.left && data.top) {
				data.top = null;
			} else if (!data.width && !data.height && !data.top && data.left) {
				data.left = null;
			}

			return data;
		},

		_getPaddingPlusBorderDimensions: function (element) {
			var i = 0,
				widths = [],
				borders = [
					element.css('borderTopWidth'),
					element.css('borderRightWidth'),
					element.css('borderBottomWidth'),
					element.css('borderLeftWidth'),
				],
				paddings = [
					element.css('paddingTop'),
					element.css('paddingRight'),
					element.css('paddingBottom'),
					element.css('paddingLeft'),
				];

			for (; i < 4; i++) {
				widths[i] = parseFloat(borders[i]) || 0;
				widths[i] += parseFloat(paddings[i]) || 0;
			}

			return {
				height: widths[0] + widths[2],
				width: widths[1] + widths[3],
			};
		},

		_proportionallyResize: function () {
			if (!this._proportionallyResizeElements.length) {
				return;
			}

			var prel,
				i = 0,
				element = this.helper || this.element;

			for (; i < this._proportionallyResizeElements.length; i++) {
				prel = this._proportionallyResizeElements[i];

				// TODO: Seems like a bug to cache this.outerDimensions
				// considering that we are in a loop.
				if (!this.outerDimensions) {
					this.outerDimensions = this._getPaddingPlusBorderDimensions(prel);
				}

				prel.css({
					height: element.height() - this.outerDimensions.height || 0,
					width: element.width() - this.outerDimensions.width || 0,
				});
			}
		},

		_renderProxy: function () {
			var el = this.element,
				o = this.options;
			this.elementOffset = el.offset();

			if (this._helper) {
				this.helper =
					this.helper || $('<div></div>').css({ overflow: 'hidden' });

				this._addClass(this.helper, this._helper);
				this.helper.css({
					width: this.element.outerWidth(),
					height: this.element.outerHeight(),
					position: 'absolute',
					left: this.elementOffset.left + 'px',
					top: this.elementOffset.top + 'px',
					zIndex: ++o.zIndex, //TODO: Don't modify option
				});

				this.helper.appendTo('body').disableSelection();
			} else {
				this.helper = this.element;
			}
		},

		_change: {
			e: function (event, dx) {
				return { width: this.originalSize.width + dx };
			},
			w: function (event, dx) {
				var cs = this.originalSize,
					sp = this.originalPosition;
				return { left: sp.left + dx, width: cs.width - dx };
			},
			n: function (event, dx, dy) {
				var cs = this.originalSize,
					sp = this.originalPosition;
				return { top: sp.top + dy, height: cs.height - dy };
			},
			s: function (event, dx, dy) {
				return { height: this.originalSize.height + dy };
			},
			se: function (event, dx, dy) {
				return $.extend(
					this._change.s.apply(this, arguments),
					this._change.e.apply(this, [event, dx, dy])
				);
			},
			sw: function (event, dx, dy) {
				return $.extend(
					this._change.s.apply(this, arguments),
					this._change.w.apply(this, [event, dx, dy])
				);
			},
			ne: function (event, dx, dy) {
				return $.extend(
					this._change.n.apply(this, arguments),
					this._change.e.apply(this, [event, dx, dy])
				);
			},
			nw: function (event, dx, dy) {
				return $.extend(
					this._change.n.apply(this, arguments),
					this._change.w.apply(this, [event, dx, dy])
				);
			},
		},

		_propagate: function (n, event) {
			$.ui.plugin.call(this, n, [event, this.ui()]);
			if (n !== 'resize') {
				this._trigger(n, event, this.ui());
			}
		},

		plugins: {},

		ui: function () {
			return {
				originalElement: this.originalElement,
				element: this.element,
				helper: this.helper,
				position: this.position,
				size: this.size,
				originalSize: this.originalSize,
				originalPosition: this.originalPosition,
			};
		},
	});

	/*
	 * Resizable Extensions
	 */

	$.ui.plugin.add('resizable', 'animate', {
		stop: function (event) {
			var that = $(this).resizable('instance'),
				o = that.options,
				pr = that._proportionallyResizeElements,
				ista = pr.length && /textarea/i.test(pr[0].nodeName),
				soffseth =
					ista && that._hasScroll(pr[0], 'left') ? 0 : that.sizeDiff.height,
				soffsetw = ista ? 0 : that.sizeDiff.width,
				style = {
					width: that.size.width - soffsetw,
					height: that.size.height - soffseth,
				},
				left =
					parseFloat(that.element.css('left')) +
						(that.position.left - that.originalPosition.left) || null,
				top =
					parseFloat(that.element.css('top')) +
						(that.position.top - that.originalPosition.top) || null;

			that.element.animate(
				$.extend(style, top && left ? { top: top, left: left } : {}),
				{
					duration: o.animateDuration,
					easing: o.animateEasing,
					step: function () {
						var data = {
							width: parseFloat(that.element.css('width')),
							height: parseFloat(that.element.css('height')),
							top: parseFloat(that.element.css('top')),
							left: parseFloat(that.element.css('left')),
						};

						if (pr && pr.length) {
							$(pr[0]).css({ width: data.width, height: data.height });
						}

						// Propagating resize, and updating values for each animation step
						that._updateCache(data);
						that._propagate('resize', event);
					},
				}
			);
		},
	});

	$.ui.plugin.add('resizable', 'containment', {
		start: function () {
			var element,
				p,
				co,
				ch,
				cw,
				width,
				height,
				that = $(this).resizable('instance'),
				o = that.options,
				el = that.element,
				oc = o.containment,
				ce =
					oc instanceof $
						? oc.get(0)
						: /parent/.test(oc)
						? el.parent().get(0)
						: oc;

			if (!ce) {
				return;
			}

			that.containerElement = $(ce);

			if (/document/.test(oc) || oc === document) {
				that.containerOffset = {
					left: 0,
					top: 0,
				};
				that.containerPosition = {
					left: 0,
					top: 0,
				};

				that.parentData = {
					element: $(document),
					left: 0,
					top: 0,
					width: $(document).width(),
					height: $(document).height() || document.body.parentNode.scrollHeight,
				};
			} else {
				element = $(ce);
				p = [];
				$(['Top', 'Right', 'Left', 'Bottom']).each(function (i, name) {
					p[i] = that._num(element.css('padding' + name));
				});

				that.containerOffset = element.offset();
				that.containerPosition = element.position();
				that.containerSize = {
					height: element.innerHeight() - p[3],
					width: element.innerWidth() - p[1],
				};

				co = that.containerOffset;
				ch = that.containerSize.height;
				cw = that.containerSize.width;
				width = that._hasScroll(ce, 'left') ? ce.scrollWidth : cw;
				height = that._hasScroll(ce) ? ce.scrollHeight : ch;

				that.parentData = {
					element: ce,
					left: co.left,
					top: co.top,
					width: width,
					height: height,
				};
			}
		},

		resize: function (event) {
			var woset,
				hoset,
				isParent,
				isOffsetRelative,
				that = $(this).resizable('instance'),
				o = that.options,
				co = that.containerOffset,
				cp = that.position,
				pRatio = that._aspectRatio || event.shiftKey,
				cop = {
					top: 0,
					left: 0,
				},
				ce = that.containerElement,
				continueResize = true;

			if (ce[0] !== document && /static/.test(ce.css('position'))) {
				cop = co;
			}

			if (cp.left < (that._helper ? co.left : 0)) {
				that.size.width =
					that.size.width +
					(that._helper
						? that.position.left - co.left
						: that.position.left - cop.left);

				if (pRatio) {
					that.size.height = that.size.width / that.aspectRatio;
					continueResize = false;
				}
				that.position.left = o.helper ? co.left : 0;
			}

			if (cp.top < (that._helper ? co.top : 0)) {
				that.size.height =
					that.size.height +
					(that._helper ? that.position.top - co.top : that.position.top);

				if (pRatio) {
					that.size.width = that.size.height * that.aspectRatio;
					continueResize = false;
				}
				that.position.top = that._helper ? co.top : 0;
			}

			isParent = that.containerElement.get(0) === that.element.parent().get(0);
			isOffsetRelative = /relative|absolute/.test(
				that.containerElement.css('position')
			);

			if (isParent && isOffsetRelative) {
				that.offset.left = that.parentData.left + that.position.left;
				that.offset.top = that.parentData.top + that.position.top;
			} else {
				that.offset.left = that.element.offset().left;
				that.offset.top = that.element.offset().top;
			}

			woset = Math.abs(
				that.sizeDiff.width +
					(that._helper
						? that.offset.left - cop.left
						: that.offset.left - co.left)
			);

			hoset = Math.abs(
				that.sizeDiff.height +
					(that._helper ? that.offset.top - cop.top : that.offset.top - co.top)
			);

			if (woset + that.size.width >= that.parentData.width) {
				that.size.width = that.parentData.width - woset;
				if (pRatio) {
					that.size.height = that.size.width / that.aspectRatio;
					continueResize = false;
				}
			}

			if (hoset + that.size.height >= that.parentData.height) {
				that.size.height = that.parentData.height - hoset;
				if (pRatio) {
					that.size.width = that.size.height * that.aspectRatio;
					continueResize = false;
				}
			}

			if (!continueResize) {
				that.position.left = that.prevPosition.left;
				that.position.top = that.prevPosition.top;
				that.size.width = that.prevSize.width;
				that.size.height = that.prevSize.height;
			}
		},

		stop: function () {
			var that = $(this).resizable('instance'),
				o = that.options,
				co = that.containerOffset,
				cop = that.containerPosition,
				ce = that.containerElement,
				helper = $(that.helper),
				ho = helper.offset(),
				w = helper.outerWidth() - that.sizeDiff.width,
				h = helper.outerHeight() - that.sizeDiff.height;

			if (that._helper && !o.animate && /relative/.test(ce.css('position'))) {
				$(this).css({
					left: ho.left - cop.left - co.left,
					width: w,
					height: h,
				});
			}

			if (that._helper && !o.animate && /static/.test(ce.css('position'))) {
				$(this).css({
					left: ho.left - cop.left - co.left,
					width: w,
					height: h,
				});
			}
		},
	});

	$.ui.plugin.add('resizable', 'alsoResize', {
		start: function () {
			var that = $(this).resizable('instance'),
				o = that.options;

			$(o.alsoResize).each(function () {
				var el = $(this);
				el.data('ui-resizable-alsoresize', {
					width: parseFloat(el.width()),
					height: parseFloat(el.height()),
					left: parseFloat(el.css('left')),
					top: parseFloat(el.css('top')),
				});
			});
		},

		resize: function (event, ui) {
			var that = $(this).resizable('instance'),
				o = that.options,
				os = that.originalSize,
				op = that.originalPosition,
				delta = {
					height: that.size.height - os.height || 0,
					width: that.size.width - os.width || 0,
					top: that.position.top - op.top || 0,
					left: that.position.left - op.left || 0,
				};

			$(o.alsoResize).each(function () {
				var el = $(this),
					start = $(this).data('ui-resizable-alsoresize'),
					style = {},
					css = el.parents(ui.originalElement[0]).length
						? ['width', 'height']
						: ['width', 'height', 'top', 'left'];

				$.each(css, function (i, prop) {
					var sum = (start[prop] || 0) + (delta[prop] || 0);
					if (sum && sum >= 0) {
						style[prop] = sum || null;
					}
				});

				el.css(style);
			});
		},

		stop: function () {
			$(this).removeData('ui-resizable-alsoresize');
		},
	});

	$.ui.plugin.add('resizable', 'ghost', {
		start: function () {
			var that = $(this).resizable('instance'),
				cs = that.size;

			that.ghost = that.originalElement.clone();
			that.ghost.css({
				opacity: 0.25,
				display: 'block',
				position: 'relative',
				height: cs.height,
				width: cs.width,
				margin: 0,
				left: 0,
				top: 0,
			});

			that._addClass(that.ghost, 'ui-resizable-ghost');

			// DEPRECATED
			// TODO: remove after 1.12
			if ($.uiBackCompat !== false && typeof that.options.ghost === 'string') {
				// Ghost option
				that.ghost.addClass(this.options.ghost);
			}

			that.ghost.appendTo(that.helper);
		},

		resize: function () {
			var that = $(this).resizable('instance');
			if (that.ghost) {
				that.ghost.css({
					position: 'relative',
					height: that.size.height,
					width: that.size.width,
				});
			}
		},

		stop: function () {
			var that = $(this).resizable('instance');
			if (that.ghost && that.helper) {
				that.helper.get(0).removeChild(that.ghost.get(0));
			}
		},
	});

	$.ui.plugin.add('resizable', 'grid', {
		resize: function () {
			var outerDimensions,
				that = $(this).resizable('instance'),
				o = that.options,
				cs = that.size,
				os = that.originalSize,
				op = that.originalPosition,
				a = that.axis,
				grid = typeof o.grid === 'number' ? [o.grid, o.grid] : o.grid,
				gridX = grid[0] || 1,
				gridY = grid[1] || 1,
				ox = Math.round((cs.width - os.width) / gridX) * gridX,
				oy = Math.round((cs.height - os.height) / gridY) * gridY,
				newWidth = os.width + ox,
				newHeight = os.height + oy,
				isMaxWidth = o.maxWidth && o.maxWidth < newWidth,
				isMaxHeight = o.maxHeight && o.maxHeight < newHeight,
				isMinWidth = o.minWidth && o.minWidth > newWidth,
				isMinHeight = o.minHeight && o.minHeight > newHeight;

			o.grid = grid;

			if (isMinWidth) {
				newWidth += gridX;
			}
			if (isMinHeight) {
				newHeight += gridY;
			}
			if (isMaxWidth) {
				newWidth -= gridX;
			}
			if (isMaxHeight) {
				newHeight -= gridY;
			}

			if (/^(se|s|e)$/.test(a)) {
				that.size.width = newWidth;
				that.size.height = newHeight;
			} else if (/^(ne)$/.test(a)) {
				that.size.width = newWidth;
				that.size.height = newHeight;
				that.position.top = op.top - oy;
			} else if (/^(sw)$/.test(a)) {
				that.size.width = newWidth;
				that.size.height = newHeight;
				that.position.left = op.left - ox;
			} else {
				if (newHeight - gridY <= 0 || newWidth - gridX <= 0) {
					outerDimensions = that._getPaddingPlusBorderDimensions(this);
				}

				if (newHeight - gridY > 0) {
					that.size.height = newHeight;
					that.position.top = op.top - oy;
				} else {
					newHeight = gridY - outerDimensions.height;
					that.size.height = newHeight;
					that.position.top = op.top + os.height - newHeight;
				}
				if (newWidth - gridX > 0) {
					that.size.width = newWidth;
					that.position.left = op.left - ox;
				} else {
					newWidth = gridX - outerDimensions.width;
					that.size.width = newWidth;
					that.position.left = op.left + os.width - newWidth;
				}
			}
		},
	});

	var widgetsResizable = $.ui.resizable;

	/*!
	 * jQuery UI Selectable 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Selectable
	//>>group: Interactions
	//>>description: Allows groups of elements to be selected with the mouse.
	//>>docs: http://api.jqueryui.com/selectable/
	//>>demos: http://jqueryui.com/selectable/
	//>>css.structure: ../../themes/base/selectable.css

	var widgetsSelectable = $.widget('ui.selectable', $.ui.mouse, {
		version: '1.13.1',
		options: {
			appendTo: 'body',
			autoRefresh: true,
			distance: 0,
			filter: '*',
			tolerance: 'touch',

			// Callbacks
			selected: null,
			selecting: null,
			start: null,
			stop: null,
			unselected: null,
			unselecting: null,
		},
		_create: function () {
			var that = this;

			this._addClass('ui-selectable');

			this.dragged = false;

			// Cache selectee children based on filter
			this.refresh = function () {
				that.elementPos = $(that.element[0]).offset();
				that.selectees = $(that.options.filter, that.element[0]);
				that._addClass(that.selectees, 'ui-selectee');
				that.selectees.each(function () {
					var $this = $(this),
						selecteeOffset = $this.offset(),
						pos = {
							left: selecteeOffset.left - that.elementPos.left,
							top: selecteeOffset.top - that.elementPos.top,
						};
					$.data(this, 'selectable-item', {
						element: this,
						$element: $this,
						left: pos.left,
						top: pos.top,
						right: pos.left + $this.outerWidth(),
						bottom: pos.top + $this.outerHeight(),
						startselected: false,
						selected: $this.hasClass('ui-selected'),
						selecting: $this.hasClass('ui-selecting'),
						unselecting: $this.hasClass('ui-unselecting'),
					});
				});
			};
			this.refresh();

			this._mouseInit();

			this.helper = $('<div>');
			this._addClass(this.helper, 'ui-selectable-helper');
		},

		_destroy: function () {
			this.selectees.removeData('selectable-item');
			this._mouseDestroy();
		},

		_mouseStart: function (event) {
			var that = this,
				options = this.options;

			this.opos = [event.pageX, event.pageY];
			this.elementPos = $(this.element[0]).offset();

			if (this.options.disabled) {
				return;
			}

			this.selectees = $(options.filter, this.element[0]);

			this._trigger('start', event);

			$(options.appendTo).append(this.helper);

			// position helper (lasso)
			this.helper.css({
				left: event.pageX,
				top: event.pageY,
				width: 0,
				height: 0,
			});

			if (options.autoRefresh) {
				this.refresh();
			}

			this.selectees.filter('.ui-selected').each(function () {
				var selectee = $.data(this, 'selectable-item');
				selectee.startselected = true;
				if (!event.metaKey && !event.ctrlKey) {
					that._removeClass(selectee.$element, 'ui-selected');
					selectee.selected = false;
					that._addClass(selectee.$element, 'ui-unselecting');
					selectee.unselecting = true;

					// selectable UNSELECTING callback
					that._trigger('unselecting', event, {
						unselecting: selectee.element,
					});
				}
			});

			$(event.target)
				.parents()
				.addBack()
				.each(function () {
					var doSelect,
						selectee = $.data(this, 'selectable-item');
					if (selectee) {
						doSelect =
							(!event.metaKey && !event.ctrlKey) ||
							!selectee.$element.hasClass('ui-selected');
						that
							._removeClass(
								selectee.$element,
								doSelect ? 'ui-unselecting' : 'ui-selected'
							)
							._addClass(
								selectee.$element,
								doSelect ? 'ui-selecting' : 'ui-unselecting'
							);
						selectee.unselecting = !doSelect;
						selectee.selecting = doSelect;
						selectee.selected = doSelect;

						// selectable (UN)SELECTING callback
						if (doSelect) {
							that._trigger('selecting', event, {
								selecting: selectee.element,
							});
						} else {
							that._trigger('unselecting', event, {
								unselecting: selectee.element,
							});
						}
						return false;
					}
				});
		},

		_mouseDrag: function (event) {
			this.dragged = true;

			if (this.options.disabled) {
				return;
			}

			var tmp,
				that = this,
				options = this.options,
				x1 = this.opos[0],
				y1 = this.opos[1],
				x2 = event.pageX,
				y2 = event.pageY;

			if (x1 > x2) {
				tmp = x2;
				x2 = x1;
				x1 = tmp;
			}
			if (y1 > y2) {
				tmp = y2;
				y2 = y1;
				y1 = tmp;
			}
			this.helper.css({ left: x1, top: y1, width: x2 - x1, height: y2 - y1 });

			this.selectees.each(function () {
				var selectee = $.data(this, 'selectable-item'),
					hit = false,
					offset = {};

				//prevent helper from being selected if appendTo: selectable
				if (!selectee || selectee.element === that.element[0]) {
					return;
				}

				offset.left = selectee.left + that.elementPos.left;
				offset.right = selectee.right + that.elementPos.left;
				offset.top = selectee.top + that.elementPos.top;
				offset.bottom = selectee.bottom + that.elementPos.top;

				if (options.tolerance === 'touch') {
					hit = !(
						offset.left > x2 ||
						offset.right < x1 ||
						offset.top > y2 ||
						offset.bottom < y1
					);
				} else if (options.tolerance === 'fit') {
					hit =
						offset.left > x1 &&
						offset.right < x2 &&
						offset.top > y1 &&
						offset.bottom < y2;
				}

				if (hit) {
					// SELECT
					if (selectee.selected) {
						that._removeClass(selectee.$element, 'ui-selected');
						selectee.selected = false;
					}
					if (selectee.unselecting) {
						that._removeClass(selectee.$element, 'ui-unselecting');
						selectee.unselecting = false;
					}
					if (!selectee.selecting) {
						that._addClass(selectee.$element, 'ui-selecting');
						selectee.selecting = true;

						// selectable SELECTING callback
						that._trigger('selecting', event, {
							selecting: selectee.element,
						});
					}
				} else {
					// UNSELECT
					if (selectee.selecting) {
						if ((event.metaKey || event.ctrlKey) && selectee.startselected) {
							that._removeClass(selectee.$element, 'ui-selecting');
							selectee.selecting = false;
							that._addClass(selectee.$element, 'ui-selected');
							selectee.selected = true;
						} else {
							that._removeClass(selectee.$element, 'ui-selecting');
							selectee.selecting = false;
							if (selectee.startselected) {
								that._addClass(selectee.$element, 'ui-unselecting');
								selectee.unselecting = true;
							}

							// selectable UNSELECTING callback
							that._trigger('unselecting', event, {
								unselecting: selectee.element,
							});
						}
					}
					if (selectee.selected) {
						if (!event.metaKey && !event.ctrlKey && !selectee.startselected) {
							that._removeClass(selectee.$element, 'ui-selected');
							selectee.selected = false;

							that._addClass(selectee.$element, 'ui-unselecting');
							selectee.unselecting = true;

							// selectable UNSELECTING callback
							that._trigger('unselecting', event, {
								unselecting: selectee.element,
							});
						}
					}
				}
			});

			return false;
		},

		_mouseStop: function (event) {
			var that = this;

			this.dragged = false;

			$('.ui-unselecting', this.element[0]).each(function () {
				var selectee = $.data(this, 'selectable-item');
				that._removeClass(selectee.$element, 'ui-unselecting');
				selectee.unselecting = false;
				selectee.startselected = false;
				that._trigger('unselected', event, {
					unselected: selectee.element,
				});
			});
			$('.ui-selecting', this.element[0]).each(function () {
				var selectee = $.data(this, 'selectable-item');
				that
					._removeClass(selectee.$element, 'ui-selecting')
					._addClass(selectee.$element, 'ui-selected');
				selectee.selecting = false;
				selectee.selected = true;
				selectee.startselected = true;
				that._trigger('selected', event, {
					selected: selectee.element,
				});
			});
			this._trigger('stop', event);

			this.helper.remove();

			return false;
		},
	});

	/*!
	 * jQuery UI Sortable 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Sortable
	//>>group: Interactions
	//>>description: Enables items in a list to be sorted using the mouse.
	//>>docs: http://api.jqueryui.com/sortable/
	//>>demos: http://jqueryui.com/sortable/
	//>>css.structure: ../../themes/base/sortable.css

	var widgetsSortable = $.widget('ui.sortable', $.ui.mouse, {
		version: '1.13.1',
		widgetEventPrefix: 'sort',
		ready: false,
		options: {
			appendTo: 'parent',
			axis: false,
			connectWith: false,
			containment: false,
			cursor: 'auto',
			cursorAt: false,
			dropOnEmpty: true,
			forcePlaceholderSize: false,
			forceHelperSize: false,
			grid: false,
			handle: false,
			helper: 'original',
			items: '> *',
			opacity: false,
			placeholder: false,
			revert: false,
			scroll: true,
			scrollSensitivity: 20,
			scrollSpeed: 20,
			scope: 'default',
			tolerance: 'intersect',
			zIndex: 1000,

			// Callbacks
			activate: null,
			beforeStop: null,
			change: null,
			deactivate: null,
			out: null,
			over: null,
			receive: null,
			remove: null,
			sort: null,
			start: null,
			stop: null,
			update: null,
		},

		_isOverAxis: function (x, reference, size) {
			return x >= reference && x < reference + size;
		},

		_isFloating: function (item) {
			return (
				/left|right/.test(item.css('float')) ||
				/inline|table-cell/.test(item.css('display'))
			);
		},

		_create: function () {
			this.containerCache = {};
			this._addClass('ui-sortable');

			//Get the items
			this.refresh();

			//Let's determine the parent's offset
			this.offset = this.element.offset();

			//Initialize mouse events for interaction
			this._mouseInit();

			this._setHandleClassName();

			//We're ready to go
			this.ready = true;
		},

		_setOption: function (key, value) {
			this._super(key, value);

			if (key === 'handle') {
				this._setHandleClassName();
			}
		},

		_setHandleClassName: function () {
			var that = this;
			this._removeClass(
				this.element.find('.ui-sortable-handle'),
				'ui-sortable-handle'
			);
			$.each(this.items, function () {
				that._addClass(
					this.instance.options.handle
						? this.item.find(this.instance.options.handle)
						: this.item,
					'ui-sortable-handle'
				);
			});
		},

		_destroy: function () {
			this._mouseDestroy();

			for (var i = this.items.length - 1; i >= 0; i--) {
				this.items[i].item.removeData(this.widgetName + '-item');
			}

			return this;
		},

		_mouseCapture: function (event, overrideHandle) {
			var currentItem = null,
				validHandle = false,
				that = this;

			if (this.reverting) {
				return false;
			}

			if (this.options.disabled || this.options.type === 'static') {
				return false;
			}

			//We have to refresh the items data once first
			this._refreshItems(event);

			//Find out if the clicked node (or one of its parents) is a actual item in this.items
			$(event.target)
				.parents()
				.each(function () {
					if ($.data(this, that.widgetName + '-item') === that) {
						currentItem = $(this);
						return false;
					}
				});
			if ($.data(event.target, that.widgetName + '-item') === that) {
				currentItem = $(event.target);
			}

			if (!currentItem) {
				return false;
			}
			if (this.options.handle && !overrideHandle) {
				$(this.options.handle, currentItem)
					.find('*')
					.addBack()
					.each(function () {
						if (this === event.target) {
							validHandle = true;
						}
					});
				if (!validHandle) {
					return false;
				}
			}

			this.currentItem = currentItem;
			this._removeCurrentsFromItems();
			return true;
		},

		_mouseStart: function (event, overrideHandle, noActivation) {
			var i,
				body,
				o = this.options;

			this.currentContainer = this;

			//We only need to call refreshPositions, because the refreshItems call has been moved to
			// mouseCapture
			this.refreshPositions();

			//Prepare the dragged items parent
			this.appendTo = $(
				o.appendTo !== 'parent' ? o.appendTo : this.currentItem.parent()
			);

			//Create and append the visible helper
			this.helper = this._createHelper(event);

			//Cache the helper size
			this._cacheHelperProportions();

			/*
			 * - Position generation -
			 * This block generates everything position related - it's the core of draggables.
			 */

			//Cache the margins of the original element
			this._cacheMargins();

			//The element's absolute position on the page minus margins
			this.offset = this.currentItem.offset();
			this.offset = {
				top: this.offset.top - this.margins.top,
				left: this.offset.left - this.margins.left,
			};

			$.extend(this.offset, {
				click: {
					//Where the click happened, relative to the element
					left: event.pageX - this.offset.left,
					top: event.pageY - this.offset.top,
				},

				// This is a relative to absolute position minus the actual position calculation -
				// only used for relative positioned helper
				relative: this._getRelativeOffset(),
			});

			// After we get the helper offset, but before we get the parent offset we can
			// change the helper's position to absolute
			// TODO: Still need to figure out a way to make relative sorting possible
			this.helper.css('position', 'absolute');
			this.cssPosition = this.helper.css('position');

			//Adjust the mouse offset relative to the helper if "cursorAt" is supplied
			if (o.cursorAt) {
				this._adjustOffsetFromHelper(o.cursorAt);
			}

			//Cache the former DOM position
			this.domPosition = {
				prev: this.currentItem.prev()[0],
				parent: this.currentItem.parent()[0],
			};

			// If the helper is not the original, hide the original so it's not playing any role during
			// the drag, won't cause anything bad this way
			if (this.helper[0] !== this.currentItem[0]) {
				this.currentItem.hide();
			}

			//Create the placeholder
			this._createPlaceholder();

			//Get the next scrolling parent
			this.scrollParent = this.placeholder.scrollParent();

			$.extend(this.offset, {
				parent: this._getParentOffset(),
			});

			//Set a containment if given in the options
			if (o.containment) {
				this._setContainment();
			}

			if (o.cursor && o.cursor !== 'auto') {
				// cursor option
				body = this.document.find('body');

				// Support: IE
				this.storedCursor = body.css('cursor');
				body.css('cursor', o.cursor);

				this.storedStylesheet = $(
					'<style>*{ cursor: ' + o.cursor + ' !important; }</style>'
				).appendTo(body);
			}

			// We need to make sure to grab the zIndex before setting the
			// opacity, because setting the opacity to anything lower than 1
			// causes the zIndex to change from "auto" to 0.
			if (o.zIndex) {
				// zIndex option
				if (this.helper.css('zIndex')) {
					this._storedZIndex = this.helper.css('zIndex');
				}
				this.helper.css('zIndex', o.zIndex);
			}

			if (o.opacity) {
				// opacity option
				if (this.helper.css('opacity')) {
					this._storedOpacity = this.helper.css('opacity');
				}
				this.helper.css('opacity', o.opacity);
			}

			//Prepare scrolling
			if (
				this.scrollParent[0] !== this.document[0] &&
				this.scrollParent[0].tagName !== 'HTML'
			) {
				this.overflowOffset = this.scrollParent.offset();
			}

			//Call callbacks
			this._trigger('start', event, this._uiHash());

			//Recache the helper size
			if (!this._preserveHelperProportions) {
				this._cacheHelperProportions();
			}

			//Post "activate" events to possible containers
			if (!noActivation) {
				for (i = this.containers.length - 1; i >= 0; i--) {
					this.containers[i]._trigger('activate', event, this._uiHash(this));
				}
			}

			//Prepare possible droppables
			if ($.ui.ddmanager) {
				$.ui.ddmanager.current = this;
			}

			if ($.ui.ddmanager && !o.dropBehaviour) {
				$.ui.ddmanager.prepareOffsets(this, event);
			}

			this.dragging = true;

			this._addClass(this.helper, 'ui-sortable-helper');

			//Move the helper, if needed
			if (!this.helper.parent().is(this.appendTo)) {
				this.helper.detach().appendTo(this.appendTo);

				//Update position
				this.offset.parent = this._getParentOffset();
			}

			//Generate the original position
			this.position = this.originalPosition = this._generatePosition(event);
			this.originalPageX = event.pageX;
			this.originalPageY = event.pageY;
			this.lastPositionAbs = this.positionAbs =
				this._convertPositionTo('absolute');

			this._mouseDrag(event);

			return true;
		},

		_scroll: function (event) {
			var o = this.options,
				scrolled = false;

			if (
				this.scrollParent[0] !== this.document[0] &&
				this.scrollParent[0].tagName !== 'HTML'
			) {
				if (
					this.overflowOffset.top +
						this.scrollParent[0].offsetHeight -
						event.pageY <
					o.scrollSensitivity
				) {
					this.scrollParent[0].scrollTop = scrolled =
						this.scrollParent[0].scrollTop + o.scrollSpeed;
				} else if (
					event.pageY - this.overflowOffset.top <
					o.scrollSensitivity
				) {
					this.scrollParent[0].scrollTop = scrolled =
						this.scrollParent[0].scrollTop - o.scrollSpeed;
				}

				if (
					this.overflowOffset.left +
						this.scrollParent[0].offsetWidth -
						event.pageX <
					o.scrollSensitivity
				) {
					this.scrollParent[0].scrollLeft = scrolled =
						this.scrollParent[0].scrollLeft + o.scrollSpeed;
				} else if (
					event.pageX - this.overflowOffset.left <
					o.scrollSensitivity
				) {
					this.scrollParent[0].scrollLeft = scrolled =
						this.scrollParent[0].scrollLeft - o.scrollSpeed;
				}
			} else {
				if (event.pageY - this.document.scrollTop() < o.scrollSensitivity) {
					scrolled = this.document.scrollTop(
						this.document.scrollTop() - o.scrollSpeed
					);
				} else if (
					this.window.height() - (event.pageY - this.document.scrollTop()) <
					o.scrollSensitivity
				) {
					scrolled = this.document.scrollTop(
						this.document.scrollTop() + o.scrollSpeed
					);
				}

				if (event.pageX - this.document.scrollLeft() < o.scrollSensitivity) {
					scrolled = this.document.scrollLeft(
						this.document.scrollLeft() - o.scrollSpeed
					);
				} else if (
					this.window.width() - (event.pageX - this.document.scrollLeft()) <
					o.scrollSensitivity
				) {
					scrolled = this.document.scrollLeft(
						this.document.scrollLeft() + o.scrollSpeed
					);
				}
			}

			return scrolled;
		},

		_mouseDrag: function (event) {
			var i,
				item,
				itemElement,
				intersection,
				o = this.options;

			//Compute the helpers position
			this.position = this._generatePosition(event);
			this.positionAbs = this._convertPositionTo('absolute');

			//Set the helper position
			if (!this.options.axis || this.options.axis !== 'y') {
				this.helper[0].style.left = this.position.left + 'px';
			}
			if (!this.options.axis || this.options.axis !== 'x') {
				this.helper[0].style.top = this.position.top + 'px';
			}

			//Do scrolling
			if (o.scroll) {
				if (this._scroll(event) !== false) {
					//Update item positions used in position checks
					this._refreshItemPositions(true);

					if ($.ui.ddmanager && !o.dropBehaviour) {
						$.ui.ddmanager.prepareOffsets(this, event);
					}
				}
			}

			this.dragDirection = {
				vertical: this._getDragVerticalDirection(),
				horizontal: this._getDragHorizontalDirection(),
			};

			//Rearrange
			for (i = this.items.length - 1; i >= 0; i--) {
				//Cache variables and intersection, continue if no intersection
				item = this.items[i];
				itemElement = item.item[0];
				intersection = this._intersectsWithPointer(item);
				if (!intersection) {
					continue;
				}

				// Only put the placeholder inside the current Container, skip all
				// items from other containers. This works because when moving
				// an item from one container to another the
				// currentContainer is switched before the placeholder is moved.
				//
				// Without this, moving items in "sub-sortables" can cause
				// the placeholder to jitter between the outer and inner container.
				if (item.instance !== this.currentContainer) {
					continue;
				}

				// Cannot intersect with itself
				// no useless actions that have been done before
				// no action if the item moved is the parent of the item checked
				if (
					itemElement !== this.currentItem[0] &&
					this.placeholder[intersection === 1 ? 'next' : 'prev']()[0] !==
						itemElement &&
					!$.contains(this.placeholder[0], itemElement) &&
					(this.options.type === 'semi-dynamic'
						? !$.contains(this.element[0], itemElement)
						: true)
				) {
					this.direction = intersection === 1 ? 'down' : 'up';

					if (
						this.options.tolerance === 'pointer' ||
						this._intersectsWithSides(item)
					) {
						this._rearrange(event, item);
					} else {
						break;
					}

					this._trigger('change', event, this._uiHash());
					break;
				}
			}

			//Post events to containers
			this._contactContainers(event);

			//Interconnect with droppables
			if ($.ui.ddmanager) {
				$.ui.ddmanager.drag(this, event);
			}

			//Call callbacks
			this._trigger('sort', event, this._uiHash());

			this.lastPositionAbs = this.positionAbs;
			return false;
		},

		_mouseStop: function (event, noPropagation) {
			if (!event) {
				return;
			}

			//If we are using droppables, inform the manager about the drop
			if ($.ui.ddmanager && !this.options.dropBehaviour) {
				$.ui.ddmanager.drop(this, event);
			}

			if (this.options.revert) {
				var that = this,
					cur = this.placeholder.offset(),
					axis = this.options.axis,
					animation = {};

				if (!axis || axis === 'x') {
					animation.left =
						cur.left -
						this.offset.parent.left -
						this.margins.left +
						(this.offsetParent[0] === this.document[0].body
							? 0
							: this.offsetParent[0].scrollLeft);
				}
				if (!axis || axis === 'y') {
					animation.top =
						cur.top -
						this.offset.parent.top -
						this.margins.top +
						(this.offsetParent[0] === this.document[0].body
							? 0
							: this.offsetParent[0].scrollTop);
				}
				this.reverting = true;
				$(this.helper).animate(
					animation,
					parseInt(this.options.revert, 10) || 500,
					function () {
						that._clear(event);
					}
				);
			} else {
				this._clear(event, noPropagation);
			}

			return false;
		},

		cancel: function () {
			if (this.dragging) {
				this._mouseUp(new $.Event('mouseup', { target: null }));

				if (this.options.helper === 'original') {
					this.currentItem.css(this._storedCSS);
					this._removeClass(this.currentItem, 'ui-sortable-helper');
				} else {
					this.currentItem.show();
				}

				//Post deactivating events to containers
				for (var i = this.containers.length - 1; i >= 0; i--) {
					this.containers[i]._trigger('deactivate', null, this._uiHash(this));
					if (this.containers[i].containerCache.over) {
						this.containers[i]._trigger('out', null, this._uiHash(this));
						this.containers[i].containerCache.over = 0;
					}
				}
			}

			if (this.placeholder) {
				//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,
				// it unbinds ALL events from the original node!
				if (this.placeholder[0].parentNode) {
					this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
				}
				if (
					this.options.helper !== 'original' &&
					this.helper &&
					this.helper[0].parentNode
				) {
					this.helper.remove();
				}

				$.extend(this, {
					helper: null,
					dragging: false,
					reverting: false,
					_noFinalSort: null,
				});

				if (this.domPosition.prev) {
					$(this.domPosition.prev).after(this.currentItem);
				} else {
					$(this.domPosition.parent).prepend(this.currentItem);
				}
			}

			return this;
		},

		serialize: function (o) {
			var items = this._getItemsAsjQuery(o && o.connected),
				str = [];
			o = o || {};

			$(items).each(function () {
				var res = ($(o.item || this).attr(o.attribute || 'id') || '').match(
					o.expression || /(.+)[\-=_](.+)/
				);
				if (res) {
					str.push(
						(o.key || res[1] + '[]') +
							'=' +
							(o.key && o.expression ? res[1] : res[2])
					);
				}
			});

			if (!str.length && o.key) {
				str.push(o.key + '=');
			}

			return str.join('&');
		},

		toArray: function (o) {
			var items = this._getItemsAsjQuery(o && o.connected),
				ret = [];

			o = o || {};

			items.each(function () {
				ret.push($(o.item || this).attr(o.attribute || 'id') || '');
			});
			return ret;
		},

		/* Be careful with the following core functions */
		_intersectsWith: function (item) {
			var x1 = this.positionAbs.left,
				x2 = x1 + this.helperProportions.width,
				y1 = this.positionAbs.top,
				y2 = y1 + this.helperProportions.height,
				l = item.left,
				r = l + item.width,
				t = item.top,
				b = t + item.height,
				dyClick = this.offset.click.top,
				dxClick = this.offset.click.left,
				isOverElementHeight =
					this.options.axis === 'x' || (y1 + dyClick > t && y1 + dyClick < b),
				isOverElementWidth =
					this.options.axis === 'y' || (x1 + dxClick > l && x1 + dxClick < r),
				isOverElement = isOverElementHeight && isOverElementWidth;

			if (
				this.options.tolerance === 'pointer' ||
				this.options.forcePointerForContainers ||
				(this.options.tolerance !== 'pointer' &&
					this.helperProportions[this.floating ? 'width' : 'height'] >
						item[this.floating ? 'width' : 'height'])
			) {
				return isOverElement;
			} else {
				return (
					l < x1 + this.helperProportions.width / 2 && // Right Half
					x2 - this.helperProportions.width / 2 < r && // Left Half
					t < y1 + this.helperProportions.height / 2 && // Bottom Half
					y2 - this.helperProportions.height / 2 < b
				); // Top Half
			}
		},

		_intersectsWithPointer: function (item) {
			var verticalDirection,
				horizontalDirection,
				isOverElementHeight =
					this.options.axis === 'x' ||
					this._isOverAxis(
						this.positionAbs.top + this.offset.click.top,
						item.top,
						item.height
					),
				isOverElementWidth =
					this.options.axis === 'y' ||
					this._isOverAxis(
						this.positionAbs.left + this.offset.click.left,
						item.left,
						item.width
					),
				isOverElement = isOverElementHeight && isOverElementWidth;

			if (!isOverElement) {
				return false;
			}

			verticalDirection = this.dragDirection.vertical;
			horizontalDirection = this.dragDirection.horizontal;

			return this.floating
				? horizontalDirection === 'right' || verticalDirection === 'down'
					? 2
					: 1
				: verticalDirection && (verticalDirection === 'down' ? 2 : 1);
		},

		_intersectsWithSides: function (item) {
			var isOverBottomHalf = this._isOverAxis(
					this.positionAbs.top + this.offset.click.top,
					item.top + item.height / 2,
					item.height
				),
				isOverRightHalf = this._isOverAxis(
					this.positionAbs.left + this.offset.click.left,
					item.left + item.width / 2,
					item.width
				),
				verticalDirection = this.dragDirection.vertical,
				horizontalDirection = this.dragDirection.horizontal;

			if (this.floating && horizontalDirection) {
				return (
					(horizontalDirection === 'right' && isOverRightHalf) ||
					(horizontalDirection === 'left' && !isOverRightHalf)
				);
			} else {
				return (
					verticalDirection &&
					((verticalDirection === 'down' && isOverBottomHalf) ||
						(verticalDirection === 'up' && !isOverBottomHalf))
				);
			}
		},

		_getDragVerticalDirection: function () {
			var delta = this.positionAbs.top - this.lastPositionAbs.top;
			return delta !== 0 && (delta > 0 ? 'down' : 'up');
		},

		_getDragHorizontalDirection: function () {
			var delta = this.positionAbs.left - this.lastPositionAbs.left;
			return delta !== 0 && (delta > 0 ? 'right' : 'left');
		},

		refresh: function (event) {
			this._refreshItems(event);
			this._setHandleClassName();
			this.refreshPositions();
			return this;
		},

		_connectWith: function () {
			var options = this.options;
			return options.connectWith.constructor === String
				? [options.connectWith]
				: options.connectWith;
		},

		_getItemsAsjQuery: function (connected) {
			var i,
				j,
				cur,
				inst,
				items = [],
				queries = [],
				connectWith = this._connectWith();

			if (connectWith && connected) {
				for (i = connectWith.length - 1; i >= 0; i--) {
					cur = $(connectWith[i], this.document[0]);
					for (j = cur.length - 1; j >= 0; j--) {
						inst = $.data(cur[j], this.widgetFullName);
						if (inst && inst !== this && !inst.options.disabled) {
							queries.push([
								typeof inst.options.items === 'function'
									? inst.options.items.call(inst.element)
									: $(inst.options.items, inst.element)
											.not('.ui-sortable-helper')
											.not('.ui-sortable-placeholder'),
								inst,
							]);
						}
					}
				}
			}

			queries.push([
				typeof this.options.items === 'function'
					? this.options.items.call(this.element, null, {
							options: this.options,
							item: this.currentItem,
					  })
					: $(this.options.items, this.element)
							.not('.ui-sortable-helper')
							.not('.ui-sortable-placeholder'),
				this,
			]);

			function addItems() {
				items.push(this);
			}
			for (i = queries.length - 1; i >= 0; i--) {
				queries[i][0].each(addItems);
			}

			return $(items);
		},

		_removeCurrentsFromItems: function () {
			var list = this.currentItem.find(':data(' + this.widgetName + '-item)');

			this.items = $.grep(this.items, function (item) {
				for (var j = 0; j < list.length; j++) {
					if (list[j] === item.item[0]) {
						return false;
					}
				}
				return true;
			});
		},

		_refreshItems: function (event) {
			this.items = [];
			this.containers = [this];

			var i,
				j,
				cur,
				inst,
				targetData,
				_queries,
				item,
				queriesLength,
				items = this.items,
				queries = [
					[
						typeof this.options.items === 'function'
							? this.options.items.call(this.element[0], event, {
									item: this.currentItem,
							  })
							: $(this.options.items, this.element),
						this,
					],
				],
				connectWith = this._connectWith();

			//Shouldn't be run the first time through due to massive slow-down
			if (connectWith && this.ready) {
				for (i = connectWith.length - 1; i >= 0; i--) {
					cur = $(connectWith[i], this.document[0]);
					for (j = cur.length - 1; j >= 0; j--) {
						inst = $.data(cur[j], this.widgetFullName);
						if (inst && inst !== this && !inst.options.disabled) {
							queries.push([
								typeof inst.options.items === 'function'
									? inst.options.items.call(inst.element[0], event, {
											item: this.currentItem,
									  })
									: $(inst.options.items, inst.element),
								inst,
							]);
							this.containers.push(inst);
						}
					}
				}
			}

			for (i = queries.length - 1; i >= 0; i--) {
				targetData = queries[i][1];
				_queries = queries[i][0];

				for (j = 0, queriesLength = _queries.length; j < queriesLength; j++) {
					item = $(_queries[j]);

					// Data for target checking (mouse manager)
					item.data(this.widgetName + '-item', targetData);

					items.push({
						item: item,
						instance: targetData,
						width: 0,
						height: 0,
						left: 0,
						top: 0,
					});
				}
			}
		},

		_refreshItemPositions: function (fast) {
			var i, item, t, p;

			for (i = this.items.length - 1; i >= 0; i--) {
				item = this.items[i];

				//We ignore calculating positions of all connected containers when we're not over them
				if (
					this.currentContainer &&
					item.instance !== this.currentContainer &&
					item.item[0] !== this.currentItem[0]
				) {
					continue;
				}

				t = this.options.toleranceElement
					? $(this.options.toleranceElement, item.item)
					: item.item;

				if (!fast) {
					item.width = t.outerWidth();
					item.height = t.outerHeight();
				}

				p = t.offset();
				item.left = p.left;
				item.top = p.top;
			}
		},

		refreshPositions: function (fast) {
			// Determine whether items are being displayed horizontally
			this.floating = this.items.length
				? this.options.axis === 'x' || this._isFloating(this.items[0].item)
				: false;

			// This has to be redone because due to the item being moved out/into the offsetParent,
			// the offsetParent's position will change
			if (this.offsetParent && this.helper) {
				this.offset.parent = this._getParentOffset();
			}

			this._refreshItemPositions(fast);

			var i, p;

			if (this.options.custom && this.options.custom.refreshContainers) {
				this.options.custom.refreshContainers.call(this);
			} else {
				for (i = this.containers.length - 1; i >= 0; i--) {
					p = this.containers[i].element.offset();
					this.containers[i].containerCache.left = p.left;
					this.containers[i].containerCache.top = p.top;
					this.containers[i].containerCache.width =
						this.containers[i].element.outerWidth();
					this.containers[i].containerCache.height =
						this.containers[i].element.outerHeight();
				}
			}

			return this;
		},

		_createPlaceholder: function (that) {
			that = that || this;
			var className,
				nodeName,
				o = that.options;

			if (!o.placeholder || o.placeholder.constructor === String) {
				className = o.placeholder;
				nodeName = that.currentItem[0].nodeName.toLowerCase();
				o.placeholder = {
					element: function () {
						var element = $('<' + nodeName + '>', that.document[0]);

						that
							._addClass(
								element,
								'ui-sortable-placeholder',
								className || that.currentItem[0].className
							)
							._removeClass(element, 'ui-sortable-helper');

						if (nodeName === 'tbody') {
							that._createTrPlaceholder(
								that.currentItem.find('tr').eq(0),
								$('<tr>', that.document[0]).appendTo(element)
							);
						} else if (nodeName === 'tr') {
							that._createTrPlaceholder(that.currentItem, element);
						} else if (nodeName === 'img') {
							element.attr('src', that.currentItem.attr('src'));
						}

						if (!className) {
							element.css('visibility', 'hidden');
						}

						return element;
					},
					update: function (container, p) {
						// 1. If a className is set as 'placeholder option, we don't force sizes -
						// the class is responsible for that
						// 2. The option 'forcePlaceholderSize can be enabled to force it even if a
						// class name is specified
						if (className && !o.forcePlaceholderSize) {
							return;
						}

						// If the element doesn't have a actual height or width by itself (without
						// styles coming from a stylesheet), it receives the inline height and width
						// from the dragged item. Or, if it's a tbody or tr, it's going to have a height
						// anyway since we're populating them with <td>s above, but they're unlikely to
						// be the correct height on their own if the row heights are dynamic, so we'll
						// always assign the height of the dragged item given forcePlaceholderSize
						// is true.
						if (
							!p.height() ||
							(o.forcePlaceholderSize &&
								(nodeName === 'tbody' || nodeName === 'tr'))
						) {
							p.height(
								that.currentItem.innerHeight() -
									parseInt(that.currentItem.css('paddingTop') || 0, 10) -
									parseInt(that.currentItem.css('paddingBottom') || 0, 10)
							);
						}
						if (!p.width()) {
							p.width(
								that.currentItem.innerWidth() -
									parseInt(that.currentItem.css('paddingLeft') || 0, 10) -
									parseInt(that.currentItem.css('paddingRight') || 0, 10)
							);
						}
					},
				};
			}

			//Create the placeholder
			that.placeholder = $(
				o.placeholder.element.call(that.element, that.currentItem)
			);

			//Append it after the actual current item
			that.currentItem.after(that.placeholder);

			//Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)
			o.placeholder.update(that, that.placeholder);
		},

		_createTrPlaceholder: function (sourceTr, targetTr) {
			var that = this;

			sourceTr.children().each(function () {
				$('<td>&#160;</td>', that.document[0])
					.attr('colspan', $(this).attr('colspan') || 1)
					.appendTo(targetTr);
			});
		},

		_contactContainers: function (event) {
			var i,
				j,
				dist,
				itemWithLeastDistance,
				posProperty,
				sizeProperty,
				cur,
				nearBottom,
				floating,
				axis,
				innermostContainer = null,
				innermostIndex = null;

			// Get innermost container that intersects with item
			for (i = this.containers.length - 1; i >= 0; i--) {
				// Never consider a container that's located within the item itself
				if ($.contains(this.currentItem[0], this.containers[i].element[0])) {
					continue;
				}

				if (this._intersectsWith(this.containers[i].containerCache)) {
					// If we've already found a container and it's more "inner" than this, then continue
					if (
						innermostContainer &&
						$.contains(
							this.containers[i].element[0],
							innermostContainer.element[0]
						)
					) {
						continue;
					}

					innermostContainer = this.containers[i];
					innermostIndex = i;
				} else {
					// container doesn't intersect. trigger "out" event if necessary
					if (this.containers[i].containerCache.over) {
						this.containers[i]._trigger('out', event, this._uiHash(this));
						this.containers[i].containerCache.over = 0;
					}
				}
			}

			// If no intersecting containers found, return
			if (!innermostContainer) {
				return;
			}

			// Move the item into the container if it's not there already
			if (this.containers.length === 1) {
				if (!this.containers[innermostIndex].containerCache.over) {
					this.containers[innermostIndex]._trigger(
						'over',
						event,
						this._uiHash(this)
					);
					this.containers[innermostIndex].containerCache.over = 1;
				}
			} else {
				// When entering a new container, we will find the item with the least distance and
				// append our item near it
				dist = 10000;
				itemWithLeastDistance = null;
				floating =
					innermostContainer.floating || this._isFloating(this.currentItem);
				posProperty = floating ? 'left' : 'top';
				sizeProperty = floating ? 'width' : 'height';
				axis = floating ? 'pageX' : 'pageY';

				for (j = this.items.length - 1; j >= 0; j--) {
					if (
						!$.contains(
							this.containers[innermostIndex].element[0],
							this.items[j].item[0]
						)
					) {
						continue;
					}
					if (this.items[j].item[0] === this.currentItem[0]) {
						continue;
					}

					cur = this.items[j].item.offset()[posProperty];
					nearBottom = false;
					if (event[axis] - cur > this.items[j][sizeProperty] / 2) {
						nearBottom = true;
					}

					if (Math.abs(event[axis] - cur) < dist) {
						dist = Math.abs(event[axis] - cur);
						itemWithLeastDistance = this.items[j];
						this.direction = nearBottom ? 'up' : 'down';
					}
				}

				//Check if dropOnEmpty is enabled
				if (!itemWithLeastDistance && !this.options.dropOnEmpty) {
					return;
				}

				if (this.currentContainer === this.containers[innermostIndex]) {
					if (!this.currentContainer.containerCache.over) {
						this.containers[innermostIndex]._trigger(
							'over',
							event,
							this._uiHash()
						);
						this.currentContainer.containerCache.over = 1;
					}
					return;
				}

				if (itemWithLeastDistance) {
					this._rearrange(event, itemWithLeastDistance, null, true);
				} else {
					this._rearrange(
						event,
						null,
						this.containers[innermostIndex].element,
						true
					);
				}
				this._trigger('change', event, this._uiHash());
				this.containers[innermostIndex]._trigger(
					'change',
					event,
					this._uiHash(this)
				);
				this.currentContainer = this.containers[innermostIndex];

				//Update the placeholder
				this.options.placeholder.update(
					this.currentContainer,
					this.placeholder
				);

				//Update scrollParent
				this.scrollParent = this.placeholder.scrollParent();

				//Update overflowOffset
				if (
					this.scrollParent[0] !== this.document[0] &&
					this.scrollParent[0].tagName !== 'HTML'
				) {
					this.overflowOffset = this.scrollParent.offset();
				}

				this.containers[innermostIndex]._trigger(
					'over',
					event,
					this._uiHash(this)
				);
				this.containers[innermostIndex].containerCache.over = 1;
			}
		},

		_createHelper: function (event) {
			var o = this.options,
				helper =
					typeof o.helper === 'function'
						? $(o.helper.apply(this.element[0], [event, this.currentItem]))
						: o.helper === 'clone'
						? this.currentItem.clone()
						: this.currentItem;

			//Add the helper to the DOM if that didn't happen already
			if (!helper.parents('body').length) {
				this.appendTo[0].appendChild(helper[0]);
			}

			if (helper[0] === this.currentItem[0]) {
				this._storedCSS = {
					width: this.currentItem[0].style.width,
					height: this.currentItem[0].style.height,
					position: this.currentItem.css('position'),
					top: this.currentItem.css('top'),
					left: this.currentItem.css('left'),
				};
			}

			if (!helper[0].style.width || o.forceHelperSize) {
				helper.width(this.currentItem.width());
			}
			if (!helper[0].style.height || o.forceHelperSize) {
				helper.height(this.currentItem.height());
			}

			return helper;
		},

		_adjustOffsetFromHelper: function (obj) {
			if (typeof obj === 'string') {
				obj = obj.split(' ');
			}
			if (Array.isArray(obj)) {
				obj = { left: +obj[0], top: +obj[1] || 0 };
			}
			if ('left' in obj) {
				this.offset.click.left = obj.left + this.margins.left;
			}
			if ('right' in obj) {
				this.offset.click.left =
					this.helperProportions.width - obj.right + this.margins.left;
			}
			if ('top' in obj) {
				this.offset.click.top = obj.top + this.margins.top;
			}
			if ('bottom' in obj) {
				this.offset.click.top =
					this.helperProportions.height - obj.bottom + this.margins.top;
			}
		},

		_getParentOffset: function () {
			//Get the offsetParent and cache its position
			this.offsetParent = this.helper.offsetParent();
			var po = this.offsetParent.offset();

			// This is a special case where we need to modify a offset calculated on start, since the
			// following happened:
			// 1. The position of the helper is absolute, so it's position is calculated based on the
			// next positioned parent
			// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't
			// the document, which means that the scroll is included in the initial calculation of the
			// offset of the parent, and never recalculated upon drag
			if (
				this.cssPosition === 'absolute' &&
				this.scrollParent[0] !== this.document[0] &&
				$.contains(this.scrollParent[0], this.offsetParent[0])
			) {
				po.left += this.scrollParent.scrollLeft();
				po.top += this.scrollParent.scrollTop();
			}

			// This needs to be actually done for all browsers, since pageX/pageY includes this
			// information with an ugly IE fix
			if (
				this.offsetParent[0] === this.document[0].body ||
				(this.offsetParent[0].tagName &&
					this.offsetParent[0].tagName.toLowerCase() === 'html' &&
					$.ui.ie)
			) {
				po = { top: 0, left: 0 };
			}

			return {
				top:
					po.top + (parseInt(this.offsetParent.css('borderTopWidth'), 10) || 0),
				left:
					po.left +
					(parseInt(this.offsetParent.css('borderLeftWidth'), 10) || 0),
			};
		},

		_getRelativeOffset: function () {
			if (this.cssPosition === 'relative') {
				var p = this.currentItem.position();
				return {
					top:
						p.top -
						(parseInt(this.helper.css('top'), 10) || 0) +
						this.scrollParent.scrollTop(),
					left:
						p.left -
						(parseInt(this.helper.css('left'), 10) || 0) +
						this.scrollParent.scrollLeft(),
				};
			} else {
				return { top: 0, left: 0 };
			}
		},

		_cacheMargins: function () {
			this.margins = {
				left: parseInt(this.currentItem.css('marginLeft'), 10) || 0,
				top: parseInt(this.currentItem.css('marginTop'), 10) || 0,
			};
		},

		_cacheHelperProportions: function () {
			this.helperProportions = {
				width: this.helper.outerWidth(),
				height: this.helper.outerHeight(),
			};
		},

		_setContainment: function () {
			var ce,
				co,
				over,
				o = this.options;
			if (o.containment === 'parent') {
				o.containment = this.helper[0].parentNode;
			}
			if (o.containment === 'document' || o.containment === 'window') {
				this.containment = [
					0 - this.offset.relative.left - this.offset.parent.left,
					0 - this.offset.relative.top - this.offset.parent.top,
					o.containment === 'document'
						? this.document.width()
						: this.window.width() -
						  this.helperProportions.width -
						  this.margins.left,
					(o.containment === 'document'
						? this.document.height() || document.body.parentNode.scrollHeight
						: this.window.height() ||
						  this.document[0].body.parentNode.scrollHeight) -
						this.helperProportions.height -
						this.margins.top,
				];
			}

			if (!/^(document|window|parent)$/.test(o.containment)) {
				ce = $(o.containment)[0];
				co = $(o.containment).offset();
				over = $(ce).css('overflow') !== 'hidden';

				this.containment = [
					co.left +
						(parseInt($(ce).css('borderLeftWidth'), 10) || 0) +
						(parseInt($(ce).css('paddingLeft'), 10) || 0) -
						this.margins.left,
					co.top +
						(parseInt($(ce).css('borderTopWidth'), 10) || 0) +
						(parseInt($(ce).css('paddingTop'), 10) || 0) -
						this.margins.top,
					co.left +
						(over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) -
						(parseInt($(ce).css('borderLeftWidth'), 10) || 0) -
						(parseInt($(ce).css('paddingRight'), 10) || 0) -
						this.helperProportions.width -
						this.margins.left,
					co.top +
						(over
							? Math.max(ce.scrollHeight, ce.offsetHeight)
							: ce.offsetHeight) -
						(parseInt($(ce).css('borderTopWidth'), 10) || 0) -
						(parseInt($(ce).css('paddingBottom'), 10) || 0) -
						this.helperProportions.height -
						this.margins.top,
				];
			}
		},

		_convertPositionTo: function (d, pos) {
			if (!pos) {
				pos = this.position;
			}
			var mod = d === 'absolute' ? 1 : -1,
				scroll =
					this.cssPosition === 'absolute' &&
					!(
						this.scrollParent[0] !== this.document[0] &&
						$.contains(this.scrollParent[0], this.offsetParent[0])
					)
						? this.offsetParent
						: this.scrollParent,
				scrollIsRootNode = /(html|body)/i.test(scroll[0].tagName);

			return {
				top:
					// The absolute mouse position
					pos.top +
					// Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.relative.top * mod +
					// The offsetParent's offset without borders (offset + border)
					this.offset.parent.top * mod -
					(this.cssPosition === 'fixed'
						? -this.scrollParent.scrollTop()
						: scrollIsRootNode
						? 0
						: scroll.scrollTop()) *
						mod,
				left:
					// The absolute mouse position
					pos.left +
					// Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.relative.left * mod +
					// The offsetParent's offset without borders (offset + border)
					this.offset.parent.left * mod -
					(this.cssPosition === 'fixed'
						? -this.scrollParent.scrollLeft()
						: scrollIsRootNode
						? 0
						: scroll.scrollLeft()) *
						mod,
			};
		},

		_generatePosition: function (event) {
			var top,
				left,
				o = this.options,
				pageX = event.pageX,
				pageY = event.pageY,
				scroll =
					this.cssPosition === 'absolute' &&
					!(
						this.scrollParent[0] !== this.document[0] &&
						$.contains(this.scrollParent[0], this.offsetParent[0])
					)
						? this.offsetParent
						: this.scrollParent,
				scrollIsRootNode = /(html|body)/i.test(scroll[0].tagName);

			// This is another very weird special case that only happens for relative elements:
			// 1. If the css position is relative
			// 2. and the scroll parent is the document or similar to the offset parent
			// we have to refresh the relative offset during the scroll so there are no jumps
			if (
				this.cssPosition === 'relative' &&
				!(
					this.scrollParent[0] !== this.document[0] &&
					this.scrollParent[0] !== this.offsetParent[0]
				)
			) {
				this.offset.relative = this._getRelativeOffset();
			}

			/*
			 * - Position constraining -
			 * Constrain the position to a mix of grid, containment.
			 */

			if (this.originalPosition) {
				//If we are not dragging yet, we won't check for options

				if (this.containment) {
					if (event.pageX - this.offset.click.left < this.containment[0]) {
						pageX = this.containment[0] + this.offset.click.left;
					}
					if (event.pageY - this.offset.click.top < this.containment[1]) {
						pageY = this.containment[1] + this.offset.click.top;
					}
					if (event.pageX - this.offset.click.left > this.containment[2]) {
						pageX = this.containment[2] + this.offset.click.left;
					}
					if (event.pageY - this.offset.click.top > this.containment[3]) {
						pageY = this.containment[3] + this.offset.click.top;
					}
				}

				if (o.grid) {
					top =
						this.originalPageY +
						Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];
					pageY = this.containment
						? top - this.offset.click.top >= this.containment[1] &&
						  top - this.offset.click.top <= this.containment[3]
							? top
							: top - this.offset.click.top >= this.containment[1]
							? top - o.grid[1]
							: top + o.grid[1]
						: top;

					left =
						this.originalPageX +
						Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];
					pageX = this.containment
						? left - this.offset.click.left >= this.containment[0] &&
						  left - this.offset.click.left <= this.containment[2]
							? left
							: left - this.offset.click.left >= this.containment[0]
							? left - o.grid[0]
							: left + o.grid[0]
						: left;
				}
			}

			return {
				top:
					// The absolute mouse position
					pageY -
					// Click offset (relative to the element)
					this.offset.click.top -
					// Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.relative.top -
					// The offsetParent's offset without borders (offset + border)
					this.offset.parent.top +
					(this.cssPosition === 'fixed'
						? -this.scrollParent.scrollTop()
						: scrollIsRootNode
						? 0
						: scroll.scrollTop()),
				left:
					// The absolute mouse position
					pageX -
					// Click offset (relative to the element)
					this.offset.click.left -
					// Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.relative.left -
					// The offsetParent's offset without borders (offset + border)
					this.offset.parent.left +
					(this.cssPosition === 'fixed'
						? -this.scrollParent.scrollLeft()
						: scrollIsRootNode
						? 0
						: scroll.scrollLeft()),
			};
		},

		_rearrange: function (event, i, a, hardRefresh) {
			if (a) {
				a[0].appendChild(this.placeholder[0]);
			} else {
				i.item[0].parentNode.insertBefore(
					this.placeholder[0],
					this.direction === 'down' ? i.item[0] : i.item[0].nextSibling
				);
			}

			//Various things done here to improve the performance:
			// 1. we create a setTimeout, that calls refreshPositions
			// 2. on the instance, we have a counter variable, that get's higher after every append
			// 3. on the local scope, we copy the counter variable, and check in the timeout,
			// if it's still the same
			// 4. this lets only the last addition to the timeout stack through
			this.counter = this.counter ? ++this.counter : 1;
			var counter = this.counter;

			this._delay(function () {
				if (counter === this.counter) {
					//Precompute after each DOM insertion, NOT on mousemove
					this.refreshPositions(!hardRefresh);
				}
			});
		},

		_clear: function (event, noPropagation) {
			this.reverting = false;

			// We delay all events that have to be triggered to after the point where the placeholder
			// has been removed and everything else normalized again
			var i,
				delayedTriggers = [];

			// We first have to update the dom position of the actual currentItem
			// Note: don't do it if the current item is already removed (by a user), or it gets
			// reappended (see #4088)
			if (!this._noFinalSort && this.currentItem.parent().length) {
				this.placeholder.before(this.currentItem);
			}
			this._noFinalSort = null;

			if (this.helper[0] === this.currentItem[0]) {
				for (i in this._storedCSS) {
					if (
						this._storedCSS[i] === 'auto' ||
						this._storedCSS[i] === 'static'
					) {
						this._storedCSS[i] = '';
					}
				}
				this.currentItem.css(this._storedCSS);
				this._removeClass(this.currentItem, 'ui-sortable-helper');
			} else {
				this.currentItem.show();
			}

			if (this.fromOutside && !noPropagation) {
				delayedTriggers.push(function (event) {
					this._trigger('receive', event, this._uiHash(this.fromOutside));
				});
			}
			if (
				(this.fromOutside ||
					this.domPosition.prev !==
						this.currentItem.prev().not('.ui-sortable-helper')[0] ||
					this.domPosition.parent !== this.currentItem.parent()[0]) &&
				!noPropagation
			) {
				// Trigger update callback if the DOM position has changed
				delayedTriggers.push(function (event) {
					this._trigger('update', event, this._uiHash());
				});
			}

			// Check if the items Container has Changed and trigger appropriate
			// events.
			if (this !== this.currentContainer) {
				if (!noPropagation) {
					delayedTriggers.push(function (event) {
						this._trigger('remove', event, this._uiHash());
					});
					delayedTriggers.push(
						function (c) {
							return function (event) {
								c._trigger('receive', event, this._uiHash(this));
							};
						}.call(this, this.currentContainer)
					);
					delayedTriggers.push(
						function (c) {
							return function (event) {
								c._trigger('update', event, this._uiHash(this));
							};
						}.call(this, this.currentContainer)
					);
				}
			}

			//Post events to containers
			function delayEvent(type, instance, container) {
				return function (event) {
					container._trigger(type, event, instance._uiHash(instance));
				};
			}
			for (i = this.containers.length - 1; i >= 0; i--) {
				if (!noPropagation) {
					delayedTriggers.push(
						delayEvent('deactivate', this, this.containers[i])
					);
				}
				if (this.containers[i].containerCache.over) {
					delayedTriggers.push(delayEvent('out', this, this.containers[i]));
					this.containers[i].containerCache.over = 0;
				}
			}

			//Do what was originally in plugins
			if (this.storedCursor) {
				this.document.find('body').css('cursor', this.storedCursor);
				this.storedStylesheet.remove();
			}
			if (this._storedOpacity) {
				this.helper.css('opacity', this._storedOpacity);
			}
			if (this._storedZIndex) {
				this.helper.css(
					'zIndex',
					this._storedZIndex === 'auto' ? '' : this._storedZIndex
				);
			}

			this.dragging = false;

			if (!noPropagation) {
				this._trigger('beforeStop', event, this._uiHash());
			}

			//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,
			// it unbinds ALL events from the original node!
			this.placeholder[0].parentNode.removeChild(this.placeholder[0]);

			if (!this.cancelHelperRemoval) {
				if (this.helper[0] !== this.currentItem[0]) {
					this.helper.remove();
				}
				this.helper = null;
			}

			if (!noPropagation) {
				for (i = 0; i < delayedTriggers.length; i++) {
					// Trigger all delayed events
					delayedTriggers[i].call(this, event);
				}
				this._trigger('stop', event, this._uiHash());
			}

			this.fromOutside = false;
			return !this.cancelHelperRemoval;
		},

		_trigger: function () {
			if ($.Widget.prototype._trigger.apply(this, arguments) === false) {
				this.cancel();
			}
		},

		_uiHash: function (_inst) {
			var inst = _inst || this;
			return {
				helper: inst.helper,
				placeholder: inst.placeholder || $([]),
				position: inst.position,
				originalPosition: inst.originalPosition,
				offset: inst.positionAbs,
				item: inst.currentItem,
				sender: _inst ? _inst.element : null,
			};
		},
	});

	/*!
	 * jQuery UI Accordion 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Accordion
	//>>group: Widgets
	/* eslint-disable max-len */
	//>>description: Displays collapsible content panels for presenting information in a limited amount of space.
	/* eslint-enable max-len */
	//>>docs: http://api.jqueryui.com/accordion/
	//>>demos: http://jqueryui.com/accordion/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/accordion.css
	//>>css.theme: ../../themes/base/theme.css

	var widgetsAccordion = $.widget('ui.accordion', {
		version: '1.13.1',
		options: {
			active: 0,
			animate: {},
			classes: {
				'ui-accordion-header': 'ui-corner-top',
				'ui-accordion-header-collapsed': 'ui-corner-all',
				'ui-accordion-content': 'ui-corner-bottom',
			},
			collapsible: false,
			event: 'click',
			header: function (elem) {
				return elem
					.find('> li > :first-child')
					.add(elem.find('> :not(li)').even());
			},
			heightStyle: 'auto',
			icons: {
				activeHeader: 'ui-icon-triangle-1-s',
				header: 'ui-icon-triangle-1-e',
			},

			// Callbacks
			activate: null,
			beforeActivate: null,
		},

		hideProps: {
			borderTopWidth: 'hide',
			borderBottomWidth: 'hide',
			paddingTop: 'hide',
			paddingBottom: 'hide',
			height: 'hide',
		},

		showProps: {
			borderTopWidth: 'show',
			borderBottomWidth: 'show',
			paddingTop: 'show',
			paddingBottom: 'show',
			height: 'show',
		},

		_create: function () {
			var options = this.options;

			this.prevShow = this.prevHide = $();
			this._addClass('ui-accordion', 'ui-widget ui-helper-reset');
			this.element.attr('role', 'tablist');

			// Don't allow collapsible: false and active: false / null
			if (
				!options.collapsible &&
				(options.active === false || options.active == null)
			) {
				options.active = 0;
			}

			this._processPanels();

			// handle negative values
			if (options.active < 0) {
				options.active += this.headers.length;
			}
			this._refresh();
		},

		_getCreateEventData: function () {
			return {
				header: this.active,
				panel: !this.active.length ? $() : this.active.next(),
			};
		},

		_createIcons: function () {
			var icon,
				children,
				icons = this.options.icons;

			if (icons) {
				icon = $('<span>');
				this._addClass(
					icon,
					'ui-accordion-header-icon',
					'ui-icon ' + icons.header
				);
				icon.prependTo(this.headers);
				children = this.active.children('.ui-accordion-header-icon');
				this._removeClass(children, icons.header)
					._addClass(children, null, icons.activeHeader)
					._addClass(this.headers, 'ui-accordion-icons');
			}
		},

		_destroyIcons: function () {
			this._removeClass(this.headers, 'ui-accordion-icons');
			this.headers.children('.ui-accordion-header-icon').remove();
		},

		_destroy: function () {
			var contents;

			// Clean up main element
			this.element.removeAttr('role');

			// Clean up headers
			this.headers
				.removeAttr('role aria-expanded aria-selected aria-controls tabIndex')
				.removeUniqueId();

			this._destroyIcons();

			// Clean up content panels
			contents = this.headers
				.next()
				.css('display', '')
				.removeAttr('role aria-hidden aria-labelledby')
				.removeUniqueId();

			if (this.options.heightStyle !== 'content') {
				contents.css('height', '');
			}
		},

		_setOption: function (key, value) {
			if (key === 'active') {
				// _activate() will handle invalid values and update this.options
				this._activate(value);
				return;
			}

			if (key === 'event') {
				if (this.options.event) {
					this._off(this.headers, this.options.event);
				}
				this._setupEvents(value);
			}

			this._super(key, value);

			// Setting collapsible: false while collapsed; open first panel
			if (key === 'collapsible' && !value && this.options.active === false) {
				this._activate(0);
			}

			if (key === 'icons') {
				this._destroyIcons();
				if (value) {
					this._createIcons();
				}
			}
		},

		_setOptionDisabled: function (value) {
			this._super(value);

			this.element.attr('aria-disabled', value);

			// Support: IE8 Only
			// #5332 / #6059 - opacity doesn't cascade to positioned elements in IE
			// so we need to add the disabled class to the headers and panels
			this._toggleClass(null, 'ui-state-disabled', !!value);
			this._toggleClass(
				this.headers.add(this.headers.next()),
				null,
				'ui-state-disabled',
				!!value
			);
		},

		_keydown: function (event) {
			if (event.altKey || event.ctrlKey) {
				return;
			}

			var keyCode = $.ui.keyCode,
				length = this.headers.length,
				currentIndex = this.headers.index(event.target),
				toFocus = false;

			switch (event.keyCode) {
				case keyCode.RIGHT:
				case keyCode.DOWN:
					toFocus = this.headers[(currentIndex + 1) % length];
					break;
				case keyCode.LEFT:
				case keyCode.UP:
					toFocus = this.headers[(currentIndex - 1 + length) % length];
					break;
				case keyCode.SPACE:
				case keyCode.ENTER:
					this._eventHandler(event);
					break;
				case keyCode.HOME:
					toFocus = this.headers[0];
					break;
				case keyCode.END:
					toFocus = this.headers[length - 1];
					break;
			}

			if (toFocus) {
				$(event.target).attr('tabIndex', -1);
				$(toFocus).attr('tabIndex', 0);
				$(toFocus).trigger('focus');
				event.preventDefault();
			}
		},

		_panelKeyDown: function (event) {
			if (event.keyCode === $.ui.keyCode.UP && event.ctrlKey) {
				$(event.currentTarget).prev().trigger('focus');
			}
		},

		refresh: function () {
			var options = this.options;
			this._processPanels();

			// Was collapsed or no panel
			if (
				(options.active === false && options.collapsible === true) ||
				!this.headers.length
			) {
				options.active = false;
				this.active = $();

				// active false only when collapsible is true
			} else if (options.active === false) {
				this._activate(0);

				// was active, but active panel is gone
			} else if (
				this.active.length &&
				!$.contains(this.element[0], this.active[0])
			) {
				// all remaining panel are disabled
				if (
					this.headers.length === this.headers.find('.ui-state-disabled').length
				) {
					options.active = false;
					this.active = $();

					// activate previous panel
				} else {
					this._activate(Math.max(0, options.active - 1));
				}

				// was active, active panel still exists
			} else {
				// make sure active index is correct
				options.active = this.headers.index(this.active);
			}

			this._destroyIcons();

			this._refresh();
		},

		_processPanels: function () {
			var prevHeaders = this.headers,
				prevPanels = this.panels;

			if (typeof this.options.header === 'function') {
				this.headers = this.options.header(this.element);
			} else {
				this.headers = this.element.find(this.options.header);
			}
			this._addClass(
				this.headers,
				'ui-accordion-header ui-accordion-header-collapsed',
				'ui-state-default'
			);

			this.panels = this.headers
				.next()
				.filter(':not(.ui-accordion-content-active)')
				.hide();
			this._addClass(
				this.panels,
				'ui-accordion-content',
				'ui-helper-reset ui-widget-content'
			);

			// Avoid memory leaks (#10056)
			if (prevPanels) {
				this._off(prevHeaders.not(this.headers));
				this._off(prevPanels.not(this.panels));
			}
		},

		_refresh: function () {
			var maxHeight,
				options = this.options,
				heightStyle = options.heightStyle,
				parent = this.element.parent();

			this.active = this._findActive(options.active);
			this._addClass(
				this.active,
				'ui-accordion-header-active',
				'ui-state-active'
			)._removeClass(this.active, 'ui-accordion-header-collapsed');
			this._addClass(this.active.next(), 'ui-accordion-content-active');
			this.active.next().show();

			this.headers
				.attr('role', 'tab')
				.each(function () {
					var header = $(this),
						headerId = header.uniqueId().attr('id'),
						panel = header.next(),
						panelId = panel.uniqueId().attr('id');
					header.attr('aria-controls', panelId);
					panel.attr('aria-labelledby', headerId);
				})
				.next()
				.attr('role', 'tabpanel');

			this.headers
				.not(this.active)
				.attr({
					'aria-selected': 'false',
					'aria-expanded': 'false',
					tabIndex: -1,
				})
				.next()
				.attr({
					'aria-hidden': 'true',
				})
				.hide();

			// Make sure at least one header is in the tab order
			if (!this.active.length) {
				this.headers.eq(0).attr('tabIndex', 0);
			} else {
				this.active
					.attr({
						'aria-selected': 'true',
						'aria-expanded': 'true',
						tabIndex: 0,
					})
					.next()
					.attr({
						'aria-hidden': 'false',
					});
			}

			this._createIcons();

			this._setupEvents(options.event);

			if (heightStyle === 'fill') {
				maxHeight = parent.height();
				this.element.siblings(':visible').each(function () {
					var elem = $(this),
						position = elem.css('position');

					if (position === 'absolute' || position === 'fixed') {
						return;
					}
					maxHeight -= elem.outerHeight(true);
				});

				this.headers.each(function () {
					maxHeight -= $(this).outerHeight(true);
				});

				this.headers
					.next()
					.each(function () {
						$(this).height(
							Math.max(0, maxHeight - $(this).innerHeight() + $(this).height())
						);
					})
					.css('overflow', 'auto');
			} else if (heightStyle === 'auto') {
				maxHeight = 0;
				this.headers
					.next()
					.each(function () {
						var isVisible = $(this).is(':visible');
						if (!isVisible) {
							$(this).show();
						}
						maxHeight = Math.max(maxHeight, $(this).css('height', '').height());
						if (!isVisible) {
							$(this).hide();
						}
					})
					.height(maxHeight);
			}
		},

		_activate: function (index) {
			var active = this._findActive(index)[0];

			// Trying to activate the already active panel
			if (active === this.active[0]) {
				return;
			}

			// Trying to collapse, simulate a click on the currently active header
			active = active || this.active[0];

			this._eventHandler({
				target: active,
				currentTarget: active,
				preventDefault: $.noop,
			});
		},

		_findActive: function (selector) {
			return typeof selector === 'number' ? this.headers.eq(selector) : $();
		},

		_setupEvents: function (event) {
			var events = {
				keydown: '_keydown',
			};
			if (event) {
				$.each(event.split(' '), function (index, eventName) {
					events[eventName] = '_eventHandler';
				});
			}

			this._off(this.headers.add(this.headers.next()));
			this._on(this.headers, events);
			this._on(this.headers.next(), { keydown: '_panelKeyDown' });
			this._hoverable(this.headers);
			this._focusable(this.headers);
		},

		_eventHandler: function (event) {
			var activeChildren,
				clickedChildren,
				options = this.options,
				active = this.active,
				clicked = $(event.currentTarget),
				clickedIsActive = clicked[0] === active[0],
				collapsing = clickedIsActive && options.collapsible,
				toShow = collapsing ? $() : clicked.next(),
				toHide = active.next(),
				eventData = {
					oldHeader: active,
					oldPanel: toHide,
					newHeader: collapsing ? $() : clicked,
					newPanel: toShow,
				};

			event.preventDefault();

			if (
				// click on active header, but not collapsible
				(clickedIsActive && !options.collapsible) ||
				// allow canceling activation
				this._trigger('beforeActivate', event, eventData) === false
			) {
				return;
			}

			options.active = collapsing ? false : this.headers.index(clicked);

			// When the call to ._toggle() comes after the class changes
			// it causes a very odd bug in IE 8 (see #6720)
			this.active = clickedIsActive ? $() : clicked;
			this._toggle(eventData);

			// Switch classes
			// corner classes on the previously active header stay after the animation
			this._removeClass(
				active,
				'ui-accordion-header-active',
				'ui-state-active'
			);
			if (options.icons) {
				activeChildren = active.children('.ui-accordion-header-icon');
				this._removeClass(
					activeChildren,
					null,
					options.icons.activeHeader
				)._addClass(activeChildren, null, options.icons.header);
			}

			if (!clickedIsActive) {
				this._removeClass(clicked, 'ui-accordion-header-collapsed')._addClass(
					clicked,
					'ui-accordion-header-active',
					'ui-state-active'
				);
				if (options.icons) {
					clickedChildren = clicked.children('.ui-accordion-header-icon');
					this._removeClass(
						clickedChildren,
						null,
						options.icons.header
					)._addClass(clickedChildren, null, options.icons.activeHeader);
				}

				this._addClass(clicked.next(), 'ui-accordion-content-active');
			}
		},

		_toggle: function (data) {
			var toShow = data.newPanel,
				toHide = this.prevShow.length ? this.prevShow : data.oldPanel;

			// Handle activating a panel during the animation for another activation
			this.prevShow.add(this.prevHide).stop(true, true);
			this.prevShow = toShow;
			this.prevHide = toHide;

			if (this.options.animate) {
				this._animate(toShow, toHide, data);
			} else {
				toHide.hide();
				toShow.show();
				this._toggleComplete(data);
			}

			toHide.attr({
				'aria-hidden': 'true',
			});
			toHide.prev().attr({
				'aria-selected': 'false',
				'aria-expanded': 'false',
			});

			// if we're switching panels, remove the old header from the tab order
			// if we're opening from collapsed state, remove the previous header from the tab order
			// if we're collapsing, then keep the collapsing header in the tab order
			if (toShow.length && toHide.length) {
				toHide.prev().attr({
					tabIndex: -1,
					'aria-expanded': 'false',
				});
			} else if (toShow.length) {
				this.headers
					.filter(function () {
						return parseInt($(this).attr('tabIndex'), 10) === 0;
					})
					.attr('tabIndex', -1);
			}

			toShow.attr('aria-hidden', 'false').prev().attr({
				'aria-selected': 'true',
				'aria-expanded': 'true',
				tabIndex: 0,
			});
		},

		_animate: function (toShow, toHide, data) {
			var total,
				easing,
				duration,
				that = this,
				adjust = 0,
				boxSizing = toShow.css('box-sizing'),
				down =
					toShow.length && (!toHide.length || toShow.index() < toHide.index()),
				animate = this.options.animate || {},
				options = (down && animate.down) || animate,
				complete = function () {
					that._toggleComplete(data);
				};

			if (typeof options === 'number') {
				duration = options;
			}
			if (typeof options === 'string') {
				easing = options;
			}

			// fall back from options to animation in case of partial down settings
			easing = easing || options.easing || animate.easing;
			duration = duration || options.duration || animate.duration;

			if (!toHide.length) {
				return toShow.animate(this.showProps, duration, easing, complete);
			}
			if (!toShow.length) {
				return toHide.animate(this.hideProps, duration, easing, complete);
			}

			total = toShow.show().outerHeight();
			toHide.animate(this.hideProps, {
				duration: duration,
				easing: easing,
				step: function (now, fx) {
					fx.now = Math.round(now);
				},
			});
			toShow.hide().animate(this.showProps, {
				duration: duration,
				easing: easing,
				complete: complete,
				step: function (now, fx) {
					fx.now = Math.round(now);
					if (fx.prop !== 'height') {
						if (boxSizing === 'content-box') {
							adjust += fx.now;
						}
					} else if (that.options.heightStyle !== 'content') {
						fx.now = Math.round(total - toHide.outerHeight() - adjust);
						adjust = 0;
					}
				},
			});
		},

		_toggleComplete: function (data) {
			var toHide = data.oldPanel,
				prev = toHide.prev();

			this._removeClass(toHide, 'ui-accordion-content-active');
			this._removeClass(prev, 'ui-accordion-header-active')._addClass(
				prev,
				'ui-accordion-header-collapsed'
			);

			// Work around for rendering bug in IE (#5421)
			if (toHide.length) {
				toHide.parent()[0].className = toHide.parent()[0].className;
			}
			this._trigger('activate', null, data);
		},
	});

	/*!
	 * jQuery UI Menu 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Menu
	//>>group: Widgets
	//>>description: Creates nestable menus.
	//>>docs: http://api.jqueryui.com/menu/
	//>>demos: http://jqueryui.com/menu/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/menu.css
	//>>css.theme: ../../themes/base/theme.css

	var widgetsMenu = $.widget('ui.menu', {
		version: '1.13.1',
		defaultElement: '<ul>',
		delay: 300,
		options: {
			icons: {
				submenu: 'ui-icon-caret-1-e',
			},
			items: '> *',
			menus: 'ul',
			position: {
				my: 'left top',
				at: 'right top',
			},
			role: 'menu',

			// Callbacks
			blur: null,
			focus: null,
			select: null,
		},

		_create: function () {
			this.activeMenu = this.element;

			// Flag used to prevent firing of the click handler
			// as the event bubbles up through nested menus
			this.mouseHandled = false;
			this.lastMousePosition = { x: null, y: null };
			this.element.uniqueId().attr({
				role: this.options.role,
				tabIndex: 0,
			});

			this._addClass('ui-menu', 'ui-widget ui-widget-content');
			this._on({
				// Prevent focus from sticking to links inside menu after clicking
				// them (focus should always stay on UL during navigation).
				'mousedown .ui-menu-item': function (event) {
					event.preventDefault();

					this._activateItem(event);
				},
				'click .ui-menu-item': function (event) {
					var target = $(event.target);
					var active = $($.ui.safeActiveElement(this.document[0]));
					if (!this.mouseHandled && target.not('.ui-state-disabled').length) {
						this.select(event);

						// Only set the mouseHandled flag if the event will bubble, see #9469.
						if (!event.isPropagationStopped()) {
							this.mouseHandled = true;
						}

						// Open submenu on click
						if (target.has('.ui-menu').length) {
							this.expand(event);
						} else if (
							!this.element.is(':focus') &&
							active.closest('.ui-menu').length
						) {
							// Redirect focus to the menu
							this.element.trigger('focus', [true]);

							// If the active item is on the top level, let it stay active.
							// Otherwise, blur the active item since it is no longer visible.
							if (this.active && this.active.parents('.ui-menu').length === 1) {
								clearTimeout(this.timer);
							}
						}
					}
				},
				'mouseenter .ui-menu-item': '_activateItem',
				'mousemove .ui-menu-item': '_activateItem',
				mouseleave: 'collapseAll',
				'mouseleave .ui-menu': 'collapseAll',
				focus: function (event, keepActiveItem) {
					// If there's already an active item, keep it active
					// If not, activate the first item
					var item = this.active || this._menuItems().first();

					if (!keepActiveItem) {
						this.focus(event, item);
					}
				},
				blur: function (event) {
					this._delay(function () {
						var notContained = !$.contains(
							this.element[0],
							$.ui.safeActiveElement(this.document[0])
						);
						if (notContained) {
							this.collapseAll(event);
						}
					});
				},
				keydown: '_keydown',
			});

			this.refresh();

			// Clicks outside of a menu collapse any open menus
			this._on(this.document, {
				click: function (event) {
					if (this._closeOnDocumentClick(event)) {
						this.collapseAll(event, true);
					}

					// Reset the mouseHandled flag
					this.mouseHandled = false;
				},
			});
		},

		_activateItem: function (event) {
			// Ignore mouse events while typeahead is active, see #10458.
			// Prevents focusing the wrong item when typeahead causes a scroll while the mouse
			// is over an item in the menu
			if (this.previousFilter) {
				return;
			}

			// If the mouse didn't actually move, but the page was scrolled, ignore the event (#9356)
			if (
				event.clientX === this.lastMousePosition.x &&
				event.clientY === this.lastMousePosition.y
			) {
				return;
			}

			this.lastMousePosition = {
				x: event.clientX,
				y: event.clientY,
			};

			var actualTarget = $(event.target).closest('.ui-menu-item'),
				target = $(event.currentTarget);

			// Ignore bubbled events on parent items, see #11641
			if (actualTarget[0] !== target[0]) {
				return;
			}

			// If the item is already active, there's nothing to do
			if (target.is('.ui-state-active')) {
				return;
			}

			// Remove ui-state-active class from siblings of the newly focused menu item
			// to avoid a jump caused by adjacent elements both having a class with a border
			this._removeClass(
				target.siblings().children('.ui-state-active'),
				null,
				'ui-state-active'
			);
			this.focus(event, target);
		},

		_destroy: function () {
			var items = this.element
					.find('.ui-menu-item')
					.removeAttr('role aria-disabled'),
				submenus = items
					.children('.ui-menu-item-wrapper')
					.removeUniqueId()
					.removeAttr('tabIndex role aria-haspopup');

			// Destroy (sub)menus
			this.element
				.removeAttr('aria-activedescendant')
				.find('.ui-menu')
				.addBack()
				.removeAttr(
					'role aria-labelledby aria-expanded aria-hidden aria-disabled ' +
						'tabIndex'
				)
				.removeUniqueId()
				.show();

			submenus.children().each(function () {
				var elem = $(this);
				if (elem.data('ui-menu-submenu-caret')) {
					elem.remove();
				}
			});
		},

		_keydown: function (event) {
			var match,
				prev,
				character,
				skip,
				preventDefault = true;

			switch (event.keyCode) {
				case $.ui.keyCode.PAGE_UP:
					this.previousPage(event);
					break;
				case $.ui.keyCode.PAGE_DOWN:
					this.nextPage(event);
					break;
				case $.ui.keyCode.HOME:
					this._move('first', 'first', event);
					break;
				case $.ui.keyCode.END:
					this._move('last', 'last', event);
					break;
				case $.ui.keyCode.UP:
					this.previous(event);
					break;
				case $.ui.keyCode.DOWN:
					this.next(event);
					break;
				case $.ui.keyCode.LEFT:
					this.collapse(event);
					break;
				case $.ui.keyCode.RIGHT:
					if (this.active && !this.active.is('.ui-state-disabled')) {
						this.expand(event);
					}
					break;
				case $.ui.keyCode.ENTER:
				case $.ui.keyCode.SPACE:
					this._activate(event);
					break;
				case $.ui.keyCode.ESCAPE:
					this.collapse(event);
					break;
				default:
					preventDefault = false;
					prev = this.previousFilter || '';
					skip = false;

					// Support number pad values
					character =
						event.keyCode >= 96 && event.keyCode <= 105
							? (event.keyCode - 96).toString()
							: String.fromCharCode(event.keyCode);

					clearTimeout(this.filterTimer);

					if (character === prev) {
						skip = true;
					} else {
						character = prev + character;
					}

					match = this._filterMenuItems(character);
					match =
						skip && match.index(this.active.next()) !== -1
							? this.active.nextAll('.ui-menu-item')
							: match;

					// If no matches on the current filter, reset to the last character pressed
					// to move down the menu to the first item that starts with that character
					if (!match.length) {
						character = String.fromCharCode(event.keyCode);
						match = this._filterMenuItems(character);
					}

					if (match.length) {
						this.focus(event, match);
						this.previousFilter = character;
						this.filterTimer = this._delay(function () {
							delete this.previousFilter;
						}, 1000);
					} else {
						delete this.previousFilter;
					}
			}

			if (preventDefault) {
				event.preventDefault();
			}
		},

		_activate: function (event) {
			if (this.active && !this.active.is('.ui-state-disabled')) {
				if (this.active.children("[aria-haspopup='true']").length) {
					this.expand(event);
				} else {
					this.select(event);
				}
			}
		},

		refresh: function () {
			var menus,
				items,
				newSubmenus,
				newItems,
				newWrappers,
				that = this,
				icon = this.options.icons.submenu,
				submenus = this.element.find(this.options.menus);

			this._toggleClass(
				'ui-menu-icons',
				null,
				!!this.element.find('.ui-icon').length
			);

			// Initialize nested menus
			newSubmenus = submenus
				.filter(':not(.ui-menu)')
				.hide()
				.attr({
					role: this.options.role,
					'aria-hidden': 'true',
					'aria-expanded': 'false',
				})
				.each(function () {
					var menu = $(this),
						item = menu.prev(),
						submenuCaret = $('<span>').data('ui-menu-submenu-caret', true);

					that._addClass(submenuCaret, 'ui-menu-icon', 'ui-icon ' + icon);
					item.attr('aria-haspopup', 'true').prepend(submenuCaret);
					menu.attr('aria-labelledby', item.attr('id'));
				});

			this._addClass(
				newSubmenus,
				'ui-menu',
				'ui-widget ui-widget-content ui-front'
			);

			menus = submenus.add(this.element);
			items = menus.find(this.options.items);

			// Initialize menu-items containing spaces and/or dashes only as dividers
			items.not('.ui-menu-item').each(function () {
				var item = $(this);
				if (that._isDivider(item)) {
					that._addClass(item, 'ui-menu-divider', 'ui-widget-content');
				}
			});

			// Don't refresh list items that are already adapted
			newItems = items.not('.ui-menu-item, .ui-menu-divider');
			newWrappers = newItems.children().not('.ui-menu').uniqueId().attr({
				tabIndex: -1,
				role: this._itemRole(),
			});
			this._addClass(newItems, 'ui-menu-item')._addClass(
				newWrappers,
				'ui-menu-item-wrapper'
			);

			// Add aria-disabled attribute to any disabled menu item
			items.filter('.ui-state-disabled').attr('aria-disabled', 'true');

			// If the active item has been removed, blur the menu
			if (this.active && !$.contains(this.element[0], this.active[0])) {
				this.blur();
			}
		},

		_itemRole: function () {
			return {
				menu: 'menuitem',
				listbox: 'option',
			}[this.options.role];
		},

		_setOption: function (key, value) {
			if (key === 'icons') {
				var icons = this.element.find('.ui-menu-icon');
				this._removeClass(icons, null, this.options.icons.submenu)._addClass(
					icons,
					null,
					value.submenu
				);
			}
			this._super(key, value);
		},

		_setOptionDisabled: function (value) {
			this._super(value);

			this.element.attr('aria-disabled', String(value));
			this._toggleClass(null, 'ui-state-disabled', !!value);
		},

		focus: function (event, item) {
			var nested, focused, activeParent;
			this.blur(event, event && event.type === 'focus');

			this._scrollIntoView(item);

			this.active = item.first();

			focused = this.active.children('.ui-menu-item-wrapper');
			this._addClass(focused, null, 'ui-state-active');

			// Only update aria-activedescendant if there's a role
			// otherwise we assume focus is managed elsewhere
			if (this.options.role) {
				this.element.attr('aria-activedescendant', focused.attr('id'));
			}

			// Highlight active parent menu item, if any
			activeParent = this.active
				.parent()
				.closest('.ui-menu-item')
				.children('.ui-menu-item-wrapper');
			this._addClass(activeParent, null, 'ui-state-active');

			if (event && event.type === 'keydown') {
				this._close();
			} else {
				this.timer = this._delay(function () {
					this._close();
				}, this.delay);
			}

			nested = item.children('.ui-menu');
			if (nested.length && event && /^mouse/.test(event.type)) {
				this._startOpening(nested);
			}
			this.activeMenu = item.parent();

			this._trigger('focus', event, { item: item });
		},

		_scrollIntoView: function (item) {
			var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
			if (this._hasScroll()) {
				borderTop =
					parseFloat($.css(this.activeMenu[0], 'borderTopWidth')) || 0;
				paddingTop = parseFloat($.css(this.activeMenu[0], 'paddingTop')) || 0;
				offset =
					item.offset().top -
					this.activeMenu.offset().top -
					borderTop -
					paddingTop;
				scroll = this.activeMenu.scrollTop();
				elementHeight = this.activeMenu.height();
				itemHeight = item.outerHeight();

				if (offset < 0) {
					this.activeMenu.scrollTop(scroll + offset);
				} else if (offset + itemHeight > elementHeight) {
					this.activeMenu.scrollTop(
						scroll + offset - elementHeight + itemHeight
					);
				}
			}
		},

		blur: function (event, fromFocus) {
			if (!fromFocus) {
				clearTimeout(this.timer);
			}

			if (!this.active) {
				return;
			}

			this._removeClass(
				this.active.children('.ui-menu-item-wrapper'),
				null,
				'ui-state-active'
			);

			this._trigger('blur', event, { item: this.active });
			this.active = null;
		},

		_startOpening: function (submenu) {
			clearTimeout(this.timer);

			// Don't open if already open fixes a Firefox bug that caused a .5 pixel
			// shift in the submenu position when mousing over the caret icon
			if (submenu.attr('aria-hidden') !== 'true') {
				return;
			}

			this.timer = this._delay(function () {
				this._close();
				this._open(submenu);
			}, this.delay);
		},

		_open: function (submenu) {
			var position = $.extend(
				{
					of: this.active,
				},
				this.options.position
			);

			clearTimeout(this.timer);
			this.element
				.find('.ui-menu')
				.not(submenu.parents('.ui-menu'))
				.hide()
				.attr('aria-hidden', 'true');

			submenu
				.show()
				.removeAttr('aria-hidden')
				.attr('aria-expanded', 'true')
				.position(position);
		},

		collapseAll: function (event, all) {
			clearTimeout(this.timer);
			this.timer = this._delay(
				function () {
					// If we were passed an event, look for the submenu that contains the event
					var currentMenu = all
						? this.element
						: $(event && event.target).closest(this.element.find('.ui-menu'));

					// If we found no valid submenu ancestor, use the main menu to close all
					// sub menus anyway
					if (!currentMenu.length) {
						currentMenu = this.element;
					}

					this._close(currentMenu);

					this.blur(event);

					// Work around active item staying active after menu is blurred
					this._removeClass(
						currentMenu.find('.ui-state-active'),
						null,
						'ui-state-active'
					);

					this.activeMenu = currentMenu;
				},
				all ? 0 : this.delay
			);
		},

		// With no arguments, closes the currently active menu - if nothing is active
		// it closes all menus.  If passed an argument, it will search for menus BELOW
		_close: function (startMenu) {
			if (!startMenu) {
				startMenu = this.active ? this.active.parent() : this.element;
			}

			startMenu
				.find('.ui-menu')
				.hide()
				.attr('aria-hidden', 'true')
				.attr('aria-expanded', 'false');
		},

		_closeOnDocumentClick: function (event) {
			return !$(event.target).closest('.ui-menu').length;
		},

		_isDivider: function (item) {
			// Match hyphen, em dash, en dash
			return !/[^\-\u2014\u2013\s]/.test(item.text());
		},

		collapse: function (event) {
			var newItem =
				this.active &&
				this.active.parent().closest('.ui-menu-item', this.element);
			if (newItem && newItem.length) {
				this._close();
				this.focus(event, newItem);
			}
		},

		expand: function (event) {
			var newItem =
				this.active &&
				this._menuItems(this.active.children('.ui-menu')).first();

			if (newItem && newItem.length) {
				this._open(newItem.parent());

				// Delay so Firefox will not hide activedescendant change in expanding submenu from AT
				this._delay(function () {
					this.focus(event, newItem);
				});
			}
		},

		next: function (event) {
			this._move('next', 'first', event);
		},

		previous: function (event) {
			this._move('prev', 'last', event);
		},

		isFirstItem: function () {
			return this.active && !this.active.prevAll('.ui-menu-item').length;
		},

		isLastItem: function () {
			return this.active && !this.active.nextAll('.ui-menu-item').length;
		},

		_menuItems: function (menu) {
			return (menu || this.element)
				.find(this.options.items)
				.filter('.ui-menu-item');
		},

		_move: function (direction, filter, event) {
			var next;
			if (this.active) {
				if (direction === 'first' || direction === 'last') {
					next =
						this.active[direction === 'first' ? 'prevAll' : 'nextAll'](
							'.ui-menu-item'
						).last();
				} else {
					next = this.active[direction + 'All']('.ui-menu-item').first();
				}
			}
			if (!next || !next.length || !this.active) {
				next = this._menuItems(this.activeMenu)[filter]();
			}

			this.focus(event, next);
		},

		nextPage: function (event) {
			var item, base, height;

			if (!this.active) {
				this.next(event);
				return;
			}
			if (this.isLastItem()) {
				return;
			}
			if (this._hasScroll()) {
				base = this.active.offset().top;
				height = this.element.innerHeight();

				// jQuery 3.2 doesn't include scrollbars in innerHeight, add it back.
				if ($.fn.jquery.indexOf('3.2.') === 0) {
					height += this.element[0].offsetHeight - this.element.outerHeight();
				}

				this.active.nextAll('.ui-menu-item').each(function () {
					item = $(this);
					return item.offset().top - base - height < 0;
				});

				this.focus(event, item);
			} else {
				this.focus(
					event,
					this._menuItems(this.activeMenu)[!this.active ? 'first' : 'last']()
				);
			}
		},

		previousPage: function (event) {
			var item, base, height;
			if (!this.active) {
				this.next(event);
				return;
			}
			if (this.isFirstItem()) {
				return;
			}
			if (this._hasScroll()) {
				base = this.active.offset().top;
				height = this.element.innerHeight();

				// jQuery 3.2 doesn't include scrollbars in innerHeight, add it back.
				if ($.fn.jquery.indexOf('3.2.') === 0) {
					height += this.element[0].offsetHeight - this.element.outerHeight();
				}

				this.active.prevAll('.ui-menu-item').each(function () {
					item = $(this);
					return item.offset().top - base + height > 0;
				});

				this.focus(event, item);
			} else {
				this.focus(event, this._menuItems(this.activeMenu).first());
			}
		},

		_hasScroll: function () {
			return this.element.outerHeight() < this.element.prop('scrollHeight');
		},

		select: function (event) {
			// TODO: It should never be possible to not have an active item at this
			// point, but the tests don't trigger mouseenter before click.
			this.active = this.active || $(event.target).closest('.ui-menu-item');
			var ui = { item: this.active };
			if (!this.active.has('.ui-menu').length) {
				this.collapseAll(event, true);
			}
			this._trigger('select', event, ui);
		},

		_filterMenuItems: function (character) {
			var escapedCharacter = character.replace(
					/[\-\[\]{}()*+?.,\\\^$|#\s]/g,
					'\\$&'
				),
				regex = new RegExp('^' + escapedCharacter, 'i');

			return (
				this.activeMenu
					.find(this.options.items)

					// Only match on items, not dividers or other content (#10571)
					.filter('.ui-menu-item')
					.filter(function () {
						return regex.test(
							String.prototype.trim.call(
								$(this).children('.ui-menu-item-wrapper').text()
							)
						);
					})
			);
		},
	});

	/*!
	 * jQuery UI Autocomplete 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Autocomplete
	//>>group: Widgets
	//>>description: Lists suggested words as the user is typing.
	//>>docs: http://api.jqueryui.com/autocomplete/
	//>>demos: http://jqueryui.com/autocomplete/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/autocomplete.css
	//>>css.theme: ../../themes/base/theme.css

	$.widget('ui.autocomplete', {
		version: '1.13.1',
		defaultElement: '<input>',
		options: {
			appendTo: null,
			autoFocus: false,
			delay: 300,
			minLength: 1,
			position: {
				my: 'left top',
				at: 'left bottom',
				collision: 'none',
			},
			source: null,

			// Callbacks
			change: null,
			close: null,
			focus: null,
			open: null,
			response: null,
			search: null,
			select: null,
		},

		requestIndex: 0,
		pending: 0,
		liveRegionTimer: null,

		_create: function () {
			// Some browsers only repeat keydown events, not keypress events,
			// so we use the suppressKeyPress flag to determine if we've already
			// handled the keydown event. #7269
			// Unfortunately the code for & in keypress is the same as the up arrow,
			// so we use the suppressKeyPressRepeat flag to avoid handling keypress
			// events when we know the keydown event was used to modify the
			// search term. #7799
			var suppressKeyPress,
				suppressKeyPressRepeat,
				suppressInput,
				nodeName = this.element[0].nodeName.toLowerCase(),
				isTextarea = nodeName === 'textarea',
				isInput = nodeName === 'input';

			// Textareas are always multi-line
			// Inputs are always single-line, even if inside a contentEditable element
			// IE also treats inputs as contentEditable
			// All other element types are determined by whether or not they're contentEditable
			this.isMultiLine =
				isTextarea || (!isInput && this._isContentEditable(this.element));

			this.valueMethod = this.element[isTextarea || isInput ? 'val' : 'text'];
			this.isNewMenu = true;

			this._addClass('ui-autocomplete-input');
			this.element.attr('autocomplete', 'off');

			this._on(this.element, {
				keydown: function (event) {
					if (this.element.prop('readOnly')) {
						suppressKeyPress = true;
						suppressInput = true;
						suppressKeyPressRepeat = true;
						return;
					}

					suppressKeyPress = false;
					suppressInput = false;
					suppressKeyPressRepeat = false;
					var keyCode = $.ui.keyCode;
					switch (event.keyCode) {
						case keyCode.PAGE_UP:
							suppressKeyPress = true;
							this._move('previousPage', event);
							break;
						case keyCode.PAGE_DOWN:
							suppressKeyPress = true;
							this._move('nextPage', event);
							break;
						case keyCode.UP:
							suppressKeyPress = true;
							this._keyEvent('previous', event);
							break;
						case keyCode.DOWN:
							suppressKeyPress = true;
							this._keyEvent('next', event);
							break;
						case keyCode.ENTER:
							// when menu is open and has focus
							if (this.menu.active) {
								// #6055 - Opera still allows the keypress to occur
								// which causes forms to submit
								suppressKeyPress = true;
								event.preventDefault();
								this.menu.select(event);
							}
							break;
						case keyCode.TAB:
							if (this.menu.active) {
								this.menu.select(event);
							}
							break;
						case keyCode.ESCAPE:
							if (this.menu.element.is(':visible')) {
								if (!this.isMultiLine) {
									this._value(this.term);
								}
								this.close(event);

								// Different browsers have different default behavior for escape
								// Single press can mean undo or clear
								// Double press in IE means clear the whole form
								event.preventDefault();
							}
							break;
						default:
							suppressKeyPressRepeat = true;

							// search timeout should be triggered before the input value is changed
							this._searchTimeout(event);
							break;
					}
				},
				keypress: function (event) {
					if (suppressKeyPress) {
						suppressKeyPress = false;
						if (!this.isMultiLine || this.menu.element.is(':visible')) {
							event.preventDefault();
						}
						return;
					}
					if (suppressKeyPressRepeat) {
						return;
					}

					// Replicate some key handlers to allow them to repeat in Firefox and Opera
					var keyCode = $.ui.keyCode;
					switch (event.keyCode) {
						case keyCode.PAGE_UP:
							this._move('previousPage', event);
							break;
						case keyCode.PAGE_DOWN:
							this._move('nextPage', event);
							break;
						case keyCode.UP:
							this._keyEvent('previous', event);
							break;
						case keyCode.DOWN:
							this._keyEvent('next', event);
							break;
					}
				},
				input: function (event) {
					if (suppressInput) {
						suppressInput = false;
						event.preventDefault();
						return;
					}
					this._searchTimeout(event);
				},
				focus: function () {
					this.selectedItem = null;
					this.previous = this._value();
				},
				blur: function (event) {
					clearTimeout(this.searching);
					this.close(event);
					this._change(event);
				},
			});

			this._initSource();
			this.menu = $('<ul>')
				.appendTo(this._appendTo())
				.menu({
					// disable ARIA support, the live region takes care of that
					role: null,
				})
				.hide()

				// Support: IE 11 only, Edge <= 14
				// For other browsers, we preventDefault() on the mousedown event
				// to keep the dropdown from taking focus from the input. This doesn't
				// work for IE/Edge, causing problems with selection and scrolling (#9638)
				// Happily, IE and Edge support an "unselectable" attribute that
				// prevents an element from receiving focus, exactly what we want here.
				.attr({
					unselectable: 'on',
				})
				.menu('instance');

			this._addClass(this.menu.element, 'ui-autocomplete', 'ui-front');
			this._on(this.menu.element, {
				mousedown: function (event) {
					// Prevent moving focus out of the text field
					event.preventDefault();
				},
				menufocus: function (event, ui) {
					var label, item;

					// support: Firefox
					// Prevent accidental activation of menu items in Firefox (#7024 #9118)
					if (this.isNewMenu) {
						this.isNewMenu = false;
						if (
							event.originalEvent &&
							/^mouse/.test(event.originalEvent.type)
						) {
							this.menu.blur();

							this.document.one('mousemove', function () {
								$(event.target).trigger(event.originalEvent);
							});

							return;
						}
					}

					item = ui.item.data('ui-autocomplete-item');
					if (false !== this._trigger('focus', event, { item: item })) {
						// use value to match what will end up in the input, if it was a key event
						if (event.originalEvent && /^key/.test(event.originalEvent.type)) {
							this._value(item.value);
						}
					}

					// Announce the value in the liveRegion
					label = ui.item.attr('aria-label') || item.value;
					if (label && String.prototype.trim.call(label).length) {
						clearTimeout(this.liveRegionTimer);
						this.liveRegionTimer = this._delay(function () {
							this.liveRegion.html($('<div>').text(label));
						}, 100);
					}
				},
				menuselect: function (event, ui) {
					var item = ui.item.data('ui-autocomplete-item'),
						previous = this.previous;

					// Only trigger when focus was lost (click on menu)
					if (this.element[0] !== $.ui.safeActiveElement(this.document[0])) {
						this.element.trigger('focus');
						this.previous = previous;

						// #6109 - IE triggers two focus events and the second
						// is asynchronous, so we need to reset the previous
						// term synchronously and asynchronously :-(
						this._delay(function () {
							this.previous = previous;
							this.selectedItem = item;
						});
					}

					if (false !== this._trigger('select', event, { item: item })) {
						this._value(item.value);
					}

					// reset the term after the select event
					// this allows custom select handling to work properly
					this.term = this._value();

					this.close(event);
					this.selectedItem = item;
				},
			});

			this.liveRegion = $('<div>', {
				role: 'status',
				'aria-live': 'assertive',
				'aria-relevant': 'additions',
			}).appendTo(this.document[0].body);

			this._addClass(this.liveRegion, null, 'ui-helper-hidden-accessible');

			// Turning off autocomplete prevents the browser from remembering the
			// value when navigating through history, so we re-enable autocomplete
			// if the page is unloaded before the widget is destroyed. #7790
			this._on(this.window, {
				beforeunload: function () {
					this.element.removeAttr('autocomplete');
				},
			});
		},

		_destroy: function () {
			clearTimeout(this.searching);
			this.element.removeAttr('autocomplete');
			this.menu.element.remove();
			this.liveRegion.remove();
		},

		_setOption: function (key, value) {
			this._super(key, value);
			if (key === 'source') {
				this._initSource();
			}
			if (key === 'appendTo') {
				this.menu.element.appendTo(this._appendTo());
			}
			if (key === 'disabled' && value && this.xhr) {
				this.xhr.abort();
			}
		},

		_isEventTargetInWidget: function (event) {
			var menuElement = this.menu.element[0];

			return (
				event.target === this.element[0] ||
				event.target === menuElement ||
				$.contains(menuElement, event.target)
			);
		},

		_closeOnClickOutside: function (event) {
			if (!this._isEventTargetInWidget(event)) {
				this.close();
			}
		},

		_appendTo: function () {
			var element = this.options.appendTo;

			if (element) {
				element =
					element.jquery || element.nodeType
						? $(element)
						: this.document.find(element).eq(0);
			}

			if (!element || !element[0]) {
				element = this.element.closest('.ui-front, dialog');
			}

			if (!element.length) {
				element = this.document[0].body;
			}

			return element;
		},

		_initSource: function () {
			var array,
				url,
				that = this;
			if (Array.isArray(this.options.source)) {
				array = this.options.source;
				this.source = function (request, response) {
					response($.ui.autocomplete.filter(array, request.term));
				};
			} else if (typeof this.options.source === 'string') {
				url = this.options.source;
				this.source = function (request, response) {
					if (that.xhr) {
						that.xhr.abort();
					}
					that.xhr = $.ajax({
						url: url,
						data: request,
						dataType: 'json',
						success: function (data) {
							response(data);
						},
						error: function () {
							response([]);
						},
					});
				};
			} else {
				this.source = this.options.source;
			}
		},

		_searchTimeout: function (event) {
			clearTimeout(this.searching);
			this.searching = this._delay(function () {
				// Search if the value has changed, or if the user retypes the same value (see #7434)
				var equalValues = this.term === this._value(),
					menuVisible = this.menu.element.is(':visible'),
					modifierKey =
						event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;

				if (!equalValues || (equalValues && !menuVisible && !modifierKey)) {
					this.selectedItem = null;
					this.search(null, event);
				}
			}, this.options.delay);
		},

		search: function (value, event) {
			value = value != null ? value : this._value();

			// Always save the actual value, not the one passed as an argument
			this.term = this._value();

			if (value.length < this.options.minLength) {
				return this.close(event);
			}

			if (this._trigger('search', event) === false) {
				return;
			}

			return this._search(value);
		},

		_search: function (value) {
			this.pending++;
			this._addClass('ui-autocomplete-loading');
			this.cancelSearch = false;

			this.source({ term: value }, this._response());
		},

		_response: function () {
			var index = ++this.requestIndex;

			return function (content) {
				if (index === this.requestIndex) {
					this.__response(content);
				}

				this.pending--;
				if (!this.pending) {
					this._removeClass('ui-autocomplete-loading');
				}
			}.bind(this);
		},

		__response: function (content) {
			if (content) {
				content = this._normalize(content);
			}
			this._trigger('response', null, { content: content });
			if (
				!this.options.disabled &&
				content &&
				content.length &&
				!this.cancelSearch
			) {
				this._suggest(content);
				this._trigger('open');
			} else {
				// use ._close() instead of .close() so we don't cancel future searches
				this._close();
			}
		},

		close: function (event) {
			this.cancelSearch = true;
			this._close(event);
		},

		_close: function (event) {
			// Remove the handler that closes the menu on outside clicks
			this._off(this.document, 'mousedown');

			if (this.menu.element.is(':visible')) {
				this.menu.element.hide();
				this.menu.blur();
				this.isNewMenu = true;
				this._trigger('close', event);
			}
		},

		_change: function (event) {
			if (this.previous !== this._value()) {
				this._trigger('change', event, { item: this.selectedItem });
			}
		},

		_normalize: function (items) {
			// assume all items have the right format when the first item is complete
			if (items.length && items[0].label && items[0].value) {
				return items;
			}
			return $.map(items, function (item) {
				if (typeof item === 'string') {
					return {
						label: item,
						value: item,
					};
				}
				return $.extend({}, item, {
					label: item.label || item.value,
					value: item.value || item.label,
				});
			});
		},

		_suggest: function (items) {
			var ul = this.menu.element.empty();
			this._renderMenu(ul, items);
			this.isNewMenu = true;
			this.menu.refresh();

			// Size and position menu
			ul.show();
			this._resizeMenu();
			ul.position(
				$.extend(
					{
						of: this.element,
					},
					this.options.position
				)
			);

			if (this.options.autoFocus) {
				this.menu.next();
			}

			// Listen for interactions outside of the widget (#6642)
			this._on(this.document, {
				mousedown: '_closeOnClickOutside',
			});
		},

		_resizeMenu: function () {
			var ul = this.menu.element;
			ul.outerWidth(
				Math.max(
					// Firefox wraps long text (possibly a rounding bug)
					// so we add 1px to avoid the wrapping (#7513)
					ul.width('').outerWidth() + 1,
					this.element.outerWidth()
				)
			);
		},

		_renderMenu: function (ul, items) {
			var that = this;
			$.each(items, function (index, item) {
				that._renderItemData(ul, item);
			});
		},

		_renderItemData: function (ul, item) {
			return this._renderItem(ul, item).data('ui-autocomplete-item', item);
		},

		_renderItem: function (ul, item) {
			return $('<li>').append($('<div>').text(item.label)).appendTo(ul);
		},

		_move: function (direction, event) {
			if (!this.menu.element.is(':visible')) {
				this.search(null, event);
				return;
			}
			if (
				(this.menu.isFirstItem() && /^previous/.test(direction)) ||
				(this.menu.isLastItem() && /^next/.test(direction))
			) {
				if (!this.isMultiLine) {
					this._value(this.term);
				}

				this.menu.blur();
				return;
			}
			this.menu[direction](event);
		},

		widget: function () {
			return this.menu.element;
		},

		_value: function () {
			return this.valueMethod.apply(this.element, arguments);
		},

		_keyEvent: function (keyEvent, event) {
			if (!this.isMultiLine || this.menu.element.is(':visible')) {
				this._move(keyEvent, event);

				// Prevents moving cursor to beginning/end of the text field in some browsers
				event.preventDefault();
			}
		},

		// Support: Chrome <=50
		// We should be able to just use this.element.prop( "isContentEditable" )
		// but hidden elements always report false in Chrome.
		// https://code.google.com/p/chromium/issues/detail?id=313082
		_isContentEditable: function (element) {
			if (!element.length) {
				return false;
			}

			var editable = element.prop('contentEditable');

			if (editable === 'inherit') {
				return this._isContentEditable(element.parent());
			}

			return editable === 'true';
		},
	});

	$.extend($.ui.autocomplete, {
		escapeRegex: function (value) {
			return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
		},
		filter: function (array, term) {
			var matcher = new RegExp($.ui.autocomplete.escapeRegex(term), 'i');
			return $.grep(array, function (value) {
				return matcher.test(value.label || value.value || value);
			});
		},
	});

	// Live region extension, adding a `messages` option
	// NOTE: This is an experimental API. We are still investigating
	// a full solution for string manipulation and internationalization.
	$.widget('ui.autocomplete', $.ui.autocomplete, {
		options: {
			messages: {
				noResults: 'No search results.',
				results: function (amount) {
					return (
						amount +
						(amount > 1 ? ' results are' : ' result is') +
						' available, use up and down arrow keys to navigate.'
					);
				},
			},
		},

		__response: function (content) {
			var message;
			this._superApply(arguments);
			if (this.options.disabled || this.cancelSearch) {
				return;
			}
			if (content && content.length) {
				message = this.options.messages.results(content.length);
			} else {
				message = this.options.messages.noResults;
			}
			clearTimeout(this.liveRegionTimer);
			this.liveRegionTimer = this._delay(function () {
				this.liveRegion.html($('<div>').text(message));
			}, 100);
		},
	});

	var widgetsAutocomplete = $.ui.autocomplete;

	/*!
	 * jQuery UI Controlgroup 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Controlgroup
	//>>group: Widgets
	//>>description: Visually groups form control widgets
	//>>docs: http://api.jqueryui.com/controlgroup/
	//>>demos: http://jqueryui.com/controlgroup/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/controlgroup.css
	//>>css.theme: ../../themes/base/theme.css

	var controlgroupCornerRegex = /ui-corner-([a-z]){2,6}/g;

	var widgetsControlgroup = $.widget('ui.controlgroup', {
		version: '1.13.1',
		defaultElement: '<div>',
		options: {
			direction: 'horizontal',
			disabled: null,
			onlyVisible: true,
			items: {
				button:
					'input[type=button], input[type=submit], input[type=reset], button, a',
				controlgroupLabel: '.ui-controlgroup-label',
				checkboxradio: "input[type='checkbox'], input[type='radio']",
				selectmenu: 'select',
				spinner: '.ui-spinner-input',
			},
		},

		_create: function () {
			this._enhance();
		},

		// To support the enhanced option in jQuery Mobile, we isolate DOM manipulation
		_enhance: function () {
			this.element.attr('role', 'toolbar');
			this.refresh();
		},

		_destroy: function () {
			this._callChildMethod('destroy');
			this.childWidgets.removeData('ui-controlgroup-data');
			this.element.removeAttr('role');
			if (this.options.items.controlgroupLabel) {
				this.element
					.find(this.options.items.controlgroupLabel)
					.find('.ui-controlgroup-label-contents')
					.contents()
					.unwrap();
			}
		},

		_initWidgets: function () {
			var that = this,
				childWidgets = [];

			// First we iterate over each of the items options
			$.each(this.options.items, function (widget, selector) {
				var labels;
				var options = {};

				// Make sure the widget has a selector set
				if (!selector) {
					return;
				}

				if (widget === 'controlgroupLabel') {
					labels = that.element.find(selector);
					labels.each(function () {
						var element = $(this);

						if (element.children('.ui-controlgroup-label-contents').length) {
							return;
						}
						element
							.contents()
							.wrapAll("<span class='ui-controlgroup-label-contents'></span>");
					});
					that._addClass(
						labels,
						null,
						'ui-widget ui-widget-content ui-state-default'
					);
					childWidgets = childWidgets.concat(labels.get());
					return;
				}

				// Make sure the widget actually exists
				if (!$.fn[widget]) {
					return;
				}

				// We assume everything is in the middle to start because we can't determine
				// first / last elements until all enhancments are done.
				if (that['_' + widget + 'Options']) {
					options = that['_' + widget + 'Options']('middle');
				} else {
					options = { classes: {} };
				}

				// Find instances of this widget inside controlgroup and init them
				that.element.find(selector).each(function () {
					var element = $(this);
					var instance = element[widget]('instance');

					// We need to clone the default options for this type of widget to avoid
					// polluting the variable options which has a wider scope than a single widget.
					var instanceOptions = $.widget.extend({}, options);

					// If the button is the child of a spinner ignore it
					// TODO: Find a more generic solution
					if (widget === 'button' && element.parent('.ui-spinner').length) {
						return;
					}

					// Create the widget if it doesn't exist
					if (!instance) {
						instance = element[widget]()[widget]('instance');
					}
					if (instance) {
						instanceOptions.classes = that._resolveClassesValues(
							instanceOptions.classes,
							instance
						);
					}
					element[widget](instanceOptions);

					// Store an instance of the controlgroup to be able to reference
					// from the outermost element for changing options and refresh
					var widgetElement = element[widget]('widget');
					$.data(
						widgetElement[0],
						'ui-controlgroup-data',
						instance ? instance : element[widget]('instance')
					);

					childWidgets.push(widgetElement[0]);
				});
			});

			this.childWidgets = $($.uniqueSort(childWidgets));
			this._addClass(this.childWidgets, 'ui-controlgroup-item');
		},

		_callChildMethod: function (method) {
			this.childWidgets.each(function () {
				var element = $(this),
					data = element.data('ui-controlgroup-data');
				if (data && data[method]) {
					data[method]();
				}
			});
		},

		_updateCornerClass: function (element, position) {
			var remove =
				'ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all';
			var add = this._buildSimpleOptions(position, 'label').classes.label;

			this._removeClass(element, null, remove);
			this._addClass(element, null, add);
		},

		_buildSimpleOptions: function (position, key) {
			var direction = this.options.direction === 'vertical';
			var result = {
				classes: {},
			};
			result.classes[key] = {
				middle: '',
				first: 'ui-corner-' + (direction ? 'top' : 'left'),
				last: 'ui-corner-' + (direction ? 'bottom' : 'right'),
				only: 'ui-corner-all',
			}[position];

			return result;
		},

		_spinnerOptions: function (position) {
			var options = this._buildSimpleOptions(position, 'ui-spinner');

			options.classes['ui-spinner-up'] = '';
			options.classes['ui-spinner-down'] = '';

			return options;
		},

		_buttonOptions: function (position) {
			return this._buildSimpleOptions(position, 'ui-button');
		},

		_checkboxradioOptions: function (position) {
			return this._buildSimpleOptions(position, 'ui-checkboxradio-label');
		},

		_selectmenuOptions: function (position) {
			var direction = this.options.direction === 'vertical';
			return {
				width: direction ? 'auto' : false,
				classes: {
					middle: {
						'ui-selectmenu-button-open': '',
						'ui-selectmenu-button-closed': '',
					},
					first: {
						'ui-selectmenu-button-open':
							'ui-corner-' + (direction ? 'top' : 'tl'),
						'ui-selectmenu-button-closed':
							'ui-corner-' + (direction ? 'top' : 'left'),
					},
					last: {
						'ui-selectmenu-button-open': direction ? '' : 'ui-corner-tr',
						'ui-selectmenu-button-closed':
							'ui-corner-' + (direction ? 'bottom' : 'right'),
					},
					only: {
						'ui-selectmenu-button-open': 'ui-corner-top',
						'ui-selectmenu-button-closed': 'ui-corner-all',
					},
				}[position],
			};
		},

		_resolveClassesValues: function (classes, instance) {
			var result = {};
			$.each(classes, function (key) {
				var current = instance.options.classes[key] || '';
				current = String.prototype.trim.call(
					current.replace(controlgroupCornerRegex, '')
				);
				result[key] = (current + ' ' + classes[key]).replace(/\s+/g, ' ');
			});
			return result;
		},

		_setOption: function (key, value) {
			if (key === 'direction') {
				this._removeClass('ui-controlgroup-' + this.options.direction);
			}

			this._super(key, value);
			if (key === 'disabled') {
				this._callChildMethod(value ? 'disable' : 'enable');
				return;
			}

			this.refresh();
		},

		refresh: function () {
			var children,
				that = this;

			this._addClass(
				'ui-controlgroup ui-controlgroup-' + this.options.direction
			);

			if (this.options.direction === 'horizontal') {
				this._addClass(null, 'ui-helper-clearfix');
			}
			this._initWidgets();

			children = this.childWidgets;

			// We filter here because we need to track all childWidgets not just the visible ones
			if (this.options.onlyVisible) {
				children = children.filter(':visible');
			}

			if (children.length) {
				// We do this last because we need to make sure all enhancment is done
				// before determining first and last
				$.each(['first', 'last'], function (index, value) {
					var instance = children[value]().data('ui-controlgroup-data');

					if (instance && that['_' + instance.widgetName + 'Options']) {
						var options = that['_' + instance.widgetName + 'Options'](
							children.length === 1 ? 'only' : value
						);
						options.classes = that._resolveClassesValues(
							options.classes,
							instance
						);
						instance.element[instance.widgetName](options);
					} else {
						that._updateCornerClass(children[value](), value);
					}
				});

				// Finally call the refresh method on each of the child widgets.
				this._callChildMethod('refresh');
			}
		},
	});

	/*!
	 * jQuery UI Checkboxradio 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Checkboxradio
	//>>group: Widgets
	//>>description: Enhances a form with multiple themeable checkboxes or radio buttons.
	//>>docs: http://api.jqueryui.com/checkboxradio/
	//>>demos: http://jqueryui.com/checkboxradio/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/button.css
	//>>css.structure: ../../themes/base/checkboxradio.css
	//>>css.theme: ../../themes/base/theme.css

	$.widget('ui.checkboxradio', [
		$.ui.formResetMixin,
		{
			version: '1.13.1',
			options: {
				disabled: null,
				label: null,
				icon: true,
				classes: {
					'ui-checkboxradio-label': 'ui-corner-all',
					'ui-checkboxradio-icon': 'ui-corner-all',
				},
			},

			_getCreateOptions: function () {
				var disabled, labels;
				var that = this;
				var options = this._super() || {};

				// We read the type here, because it makes more sense to throw a element type error first,
				// rather then the error for lack of a label. Often if its the wrong type, it
				// won't have a label (e.g. calling on a div, btn, etc)
				this._readType();

				labels = this.element.labels();

				// If there are multiple labels, use the last one
				this.label = $(labels[labels.length - 1]);
				if (!this.label.length) {
					$.error('No label found for checkboxradio widget');
				}

				this.originalLabel = '';

				// We need to get the label text but this may also need to make sure it does not contain the
				// input itself.
				this.label
					.contents()
					.not(this.element[0])
					.each(function () {
						// The label contents could be text, html, or a mix. We concat each element to get a
						// string representation of the label, without the input as part of it.
						that.originalLabel +=
							this.nodeType === 3 ? $(this).text() : this.outerHTML;
					});

				// Set the label option if we found label text
				if (this.originalLabel) {
					options.label = this.originalLabel;
				}

				disabled = this.element[0].disabled;
				if (disabled != null) {
					options.disabled = disabled;
				}
				return options;
			},

			_create: function () {
				var checked = this.element[0].checked;

				this._bindFormResetHandler();

				if (this.options.disabled == null) {
					this.options.disabled = this.element[0].disabled;
				}

				this._setOption('disabled', this.options.disabled);
				this._addClass('ui-checkboxradio', 'ui-helper-hidden-accessible');
				this._addClass(
					this.label,
					'ui-checkboxradio-label',
					'ui-button ui-widget'
				);

				if (this.type === 'radio') {
					this._addClass(this.label, 'ui-checkboxradio-radio-label');
				}

				if (this.options.label && this.options.label !== this.originalLabel) {
					this._updateLabel();
				} else if (this.originalLabel) {
					this.options.label = this.originalLabel;
				}

				this._enhance();

				if (checked) {
					this._addClass(
						this.label,
						'ui-checkboxradio-checked',
						'ui-state-active'
					);
				}

				this._on({
					change: '_toggleClasses',
					focus: function () {
						this._addClass(this.label, null, 'ui-state-focus ui-visual-focus');
					},
					blur: function () {
						this._removeClass(
							this.label,
							null,
							'ui-state-focus ui-visual-focus'
						);
					},
				});
			},

			_readType: function () {
				var nodeName = this.element[0].nodeName.toLowerCase();
				this.type = this.element[0].type;
				if (nodeName !== 'input' || !/radio|checkbox/.test(this.type)) {
					$.error(
						"Can't create checkboxradio on element.nodeName=" +
							nodeName +
							' and element.type=' +
							this.type
					);
				}
			},

			// Support jQuery Mobile enhanced option
			_enhance: function () {
				this._updateIcon(this.element[0].checked);
			},

			widget: function () {
				return this.label;
			},

			_getRadioGroup: function () {
				var group;
				var name = this.element[0].name;
				var nameSelector = "input[name='" + $.escapeSelector(name) + "']";

				if (!name) {
					return $([]);
				}

				if (this.form.length) {
					group = $(this.form[0].elements).filter(nameSelector);
				} else {
					// Not inside a form, check all inputs that also are not inside a form
					group = $(nameSelector).filter(function () {
						return $(this)._form().length === 0;
					});
				}

				return group.not(this.element);
			},

			_toggleClasses: function () {
				var checked = this.element[0].checked;
				this._toggleClass(
					this.label,
					'ui-checkboxradio-checked',
					'ui-state-active',
					checked
				);

				if (this.options.icon && this.type === 'checkbox') {
					this._toggleClass(
						this.icon,
						null,
						'ui-icon-check ui-state-checked',
						checked
					)._toggleClass(this.icon, null, 'ui-icon-blank', !checked);
				}

				if (this.type === 'radio') {
					this._getRadioGroup().each(function () {
						var instance = $(this).checkboxradio('instance');

						if (instance) {
							instance._removeClass(
								instance.label,
								'ui-checkboxradio-checked',
								'ui-state-active'
							);
						}
					});
				}
			},

			_destroy: function () {
				this._unbindFormResetHandler();

				if (this.icon) {
					this.icon.remove();
					this.iconSpace.remove();
				}
			},

			_setOption: function (key, value) {
				// We don't allow the value to be set to nothing
				if (key === 'label' && !value) {
					return;
				}

				this._super(key, value);

				if (key === 'disabled') {
					this._toggleClass(this.label, null, 'ui-state-disabled', value);
					this.element[0].disabled = value;

					// Don't refresh when setting disabled
					return;
				}
				this.refresh();
			},

			_updateIcon: function (checked) {
				var toAdd = 'ui-icon ui-icon-background ';

				if (this.options.icon) {
					if (!this.icon) {
						this.icon = $('<span>');
						this.iconSpace = $('<span> </span>');
						this._addClass(this.iconSpace, 'ui-checkboxradio-icon-space');
					}

					if (this.type === 'checkbox') {
						toAdd += checked
							? 'ui-icon-check ui-state-checked'
							: 'ui-icon-blank';
						this._removeClass(
							this.icon,
							null,
							checked ? 'ui-icon-blank' : 'ui-icon-check'
						);
					} else {
						toAdd += 'ui-icon-blank';
					}
					this._addClass(this.icon, 'ui-checkboxradio-icon', toAdd);
					if (!checked) {
						this._removeClass(
							this.icon,
							null,
							'ui-icon-check ui-state-checked'
						);
					}
					this.icon.prependTo(this.label).after(this.iconSpace);
				} else if (this.icon !== undefined) {
					this.icon.remove();
					this.iconSpace.remove();
					delete this.icon;
				}
			},

			_updateLabel: function () {
				// Remove the contents of the label ( minus the icon, icon space, and input )
				var contents = this.label.contents().not(this.element[0]);
				if (this.icon) {
					contents = contents.not(this.icon[0]);
				}
				if (this.iconSpace) {
					contents = contents.not(this.iconSpace[0]);
				}
				contents.remove();

				this.label.append(this.options.label);
			},

			refresh: function () {
				var checked = this.element[0].checked,
					isDisabled = this.element[0].disabled;

				this._updateIcon(checked);
				this._toggleClass(
					this.label,
					'ui-checkboxradio-checked',
					'ui-state-active',
					checked
				);
				if (this.options.label !== null) {
					this._updateLabel();
				}

				if (isDisabled !== this.options.disabled) {
					this._setOptions({ disabled: isDisabled });
				}
			},
		},
	]);

	var widgetsCheckboxradio = $.ui.checkboxradio;

	/*!
	 * jQuery UI Button 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Button
	//>>group: Widgets
	//>>description: Enhances a form with themeable buttons.
	//>>docs: http://api.jqueryui.com/button/
	//>>demos: http://jqueryui.com/button/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/button.css
	//>>css.theme: ../../themes/base/theme.css

	$.widget('ui.button', {
		version: '1.13.1',
		defaultElement: '<button>',
		options: {
			classes: {
				'ui-button': 'ui-corner-all',
			},
			disabled: null,
			icon: null,
			iconPosition: 'beginning',
			label: null,
			showLabel: true,
		},

		_getCreateOptions: function () {
			var disabled,
				// This is to support cases like in jQuery Mobile where the base widget does have
				// an implementation of _getCreateOptions
				options = this._super() || {};

			this.isInput = this.element.is('input');

			disabled = this.element[0].disabled;
			if (disabled != null) {
				options.disabled = disabled;
			}

			this.originalLabel = this.isInput
				? this.element.val()
				: this.element.html();
			if (this.originalLabel) {
				options.label = this.originalLabel;
			}

			return options;
		},

		_create: function () {
			if (!this.option.showLabel & !this.options.icon) {
				this.options.showLabel = true;
			}

			// We have to check the option again here even though we did in _getCreateOptions,
			// because null may have been passed on init which would override what was set in
			// _getCreateOptions
			if (this.options.disabled == null) {
				this.options.disabled = this.element[0].disabled || false;
			}

			this.hasTitle = !!this.element.attr('title');

			// Check to see if the label needs to be set or if its already correct
			if (this.options.label && this.options.label !== this.originalLabel) {
				if (this.isInput) {
					this.element.val(this.options.label);
				} else {
					this.element.html(this.options.label);
				}
			}
			this._addClass('ui-button', 'ui-widget');
			this._setOption('disabled', this.options.disabled);
			this._enhance();

			if (this.element.is('a')) {
				this._on({
					keyup: function (event) {
						if (event.keyCode === $.ui.keyCode.SPACE) {
							event.preventDefault();

							// Support: PhantomJS <= 1.9, IE 8 Only
							// If a native click is available use it so we actually cause navigation
							// otherwise just trigger a click event
							if (this.element[0].click) {
								this.element[0].click();
							} else {
								this.element.trigger('click');
							}
						}
					},
				});
			}
		},

		_enhance: function () {
			if (!this.element.is('button')) {
				this.element.attr('role', 'button');
			}

			if (this.options.icon) {
				this._updateIcon('icon', this.options.icon);
				this._updateTooltip();
			}
		},

		_updateTooltip: function () {
			this.title = this.element.attr('title');

			if (!this.options.showLabel && !this.title) {
				this.element.attr('title', this.options.label);
			}
		},

		_updateIcon: function (option, value) {
			var icon = option !== 'iconPosition',
				position = icon ? this.options.iconPosition : value,
				displayBlock = position === 'top' || position === 'bottom';

			// Create icon
			if (!this.icon) {
				this.icon = $('<span>');

				this._addClass(this.icon, 'ui-button-icon', 'ui-icon');

				if (!this.options.showLabel) {
					this._addClass('ui-button-icon-only');
				}
			} else if (icon) {
				// If we are updating the icon remove the old icon class
				this._removeClass(this.icon, null, this.options.icon);
			}

			// If we are updating the icon add the new icon class
			if (icon) {
				this._addClass(this.icon, null, value);
			}

			this._attachIcon(position);

			// If the icon is on top or bottom we need to add the ui-widget-icon-block class and remove
			// the iconSpace if there is one.
			if (displayBlock) {
				this._addClass(this.icon, null, 'ui-widget-icon-block');
				if (this.iconSpace) {
					this.iconSpace.remove();
				}
			} else {
				// Position is beginning or end so remove the ui-widget-icon-block class and add the
				// space if it does not exist
				if (!this.iconSpace) {
					this.iconSpace = $('<span> </span>');
					this._addClass(this.iconSpace, 'ui-button-icon-space');
				}
				this._removeClass(this.icon, null, 'ui-wiget-icon-block');
				this._attachIconSpace(position);
			}
		},

		_destroy: function () {
			this.element.removeAttr('role');

			if (this.icon) {
				this.icon.remove();
			}
			if (this.iconSpace) {
				this.iconSpace.remove();
			}
			if (!this.hasTitle) {
				this.element.removeAttr('title');
			}
		},

		_attachIconSpace: function (iconPosition) {
			this.icon[/^(?:end|bottom)/.test(iconPosition) ? 'before' : 'after'](
				this.iconSpace
			);
		},

		_attachIcon: function (iconPosition) {
			this.element[/^(?:end|bottom)/.test(iconPosition) ? 'append' : 'prepend'](
				this.icon
			);
		},

		_setOptions: function (options) {
			var newShowLabel =
					options.showLabel === undefined
						? this.options.showLabel
						: options.showLabel,
				newIcon = options.icon === undefined ? this.options.icon : options.icon;

			if (!newShowLabel && !newIcon) {
				options.showLabel = true;
			}
			this._super(options);
		},

		_setOption: function (key, value) {
			if (key === 'icon') {
				if (value) {
					this._updateIcon(key, value);
				} else if (this.icon) {
					this.icon.remove();
					if (this.iconSpace) {
						this.iconSpace.remove();
					}
				}
			}

			if (key === 'iconPosition') {
				this._updateIcon(key, value);
			}

			// Make sure we can't end up with a button that has neither text nor icon
			if (key === 'showLabel') {
				this._toggleClass('ui-button-icon-only', null, !value);
				this._updateTooltip();
			}

			if (key === 'label') {
				if (this.isInput) {
					this.element.val(value);
				} else {
					// If there is an icon, append it, else nothing then append the value
					// this avoids removal of the icon when setting label text
					this.element.html(value);
					if (this.icon) {
						this._attachIcon(this.options.iconPosition);
						this._attachIconSpace(this.options.iconPosition);
					}
				}
			}

			this._super(key, value);

			if (key === 'disabled') {
				this._toggleClass(null, 'ui-state-disabled', value);
				this.element[0].disabled = value;
				if (value) {
					this.element.trigger('blur');
				}
			}
		},

		refresh: function () {
			// Make sure to only check disabled if its an element that supports this otherwise
			// check for the disabled class to determine state
			var isDisabled = this.element.is('input, button')
				? this.element[0].disabled
				: this.element.hasClass('ui-button-disabled');

			if (isDisabled !== this.options.disabled) {
				this._setOptions({ disabled: isDisabled });
			}

			this._updateTooltip();
		},
	});

	// DEPRECATED
	if ($.uiBackCompat !== false) {
		// Text and Icons options
		$.widget('ui.button', $.ui.button, {
			options: {
				text: true,
				icons: {
					primary: null,
					secondary: null,
				},
			},

			_create: function () {
				if (this.options.showLabel && !this.options.text) {
					this.options.showLabel = this.options.text;
				}
				if (!this.options.showLabel && this.options.text) {
					this.options.text = this.options.showLabel;
				}
				if (
					!this.options.icon &&
					(this.options.icons.primary || this.options.icons.secondary)
				) {
					if (this.options.icons.primary) {
						this.options.icon = this.options.icons.primary;
					} else {
						this.options.icon = this.options.icons.secondary;
						this.options.iconPosition = 'end';
					}
				} else if (this.options.icon) {
					this.options.icons.primary = this.options.icon;
				}
				this._super();
			},

			_setOption: function (key, value) {
				if (key === 'text') {
					this._super('showLabel', value);
					return;
				}
				if (key === 'showLabel') {
					this.options.text = value;
				}
				if (key === 'icon') {
					this.options.icons.primary = value;
				}
				if (key === 'icons') {
					if (value.primary) {
						this._super('icon', value.primary);
						this._super('iconPosition', 'beginning');
					} else if (value.secondary) {
						this._super('icon', value.secondary);
						this._super('iconPosition', 'end');
					}
				}
				this._superApply(arguments);
			},
		});

		$.fn.button = (function (orig) {
			return function (options) {
				var isMethodCall = typeof options === 'string';
				var args = Array.prototype.slice.call(arguments, 1);
				var returnValue = this;

				if (isMethodCall) {
					// If this is an empty collection, we need to have the instance method
					// return undefined instead of the jQuery instance
					if (!this.length && options === 'instance') {
						returnValue = undefined;
					} else {
						this.each(function () {
							var methodValue;
							var type = $(this).attr('type');
							var name =
								type !== 'checkbox' && type !== 'radio'
									? 'button'
									: 'checkboxradio';
							var instance = $.data(this, 'ui-' + name);

							if (options === 'instance') {
								returnValue = instance;
								return false;
							}

							if (!instance) {
								return $.error(
									'cannot call methods on button' +
										' prior to initialization; ' +
										"attempted to call method '" +
										options +
										"'"
								);
							}

							if (
								typeof instance[options] !== 'function' ||
								options.charAt(0) === '_'
							) {
								return $.error(
									"no such method '" +
										options +
										"' for button" +
										' widget instance'
								);
							}

							methodValue = instance[options].apply(instance, args);

							if (methodValue !== instance && methodValue !== undefined) {
								returnValue =
									methodValue && methodValue.jquery
										? returnValue.pushStack(methodValue.get())
										: methodValue;
								return false;
							}
						});
					}
				} else {
					// Allow multiple hashes to be passed on init
					if (args.length) {
						options = $.widget.extend.apply(null, [options].concat(args));
					}

					this.each(function () {
						var type = $(this).attr('type');
						var name =
							type !== 'checkbox' && type !== 'radio'
								? 'button'
								: 'checkboxradio';
						var instance = $.data(this, 'ui-' + name);

						if (instance) {
							instance.option(options || {});
							if (instance._init) {
								instance._init();
							}
						} else {
							if (name === 'button') {
								orig.call($(this), options);
								return;
							}

							$(this).checkboxradio($.extend({ icon: false }, options));
						}
					});
				}

				return returnValue;
			};
		})($.fn.button);

		$.fn.buttonset = function () {
			if (!$.ui.controlgroup) {
				$.error('Controlgroup widget missing');
			}
			if (
				arguments[0] === 'option' &&
				arguments[1] === 'items' &&
				arguments[2]
			) {
				return this.controlgroup.apply(this, [
					arguments[0],
					'items.button',
					arguments[2],
				]);
			}
			if (arguments[0] === 'option' && arguments[1] === 'items') {
				return this.controlgroup.apply(this, [arguments[0], 'items.button']);
			}
			if (typeof arguments[0] === 'object' && arguments[0].items) {
				arguments[0].items = {
					button: arguments[0].items,
				};
			}
			return this.controlgroup.apply(this, arguments);
		};
	}

	var widgetsButton = $.ui.button;

	/* eslint-disable max-len, camelcase */
	/*!
	 * jQuery UI Datepicker 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Datepicker
	//>>group: Widgets
	//>>description: Displays a calendar from an input or inline for selecting dates.
	//>>docs: http://api.jqueryui.com/datepicker/
	//>>demos: http://jqueryui.com/datepicker/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/datepicker.css
	//>>css.theme: ../../themes/base/theme.css

	$.extend($.ui, { datepicker: { version: '1.13.1' } });

	var datepicker_instActive;

	function datepicker_getZindex(elem) {
		var position, value;
		while (elem.length && elem[0] !== document) {
			// Ignore z-index if position is set to a value where z-index is ignored by the browser
			// This makes behavior of this function consistent across browsers
			// WebKit always returns auto if the element is positioned
			position = elem.css('position');
			if (
				position === 'absolute' ||
				position === 'relative' ||
				position === 'fixed'
			) {
				// IE returns 0 when zIndex is not specified
				// other browsers return a string
				// we ignore the case of nested elements with an explicit value of 0
				// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
				value = parseInt(elem.css('zIndex'), 10);
				if (!isNaN(value) && value !== 0) {
					return value;
				}
			}
			elem = elem.parent();
		}

		return 0;
	}

	/* Date picker manager.
   Use the singleton instance of this class, $.datepicker, to interact with the date picker.
   Settings for (groups of) date pickers are maintained in an instance object,
   allowing multiple different settings on the same page. */

	function Datepicker() {
		this._curInst = null; // The current instance in use
		this._keyEvent = false; // If the last event was a key event
		this._disabledInputs = []; // List of date picker inputs that have been disabled
		this._datepickerShowing = false; // True if the popup picker is showing , false if not
		this._inDialog = false; // True if showing within a "dialog", false if not
		this._mainDivId = 'ui-datepicker-div'; // The ID of the main datepicker division
		this._inlineClass = 'ui-datepicker-inline'; // The name of the inline marker class
		this._appendClass = 'ui-datepicker-append'; // The name of the append marker class
		this._triggerClass = 'ui-datepicker-trigger'; // The name of the trigger marker class
		this._dialogClass = 'ui-datepicker-dialog'; // The name of the dialog marker class
		this._disableClass = 'ui-datepicker-disabled'; // The name of the disabled covering marker class
		this._unselectableClass = 'ui-datepicker-unselectable'; // The name of the unselectable cell marker class
		this._currentClass = 'ui-datepicker-current-day'; // The name of the current day marker class
		this._dayOverClass = 'ui-datepicker-days-cell-over'; // The name of the day hover marker class
		this.regional = []; // Available regional settings, indexed by language code
		this.regional[''] = {
			// Default regional settings
			closeText: 'Done', // Display text for close link
			prevText: 'Prev', // Display text for previous month link
			nextText: 'Next', // Display text for next month link
			currentText: 'Today', // Display text for current month link
			monthNames: [
				'January',
				'February',
				'March',
				'April',
				'May',
				'June',
				'July',
				'August',
				'September',
				'October',
				'November',
				'December',
			], // Names of months for drop-down and formatting
			monthNamesShort: [
				'Jan',
				'Feb',
				'Mar',
				'Apr',
				'May',
				'Jun',
				'Jul',
				'Aug',
				'Sep',
				'Oct',
				'Nov',
				'Dec',
			], // For formatting
			dayNames: [
				'Sunday',
				'Monday',
				'Tuesday',
				'Wednesday',
				'Thursday',
				'Friday',
				'Saturday',
			], // For formatting
			dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'], // For formatting
			dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'], // Column headings for days starting at Sunday
			weekHeader: 'Wk', // Column header for week of the year
			dateFormat: 'mm/dd/yy', // See format options on parseDate
			firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
			isRTL: false, // True if right-to-left language, false if left-to-right
			showMonthAfterYear: false, // True if the year select precedes month, false for month then year
			yearSuffix: '', // Additional text to append to the year in the month headers,
			selectMonthLabel: 'Select month', // Invisible label for month selector
			selectYearLabel: 'Select year', // Invisible label for year selector
		};
		this._defaults = {
			// Global defaults for all the date picker instances
			showOn: 'focus', // "focus" for popup on focus,
			// "button" for trigger button, or "both" for either
			showAnim: 'fadeIn', // Name of jQuery animation for popup
			showOptions: {}, // Options for enhanced animations
			defaultDate: null, // Used when field is blank: actual date,
			// +/-number for offset from today, null for today
			appendText: '', // Display text following the input box, e.g. showing the format
			buttonText: '...', // Text for trigger button
			buttonImage: '', // URL for trigger button image
			buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
			hideIfNoPrevNext: false, // True to hide next/previous month links
			// if not applicable, false to just disable them
			navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
			gotoCurrent: false, // True if today link goes back to current selection instead
			changeMonth: false, // True if month can be selected directly, false if only prev/next
			changeYear: false, // True if year can be selected directly, false if only prev/next
			yearRange: 'c-10:c+10', // Range of years to display in drop-down,
			// either relative to today's year (-nn:+nn), relative to currently displayed year
			// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
			showOtherMonths: false, // True to show dates in other months, false to leave blank
			selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
			showWeek: false, // True to show week of the year, false to not show it
			calculateWeek: this.iso8601Week, // How to calculate the week of the year,
			// takes a Date and returns the number of the week for it
			shortYearCutoff: '+10', // Short year values < this are in the current century,
			// > this are in the previous century,
			// string value starting with "+" for current year + value
			minDate: null, // The earliest selectable date, or null for no limit
			maxDate: null, // The latest selectable date, or null for no limit
			duration: 'fast', // Duration of display/closure
			beforeShowDay: null, // Function that takes a date and returns an array with
			// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
			// [2] = cell title (optional), e.g. $.datepicker.noWeekends
			beforeShow: null, // Function that takes an input field and
			// returns a set of custom settings for the date picker
			onSelect: null, // Define a callback function when a date is selected
			onChangeMonthYear: null, // Define a callback function when the month or year is changed
			onClose: null, // Define a callback function when the datepicker is closed
			onUpdateDatepicker: null, // Define a callback function when the datepicker is updated
			numberOfMonths: 1, // Number of months to show at a time
			showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
			stepMonths: 1, // Number of months to step back/forward
			stepBigMonths: 12, // Number of months to step back/forward for the big links
			altField: '', // Selector for an alternate field to store selected dates into
			altFormat: '', // The date format to use for the alternate field
			constrainInput: true, // The input is constrained by the current date format
			showButtonPanel: false, // True to show button panel, false to not show it
			autoSize: false, // True to size the input for the date format, false to leave as is
			disabled: false, // The initial disabled state
		};
		$.extend(this._defaults, this.regional['']);
		this.regional.en = $.extend(true, {}, this.regional['']);
		this.regional['en-US'] = $.extend(true, {}, this.regional.en);
		this.dpDiv = datepicker_bindHover(
			$(
				"<div id='" +
					this._mainDivId +
					"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
			)
		);
	}

	$.extend(Datepicker.prototype, {
		/* Class name added to elements to indicate already configured with a date picker. */
		markerClassName: 'hasDatepicker',

		//Keep track of the maximum number of rows displayed (see #7043)
		maxRows: 4,

		// TODO rename to "widget" when switching to widget factory
		_widgetDatepicker: function () {
			return this.dpDiv;
		},

		/* Override the default settings for all instances of the date picker.
		 * @param  settings  object - the new settings to use as defaults (anonymous object)
		 * @return the manager object
		 */
		setDefaults: function (settings) {
			datepicker_extendRemove(this._defaults, settings || {});
			return this;
		},

		/* Attach the date picker to a jQuery selection.
		 * @param  target	element - the target input field or division or span
		 * @param  settings  object - the new settings to use for this date picker instance (anonymous)
		 */
		_attachDatepicker: function (target, settings) {
			var nodeName, inline, inst;
			nodeName = target.nodeName.toLowerCase();
			inline = nodeName === 'div' || nodeName === 'span';
			if (!target.id) {
				this.uuid += 1;
				target.id = 'dp' + this.uuid;
			}
			inst = this._newInst($(target), inline);
			inst.settings = $.extend({}, settings || {});
			if (nodeName === 'input') {
				this._connectDatepicker(target, inst);
			} else if (inline) {
				this._inlineDatepicker(target, inst);
			}
		},

		/* Create a new instance object. */
		_newInst: function (target, inline) {
			var id = target[0].id.replace(/([^A-Za-z0-9_\-])/g, '\\\\$1'); // escape jQuery meta chars
			return {
				id: id,
				input: target, // associated target
				selectedDay: 0,
				selectedMonth: 0,
				selectedYear: 0, // current selection
				drawMonth: 0,
				drawYear: 0, // month being drawn
				inline: inline, // is datepicker inline or not
				dpDiv: !inline
					? this.dpDiv // presentation div
					: datepicker_bindHover(
							$(
								"<div class='" +
									this._inlineClass +
									" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
							)
					  ),
			};
		},

		/* Attach the date picker to an input field. */
		_connectDatepicker: function (target, inst) {
			var input = $(target);
			inst.append = $([]);
			inst.trigger = $([]);
			if (input.hasClass(this.markerClassName)) {
				return;
			}
			this._attachments(input, inst);
			input
				.addClass(this.markerClassName)
				.on('keydown', this._doKeyDown)
				.on('keypress', this._doKeyPress)
				.on('keyup', this._doKeyUp);
			this._autoSize(inst);
			$.data(target, 'datepicker', inst);

			//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
			if (inst.settings.disabled) {
				this._disableDatepicker(target);
			}
		},

		/* Make attachments based on settings. */
		_attachments: function (input, inst) {
			var showOn,
				buttonText,
				buttonImage,
				appendText = this._get(inst, 'appendText'),
				isRTL = this._get(inst, 'isRTL');

			if (inst.append) {
				inst.append.remove();
			}
			if (appendText) {
				inst.append = $('<span>').addClass(this._appendClass).text(appendText);
				input[isRTL ? 'before' : 'after'](inst.append);
			}

			input.off('focus', this._showDatepicker);

			if (inst.trigger) {
				inst.trigger.remove();
			}

			showOn = this._get(inst, 'showOn');
			if (showOn === 'focus' || showOn === 'both') {
				// pop-up date picker when in the marked field
				input.on('focus', this._showDatepicker);
			}
			if (showOn === 'button' || showOn === 'both') {
				// pop-up date picker when button clicked
				buttonText = this._get(inst, 'buttonText');
				buttonImage = this._get(inst, 'buttonImage');

				if (this._get(inst, 'buttonImageOnly')) {
					inst.trigger = $('<img>').addClass(this._triggerClass).attr({
						src: buttonImage,
						alt: buttonText,
						title: buttonText,
					});
				} else {
					inst.trigger = $("<button type='button'>").addClass(
						this._triggerClass
					);
					if (buttonImage) {
						inst.trigger.html(
							$('<img>').attr({
								src: buttonImage,
								alt: buttonText,
								title: buttonText,
							})
						);
					} else {
						inst.trigger.text(buttonText);
					}
				}

				input[isRTL ? 'before' : 'after'](inst.trigger);
				inst.trigger.on('click', function () {
					if (
						$.datepicker._datepickerShowing &&
						$.datepicker._lastInput === input[0]
					) {
						$.datepicker._hideDatepicker();
					} else if (
						$.datepicker._datepickerShowing &&
						$.datepicker._lastInput !== input[0]
					) {
						$.datepicker._hideDatepicker();
						$.datepicker._showDatepicker(input[0]);
					} else {
						$.datepicker._showDatepicker(input[0]);
					}
					return false;
				});
			}
		},

		/* Apply the maximum length for the date format. */
		_autoSize: function (inst) {
			if (this._get(inst, 'autoSize') && !inst.inline) {
				var findMax,
					max,
					maxI,
					i,
					date = new Date(2009, 12 - 1, 20), // Ensure double digits
					dateFormat = this._get(inst, 'dateFormat');

				if (dateFormat.match(/[DM]/)) {
					findMax = function (names) {
						max = 0;
						maxI = 0;
						for (i = 0; i < names.length; i++) {
							if (names[i].length > max) {
								max = names[i].length;
								maxI = i;
							}
						}
						return maxI;
					};
					date.setMonth(
						findMax(
							this._get(
								inst,
								dateFormat.match(/MM/) ? 'monthNames' : 'monthNamesShort'
							)
						)
					);
					date.setDate(
						findMax(
							this._get(
								inst,
								dateFormat.match(/DD/) ? 'dayNames' : 'dayNamesShort'
							)
						) +
							20 -
							date.getDay()
					);
				}
				inst.input.attr('size', this._formatDate(inst, date).length);
			}
		},

		/* Attach an inline date picker to a div. */
		_inlineDatepicker: function (target, inst) {
			var divSpan = $(target);
			if (divSpan.hasClass(this.markerClassName)) {
				return;
			}
			divSpan.addClass(this.markerClassName).append(inst.dpDiv);
			$.data(target, 'datepicker', inst);
			this._setDate(inst, this._getDefaultDate(inst), true);
			this._updateDatepicker(inst);
			this._updateAlternate(inst);

			//If disabled option is true, disable the datepicker before showing it (see ticket #5665)
			if (inst.settings.disabled) {
				this._disableDatepicker(target);
			}

			// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
			// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
			inst.dpDiv.css('display', 'block');
		},

		/* Pop-up the date picker in a "dialog" box.
		 * @param  input element - ignored
		 * @param  date	string or Date - the initial date to display
		 * @param  onSelect  function - the function to call when a date is selected
		 * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
		 * @param  pos int[2] - coordinates for the dialog's position within the screen or
		 *					event - with x/y coordinates or
		 *					leave empty for default (screen centre)
		 * @return the manager object
		 */
		_dialogDatepicker: function (input, date, onSelect, settings, pos) {
			var id,
				browserWidth,
				browserHeight,
				scrollX,
				scrollY,
				inst = this._dialogInst; // internal instance

			if (!inst) {
				this.uuid += 1;
				id = 'dp' + this.uuid;
				this._dialogInput = $(
					"<input type='text' id='" +
						id +
						"' style='position: absolute; top: -100px; width: 0px;'/>"
				);
				this._dialogInput.on('keydown', this._doKeyDown);
				$('body').append(this._dialogInput);
				inst = this._dialogInst = this._newInst(this._dialogInput, false);
				inst.settings = {};
				$.data(this._dialogInput[0], 'datepicker', inst);
			}
			datepicker_extendRemove(inst.settings, settings || {});
			date =
				date && date.constructor === Date ? this._formatDate(inst, date) : date;
			this._dialogInput.val(date);

			this._pos = pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null;
			if (!this._pos) {
				browserWidth = document.documentElement.clientWidth;
				browserHeight = document.documentElement.clientHeight;
				scrollX =
					document.documentElement.scrollLeft || document.body.scrollLeft;
				scrollY = document.documentElement.scrollTop || document.body.scrollTop;
				this._pos =
					// should use actual width/height below
					[browserWidth / 2 - 100 + scrollX, browserHeight / 2 - 150 + scrollY];
			}

			// Move input on screen for focus, but hidden behind dialog
			this._dialogInput
				.css('left', this._pos[0] + 20 + 'px')
				.css('top', this._pos[1] + 'px');
			inst.settings.onSelect = onSelect;
			this._inDialog = true;
			this.dpDiv.addClass(this._dialogClass);
			this._showDatepicker(this._dialogInput[0]);
			if ($.blockUI) {
				$.blockUI(this.dpDiv);
			}
			$.data(this._dialogInput[0], 'datepicker', inst);
			return this;
		},

		/* Detach a datepicker from its control.
		 * @param  target	element - the target input field or division or span
		 */
		_destroyDatepicker: function (target) {
			var nodeName,
				$target = $(target),
				inst = $.data(target, 'datepicker');

			if (!$target.hasClass(this.markerClassName)) {
				return;
			}

			nodeName = target.nodeName.toLowerCase();
			$.removeData(target, 'datepicker');
			if (nodeName === 'input') {
				inst.append.remove();
				inst.trigger.remove();
				$target
					.removeClass(this.markerClassName)
					.off('focus', this._showDatepicker)
					.off('keydown', this._doKeyDown)
					.off('keypress', this._doKeyPress)
					.off('keyup', this._doKeyUp);
			} else if (nodeName === 'div' || nodeName === 'span') {
				$target.removeClass(this.markerClassName).empty();
			}

			if (datepicker_instActive === inst) {
				datepicker_instActive = null;
				this._curInst = null;
			}
		},

		/* Enable the date picker to a jQuery selection.
		 * @param  target	element - the target input field or division or span
		 */
		_enableDatepicker: function (target) {
			var nodeName,
				inline,
				$target = $(target),
				inst = $.data(target, 'datepicker');

			if (!$target.hasClass(this.markerClassName)) {
				return;
			}

			nodeName = target.nodeName.toLowerCase();
			if (nodeName === 'input') {
				target.disabled = false;
				inst.trigger
					.filter('button')
					.each(function () {
						this.disabled = false;
					})
					.end()
					.filter('img')
					.css({ opacity: '1.0', cursor: '' });
			} else if (nodeName === 'div' || nodeName === 'span') {
				inline = $target.children('.' + this._inlineClass);
				inline.children().removeClass('ui-state-disabled');
				inline
					.find('select.ui-datepicker-month, select.ui-datepicker-year')
					.prop('disabled', false);
			}
			this._disabledInputs = $.map(
				this._disabledInputs,

				// Delete entry
				function (value) {
					return value === target ? null : value;
				}
			);
		},

		/* Disable the date picker to a jQuery selection.
		 * @param  target	element - the target input field or division or span
		 */
		_disableDatepicker: function (target) {
			var nodeName,
				inline,
				$target = $(target),
				inst = $.data(target, 'datepicker');

			if (!$target.hasClass(this.markerClassName)) {
				return;
			}

			nodeName = target.nodeName.toLowerCase();
			if (nodeName === 'input') {
				target.disabled = true;
				inst.trigger
					.filter('button')
					.each(function () {
						this.disabled = true;
					})
					.end()
					.filter('img')
					.css({ opacity: '0.5', cursor: 'default' });
			} else if (nodeName === 'div' || nodeName === 'span') {
				inline = $target.children('.' + this._inlineClass);
				inline.children().addClass('ui-state-disabled');
				inline
					.find('select.ui-datepicker-month, select.ui-datepicker-year')
					.prop('disabled', true);
			}
			this._disabledInputs = $.map(
				this._disabledInputs,

				// Delete entry
				function (value) {
					return value === target ? null : value;
				}
			);
			this._disabledInputs[this._disabledInputs.length] = target;
		},

		/* Is the first field in a jQuery collection disabled as a datepicker?
		 * @param  target	element - the target input field or division or span
		 * @return boolean - true if disabled, false if enabled
		 */
		_isDisabledDatepicker: function (target) {
			if (!target) {
				return false;
			}
			for (var i = 0; i < this._disabledInputs.length; i++) {
				if (this._disabledInputs[i] === target) {
					return true;
				}
			}
			return false;
		},

		/* Retrieve the instance data for the target control.
		 * @param  target  element - the target input field or division or span
		 * @return  object - the associated instance data
		 * @throws  error if a jQuery problem getting data
		 */
		_getInst: function (target) {
			try {
				return $.data(target, 'datepicker');
			} catch (err) {
				throw 'Missing instance data for this datepicker';
			}
		},

		/* Update or retrieve the settings for a date picker attached to an input field or division.
		 * @param  target  element - the target input field or division or span
		 * @param  name	object - the new settings to update or
		 *				string - the name of the setting to change or retrieve,
		 *				when retrieving also "all" for all instance settings or
		 *				"defaults" for all global defaults
		 * @param  value   any - the new value for the setting
		 *				(omit if above is an object or to retrieve a value)
		 */
		_optionDatepicker: function (target, name, value) {
			var settings,
				date,
				minDate,
				maxDate,
				inst = this._getInst(target);

			if (arguments.length === 2 && typeof name === 'string') {
				return name === 'defaults'
					? $.extend({}, $.datepicker._defaults)
					: inst
					? name === 'all'
						? $.extend({}, inst.settings)
						: this._get(inst, name)
					: null;
			}

			settings = name || {};
			if (typeof name === 'string') {
				settings = {};
				settings[name] = value;
			}

			if (inst) {
				if (this._curInst === inst) {
					this._hideDatepicker();
				}

				date = this._getDateDatepicker(target, true);
				minDate = this._getMinMaxDate(inst, 'min');
				maxDate = this._getMinMaxDate(inst, 'max');
				datepicker_extendRemove(inst.settings, settings);

				// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
				if (
					minDate !== null &&
					settings.dateFormat !== undefined &&
					settings.minDate === undefined
				) {
					inst.settings.minDate = this._formatDate(inst, minDate);
				}
				if (
					maxDate !== null &&
					settings.dateFormat !== undefined &&
					settings.maxDate === undefined
				) {
					inst.settings.maxDate = this._formatDate(inst, maxDate);
				}
				if ('disabled' in settings) {
					if (settings.disabled) {
						this._disableDatepicker(target);
					} else {
						this._enableDatepicker(target);
					}
				}
				this._attachments($(target), inst);
				this._autoSize(inst);
				this._setDate(inst, date);
				this._updateAlternate(inst);
				this._updateDatepicker(inst);
			}
		},

		// Change method deprecated
		_changeDatepicker: function (target, name, value) {
			this._optionDatepicker(target, name, value);
		},

		/* Redraw the date picker attached to an input field or division.
		 * @param  target  element - the target input field or division or span
		 */
		_refreshDatepicker: function (target) {
			var inst = this._getInst(target);
			if (inst) {
				this._updateDatepicker(inst);
			}
		},

		/* Set the dates for a jQuery selection.
		 * @param  target element - the target input field or division or span
		 * @param  date	Date - the new date
		 */
		_setDateDatepicker: function (target, date) {
			var inst = this._getInst(target);
			if (inst) {
				this._setDate(inst, date);
				this._updateDatepicker(inst);
				this._updateAlternate(inst);
			}
		},

		/* Get the date(s) for the first entry in a jQuery selection.
		 * @param  target element - the target input field or division or span
		 * @param  noDefault boolean - true if no default date is to be used
		 * @return Date - the current date
		 */
		_getDateDatepicker: function (target, noDefault) {
			var inst = this._getInst(target);
			if (inst && !inst.inline) {
				this._setDateFromField(inst, noDefault);
			}
			return inst ? this._getDate(inst) : null;
		},

		/* Handle keystrokes. */
		_doKeyDown: function (event) {
			var onSelect,
				dateStr,
				sel,
				inst = $.datepicker._getInst(event.target),
				handled = true,
				isRTL = inst.dpDiv.is('.ui-datepicker-rtl');

			inst._keyEvent = true;
			if ($.datepicker._datepickerShowing) {
				switch (event.keyCode) {
					case 9:
						$.datepicker._hideDatepicker();
						handled = false;
						break; // hide on tab out
					case 13:
						sel = $(
							'td.' +
								$.datepicker._dayOverClass +
								':not(.' +
								$.datepicker._currentClass +
								')',
							inst.dpDiv
						);
						if (sel[0]) {
							$.datepicker._selectDay(
								event.target,
								inst.selectedMonth,
								inst.selectedYear,
								sel[0]
							);
						}

						onSelect = $.datepicker._get(inst, 'onSelect');
						if (onSelect) {
							dateStr = $.datepicker._formatDate(inst);

							// Trigger custom callback
							onSelect.apply(inst.input ? inst.input[0] : null, [
								dateStr,
								inst,
							]);
						} else {
							$.datepicker._hideDatepicker();
						}

						return false; // don't submit the form
					case 27:
						$.datepicker._hideDatepicker();
						break; // hide on escape
					case 33:
						$.datepicker._adjustDate(
							event.target,
							event.ctrlKey
								? -$.datepicker._get(inst, 'stepBigMonths')
								: -$.datepicker._get(inst, 'stepMonths'),
							'M'
						);
						break; // previous month/year on page up/+ ctrl
					case 34:
						$.datepicker._adjustDate(
							event.target,
							event.ctrlKey
								? +$.datepicker._get(inst, 'stepBigMonths')
								: +$.datepicker._get(inst, 'stepMonths'),
							'M'
						);
						break; // next month/year on page down/+ ctrl
					case 35:
						if (event.ctrlKey || event.metaKey) {
							$.datepicker._clearDate(event.target);
						}
						handled = event.ctrlKey || event.metaKey;
						break; // clear on ctrl or command +end
					case 36:
						if (event.ctrlKey || event.metaKey) {
							$.datepicker._gotoToday(event.target);
						}
						handled = event.ctrlKey || event.metaKey;
						break; // current on ctrl or command +home
					case 37:
						if (event.ctrlKey || event.metaKey) {
							$.datepicker._adjustDate(event.target, isRTL ? +1 : -1, 'D');
						}
						handled = event.ctrlKey || event.metaKey;

						// -1 day on ctrl or command +left
						if (event.originalEvent.altKey) {
							$.datepicker._adjustDate(
								event.target,
								event.ctrlKey
									? -$.datepicker._get(inst, 'stepBigMonths')
									: -$.datepicker._get(inst, 'stepMonths'),
								'M'
							);
						}

						// next month/year on alt +left on Mac
						break;
					case 38:
						if (event.ctrlKey || event.metaKey) {
							$.datepicker._adjustDate(event.target, -7, 'D');
						}
						handled = event.ctrlKey || event.metaKey;
						break; // -1 week on ctrl or command +up
					case 39:
						if (event.ctrlKey || event.metaKey) {
							$.datepicker._adjustDate(event.target, isRTL ? -1 : +1, 'D');
						}
						handled = event.ctrlKey || event.metaKey;

						// +1 day on ctrl or command +right
						if (event.originalEvent.altKey) {
							$.datepicker._adjustDate(
								event.target,
								event.ctrlKey
									? +$.datepicker._get(inst, 'stepBigMonths')
									: +$.datepicker._get(inst, 'stepMonths'),
								'M'
							);
						}

						// next month/year on alt +right
						break;
					case 40:
						if (event.ctrlKey || event.metaKey) {
							$.datepicker._adjustDate(event.target, +7, 'D');
						}
						handled = event.ctrlKey || event.metaKey;
						break; // +1 week on ctrl or command +down
					default:
						handled = false;
				}
			} else if (event.keyCode === 36 && event.ctrlKey) {
				// display the date picker on ctrl+home
				$.datepicker._showDatepicker(this);
			} else {
				handled = false;
			}

			if (handled) {
				event.preventDefault();
				event.stopPropagation();
			}
		},

		/* Filter entered characters - based on date format. */
		_doKeyPress: function (event) {
			var chars,
				chr,
				inst = $.datepicker._getInst(event.target);

			if ($.datepicker._get(inst, 'constrainInput')) {
				chars = $.datepicker._possibleChars(
					$.datepicker._get(inst, 'dateFormat')
				);
				chr = String.fromCharCode(
					event.charCode == null ? event.keyCode : event.charCode
				);
				return (
					event.ctrlKey ||
					event.metaKey ||
					chr < ' ' ||
					!chars ||
					chars.indexOf(chr) > -1
				);
			}
		},

		/* Synchronise manual entry and field/alternate field. */
		_doKeyUp: function (event) {
			var date,
				inst = $.datepicker._getInst(event.target);

			if (inst.input.val() !== inst.lastVal) {
				try {
					date = $.datepicker.parseDate(
						$.datepicker._get(inst, 'dateFormat'),
						inst.input ? inst.input.val() : null,
						$.datepicker._getFormatConfig(inst)
					);

					if (date) {
						// only if valid
						$.datepicker._setDateFromField(inst);
						$.datepicker._updateAlternate(inst);
						$.datepicker._updateDatepicker(inst);
					}
				} catch (err) {}
			}
			return true;
		},

		/* Pop-up the date picker for a given input field.
		 * If false returned from beforeShow event handler do not show.
		 * @param  input  element - the input field attached to the date picker or
		 *					event - if triggered by focus
		 */
		_showDatepicker: function (input) {
			input = input.target || input;
			if (input.nodeName.toLowerCase() !== 'input') {
				// find from button/image trigger
				input = $('input', input.parentNode)[0];
			}

			if (
				$.datepicker._isDisabledDatepicker(input) ||
				$.datepicker._lastInput === input
			) {
				// already here
				return;
			}

			var inst,
				beforeShow,
				beforeShowSettings,
				isFixed,
				offset,
				showAnim,
				duration;

			inst = $.datepicker._getInst(input);
			if ($.datepicker._curInst && $.datepicker._curInst !== inst) {
				$.datepicker._curInst.dpDiv.stop(true, true);
				if (inst && $.datepicker._datepickerShowing) {
					$.datepicker._hideDatepicker($.datepicker._curInst.input[0]);
				}
			}

			beforeShow = $.datepicker._get(inst, 'beforeShow');
			beforeShowSettings = beforeShow
				? beforeShow.apply(input, [input, inst])
				: {};
			if (beforeShowSettings === false) {
				return;
			}
			datepicker_extendRemove(inst.settings, beforeShowSettings);

			inst.lastVal = null;
			$.datepicker._lastInput = input;
			$.datepicker._setDateFromField(inst);

			if ($.datepicker._inDialog) {
				// hide cursor
				input.value = '';
			}
			if (!$.datepicker._pos) {
				// position below input
				$.datepicker._pos = $.datepicker._findPos(input);
				$.datepicker._pos[1] += input.offsetHeight; // add the height
			}

			isFixed = false;
			$(input)
				.parents()
				.each(function () {
					isFixed |= $(this).css('position') === 'fixed';
					return !isFixed;
				});

			offset = { left: $.datepicker._pos[0], top: $.datepicker._pos[1] };
			$.datepicker._pos = null;

			//to avoid flashes on Firefox
			inst.dpDiv.empty();

			// determine sizing offscreen
			inst.dpDiv.css({
				position: 'absolute',
				display: 'block',
				top: '-1000px',
			});
			$.datepicker._updateDatepicker(inst);

			// fix width for dynamic number of date pickers
			// and adjust position before showing
			offset = $.datepicker._checkOffset(inst, offset, isFixed);
			inst.dpDiv.css({
				position:
					$.datepicker._inDialog && $.blockUI
						? 'static'
						: isFixed
						? 'fixed'
						: 'absolute',
				display: 'none',
				left: offset.left + 'px',
				top: offset.top + 'px',
			});

			if (!inst.inline) {
				showAnim = $.datepicker._get(inst, 'showAnim');
				duration = $.datepicker._get(inst, 'duration');
				inst.dpDiv.css('z-index', datepicker_getZindex($(input)) + 1);
				$.datepicker._datepickerShowing = true;

				if ($.effects && $.effects.effect[showAnim]) {
					inst.dpDiv.show(
						showAnim,
						$.datepicker._get(inst, 'showOptions'),
						duration
					);
				} else {
					inst.dpDiv[showAnim || 'show'](showAnim ? duration : null);
				}

				if ($.datepicker._shouldFocusInput(inst)) {
					inst.input.trigger('focus');
				}

				$.datepicker._curInst = inst;
			}
		},

		/* Generate the date picker content. */
		_updateDatepicker: function (inst) {
			this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
			datepicker_instActive = inst; // for delegate hover events
			inst.dpDiv.empty().append(this._generateHTML(inst));
			this._attachHandlers(inst);

			var origyearshtml,
				numMonths = this._getNumberOfMonths(inst),
				cols = numMonths[1],
				width = 17,
				activeCell = inst.dpDiv.find('.' + this._dayOverClass + ' a'),
				onUpdateDatepicker = $.datepicker._get(inst, 'onUpdateDatepicker');

			if (activeCell.length > 0) {
				datepicker_handleMouseover.apply(activeCell.get(0));
			}

			inst.dpDiv
				.removeClass(
					'ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4'
				)
				.width('');
			if (cols > 1) {
				inst.dpDiv
					.addClass('ui-datepicker-multi-' + cols)
					.css('width', width * cols + 'em');
			}
			inst.dpDiv[
				(numMonths[0] !== 1 || numMonths[1] !== 1 ? 'add' : 'remove') + 'Class'
			]('ui-datepicker-multi');
			inst.dpDiv[(this._get(inst, 'isRTL') ? 'add' : 'remove') + 'Class'](
				'ui-datepicker-rtl'
			);

			if (
				inst === $.datepicker._curInst &&
				$.datepicker._datepickerShowing &&
				$.datepicker._shouldFocusInput(inst)
			) {
				inst.input.trigger('focus');
			}

			// Deffered render of the years select (to avoid flashes on Firefox)
			if (inst.yearshtml) {
				origyearshtml = inst.yearshtml;
				setTimeout(function () {
					//assure that inst.yearshtml didn't change.
					if (origyearshtml === inst.yearshtml && inst.yearshtml) {
						inst.dpDiv
							.find('select.ui-datepicker-year')
							.first()
							.replaceWith(inst.yearshtml);
					}
					origyearshtml = inst.yearshtml = null;
				}, 0);
			}

			if (onUpdateDatepicker) {
				onUpdateDatepicker.apply(inst.input ? inst.input[0] : null, [inst]);
			}
		},

		// #6694 - don't focus the input if it's already focused
		// this breaks the change event in IE
		// Support: IE and jQuery <1.9
		_shouldFocusInput: function (inst) {
			return (
				inst.input &&
				inst.input.is(':visible') &&
				!inst.input.is(':disabled') &&
				!inst.input.is(':focus')
			);
		},

		/* Check positioning to remain on screen. */
		_checkOffset: function (inst, offset, isFixed) {
			var dpWidth = inst.dpDiv.outerWidth(),
				dpHeight = inst.dpDiv.outerHeight(),
				inputWidth = inst.input ? inst.input.outerWidth() : 0,
				inputHeight = inst.input ? inst.input.outerHeight() : 0,
				viewWidth =
					document.documentElement.clientWidth +
					(isFixed ? 0 : $(document).scrollLeft()),
				viewHeight =
					document.documentElement.clientHeight +
					(isFixed ? 0 : $(document).scrollTop());

			offset.left -= this._get(inst, 'isRTL') ? dpWidth - inputWidth : 0;
			offset.left -=
				isFixed && offset.left === inst.input.offset().left
					? $(document).scrollLeft()
					: 0;
			offset.top -=
				isFixed && offset.top === inst.input.offset().top + inputHeight
					? $(document).scrollTop()
					: 0;

			// Now check if datepicker is showing outside window viewport - move to a better place if so.
			offset.left -= Math.min(
				offset.left,
				offset.left + dpWidth > viewWidth && viewWidth > dpWidth
					? Math.abs(offset.left + dpWidth - viewWidth)
					: 0
			);
			offset.top -= Math.min(
				offset.top,
				offset.top + dpHeight > viewHeight && viewHeight > dpHeight
					? Math.abs(dpHeight + inputHeight)
					: 0
			);

			return offset;
		},

		/* Find an object's position on the screen. */
		_findPos: function (obj) {
			var position,
				inst = this._getInst(obj),
				isRTL = this._get(inst, 'isRTL');

			while (
				obj &&
				(obj.type === 'hidden' ||
					obj.nodeType !== 1 ||
					$.expr.pseudos.hidden(obj))
			) {
				obj = obj[isRTL ? 'previousSibling' : 'nextSibling'];
			}

			position = $(obj).offset();
			return [position.left, position.top];
		},

		/* Hide the date picker from view.
		 * @param  input  element - the input field attached to the date picker
		 */
		_hideDatepicker: function (input) {
			var showAnim,
				duration,
				postProcess,
				onClose,
				inst = this._curInst;

			if (!inst || (input && inst !== $.data(input, 'datepicker'))) {
				return;
			}

			if (this._datepickerShowing) {
				showAnim = this._get(inst, 'showAnim');
				duration = this._get(inst, 'duration');
				postProcess = function () {
					$.datepicker._tidyDialog(inst);
				};

				// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
				if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {
					inst.dpDiv.hide(
						showAnim,
						$.datepicker._get(inst, 'showOptions'),
						duration,
						postProcess
					);
				} else {
					inst.dpDiv[
						showAnim === 'slideDown'
							? 'slideUp'
							: showAnim === 'fadeIn'
							? 'fadeOut'
							: 'hide'
					](showAnim ? duration : null, postProcess);
				}

				if (!showAnim) {
					postProcess();
				}
				this._datepickerShowing = false;

				onClose = this._get(inst, 'onClose');
				if (onClose) {
					onClose.apply(inst.input ? inst.input[0] : null, [
						inst.input ? inst.input.val() : '',
						inst,
					]);
				}

				this._lastInput = null;
				if (this._inDialog) {
					this._dialogInput.css({
						position: 'absolute',
						left: '0',
						top: '-100px',
					});
					if ($.blockUI) {
						$.unblockUI();
						$('body').append(this.dpDiv);
					}
				}
				this._inDialog = false;
			}
		},

		/* Tidy up after a dialog display. */
		_tidyDialog: function (inst) {
			inst.dpDiv.removeClass(this._dialogClass).off('.ui-datepicker-calendar');
		},

		/* Close date picker if clicked elsewhere. */
		_checkExternalClick: function (event) {
			if (!$.datepicker._curInst) {
				return;
			}

			var $target = $(event.target),
				inst = $.datepicker._getInst($target[0]);

			if (
				($target[0].id !== $.datepicker._mainDivId &&
					$target.parents('#' + $.datepicker._mainDivId).length === 0 &&
					!$target.hasClass($.datepicker.markerClassName) &&
					!$target.closest('.' + $.datepicker._triggerClass).length &&
					$.datepicker._datepickerShowing &&
					!($.datepicker._inDialog && $.blockUI)) ||
				($target.hasClass($.datepicker.markerClassName) &&
					$.datepicker._curInst !== inst)
			) {
				$.datepicker._hideDatepicker();
			}
		},

		/* Adjust one of the date sub-fields. */
		_adjustDate: function (id, offset, period) {
			var target = $(id),
				inst = this._getInst(target[0]);

			if (this._isDisabledDatepicker(target[0])) {
				return;
			}
			this._adjustInstDate(inst, offset, period);
			this._updateDatepicker(inst);
		},

		/* Action for current link. */
		_gotoToday: function (id) {
			var date,
				target = $(id),
				inst = this._getInst(target[0]);

			if (this._get(inst, 'gotoCurrent') && inst.currentDay) {
				inst.selectedDay = inst.currentDay;
				inst.drawMonth = inst.selectedMonth = inst.currentMonth;
				inst.drawYear = inst.selectedYear = inst.currentYear;
			} else {
				date = new Date();
				inst.selectedDay = date.getDate();
				inst.drawMonth = inst.selectedMonth = date.getMonth();
				inst.drawYear = inst.selectedYear = date.getFullYear();
			}
			this._notifyChange(inst);
			this._adjustDate(target);
		},

		/* Action for selecting a new month/year. */
		_selectMonthYear: function (id, select, period) {
			var target = $(id),
				inst = this._getInst(target[0]);

			inst['selected' + (period === 'M' ? 'Month' : 'Year')] = inst[
				'draw' + (period === 'M' ? 'Month' : 'Year')
			] = parseInt(select.options[select.selectedIndex].value, 10);

			this._notifyChange(inst);
			this._adjustDate(target);
		},

		/* Action for selecting a day. */
		_selectDay: function (id, month, year, td) {
			var inst,
				target = $(id);

			if (
				$(td).hasClass(this._unselectableClass) ||
				this._isDisabledDatepicker(target[0])
			) {
				return;
			}

			inst = this._getInst(target[0]);
			inst.selectedDay = inst.currentDay = parseInt(
				$('a', td).attr('data-date')
			);
			inst.selectedMonth = inst.currentMonth = month;
			inst.selectedYear = inst.currentYear = year;
			this._selectDate(
				id,
				this._formatDate(
					inst,
					inst.currentDay,
					inst.currentMonth,
					inst.currentYear
				)
			);
		},

		/* Erase the input field and hide the date picker. */
		_clearDate: function (id) {
			var target = $(id);
			this._selectDate(target, '');
		},

		/* Update the input field with the selected date. */
		_selectDate: function (id, dateStr) {
			var onSelect,
				target = $(id),
				inst = this._getInst(target[0]);

			dateStr = dateStr != null ? dateStr : this._formatDate(inst);
			if (inst.input) {
				inst.input.val(dateStr);
			}
			this._updateAlternate(inst);

			onSelect = this._get(inst, 'onSelect');
			if (onSelect) {
				onSelect.apply(inst.input ? inst.input[0] : null, [dateStr, inst]); // trigger custom callback
			} else if (inst.input) {
				inst.input.trigger('change'); // fire the change event
			}

			if (inst.inline) {
				this._updateDatepicker(inst);
			} else {
				this._hideDatepicker();
				this._lastInput = inst.input[0];
				if (typeof inst.input[0] !== 'object') {
					inst.input.trigger('focus'); // restore focus
				}
				this._lastInput = null;
			}
		},

		/* Update any alternate field to synchronise with the main field. */
		_updateAlternate: function (inst) {
			var altFormat,
				date,
				dateStr,
				altField = this._get(inst, 'altField');

			if (altField) {
				// update alternate field too
				altFormat =
					this._get(inst, 'altFormat') || this._get(inst, 'dateFormat');
				date = this._getDate(inst);
				dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
				$(document).find(altField).val(dateStr);
			}
		},

		/* Set as beforeShowDay function to prevent selection of weekends.
		 * @param  date  Date - the date to customise
		 * @return [boolean, string] - is this date selectable?, what is its CSS class?
		 */
		noWeekends: function (date) {
			var day = date.getDay();
			return [day > 0 && day < 6, ''];
		},

		/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
		 * @param  date  Date - the date to get the week for
		 * @return  number - the number of the week within the year that contains this date
		 */
		iso8601Week: function (date) {
			var time,
				checkDate = new Date(date.getTime());

			// Find Thursday of this week starting on Monday
			checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));

			time = checkDate.getTime();
			checkDate.setMonth(0); // Compare with Jan 1
			checkDate.setDate(1);
			return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
		},

		/* Parse a string value into a date object.
		 * See formatDate below for the possible formats.
		 *
		 * @param  format string - the expected format of the date
		 * @param  value string - the date in the above format
		 * @param  settings Object - attributes include:
		 *					shortYearCutoff  number - the cutoff year for determining the century (optional)
		 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
		 *					dayNames		string[7] - names of the days from Sunday (optional)
		 *					monthNamesShort string[12] - abbreviated names of the months (optional)
		 *					monthNames		string[12] - names of the months (optional)
		 * @return  Date - the extracted date value or null if value is blank
		 */
		parseDate: function (format, value, settings) {
			if (format == null || value == null) {
				throw 'Invalid arguments';
			}

			value = typeof value === 'object' ? value.toString() : value + '';
			if (value === '') {
				return null;
			}

			var iFormat,
				dim,
				extra,
				iValue = 0,
				shortYearCutoffTemp =
					(settings ? settings.shortYearCutoff : null) ||
					this._defaults.shortYearCutoff,
				shortYearCutoff =
					typeof shortYearCutoffTemp !== 'string'
						? shortYearCutoffTemp
						: (new Date().getFullYear() % 100) +
						  parseInt(shortYearCutoffTemp, 10),
				dayNamesShort =
					(settings ? settings.dayNamesShort : null) ||
					this._defaults.dayNamesShort,
				dayNames =
					(settings ? settings.dayNames : null) || this._defaults.dayNames,
				monthNamesShort =
					(settings ? settings.monthNamesShort : null) ||
					this._defaults.monthNamesShort,
				monthNames =
					(settings ? settings.monthNames : null) || this._defaults.monthNames,
				year = -1,
				month = -1,
				day = -1,
				doy = -1,
				literal = false,
				date,
				// Check whether a format character is doubled
				lookAhead = function (match) {
					var matches =
						iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
					if (matches) {
						iFormat++;
					}
					return matches;
				},
				// Extract a number from the string value
				getNumber = function (match) {
					var isDoubled = lookAhead(match),
						size =
							match === '@'
								? 14
								: match === '!'
								? 20
								: match === 'y' && isDoubled
								? 4
								: match === 'o'
								? 3
								: 2,
						minSize = match === 'y' ? size : 1,
						digits = new RegExp('^\\d{' + minSize + ',' + size + '}'),
						num = value.substring(iValue).match(digits);
					if (!num) {
						throw 'Missing number at position ' + iValue;
					}
					iValue += num[0].length;
					return parseInt(num[0], 10);
				},
				// Extract a name from the string value and convert to an index
				getName = function (match, shortNames, longNames) {
					var index = -1,
						names = $.map(
							lookAhead(match) ? longNames : shortNames,
							function (v, k) {
								return [[k, v]];
							}
						).sort(function (a, b) {
							return -(a[1].length - b[1].length);
						});

					$.each(names, function (i, pair) {
						var name = pair[1];
						if (
							value.substr(iValue, name.length).toLowerCase() ===
							name.toLowerCase()
						) {
							index = pair[0];
							iValue += name.length;
							return false;
						}
					});
					if (index !== -1) {
						return index + 1;
					} else {
						throw 'Unknown name at position ' + iValue;
					}
				},
				// Confirm that a literal character matches the string value
				checkLiteral = function () {
					if (value.charAt(iValue) !== format.charAt(iFormat)) {
						throw 'Unexpected literal at position ' + iValue;
					}
					iValue++;
				};

			for (iFormat = 0; iFormat < format.length; iFormat++) {
				if (literal) {
					if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
						literal = false;
					} else {
						checkLiteral();
					}
				} else {
					switch (format.charAt(iFormat)) {
						case 'd':
							day = getNumber('d');
							break;
						case 'D':
							getName('D', dayNamesShort, dayNames);
							break;
						case 'o':
							doy = getNumber('o');
							break;
						case 'm':
							month = getNumber('m');
							break;
						case 'M':
							month = getName('M', monthNamesShort, monthNames);
							break;
						case 'y':
							year = getNumber('y');
							break;
						case '@':
							date = new Date(getNumber('@'));
							year = date.getFullYear();
							month = date.getMonth() + 1;
							day = date.getDate();
							break;
						case '!':
							date = new Date((getNumber('!') - this._ticksTo1970) / 10000);
							year = date.getFullYear();
							month = date.getMonth() + 1;
							day = date.getDate();
							break;
						case "'":
							if (lookAhead("'")) {
								checkLiteral();
							} else {
								literal = true;
							}
							break;
						default:
							checkLiteral();
					}
				}
			}

			if (iValue < value.length) {
				extra = value.substr(iValue);
				if (!/^\s+/.test(extra)) {
					throw 'Extra/unparsed characters found in date: ' + extra;
				}
			}

			if (year === -1) {
				year = new Date().getFullYear();
			} else if (year < 100) {
				year +=
					new Date().getFullYear() -
					(new Date().getFullYear() % 100) +
					(year <= shortYearCutoff ? 0 : -100);
			}

			if (doy > -1) {
				month = 1;
				day = doy;
				do {
					dim = this._getDaysInMonth(year, month - 1);
					if (day <= dim) {
						break;
					}
					month++;
					day -= dim;
				} while (true);
			}

			date = this._daylightSavingAdjust(new Date(year, month - 1, day));
			if (
				date.getFullYear() !== year ||
				date.getMonth() + 1 !== month ||
				date.getDate() !== day
			) {
				throw 'Invalid date'; // E.g. 31/02/00
			}
			return date;
		},

		/* Standard date formats. */
		ATOM: 'yy-mm-dd', // RFC 3339 (ISO 8601)
		COOKIE: 'D, dd M yy',
		ISO_8601: 'yy-mm-dd',
		RFC_822: 'D, d M y',
		RFC_850: 'DD, dd-M-y',
		RFC_1036: 'D, d M y',
		RFC_1123: 'D, d M yy',
		RFC_2822: 'D, d M yy',
		RSS: 'D, d M y', // RFC 822
		TICKS: '!',
		TIMESTAMP: '@',
		W3C: 'yy-mm-dd', // ISO 8601

		_ticksTo1970:
			((1970 - 1) * 365 +
				Math.floor(1970 / 4) -
				Math.floor(1970 / 100) +
				Math.floor(1970 / 400)) *
			24 *
			60 *
			60 *
			10000000,

		/* Format a date object into a string value.
		 * The format can be combinations of the following:
		 * d  - day of month (no leading zero)
		 * dd - day of month (two digit)
		 * o  - day of year (no leading zeros)
		 * oo - day of year (three digit)
		 * D  - day name short
		 * DD - day name long
		 * m  - month of year (no leading zero)
		 * mm - month of year (two digit)
		 * M  - month name short
		 * MM - month name long
		 * y  - year (two digit)
		 * yy - year (four digit)
		 * @ - Unix timestamp (ms since 01/01/1970)
		 * ! - Windows ticks (100ns since 01/01/0001)
		 * "..." - literal text
		 * '' - single quote
		 *
		 * @param  format string - the desired format of the date
		 * @param  date Date - the date value to format
		 * @param  settings Object - attributes include:
		 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
		 *					dayNames		string[7] - names of the days from Sunday (optional)
		 *					monthNamesShort string[12] - abbreviated names of the months (optional)
		 *					monthNames		string[12] - names of the months (optional)
		 * @return  string - the date in the above format
		 */
		formatDate: function (format, date, settings) {
			if (!date) {
				return '';
			}

			var iFormat,
				dayNamesShort =
					(settings ? settings.dayNamesShort : null) ||
					this._defaults.dayNamesShort,
				dayNames =
					(settings ? settings.dayNames : null) || this._defaults.dayNames,
				monthNamesShort =
					(settings ? settings.monthNamesShort : null) ||
					this._defaults.monthNamesShort,
				monthNames =
					(settings ? settings.monthNames : null) || this._defaults.monthNames,
				// Check whether a format character is doubled
				lookAhead = function (match) {
					var matches =
						iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
					if (matches) {
						iFormat++;
					}
					return matches;
				},
				// Format a number, with leading zero if necessary
				formatNumber = function (match, value, len) {
					var num = '' + value;
					if (lookAhead(match)) {
						while (num.length < len) {
							num = '0' + num;
						}
					}
					return num;
				},
				// Format a name, short or long as requested
				formatName = function (match, value, shortNames, longNames) {
					return lookAhead(match) ? longNames[value] : shortNames[value];
				},
				output = '',
				literal = false;

			if (date) {
				for (iFormat = 0; iFormat < format.length; iFormat++) {
					if (literal) {
						if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
							literal = false;
						} else {
							output += format.charAt(iFormat);
						}
					} else {
						switch (format.charAt(iFormat)) {
							case 'd':
								output += formatNumber('d', date.getDate(), 2);
								break;
							case 'D':
								output += formatName(
									'D',
									date.getDay(),
									dayNamesShort,
									dayNames
								);
								break;
							case 'o':
								output += formatNumber(
									'o',
									Math.round(
										(new Date(
											date.getFullYear(),
											date.getMonth(),
											date.getDate()
										).getTime() -
											new Date(date.getFullYear(), 0, 0).getTime()) /
											86400000
									),
									3
								);
								break;
							case 'm':
								output += formatNumber('m', date.getMonth() + 1, 2);
								break;
							case 'M':
								output += formatName(
									'M',
									date.getMonth(),
									monthNamesShort,
									monthNames
								);
								break;
							case 'y':
								output += lookAhead('y')
									? date.getFullYear()
									: (date.getFullYear() % 100 < 10 ? '0' : '') +
									  (date.getFullYear() % 100);
								break;
							case '@':
								output += date.getTime();
								break;
							case '!':
								output += date.getTime() * 10000 + this._ticksTo1970;
								break;
							case "'":
								if (lookAhead("'")) {
									output += "'";
								} else {
									literal = true;
								}
								break;
							default:
								output += format.charAt(iFormat);
						}
					}
				}
			}
			return output;
		},

		/* Extract all possible characters from the date format. */
		_possibleChars: function (format) {
			var iFormat,
				chars = '',
				literal = false,
				// Check whether a format character is doubled
				lookAhead = function (match) {
					var matches =
						iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
					if (matches) {
						iFormat++;
					}
					return matches;
				};

			for (iFormat = 0; iFormat < format.length; iFormat++) {
				if (literal) {
					if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
						literal = false;
					} else {
						chars += format.charAt(iFormat);
					}
				} else {
					switch (format.charAt(iFormat)) {
						case 'd':
						case 'm':
						case 'y':
						case '@':
							chars += '0123456789';
							break;
						case 'D':
						case 'M':
							return null; // Accept anything
						case "'":
							if (lookAhead("'")) {
								chars += "'";
							} else {
								literal = true;
							}
							break;
						default:
							chars += format.charAt(iFormat);
					}
				}
			}
			return chars;
		},

		/* Get a setting value, defaulting if necessary. */
		_get: function (inst, name) {
			return inst.settings[name] !== undefined
				? inst.settings[name]
				: this._defaults[name];
		},

		/* Parse existing date and initialise date picker. */
		_setDateFromField: function (inst, noDefault) {
			if (inst.input.val() === inst.lastVal) {
				return;
			}

			var dateFormat = this._get(inst, 'dateFormat'),
				dates = (inst.lastVal = inst.input ? inst.input.val() : null),
				defaultDate = this._getDefaultDate(inst),
				date = defaultDate,
				settings = this._getFormatConfig(inst);

			try {
				date = this.parseDate(dateFormat, dates, settings) || defaultDate;
			} catch (event) {
				dates = noDefault ? '' : dates;
			}
			inst.selectedDay = date.getDate();
			inst.drawMonth = inst.selectedMonth = date.getMonth();
			inst.drawYear = inst.selectedYear = date.getFullYear();
			inst.currentDay = dates ? date.getDate() : 0;
			inst.currentMonth = dates ? date.getMonth() : 0;
			inst.currentYear = dates ? date.getFullYear() : 0;
			this._adjustInstDate(inst);
		},

		/* Retrieve the default date shown on opening. */
		_getDefaultDate: function (inst) {
			return this._restrictMinMax(
				inst,
				this._determineDate(inst, this._get(inst, 'defaultDate'), new Date())
			);
		},

		/* A date may be specified as an exact value or a relative one. */
		_determineDate: function (inst, date, defaultDate) {
			var offsetNumeric = function (offset) {
					var date = new Date();
					date.setDate(date.getDate() + offset);
					return date;
				},
				offsetString = function (offset) {
					try {
						return $.datepicker.parseDate(
							$.datepicker._get(inst, 'dateFormat'),
							offset,
							$.datepicker._getFormatConfig(inst)
						);
					} catch (e) {
						// Ignore
					}

					var date =
							(offset.toLowerCase().match(/^c/)
								? $.datepicker._getDate(inst)
								: null) || new Date(),
						year = date.getFullYear(),
						month = date.getMonth(),
						day = date.getDate(),
						pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
						matches = pattern.exec(offset);

					while (matches) {
						switch (matches[2] || 'd') {
							case 'd':
							case 'D':
								day += parseInt(matches[1], 10);
								break;
							case 'w':
							case 'W':
								day += parseInt(matches[1], 10) * 7;
								break;
							case 'm':
							case 'M':
								month += parseInt(matches[1], 10);
								day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
								break;
							case 'y':
							case 'Y':
								year += parseInt(matches[1], 10);
								day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
								break;
						}
						matches = pattern.exec(offset);
					}
					return new Date(year, month, day);
				},
				newDate =
					date == null || date === ''
						? defaultDate
						: typeof date === 'string'
						? offsetString(date)
						: typeof date === 'number'
						? isNaN(date)
							? defaultDate
							: offsetNumeric(date)
						: new Date(date.getTime());

			newDate =
				newDate && newDate.toString() === 'Invalid Date'
					? defaultDate
					: newDate;
			if (newDate) {
				newDate.setHours(0);
				newDate.setMinutes(0);
				newDate.setSeconds(0);
				newDate.setMilliseconds(0);
			}
			return this._daylightSavingAdjust(newDate);
		},

		/* Handle switch to/from daylight saving.
		 * Hours may be non-zero on daylight saving cut-over:
		 * > 12 when midnight changeover, but then cannot generate
		 * midnight datetime, so jump to 1AM, otherwise reset.
		 * @param  date  (Date) the date to check
		 * @return  (Date) the corrected date
		 */
		_daylightSavingAdjust: function (date) {
			if (!date) {
				return null;
			}
			date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
			return date;
		},

		/* Set the date(s) directly. */
		_setDate: function (inst, date, noChange) {
			var clear = !date,
				origMonth = inst.selectedMonth,
				origYear = inst.selectedYear,
				newDate = this._restrictMinMax(
					inst,
					this._determineDate(inst, date, new Date())
				);

			inst.selectedDay = inst.currentDay = newDate.getDate();
			inst.drawMonth =
				inst.selectedMonth =
				inst.currentMonth =
					newDate.getMonth();
			inst.drawYear =
				inst.selectedYear =
				inst.currentYear =
					newDate.getFullYear();
			if (
				(origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) &&
				!noChange
			) {
				this._notifyChange(inst);
			}
			this._adjustInstDate(inst);
			if (inst.input) {
				inst.input.val(clear ? '' : this._formatDate(inst));
			}
		},

		/* Retrieve the date(s) directly. */
		_getDate: function (inst) {
			var startDate =
				!inst.currentYear || (inst.input && inst.input.val() === '')
					? null
					: this._daylightSavingAdjust(
							new Date(inst.currentYear, inst.currentMonth, inst.currentDay)
					  );
			return startDate;
		},

		/* Attach the onxxx handlers.  These are declared statically so
		 * they work with static code transformers like Caja.
		 */
		_attachHandlers: function (inst) {
			var stepMonths = this._get(inst, 'stepMonths'),
				id = '#' + inst.id.replace(/\\\\/g, '\\');
			inst.dpDiv.find('[data-handler]').map(function () {
				var handler = {
					prev: function () {
						$.datepicker._adjustDate(id, -stepMonths, 'M');
					},
					next: function () {
						$.datepicker._adjustDate(id, +stepMonths, 'M');
					},
					hide: function () {
						$.datepicker._hideDatepicker();
					},
					today: function () {
						$.datepicker._gotoToday(id);
					},
					selectDay: function () {
						$.datepicker._selectDay(
							id,
							+this.getAttribute('data-month'),
							+this.getAttribute('data-year'),
							this
						);
						return false;
					},
					selectMonth: function () {
						$.datepicker._selectMonthYear(id, this, 'M');
						return false;
					},
					selectYear: function () {
						$.datepicker._selectMonthYear(id, this, 'Y');
						return false;
					},
				};
				$(this).on(
					this.getAttribute('data-event'),
					handler[this.getAttribute('data-handler')]
				);
			});
		},

		/* Generate the HTML for the current state of the date picker. */
		_generateHTML: function (inst) {
			var maxDraw,
				prevText,
				prev,
				nextText,
				next,
				currentText,
				gotoDate,
				controls,
				buttonPanel,
				firstDay,
				showWeek,
				dayNames,
				dayNamesMin,
				monthNames,
				monthNamesShort,
				beforeShowDay,
				showOtherMonths,
				selectOtherMonths,
				defaultDate,
				html,
				dow,
				row,
				group,
				col,
				selectedDate,
				cornerClass,
				calender,
				thead,
				day,
				daysInMonth,
				leadDays,
				curRows,
				numRows,
				printDate,
				dRow,
				tbody,
				daySettings,
				otherMonth,
				unselectable,
				tempDate = new Date(),
				today = this._daylightSavingAdjust(
					new Date(
						tempDate.getFullYear(),
						tempDate.getMonth(),
						tempDate.getDate()
					)
				), // clear time
				isRTL = this._get(inst, 'isRTL'),
				showButtonPanel = this._get(inst, 'showButtonPanel'),
				hideIfNoPrevNext = this._get(inst, 'hideIfNoPrevNext'),
				navigationAsDateFormat = this._get(inst, 'navigationAsDateFormat'),
				numMonths = this._getNumberOfMonths(inst),
				showCurrentAtPos = this._get(inst, 'showCurrentAtPos'),
				stepMonths = this._get(inst, 'stepMonths'),
				isMultiMonth = numMonths[0] !== 1 || numMonths[1] !== 1,
				currentDate = this._daylightSavingAdjust(
					!inst.currentDay
						? new Date(9999, 9, 9)
						: new Date(inst.currentYear, inst.currentMonth, inst.currentDay)
				),
				minDate = this._getMinMaxDate(inst, 'min'),
				maxDate = this._getMinMaxDate(inst, 'max'),
				drawMonth = inst.drawMonth - showCurrentAtPos,
				drawYear = inst.drawYear;

			if (drawMonth < 0) {
				drawMonth += 12;
				drawYear--;
			}
			if (maxDate) {
				maxDraw = this._daylightSavingAdjust(
					new Date(
						maxDate.getFullYear(),
						maxDate.getMonth() - numMonths[0] * numMonths[1] + 1,
						maxDate.getDate()
					)
				);
				maxDraw = minDate && maxDraw < minDate ? minDate : maxDraw;
				while (
					this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw
				) {
					drawMonth--;
					if (drawMonth < 0) {
						drawMonth = 11;
						drawYear--;
					}
				}
			}
			inst.drawMonth = drawMonth;
			inst.drawYear = drawYear;

			prevText = this._get(inst, 'prevText');
			prevText = !navigationAsDateFormat
				? prevText
				: this.formatDate(
						prevText,
						this._daylightSavingAdjust(
							new Date(drawYear, drawMonth - stepMonths, 1)
						),
						this._getFormatConfig(inst)
				  );

			if (this._canAdjustMonth(inst, -1, drawYear, drawMonth)) {
				prev = $('<a>')
					.attr({
						class: 'ui-datepicker-prev ui-corner-all',
						'data-handler': 'prev',
						'data-event': 'click',
						title: prevText,
					})
					.append(
						$('<span>')
							.addClass(
								'ui-icon ui-icon-circle-triangle-' + (isRTL ? 'e' : 'w')
							)
							.text(prevText)
					)[0].outerHTML;
			} else if (hideIfNoPrevNext) {
				prev = '';
			} else {
				prev = $('<a>')
					.attr({
						class: 'ui-datepicker-prev ui-corner-all ui-state-disabled',
						title: prevText,
					})
					.append(
						$('<span>')
							.addClass(
								'ui-icon ui-icon-circle-triangle-' + (isRTL ? 'e' : 'w')
							)
							.text(prevText)
					)[0].outerHTML;
			}

			nextText = this._get(inst, 'nextText');
			nextText = !navigationAsDateFormat
				? nextText
				: this.formatDate(
						nextText,
						this._daylightSavingAdjust(
							new Date(drawYear, drawMonth + stepMonths, 1)
						),
						this._getFormatConfig(inst)
				  );

			if (this._canAdjustMonth(inst, +1, drawYear, drawMonth)) {
				next = $('<a>')
					.attr({
						class: 'ui-datepicker-next ui-corner-all',
						'data-handler': 'next',
						'data-event': 'click',
						title: nextText,
					})
					.append(
						$('<span>')
							.addClass(
								'ui-icon ui-icon-circle-triangle-' + (isRTL ? 'w' : 'e')
							)
							.text(nextText)
					)[0].outerHTML;
			} else if (hideIfNoPrevNext) {
				next = '';
			} else {
				next = $('<a>')
					.attr({
						class: 'ui-datepicker-next ui-corner-all ui-state-disabled',
						title: nextText,
					})
					.append(
						$('<span>')
							.attr(
								'class',
								'ui-icon ui-icon-circle-triangle-' + (isRTL ? 'w' : 'e')
							)
							.text(nextText)
					)[0].outerHTML;
			}

			currentText = this._get(inst, 'currentText');
			gotoDate =
				this._get(inst, 'gotoCurrent') && inst.currentDay ? currentDate : today;
			currentText = !navigationAsDateFormat
				? currentText
				: this.formatDate(currentText, gotoDate, this._getFormatConfig(inst));

			controls = '';
			if (!inst.inline) {
				controls = $('<button>')
					.attr({
						type: 'button',
						class:
							'ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all',
						'data-handler': 'hide',
						'data-event': 'click',
					})
					.text(this._get(inst, 'closeText'))[0].outerHTML;
			}

			buttonPanel = '';
			if (showButtonPanel) {
				buttonPanel = $(
					"<div class='ui-datepicker-buttonpane ui-widget-content'>"
				)
					.append(isRTL ? controls : '')
					.append(
						this._isInRange(inst, gotoDate)
							? $('<button>')
									.attr({
										type: 'button',
										class:
											'ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all',
										'data-handler': 'today',
										'data-event': 'click',
									})
									.text(currentText)
							: ''
					)
					.append(isRTL ? '' : controls)[0].outerHTML;
			}

			firstDay = parseInt(this._get(inst, 'firstDay'), 10);
			firstDay = isNaN(firstDay) ? 0 : firstDay;

			showWeek = this._get(inst, 'showWeek');
			dayNames = this._get(inst, 'dayNames');
			dayNamesMin = this._get(inst, 'dayNamesMin');
			monthNames = this._get(inst, 'monthNames');
			monthNamesShort = this._get(inst, 'monthNamesShort');
			beforeShowDay = this._get(inst, 'beforeShowDay');
			showOtherMonths = this._get(inst, 'showOtherMonths');
			selectOtherMonths = this._get(inst, 'selectOtherMonths');
			defaultDate = this._getDefaultDate(inst);
			html = '';

			for (row = 0; row < numMonths[0]; row++) {
				group = '';
				this.maxRows = 4;
				for (col = 0; col < numMonths[1]; col++) {
					selectedDate = this._daylightSavingAdjust(
						new Date(drawYear, drawMonth, inst.selectedDay)
					);
					cornerClass = ' ui-corner-all';
					calender = '';
					if (isMultiMonth) {
						calender += "<div class='ui-datepicker-group";
						if (numMonths[1] > 1) {
							switch (col) {
								case 0:
									calender += ' ui-datepicker-group-first';
									cornerClass = ' ui-corner-' + (isRTL ? 'right' : 'left');
									break;
								case numMonths[1] - 1:
									calender += ' ui-datepicker-group-last';
									cornerClass = ' ui-corner-' + (isRTL ? 'left' : 'right');
									break;
								default:
									calender += ' ui-datepicker-group-middle';
									cornerClass = '';
									break;
							}
						}
						calender += "'>";
					}
					calender +=
						"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" +
						cornerClass +
						"'>" +
						(/all|left/.test(cornerClass) && row === 0
							? isRTL
								? next
								: prev
							: '') +
						(/all|right/.test(cornerClass) && row === 0
							? isRTL
								? prev
								: next
							: '') +
						this._generateMonthYearHeader(
							inst,
							drawMonth,
							drawYear,
							minDate,
							maxDate,
							row > 0 || col > 0,
							monthNames,
							monthNamesShort
						) + // draw month headers
						"</div><table class='ui-datepicker-calendar'><thead>" +
						'<tr>';
					thead = showWeek
						? "<th class='ui-datepicker-week-col'>" +
						  this._get(inst, 'weekHeader') +
						  '</th>'
						: '';
					for (dow = 0; dow < 7; dow++) {
						// days of the week
						day = (dow + firstDay) % 7;
						thead +=
							"<th scope='col'" +
							((dow + firstDay + 6) % 7 >= 5
								? " class='ui-datepicker-week-end'"
								: '') +
							'>' +
							"<span title='" +
							dayNames[day] +
							"'>" +
							dayNamesMin[day] +
							'</span></th>';
					}
					calender += thead + '</tr></thead><tbody>';
					daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
					if (
						drawYear === inst.selectedYear &&
						drawMonth === inst.selectedMonth
					) {
						inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
					}
					leadDays =
						(this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
					curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
					numRows = isMultiMonth
						? this.maxRows > curRows
							? this.maxRows
							: curRows
						: curRows; //If multiple months, use the higher number of rows (see #7043)
					this.maxRows = numRows;
					printDate = this._daylightSavingAdjust(
						new Date(drawYear, drawMonth, 1 - leadDays)
					);
					for (dRow = 0; dRow < numRows; dRow++) {
						// create date picker rows
						calender += '<tr>';
						tbody = !showWeek
							? ''
							: "<td class='ui-datepicker-week-col'>" +
							  this._get(inst, 'calculateWeek')(printDate) +
							  '</td>';
						for (dow = 0; dow < 7; dow++) {
							// create date picker days
							daySettings = beforeShowDay
								? beforeShowDay.apply(inst.input ? inst.input[0] : null, [
										printDate,
								  ])
								: [true, ''];
							otherMonth = printDate.getMonth() !== drawMonth;
							unselectable =
								(otherMonth && !selectOtherMonths) ||
								!daySettings[0] ||
								(minDate && printDate < minDate) ||
								(maxDate && printDate > maxDate);
							tbody +=
								"<td class='" +
								((dow + firstDay + 6) % 7 >= 5
									? ' ui-datepicker-week-end'
									: '') + // highlight weekends
								(otherMonth ? ' ui-datepicker-other-month' : '') + // highlight days from other months
								((printDate.getTime() === selectedDate.getTime() &&
									drawMonth === inst.selectedMonth &&
									inst._keyEvent) || // user pressed key
								(defaultDate.getTime() === printDate.getTime() &&
									defaultDate.getTime() === selectedDate.getTime())
									? // or defaultDate is current printedDate and defaultDate is selectedDate
									  ' ' + this._dayOverClass
									: '') + // highlight selected day
								(unselectable
									? ' ' + this._unselectableClass + ' ui-state-disabled'
									: '') + // highlight unselectable days
								(otherMonth && !showOtherMonths
									? ''
									: ' ' +
									  daySettings[1] + // highlight custom dates
									  (printDate.getTime() === currentDate.getTime()
											? ' ' + this._currentClass
											: '') + // highlight selected day
									  (printDate.getTime() === today.getTime()
											? ' ui-datepicker-today'
											: '')) +
								"'" + // highlight today (if different)
								((!otherMonth || showOtherMonths) && daySettings[2]
									? " title='" + daySettings[2].replace(/'/g, '&#39;') + "'"
									: '') + // cell title
								(unselectable
									? ''
									: " data-handler='selectDay' data-event='click' data-month='" +
									  printDate.getMonth() +
									  "' data-year='" +
									  printDate.getFullYear() +
									  "'") +
								'>' + // actions
								(otherMonth && !showOtherMonths
									? '&#xa0;' // display for other months
									: unselectable
									? "<span class='ui-state-default'>" +
									  printDate.getDate() +
									  '</span>'
									: "<a class='ui-state-default" +
									  (printDate.getTime() === today.getTime()
											? ' ui-state-highlight'
											: '') +
									  (printDate.getTime() === currentDate.getTime()
											? ' ui-state-active'
											: '') + // highlight selected day
									  (otherMonth ? ' ui-priority-secondary' : '') + // distinguish dates from other months
									  "' href='#' aria-current='" +
									  (printDate.getTime() === currentDate.getTime()
											? 'true'
											: 'false') + // mark date as selected for screen reader
									  "' data-date='" +
									  printDate.getDate() + // store date as data
									  "'>" +
									  printDate.getDate() +
									  '</a>') +
								'</td>'; // display selectable date
							printDate.setDate(printDate.getDate() + 1);
							printDate = this._daylightSavingAdjust(printDate);
						}
						calender += tbody + '</tr>';
					}
					drawMonth++;
					if (drawMonth > 11) {
						drawMonth = 0;
						drawYear++;
					}
					calender +=
						'</tbody></table>' +
						(isMultiMonth
							? '</div>' +
							  (numMonths[0] > 0 && col === numMonths[1] - 1
									? "<div class='ui-datepicker-row-break'></div>"
									: '')
							: '');
					group += calender;
				}
				html += group;
			}
			html += buttonPanel;
			inst._keyEvent = false;
			return html;
		},

		/* Generate the month and year header. */
		_generateMonthYearHeader: function (
			inst,
			drawMonth,
			drawYear,
			minDate,
			maxDate,
			secondary,
			monthNames,
			monthNamesShort
		) {
			var inMinYear,
				inMaxYear,
				month,
				years,
				thisYear,
				determineYear,
				year,
				endYear,
				changeMonth = this._get(inst, 'changeMonth'),
				changeYear = this._get(inst, 'changeYear'),
				showMonthAfterYear = this._get(inst, 'showMonthAfterYear'),
				selectMonthLabel = this._get(inst, 'selectMonthLabel'),
				selectYearLabel = this._get(inst, 'selectYearLabel'),
				html = "<div class='ui-datepicker-title'>",
				monthHtml = '';

			// Month selection
			if (secondary || !changeMonth) {
				monthHtml +=
					"<span class='ui-datepicker-month'>" +
					monthNames[drawMonth] +
					'</span>';
			} else {
				inMinYear = minDate && minDate.getFullYear() === drawYear;
				inMaxYear = maxDate && maxDate.getFullYear() === drawYear;
				monthHtml +=
					"<select class='ui-datepicker-month' aria-label='" +
					selectMonthLabel +
					"' data-handler='selectMonth' data-event='change'>";
				for (month = 0; month < 12; month++) {
					if (
						(!inMinYear || month >= minDate.getMonth()) &&
						(!inMaxYear || month <= maxDate.getMonth())
					) {
						monthHtml +=
							"<option value='" +
							month +
							"'" +
							(month === drawMonth ? " selected='selected'" : '') +
							'>' +
							monthNamesShort[month] +
							'</option>';
					}
				}
				monthHtml += '</select>';
			}

			if (!showMonthAfterYear) {
				html +=
					monthHtml +
					(secondary || !(changeMonth && changeYear) ? '&#xa0;' : '');
			}

			// Year selection
			if (!inst.yearshtml) {
				inst.yearshtml = '';
				if (secondary || !changeYear) {
					html += "<span class='ui-datepicker-year'>" + drawYear + '</span>';
				} else {
					// determine range of years to display
					years = this._get(inst, 'yearRange').split(':');
					thisYear = new Date().getFullYear();
					determineYear = function (value) {
						var year = value.match(/c[+\-].*/)
							? drawYear + parseInt(value.substring(1), 10)
							: value.match(/[+\-].*/)
							? thisYear + parseInt(value, 10)
							: parseInt(value, 10);
						return isNaN(year) ? thisYear : year;
					};
					year = determineYear(years[0]);
					endYear = Math.max(year, determineYear(years[1] || ''));
					year = minDate ? Math.max(year, minDate.getFullYear()) : year;
					endYear = maxDate
						? Math.min(endYear, maxDate.getFullYear())
						: endYear;
					inst.yearshtml +=
						"<select class='ui-datepicker-year' aria-label='" +
						selectYearLabel +
						"' data-handler='selectYear' data-event='change'>";
					for (; year <= endYear; year++) {
						inst.yearshtml +=
							"<option value='" +
							year +
							"'" +
							(year === drawYear ? " selected='selected'" : '') +
							'>' +
							year +
							'</option>';
					}
					inst.yearshtml += '</select>';

					html += inst.yearshtml;
					inst.yearshtml = null;
				}
			}

			html += this._get(inst, 'yearSuffix');
			if (showMonthAfterYear) {
				html +=
					(secondary || !(changeMonth && changeYear) ? '&#xa0;' : '') +
					monthHtml;
			}
			html += '</div>'; // Close datepicker_header
			return html;
		},

		/* Adjust one of the date sub-fields. */
		_adjustInstDate: function (inst, offset, period) {
			var year = inst.selectedYear + (period === 'Y' ? offset : 0),
				month = inst.selectedMonth + (period === 'M' ? offset : 0),
				day =
					Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) +
					(period === 'D' ? offset : 0),
				date = this._restrictMinMax(
					inst,
					this._daylightSavingAdjust(new Date(year, month, day))
				);

			inst.selectedDay = date.getDate();
			inst.drawMonth = inst.selectedMonth = date.getMonth();
			inst.drawYear = inst.selectedYear = date.getFullYear();
			if (period === 'M' || period === 'Y') {
				this._notifyChange(inst);
			}
		},

		/* Ensure a date is within any min/max bounds. */
		_restrictMinMax: function (inst, date) {
			var minDate = this._getMinMaxDate(inst, 'min'),
				maxDate = this._getMinMaxDate(inst, 'max'),
				newDate = minDate && date < minDate ? minDate : date;
			return maxDate && newDate > maxDate ? maxDate : newDate;
		},

		/* Notify change of month/year. */
		_notifyChange: function (inst) {
			var onChange = this._get(inst, 'onChangeMonthYear');
			if (onChange) {
				onChange.apply(inst.input ? inst.input[0] : null, [
					inst.selectedYear,
					inst.selectedMonth + 1,
					inst,
				]);
			}
		},

		/* Determine the number of months to show. */
		_getNumberOfMonths: function (inst) {
			var numMonths = this._get(inst, 'numberOfMonths');
			return numMonths == null
				? [1, 1]
				: typeof numMonths === 'number'
				? [1, numMonths]
				: numMonths;
		},

		/* Determine the current maximum date - ensure no time components are set. */
		_getMinMaxDate: function (inst, minMax) {
			return this._determineDate(inst, this._get(inst, minMax + 'Date'), null);
		},

		/* Find the number of days in a given month. */
		_getDaysInMonth: function (year, month) {
			return (
				32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate()
			);
		},

		/* Find the day of the week of the first of a month. */
		_getFirstDayOfMonth: function (year, month) {
			return new Date(year, month, 1).getDay();
		},

		/* Determines if we should allow a "next/prev" month display change. */
		_canAdjustMonth: function (inst, offset, curYear, curMonth) {
			var numMonths = this._getNumberOfMonths(inst),
				date = this._daylightSavingAdjust(
					new Date(
						curYear,
						curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]),
						1
					)
				);

			if (offset < 0) {
				date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
			}
			return this._isInRange(inst, date);
		},

		/* Is the given date in the accepted range? */
		_isInRange: function (inst, date) {
			var yearSplit,
				currentYear,
				minDate = this._getMinMaxDate(inst, 'min'),
				maxDate = this._getMinMaxDate(inst, 'max'),
				minYear = null,
				maxYear = null,
				years = this._get(inst, 'yearRange');
			if (years) {
				yearSplit = years.split(':');
				currentYear = new Date().getFullYear();
				minYear = parseInt(yearSplit[0], 10);
				maxYear = parseInt(yearSplit[1], 10);
				if (yearSplit[0].match(/[+\-].*/)) {
					minYear += currentYear;
				}
				if (yearSplit[1].match(/[+\-].*/)) {
					maxYear += currentYear;
				}
			}

			return (
				(!minDate || date.getTime() >= minDate.getTime()) &&
				(!maxDate || date.getTime() <= maxDate.getTime()) &&
				(!minYear || date.getFullYear() >= minYear) &&
				(!maxYear || date.getFullYear() <= maxYear)
			);
		},

		/* Provide the configuration settings for formatting/parsing. */
		_getFormatConfig: function (inst) {
			var shortYearCutoff = this._get(inst, 'shortYearCutoff');
			shortYearCutoff =
				typeof shortYearCutoff !== 'string'
					? shortYearCutoff
					: (new Date().getFullYear() % 100) + parseInt(shortYearCutoff, 10);
			return {
				shortYearCutoff: shortYearCutoff,
				dayNamesShort: this._get(inst, 'dayNamesShort'),
				dayNames: this._get(inst, 'dayNames'),
				monthNamesShort: this._get(inst, 'monthNamesShort'),
				monthNames: this._get(inst, 'monthNames'),
			};
		},

		/* Format the given date for display. */
		_formatDate: function (inst, day, month, year) {
			if (!day) {
				inst.currentDay = inst.selectedDay;
				inst.currentMonth = inst.selectedMonth;
				inst.currentYear = inst.selectedYear;
			}
			var date = day
				? typeof day === 'object'
					? day
					: this._daylightSavingAdjust(new Date(year, month, day))
				: this._daylightSavingAdjust(
						new Date(inst.currentYear, inst.currentMonth, inst.currentDay)
				  );
			return this.formatDate(
				this._get(inst, 'dateFormat'),
				date,
				this._getFormatConfig(inst)
			);
		},
	});

	/*
	 * Bind hover events for datepicker elements.
	 * Done via delegate so the binding only occurs once in the lifetime of the parent div.
	 * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
	 */
	function datepicker_bindHover(dpDiv) {
		var selector =
			'button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a';
		return dpDiv
			.on('mouseout', selector, function () {
				$(this).removeClass('ui-state-hover');
				if (this.className.indexOf('ui-datepicker-prev') !== -1) {
					$(this).removeClass('ui-datepicker-prev-hover');
				}
				if (this.className.indexOf('ui-datepicker-next') !== -1) {
					$(this).removeClass('ui-datepicker-next-hover');
				}
			})
			.on('mouseover', selector, datepicker_handleMouseover);
	}

	function datepicker_handleMouseover() {
		if (
			!$.datepicker._isDisabledDatepicker(
				datepicker_instActive.inline
					? datepicker_instActive.dpDiv.parent()[0]
					: datepicker_instActive.input[0]
			)
		) {
			$(this)
				.parents('.ui-datepicker-calendar')
				.find('a')
				.removeClass('ui-state-hover');
			$(this).addClass('ui-state-hover');
			if (this.className.indexOf('ui-datepicker-prev') !== -1) {
				$(this).addClass('ui-datepicker-prev-hover');
			}
			if (this.className.indexOf('ui-datepicker-next') !== -1) {
				$(this).addClass('ui-datepicker-next-hover');
			}
		}
	}

	/* jQuery extend now ignores nulls! */
	function datepicker_extendRemove(target, props) {
		$.extend(target, props);
		for (var name in props) {
			if (props[name] == null) {
				target[name] = props[name];
			}
		}
		return target;
	}

	/* Invoke the datepicker functionality.
   @param  options  string - a command, optionally followed by additional parameters or
					Object - settings for attaching new datepicker functionality
   @return  jQuery object */
	$.fn.datepicker = function (options) {
		/* Verify an empty collection wasn't passed - Fixes #6976 */
		if (!this.length) {
			return this;
		}

		/* Initialise the date picker. */
		if (!$.datepicker.initialized) {
			$(document).on('mousedown', $.datepicker._checkExternalClick);
			$.datepicker.initialized = true;
		}

		/* Append datepicker main container to body if not exist. */
		if ($('#' + $.datepicker._mainDivId).length === 0) {
			$('body').append($.datepicker.dpDiv);
		}

		var otherArgs = Array.prototype.slice.call(arguments, 1);
		if (
			typeof options === 'string' &&
			(options === 'isDisabled' ||
				options === 'getDate' ||
				options === 'widget')
		) {
			return $.datepicker['_' + options + 'Datepicker'].apply(
				$.datepicker,
				[this[0]].concat(otherArgs)
			);
		}
		if (
			options === 'option' &&
			arguments.length === 2 &&
			typeof arguments[1] === 'string'
		) {
			return $.datepicker['_' + options + 'Datepicker'].apply(
				$.datepicker,
				[this[0]].concat(otherArgs)
			);
		}
		return this.each(function () {
			if (typeof options === 'string') {
				$.datepicker['_' + options + 'Datepicker'].apply(
					$.datepicker,
					[this].concat(otherArgs)
				);
			} else {
				$.datepicker._attachDatepicker(this, options);
			}
		});
	};

	$.datepicker = new Datepicker(); // singleton instance
	$.datepicker.initialized = false;
	$.datepicker.uuid = new Date().getTime();
	$.datepicker.version = '1.13.1';

	var widgetsDatepicker = $.datepicker;

	/*!
	 * jQuery UI Dialog 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Dialog
	//>>group: Widgets
	//>>description: Displays customizable dialog windows.
	//>>docs: http://api.jqueryui.com/dialog/
	//>>demos: http://jqueryui.com/dialog/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/dialog.css
	//>>css.theme: ../../themes/base/theme.css

	$.widget('ui.dialog', {
		version: '1.13.1',
		options: {
			appendTo: 'body',
			autoOpen: true,
			buttons: [],
			classes: {
				'ui-dialog': 'ui-corner-all',
				'ui-dialog-titlebar': 'ui-corner-all',
			},
			closeOnEscape: true,
			closeText: 'Close',
			draggable: true,
			hide: null,
			height: 'auto',
			maxHeight: null,
			maxWidth: null,
			minHeight: 150,
			minWidth: 150,
			modal: false,
			position: {
				my: 'center',
				at: 'center',
				of: window,
				collision: 'fit',

				// Ensure the titlebar is always visible
				using: function (pos) {
					var topOffset = $(this).css(pos).offset().top;
					if (topOffset < 0) {
						$(this).css('top', pos.top - topOffset);
					}
				},
			},
			resizable: true,
			show: null,
			title: null,
			width: 300,

			// Callbacks
			beforeClose: null,
			close: null,
			drag: null,
			dragStart: null,
			dragStop: null,
			focus: null,
			open: null,
			resize: null,
			resizeStart: null,
			resizeStop: null,
		},

		sizeRelatedOptions: {
			buttons: true,
			height: true,
			maxHeight: true,
			maxWidth: true,
			minHeight: true,
			minWidth: true,
			width: true,
		},

		resizableRelatedOptions: {
			maxHeight: true,
			maxWidth: true,
			minHeight: true,
			minWidth: true,
		},

		_create: function () {
			this.originalCss = {
				display: this.element[0].style.display,
				width: this.element[0].style.width,
				minHeight: this.element[0].style.minHeight,
				maxHeight: this.element[0].style.maxHeight,
				height: this.element[0].style.height,
			};
			this.originalPosition = {
				parent: this.element.parent(),
				index: this.element.parent().children().index(this.element),
			};
			this.originalTitle = this.element.attr('title');
			if (this.options.title == null && this.originalTitle != null) {
				this.options.title = this.originalTitle;
			}

			// Dialogs can't be disabled
			if (this.options.disabled) {
				this.options.disabled = false;
			}

			this._createWrapper();

			this.element.show().removeAttr('title').appendTo(this.uiDialog);

			this._addClass('ui-dialog-content', 'ui-widget-content');

			this._createTitlebar();
			this._createButtonPane();

			if (this.options.draggable && $.fn.draggable) {
				this._makeDraggable();
			}
			if (this.options.resizable && $.fn.resizable) {
				this._makeResizable();
			}

			this._isOpen = false;

			this._trackFocus();
		},

		_init: function () {
			if (this.options.autoOpen) {
				this.open();
			}
		},

		_appendTo: function () {
			var element = this.options.appendTo;
			if (element && (element.jquery || element.nodeType)) {
				return $(element);
			}
			return this.document.find(element || 'body').eq(0);
		},

		_destroy: function () {
			var next,
				originalPosition = this.originalPosition;

			this._untrackInstance();
			this._destroyOverlay();

			this.element
				.removeUniqueId()
				.css(this.originalCss)

				// Without detaching first, the following becomes really slow
				.detach();

			this.uiDialog.remove();

			if (this.originalTitle) {
				this.element.attr('title', this.originalTitle);
			}

			next = originalPosition.parent.children().eq(originalPosition.index);

			// Don't try to place the dialog next to itself (#8613)
			if (next.length && next[0] !== this.element[0]) {
				next.before(this.element);
			} else {
				originalPosition.parent.append(this.element);
			}
		},

		widget: function () {
			return this.uiDialog;
		},

		disable: $.noop,
		enable: $.noop,

		close: function (event) {
			var that = this;

			if (!this._isOpen || this._trigger('beforeClose', event) === false) {
				return;
			}

			this._isOpen = false;
			this._focusedElement = null;
			this._destroyOverlay();
			this._untrackInstance();

			if (!this.opener.filter(':focusable').trigger('focus').length) {
				// Hiding a focused element doesn't trigger blur in WebKit
				// so in case we have nothing to focus on, explicitly blur the active element
				// https://bugs.webkit.org/show_bug.cgi?id=47182
				$.ui.safeBlur($.ui.safeActiveElement(this.document[0]));
			}

			this._hide(this.uiDialog, this.options.hide, function () {
				that._trigger('close', event);
			});
		},

		isOpen: function () {
			return this._isOpen;
		},

		moveToTop: function () {
			this._moveToTop();
		},

		_moveToTop: function (event, silent) {
			var moved = false,
				zIndices = this.uiDialog
					.siblings('.ui-front:visible')
					.map(function () {
						return +$(this).css('z-index');
					})
					.get(),
				zIndexMax = Math.max.apply(null, zIndices);

			if (zIndexMax >= +this.uiDialog.css('z-index')) {
				this.uiDialog.css('z-index', zIndexMax + 1);
				moved = true;
			}

			if (moved && !silent) {
				this._trigger('focus', event);
			}
			return moved;
		},

		open: function () {
			var that = this;
			if (this._isOpen) {
				if (this._moveToTop()) {
					this._focusTabbable();
				}
				return;
			}

			this._isOpen = true;
			this.opener = $($.ui.safeActiveElement(this.document[0]));

			this._size();
			this._position();
			this._createOverlay();
			this._moveToTop(null, true);

			// Ensure the overlay is moved to the top with the dialog, but only when
			// opening. The overlay shouldn't move after the dialog is open so that
			// modeless dialogs opened after the modal dialog stack properly.
			if (this.overlay) {
				this.overlay.css('z-index', this.uiDialog.css('z-index') - 1);
			}

			this._show(this.uiDialog, this.options.show, function () {
				that._focusTabbable();
				that._trigger('focus');
			});

			// Track the dialog immediately upon opening in case a focus event
			// somehow occurs outside of the dialog before an element inside the
			// dialog is focused (#10152)
			this._makeFocusTarget();

			this._trigger('open');
		},

		_focusTabbable: function () {
			// Set focus to the first match:
			// 1. An element that was focused previously
			// 2. First element inside the dialog matching [autofocus]
			// 3. Tabbable element inside the content element
			// 4. Tabbable element inside the buttonpane
			// 5. The close button
			// 6. The dialog itself
			var hasFocus = this._focusedElement;
			if (!hasFocus) {
				hasFocus = this.element.find('[autofocus]');
			}
			if (!hasFocus.length) {
				hasFocus = this.element.find(':tabbable');
			}
			if (!hasFocus.length) {
				hasFocus = this.uiDialogButtonPane.find(':tabbable');
			}
			if (!hasFocus.length) {
				hasFocus = this.uiDialogTitlebarClose.filter(':tabbable');
			}
			if (!hasFocus.length) {
				hasFocus = this.uiDialog;
			}
			hasFocus.eq(0).trigger('focus');
		},

		_restoreTabbableFocus: function () {
			var activeElement = $.ui.safeActiveElement(this.document[0]),
				isActive =
					this.uiDialog[0] === activeElement ||
					$.contains(this.uiDialog[0], activeElement);
			if (!isActive) {
				this._focusTabbable();
			}
		},

		_keepFocus: function (event) {
			event.preventDefault();
			this._restoreTabbableFocus();

			// support: IE
			// IE <= 8 doesn't prevent moving focus even with event.preventDefault()
			// so we check again later
			this._delay(this._restoreTabbableFocus);
		},

		_createWrapper: function () {
			this.uiDialog = $('<div>')
				.hide()
				.attr({
					// Setting tabIndex makes the div focusable
					tabIndex: -1,
					role: 'dialog',
				})
				.appendTo(this._appendTo());

			this._addClass(
				this.uiDialog,
				'ui-dialog',
				'ui-widget ui-widget-content ui-front'
			);
			this._on(this.uiDialog, {
				keydown: function (event) {
					if (
						this.options.closeOnEscape &&
						!event.isDefaultPrevented() &&
						event.keyCode &&
						event.keyCode === $.ui.keyCode.ESCAPE
					) {
						event.preventDefault();
						this.close(event);
						return;
					}

					// Prevent tabbing out of dialogs
					if (
						event.keyCode !== $.ui.keyCode.TAB ||
						event.isDefaultPrevented()
					) {
						return;
					}
					var tabbables = this.uiDialog.find(':tabbable'),
						first = tabbables.first(),
						last = tabbables.last();

					if (
						(event.target === last[0] || event.target === this.uiDialog[0]) &&
						!event.shiftKey
					) {
						this._delay(function () {
							first.trigger('focus');
						});
						event.preventDefault();
					} else if (
						(event.target === first[0] || event.target === this.uiDialog[0]) &&
						event.shiftKey
					) {
						this._delay(function () {
							last.trigger('focus');
						});
						event.preventDefault();
					}
				},
				mousedown: function (event) {
					if (this._moveToTop(event)) {
						this._focusTabbable();
					}
				},
			});

			// We assume that any existing aria-describedby attribute means
			// that the dialog content is marked up properly
			// otherwise we brute force the content as the description
			if (!this.element.find('[aria-describedby]').length) {
				this.uiDialog.attr({
					'aria-describedby': this.element.uniqueId().attr('id'),
				});
			}
		},

		_createTitlebar: function () {
			var uiDialogTitle;

			this.uiDialogTitlebar = $('<div>');
			this._addClass(
				this.uiDialogTitlebar,
				'ui-dialog-titlebar',
				'ui-widget-header ui-helper-clearfix'
			);
			this._on(this.uiDialogTitlebar, {
				mousedown: function (event) {
					// Don't prevent click on close button (#8838)
					// Focusing a dialog that is partially scrolled out of view
					// causes the browser to scroll it into view, preventing the click event
					if (!$(event.target).closest('.ui-dialog-titlebar-close')) {
						// Dialog isn't getting focus when dragging (#8063)
						this.uiDialog.trigger('focus');
					}
				},
			});

			// Support: IE
			// Use type="button" to prevent enter keypresses in textboxes from closing the
			// dialog in IE (#9312)
			this.uiDialogTitlebarClose = $("<button type='button'></button>")
				.button({
					label: $('<a>').text(this.options.closeText).html(),
					icon: 'ui-icon-closethick',
					showLabel: false,
				})
				.appendTo(this.uiDialogTitlebar);

			this._addClass(this.uiDialogTitlebarClose, 'ui-dialog-titlebar-close');
			this._on(this.uiDialogTitlebarClose, {
				click: function (event) {
					event.preventDefault();
					this.close(event);
				},
			});

			uiDialogTitle = $('<span>').uniqueId().prependTo(this.uiDialogTitlebar);
			this._addClass(uiDialogTitle, 'ui-dialog-title');
			this._title(uiDialogTitle);

			this.uiDialogTitlebar.prependTo(this.uiDialog);

			this.uiDialog.attr({
				'aria-labelledby': uiDialogTitle.attr('id'),
			});
		},

		_title: function (title) {
			if (this.options.title) {
				title.text(this.options.title);
			} else {
				title.html('&#160;');
			}
		},

		_createButtonPane: function () {
			this.uiDialogButtonPane = $('<div>');
			this._addClass(
				this.uiDialogButtonPane,
				'ui-dialog-buttonpane',
				'ui-widget-content ui-helper-clearfix'
			);

			this.uiButtonSet = $('<div>').appendTo(this.uiDialogButtonPane);
			this._addClass(this.uiButtonSet, 'ui-dialog-buttonset');

			this._createButtons();
		},

		_createButtons: function () {
			var that = this,
				buttons = this.options.buttons;

			// If we already have a button pane, remove it
			this.uiDialogButtonPane.remove();
			this.uiButtonSet.empty();

			if (
				$.isEmptyObject(buttons) ||
				(Array.isArray(buttons) && !buttons.length)
			) {
				this._removeClass(this.uiDialog, 'ui-dialog-buttons');
				return;
			}

			$.each(buttons, function (name, props) {
				var click, buttonOptions;
				props =
					typeof props === 'function' ? { click: props, text: name } : props;

				// Default to a non-submitting button
				props = $.extend({ type: 'button' }, props);

				// Change the context for the click callback to be the main element
				click = props.click;
				buttonOptions = {
					icon: props.icon,
					iconPosition: props.iconPosition,
					showLabel: props.showLabel,

					// Deprecated options
					icons: props.icons,
					text: props.text,
				};

				delete props.click;
				delete props.icon;
				delete props.iconPosition;
				delete props.showLabel;

				// Deprecated options
				delete props.icons;
				if (typeof props.text === 'boolean') {
					delete props.text;
				}

				$('<button></button>', props)
					.button(buttonOptions)
					.appendTo(that.uiButtonSet)
					.on('click', function () {
						click.apply(that.element[0], arguments);
					});
			});
			this._addClass(this.uiDialog, 'ui-dialog-buttons');
			this.uiDialogButtonPane.appendTo(this.uiDialog);
		},

		_makeDraggable: function () {
			var that = this,
				options = this.options;

			function filteredUi(ui) {
				return {
					position: ui.position,
					offset: ui.offset,
				};
			}

			this.uiDialog.draggable({
				cancel: '.ui-dialog-content, .ui-dialog-titlebar-close',
				handle: '.ui-dialog-titlebar',
				containment: 'document',
				start: function (event, ui) {
					that._addClass($(this), 'ui-dialog-dragging');
					that._blockFrames();
					that._trigger('dragStart', event, filteredUi(ui));
				},
				drag: function (event, ui) {
					that._trigger('drag', event, filteredUi(ui));
				},
				stop: function (event, ui) {
					var left = ui.offset.left - that.document.scrollLeft(),
						top = ui.offset.top - that.document.scrollTop();

					options.position = {
						my: 'left top',
						at:
							'left' +
							(left >= 0 ? '+' : '') +
							left +
							' ' +
							'top' +
							(top >= 0 ? '+' : '') +
							top,
						of: that.window,
					};
					that._removeClass($(this), 'ui-dialog-dragging');
					that._unblockFrames();
					that._trigger('dragStop', event, filteredUi(ui));
				},
			});
		},

		_makeResizable: function () {
			var that = this,
				options = this.options,
				handles = options.resizable,
				// .ui-resizable has position: relative defined in the stylesheet
				// but dialogs have to use absolute or fixed positioning
				position = this.uiDialog.css('position'),
				resizeHandles =
					typeof handles === 'string' ? handles : 'n,e,s,w,se,sw,ne,nw';

			function filteredUi(ui) {
				return {
					originalPosition: ui.originalPosition,
					originalSize: ui.originalSize,
					position: ui.position,
					size: ui.size,
				};
			}

			this.uiDialog
				.resizable({
					cancel: '.ui-dialog-content',
					containment: 'document',
					alsoResize: this.element,
					maxWidth: options.maxWidth,
					maxHeight: options.maxHeight,
					minWidth: options.minWidth,
					minHeight: this._minHeight(),
					handles: resizeHandles,
					start: function (event, ui) {
						that._addClass($(this), 'ui-dialog-resizing');
						that._blockFrames();
						that._trigger('resizeStart', event, filteredUi(ui));
					},
					resize: function (event, ui) {
						that._trigger('resize', event, filteredUi(ui));
					},
					stop: function (event, ui) {
						var offset = that.uiDialog.offset(),
							left = offset.left - that.document.scrollLeft(),
							top = offset.top - that.document.scrollTop();

						options.height = that.uiDialog.height();
						options.width = that.uiDialog.width();
						options.position = {
							my: 'left top',
							at:
								'left' +
								(left >= 0 ? '+' : '') +
								left +
								' ' +
								'top' +
								(top >= 0 ? '+' : '') +
								top,
							of: that.window,
						};
						that._removeClass($(this), 'ui-dialog-resizing');
						that._unblockFrames();
						that._trigger('resizeStop', event, filteredUi(ui));
					},
				})
				.css('position', position);
		},

		_trackFocus: function () {
			this._on(this.widget(), {
				focusin: function (event) {
					this._makeFocusTarget();
					this._focusedElement = $(event.target);
				},
			});
		},

		_makeFocusTarget: function () {
			this._untrackInstance();
			this._trackingInstances().unshift(this);
		},

		_untrackInstance: function () {
			var instances = this._trackingInstances(),
				exists = $.inArray(this, instances);
			if (exists !== -1) {
				instances.splice(exists, 1);
			}
		},

		_trackingInstances: function () {
			var instances = this.document.data('ui-dialog-instances');
			if (!instances) {
				instances = [];
				this.document.data('ui-dialog-instances', instances);
			}
			return instances;
		},

		_minHeight: function () {
			var options = this.options;

			return options.height === 'auto'
				? options.minHeight
				: Math.min(options.minHeight, options.height);
		},

		_position: function () {
			// Need to show the dialog to get the actual offset in the position plugin
			var isVisible = this.uiDialog.is(':visible');
			if (!isVisible) {
				this.uiDialog.show();
			}
			this.uiDialog.position(this.options.position);
			if (!isVisible) {
				this.uiDialog.hide();
			}
		},

		_setOptions: function (options) {
			var that = this,
				resize = false,
				resizableOptions = {};

			$.each(options, function (key, value) {
				that._setOption(key, value);

				if (key in that.sizeRelatedOptions) {
					resize = true;
				}
				if (key in that.resizableRelatedOptions) {
					resizableOptions[key] = value;
				}
			});

			if (resize) {
				this._size();
				this._position();
			}
			if (this.uiDialog.is(':data(ui-resizable)')) {
				this.uiDialog.resizable('option', resizableOptions);
			}
		},

		_setOption: function (key, value) {
			var isDraggable,
				isResizable,
				uiDialog = this.uiDialog;

			if (key === 'disabled') {
				return;
			}

			this._super(key, value);

			if (key === 'appendTo') {
				this.uiDialog.appendTo(this._appendTo());
			}

			if (key === 'buttons') {
				this._createButtons();
			}

			if (key === 'closeText') {
				this.uiDialogTitlebarClose.button({
					// Ensure that we always pass a string
					label: $('<a>')
						.text('' + this.options.closeText)
						.html(),
				});
			}

			if (key === 'draggable') {
				isDraggable = uiDialog.is(':data(ui-draggable)');
				if (isDraggable && !value) {
					uiDialog.draggable('destroy');
				}

				if (!isDraggable && value) {
					this._makeDraggable();
				}
			}

			if (key === 'position') {
				this._position();
			}

			if (key === 'resizable') {
				// currently resizable, becoming non-resizable
				isResizable = uiDialog.is(':data(ui-resizable)');
				if (isResizable && !value) {
					uiDialog.resizable('destroy');
				}

				// Currently resizable, changing handles
				if (isResizable && typeof value === 'string') {
					uiDialog.resizable('option', 'handles', value);
				}

				// Currently non-resizable, becoming resizable
				if (!isResizable && value !== false) {
					this._makeResizable();
				}
			}

			if (key === 'title') {
				this._title(this.uiDialogTitlebar.find('.ui-dialog-title'));
			}
		},

		_size: function () {
			// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content
			// divs will both have width and height set, so we need to reset them
			var nonContentHeight,
				minContentHeight,
				maxContentHeight,
				options = this.options;

			// Reset content sizing
			this.element.show().css({
				width: 'auto',
				minHeight: 0,
				maxHeight: 'none',
				height: 0,
			});

			if (options.minWidth > options.width) {
				options.width = options.minWidth;
			}

			// Reset wrapper sizing
			// determine the height of all the non-content elements
			nonContentHeight = this.uiDialog
				.css({
					height: 'auto',
					width: options.width,
				})
				.outerHeight();
			minContentHeight = Math.max(0, options.minHeight - nonContentHeight);
			maxContentHeight =
				typeof options.maxHeight === 'number'
					? Math.max(0, options.maxHeight - nonContentHeight)
					: 'none';

			if (options.height === 'auto') {
				this.element.css({
					minHeight: minContentHeight,
					maxHeight: maxContentHeight,
					height: 'auto',
				});
			} else {
				this.element.height(Math.max(0, options.height - nonContentHeight));
			}

			if (this.uiDialog.is(':data(ui-resizable)')) {
				this.uiDialog.resizable('option', 'minHeight', this._minHeight());
			}
		},

		_blockFrames: function () {
			this.iframeBlocks = this.document.find('iframe').map(function () {
				var iframe = $(this);

				return $('<div>')
					.css({
						position: 'absolute',
						width: iframe.outerWidth(),
						height: iframe.outerHeight(),
					})
					.appendTo(iframe.parent())
					.offset(iframe.offset())[0];
			});
		},

		_unblockFrames: function () {
			if (this.iframeBlocks) {
				this.iframeBlocks.remove();
				delete this.iframeBlocks;
			}
		},

		_allowInteraction: function (event) {
			if ($(event.target).closest('.ui-dialog').length) {
				return true;
			}

			// TODO: Remove hack when datepicker implements
			// the .ui-front logic (#8989)
			return !!$(event.target).closest('.ui-datepicker').length;
		},

		_createOverlay: function () {
			if (!this.options.modal) {
				return;
			}

			var jqMinor = $.fn.jquery.substring(0, 4);

			// We use a delay in case the overlay is created from an
			// event that we're going to be cancelling (#2804)
			var isOpening = true;
			this._delay(function () {
				isOpening = false;
			});

			if (!this.document.data('ui-dialog-overlays')) {
				// Prevent use of anchors and inputs
				// This doesn't use `_on()` because it is a shared event handler
				// across all open modal dialogs.
				this.document.on(
					'focusin.ui-dialog',
					function (event) {
						if (isOpening) {
							return;
						}

						var instance = this._trackingInstances()[0];
						if (!instance._allowInteraction(event)) {
							event.preventDefault();
							instance._focusTabbable();

							// Support: jQuery >=3.4 <3.6 only
							// Focus re-triggering in jQuery 3.4/3.5 makes the original element
							// have its focus event propagated last, breaking the re-targeting.
							// Trigger focus in a delay in addition if needed to avoid the issue
							// See https://github.com/jquery/jquery/issues/4382
							if (jqMinor === '3.4.' || jqMinor === '3.5.') {
								instance._delay(instance._restoreTabbableFocus);
							}
						}
					}.bind(this)
				);
			}

			this.overlay = $('<div>').appendTo(this._appendTo());

			this._addClass(this.overlay, null, 'ui-widget-overlay ui-front');
			this._on(this.overlay, {
				mousedown: '_keepFocus',
			});
			this.document.data(
				'ui-dialog-overlays',
				(this.document.data('ui-dialog-overlays') || 0) + 1
			);
		},

		_destroyOverlay: function () {
			if (!this.options.modal) {
				return;
			}

			if (this.overlay) {
				var overlays = this.document.data('ui-dialog-overlays') - 1;

				if (!overlays) {
					this.document.off('focusin.ui-dialog');
					this.document.removeData('ui-dialog-overlays');
				} else {
					this.document.data('ui-dialog-overlays', overlays);
				}

				this.overlay.remove();
				this.overlay = null;
			}
		},
	});

	// DEPRECATED
	// TODO: switch return back to widget declaration at top of file when this is removed
	if ($.uiBackCompat !== false) {
		// Backcompat for dialogClass option
		$.widget('ui.dialog', $.ui.dialog, {
			options: {
				dialogClass: '',
			},
			_createWrapper: function () {
				this._super();
				this.uiDialog.addClass(this.options.dialogClass);
			},
			_setOption: function (key, value) {
				if (key === 'dialogClass') {
					this.uiDialog.removeClass(this.options.dialogClass).addClass(value);
				}
				this._superApply(arguments);
			},
		});
	}

	var widgetsDialog = $.ui.dialog;

	/*!
	 * jQuery UI Progressbar 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Progressbar
	//>>group: Widgets
	/* eslint-disable max-len */
	//>>description: Displays a status indicator for loading state, standard percentage, and other progress indicators.
	/* eslint-enable max-len */
	//>>docs: http://api.jqueryui.com/progressbar/
	//>>demos: http://jqueryui.com/progressbar/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/progressbar.css
	//>>css.theme: ../../themes/base/theme.css

	var widgetsProgressbar = $.widget('ui.progressbar', {
		version: '1.13.1',
		options: {
			classes: {
				'ui-progressbar': 'ui-corner-all',
				'ui-progressbar-value': 'ui-corner-left',
				'ui-progressbar-complete': 'ui-corner-right',
			},
			max: 100,
			value: 0,

			change: null,
			complete: null,
		},

		min: 0,

		_create: function () {
			// Constrain initial value
			this.oldValue = this.options.value = this._constrainedValue();

			this.element.attr({
				// Only set static values; aria-valuenow and aria-valuemax are
				// set inside _refreshValue()
				role: 'progressbar',
				'aria-valuemin': this.min,
			});
			this._addClass('ui-progressbar', 'ui-widget ui-widget-content');

			this.valueDiv = $('<div>').appendTo(this.element);
			this._addClass(this.valueDiv, 'ui-progressbar-value', 'ui-widget-header');
			this._refreshValue();
		},

		_destroy: function () {
			this.element.removeAttr('role aria-valuemin aria-valuemax aria-valuenow');

			this.valueDiv.remove();
		},

		value: function (newValue) {
			if (newValue === undefined) {
				return this.options.value;
			}

			this.options.value = this._constrainedValue(newValue);
			this._refreshValue();
		},

		_constrainedValue: function (newValue) {
			if (newValue === undefined) {
				newValue = this.options.value;
			}

			this.indeterminate = newValue === false;

			// Sanitize value
			if (typeof newValue !== 'number') {
				newValue = 0;
			}

			return this.indeterminate
				? false
				: Math.min(this.options.max, Math.max(this.min, newValue));
		},

		_setOptions: function (options) {
			// Ensure "value" option is set after other values (like max)
			var value = options.value;
			delete options.value;

			this._super(options);

			this.options.value = this._constrainedValue(value);
			this._refreshValue();
		},

		_setOption: function (key, value) {
			if (key === 'max') {
				// Don't allow a max less than min
				value = Math.max(this.min, value);
			}
			this._super(key, value);
		},

		_setOptionDisabled: function (value) {
			this._super(value);

			this.element.attr('aria-disabled', value);
			this._toggleClass(null, 'ui-state-disabled', !!value);
		},

		_percentage: function () {
			return this.indeterminate
				? 100
				: (100 * (this.options.value - this.min)) /
						(this.options.max - this.min);
		},

		_refreshValue: function () {
			var value = this.options.value,
				percentage = this._percentage();

			this.valueDiv
				.toggle(this.indeterminate || value > this.min)
				.width(percentage.toFixed(0) + '%');

			this._toggleClass(
				this.valueDiv,
				'ui-progressbar-complete',
				null,
				value === this.options.max
			)._toggleClass('ui-progressbar-indeterminate', null, this.indeterminate);

			if (this.indeterminate) {
				this.element.removeAttr('aria-valuenow');
				if (!this.overlayDiv) {
					this.overlayDiv = $('<div>').appendTo(this.valueDiv);
					this._addClass(this.overlayDiv, 'ui-progressbar-overlay');
				}
			} else {
				this.element.attr({
					'aria-valuemax': this.options.max,
					'aria-valuenow': value,
				});
				if (this.overlayDiv) {
					this.overlayDiv.remove();
					this.overlayDiv = null;
				}
			}

			if (this.oldValue !== value) {
				this.oldValue = value;
				this._trigger('change');
			}
			if (value === this.options.max) {
				this._trigger('complete');
			}
		},
	});

	/*!
	 * jQuery UI Selectmenu 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Selectmenu
	//>>group: Widgets
	/* eslint-disable max-len */
	//>>description: Duplicates and extends the functionality of a native HTML select element, allowing it to be customizable in behavior and appearance far beyond the limitations of a native select.
	/* eslint-enable max-len */
	//>>docs: http://api.jqueryui.com/selectmenu/
	//>>demos: http://jqueryui.com/selectmenu/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/selectmenu.css, ../../themes/base/button.css
	//>>css.theme: ../../themes/base/theme.css

	var widgetsSelectmenu = $.widget('ui.selectmenu', [
		$.ui.formResetMixin,
		{
			version: '1.13.1',
			defaultElement: '<select>',
			options: {
				appendTo: null,
				classes: {
					'ui-selectmenu-button-open': 'ui-corner-top',
					'ui-selectmenu-button-closed': 'ui-corner-all',
				},
				disabled: null,
				icons: {
					button: 'ui-icon-triangle-1-s',
				},
				position: {
					my: 'left top',
					at: 'left bottom',
					collision: 'none',
				},
				width: false,

				// Callbacks
				change: null,
				close: null,
				focus: null,
				open: null,
				select: null,
			},

			_create: function () {
				var selectmenuId = this.element.uniqueId().attr('id');
				this.ids = {
					element: selectmenuId,
					button: selectmenuId + '-button',
					menu: selectmenuId + '-menu',
				};

				this._drawButton();
				this._drawMenu();
				this._bindFormResetHandler();

				this._rendered = false;
				this.menuItems = $();
			},

			_drawButton: function () {
				var icon,
					that = this,
					item = this._parseOption(
						this.element.find('option:selected'),
						this.element[0].selectedIndex
					);

				// Associate existing label with the new button
				this.labels = this.element.labels().attr('for', this.ids.button);
				this._on(this.labels, {
					click: function (event) {
						this.button.trigger('focus');
						event.preventDefault();
					},
				});

				// Hide original select element
				this.element.hide();

				// Create button
				this.button = $('<span>', {
					tabindex: this.options.disabled ? -1 : 0,
					id: this.ids.button,
					role: 'combobox',
					'aria-expanded': 'false',
					'aria-autocomplete': 'list',
					'aria-owns': this.ids.menu,
					'aria-haspopup': 'true',
					title: this.element.attr('title'),
				}).insertAfter(this.element);

				this._addClass(
					this.button,
					'ui-selectmenu-button ui-selectmenu-button-closed',
					'ui-button ui-widget'
				);

				icon = $('<span>').appendTo(this.button);
				this._addClass(
					icon,
					'ui-selectmenu-icon',
					'ui-icon ' + this.options.icons.button
				);
				this.buttonItem = this._renderButtonItem(item).appendTo(this.button);

				if (this.options.width !== false) {
					this._resizeButton();
				}

				this._on(this.button, this._buttonEvents);
				this.button.one('focusin', function () {
					// Delay rendering the menu items until the button receives focus.
					// The menu may have already been rendered via a programmatic open.
					if (!that._rendered) {
						that._refreshMenu();
					}
				});
			},

			_drawMenu: function () {
				var that = this;

				// Create menu
				this.menu = $('<ul>', {
					'aria-hidden': 'true',
					'aria-labelledby': this.ids.button,
					id: this.ids.menu,
				});

				// Wrap menu
				this.menuWrap = $('<div>').append(this.menu);
				this._addClass(this.menuWrap, 'ui-selectmenu-menu', 'ui-front');
				this.menuWrap.appendTo(this._appendTo());

				// Initialize menu widget
				this.menuInstance = this.menu
					.menu({
						classes: {
							'ui-menu': 'ui-corner-bottom',
						},
						role: 'listbox',
						select: function (event, ui) {
							event.preventDefault();

							// Support: IE8
							// If the item was selected via a click, the text selection
							// will be destroyed in IE
							that._setSelection();

							that._select(ui.item.data('ui-selectmenu-item'), event);
						},
						focus: function (event, ui) {
							var item = ui.item.data('ui-selectmenu-item');

							// Prevent inital focus from firing and check if its a newly focused item
							if (that.focusIndex != null && item.index !== that.focusIndex) {
								that._trigger('focus', event, { item: item });
								if (!that.isOpen) {
									that._select(item, event);
								}
							}
							that.focusIndex = item.index;

							that.button.attr(
								'aria-activedescendant',
								that.menuItems.eq(item.index).attr('id')
							);
						},
					})
					.menu('instance');

				// Don't close the menu on mouseleave
				this.menuInstance._off(this.menu, 'mouseleave');

				// Cancel the menu's collapseAll on document click
				this.menuInstance._closeOnDocumentClick = function () {
					return false;
				};

				// Selects often contain empty items, but never contain dividers
				this.menuInstance._isDivider = function () {
					return false;
				};
			},

			refresh: function () {
				this._refreshMenu();
				this.buttonItem.replaceWith(
					(this.buttonItem = this._renderButtonItem(
						// Fall back to an empty object in case there are no options
						this._getSelectedItem().data('ui-selectmenu-item') || {}
					))
				);
				if (this.options.width === null) {
					this._resizeButton();
				}
			},

			_refreshMenu: function () {
				var item,
					options = this.element.find('option');

				this.menu.empty();

				this._parseOptions(options);
				this._renderMenu(this.menu, this.items);

				this.menuInstance.refresh();
				this.menuItems = this.menu
					.find('li')
					.not('.ui-selectmenu-optgroup')
					.find('.ui-menu-item-wrapper');

				this._rendered = true;

				if (!options.length) {
					return;
				}

				item = this._getSelectedItem();

				// Update the menu to have the correct item focused
				this.menuInstance.focus(null, item);
				this._setAria(item.data('ui-selectmenu-item'));

				// Set disabled state
				this._setOption('disabled', this.element.prop('disabled'));
			},

			open: function (event) {
				if (this.options.disabled) {
					return;
				}

				// If this is the first time the menu is being opened, render the items
				if (!this._rendered) {
					this._refreshMenu();
				} else {
					// Menu clears focus on close, reset focus to selected item
					this._removeClass(
						this.menu.find('.ui-state-active'),
						null,
						'ui-state-active'
					);
					this.menuInstance.focus(null, this._getSelectedItem());
				}

				// If there are no options, don't open the menu
				if (!this.menuItems.length) {
					return;
				}

				this.isOpen = true;
				this._toggleAttr();
				this._resizeMenu();
				this._position();

				this._on(this.document, this._documentClick);

				this._trigger('open', event);
			},

			_position: function () {
				this.menuWrap.position(
					$.extend({ of: this.button }, this.options.position)
				);
			},

			close: function (event) {
				if (!this.isOpen) {
					return;
				}

				this.isOpen = false;
				this._toggleAttr();

				this.range = null;
				this._off(this.document);

				this._trigger('close', event);
			},

			widget: function () {
				return this.button;
			},

			menuWidget: function () {
				return this.menu;
			},

			_renderButtonItem: function (item) {
				var buttonItem = $('<span>');

				this._setText(buttonItem, item.label);
				this._addClass(buttonItem, 'ui-selectmenu-text');

				return buttonItem;
			},

			_renderMenu: function (ul, items) {
				var that = this,
					currentOptgroup = '';

				$.each(items, function (index, item) {
					var li;

					if (item.optgroup !== currentOptgroup) {
						li = $('<li>', {
							text: item.optgroup,
						});
						that._addClass(
							li,
							'ui-selectmenu-optgroup',
							'ui-menu-divider' +
								(item.element.parent('optgroup').prop('disabled')
									? ' ui-state-disabled'
									: '')
						);

						li.appendTo(ul);

						currentOptgroup = item.optgroup;
					}

					that._renderItemData(ul, item);
				});
			},

			_renderItemData: function (ul, item) {
				return this._renderItem(ul, item).data('ui-selectmenu-item', item);
			},

			_renderItem: function (ul, item) {
				var li = $('<li>'),
					wrapper = $('<div>', {
						title: item.element.attr('title'),
					});

				if (item.disabled) {
					this._addClass(li, null, 'ui-state-disabled');
				}
				this._setText(wrapper, item.label);

				return li.append(wrapper).appendTo(ul);
			},

			_setText: function (element, value) {
				if (value) {
					element.text(value);
				} else {
					element.html('&#160;');
				}
			},

			_move: function (direction, event) {
				var item,
					next,
					filter = '.ui-menu-item';

				if (this.isOpen) {
					item = this.menuItems.eq(this.focusIndex).parent('li');
				} else {
					item = this.menuItems.eq(this.element[0].selectedIndex).parent('li');
					filter += ':not(.ui-state-disabled)';
				}

				if (direction === 'first' || direction === 'last') {
					next =
						item[direction === 'first' ? 'prevAll' : 'nextAll'](filter).eq(-1);
				} else {
					next = item[direction + 'All'](filter).eq(0);
				}

				if (next.length) {
					this.menuInstance.focus(event, next);
				}
			},

			_getSelectedItem: function () {
				return this.menuItems.eq(this.element[0].selectedIndex).parent('li');
			},

			_toggle: function (event) {
				this[this.isOpen ? 'close' : 'open'](event);
			},

			_setSelection: function () {
				var selection;

				if (!this.range) {
					return;
				}

				if (window.getSelection) {
					selection = window.getSelection();
					selection.removeAllRanges();
					selection.addRange(this.range);

					// Support: IE8
				} else {
					this.range.select();
				}

				// Support: IE
				// Setting the text selection kills the button focus in IE, but
				// restoring the focus doesn't kill the selection.
				this.button.focus();
			},

			_documentClick: {
				mousedown: function (event) {
					if (!this.isOpen) {
						return;
					}

					if (
						!$(event.target).closest(
							'.ui-selectmenu-menu, #' + $.escapeSelector(this.ids.button)
						).length
					) {
						this.close(event);
					}
				},
			},

			_buttonEvents: {
				// Prevent text selection from being reset when interacting with the selectmenu (#10144)
				mousedown: function () {
					var selection;

					if (window.getSelection) {
						selection = window.getSelection();
						if (selection.rangeCount) {
							this.range = selection.getRangeAt(0);
						}

						// Support: IE8
					} else {
						this.range = document.selection.createRange();
					}
				},

				click: function (event) {
					this._setSelection();
					this._toggle(event);
				},

				keydown: function (event) {
					var preventDefault = true;
					switch (event.keyCode) {
						case $.ui.keyCode.TAB:
						case $.ui.keyCode.ESCAPE:
							this.close(event);
							preventDefault = false;
							break;
						case $.ui.keyCode.ENTER:
							if (this.isOpen) {
								this._selectFocusedItem(event);
							}
							break;
						case $.ui.keyCode.UP:
							if (event.altKey) {
								this._toggle(event);
							} else {
								this._move('prev', event);
							}
							break;
						case $.ui.keyCode.DOWN:
							if (event.altKey) {
								this._toggle(event);
							} else {
								this._move('next', event);
							}
							break;
						case $.ui.keyCode.SPACE:
							if (this.isOpen) {
								this._selectFocusedItem(event);
							} else {
								this._toggle(event);
							}
							break;
						case $.ui.keyCode.LEFT:
							this._move('prev', event);
							break;
						case $.ui.keyCode.RIGHT:
							this._move('next', event);
							break;
						case $.ui.keyCode.HOME:
						case $.ui.keyCode.PAGE_UP:
							this._move('first', event);
							break;
						case $.ui.keyCode.END:
						case $.ui.keyCode.PAGE_DOWN:
							this._move('last', event);
							break;
						default:
							this.menu.trigger(event);
							preventDefault = false;
					}

					if (preventDefault) {
						event.preventDefault();
					}
				},
			},

			_selectFocusedItem: function (event) {
				var item = this.menuItems.eq(this.focusIndex).parent('li');
				if (!item.hasClass('ui-state-disabled')) {
					this._select(item.data('ui-selectmenu-item'), event);
				}
			},

			_select: function (item, event) {
				var oldIndex = this.element[0].selectedIndex;

				// Change native select element
				this.element[0].selectedIndex = item.index;
				this.buttonItem.replaceWith(
					(this.buttonItem = this._renderButtonItem(item))
				);
				this._setAria(item);
				this._trigger('select', event, { item: item });

				if (item.index !== oldIndex) {
					this._trigger('change', event, { item: item });
				}

				this.close(event);
			},

			_setAria: function (item) {
				var id = this.menuItems.eq(item.index).attr('id');

				this.button.attr({
					'aria-labelledby': id,
					'aria-activedescendant': id,
				});
				this.menu.attr('aria-activedescendant', id);
			},

			_setOption: function (key, value) {
				if (key === 'icons') {
					var icon = this.button.find('span.ui-icon');
					this._removeClass(icon, null, this.options.icons.button)._addClass(
						icon,
						null,
						value.button
					);
				}

				this._super(key, value);

				if (key === 'appendTo') {
					this.menuWrap.appendTo(this._appendTo());
				}

				if (key === 'width') {
					this._resizeButton();
				}
			},

			_setOptionDisabled: function (value) {
				this._super(value);

				this.menuInstance.option('disabled', value);
				this.button.attr('aria-disabled', value);
				this._toggleClass(this.button, null, 'ui-state-disabled', value);

				this.element.prop('disabled', value);
				if (value) {
					this.button.attr('tabindex', -1);
					this.close();
				} else {
					this.button.attr('tabindex', 0);
				}
			},

			_appendTo: function () {
				var element = this.options.appendTo;

				if (element) {
					element =
						element.jquery || element.nodeType
							? $(element)
							: this.document.find(element).eq(0);
				}

				if (!element || !element[0]) {
					element = this.element.closest('.ui-front, dialog');
				}

				if (!element.length) {
					element = this.document[0].body;
				}

				return element;
			},

			_toggleAttr: function () {
				this.button.attr('aria-expanded', this.isOpen);

				// We can't use two _toggleClass() calls here, because we need to make sure
				// we always remove classes first and add them second, otherwise if both classes have the
				// same theme class, it will be removed after we add it.
				this._removeClass(
					this.button,
					'ui-selectmenu-button-' + (this.isOpen ? 'closed' : 'open')
				)
					._addClass(
						this.button,
						'ui-selectmenu-button-' + (this.isOpen ? 'open' : 'closed')
					)
					._toggleClass(this.menuWrap, 'ui-selectmenu-open', null, this.isOpen);

				this.menu.attr('aria-hidden', !this.isOpen);
			},

			_resizeButton: function () {
				var width = this.options.width;

				// For `width: false`, just remove inline style and stop
				if (width === false) {
					this.button.css('width', '');
					return;
				}

				// For `width: null`, match the width of the original element
				if (width === null) {
					width = this.element.show().outerWidth();
					this.element.hide();
				}

				this.button.outerWidth(width);
			},

			_resizeMenu: function () {
				this.menu.outerWidth(
					Math.max(
						this.button.outerWidth(),

						// Support: IE10
						// IE10 wraps long text (possibly a rounding bug)
						// so we add 1px to avoid the wrapping
						this.menu.width('').outerWidth() + 1
					)
				);
			},

			_getCreateOptions: function () {
				var options = this._super();

				options.disabled = this.element.prop('disabled');

				return options;
			},

			_parseOptions: function (options) {
				var that = this,
					data = [];
				options.each(function (index, item) {
					if (item.hidden) {
						return;
					}

					data.push(that._parseOption($(item), index));
				});
				this.items = data;
			},

			_parseOption: function (option, index) {
				var optgroup = option.parent('optgroup');

				return {
					element: option,
					index: index,
					value: option.val(),
					label: option.text(),
					optgroup: optgroup.attr('label') || '',
					disabled: optgroup.prop('disabled') || option.prop('disabled'),
				};
			},

			_destroy: function () {
				this._unbindFormResetHandler();
				this.menuWrap.remove();
				this.button.remove();
				this.element.show();
				this.element.removeUniqueId();
				this.labels.attr('for', this.ids.element);
			},
		},
	]);

	/*!
	 * jQuery UI Slider 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Slider
	//>>group: Widgets
	//>>description: Displays a flexible slider with ranges and accessibility via keyboard.
	//>>docs: http://api.jqueryui.com/slider/
	//>>demos: http://jqueryui.com/slider/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/slider.css
	//>>css.theme: ../../themes/base/theme.css

	var widgetsSlider = $.widget('ui.slider', $.ui.mouse, {
		version: '1.13.1',
		widgetEventPrefix: 'slide',

		options: {
			animate: false,
			classes: {
				'ui-slider': 'ui-corner-all',
				'ui-slider-handle': 'ui-corner-all',

				// Note: ui-widget-header isn't the most fittingly semantic framework class for this
				// element, but worked best visually with a variety of themes
				'ui-slider-range': 'ui-corner-all ui-widget-header',
			},
			distance: 0,
			max: 100,
			min: 0,
			orientation: 'horizontal',
			range: false,
			step: 1,
			value: 0,
			values: null,

			// Callbacks
			change: null,
			slide: null,
			start: null,
			stop: null,
		},

		// Number of pages in a slider
		// (how many times can you page up/down to go through the whole range)
		numPages: 5,

		_create: function () {
			this._keySliding = false;
			this._mouseSliding = false;
			this._animateOff = true;
			this._handleIndex = null;
			this._detectOrientation();
			this._mouseInit();
			this._calculateNewMax();

			this._addClass(
				'ui-slider ui-slider-' + this.orientation,
				'ui-widget ui-widget-content'
			);

			this._refresh();

			this._animateOff = false;
		},

		_refresh: function () {
			this._createRange();
			this._createHandles();
			this._setupEvents();
			this._refreshValue();
		},

		_createHandles: function () {
			var i,
				handleCount,
				options = this.options,
				existingHandles = this.element.find('.ui-slider-handle'),
				handle = "<span tabindex='0'></span>",
				handles = [];

			handleCount = (options.values && options.values.length) || 1;

			if (existingHandles.length > handleCount) {
				existingHandles.slice(handleCount).remove();
				existingHandles = existingHandles.slice(0, handleCount);
			}

			for (i = existingHandles.length; i < handleCount; i++) {
				handles.push(handle);
			}

			this.handles = existingHandles.add(
				$(handles.join('')).appendTo(this.element)
			);

			this._addClass(this.handles, 'ui-slider-handle', 'ui-state-default');

			this.handle = this.handles.eq(0);

			this.handles.each(function (i) {
				$(this).data('ui-slider-handle-index', i).attr('tabIndex', 0);
			});
		},

		_createRange: function () {
			var options = this.options;

			if (options.range) {
				if (options.range === true) {
					if (!options.values) {
						options.values = [this._valueMin(), this._valueMin()];
					} else if (options.values.length && options.values.length !== 2) {
						options.values = [options.values[0], options.values[0]];
					} else if (Array.isArray(options.values)) {
						options.values = options.values.slice(0);
					}
				}

				if (!this.range || !this.range.length) {
					this.range = $('<div>').appendTo(this.element);

					this._addClass(this.range, 'ui-slider-range');
				} else {
					this._removeClass(
						this.range,
						'ui-slider-range-min ui-slider-range-max'
					);

					// Handle range switching from true to min/max
					this.range.css({
						left: '',
						bottom: '',
					});
				}
				if (options.range === 'min' || options.range === 'max') {
					this._addClass(this.range, 'ui-slider-range-' + options.range);
				}
			} else {
				if (this.range) {
					this.range.remove();
				}
				this.range = null;
			}
		},

		_setupEvents: function () {
			this._off(this.handles);
			this._on(this.handles, this._handleEvents);
			this._hoverable(this.handles);
			this._focusable(this.handles);
		},

		_destroy: function () {
			this.handles.remove();
			if (this.range) {
				this.range.remove();
			}

			this._mouseDestroy();
		},

		_mouseCapture: function (event) {
			var position,
				normValue,
				distance,
				closestHandle,
				index,
				allowed,
				offset,
				mouseOverHandle,
				that = this,
				o = this.options;

			if (o.disabled) {
				return false;
			}

			this.elementSize = {
				width: this.element.outerWidth(),
				height: this.element.outerHeight(),
			};
			this.elementOffset = this.element.offset();

			position = { x: event.pageX, y: event.pageY };
			normValue = this._normValueFromMouse(position);
			distance = this._valueMax() - this._valueMin() + 1;
			this.handles.each(function (i) {
				var thisDistance = Math.abs(normValue - that.values(i));
				if (
					distance > thisDistance ||
					(distance === thisDistance &&
						(i === that._lastChangedValue || that.values(i) === o.min))
				) {
					distance = thisDistance;
					closestHandle = $(this);
					index = i;
				}
			});

			allowed = this._start(event, index);
			if (allowed === false) {
				return false;
			}
			this._mouseSliding = true;

			this._handleIndex = index;

			this._addClass(closestHandle, null, 'ui-state-active');
			closestHandle.trigger('focus');

			offset = closestHandle.offset();
			mouseOverHandle = !$(event.target)
				.parents()
				.addBack()
				.is('.ui-slider-handle');
			this._clickOffset = mouseOverHandle
				? { left: 0, top: 0 }
				: {
						left: event.pageX - offset.left - closestHandle.width() / 2,
						top:
							event.pageY -
							offset.top -
							closestHandle.height() / 2 -
							(parseInt(closestHandle.css('borderTopWidth'), 10) || 0) -
							(parseInt(closestHandle.css('borderBottomWidth'), 10) || 0) +
							(parseInt(closestHandle.css('marginTop'), 10) || 0),
				  };

			if (!this.handles.hasClass('ui-state-hover')) {
				this._slide(event, index, normValue);
			}
			this._animateOff = true;
			return true;
		},

		_mouseStart: function () {
			return true;
		},

		_mouseDrag: function (event) {
			var position = { x: event.pageX, y: event.pageY },
				normValue = this._normValueFromMouse(position);

			this._slide(event, this._handleIndex, normValue);

			return false;
		},

		_mouseStop: function (event) {
			this._removeClass(this.handles, null, 'ui-state-active');
			this._mouseSliding = false;

			this._stop(event, this._handleIndex);
			this._change(event, this._handleIndex);

			this._handleIndex = null;
			this._clickOffset = null;
			this._animateOff = false;

			return false;
		},

		_detectOrientation: function () {
			this.orientation =
				this.options.orientation === 'vertical' ? 'vertical' : 'horizontal';
		},

		_normValueFromMouse: function (position) {
			var pixelTotal, pixelMouse, percentMouse, valueTotal, valueMouse;

			if (this.orientation === 'horizontal') {
				pixelTotal = this.elementSize.width;
				pixelMouse =
					position.x -
					this.elementOffset.left -
					(this._clickOffset ? this._clickOffset.left : 0);
			} else {
				pixelTotal = this.elementSize.height;
				pixelMouse =
					position.y -
					this.elementOffset.top -
					(this._clickOffset ? this._clickOffset.top : 0);
			}

			percentMouse = pixelMouse / pixelTotal;
			if (percentMouse > 1) {
				percentMouse = 1;
			}
			if (percentMouse < 0) {
				percentMouse = 0;
			}
			if (this.orientation === 'vertical') {
				percentMouse = 1 - percentMouse;
			}

			valueTotal = this._valueMax() - this._valueMin();
			valueMouse = this._valueMin() + percentMouse * valueTotal;

			return this._trimAlignValue(valueMouse);
		},

		_uiHash: function (index, value, values) {
			var uiHash = {
				handle: this.handles[index],
				handleIndex: index,
				value: value !== undefined ? value : this.value(),
			};

			if (this._hasMultipleValues()) {
				uiHash.value = value !== undefined ? value : this.values(index);
				uiHash.values = values || this.values();
			}

			return uiHash;
		},

		_hasMultipleValues: function () {
			return this.options.values && this.options.values.length;
		},

		_start: function (event, index) {
			return this._trigger('start', event, this._uiHash(index));
		},

		_slide: function (event, index, newVal) {
			var allowed,
				otherVal,
				currentValue = this.value(),
				newValues = this.values();

			if (this._hasMultipleValues()) {
				otherVal = this.values(index ? 0 : 1);
				currentValue = this.values(index);

				if (this.options.values.length === 2 && this.options.range === true) {
					newVal =
						index === 0
							? Math.min(otherVal, newVal)
							: Math.max(otherVal, newVal);
				}

				newValues[index] = newVal;
			}

			if (newVal === currentValue) {
				return;
			}

			allowed = this._trigger(
				'slide',
				event,
				this._uiHash(index, newVal, newValues)
			);

			// A slide can be canceled by returning false from the slide callback
			if (allowed === false) {
				return;
			}

			if (this._hasMultipleValues()) {
				this.values(index, newVal);
			} else {
				this.value(newVal);
			}
		},

		_stop: function (event, index) {
			this._trigger('stop', event, this._uiHash(index));
		},

		_change: function (event, index) {
			if (!this._keySliding && !this._mouseSliding) {
				//store the last changed value index for reference when handles overlap
				this._lastChangedValue = index;
				this._trigger('change', event, this._uiHash(index));
			}
		},

		value: function (newValue) {
			if (arguments.length) {
				this.options.value = this._trimAlignValue(newValue);
				this._refreshValue();
				this._change(null, 0);
				return;
			}

			return this._value();
		},

		values: function (index, newValue) {
			var vals, newValues, i;

			if (arguments.length > 1) {
				this.options.values[index] = this._trimAlignValue(newValue);
				this._refreshValue();
				this._change(null, index);
				return;
			}

			if (arguments.length) {
				if (Array.isArray(arguments[0])) {
					vals = this.options.values;
					newValues = arguments[0];
					for (i = 0; i < vals.length; i += 1) {
						vals[i] = this._trimAlignValue(newValues[i]);
						this._change(null, i);
					}
					this._refreshValue();
				} else {
					if (this._hasMultipleValues()) {
						return this._values(index);
					} else {
						return this.value();
					}
				}
			} else {
				return this._values();
			}
		},

		_setOption: function (key, value) {
			var i,
				valsLength = 0;

			if (key === 'range' && this.options.range === true) {
				if (value === 'min') {
					this.options.value = this._values(0);
					this.options.values = null;
				} else if (value === 'max') {
					this.options.value = this._values(this.options.values.length - 1);
					this.options.values = null;
				}
			}

			if (Array.isArray(this.options.values)) {
				valsLength = this.options.values.length;
			}

			this._super(key, value);

			switch (key) {
				case 'orientation':
					this._detectOrientation();
					this._removeClass(
						'ui-slider-horizontal ui-slider-vertical'
					)._addClass('ui-slider-' + this.orientation);
					this._refreshValue();
					if (this.options.range) {
						this._refreshRange(value);
					}

					// Reset positioning from previous orientation
					this.handles.css(value === 'horizontal' ? 'bottom' : 'left', '');
					break;
				case 'value':
					this._animateOff = true;
					this._refreshValue();
					this._change(null, 0);
					this._animateOff = false;
					break;
				case 'values':
					this._animateOff = true;
					this._refreshValue();

					// Start from the last handle to prevent unreachable handles (#9046)
					for (i = valsLength - 1; i >= 0; i--) {
						this._change(null, i);
					}
					this._animateOff = false;
					break;
				case 'step':
				case 'min':
				case 'max':
					this._animateOff = true;
					this._calculateNewMax();
					this._refreshValue();
					this._animateOff = false;
					break;
				case 'range':
					this._animateOff = true;
					this._refresh();
					this._animateOff = false;
					break;
			}
		},

		_setOptionDisabled: function (value) {
			this._super(value);

			this._toggleClass(null, 'ui-state-disabled', !!value);
		},

		//internal value getter
		// _value() returns value trimmed by min and max, aligned by step
		_value: function () {
			var val = this.options.value;
			val = this._trimAlignValue(val);

			return val;
		},

		//internal values getter
		// _values() returns array of values trimmed by min and max, aligned by step
		// _values( index ) returns single value trimmed by min and max, aligned by step
		_values: function (index) {
			var val, vals, i;

			if (arguments.length) {
				val = this.options.values[index];
				val = this._trimAlignValue(val);

				return val;
			} else if (this._hasMultipleValues()) {
				// .slice() creates a copy of the array
				// this copy gets trimmed by min and max and then returned
				vals = this.options.values.slice();
				for (i = 0; i < vals.length; i += 1) {
					vals[i] = this._trimAlignValue(vals[i]);
				}

				return vals;
			} else {
				return [];
			}
		},

		// Returns the step-aligned value that val is closest to, between (inclusive) min and max
		_trimAlignValue: function (val) {
			if (val <= this._valueMin()) {
				return this._valueMin();
			}
			if (val >= this._valueMax()) {
				return this._valueMax();
			}
			var step = this.options.step > 0 ? this.options.step : 1,
				valModStep = (val - this._valueMin()) % step,
				alignValue = val - valModStep;

			if (Math.abs(valModStep) * 2 >= step) {
				alignValue += valModStep > 0 ? step : -step;
			}

			// Since JavaScript has problems with large floats, round
			// the final value to 5 digits after the decimal point (see #4124)
			return parseFloat(alignValue.toFixed(5));
		},

		_calculateNewMax: function () {
			var max = this.options.max,
				min = this._valueMin(),
				step = this.options.step,
				aboveMin = Math.round((max - min) / step) * step;
			max = aboveMin + min;
			if (max > this.options.max) {
				//If max is not divisible by step, rounding off may increase its value
				max -= step;
			}
			this.max = parseFloat(max.toFixed(this._precision()));
		},

		_precision: function () {
			var precision = this._precisionOf(this.options.step);
			if (this.options.min !== null) {
				precision = Math.max(precision, this._precisionOf(this.options.min));
			}
			return precision;
		},

		_precisionOf: function (num) {
			var str = num.toString(),
				decimal = str.indexOf('.');
			return decimal === -1 ? 0 : str.length - decimal - 1;
		},

		_valueMin: function () {
			return this.options.min;
		},

		_valueMax: function () {
			return this.max;
		},

		_refreshRange: function (orientation) {
			if (orientation === 'vertical') {
				this.range.css({ width: '', left: '' });
			}
			if (orientation === 'horizontal') {
				this.range.css({ height: '', bottom: '' });
			}
		},

		_refreshValue: function () {
			var lastValPercent,
				valPercent,
				value,
				valueMin,
				valueMax,
				oRange = this.options.range,
				o = this.options,
				that = this,
				animate = !this._animateOff ? o.animate : false,
				_set = {};

			if (this._hasMultipleValues()) {
				this.handles.each(function (i) {
					valPercent =
						((that.values(i) - that._valueMin()) /
							(that._valueMax() - that._valueMin())) *
						100;
					_set[that.orientation === 'horizontal' ? 'left' : 'bottom'] =
						valPercent + '%';
					$(this).stop(1, 1)[animate ? 'animate' : 'css'](_set, o.animate);
					if (that.options.range === true) {
						if (that.orientation === 'horizontal') {
							if (i === 0) {
								that.range.stop(1, 1)[animate ? 'animate' : 'css'](
									{
										left: valPercent + '%',
									},
									o.animate
								);
							}
							if (i === 1) {
								that.range[animate ? 'animate' : 'css'](
									{
										width: valPercent - lastValPercent + '%',
									},
									{
										queue: false,
										duration: o.animate,
									}
								);
							}
						} else {
							if (i === 0) {
								that.range.stop(1, 1)[animate ? 'animate' : 'css'](
									{
										bottom: valPercent + '%',
									},
									o.animate
								);
							}
							if (i === 1) {
								that.range[animate ? 'animate' : 'css'](
									{
										height: valPercent - lastValPercent + '%',
									},
									{
										queue: false,
										duration: o.animate,
									}
								);
							}
						}
					}
					lastValPercent = valPercent;
				});
			} else {
				value = this.value();
				valueMin = this._valueMin();
				valueMax = this._valueMax();
				valPercent =
					valueMax !== valueMin
						? ((value - valueMin) / (valueMax - valueMin)) * 100
						: 0;
				_set[this.orientation === 'horizontal' ? 'left' : 'bottom'] =
					valPercent + '%';
				this.handle.stop(1, 1)[animate ? 'animate' : 'css'](_set, o.animate);

				if (oRange === 'min' && this.orientation === 'horizontal') {
					this.range.stop(1, 1)[animate ? 'animate' : 'css'](
						{
							width: valPercent + '%',
						},
						o.animate
					);
				}
				if (oRange === 'max' && this.orientation === 'horizontal') {
					this.range.stop(1, 1)[animate ? 'animate' : 'css'](
						{
							width: 100 - valPercent + '%',
						},
						o.animate
					);
				}
				if (oRange === 'min' && this.orientation === 'vertical') {
					this.range.stop(1, 1)[animate ? 'animate' : 'css'](
						{
							height: valPercent + '%',
						},
						o.animate
					);
				}
				if (oRange === 'max' && this.orientation === 'vertical') {
					this.range.stop(1, 1)[animate ? 'animate' : 'css'](
						{
							height: 100 - valPercent + '%',
						},
						o.animate
					);
				}
			}
		},

		_handleEvents: {
			keydown: function (event) {
				var allowed,
					curVal,
					newVal,
					step,
					index = $(event.target).data('ui-slider-handle-index');

				switch (event.keyCode) {
					case $.ui.keyCode.HOME:
					case $.ui.keyCode.END:
					case $.ui.keyCode.PAGE_UP:
					case $.ui.keyCode.PAGE_DOWN:
					case $.ui.keyCode.UP:
					case $.ui.keyCode.RIGHT:
					case $.ui.keyCode.DOWN:
					case $.ui.keyCode.LEFT:
						event.preventDefault();
						if (!this._keySliding) {
							this._keySliding = true;
							this._addClass($(event.target), null, 'ui-state-active');
							allowed = this._start(event, index);
							if (allowed === false) {
								return;
							}
						}
						break;
				}

				step = this.options.step;
				if (this._hasMultipleValues()) {
					curVal = newVal = this.values(index);
				} else {
					curVal = newVal = this.value();
				}

				switch (event.keyCode) {
					case $.ui.keyCode.HOME:
						newVal = this._valueMin();
						break;
					case $.ui.keyCode.END:
						newVal = this._valueMax();
						break;
					case $.ui.keyCode.PAGE_UP:
						newVal = this._trimAlignValue(
							curVal + (this._valueMax() - this._valueMin()) / this.numPages
						);
						break;
					case $.ui.keyCode.PAGE_DOWN:
						newVal = this._trimAlignValue(
							curVal - (this._valueMax() - this._valueMin()) / this.numPages
						);
						break;
					case $.ui.keyCode.UP:
					case $.ui.keyCode.RIGHT:
						if (curVal === this._valueMax()) {
							return;
						}
						newVal = this._trimAlignValue(curVal + step);
						break;
					case $.ui.keyCode.DOWN:
					case $.ui.keyCode.LEFT:
						if (curVal === this._valueMin()) {
							return;
						}
						newVal = this._trimAlignValue(curVal - step);
						break;
				}

				this._slide(event, index, newVal);
			},
			keyup: function (event) {
				var index = $(event.target).data('ui-slider-handle-index');

				if (this._keySliding) {
					this._keySliding = false;
					this._stop(event, index);
					this._change(event, index);
					this._removeClass($(event.target), null, 'ui-state-active');
				}
			},
		},
	});

	/*!
	 * jQuery UI Spinner 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Spinner
	//>>group: Widgets
	//>>description: Displays buttons to easily input numbers via the keyboard or mouse.
	//>>docs: http://api.jqueryui.com/spinner/
	//>>demos: http://jqueryui.com/spinner/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/spinner.css
	//>>css.theme: ../../themes/base/theme.css

	function spinnerModifier(fn) {
		return function () {
			var previous = this.element.val();
			fn.apply(this, arguments);
			this._refresh();
			if (previous !== this.element.val()) {
				this._trigger('change');
			}
		};
	}

	$.widget('ui.spinner', {
		version: '1.13.1',
		defaultElement: '<input>',
		widgetEventPrefix: 'spin',
		options: {
			classes: {
				'ui-spinner': 'ui-corner-all',
				'ui-spinner-down': 'ui-corner-br',
				'ui-spinner-up': 'ui-corner-tr',
			},
			culture: null,
			icons: {
				down: 'ui-icon-triangle-1-s',
				up: 'ui-icon-triangle-1-n',
			},
			incremental: true,
			max: null,
			min: null,
			numberFormat: null,
			page: 10,
			step: 1,

			change: null,
			spin: null,
			start: null,
			stop: null,
		},

		_create: function () {
			// handle string values that need to be parsed
			this._setOption('max', this.options.max);
			this._setOption('min', this.options.min);
			this._setOption('step', this.options.step);

			// Only format if there is a value, prevents the field from being marked
			// as invalid in Firefox, see #9573.
			if (this.value() !== '') {
				// Format the value, but don't constrain.
				this._value(this.element.val(), true);
			}

			this._draw();
			this._on(this._events);
			this._refresh();

			// Turning off autocomplete prevents the browser from remembering the
			// value when navigating through history, so we re-enable autocomplete
			// if the page is unloaded before the widget is destroyed. #7790
			this._on(this.window, {
				beforeunload: function () {
					this.element.removeAttr('autocomplete');
				},
			});
		},

		_getCreateOptions: function () {
			var options = this._super();
			var element = this.element;

			$.each(['min', 'max', 'step'], function (i, option) {
				var value = element.attr(option);
				if (value != null && value.length) {
					options[option] = value;
				}
			});

			return options;
		},

		_events: {
			keydown: function (event) {
				if (this._start(event) && this._keydown(event)) {
					event.preventDefault();
				}
			},
			keyup: '_stop',
			focus: function () {
				this.previous = this.element.val();
			},
			blur: function (event) {
				if (this.cancelBlur) {
					delete this.cancelBlur;
					return;
				}

				this._stop();
				this._refresh();
				if (this.previous !== this.element.val()) {
					this._trigger('change', event);
				}
			},
			mousewheel: function (event, delta) {
				var activeElement = $.ui.safeActiveElement(this.document[0]);
				var isActive = this.element[0] === activeElement;

				if (!isActive || !delta) {
					return;
				}

				if (!this.spinning && !this._start(event)) {
					return false;
				}

				this._spin((delta > 0 ? 1 : -1) * this.options.step, event);
				clearTimeout(this.mousewheelTimer);
				this.mousewheelTimer = this._delay(function () {
					if (this.spinning) {
						this._stop(event);
					}
				}, 100);
				event.preventDefault();
			},
			'mousedown .ui-spinner-button': function (event) {
				var previous;

				// We never want the buttons to have focus; whenever the user is
				// interacting with the spinner, the focus should be on the input.
				// If the input is focused then this.previous is properly set from
				// when the input first received focus. If the input is not focused
				// then we need to set this.previous based on the value before spinning.
				previous =
					this.element[0] === $.ui.safeActiveElement(this.document[0])
						? this.previous
						: this.element.val();
				function checkFocus() {
					var isActive =
						this.element[0] === $.ui.safeActiveElement(this.document[0]);
					if (!isActive) {
						this.element.trigger('focus');
						this.previous = previous;

						// support: IE
						// IE sets focus asynchronously, so we need to check if focus
						// moved off of the input because the user clicked on the button.
						this._delay(function () {
							this.previous = previous;
						});
					}
				}

				// Ensure focus is on (or stays on) the text field
				event.preventDefault();
				checkFocus.call(this);

				// Support: IE
				// IE doesn't prevent moving focus even with event.preventDefault()
				// so we set a flag to know when we should ignore the blur event
				// and check (again) if focus moved off of the input.
				this.cancelBlur = true;
				this._delay(function () {
					delete this.cancelBlur;
					checkFocus.call(this);
				});

				if (this._start(event) === false) {
					return;
				}

				this._repeat(
					null,
					$(event.currentTarget).hasClass('ui-spinner-up') ? 1 : -1,
					event
				);
			},
			'mouseup .ui-spinner-button': '_stop',
			'mouseenter .ui-spinner-button': function (event) {
				// button will add ui-state-active if mouse was down while mouseleave and kept down
				if (!$(event.currentTarget).hasClass('ui-state-active')) {
					return;
				}

				if (this._start(event) === false) {
					return false;
				}
				this._repeat(
					null,
					$(event.currentTarget).hasClass('ui-spinner-up') ? 1 : -1,
					event
				);
			},

			// TODO: do we really want to consider this a stop?
			// shouldn't we just stop the repeater and wait until mouseup before
			// we trigger the stop event?
			'mouseleave .ui-spinner-button': '_stop',
		},

		// Support mobile enhanced option and make backcompat more sane
		_enhance: function () {
			this.uiSpinner = this.element
				.attr('autocomplete', 'off')
				.wrap('<span>')
				.parent()

				// Add buttons
				.append('<a></a><a></a>');
		},

		_draw: function () {
			this._enhance();

			this._addClass(
				this.uiSpinner,
				'ui-spinner',
				'ui-widget ui-widget-content'
			);
			this._addClass('ui-spinner-input');

			this.element.attr('role', 'spinbutton');

			// Button bindings
			this.buttons = this.uiSpinner
				.children('a')
				.attr('tabIndex', -1)
				.attr('aria-hidden', true)
				.button({
					classes: {
						'ui-button': '',
					},
				});

			// TODO: Right now button does not support classes this is already updated in button PR
			this._removeClass(this.buttons, 'ui-corner-all');

			this._addClass(this.buttons.first(), 'ui-spinner-button ui-spinner-up');
			this._addClass(this.buttons.last(), 'ui-spinner-button ui-spinner-down');
			this.buttons.first().button({
				icon: this.options.icons.up,
				showLabel: false,
			});
			this.buttons.last().button({
				icon: this.options.icons.down,
				showLabel: false,
			});

			// IE 6 doesn't understand height: 50% for the buttons
			// unless the wrapper has an explicit height
			if (
				this.buttons.height() > Math.ceil(this.uiSpinner.height() * 0.5) &&
				this.uiSpinner.height() > 0
			) {
				this.uiSpinner.height(this.uiSpinner.height());
			}
		},

		_keydown: function (event) {
			var options = this.options,
				keyCode = $.ui.keyCode;

			switch (event.keyCode) {
				case keyCode.UP:
					this._repeat(null, 1, event);
					return true;
				case keyCode.DOWN:
					this._repeat(null, -1, event);
					return true;
				case keyCode.PAGE_UP:
					this._repeat(null, options.page, event);
					return true;
				case keyCode.PAGE_DOWN:
					this._repeat(null, -options.page, event);
					return true;
			}

			return false;
		},

		_start: function (event) {
			if (!this.spinning && this._trigger('start', event) === false) {
				return false;
			}

			if (!this.counter) {
				this.counter = 1;
			}
			this.spinning = true;
			return true;
		},

		_repeat: function (i, steps, event) {
			i = i || 500;

			clearTimeout(this.timer);
			this.timer = this._delay(function () {
				this._repeat(40, steps, event);
			}, i);

			this._spin(steps * this.options.step, event);
		},

		_spin: function (step, event) {
			var value = this.value() || 0;

			if (!this.counter) {
				this.counter = 1;
			}

			value = this._adjustValue(value + step * this._increment(this.counter));

			if (
				!this.spinning ||
				this._trigger('spin', event, { value: value }) !== false
			) {
				this._value(value);
				this.counter++;
			}
		},

		_increment: function (i) {
			var incremental = this.options.incremental;

			if (incremental) {
				return typeof incremental === 'function'
					? incremental(i)
					: Math.floor(
							(i * i * i) / 50000 - (i * i) / 500 + (17 * i) / 200 + 1
					  );
			}

			return 1;
		},

		_precision: function () {
			var precision = this._precisionOf(this.options.step);
			if (this.options.min !== null) {
				precision = Math.max(precision, this._precisionOf(this.options.min));
			}
			return precision;
		},

		_precisionOf: function (num) {
			var str = num.toString(),
				decimal = str.indexOf('.');
			return decimal === -1 ? 0 : str.length - decimal - 1;
		},

		_adjustValue: function (value) {
			var base,
				aboveMin,
				options = this.options;

			// Make sure we're at a valid step
			// - find out where we are relative to the base (min or 0)
			base = options.min !== null ? options.min : 0;
			aboveMin = value - base;

			// - round to the nearest step
			aboveMin = Math.round(aboveMin / options.step) * options.step;

			// - rounding is based on 0, so adjust back to our base
			value = base + aboveMin;

			// Fix precision from bad JS floating point math
			value = parseFloat(value.toFixed(this._precision()));

			// Clamp the value
			if (options.max !== null && value > options.max) {
				return options.max;
			}
			if (options.min !== null && value < options.min) {
				return options.min;
			}

			return value;
		},

		_stop: function (event) {
			if (!this.spinning) {
				return;
			}

			clearTimeout(this.timer);
			clearTimeout(this.mousewheelTimer);
			this.counter = 0;
			this.spinning = false;
			this._trigger('stop', event);
		},

		_setOption: function (key, value) {
			var prevValue, first, last;

			if (key === 'culture' || key === 'numberFormat') {
				prevValue = this._parse(this.element.val());
				this.options[key] = value;
				this.element.val(this._format(prevValue));
				return;
			}

			if (key === 'max' || key === 'min' || key === 'step') {
				if (typeof value === 'string') {
					value = this._parse(value);
				}
			}
			if (key === 'icons') {
				first = this.buttons.first().find('.ui-icon');
				this._removeClass(first, null, this.options.icons.up);
				this._addClass(first, null, value.up);
				last = this.buttons.last().find('.ui-icon');
				this._removeClass(last, null, this.options.icons.down);
				this._addClass(last, null, value.down);
			}

			this._super(key, value);
		},

		_setOptionDisabled: function (value) {
			this._super(value);

			this._toggleClass(this.uiSpinner, null, 'ui-state-disabled', !!value);
			this.element.prop('disabled', !!value);
			this.buttons.button(value ? 'disable' : 'enable');
		},

		_setOptions: spinnerModifier(function (options) {
			this._super(options);
		}),

		_parse: function (val) {
			if (typeof val === 'string' && val !== '') {
				val =
					window.Globalize && this.options.numberFormat
						? Globalize.parseFloat(val, 10, this.options.culture)
						: +val;
			}
			return val === '' || isNaN(val) ? null : val;
		},

		_format: function (value) {
			if (value === '') {
				return '';
			}
			return window.Globalize && this.options.numberFormat
				? Globalize.format(
						value,
						this.options.numberFormat,
						this.options.culture
				  )
				: value;
		},

		_refresh: function () {
			this.element.attr({
				'aria-valuemin': this.options.min,
				'aria-valuemax': this.options.max,

				// TODO: what should we do with values that can't be parsed?
				'aria-valuenow': this._parse(this.element.val()),
			});
		},

		isValid: function () {
			var value = this.value();

			// Null is invalid
			if (value === null) {
				return false;
			}

			// If value gets adjusted, it's invalid
			return value === this._adjustValue(value);
		},

		// Update the value without triggering change
		_value: function (value, allowAny) {
			var parsed;
			if (value !== '') {
				parsed = this._parse(value);
				if (parsed !== null) {
					if (!allowAny) {
						parsed = this._adjustValue(parsed);
					}
					value = this._format(parsed);
				}
			}
			this.element.val(value);
			this._refresh();
		},

		_destroy: function () {
			this.element
				.prop('disabled', false)
				.removeAttr(
					'autocomplete role aria-valuemin aria-valuemax aria-valuenow'
				);

			this.uiSpinner.replaceWith(this.element);
		},

		stepUp: spinnerModifier(function (steps) {
			this._stepUp(steps);
		}),
		_stepUp: function (steps) {
			if (this._start()) {
				this._spin((steps || 1) * this.options.step);
				this._stop();
			}
		},

		stepDown: spinnerModifier(function (steps) {
			this._stepDown(steps);
		}),
		_stepDown: function (steps) {
			if (this._start()) {
				this._spin((steps || 1) * -this.options.step);
				this._stop();
			}
		},

		pageUp: spinnerModifier(function (pages) {
			this._stepUp((pages || 1) * this.options.page);
		}),

		pageDown: spinnerModifier(function (pages) {
			this._stepDown((pages || 1) * this.options.page);
		}),

		value: function (newVal) {
			if (!arguments.length) {
				return this._parse(this.element.val());
			}
			spinnerModifier(this._value).call(this, newVal);
		},

		widget: function () {
			return this.uiSpinner;
		},
	});

	// DEPRECATED
	// TODO: switch return back to widget declaration at top of file when this is removed
	if ($.uiBackCompat !== false) {
		// Backcompat for spinner html extension points
		$.widget('ui.spinner', $.ui.spinner, {
			_enhance: function () {
				this.uiSpinner = this.element
					.attr('autocomplete', 'off')
					.wrap(this._uiSpinnerHtml())
					.parent()

					// Add buttons
					.append(this._buttonHtml());
			},
			_uiSpinnerHtml: function () {
				return '<span>';
			},

			_buttonHtml: function () {
				return '<a></a><a></a>';
			},
		});
	}

	var widgetsSpinner = $.ui.spinner;

	/*!
	 * jQuery UI Tabs 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Tabs
	//>>group: Widgets
	//>>description: Transforms a set of container elements into a tab structure.
	//>>docs: http://api.jqueryui.com/tabs/
	//>>demos: http://jqueryui.com/tabs/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/tabs.css
	//>>css.theme: ../../themes/base/theme.css

	$.widget('ui.tabs', {
		version: '1.13.1',
		delay: 300,
		options: {
			active: null,
			classes: {
				'ui-tabs': 'ui-corner-all',
				'ui-tabs-nav': 'ui-corner-all',
				'ui-tabs-panel': 'ui-corner-bottom',
				'ui-tabs-tab': 'ui-corner-top',
			},
			collapsible: false,
			event: 'click',
			heightStyle: 'content',
			hide: null,
			show: null,

			// Callbacks
			activate: null,
			beforeActivate: null,
			beforeLoad: null,
			load: null,
		},

		_isLocal: (function () {
			var rhash = /#.*$/;

			return function (anchor) {
				var anchorUrl, locationUrl;

				anchorUrl = anchor.href.replace(rhash, '');
				locationUrl = location.href.replace(rhash, '');

				// Decoding may throw an error if the URL isn't UTF-8 (#9518)
				try {
					anchorUrl = decodeURIComponent(anchorUrl);
				} catch (error) {}
				try {
					locationUrl = decodeURIComponent(locationUrl);
				} catch (error) {}

				return anchor.hash.length > 1 && anchorUrl === locationUrl;
			};
		})(),

		_create: function () {
			var that = this,
				options = this.options;

			this.running = false;

			this._addClass('ui-tabs', 'ui-widget ui-widget-content');
			this._toggleClass('ui-tabs-collapsible', null, options.collapsible);

			this._processTabs();
			options.active = this._initialActive();

			// Take disabling tabs via class attribute from HTML
			// into account and update option properly.
			if (Array.isArray(options.disabled)) {
				options.disabled = $.uniqueSort(
					options.disabled.concat(
						$.map(this.tabs.filter('.ui-state-disabled'), function (li) {
							return that.tabs.index(li);
						})
					)
				).sort();
			}

			// Check for length avoids error when initializing empty list
			if (this.options.active !== false && this.anchors.length) {
				this.active = this._findActive(options.active);
			} else {
				this.active = $();
			}

			this._refresh();

			if (this.active.length) {
				this.load(options.active);
			}
		},

		_initialActive: function () {
			var active = this.options.active,
				collapsible = this.options.collapsible,
				locationHash = location.hash.substring(1);

			if (active === null) {
				// check the fragment identifier in the URL
				if (locationHash) {
					this.tabs.each(function (i, tab) {
						if ($(tab).attr('aria-controls') === locationHash) {
							active = i;
							return false;
						}
					});
				}

				// Check for a tab marked active via a class
				if (active === null) {
					active = this.tabs.index(this.tabs.filter('.ui-tabs-active'));
				}

				// No active tab, set to false
				if (active === null || active === -1) {
					active = this.tabs.length ? 0 : false;
				}
			}

			// Handle numbers: negative, out of range
			if (active !== false) {
				active = this.tabs.index(this.tabs.eq(active));
				if (active === -1) {
					active = collapsible ? false : 0;
				}
			}

			// Don't allow collapsible: false and active: false
			if (!collapsible && active === false && this.anchors.length) {
				active = 0;
			}

			return active;
		},

		_getCreateEventData: function () {
			return {
				tab: this.active,
				panel: !this.active.length ? $() : this._getPanelForTab(this.active),
			};
		},

		_tabKeydown: function (event) {
			var focusedTab = $($.ui.safeActiveElement(this.document[0])).closest(
					'li'
				),
				selectedIndex = this.tabs.index(focusedTab),
				goingForward = true;

			if (this._handlePageNav(event)) {
				return;
			}

			switch (event.keyCode) {
				case $.ui.keyCode.RIGHT:
				case $.ui.keyCode.DOWN:
					selectedIndex++;
					break;
				case $.ui.keyCode.UP:
				case $.ui.keyCode.LEFT:
					goingForward = false;
					selectedIndex--;
					break;
				case $.ui.keyCode.END:
					selectedIndex = this.anchors.length - 1;
					break;
				case $.ui.keyCode.HOME:
					selectedIndex = 0;
					break;
				case $.ui.keyCode.SPACE:
					// Activate only, no collapsing
					event.preventDefault();
					clearTimeout(this.activating);
					this._activate(selectedIndex);
					return;
				case $.ui.keyCode.ENTER:
					// Toggle (cancel delayed activation, allow collapsing)
					event.preventDefault();
					clearTimeout(this.activating);

					// Determine if we should collapse or activate
					this._activate(
						selectedIndex === this.options.active ? false : selectedIndex
					);
					return;
				default:
					return;
			}

			// Focus the appropriate tab, based on which key was pressed
			event.preventDefault();
			clearTimeout(this.activating);
			selectedIndex = this._focusNextTab(selectedIndex, goingForward);

			// Navigating with control/command key will prevent automatic activation
			if (!event.ctrlKey && !event.metaKey) {
				// Update aria-selected immediately so that AT think the tab is already selected.
				// Otherwise AT may confuse the user by stating that they need to activate the tab,
				// but the tab will already be activated by the time the announcement finishes.
				focusedTab.attr('aria-selected', 'false');
				this.tabs.eq(selectedIndex).attr('aria-selected', 'true');

				this.activating = this._delay(function () {
					this.option('active', selectedIndex);
				}, this.delay);
			}
		},

		_panelKeydown: function (event) {
			if (this._handlePageNav(event)) {
				return;
			}

			// Ctrl+up moves focus to the current tab
			if (event.ctrlKey && event.keyCode === $.ui.keyCode.UP) {
				event.preventDefault();
				this.active.trigger('focus');
			}
		},

		// Alt+page up/down moves focus to the previous/next tab (and activates)
		_handlePageNav: function (event) {
			if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP) {
				this._activate(this._focusNextTab(this.options.active - 1, false));
				return true;
			}
			if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN) {
				this._activate(this._focusNextTab(this.options.active + 1, true));
				return true;
			}
		},

		_findNextTab: function (index, goingForward) {
			var lastTabIndex = this.tabs.length - 1;

			function constrain() {
				if (index > lastTabIndex) {
					index = 0;
				}
				if (index < 0) {
					index = lastTabIndex;
				}
				return index;
			}

			while ($.inArray(constrain(), this.options.disabled) !== -1) {
				index = goingForward ? index + 1 : index - 1;
			}

			return index;
		},

		_focusNextTab: function (index, goingForward) {
			index = this._findNextTab(index, goingForward);
			this.tabs.eq(index).trigger('focus');
			return index;
		},

		_setOption: function (key, value) {
			if (key === 'active') {
				// _activate() will handle invalid values and update this.options
				this._activate(value);
				return;
			}

			this._super(key, value);

			if (key === 'collapsible') {
				this._toggleClass('ui-tabs-collapsible', null, value);

				// Setting collapsible: false while collapsed; open first panel
				if (!value && this.options.active === false) {
					this._activate(0);
				}
			}

			if (key === 'event') {
				this._setupEvents(value);
			}

			if (key === 'heightStyle') {
				this._setupHeightStyle(value);
			}
		},

		_sanitizeSelector: function (hash) {
			return hash
				? hash.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, '\\$&')
				: '';
		},

		refresh: function () {
			var options = this.options,
				lis = this.tablist.children(':has(a[href])');

			// Get disabled tabs from class attribute from HTML
			// this will get converted to a boolean if needed in _refresh()
			options.disabled = $.map(
				lis.filter('.ui-state-disabled'),
				function (tab) {
					return lis.index(tab);
				}
			);

			this._processTabs();

			// Was collapsed or no tabs
			if (options.active === false || !this.anchors.length) {
				options.active = false;
				this.active = $();

				// was active, but active tab is gone
			} else if (
				this.active.length &&
				!$.contains(this.tablist[0], this.active[0])
			) {
				// all remaining tabs are disabled
				if (this.tabs.length === options.disabled.length) {
					options.active = false;
					this.active = $();

					// activate previous tab
				} else {
					this._activate(
						this._findNextTab(Math.max(0, options.active - 1), false)
					);
				}

				// was active, active tab still exists
			} else {
				// make sure active index is correct
				options.active = this.tabs.index(this.active);
			}

			this._refresh();
		},

		_refresh: function () {
			this._setOptionDisabled(this.options.disabled);
			this._setupEvents(this.options.event);
			this._setupHeightStyle(this.options.heightStyle);

			this.tabs.not(this.active).attr({
				'aria-selected': 'false',
				'aria-expanded': 'false',
				tabIndex: -1,
			});
			this.panels.not(this._getPanelForTab(this.active)).hide().attr({
				'aria-hidden': 'true',
			});

			// Make sure one tab is in the tab order
			if (!this.active.length) {
				this.tabs.eq(0).attr('tabIndex', 0);
			} else {
				this.active.attr({
					'aria-selected': 'true',
					'aria-expanded': 'true',
					tabIndex: 0,
				});
				this._addClass(this.active, 'ui-tabs-active', 'ui-state-active');
				this._getPanelForTab(this.active).show().attr({
					'aria-hidden': 'false',
				});
			}
		},

		_processTabs: function () {
			var that = this,
				prevTabs = this.tabs,
				prevAnchors = this.anchors,
				prevPanels = this.panels;

			this.tablist = this._getList().attr('role', 'tablist');
			this._addClass(
				this.tablist,
				'ui-tabs-nav',
				'ui-helper-reset ui-helper-clearfix ui-widget-header'
			);

			// Prevent users from focusing disabled tabs via click
			this.tablist
				.on('mousedown' + this.eventNamespace, '> li', function (event) {
					if ($(this).is('.ui-state-disabled')) {
						event.preventDefault();
					}
				})

				// Support: IE <9
				// Preventing the default action in mousedown doesn't prevent IE
				// from focusing the element, so if the anchor gets focused, blur.
				// We don't have to worry about focusing the previously focused
				// element since clicking on a non-focusable element should focus
				// the body anyway.
				.on('focus' + this.eventNamespace, '.ui-tabs-anchor', function () {
					if ($(this).closest('li').is('.ui-state-disabled')) {
						this.blur();
					}
				});

			this.tabs = this.tablist.find('> li:has(a[href])').attr({
				role: 'tab',
				tabIndex: -1,
			});
			this._addClass(this.tabs, 'ui-tabs-tab', 'ui-state-default');

			this.anchors = this.tabs
				.map(function () {
					return $('a', this)[0];
				})
				.attr({
					tabIndex: -1,
				});
			this._addClass(this.anchors, 'ui-tabs-anchor');

			this.panels = $();

			this.anchors.each(function (i, anchor) {
				var selector,
					panel,
					panelId,
					anchorId = $(anchor).uniqueId().attr('id'),
					tab = $(anchor).closest('li'),
					originalAriaControls = tab.attr('aria-controls');

				// Inline tab
				if (that._isLocal(anchor)) {
					selector = anchor.hash;
					panelId = selector.substring(1);
					panel = that.element.find(that._sanitizeSelector(selector));

					// remote tab
				} else {
					// If the tab doesn't already have aria-controls,
					// generate an id by using a throw-away element
					panelId = tab.attr('aria-controls') || $({}).uniqueId()[0].id;
					selector = '#' + panelId;
					panel = that.element.find(selector);
					if (!panel.length) {
						panel = that._createPanel(panelId);
						panel.insertAfter(that.panels[i - 1] || that.tablist);
					}
					panel.attr('aria-live', 'polite');
				}

				if (panel.length) {
					that.panels = that.panels.add(panel);
				}
				if (originalAriaControls) {
					tab.data('ui-tabs-aria-controls', originalAriaControls);
				}
				tab.attr({
					'aria-controls': panelId,
					'aria-labelledby': anchorId,
				});
				panel.attr('aria-labelledby', anchorId);
			});

			this.panels.attr('role', 'tabpanel');
			this._addClass(this.panels, 'ui-tabs-panel', 'ui-widget-content');

			// Avoid memory leaks (#10056)
			if (prevTabs) {
				this._off(prevTabs.not(this.tabs));
				this._off(prevAnchors.not(this.anchors));
				this._off(prevPanels.not(this.panels));
			}
		},

		// Allow overriding how to find the list for rare usage scenarios (#7715)
		_getList: function () {
			return this.tablist || this.element.find('ol, ul').eq(0);
		},

		_createPanel: function (id) {
			return $('<div>').attr('id', id).data('ui-tabs-destroy', true);
		},

		_setOptionDisabled: function (disabled) {
			var currentItem, li, i;

			if (Array.isArray(disabled)) {
				if (!disabled.length) {
					disabled = false;
				} else if (disabled.length === this.anchors.length) {
					disabled = true;
				}
			}

			// Disable tabs
			for (i = 0; (li = this.tabs[i]); i++) {
				currentItem = $(li);
				if (disabled === true || $.inArray(i, disabled) !== -1) {
					currentItem.attr('aria-disabled', 'true');
					this._addClass(currentItem, null, 'ui-state-disabled');
				} else {
					currentItem.removeAttr('aria-disabled');
					this._removeClass(currentItem, null, 'ui-state-disabled');
				}
			}

			this.options.disabled = disabled;

			this._toggleClass(
				this.widget(),
				this.widgetFullName + '-disabled',
				null,
				disabled === true
			);
		},

		_setupEvents: function (event) {
			var events = {};
			if (event) {
				$.each(event.split(' '), function (index, eventName) {
					events[eventName] = '_eventHandler';
				});
			}

			this._off(this.anchors.add(this.tabs).add(this.panels));

			// Always prevent the default action, even when disabled
			this._on(true, this.anchors, {
				click: function (event) {
					event.preventDefault();
				},
			});
			this._on(this.anchors, events);
			this._on(this.tabs, { keydown: '_tabKeydown' });
			this._on(this.panels, { keydown: '_panelKeydown' });

			this._focusable(this.tabs);
			this._hoverable(this.tabs);
		},

		_setupHeightStyle: function (heightStyle) {
			var maxHeight,
				parent = this.element.parent();

			if (heightStyle === 'fill') {
				maxHeight = parent.height();
				maxHeight -= this.element.outerHeight() - this.element.height();

				this.element.siblings(':visible').each(function () {
					var elem = $(this),
						position = elem.css('position');

					if (position === 'absolute' || position === 'fixed') {
						return;
					}
					maxHeight -= elem.outerHeight(true);
				});

				this.element
					.children()
					.not(this.panels)
					.each(function () {
						maxHeight -= $(this).outerHeight(true);
					});

				this.panels
					.each(function () {
						$(this).height(
							Math.max(0, maxHeight - $(this).innerHeight() + $(this).height())
						);
					})
					.css('overflow', 'auto');
			} else if (heightStyle === 'auto') {
				maxHeight = 0;
				this.panels
					.each(function () {
						maxHeight = Math.max(maxHeight, $(this).height('').height());
					})
					.height(maxHeight);
			}
		},

		_eventHandler: function (event) {
			var options = this.options,
				active = this.active,
				anchor = $(event.currentTarget),
				tab = anchor.closest('li'),
				clickedIsActive = tab[0] === active[0],
				collapsing = clickedIsActive && options.collapsible,
				toShow = collapsing ? $() : this._getPanelForTab(tab),
				toHide = !active.length ? $() : this._getPanelForTab(active),
				eventData = {
					oldTab: active,
					oldPanel: toHide,
					newTab: collapsing ? $() : tab,
					newPanel: toShow,
				};

			event.preventDefault();

			if (
				tab.hasClass('ui-state-disabled') ||
				// tab is already loading
				tab.hasClass('ui-tabs-loading') ||
				// can't switch durning an animation
				this.running ||
				// click on active header, but not collapsible
				(clickedIsActive && !options.collapsible) ||
				// allow canceling activation
				this._trigger('beforeActivate', event, eventData) === false
			) {
				return;
			}

			options.active = collapsing ? false : this.tabs.index(tab);

			this.active = clickedIsActive ? $() : tab;
			if (this.xhr) {
				this.xhr.abort();
			}

			if (!toHide.length && !toShow.length) {
				$.error('jQuery UI Tabs: Mismatching fragment identifier.');
			}

			if (toShow.length) {
				this.load(this.tabs.index(tab), event);
			}
			this._toggle(event, eventData);
		},

		// Handles show/hide for selecting tabs
		_toggle: function (event, eventData) {
			var that = this,
				toShow = eventData.newPanel,
				toHide = eventData.oldPanel;

			this.running = true;

			function complete() {
				that.running = false;
				that._trigger('activate', event, eventData);
			}

			function show() {
				that._addClass(
					eventData.newTab.closest('li'),
					'ui-tabs-active',
					'ui-state-active'
				);

				if (toShow.length && that.options.show) {
					that._show(toShow, that.options.show, complete);
				} else {
					toShow.show();
					complete();
				}
			}

			// Start out by hiding, then showing, then completing
			if (toHide.length && this.options.hide) {
				this._hide(toHide, this.options.hide, function () {
					that._removeClass(
						eventData.oldTab.closest('li'),
						'ui-tabs-active',
						'ui-state-active'
					);
					show();
				});
			} else {
				this._removeClass(
					eventData.oldTab.closest('li'),
					'ui-tabs-active',
					'ui-state-active'
				);
				toHide.hide();
				show();
			}

			toHide.attr('aria-hidden', 'true');
			eventData.oldTab.attr({
				'aria-selected': 'false',
				'aria-expanded': 'false',
			});

			// If we're switching tabs, remove the old tab from the tab order.
			// If we're opening from collapsed state, remove the previous tab from the tab order.
			// If we're collapsing, then keep the collapsing tab in the tab order.
			if (toShow.length && toHide.length) {
				eventData.oldTab.attr('tabIndex', -1);
			} else if (toShow.length) {
				this.tabs
					.filter(function () {
						return $(this).attr('tabIndex') === 0;
					})
					.attr('tabIndex', -1);
			}

			toShow.attr('aria-hidden', 'false');
			eventData.newTab.attr({
				'aria-selected': 'true',
				'aria-expanded': 'true',
				tabIndex: 0,
			});
		},

		_activate: function (index) {
			var anchor,
				active = this._findActive(index);

			// Trying to activate the already active panel
			if (active[0] === this.active[0]) {
				return;
			}

			// Trying to collapse, simulate a click on the current active header
			if (!active.length) {
				active = this.active;
			}

			anchor = active.find('.ui-tabs-anchor')[0];
			this._eventHandler({
				target: anchor,
				currentTarget: anchor,
				preventDefault: $.noop,
			});
		},

		_findActive: function (index) {
			return index === false ? $() : this.tabs.eq(index);
		},

		_getIndex: function (index) {
			// meta-function to give users option to provide a href string instead of a numerical index.
			if (typeof index === 'string') {
				index = this.anchors.index(
					this.anchors.filter("[href$='" + $.escapeSelector(index) + "']")
				);
			}

			return index;
		},

		_destroy: function () {
			if (this.xhr) {
				this.xhr.abort();
			}

			this.tablist.removeAttr('role').off(this.eventNamespace);

			this.anchors.removeAttr('role tabIndex').removeUniqueId();

			this.tabs.add(this.panels).each(function () {
				if ($.data(this, 'ui-tabs-destroy')) {
					$(this).remove();
				} else {
					$(this).removeAttr(
						'role tabIndex ' +
							'aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded'
					);
				}
			});

			this.tabs.each(function () {
				var li = $(this),
					prev = li.data('ui-tabs-aria-controls');
				if (prev) {
					li.attr('aria-controls', prev).removeData('ui-tabs-aria-controls');
				} else {
					li.removeAttr('aria-controls');
				}
			});

			this.panels.show();

			if (this.options.heightStyle !== 'content') {
				this.panels.css('height', '');
			}
		},

		enable: function (index) {
			var disabled = this.options.disabled;
			if (disabled === false) {
				return;
			}

			if (index === undefined) {
				disabled = false;
			} else {
				index = this._getIndex(index);
				if (Array.isArray(disabled)) {
					disabled = $.map(disabled, function (num) {
						return num !== index ? num : null;
					});
				} else {
					disabled = $.map(this.tabs, function (li, num) {
						return num !== index ? num : null;
					});
				}
			}
			this._setOptionDisabled(disabled);
		},

		disable: function (index) {
			var disabled = this.options.disabled;
			if (disabled === true) {
				return;
			}

			if (index === undefined) {
				disabled = true;
			} else {
				index = this._getIndex(index);
				if ($.inArray(index, disabled) !== -1) {
					return;
				}
				if (Array.isArray(disabled)) {
					disabled = $.merge([index], disabled).sort();
				} else {
					disabled = [index];
				}
			}
			this._setOptionDisabled(disabled);
		},

		load: function (index, event) {
			index = this._getIndex(index);
			var that = this,
				tab = this.tabs.eq(index),
				anchor = tab.find('.ui-tabs-anchor'),
				panel = this._getPanelForTab(tab),
				eventData = {
					tab: tab,
					panel: panel,
				},
				complete = function (jqXHR, status) {
					if (status === 'abort') {
						that.panels.stop(false, true);
					}

					that._removeClass(tab, 'ui-tabs-loading');
					panel.removeAttr('aria-busy');

					if (jqXHR === that.xhr) {
						delete that.xhr;
					}
				};

			// Not remote
			if (this._isLocal(anchor[0])) {
				return;
			}

			this.xhr = $.ajax(this._ajaxSettings(anchor, event, eventData));

			// Support: jQuery <1.8
			// jQuery <1.8 returns false if the request is canceled in beforeSend,
			// but as of 1.8, $.ajax() always returns a jqXHR object.
			if (this.xhr && this.xhr.statusText !== 'canceled') {
				this._addClass(tab, 'ui-tabs-loading');
				panel.attr('aria-busy', 'true');

				this.xhr
					.done(function (response, status, jqXHR) {
						// support: jQuery <1.8
						// http://bugs.jquery.com/ticket/11778
						setTimeout(function () {
							panel.html(response);
							that._trigger('load', event, eventData);

							complete(jqXHR, status);
						}, 1);
					})
					.fail(function (jqXHR, status) {
						// support: jQuery <1.8
						// http://bugs.jquery.com/ticket/11778
						setTimeout(function () {
							complete(jqXHR, status);
						}, 1);
					});
			}
		},

		_ajaxSettings: function (anchor, event, eventData) {
			var that = this;
			return {
				// Support: IE <11 only
				// Strip any hash that exists to prevent errors with the Ajax request
				url: anchor.attr('href').replace(/#.*$/, ''),
				beforeSend: function (jqXHR, settings) {
					return that._trigger(
						'beforeLoad',
						event,
						$.extend({ jqXHR: jqXHR, ajaxSettings: settings }, eventData)
					);
				},
			};
		},

		_getPanelForTab: function (tab) {
			var id = $(tab).attr('aria-controls');
			return this.element.find(this._sanitizeSelector('#' + id));
		},
	});

	// DEPRECATED
	// TODO: Switch return back to widget declaration at top of file when this is removed
	if ($.uiBackCompat !== false) {
		// Backcompat for ui-tab class (now ui-tabs-tab)
		$.widget('ui.tabs', $.ui.tabs, {
			_processTabs: function () {
				this._superApply(arguments);
				this._addClass(this.tabs, 'ui-tab');
			},
		});
	}

	var widgetsTabs = $.ui.tabs;

	/*!
	 * jQuery UI Tooltip 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Tooltip
	//>>group: Widgets
	//>>description: Shows additional information for any element on hover or focus.
	//>>docs: http://api.jqueryui.com/tooltip/
	//>>demos: http://jqueryui.com/tooltip/
	//>>css.structure: ../../themes/base/core.css
	//>>css.structure: ../../themes/base/tooltip.css
	//>>css.theme: ../../themes/base/theme.css

	$.widget('ui.tooltip', {
		version: '1.13.1',
		options: {
			classes: {
				'ui-tooltip': 'ui-corner-all ui-widget-shadow',
			},
			content: function () {
				var title = $(this).attr('title');

				// Escape title, since we're going from an attribute to raw HTML
				return $('<a>').text(title).html();
			},
			hide: true,

			// Disabled elements have inconsistent behavior across browsers (#8661)
			items: '[title]:not([disabled])',
			position: {
				my: 'left top+15',
				at: 'left bottom',
				collision: 'flipfit flip',
			},
			show: true,
			track: false,

			// Callbacks
			close: null,
			open: null,
		},

		_addDescribedBy: function (elem, id) {
			var describedby = (elem.attr('aria-describedby') || '').split(/\s+/);
			describedby.push(id);
			elem
				.data('ui-tooltip-id', id)
				.attr(
					'aria-describedby',
					String.prototype.trim.call(describedby.join(' '))
				);
		},

		_removeDescribedBy: function (elem) {
			var id = elem.data('ui-tooltip-id'),
				describedby = (elem.attr('aria-describedby') || '').split(/\s+/),
				index = $.inArray(id, describedby);

			if (index !== -1) {
				describedby.splice(index, 1);
			}

			elem.removeData('ui-tooltip-id');
			describedby = String.prototype.trim.call(describedby.join(' '));
			if (describedby) {
				elem.attr('aria-describedby', describedby);
			} else {
				elem.removeAttr('aria-describedby');
			}
		},

		_create: function () {
			this._on({
				mouseover: 'open',
				focusin: 'open',
			});

			// IDs of generated tooltips, needed for destroy
			this.tooltips = {};

			// IDs of parent tooltips where we removed the title attribute
			this.parents = {};

			// Append the aria-live region so tooltips announce correctly
			this.liveRegion = $('<div>')
				.attr({
					role: 'log',
					'aria-live': 'assertive',
					'aria-relevant': 'additions',
				})
				.appendTo(this.document[0].body);
			this._addClass(this.liveRegion, null, 'ui-helper-hidden-accessible');

			this.disabledTitles = $([]);
		},

		_setOption: function (key, value) {
			var that = this;

			this._super(key, value);

			if (key === 'content') {
				$.each(this.tooltips, function (id, tooltipData) {
					that._updateContent(tooltipData.element);
				});
			}
		},

		_setOptionDisabled: function (value) {
			this[value ? '_disable' : '_enable']();
		},

		_disable: function () {
			var that = this;

			// Close open tooltips
			$.each(this.tooltips, function (id, tooltipData) {
				var event = $.Event('blur');
				event.target = event.currentTarget = tooltipData.element[0];
				that.close(event, true);
			});

			// Remove title attributes to prevent native tooltips
			this.disabledTitles = this.disabledTitles.add(
				this.element
					.find(this.options.items)
					.addBack()
					.filter(function () {
						var element = $(this);
						if (element.is('[title]')) {
							return element
								.data('ui-tooltip-title', element.attr('title'))
								.removeAttr('title');
						}
					})
			);
		},

		_enable: function () {
			// restore title attributes
			this.disabledTitles.each(function () {
				var element = $(this);
				if (element.data('ui-tooltip-title')) {
					element.attr('title', element.data('ui-tooltip-title'));
				}
			});
			this.disabledTitles = $([]);
		},

		open: function (event) {
			var that = this,
				target = $(event ? event.target : this.element)
					// we need closest here due to mouseover bubbling,
					// but always pointing at the same event target
					.closest(this.options.items);

			// No element to show a tooltip for or the tooltip is already open
			if (!target.length || target.data('ui-tooltip-id')) {
				return;
			}

			if (target.attr('title')) {
				target.data('ui-tooltip-title', target.attr('title'));
			}

			target.data('ui-tooltip-open', true);

			// Kill parent tooltips, custom or native, for hover
			if (event && event.type === 'mouseover') {
				target.parents().each(function () {
					var parent = $(this),
						blurEvent;
					if (parent.data('ui-tooltip-open')) {
						blurEvent = $.Event('blur');
						blurEvent.target = blurEvent.currentTarget = this;
						that.close(blurEvent, true);
					}
					if (parent.attr('title')) {
						parent.uniqueId();
						that.parents[this.id] = {
							element: this,
							title: parent.attr('title'),
						};
						parent.attr('title', '');
					}
				});
			}

			this._registerCloseHandlers(event, target);
			this._updateContent(target, event);
		},

		_updateContent: function (target, event) {
			var content,
				contentOption = this.options.content,
				that = this,
				eventType = event ? event.type : null;

			if (
				typeof contentOption === 'string' ||
				contentOption.nodeType ||
				contentOption.jquery
			) {
				return this._open(event, target, contentOption);
			}

			content = contentOption.call(target[0], function (response) {
				// IE may instantly serve a cached response for ajax requests
				// delay this call to _open so the other call to _open runs first
				that._delay(function () {
					// Ignore async response if tooltip was closed already
					if (!target.data('ui-tooltip-open')) {
						return;
					}

					// JQuery creates a special event for focusin when it doesn't
					// exist natively. To improve performance, the native event
					// object is reused and the type is changed. Therefore, we can't
					// rely on the type being correct after the event finished
					// bubbling, so we set it back to the previous value. (#8740)
					if (event) {
						event.type = eventType;
					}
					this._open(event, target, response);
				});
			});
			if (content) {
				this._open(event, target, content);
			}
		},

		_open: function (event, target, content) {
			var tooltipData,
				tooltip,
				delayedShow,
				a11yContent,
				positionOption = $.extend({}, this.options.position);

			if (!content) {
				return;
			}

			// Content can be updated multiple times. If the tooltip already
			// exists, then just update the content and bail.
			tooltipData = this._find(target);
			if (tooltipData) {
				tooltipData.tooltip.find('.ui-tooltip-content').html(content);
				return;
			}

			// If we have a title, clear it to prevent the native tooltip
			// we have to check first to avoid defining a title if none exists
			// (we don't want to cause an element to start matching [title])
			//
			// We use removeAttr only for key events, to allow IE to export the correct
			// accessible attributes. For mouse events, set to empty string to avoid
			// native tooltip showing up (happens only when removing inside mouseover).
			if (target.is('[title]')) {
				if (event && event.type === 'mouseover') {
					target.attr('title', '');
				} else {
					target.removeAttr('title');
				}
			}

			tooltipData = this._tooltip(target);
			tooltip = tooltipData.tooltip;
			this._addDescribedBy(target, tooltip.attr('id'));
			tooltip.find('.ui-tooltip-content').html(content);

			// Support: Voiceover on OS X, JAWS on IE <= 9
			// JAWS announces deletions even when aria-relevant="additions"
			// Voiceover will sometimes re-read the entire log region's contents from the beginning
			this.liveRegion.children().hide();
			a11yContent = $('<div>').html(tooltip.find('.ui-tooltip-content').html());
			a11yContent.removeAttr('name').find('[name]').removeAttr('name');
			a11yContent.removeAttr('id').find('[id]').removeAttr('id');
			a11yContent.appendTo(this.liveRegion);

			function position(event) {
				positionOption.of = event;
				if (tooltip.is(':hidden')) {
					return;
				}
				tooltip.position(positionOption);
			}
			if (this.options.track && event && /^mouse/.test(event.type)) {
				this._on(this.document, {
					mousemove: position,
				});

				// trigger once to override element-relative positioning
				position(event);
			} else {
				tooltip.position(
					$.extend(
						{
							of: target,
						},
						this.options.position
					)
				);
			}

			tooltip.hide();

			this._show(tooltip, this.options.show);

			// Handle tracking tooltips that are shown with a delay (#8644). As soon
			// as the tooltip is visible, position the tooltip using the most recent
			// event.
			// Adds the check to add the timers only when both delay and track options are set (#14682)
			if (this.options.track && this.options.show && this.options.show.delay) {
				delayedShow = this.delayedShow = setInterval(function () {
					if (tooltip.is(':visible')) {
						position(positionOption.of);
						clearInterval(delayedShow);
					}
				}, 13);
			}

			this._trigger('open', event, { tooltip: tooltip });
		},

		_registerCloseHandlers: function (event, target) {
			var events = {
				keyup: function (event) {
					if (event.keyCode === $.ui.keyCode.ESCAPE) {
						var fakeEvent = $.Event(event);
						fakeEvent.currentTarget = target[0];
						this.close(fakeEvent, true);
					}
				},
			};

			// Only bind remove handler for delegated targets. Non-delegated
			// tooltips will handle this in destroy.
			if (target[0] !== this.element[0]) {
				events.remove = function () {
					var targetElement = this._find(target);
					if (targetElement) {
						this._removeTooltip(targetElement.tooltip);
					}
				};
			}

			if (!event || event.type === 'mouseover') {
				events.mouseleave = 'close';
			}
			if (!event || event.type === 'focusin') {
				events.focusout = 'close';
			}
			this._on(true, target, events);
		},

		close: function (event) {
			var tooltip,
				that = this,
				target = $(event ? event.currentTarget : this.element),
				tooltipData = this._find(target);

			// The tooltip may already be closed
			if (!tooltipData) {
				// We set ui-tooltip-open immediately upon open (in open()), but only set the
				// additional data once there's actually content to show (in _open()). So even if the
				// tooltip doesn't have full data, we always remove ui-tooltip-open in case we're in
				// the period between open() and _open().
				target.removeData('ui-tooltip-open');
				return;
			}

			tooltip = tooltipData.tooltip;

			// Disabling closes the tooltip, so we need to track when we're closing
			// to avoid an infinite loop in case the tooltip becomes disabled on close
			if (tooltipData.closing) {
				return;
			}

			// Clear the interval for delayed tracking tooltips
			clearInterval(this.delayedShow);

			// Only set title if we had one before (see comment in _open())
			// If the title attribute has changed since open(), don't restore
			if (target.data('ui-tooltip-title') && !target.attr('title')) {
				target.attr('title', target.data('ui-tooltip-title'));
			}

			this._removeDescribedBy(target);

			tooltipData.hiding = true;
			tooltip.stop(true);
			this._hide(tooltip, this.options.hide, function () {
				that._removeTooltip($(this));
			});

			target.removeData('ui-tooltip-open');
			this._off(target, 'mouseleave focusout keyup');

			// Remove 'remove' binding only on delegated targets
			if (target[0] !== this.element[0]) {
				this._off(target, 'remove');
			}
			this._off(this.document, 'mousemove');

			if (event && event.type === 'mouseleave') {
				$.each(this.parents, function (id, parent) {
					$(parent.element).attr('title', parent.title);
					delete that.parents[id];
				});
			}

			tooltipData.closing = true;
			this._trigger('close', event, { tooltip: tooltip });
			if (!tooltipData.hiding) {
				tooltipData.closing = false;
			}
		},

		_tooltip: function (element) {
			var tooltip = $('<div>').attr('role', 'tooltip'),
				content = $('<div>').appendTo(tooltip),
				id = tooltip.uniqueId().attr('id');

			this._addClass(content, 'ui-tooltip-content');
			this._addClass(tooltip, 'ui-tooltip', 'ui-widget ui-widget-content');

			tooltip.appendTo(this._appendTo(element));

			return (this.tooltips[id] = {
				element: element,
				tooltip: tooltip,
			});
		},

		_find: function (target) {
			var id = target.data('ui-tooltip-id');
			return id ? this.tooltips[id] : null;
		},

		_removeTooltip: function (tooltip) {
			// Clear the interval for delayed tracking tooltips
			clearInterval(this.delayedShow);

			tooltip.remove();
			delete this.tooltips[tooltip.attr('id')];
		},

		_appendTo: function (target) {
			var element = target.closest('.ui-front, dialog');

			if (!element.length) {
				element = this.document[0].body;
			}

			return element;
		},

		_destroy: function () {
			var that = this;

			// Close open tooltips
			$.each(this.tooltips, function (id, tooltipData) {
				// Delegate to close method to handle common cleanup
				var event = $.Event('blur'),
					element = tooltipData.element;
				event.target = event.currentTarget = element[0];
				that.close(event, true);

				// Remove immediately; destroying an open tooltip doesn't use the
				// hide animation
				$('#' + id).remove();

				// Restore the title
				if (element.data('ui-tooltip-title')) {
					// If the title attribute has changed since open(), don't restore
					if (!element.attr('title')) {
						element.attr('title', element.data('ui-tooltip-title'));
					}
					element.removeData('ui-tooltip-title');
				}
			});
			this.liveRegion.remove();
		},
	});

	// DEPRECATED
	// TODO: Switch return back to widget declaration at top of file when this is removed
	if ($.uiBackCompat !== false) {
		// Backcompat for tooltipClass option
		$.widget('ui.tooltip', $.ui.tooltip, {
			options: {
				tooltipClass: null,
			},
			_tooltip: function () {
				var tooltipData = this._superApply(arguments);
				if (this.options.tooltipClass) {
					tooltipData.tooltip.addClass(this.options.tooltipClass);
				}
				return tooltipData;
			},
		});
	}

	var widgetsTooltip = $.ui.tooltip;

	// Create a local jQuery because jQuery Color relies on it and the
	// global may not exist with AMD and a custom build (#10199).
	// This module is a noop if used as a regular AMD module.
	// eslint-disable-next-line no-unused-vars
	var jQuery = $;

	/*!
	 * jQuery Color Animations v2.2.0
	 * https://github.com/jquery/jquery-color
	 *
	 * Copyright OpenJS Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 *
	 * Date: Sun May 10 09:02:36 2020 +0200
	 */

	var stepHooks =
			'backgroundColor borderBottomColor borderLeftColor borderRightColor ' +
			'borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor',
		class2type = {},
		toString = class2type.toString,
		// plusequals test for += 100 -= 100
		rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
		// a set of RE's that can match strings and generate color tuples.
		stringParsers = [
			{
				re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
				parse: function (execResult) {
					return [execResult[1], execResult[2], execResult[3], execResult[4]];
				},
			},
			{
				re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
				parse: function (execResult) {
					return [
						execResult[1] * 2.55,
						execResult[2] * 2.55,
						execResult[3] * 2.55,
						execResult[4],
					];
				},
			},
			{
				// this regex ignores A-F because it's compared against an already lowercased string
				re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?/,
				parse: function (execResult) {
					return [
						parseInt(execResult[1], 16),
						parseInt(execResult[2], 16),
						parseInt(execResult[3], 16),
						execResult[4] ? (parseInt(execResult[4], 16) / 255).toFixed(2) : 1,
					];
				},
			},
			{
				// this regex ignores A-F because it's compared against an already lowercased string
				re: /#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?/,
				parse: function (execResult) {
					return [
						parseInt(execResult[1] + execResult[1], 16),
						parseInt(execResult[2] + execResult[2], 16),
						parseInt(execResult[3] + execResult[3], 16),
						execResult[4]
							? (parseInt(execResult[4] + execResult[4], 16) / 255).toFixed(2)
							: 1,
					];
				},
			},
			{
				re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
				space: 'hsla',
				parse: function (execResult) {
					return [
						execResult[1],
						execResult[2] / 100,
						execResult[3] / 100,
						execResult[4],
					];
				},
			},
		],
		// jQuery.Color( )
		color = (jQuery.Color = function (color, green, blue, alpha) {
			return new jQuery.Color.fn.parse(color, green, blue, alpha);
		}),
		spaces = {
			rgba: {
				props: {
					red: {
						idx: 0,
						type: 'byte',
					},
					green: {
						idx: 1,
						type: 'byte',
					},
					blue: {
						idx: 2,
						type: 'byte',
					},
				},
			},

			hsla: {
				props: {
					hue: {
						idx: 0,
						type: 'degrees',
					},
					saturation: {
						idx: 1,
						type: 'percent',
					},
					lightness: {
						idx: 2,
						type: 'percent',
					},
				},
			},
		},
		propTypes = {
			byte: {
				floor: true,
				max: 255,
			},
			percent: {
				max: 1,
			},
			degrees: {
				mod: 360,
				floor: true,
			},
		},
		support = (color.support = {}),
		// element for support tests
		supportElem = jQuery('<p>')[0],
		// colors = jQuery.Color.names
		colors,
		// local aliases of functions called often
		each = jQuery.each;

	// determine rgba support immediately
	supportElem.style.cssText = 'background-color:rgba(1,1,1,.5)';
	support.rgba = supportElem.style.backgroundColor.indexOf('rgba') > -1;

	// define cache name and alpha properties
	// for rgba and hsla spaces
	each(spaces, function (spaceName, space) {
		space.cache = '_' + spaceName;
		space.props.alpha = {
			idx: 3,
			type: 'percent',
			def: 1,
		};
	});

	// Populate the class2type map
	jQuery.each(
		'Boolean Number String Function Array Date RegExp Object Error Symbol'.split(
			' '
		),
		function (_i, name) {
			class2type['[object ' + name + ']'] = name.toLowerCase();
		}
	);

	function getType(obj) {
		if (obj == null) {
			return obj + '';
		}

		return typeof obj === 'object'
			? class2type[toString.call(obj)] || 'object'
			: typeof obj;
	}

	function clamp(value, prop, allowEmpty) {
		var type = propTypes[prop.type] || {};

		if (value == null) {
			return allowEmpty || !prop.def ? null : prop.def;
		}

		// ~~ is an short way of doing floor for positive numbers
		value = type.floor ? ~~value : parseFloat(value);

		// IE will pass in empty strings as value for alpha,
		// which will hit this case
		if (isNaN(value)) {
			return prop.def;
		}

		if (type.mod) {
			// we add mod before modding to make sure that negatives values
			// get converted properly: -10 -> 350
			return (value + type.mod) % type.mod;
		}

		// for now all property types without mod have min and max
		return Math.min(type.max, Math.max(0, value));
	}

	function stringParse(string) {
		var inst = color(),
			rgba = (inst._rgba = []);

		string = string.toLowerCase();

		each(stringParsers, function (_i, parser) {
			var parsed,
				match = parser.re.exec(string),
				values = match && parser.parse(match),
				spaceName = parser.space || 'rgba';

			if (values) {
				parsed = inst[spaceName](values);

				// if this was an rgba parse the assignment might happen twice
				// oh well....
				inst[spaces[spaceName].cache] = parsed[spaces[spaceName].cache];
				rgba = inst._rgba = parsed._rgba;

				// exit each( stringParsers ) here because we matched
				return false;
			}
		});

		// Found a stringParser that handled it
		if (rgba.length) {
			// if this came from a parsed string, force "transparent" when alpha is 0
			// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
			if (rgba.join() === '0,0,0,0') {
				jQuery.extend(rgba, colors.transparent);
			}
			return inst;
		}

		// named colors
		return colors[string];
	}

	color.fn = jQuery.extend(color.prototype, {
		parse: function (red, green, blue, alpha) {
			if (red === undefined) {
				this._rgba = [null, null, null, null];
				return this;
			}
			if (red.jquery || red.nodeType) {
				red = jQuery(red).css(green);
				green = undefined;
			}

			var inst = this,
				type = getType(red),
				rgba = (this._rgba = []);

			// more than 1 argument specified - assume ( red, green, blue, alpha )
			if (green !== undefined) {
				red = [red, green, blue, alpha];
				type = 'array';
			}

			if (type === 'string') {
				return this.parse(stringParse(red) || colors._default);
			}

			if (type === 'array') {
				each(spaces.rgba.props, function (_key, prop) {
					rgba[prop.idx] = clamp(red[prop.idx], prop);
				});
				return this;
			}

			if (type === 'object') {
				if (red instanceof color) {
					each(spaces, function (_spaceName, space) {
						if (red[space.cache]) {
							inst[space.cache] = red[space.cache].slice();
						}
					});
				} else {
					each(spaces, function (_spaceName, space) {
						var cache = space.cache;
						each(space.props, function (key, prop) {
							// if the cache doesn't exist, and we know how to convert
							if (!inst[cache] && space.to) {
								// if the value was null, we don't need to copy it
								// if the key was alpha, we don't need to copy it either
								if (key === 'alpha' || red[key] == null) {
									return;
								}
								inst[cache] = space.to(inst._rgba);
							}

							// this is the only case where we allow nulls for ALL properties.
							// call clamp with alwaysAllowEmpty
							inst[cache][prop.idx] = clamp(red[key], prop, true);
						});

						// everything defined but alpha?
						if (
							inst[cache] &&
							jQuery.inArray(null, inst[cache].slice(0, 3)) < 0
						) {
							// use the default of 1
							if (inst[cache][3] == null) {
								inst[cache][3] = 1;
							}

							if (space.from) {
								inst._rgba = space.from(inst[cache]);
							}
						}
					});
				}
				return this;
			}
		},
		is: function (compare) {
			var is = color(compare),
				same = true,
				inst = this;

			each(spaces, function (_, space) {
				var localCache,
					isCache = is[space.cache];
				if (isCache) {
					localCache =
						inst[space.cache] || (space.to && space.to(inst._rgba)) || [];
					each(space.props, function (_, prop) {
						if (isCache[prop.idx] != null) {
							same = isCache[prop.idx] === localCache[prop.idx];
							return same;
						}
					});
				}
				return same;
			});
			return same;
		},
		_space: function () {
			var used = [],
				inst = this;
			each(spaces, function (spaceName, space) {
				if (inst[space.cache]) {
					used.push(spaceName);
				}
			});
			return used.pop();
		},
		transition: function (other, distance) {
			var end = color(other),
				spaceName = end._space(),
				space = spaces[spaceName],
				startColor = this.alpha() === 0 ? color('transparent') : this,
				start = startColor[space.cache] || space.to(startColor._rgba),
				result = start.slice();

			end = end[space.cache];
			each(space.props, function (_key, prop) {
				var index = prop.idx,
					startValue = start[index],
					endValue = end[index],
					type = propTypes[prop.type] || {};

				// if null, don't override start value
				if (endValue === null) {
					return;
				}

				// if null - use end
				if (startValue === null) {
					result[index] = endValue;
				} else {
					if (type.mod) {
						if (endValue - startValue > type.mod / 2) {
							startValue += type.mod;
						} else if (startValue - endValue > type.mod / 2) {
							startValue -= type.mod;
						}
					}
					result[index] = clamp(
						(endValue - startValue) * distance + startValue,
						prop
					);
				}
			});
			return this[spaceName](result);
		},
		blend: function (opaque) {
			// if we are already opaque - return ourself
			if (this._rgba[3] === 1) {
				return this;
			}

			var rgb = this._rgba.slice(),
				a = rgb.pop(),
				blend = color(opaque)._rgba;

			return color(
				jQuery.map(rgb, function (v, i) {
					return (1 - a) * blend[i] + a * v;
				})
			);
		},
		toRgbaString: function () {
			var prefix = 'rgba(',
				rgba = jQuery.map(this._rgba, function (v, i) {
					if (v != null) {
						return v;
					}
					return i > 2 ? 1 : 0;
				});

			if (rgba[3] === 1) {
				rgba.pop();
				prefix = 'rgb(';
			}

			return prefix + rgba.join() + ')';
		},
		toHslaString: function () {
			var prefix = 'hsla(',
				hsla = jQuery.map(this.hsla(), function (v, i) {
					if (v == null) {
						v = i > 2 ? 1 : 0;
					}

					// catch 1 and 2
					if (i && i < 3) {
						v = Math.round(v * 100) + '%';
					}
					return v;
				});

			if (hsla[3] === 1) {
				hsla.pop();
				prefix = 'hsl(';
			}
			return prefix + hsla.join() + ')';
		},
		toHexString: function (includeAlpha) {
			var rgba = this._rgba.slice(),
				alpha = rgba.pop();

			if (includeAlpha) {
				rgba.push(~~(alpha * 255));
			}

			return (
				'#' +
				jQuery
					.map(rgba, function (v) {
						// default to 0 when nulls exist
						v = (v || 0).toString(16);
						return v.length === 1 ? '0' + v : v;
					})
					.join('')
			);
		},
		toString: function () {
			return this._rgba[3] === 0 ? 'transparent' : this.toRgbaString();
		},
	});
	color.fn.parse.prototype = color.fn;

	// hsla conversions adapted from:
	// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021

	function hue2rgb(p, q, h) {
		h = (h + 1) % 1;
		if (h * 6 < 1) {
			return p + (q - p) * h * 6;
		}
		if (h * 2 < 1) {
			return q;
		}
		if (h * 3 < 2) {
			return p + (q - p) * (2 / 3 - h) * 6;
		}
		return p;
	}

	spaces.hsla.to = function (rgba) {
		if (rgba[0] == null || rgba[1] == null || rgba[2] == null) {
			return [null, null, null, rgba[3]];
		}
		var r = rgba[0] / 255,
			g = rgba[1] / 255,
			b = rgba[2] / 255,
			a = rgba[3],
			max = Math.max(r, g, b),
			min = Math.min(r, g, b),
			diff = max - min,
			add = max + min,
			l = add * 0.5,
			h,
			s;

		if (min === max) {
			h = 0;
		} else if (r === max) {
			h = (60 * (g - b)) / diff + 360;
		} else if (g === max) {
			h = (60 * (b - r)) / diff + 120;
		} else {
			h = (60 * (r - g)) / diff + 240;
		}

		// chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
		// otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
		if (diff === 0) {
			s = 0;
		} else if (l <= 0.5) {
			s = diff / add;
		} else {
			s = diff / (2 - add);
		}
		return [Math.round(h) % 360, s, l, a == null ? 1 : a];
	};

	spaces.hsla.from = function (hsla) {
		if (hsla[0] == null || hsla[1] == null || hsla[2] == null) {
			return [null, null, null, hsla[3]];
		}
		var h = hsla[0] / 360,
			s = hsla[1],
			l = hsla[2],
			a = hsla[3],
			q = l <= 0.5 ? l * (1 + s) : l + s - l * s,
			p = 2 * l - q;

		return [
			Math.round(hue2rgb(p, q, h + 1 / 3) * 255),
			Math.round(hue2rgb(p, q, h) * 255),
			Math.round(hue2rgb(p, q, h - 1 / 3) * 255),
			a,
		];
	};

	each(spaces, function (spaceName, space) {
		var props = space.props,
			cache = space.cache,
			to = space.to,
			from = space.from;

		// makes rgba() and hsla()
		color.fn[spaceName] = function (value) {
			// generate a cache for this space if it doesn't exist
			if (to && !this[cache]) {
				this[cache] = to(this._rgba);
			}
			if (value === undefined) {
				return this[cache].slice();
			}

			var ret,
				type = getType(value),
				arr = type === 'array' || type === 'object' ? value : arguments,
				local = this[cache].slice();

			each(props, function (key, prop) {
				var val = arr[type === 'object' ? key : prop.idx];
				if (val == null) {
					val = local[prop.idx];
				}
				local[prop.idx] = clamp(val, prop);
			});

			if (from) {
				ret = color(from(local));
				ret[cache] = local;
				return ret;
			} else {
				return color(local);
			}
		};

		// makes red() green() blue() alpha() hue() saturation() lightness()
		each(props, function (key, prop) {
			// alpha is included in more than one space
			if (color.fn[key]) {
				return;
			}
			color.fn[key] = function (value) {
				var local,
					cur,
					match,
					fn,
					vtype = getType(value);

				if (key === 'alpha') {
					fn = this._hsla ? 'hsla' : 'rgba';
				} else {
					fn = spaceName;
				}
				local = this[fn]();
				cur = local[prop.idx];

				if (vtype === 'undefined') {
					return cur;
				}

				if (vtype === 'function') {
					value = value.call(this, cur);
					vtype = getType(value);
				}
				if (value == null && prop.empty) {
					return this;
				}
				if (vtype === 'string') {
					match = rplusequals.exec(value);
					if (match) {
						value = cur + parseFloat(match[2]) * (match[1] === '+' ? 1 : -1);
					}
				}
				local[prop.idx] = value;
				return this[fn](local);
			};
		});
	});

	// add cssHook and .fx.step function for each named hook.
	// accept a space separated string of properties
	color.hook = function (hook) {
		var hooks = hook.split(' ');
		each(hooks, function (_i, hook) {
			jQuery.cssHooks[hook] = {
				set: function (elem, value) {
					var parsed,
						curElem,
						backgroundColor = '';

					if (
						value !== 'transparent' &&
						(getType(value) !== 'string' || (parsed = stringParse(value)))
					) {
						value = color(parsed || value);
						if (!support.rgba && value._rgba[3] !== 1) {
							curElem = hook === 'backgroundColor' ? elem.parentNode : elem;
							while (
								(backgroundColor === '' || backgroundColor === 'transparent') &&
								curElem &&
								curElem.style
							) {
								try {
									backgroundColor = jQuery.css(curElem, 'backgroundColor');
									curElem = curElem.parentNode;
								} catch (e) {}
							}

							value = value.blend(
								backgroundColor && backgroundColor !== 'transparent'
									? backgroundColor
									: '_default'
							);
						}

						value = value.toRgbaString();
					}
					try {
						elem.style[hook] = value;
					} catch (e) {
						// wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
					}
				},
			};
			jQuery.fx.step[hook] = function (fx) {
				if (!fx.colorInit) {
					fx.start = color(fx.elem, hook);
					fx.end = color(fx.end);
					fx.colorInit = true;
				}
				jQuery.cssHooks[hook].set(fx.elem, fx.start.transition(fx.end, fx.pos));
			};
		});
	};

	color.hook(stepHooks);

	jQuery.cssHooks.borderColor = {
		expand: function (value) {
			var expanded = {};

			each(['Top', 'Right', 'Bottom', 'Left'], function (_i, part) {
				expanded['border' + part + 'Color'] = value;
			});
			return expanded;
		},
	};

	// Basic color names only.
	// Usage of any of the other color names requires adding yourself or including
	// jquery.color.svg-names.js.
	colors = jQuery.Color.names = {
		// 4.1. Basic color keywords
		aqua: '#00ffff',
		black: '#000000',
		blue: '#0000ff',
		fuchsia: '#ff00ff',
		gray: '#808080',
		green: '#008000',
		lime: '#00ff00',
		maroon: '#800000',
		navy: '#000080',
		olive: '#808000',
		purple: '#800080',
		red: '#ff0000',
		silver: '#c0c0c0',
		teal: '#008080',
		white: '#ffffff',
		yellow: '#ffff00',

		// 4.2.3. "transparent" color keyword
		transparent: [null, null, null, 0],

		_default: '#ffffff',
	};

	/*!
	 * jQuery UI Effects 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Effects Core
	//>>group: Effects
	/* eslint-disable max-len */
	//>>description: Extends the internal jQuery effects. Includes morphing and easing. Required by all other effects.
	/* eslint-enable max-len */
	//>>docs: http://api.jqueryui.com/category/effects-core/
	//>>demos: http://jqueryui.com/effect/

	var dataSpace = 'ui-effects-',
		dataSpaceStyle = 'ui-effects-style',
		dataSpaceAnimated = 'ui-effects-animated';

	$.effects = {
		effect: {},
	};

	/******************************************************************************/
	/****************************** CLASS ANIMATIONS ******************************/
	/******************************************************************************/
	(function () {
		var classAnimationActions = ['add', 'remove', 'toggle'],
			shorthandStyles = {
				border: 1,
				borderBottom: 1,
				borderColor: 1,
				borderLeft: 1,
				borderRight: 1,
				borderTop: 1,
				borderWidth: 1,
				margin: 1,
				padding: 1,
			};

		$.each(
			[
				'borderLeftStyle',
				'borderRightStyle',
				'borderBottomStyle',
				'borderTopStyle',
			],
			function (_, prop) {
				$.fx.step[prop] = function (fx) {
					if (
						(fx.end !== 'none' && !fx.setAttr) ||
						(fx.pos === 1 && !fx.setAttr)
					) {
						jQuery.style(fx.elem, prop, fx.end);
						fx.setAttr = true;
					}
				};
			}
		);

		function camelCase(string) {
			return string.replace(/-([\da-z])/gi, function (all, letter) {
				return letter.toUpperCase();
			});
		}

		function getElementStyles(elem) {
			var key,
				len,
				style = elem.ownerDocument.defaultView
					? elem.ownerDocument.defaultView.getComputedStyle(elem, null)
					: elem.currentStyle,
				styles = {};

			if (style && style.length && style[0] && style[style[0]]) {
				len = style.length;
				while (len--) {
					key = style[len];
					if (typeof style[key] === 'string') {
						styles[camelCase(key)] = style[key];
					}
				}

				// Support: Opera, IE <9
			} else {
				for (key in style) {
					if (typeof style[key] === 'string') {
						styles[key] = style[key];
					}
				}
			}

			return styles;
		}

		function styleDifference(oldStyle, newStyle) {
			var diff = {},
				name,
				value;

			for (name in newStyle) {
				value = newStyle[name];
				if (oldStyle[name] !== value) {
					if (!shorthandStyles[name]) {
						if ($.fx.step[name] || !isNaN(parseFloat(value))) {
							diff[name] = value;
						}
					}
				}
			}

			return diff;
		}

		// Support: jQuery <1.8
		if (!$.fn.addBack) {
			$.fn.addBack = function (selector) {
				return this.add(
					selector == null ? this.prevObject : this.prevObject.filter(selector)
				);
			};
		}

		$.effects.animateClass = function (value, duration, easing, callback) {
			var o = $.speed(duration, easing, callback);

			return this.queue(function () {
				var animated = $(this),
					baseClass = animated.attr('class') || '',
					applyClassChange,
					allAnimations = o.children ? animated.find('*').addBack() : animated;

				// Map the animated objects to store the original styles.
				allAnimations = allAnimations.map(function () {
					var el = $(this);
					return {
						el: el,
						start: getElementStyles(this),
					};
				});

				// Apply class change
				applyClassChange = function () {
					$.each(classAnimationActions, function (i, action) {
						if (value[action]) {
							animated[action + 'Class'](value[action]);
						}
					});
				};
				applyClassChange();

				// Map all animated objects again - calculate new styles and diff
				allAnimations = allAnimations.map(function () {
					this.end = getElementStyles(this.el[0]);
					this.diff = styleDifference(this.start, this.end);
					return this;
				});

				// Apply original class
				animated.attr('class', baseClass);

				// Map all animated objects again - this time collecting a promise
				allAnimations = allAnimations.map(function () {
					var styleInfo = this,
						dfd = $.Deferred(),
						opts = $.extend({}, o, {
							queue: false,
							complete: function () {
								dfd.resolve(styleInfo);
							},
						});

					this.el.animate(this.diff, opts);
					return dfd.promise();
				});

				// Once all animations have completed:
				$.when.apply($, allAnimations.get()).done(function () {
					// Set the final class
					applyClassChange();

					// For each animated element,
					// clear all css properties that were animated
					$.each(arguments, function () {
						var el = this.el;
						$.each(this.diff, function (key) {
							el.css(key, '');
						});
					});

					// This is guarnteed to be there if you use jQuery.speed()
					// it also handles dequeuing the next anim...
					o.complete.call(animated[0]);
				});
			});
		};

		$.fn.extend({
			addClass: (function (orig) {
				return function (classNames, speed, easing, callback) {
					return speed
						? $.effects.animateClass.call(
								this,
								{ add: classNames },
								speed,
								easing,
								callback
						  )
						: orig.apply(this, arguments);
				};
			})($.fn.addClass),

			removeClass: (function (orig) {
				return function (classNames, speed, easing, callback) {
					return arguments.length > 1
						? $.effects.animateClass.call(
								this,
								{ remove: classNames },
								speed,
								easing,
								callback
						  )
						: orig.apply(this, arguments);
				};
			})($.fn.removeClass),

			toggleClass: (function (orig) {
				return function (classNames, force, speed, easing, callback) {
					if (typeof force === 'boolean' || force === undefined) {
						if (!speed) {
							// Without speed parameter
							return orig.apply(this, arguments);
						} else {
							return $.effects.animateClass.call(
								this,
								force ? { add: classNames } : { remove: classNames },
								speed,
								easing,
								callback
							);
						}
					} else {
						// Without force parameter
						return $.effects.animateClass.call(
							this,
							{ toggle: classNames },
							force,
							speed,
							easing
						);
					}
				};
			})($.fn.toggleClass),

			switchClass: function (remove, add, speed, easing, callback) {
				return $.effects.animateClass.call(
					this,
					{
						add: add,
						remove: remove,
					},
					speed,
					easing,
					callback
				);
			},
		});
	})();

	/******************************************************************************/
	/*********************************** EFFECTS **********************************/
	/******************************************************************************/

	(function () {
		if ($.expr && $.expr.pseudos && $.expr.pseudos.animated) {
			$.expr.pseudos.animated = (function (orig) {
				return function (elem) {
					return !!$(elem).data(dataSpaceAnimated) || orig(elem);
				};
			})($.expr.pseudos.animated);
		}

		if ($.uiBackCompat !== false) {
			$.extend($.effects, {
				// Saves a set of properties in a data storage
				save: function (element, set) {
					var i = 0,
						length = set.length;
					for (; i < length; i++) {
						if (set[i] !== null) {
							element.data(dataSpace + set[i], element[0].style[set[i]]);
						}
					}
				},

				// Restores a set of previously saved properties from a data storage
				restore: function (element, set) {
					var val,
						i = 0,
						length = set.length;
					for (; i < length; i++) {
						if (set[i] !== null) {
							val = element.data(dataSpace + set[i]);
							element.css(set[i], val);
						}
					}
				},

				setMode: function (el, mode) {
					if (mode === 'toggle') {
						mode = el.is(':hidden') ? 'show' : 'hide';
					}
					return mode;
				},

				// Wraps the element around a wrapper that copies position properties
				createWrapper: function (element) {
					// If the element is already wrapped, return it
					if (element.parent().is('.ui-effects-wrapper')) {
						return element.parent();
					}

					// Wrap the element
					var props = {
							width: element.outerWidth(true),
							height: element.outerHeight(true),
							float: element.css('float'),
						},
						wrapper = $('<div></div>').addClass('ui-effects-wrapper').css({
							fontSize: '100%',
							background: 'transparent',
							border: 'none',
							margin: 0,
							padding: 0,
						}),
						// Store the size in case width/height are defined in % - Fixes #5245
						size = {
							width: element.width(),
							height: element.height(),
						},
						active = document.activeElement;

					// Support: Firefox
					// Firefox incorrectly exposes anonymous content
					// https://bugzilla.mozilla.org/show_bug.cgi?id=561664
					try {
						// eslint-disable-next-line no-unused-expressions
						active.id;
					} catch (e) {
						active = document.body;
					}

					element.wrap(wrapper);

					// Fixes #7595 - Elements lose focus when wrapped.
					if (element[0] === active || $.contains(element[0], active)) {
						$(active).trigger('focus');
					}

					// Hotfix for jQuery 1.4 since some change in wrap() seems to actually
					// lose the reference to the wrapped element
					wrapper = element.parent();

					// Transfer positioning properties to the wrapper
					if (element.css('position') === 'static') {
						wrapper.css({ position: 'relative' });
						element.css({ position: 'relative' });
					} else {
						$.extend(props, {
							position: element.css('position'),
							zIndex: element.css('z-index'),
						});
						$.each(['top', 'left', 'bottom', 'right'], function (i, pos) {
							props[pos] = element.css(pos);
							if (isNaN(parseInt(props[pos], 10))) {
								props[pos] = 'auto';
							}
						});
						element.css({
							position: 'relative',
							top: 0,
							left: 0,
							right: 'auto',
							bottom: 'auto',
						});
					}
					element.css(size);

					return wrapper.css(props).show();
				},

				removeWrapper: function (element) {
					var active = document.activeElement;

					if (element.parent().is('.ui-effects-wrapper')) {
						element.parent().replaceWith(element);

						// Fixes #7595 - Elements lose focus when wrapped.
						if (element[0] === active || $.contains(element[0], active)) {
							$(active).trigger('focus');
						}
					}

					return element;
				},
			});
		}

		$.extend($.effects, {
			version: '1.13.1',

			define: function (name, mode, effect) {
				if (!effect) {
					effect = mode;
					mode = 'effect';
				}

				$.effects.effect[name] = effect;
				$.effects.effect[name].mode = mode;

				return effect;
			},

			scaledDimensions: function (element, percent, direction) {
				if (percent === 0) {
					return {
						height: 0,
						width: 0,
						outerHeight: 0,
						outerWidth: 0,
					};
				}

				var x = direction !== 'horizontal' ? (percent || 100) / 100 : 1,
					y = direction !== 'vertical' ? (percent || 100) / 100 : 1;

				return {
					height: element.height() * y,
					width: element.width() * x,
					outerHeight: element.outerHeight() * y,
					outerWidth: element.outerWidth() * x,
				};
			},

			clipToBox: function (animation) {
				return {
					width: animation.clip.right - animation.clip.left,
					height: animation.clip.bottom - animation.clip.top,
					left: animation.clip.left,
					top: animation.clip.top,
				};
			},

			// Injects recently queued functions to be first in line (after "inprogress")
			unshift: function (element, queueLength, count) {
				var queue = element.queue();

				if (queueLength > 1) {
					queue.splice.apply(
						queue,
						[1, 0].concat(queue.splice(queueLength, count))
					);
				}
				element.dequeue();
			},

			saveStyle: function (element) {
				element.data(dataSpaceStyle, element[0].style.cssText);
			},

			restoreStyle: function (element) {
				element[0].style.cssText = element.data(dataSpaceStyle) || '';
				element.removeData(dataSpaceStyle);
			},

			mode: function (element, mode) {
				var hidden = element.is(':hidden');

				if (mode === 'toggle') {
					mode = hidden ? 'show' : 'hide';
				}
				if (hidden ? mode === 'hide' : mode === 'show') {
					mode = 'none';
				}
				return mode;
			},

			// Translates a [top,left] array into a baseline value
			getBaseline: function (origin, original) {
				var y, x;

				switch (origin[0]) {
					case 'top':
						y = 0;
						break;
					case 'middle':
						y = 0.5;
						break;
					case 'bottom':
						y = 1;
						break;
					default:
						y = origin[0] / original.height;
				}

				switch (origin[1]) {
					case 'left':
						x = 0;
						break;
					case 'center':
						x = 0.5;
						break;
					case 'right':
						x = 1;
						break;
					default:
						x = origin[1] / original.width;
				}

				return {
					x: x,
					y: y,
				};
			},

			// Creates a placeholder element so that the original element can be made absolute
			createPlaceholder: function (element) {
				var placeholder,
					cssPosition = element.css('position'),
					position = element.position();

				// Lock in margins first to account for form elements, which
				// will change margin if you explicitly set height
				// see: http://jsfiddle.net/JZSMt/3/ https://bugs.webkit.org/show_bug.cgi?id=107380
				// Support: Safari
				element
					.css({
						marginTop: element.css('marginTop'),
						marginBottom: element.css('marginBottom'),
						marginLeft: element.css('marginLeft'),
						marginRight: element.css('marginRight'),
					})
					.outerWidth(element.outerWidth())
					.outerHeight(element.outerHeight());

				if (/^(static|relative)/.test(cssPosition)) {
					cssPosition = 'absolute';

					placeholder = $('<' + element[0].nodeName + '>')
						.insertAfter(element)
						.css({
							// Convert inline to inline block to account for inline elements
							// that turn to inline block based on content (like img)
							display: /^(inline|ruby)/.test(element.css('display'))
								? 'inline-block'
								: 'block',
							visibility: 'hidden',

							// Margins need to be set to account for margin collapse
							marginTop: element.css('marginTop'),
							marginBottom: element.css('marginBottom'),
							marginLeft: element.css('marginLeft'),
							marginRight: element.css('marginRight'),
							float: element.css('float'),
						})
						.outerWidth(element.outerWidth())
						.outerHeight(element.outerHeight())
						.addClass('ui-effects-placeholder');

					element.data(dataSpace + 'placeholder', placeholder);
				}

				element.css({
					position: cssPosition,
					left: position.left,
					top: position.top,
				});

				return placeholder;
			},

			removePlaceholder: function (element) {
				var dataKey = dataSpace + 'placeholder',
					placeholder = element.data(dataKey);

				if (placeholder) {
					placeholder.remove();
					element.removeData(dataKey);
				}
			},

			// Removes a placeholder if it exists and restores
			// properties that were modified during placeholder creation
			cleanUp: function (element) {
				$.effects.restoreStyle(element);
				$.effects.removePlaceholder(element);
			},

			setTransition: function (element, list, factor, value) {
				value = value || {};
				$.each(list, function (i, x) {
					var unit = element.cssUnit(x);
					if (unit[0] > 0) {
						value[x] = unit[0] * factor + unit[1];
					}
				});
				return value;
			},
		});

		// Return an effect options object for the given parameters:
		function _normalizeArguments(effect, options, speed, callback) {
			// Allow passing all options as the first parameter
			if ($.isPlainObject(effect)) {
				options = effect;
				effect = effect.effect;
			}

			// Convert to an object
			effect = { effect: effect };

			// Catch (effect, null, ...)
			if (options == null) {
				options = {};
			}

			// Catch (effect, callback)
			if (typeof options === 'function') {
				callback = options;
				speed = null;
				options = {};
			}

			// Catch (effect, speed, ?)
			if (typeof options === 'number' || $.fx.speeds[options]) {
				callback = speed;
				speed = options;
				options = {};
			}

			// Catch (effect, options, callback)
			if (typeof speed === 'function') {
				callback = speed;
				speed = null;
			}

			// Add options to effect
			if (options) {
				$.extend(effect, options);
			}

			speed = speed || options.duration;
			effect.duration = $.fx.off
				? 0
				: typeof speed === 'number'
				? speed
				: speed in $.fx.speeds
				? $.fx.speeds[speed]
				: $.fx.speeds._default;

			effect.complete = callback || options.complete;

			return effect;
		}

		function standardAnimationOption(option) {
			// Valid standard speeds (nothing, number, named speed)
			if (!option || typeof option === 'number' || $.fx.speeds[option]) {
				return true;
			}

			// Invalid strings - treat as "normal" speed
			if (typeof option === 'string' && !$.effects.effect[option]) {
				return true;
			}

			// Complete callback
			if (typeof option === 'function') {
				return true;
			}

			// Options hash (but not naming an effect)
			if (typeof option === 'object' && !option.effect) {
				return true;
			}

			// Didn't match any standard API
			return false;
		}

		$.fn.extend({
			effect: function (/* effect, options, speed, callback */) {
				var args = _normalizeArguments.apply(this, arguments),
					effectMethod = $.effects.effect[args.effect],
					defaultMode = effectMethod.mode,
					queue = args.queue,
					queueName = queue || 'fx',
					complete = args.complete,
					mode = args.mode,
					modes = [],
					prefilter = function (next) {
						var el = $(this),
							normalizedMode = $.effects.mode(el, mode) || defaultMode;

						// Sentinel for duck-punching the :animated pseudo-selector
						el.data(dataSpaceAnimated, true);

						// Save effect mode for later use,
						// we can't just call $.effects.mode again later,
						// as the .show() below destroys the initial state
						modes.push(normalizedMode);

						// See $.uiBackCompat inside of run() for removal of defaultMode in 1.14
						if (
							defaultMode &&
							(normalizedMode === 'show' ||
								(normalizedMode === defaultMode && normalizedMode === 'hide'))
						) {
							el.show();
						}

						if (!defaultMode || normalizedMode !== 'none') {
							$.effects.saveStyle(el);
						}

						if (typeof next === 'function') {
							next();
						}
					};

				if ($.fx.off || !effectMethod) {
					// Delegate to the original method (e.g., .show()) if possible
					if (mode) {
						return this[mode](args.duration, complete);
					} else {
						return this.each(function () {
							if (complete) {
								complete.call(this);
							}
						});
					}
				}

				function run(next) {
					var elem = $(this);

					function cleanup() {
						elem.removeData(dataSpaceAnimated);

						$.effects.cleanUp(elem);

						if (args.mode === 'hide') {
							elem.hide();
						}

						done();
					}

					function done() {
						if (typeof complete === 'function') {
							complete.call(elem[0]);
						}

						if (typeof next === 'function') {
							next();
						}
					}

					// Override mode option on a per element basis,
					// as toggle can be either show or hide depending on element state
					args.mode = modes.shift();

					if ($.uiBackCompat !== false && !defaultMode) {
						if (elem.is(':hidden') ? mode === 'hide' : mode === 'show') {
							// Call the core method to track "olddisplay" properly
							elem[mode]();
							done();
						} else {
							effectMethod.call(elem[0], args, done);
						}
					} else {
						if (args.mode === 'none') {
							// Call the core method to track "olddisplay" properly
							elem[mode]();
							done();
						} else {
							effectMethod.call(elem[0], args, cleanup);
						}
					}
				}

				// Run prefilter on all elements first to ensure that
				// any showing or hiding happens before placeholder creation,
				// which ensures that any layout changes are correctly captured.
				return queue === false
					? this.each(prefilter).each(run)
					: this.queue(queueName, prefilter).queue(queueName, run);
			},

			show: (function (orig) {
				return function (option) {
					if (standardAnimationOption(option)) {
						return orig.apply(this, arguments);
					} else {
						var args = _normalizeArguments.apply(this, arguments);
						args.mode = 'show';
						return this.effect.call(this, args);
					}
				};
			})($.fn.show),

			hide: (function (orig) {
				return function (option) {
					if (standardAnimationOption(option)) {
						return orig.apply(this, arguments);
					} else {
						var args = _normalizeArguments.apply(this, arguments);
						args.mode = 'hide';
						return this.effect.call(this, args);
					}
				};
			})($.fn.hide),

			toggle: (function (orig) {
				return function (option) {
					if (standardAnimationOption(option) || typeof option === 'boolean') {
						return orig.apply(this, arguments);
					} else {
						var args = _normalizeArguments.apply(this, arguments);
						args.mode = 'toggle';
						return this.effect.call(this, args);
					}
				};
			})($.fn.toggle),

			cssUnit: function (key) {
				var style = this.css(key),
					val = [];

				$.each(['em', 'px', '%', 'pt'], function (i, unit) {
					if (style.indexOf(unit) > 0) {
						val = [parseFloat(style), unit];
					}
				});
				return val;
			},

			cssClip: function (clipObj) {
				if (clipObj) {
					return this.css(
						'clip',
						'rect(' +
							clipObj.top +
							'px ' +
							clipObj.right +
							'px ' +
							clipObj.bottom +
							'px ' +
							clipObj.left +
							'px)'
					);
				}
				return parseClip(this.css('clip'), this);
			},

			transfer: function (options, done) {
				var element = $(this),
					target = $(options.to),
					targetFixed = target.css('position') === 'fixed',
					body = $('body'),
					fixTop = targetFixed ? body.scrollTop() : 0,
					fixLeft = targetFixed ? body.scrollLeft() : 0,
					endPosition = target.offset(),
					animation = {
						top: endPosition.top - fixTop,
						left: endPosition.left - fixLeft,
						height: target.innerHeight(),
						width: target.innerWidth(),
					},
					startPosition = element.offset(),
					transfer = $("<div class='ui-effects-transfer'></div>");

				transfer
					.appendTo('body')
					.addClass(options.className)
					.css({
						top: startPosition.top - fixTop,
						left: startPosition.left - fixLeft,
						height: element.innerHeight(),
						width: element.innerWidth(),
						position: targetFixed ? 'fixed' : 'absolute',
					})
					.animate(animation, options.duration, options.easing, function () {
						transfer.remove();
						if (typeof done === 'function') {
							done();
						}
					});
			},
		});

		function parseClip(str, element) {
			var outerWidth = element.outerWidth(),
				outerHeight = element.outerHeight(),
				clipRegex =
					/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,
				values = clipRegex.exec(str) || ['', 0, outerWidth, outerHeight, 0];

			return {
				top: parseFloat(values[1]) || 0,
				right: values[2] === 'auto' ? outerWidth : parseFloat(values[2]),
				bottom: values[3] === 'auto' ? outerHeight : parseFloat(values[3]),
				left: parseFloat(values[4]) || 0,
			};
		}

		$.fx.step.clip = function (fx) {
			if (!fx.clipInit) {
				fx.start = $(fx.elem).cssClip();
				if (typeof fx.end === 'string') {
					fx.end = parseClip(fx.end, fx.elem);
				}
				fx.clipInit = true;
			}

			$(fx.elem).cssClip({
				top: fx.pos * (fx.end.top - fx.start.top) + fx.start.top,
				right: fx.pos * (fx.end.right - fx.start.right) + fx.start.right,
				bottom: fx.pos * (fx.end.bottom - fx.start.bottom) + fx.start.bottom,
				left: fx.pos * (fx.end.left - fx.start.left) + fx.start.left,
			});
		};
	})();

	/******************************************************************************/
	/*********************************** EASING ***********************************/
	/******************************************************************************/

	(function () {
		// Based on easing equations from Robert Penner (http://www.robertpenner.com/easing)

		var baseEasings = {};

		$.each(['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'], function (i, name) {
			baseEasings[name] = function (p) {
				return Math.pow(p, i + 2);
			};
		});

		$.extend(baseEasings, {
			Sine: function (p) {
				return 1 - Math.cos((p * Math.PI) / 2);
			},
			Circ: function (p) {
				return 1 - Math.sqrt(1 - p * p);
			},
			Elastic: function (p) {
				return p === 0 || p === 1
					? p
					: -Math.pow(2, 8 * (p - 1)) *
							Math.sin((((p - 1) * 80 - 7.5) * Math.PI) / 15);
			},
			Back: function (p) {
				return p * p * (3 * p - 2);
			},
			Bounce: function (p) {
				var pow2,
					bounce = 4;

				while (p < ((pow2 = Math.pow(2, --bounce)) - 1) / 11) {}
				return (
					1 / Math.pow(4, 3 - bounce) -
					7.5625 * Math.pow((pow2 * 3 - 2) / 22 - p, 2)
				);
			},
		});

		$.each(baseEasings, function (name, easeIn) {
			$.easing['easeIn' + name] = easeIn;
			$.easing['easeOut' + name] = function (p) {
				return 1 - easeIn(1 - p);
			};
			$.easing['easeInOut' + name] = function (p) {
				return p < 0.5 ? easeIn(p * 2) / 2 : 1 - easeIn(p * -2 + 2) / 2;
			};
		});
	})();

	var effect = $.effects;

	/*!
	 * jQuery UI Effects Blind 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Blind Effect
	//>>group: Effects
	//>>description: Blinds the element.
	//>>docs: http://api.jqueryui.com/blind-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectBlind = $.effects.define(
		'blind',
		'hide',
		function (options, done) {
			var map = {
					up: ['bottom', 'top'],
					vertical: ['bottom', 'top'],
					down: ['top', 'bottom'],
					left: ['right', 'left'],
					horizontal: ['right', 'left'],
					right: ['left', 'right'],
				},
				element = $(this),
				direction = options.direction || 'up',
				start = element.cssClip(),
				animate = { clip: $.extend({}, start) },
				placeholder = $.effects.createPlaceholder(element);

			animate.clip[map[direction][0]] = animate.clip[map[direction][1]];

			if (options.mode === 'show') {
				element.cssClip(animate.clip);
				if (placeholder) {
					placeholder.css($.effects.clipToBox(animate));
				}

				animate.clip = start;
			}

			if (placeholder) {
				placeholder.animate(
					$.effects.clipToBox(animate),
					options.duration,
					options.easing
				);
			}

			element.animate(animate, {
				queue: false,
				duration: options.duration,
				easing: options.easing,
				complete: done,
			});
		}
	);

	/*!
	 * jQuery UI Effects Bounce 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Bounce Effect
	//>>group: Effects
	//>>description: Bounces an element horizontally or vertically n times.
	//>>docs: http://api.jqueryui.com/bounce-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectBounce = $.effects.define(
		'bounce',
		function (options, done) {
			var upAnim,
				downAnim,
				refValue,
				element = $(this),
				// Defaults:
				mode = options.mode,
				hide = mode === 'hide',
				show = mode === 'show',
				direction = options.direction || 'up',
				distance = options.distance,
				times = options.times || 5,
				// Number of internal animations
				anims = times * 2 + (show || hide ? 1 : 0),
				speed = options.duration / anims,
				easing = options.easing,
				// Utility:
				ref = direction === 'up' || direction === 'down' ? 'top' : 'left',
				motion = direction === 'up' || direction === 'left',
				i = 0,
				queuelen = element.queue().length;

			$.effects.createPlaceholder(element);

			refValue = element.css(ref);

			// Default distance for the BIGGEST bounce is the outer Distance / 3
			if (!distance) {
				distance = element[ref === 'top' ? 'outerHeight' : 'outerWidth']() / 3;
			}

			if (show) {
				downAnim = { opacity: 1 };
				downAnim[ref] = refValue;

				// If we are showing, force opacity 0 and set the initial position
				// then do the "first" animation
				element
					.css('opacity', 0)
					.css(ref, motion ? -distance * 2 : distance * 2)
					.animate(downAnim, speed, easing);
			}

			// Start at the smallest distance if we are hiding
			if (hide) {
				distance = distance / Math.pow(2, times - 1);
			}

			downAnim = {};
			downAnim[ref] = refValue;

			// Bounces up/down/left/right then back to 0 -- times * 2 animations happen here
			for (; i < times; i++) {
				upAnim = {};
				upAnim[ref] = (motion ? '-=' : '+=') + distance;

				element.animate(upAnim, speed, easing).animate(downAnim, speed, easing);

				distance = hide ? distance * 2 : distance / 2;
			}

			// Last Bounce when Hiding
			if (hide) {
				upAnim = { opacity: 0 };
				upAnim[ref] = (motion ? '-=' : '+=') + distance;

				element.animate(upAnim, speed, easing);
			}

			element.queue(done);

			$.effects.unshift(element, queuelen, anims + 1);
		}
	);

	/*!
	 * jQuery UI Effects Clip 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Clip Effect
	//>>group: Effects
	//>>description: Clips the element on and off like an old TV.
	//>>docs: http://api.jqueryui.com/clip-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectClip = $.effects.define(
		'clip',
		'hide',
		function (options, done) {
			var start,
				animate = {},
				element = $(this),
				direction = options.direction || 'vertical',
				both = direction === 'both',
				horizontal = both || direction === 'horizontal',
				vertical = both || direction === 'vertical';

			start = element.cssClip();
			animate.clip = {
				top: vertical ? (start.bottom - start.top) / 2 : start.top,
				right: horizontal ? (start.right - start.left) / 2 : start.right,
				bottom: vertical ? (start.bottom - start.top) / 2 : start.bottom,
				left: horizontal ? (start.right - start.left) / 2 : start.left,
			};

			$.effects.createPlaceholder(element);

			if (options.mode === 'show') {
				element.cssClip(animate.clip);
				animate.clip = start;
			}

			element.animate(animate, {
				queue: false,
				duration: options.duration,
				easing: options.easing,
				complete: done,
			});
		}
	);

	/*!
	 * jQuery UI Effects Drop 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Drop Effect
	//>>group: Effects
	//>>description: Moves an element in one direction and hides it at the same time.
	//>>docs: http://api.jqueryui.com/drop-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectDrop = $.effects.define(
		'drop',
		'hide',
		function (options, done) {
			var distance,
				element = $(this),
				mode = options.mode,
				show = mode === 'show',
				direction = options.direction || 'left',
				ref = direction === 'up' || direction === 'down' ? 'top' : 'left',
				motion = direction === 'up' || direction === 'left' ? '-=' : '+=',
				oppositeMotion = motion === '+=' ? '-=' : '+=',
				animation = {
					opacity: 0,
				};

			$.effects.createPlaceholder(element);

			distance =
				options.distance ||
				element[ref === 'top' ? 'outerHeight' : 'outerWidth'](true) / 2;

			animation[ref] = motion + distance;

			if (show) {
				element.css(animation);

				animation[ref] = oppositeMotion + distance;
				animation.opacity = 1;
			}

			// Animate
			element.animate(animation, {
				queue: false,
				duration: options.duration,
				easing: options.easing,
				complete: done,
			});
		}
	);

	/*!
	 * jQuery UI Effects Explode 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Explode Effect
	//>>group: Effects
	/* eslint-disable max-len */
	//>>description: Explodes an element in all directions into n pieces. Implodes an element to its original wholeness.
	/* eslint-enable max-len */
	//>>docs: http://api.jqueryui.com/explode-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectExplode = $.effects.define(
		'explode',
		'hide',
		function (options, done) {
			var i,
				j,
				left,
				top,
				mx,
				my,
				rows = options.pieces ? Math.round(Math.sqrt(options.pieces)) : 3,
				cells = rows,
				element = $(this),
				mode = options.mode,
				show = mode === 'show',
				// Show and then visibility:hidden the element before calculating offset
				offset = element.show().css('visibility', 'hidden').offset(),
				// Width and height of a piece
				width = Math.ceil(element.outerWidth() / cells),
				height = Math.ceil(element.outerHeight() / rows),
				pieces = [];

			// Children animate complete:
			function childComplete() {
				pieces.push(this);
				if (pieces.length === rows * cells) {
					animComplete();
				}
			}

			// Clone the element for each row and cell.
			for (i = 0; i < rows; i++) {
				// ===>
				top = offset.top + i * height;
				my = i - (rows - 1) / 2;

				for (j = 0; j < cells; j++) {
					// |||
					left = offset.left + j * width;
					mx = j - (cells - 1) / 2;

					// Create a clone of the now hidden main element that will be absolute positioned
					// within a wrapper div off the -left and -top equal to size of our pieces
					element
						.clone()
						.appendTo('body')
						.wrap('<div></div>')
						.css({
							position: 'absolute',
							visibility: 'visible',
							left: -j * width,
							top: -i * height,
						})

						// Select the wrapper - make it overflow: hidden and absolute positioned based on
						// where the original was located +left and +top equal to the size of pieces
						.parent()
						.addClass('ui-effects-explode')
						.css({
							position: 'absolute',
							overflow: 'hidden',
							width: width,
							height: height,
							left: left + (show ? mx * width : 0),
							top: top + (show ? my * height : 0),
							opacity: show ? 0 : 1,
						})
						.animate(
							{
								left: left + (show ? 0 : mx * width),
								top: top + (show ? 0 : my * height),
								opacity: show ? 1 : 0,
							},
							options.duration || 500,
							options.easing,
							childComplete
						);
				}
			}

			function animComplete() {
				element.css({
					visibility: 'visible',
				});
				$(pieces).remove();
				done();
			}
		}
	);

	/*!
	 * jQuery UI Effects Fade 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Fade Effect
	//>>group: Effects
	//>>description: Fades the element.
	//>>docs: http://api.jqueryui.com/fade-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectFade = $.effects.define(
		'fade',
		'toggle',
		function (options, done) {
			var show = options.mode === 'show';

			$(this)
				.css('opacity', show ? 0 : 1)
				.animate(
					{
						opacity: show ? 1 : 0,
					},
					{
						queue: false,
						duration: options.duration,
						easing: options.easing,
						complete: done,
					}
				);
		}
	);

	/*!
	 * jQuery UI Effects Fold 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Fold Effect
	//>>group: Effects
	//>>description: Folds an element first horizontally and then vertically.
	//>>docs: http://api.jqueryui.com/fold-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectFold = $.effects.define(
		'fold',
		'hide',
		function (options, done) {
			// Create element
			var element = $(this),
				mode = options.mode,
				show = mode === 'show',
				hide = mode === 'hide',
				size = options.size || 15,
				percent = /([0-9]+)%/.exec(size),
				horizFirst = !!options.horizFirst,
				ref = horizFirst ? ['right', 'bottom'] : ['bottom', 'right'],
				duration = options.duration / 2,
				placeholder = $.effects.createPlaceholder(element),
				start = element.cssClip(),
				animation1 = { clip: $.extend({}, start) },
				animation2 = { clip: $.extend({}, start) },
				distance = [start[ref[0]], start[ref[1]]],
				queuelen = element.queue().length;

			if (percent) {
				size = (parseInt(percent[1], 10) / 100) * distance[hide ? 0 : 1];
			}
			animation1.clip[ref[0]] = size;
			animation2.clip[ref[0]] = size;
			animation2.clip[ref[1]] = 0;

			if (show) {
				element.cssClip(animation2.clip);
				if (placeholder) {
					placeholder.css($.effects.clipToBox(animation2));
				}

				animation2.clip = start;
			}

			// Animate
			element
				.queue(function (next) {
					if (placeholder) {
						placeholder
							.animate(
								$.effects.clipToBox(animation1),
								duration,
								options.easing
							)
							.animate(
								$.effects.clipToBox(animation2),
								duration,
								options.easing
							);
					}

					next();
				})
				.animate(animation1, duration, options.easing)
				.animate(animation2, duration, options.easing)
				.queue(done);

			$.effects.unshift(element, queuelen, 4);
		}
	);

	/*!
	 * jQuery UI Effects Highlight 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Highlight Effect
	//>>group: Effects
	//>>description: Highlights the background of an element in a defined color for a custom duration.
	//>>docs: http://api.jqueryui.com/highlight-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectHighlight = $.effects.define(
		'highlight',
		'show',
		function (options, done) {
			var element = $(this),
				animation = {
					backgroundColor: element.css('backgroundColor'),
				};

			if (options.mode === 'hide') {
				animation.opacity = 0;
			}

			$.effects.saveStyle(element);

			element
				.css({
					backgroundImage: 'none',
					backgroundColor: options.color || '#ffff99',
				})
				.animate(animation, {
					queue: false,
					duration: options.duration,
					easing: options.easing,
					complete: done,
				});
		}
	);

	/*!
	 * jQuery UI Effects Size 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Size Effect
	//>>group: Effects
	//>>description: Resize an element to a specified width and height.
	//>>docs: http://api.jqueryui.com/size-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectSize = $.effects.define('size', function (options, done) {
		// Create element
		var baseline,
			factor,
			temp,
			element = $(this),
			// Copy for children
			cProps = ['fontSize'],
			vProps = [
				'borderTopWidth',
				'borderBottomWidth',
				'paddingTop',
				'paddingBottom',
			],
			hProps = [
				'borderLeftWidth',
				'borderRightWidth',
				'paddingLeft',
				'paddingRight',
			],
			// Set options
			mode = options.mode,
			restore = mode !== 'effect',
			scale = options.scale || 'both',
			origin = options.origin || ['middle', 'center'],
			position = element.css('position'),
			pos = element.position(),
			original = $.effects.scaledDimensions(element),
			from = options.from || original,
			to = options.to || $.effects.scaledDimensions(element, 0);

		$.effects.createPlaceholder(element);

		if (mode === 'show') {
			temp = from;
			from = to;
			to = temp;
		}

		// Set scaling factor
		factor = {
			from: {
				y: from.height / original.height,
				x: from.width / original.width,
			},
			to: {
				y: to.height / original.height,
				x: to.width / original.width,
			},
		};

		// Scale the css box
		if (scale === 'box' || scale === 'both') {
			// Vertical props scaling
			if (factor.from.y !== factor.to.y) {
				from = $.effects.setTransition(element, vProps, factor.from.y, from);
				to = $.effects.setTransition(element, vProps, factor.to.y, to);
			}

			// Horizontal props scaling
			if (factor.from.x !== factor.to.x) {
				from = $.effects.setTransition(element, hProps, factor.from.x, from);
				to = $.effects.setTransition(element, hProps, factor.to.x, to);
			}
		}

		// Scale the content
		if (scale === 'content' || scale === 'both') {
			// Vertical props scaling
			if (factor.from.y !== factor.to.y) {
				from = $.effects.setTransition(element, cProps, factor.from.y, from);
				to = $.effects.setTransition(element, cProps, factor.to.y, to);
			}
		}

		// Adjust the position properties based on the provided origin points
		if (origin) {
			baseline = $.effects.getBaseline(origin, original);
			from.top =
				(original.outerHeight - from.outerHeight) * baseline.y + pos.top;
			from.left =
				(original.outerWidth - from.outerWidth) * baseline.x + pos.left;
			to.top = (original.outerHeight - to.outerHeight) * baseline.y + pos.top;
			to.left = (original.outerWidth - to.outerWidth) * baseline.x + pos.left;
		}
		delete from.outerHeight;
		delete from.outerWidth;
		element.css(from);

		// Animate the children if desired
		if (scale === 'content' || scale === 'both') {
			vProps = vProps.concat(['marginTop', 'marginBottom']).concat(cProps);
			hProps = hProps.concat(['marginLeft', 'marginRight']);

			// Only animate children with width attributes specified
			// TODO: is this right? should we include anything with css width specified as well
			element.find('*[width]').each(function () {
				var child = $(this),
					childOriginal = $.effects.scaledDimensions(child),
					childFrom = {
						height: childOriginal.height * factor.from.y,
						width: childOriginal.width * factor.from.x,
						outerHeight: childOriginal.outerHeight * factor.from.y,
						outerWidth: childOriginal.outerWidth * factor.from.x,
					},
					childTo = {
						height: childOriginal.height * factor.to.y,
						width: childOriginal.width * factor.to.x,
						outerHeight: childOriginal.height * factor.to.y,
						outerWidth: childOriginal.width * factor.to.x,
					};

				// Vertical props scaling
				if (factor.from.y !== factor.to.y) {
					childFrom = $.effects.setTransition(
						child,
						vProps,
						factor.from.y,
						childFrom
					);
					childTo = $.effects.setTransition(
						child,
						vProps,
						factor.to.y,
						childTo
					);
				}

				// Horizontal props scaling
				if (factor.from.x !== factor.to.x) {
					childFrom = $.effects.setTransition(
						child,
						hProps,
						factor.from.x,
						childFrom
					);
					childTo = $.effects.setTransition(
						child,
						hProps,
						factor.to.x,
						childTo
					);
				}

				if (restore) {
					$.effects.saveStyle(child);
				}

				// Animate children
				child.css(childFrom);
				child.animate(childTo, options.duration, options.easing, function () {
					// Restore children
					if (restore) {
						$.effects.restoreStyle(child);
					}
				});
			});
		}

		// Animate
		element.animate(to, {
			queue: false,
			duration: options.duration,
			easing: options.easing,
			complete: function () {
				var offset = element.offset();

				if (to.opacity === 0) {
					element.css('opacity', from.opacity);
				}

				if (!restore) {
					element
						.css('position', position === 'static' ? 'relative' : position)
						.offset(offset);

					// Need to save style here so that automatic style restoration
					// doesn't restore to the original styles from before the animation.
					$.effects.saveStyle(element);
				}

				done();
			},
		});
	});

	/*!
	 * jQuery UI Effects Scale 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Scale Effect
	//>>group: Effects
	//>>description: Grows or shrinks an element and its content.
	//>>docs: http://api.jqueryui.com/scale-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectScale = $.effects.define('scale', function (options, done) {
		// Create element
		var el = $(this),
			mode = options.mode,
			percent =
				parseInt(options.percent, 10) ||
				(parseInt(options.percent, 10) === 0 ? 0 : mode !== 'effect' ? 0 : 100),
			newOptions = $.extend(
				true,
				{
					from: $.effects.scaledDimensions(el),
					to: $.effects.scaledDimensions(
						el,
						percent,
						options.direction || 'both'
					),
					origin: options.origin || ['middle', 'center'],
				},
				options
			);

		// Fade option to support puff
		if (options.fade) {
			newOptions.from.opacity = 1;
			newOptions.to.opacity = 0;
		}

		$.effects.effect.size.call(this, newOptions, done);
	});

	/*!
	 * jQuery UI Effects Puff 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Puff Effect
	//>>group: Effects
	//>>description: Creates a puff effect by scaling the element up and hiding it at the same time.
	//>>docs: http://api.jqueryui.com/puff-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectPuff = $.effects.define(
		'puff',
		'hide',
		function (options, done) {
			var newOptions = $.extend(true, {}, options, {
				fade: true,
				percent: parseInt(options.percent, 10) || 150,
			});

			$.effects.effect.scale.call(this, newOptions, done);
		}
	);

	/*!
	 * jQuery UI Effects Pulsate 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Pulsate Effect
	//>>group: Effects
	//>>description: Pulsates an element n times by changing the opacity to zero and back.
	//>>docs: http://api.jqueryui.com/pulsate-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectPulsate = $.effects.define(
		'pulsate',
		'show',
		function (options, done) {
			var element = $(this),
				mode = options.mode,
				show = mode === 'show',
				hide = mode === 'hide',
				showhide = show || hide,
				// Showing or hiding leaves off the "last" animation
				anims = (options.times || 5) * 2 + (showhide ? 1 : 0),
				duration = options.duration / anims,
				animateTo = 0,
				i = 1,
				queuelen = element.queue().length;

			if (show || !element.is(':visible')) {
				element.css('opacity', 0).show();
				animateTo = 1;
			}

			// Anims - 1 opacity "toggles"
			for (; i < anims; i++) {
				element.animate({ opacity: animateTo }, duration, options.easing);
				animateTo = 1 - animateTo;
			}

			element.animate({ opacity: animateTo }, duration, options.easing);

			element.queue(done);

			$.effects.unshift(element, queuelen, anims + 1);
		}
	);

	/*!
	 * jQuery UI Effects Shake 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Shake Effect
	//>>group: Effects
	//>>description: Shakes an element horizontally or vertically n times.
	//>>docs: http://api.jqueryui.com/shake-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectShake = $.effects.define('shake', function (options, done) {
		var i = 1,
			element = $(this),
			direction = options.direction || 'left',
			distance = options.distance || 20,
			times = options.times || 3,
			anims = times * 2 + 1,
			speed = Math.round(options.duration / anims),
			ref = direction === 'up' || direction === 'down' ? 'top' : 'left',
			positiveMotion = direction === 'up' || direction === 'left',
			animation = {},
			animation1 = {},
			animation2 = {},
			queuelen = element.queue().length;

		$.effects.createPlaceholder(element);

		// Animation
		animation[ref] = (positiveMotion ? '-=' : '+=') + distance;
		animation1[ref] = (positiveMotion ? '+=' : '-=') + distance * 2;
		animation2[ref] = (positiveMotion ? '-=' : '+=') + distance * 2;

		// Animate
		element.animate(animation, speed, options.easing);

		// Shakes
		for (; i < times; i++) {
			element
				.animate(animation1, speed, options.easing)
				.animate(animation2, speed, options.easing);
		}

		element
			.animate(animation1, speed, options.easing)
			.animate(animation, speed / 2, options.easing)
			.queue(done);

		$.effects.unshift(element, queuelen, anims + 1);
	});

	/*!
	 * jQuery UI Effects Slide 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Slide Effect
	//>>group: Effects
	//>>description: Slides an element in and out of the viewport.
	//>>docs: http://api.jqueryui.com/slide-effect/
	//>>demos: http://jqueryui.com/effect/

	var effectsEffectSlide = $.effects.define(
		'slide',
		'show',
		function (options, done) {
			var startClip,
				startRef,
				element = $(this),
				map = {
					up: ['bottom', 'top'],
					down: ['top', 'bottom'],
					left: ['right', 'left'],
					right: ['left', 'right'],
				},
				mode = options.mode,
				direction = options.direction || 'left',
				ref = direction === 'up' || direction === 'down' ? 'top' : 'left',
				positiveMotion = direction === 'up' || direction === 'left',
				distance =
					options.distance ||
					element[ref === 'top' ? 'outerHeight' : 'outerWidth'](true),
				animation = {};

			$.effects.createPlaceholder(element);

			startClip = element.cssClip();
			startRef = element.position()[ref];

			// Define hide animation
			animation[ref] = (positiveMotion ? -1 : 1) * distance + startRef;
			animation.clip = element.cssClip();
			animation.clip[map[direction][1]] = animation.clip[map[direction][0]];

			// Reverse the animation if we're showing
			if (mode === 'show') {
				element.cssClip(animation.clip);
				element.css(ref, animation[ref]);
				animation.clip = startClip;
				animation[ref] = startRef;
			}

			// Actually animate
			element.animate(animation, {
				queue: false,
				duration: options.duration,
				easing: options.easing,
				complete: done,
			});
		}
	);

	/*!
	 * jQuery UI Effects Transfer 1.13.1
	 * http://jqueryui.com
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 */

	//>>label: Transfer Effect
	//>>group: Effects
	//>>description: Displays a transfer effect from one element to another.
	//>>docs: http://api.jqueryui.com/transfer-effect/
	//>>demos: http://jqueryui.com/effect/

	var effect;
	if ($.uiBackCompat !== false) {
		effect = $.effects.define('transfer', function (options, done) {
			$(this).transfer(options, done);
		});
	}
	var effectsEffectTransfer = effect;
});

/**
 * @popperjs/core v2.11.2 - MIT License
 */

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined'
		? factory(exports)
		: typeof define === 'function' && define.amd
		? define(['exports'], factory)
		: ((global =
				typeof globalThis !== 'undefined' ? globalThis : global || self),
		  factory((global.Popper = {})));
})(this, function (exports) {
	'use strict';

	function getWindow(node) {
		if (node == null) {
			return window;
		}

		if (node.toString() !== '[object Window]') {
			var ownerDocument = node.ownerDocument;
			return ownerDocument ? ownerDocument.defaultView || window : window;
		}

		return node;
	}

	function isElement(node) {
		var OwnElement = getWindow(node).Element;
		return node instanceof OwnElement || node instanceof Element;
	}

	function isHTMLElement(node) {
		var OwnElement = getWindow(node).HTMLElement;
		return node instanceof OwnElement || node instanceof HTMLElement;
	}

	function isShadowRoot(node) {
		// IE 11 has no ShadowRoot
		if (typeof ShadowRoot === 'undefined') {
			return false;
		}

		var OwnElement = getWindow(node).ShadowRoot;
		return node instanceof OwnElement || node instanceof ShadowRoot;
	}

	var max = Math.max;
	var min = Math.min;
	var round = Math.round;

	function getBoundingClientRect(element, includeScale) {
		if (includeScale === void 0) {
			includeScale = false;
		}

		var rect = element.getBoundingClientRect();
		var scaleX = 1;
		var scaleY = 1;

		if (isHTMLElement(element) && includeScale) {
			var offsetHeight = element.offsetHeight;
			var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale
			// Fallback to 1 in case both values are `0`

			if (offsetWidth > 0) {
				scaleX = round(rect.width) / offsetWidth || 1;
			}

			if (offsetHeight > 0) {
				scaleY = round(rect.height) / offsetHeight || 1;
			}
		}

		return {
			width: rect.width / scaleX,
			height: rect.height / scaleY,
			top: rect.top / scaleY,
			right: rect.right / scaleX,
			bottom: rect.bottom / scaleY,
			left: rect.left / scaleX,
			x: rect.left / scaleX,
			y: rect.top / scaleY,
		};
	}

	function getWindowScroll(node) {
		var win = getWindow(node);
		var scrollLeft = win.pageXOffset;
		var scrollTop = win.pageYOffset;
		return {
			scrollLeft: scrollLeft,
			scrollTop: scrollTop,
		};
	}

	function getHTMLElementScroll(element) {
		return {
			scrollLeft: element.scrollLeft,
			scrollTop: element.scrollTop,
		};
	}

	function getNodeScroll(node) {
		if (node === getWindow(node) || !isHTMLElement(node)) {
			return getWindowScroll(node);
		} else {
			return getHTMLElementScroll(node);
		}
	}

	function getNodeName(element) {
		return element ? (element.nodeName || '').toLowerCase() : null;
	}

	function getDocumentElement(element) {
		// $FlowFixMe[incompatible-return]: assume body is always available
		return (
			(isElement(element)
				? element.ownerDocument // $FlowFixMe[prop-missing]
				: element.document) || window.document
		).documentElement;
	}

	function getWindowScrollBarX(element) {
		// If <html> has a CSS width greater than the viewport, then this will be
		// incorrect for RTL.
		// Popper 1 is broken in this case and never had a bug report so let's assume
		// it's not an issue. I don't think anyone ever specifies width on <html>
		// anyway.
		// Browsers where the left scrollbar doesn't cause an issue report `0` for
		// this (e.g. Edge 2019, IE11, Safari)
		return (
			getBoundingClientRect(getDocumentElement(element)).left +
			getWindowScroll(element).scrollLeft
		);
	}

	function getComputedStyle(element) {
		return getWindow(element).getComputedStyle(element);
	}

	function isScrollParent(element) {
		// Firefox wants us to check `-x` and `-y` variations as well
		var _getComputedStyle = getComputedStyle(element),
			overflow = _getComputedStyle.overflow,
			overflowX = _getComputedStyle.overflowX,
			overflowY = _getComputedStyle.overflowY;

		return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
	}

	function isElementScaled(element) {
		var rect = element.getBoundingClientRect();
		var scaleX = round(rect.width) / element.offsetWidth || 1;
		var scaleY = round(rect.height) / element.offsetHeight || 1;
		return scaleX !== 1 || scaleY !== 1;
	} // Returns the composite rect of an element relative to its offsetParent.
	// Composite means it takes into account transforms as well as layout.

	function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
		if (isFixed === void 0) {
			isFixed = false;
		}

		var isOffsetParentAnElement = isHTMLElement(offsetParent);
		var offsetParentIsScaled =
			isHTMLElement(offsetParent) && isElementScaled(offsetParent);
		var documentElement = getDocumentElement(offsetParent);
		var rect = getBoundingClientRect(
			elementOrVirtualElement,
			offsetParentIsScaled
		);
		var scroll = {
			scrollLeft: 0,
			scrollTop: 0,
		};
		var offsets = {
			x: 0,
			y: 0,
		};

		if (isOffsetParentAnElement || (!isOffsetParentAnElement && !isFixed)) {
			if (
				getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
				isScrollParent(documentElement)
			) {
				scroll = getNodeScroll(offsetParent);
			}

			if (isHTMLElement(offsetParent)) {
				offsets = getBoundingClientRect(offsetParent, true);
				offsets.x += offsetParent.clientLeft;
				offsets.y += offsetParent.clientTop;
			} else if (documentElement) {
				offsets.x = getWindowScrollBarX(documentElement);
			}
		}

		return {
			x: rect.left + scroll.scrollLeft - offsets.x,
			y: rect.top + scroll.scrollTop - offsets.y,
			width: rect.width,
			height: rect.height,
		};
	}

	// means it doesn't take into account transforms.

	function getLayoutRect(element) {
		var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
		// Fixes https://github.com/popperjs/popper-core/issues/1223

		var width = element.offsetWidth;
		var height = element.offsetHeight;

		if (Math.abs(clientRect.width - width) <= 1) {
			width = clientRect.width;
		}

		if (Math.abs(clientRect.height - height) <= 1) {
			height = clientRect.height;
		}

		return {
			x: element.offsetLeft,
			y: element.offsetTop,
			width: width,
			height: height,
		};
	}

	function getParentNode(element) {
		if (getNodeName(element) === 'html') {
			return element;
		}

		return (
			// this is a quicker (but less type safe) way to save quite some bytes from the bundle
			// $FlowFixMe[incompatible-return]
			// $FlowFixMe[prop-missing]
			element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
			element.parentNode || // DOM Element detected
			(isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
			// $FlowFixMe[incompatible-call]: HTMLElement is a Node
			getDocumentElement(element) // fallback
		);
	}

	function getScrollParent(node) {
		if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
			// $FlowFixMe[incompatible-return]: assume body is always available
			return node.ownerDocument.body;
		}

		if (isHTMLElement(node) && isScrollParent(node)) {
			return node;
		}

		return getScrollParent(getParentNode(node));
	}

	/*
  given a DOM element, return the list of all scroll parents, up the list of ancesors
  until we get to the top window object. This list is what we attach scroll listeners
  to, because if any of these parent elements scroll, we'll need to re-calculate the
  reference element's position.
  */

	function listScrollParents(element, list) {
		var _element$ownerDocumen;

		if (list === void 0) {
			list = [];
		}

		var scrollParent = getScrollParent(element);
		var isBody =
			scrollParent ===
			((_element$ownerDocumen = element.ownerDocument) == null
				? void 0
				: _element$ownerDocumen.body);
		var win = getWindow(scrollParent);
		var target = isBody
			? [win].concat(
					win.visualViewport || [],
					isScrollParent(scrollParent) ? scrollParent : []
			  )
			: scrollParent;
		var updatedList = list.concat(target);
		return isBody
			? updatedList // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
			: updatedList.concat(listScrollParents(getParentNode(target)));
	}

	function isTableElement(element) {
		return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
	}

	function getTrueOffsetParent(element) {
		if (
			!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
			getComputedStyle(element).position === 'fixed'
		) {
			return null;
		}

		return element.offsetParent;
	} // `.offsetParent` reports `null` for fixed elements, while absolute elements
	// return the containing block

	function getContainingBlock(element) {
		var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;
		var isIE = navigator.userAgent.indexOf('Trident') !== -1;

		if (isIE && isHTMLElement(element)) {
			// In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
			var elementCss = getComputedStyle(element);

			if (elementCss.position === 'fixed') {
				return null;
			}
		}

		var currentNode = getParentNode(element);

		while (
			isHTMLElement(currentNode) &&
			['html', 'body'].indexOf(getNodeName(currentNode)) < 0
		) {
			var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that
			// create a containing block.
			// https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

			if (
				css.transform !== 'none' ||
				css.perspective !== 'none' ||
				css.contain === 'paint' ||
				['transform', 'perspective'].indexOf(css.willChange) !== -1 ||
				(isFirefox && css.willChange === 'filter') ||
				(isFirefox && css.filter && css.filter !== 'none')
			) {
				return currentNode;
			} else {
				currentNode = currentNode.parentNode;
			}
		}

		return null;
	} // Gets the closest ancestor positioned element. Handles some edge cases,
	// such as table ancestors and cross browser bugs.

	function getOffsetParent(element) {
		var window = getWindow(element);
		var offsetParent = getTrueOffsetParent(element);

		while (
			offsetParent &&
			isTableElement(offsetParent) &&
			getComputedStyle(offsetParent).position === 'static'
		) {
			offsetParent = getTrueOffsetParent(offsetParent);
		}

		if (
			offsetParent &&
			(getNodeName(offsetParent) === 'html' ||
				(getNodeName(offsetParent) === 'body' &&
					getComputedStyle(offsetParent).position === 'static'))
		) {
			return window;
		}

		return offsetParent || getContainingBlock(element) || window;
	}

	var top = 'top';
	var bottom = 'bottom';
	var right = 'right';
	var left = 'left';
	var auto = 'auto';
	var basePlacements = [top, bottom, right, left];
	var start = 'start';
	var end = 'end';
	var clippingParents = 'clippingParents';
	var viewport = 'viewport';
	var popper = 'popper';
	var reference = 'reference';
	var variationPlacements = /*#__PURE__*/ basePlacements.reduce(function (
		acc,
		placement
	) {
		return acc.concat([placement + '-' + start, placement + '-' + end]);
	},
	[]);
	var placements = /*#__PURE__*/ []
		.concat(basePlacements, [auto])
		.reduce(function (acc, placement) {
			return acc.concat([
				placement,
				placement + '-' + start,
				placement + '-' + end,
			]);
		}, []); // modifiers that need to read the DOM

	var beforeRead = 'beforeRead';
	var read = 'read';
	var afterRead = 'afterRead'; // pure-logic modifiers

	var beforeMain = 'beforeMain';
	var main = 'main';
	var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

	var beforeWrite = 'beforeWrite';
	var write = 'write';
	var afterWrite = 'afterWrite';
	var modifierPhases = [
		beforeRead,
		read,
		afterRead,
		beforeMain,
		main,
		afterMain,
		beforeWrite,
		write,
		afterWrite,
	];

	function order(modifiers) {
		var map = new Map();
		var visited = new Set();
		var result = [];
		modifiers.forEach(function (modifier) {
			map.set(modifier.name, modifier);
		}); // On visiting object, check for its dependencies and visit them recursively

		function sort(modifier) {
			visited.add(modifier.name);
			var requires = [].concat(
				modifier.requires || [],
				modifier.requiresIfExists || []
			);
			requires.forEach(function (dep) {
				if (!visited.has(dep)) {
					var depModifier = map.get(dep);

					if (depModifier) {
						sort(depModifier);
					}
				}
			});
			result.push(modifier);
		}

		modifiers.forEach(function (modifier) {
			if (!visited.has(modifier.name)) {
				// check for visited object
				sort(modifier);
			}
		});
		return result;
	}

	function orderModifiers(modifiers) {
		// order based on dependencies
		var orderedModifiers = order(modifiers); // order based on phase

		return modifierPhases.reduce(function (acc, phase) {
			return acc.concat(
				orderedModifiers.filter(function (modifier) {
					return modifier.phase === phase;
				})
			);
		}, []);
	}

	function debounce(fn) {
		var pending;
		return function () {
			if (!pending) {
				pending = new Promise(function (resolve) {
					Promise.resolve().then(function () {
						pending = undefined;
						resolve(fn());
					});
				});
			}

			return pending;
		};
	}

	function format(str) {
		for (
			var _len = arguments.length,
				args = new Array(_len > 1 ? _len - 1 : 0),
				_key = 1;
			_key < _len;
			_key++
		) {
			args[_key - 1] = arguments[_key];
		}

		return [].concat(args).reduce(function (p, c) {
			return p.replace(/%s/, c);
		}, str);
	}

	var INVALID_MODIFIER_ERROR =
		'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
	var MISSING_DEPENDENCY_ERROR =
		'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
	var VALID_PROPERTIES = [
		'name',
		'enabled',
		'phase',
		'fn',
		'effect',
		'requires',
		'options',
	];
	function validateModifiers(modifiers) {
		modifiers.forEach(function (modifier) {
			[]
				.concat(Object.keys(modifier), VALID_PROPERTIES) // IE11-compatible replacement for `new Set(iterable)`
				.filter(function (value, index, self) {
					return self.indexOf(value) === index;
				})
				.forEach(function (key) {
					switch (key) {
						case 'name':
							if (typeof modifier.name !== 'string') {
								console.error(
									format(
										INVALID_MODIFIER_ERROR,
										String(modifier.name),
										'"name"',
										'"string"',
										'"' + String(modifier.name) + '"'
									)
								);
							}

							break;

						case 'enabled':
							if (typeof modifier.enabled !== 'boolean') {
								console.error(
									format(
										INVALID_MODIFIER_ERROR,
										modifier.name,
										'"enabled"',
										'"boolean"',
										'"' + String(modifier.enabled) + '"'
									)
								);
							}

							break;

						case 'phase':
							if (modifierPhases.indexOf(modifier.phase) < 0) {
								console.error(
									format(
										INVALID_MODIFIER_ERROR,
										modifier.name,
										'"phase"',
										'either ' + modifierPhases.join(', '),
										'"' + String(modifier.phase) + '"'
									)
								);
							}

							break;

						case 'fn':
							if (typeof modifier.fn !== 'function') {
								console.error(
									format(
										INVALID_MODIFIER_ERROR,
										modifier.name,
										'"fn"',
										'"function"',
										'"' + String(modifier.fn) + '"'
									)
								);
							}

							break;

						case 'effect':
							if (
								modifier.effect != null &&
								typeof modifier.effect !== 'function'
							) {
								console.error(
									format(
										INVALID_MODIFIER_ERROR,
										modifier.name,
										'"effect"',
										'"function"',
										'"' + String(modifier.fn) + '"'
									)
								);
							}

							break;

						case 'requires':
							if (
								modifier.requires != null &&
								!Array.isArray(modifier.requires)
							) {
								console.error(
									format(
										INVALID_MODIFIER_ERROR,
										modifier.name,
										'"requires"',
										'"array"',
										'"' + String(modifier.requires) + '"'
									)
								);
							}

							break;

						case 'requiresIfExists':
							if (!Array.isArray(modifier.requiresIfExists)) {
								console.error(
									format(
										INVALID_MODIFIER_ERROR,
										modifier.name,
										'"requiresIfExists"',
										'"array"',
										'"' + String(modifier.requiresIfExists) + '"'
									)
								);
							}

							break;

						case 'options':
						case 'data':
							break;

						default:
							console.error(
								'PopperJS: an invalid property has been provided to the "' +
									modifier.name +
									'" modifier, valid properties are ' +
									VALID_PROPERTIES.map(function (s) {
										return '"' + s + '"';
									}).join(', ') +
									'; but "' +
									key +
									'" was provided.'
							);
					}

					modifier.requires &&
						modifier.requires.forEach(function (requirement) {
							if (
								modifiers.find(function (mod) {
									return mod.name === requirement;
								}) == null
							) {
								console.error(
									format(
										MISSING_DEPENDENCY_ERROR,
										String(modifier.name),
										requirement,
										requirement
									)
								);
							}
						});
				});
		});
	}

	function uniqueBy(arr, fn) {
		var identifiers = new Set();
		return arr.filter(function (item) {
			var identifier = fn(item);

			if (!identifiers.has(identifier)) {
				identifiers.add(identifier);
				return true;
			}
		});
	}

	function getBasePlacement(placement) {
		return placement.split('-')[0];
	}

	function mergeByName(modifiers) {
		var merged = modifiers.reduce(function (merged, current) {
			var existing = merged[current.name];
			merged[current.name] = existing
				? Object.assign({}, existing, current, {
						options: Object.assign({}, existing.options, current.options),
						data: Object.assign({}, existing.data, current.data),
				  })
				: current;
			return merged;
		}, {}); // IE11 does not support Object.values

		return Object.keys(merged).map(function (key) {
			return merged[key];
		});
	}

	function getViewportRect(element) {
		var win = getWindow(element);
		var html = getDocumentElement(element);
		var visualViewport = win.visualViewport;
		var width = html.clientWidth;
		var height = html.clientHeight;
		var x = 0;
		var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper
		// can be obscured underneath it.
		// Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even
		// if it isn't open, so if this isn't available, the popper will be detected
		// to overflow the bottom of the screen too early.

		if (visualViewport) {
			width = visualViewport.width;
			height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)
			// In Chrome, it returns a value very close to 0 (+/-) but contains rounding
			// errors due to floating point numbers, so we need to check precision.
			// Safari returns a number <= 0, usually < -1 when pinch-zoomed
			// Feature detection fails in mobile emulation mode in Chrome.
			// Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <
			// 0.001
			// Fallback here: "Not Safari" userAgent

			if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
				x = visualViewport.offsetLeft;
				y = visualViewport.offsetTop;
			}
		}

		return {
			width: width,
			height: height,
			x: x + getWindowScrollBarX(element),
			y: y,
		};
	}

	// of the `<html>` and `<body>` rect bounds if horizontally scrollable

	function getDocumentRect(element) {
		var _element$ownerDocumen;

		var html = getDocumentElement(element);
		var winScroll = getWindowScroll(element);
		var body =
			(_element$ownerDocumen = element.ownerDocument) == null
				? void 0
				: _element$ownerDocumen.body;
		var width = max(
			html.scrollWidth,
			html.clientWidth,
			body ? body.scrollWidth : 0,
			body ? body.clientWidth : 0
		);
		var height = max(
			html.scrollHeight,
			html.clientHeight,
			body ? body.scrollHeight : 0,
			body ? body.clientHeight : 0
		);
		var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
		var y = -winScroll.scrollTop;

		if (getComputedStyle(body || html).direction === 'rtl') {
			x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
		}

		return {
			width: width,
			height: height,
			x: x,
			y: y,
		};
	}

	function contains(parent, child) {
		var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

		if (parent.contains(child)) {
			return true;
		} // then fallback to custom implementation with Shadow DOM support
		else if (rootNode && isShadowRoot(rootNode)) {
			var next = child;

			do {
				if (next && parent.isSameNode(next)) {
					return true;
				} // $FlowFixMe[prop-missing]: need a better way to handle this...

				next = next.parentNode || next.host;
			} while (next);
		} // Give up, the result is false

		return false;
	}

	function rectToClientRect(rect) {
		return Object.assign({}, rect, {
			left: rect.x,
			top: rect.y,
			right: rect.x + rect.width,
			bottom: rect.y + rect.height,
		});
	}

	function getInnerBoundingClientRect(element) {
		var rect = getBoundingClientRect(element);
		rect.top = rect.top + element.clientTop;
		rect.left = rect.left + element.clientLeft;
		rect.bottom = rect.top + element.clientHeight;
		rect.right = rect.left + element.clientWidth;
		rect.width = element.clientWidth;
		rect.height = element.clientHeight;
		rect.x = rect.left;
		rect.y = rect.top;
		return rect;
	}

	function getClientRectFromMixedType(element, clippingParent) {
		return clippingParent === viewport
			? rectToClientRect(getViewportRect(element))
			: isElement(clippingParent)
			? getInnerBoundingClientRect(clippingParent)
			: rectToClientRect(getDocumentRect(getDocumentElement(element)));
	} // A "clipping parent" is an overflowable container with the characteristic of
	// clipping (or hiding) overflowing elements with a position different from
	// `initial`

	function getClippingParents(element) {
		var clippingParents = listScrollParents(getParentNode(element));
		var canEscapeClipping =
			['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;
		var clipperElement =
			canEscapeClipping && isHTMLElement(element)
				? getOffsetParent(element)
				: element;

		if (!isElement(clipperElement)) {
			return [];
		} // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414

		return clippingParents.filter(function (clippingParent) {
			return (
				isElement(clippingParent) &&
				contains(clippingParent, clipperElement) &&
				getNodeName(clippingParent) !== 'body'
			);
		});
	} // Gets the maximum area that the element is visible in due to any number of
	// clipping parents

	function getClippingRect(element, boundary, rootBoundary) {
		var mainClippingParents =
			boundary === 'clippingParents'
				? getClippingParents(element)
				: [].concat(boundary);
		var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
		var firstClippingParent = clippingParents[0];
		var clippingRect = clippingParents.reduce(function (
			accRect,
			clippingParent
		) {
			var rect = getClientRectFromMixedType(element, clippingParent);
			accRect.top = max(rect.top, accRect.top);
			accRect.right = min(rect.right, accRect.right);
			accRect.bottom = min(rect.bottom, accRect.bottom);
			accRect.left = max(rect.left, accRect.left);
			return accRect;
		},
		getClientRectFromMixedType(element, firstClippingParent));
		clippingRect.width = clippingRect.right - clippingRect.left;
		clippingRect.height = clippingRect.bottom - clippingRect.top;
		clippingRect.x = clippingRect.left;
		clippingRect.y = clippingRect.top;
		return clippingRect;
	}

	function getVariation(placement) {
		return placement.split('-')[1];
	}

	function getMainAxisFromPlacement(placement) {
		return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
	}

	function computeOffsets(_ref) {
		var reference = _ref.reference,
			element = _ref.element,
			placement = _ref.placement;
		var basePlacement = placement ? getBasePlacement(placement) : null;
		var variation = placement ? getVariation(placement) : null;
		var commonX = reference.x + reference.width / 2 - element.width / 2;
		var commonY = reference.y + reference.height / 2 - element.height / 2;
		var offsets;

		switch (basePlacement) {
			case top:
				offsets = {
					x: commonX,
					y: reference.y - element.height,
				};
				break;

			case bottom:
				offsets = {
					x: commonX,
					y: reference.y + reference.height,
				};
				break;

			case right:
				offsets = {
					x: reference.x + reference.width,
					y: commonY,
				};
				break;

			case left:
				offsets = {
					x: reference.x - element.width,
					y: commonY,
				};
				break;

			default:
				offsets = {
					x: reference.x,
					y: reference.y,
				};
		}

		var mainAxis = basePlacement
			? getMainAxisFromPlacement(basePlacement)
			: null;

		if (mainAxis != null) {
			var len = mainAxis === 'y' ? 'height' : 'width';

			switch (variation) {
				case start:
					offsets[mainAxis] =
						offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
					break;

				case end:
					offsets[mainAxis] =
						offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
					break;
			}
		}

		return offsets;
	}

	function getFreshSideObject() {
		return {
			top: 0,
			right: 0,
			bottom: 0,
			left: 0,
		};
	}

	function mergePaddingObject(paddingObject) {
		return Object.assign({}, getFreshSideObject(), paddingObject);
	}

	function expandToHashMap(value, keys) {
		return keys.reduce(function (hashMap, key) {
			hashMap[key] = value;
			return hashMap;
		}, {});
	}

	function detectOverflow(state, options) {
		if (options === void 0) {
			options = {};
		}

		var _options = options,
			_options$placement = _options.placement,
			placement =
				_options$placement === void 0 ? state.placement : _options$placement,
			_options$boundary = _options.boundary,
			boundary =
				_options$boundary === void 0 ? clippingParents : _options$boundary,
			_options$rootBoundary = _options.rootBoundary,
			rootBoundary =
				_options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
			_options$elementConte = _options.elementContext,
			elementContext =
				_options$elementConte === void 0 ? popper : _options$elementConte,
			_options$altBoundary = _options.altBoundary,
			altBoundary =
				_options$altBoundary === void 0 ? false : _options$altBoundary,
			_options$padding = _options.padding,
			padding = _options$padding === void 0 ? 0 : _options$padding;
		var paddingObject = mergePaddingObject(
			typeof padding !== 'number'
				? padding
				: expandToHashMap(padding, basePlacements)
		);
		var altContext = elementContext === popper ? reference : popper;
		var popperRect = state.rects.popper;
		var element = state.elements[altBoundary ? altContext : elementContext];
		var clippingClientRect = getClippingRect(
			isElement(element)
				? element
				: element.contextElement || getDocumentElement(state.elements.popper),
			boundary,
			rootBoundary
		);
		var referenceClientRect = getBoundingClientRect(state.elements.reference);
		var popperOffsets = computeOffsets({
			reference: referenceClientRect,
			element: popperRect,
			strategy: 'absolute',
			placement: placement,
		});
		var popperClientRect = rectToClientRect(
			Object.assign({}, popperRect, popperOffsets)
		);
		var elementClientRect =
			elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
		// 0 or negative = within the clipping rect

		var overflowOffsets = {
			top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
			bottom:
				elementClientRect.bottom -
				clippingClientRect.bottom +
				paddingObject.bottom,
			left:
				clippingClientRect.left - elementClientRect.left + paddingObject.left,
			right:
				elementClientRect.right -
				clippingClientRect.right +
				paddingObject.right,
		};
		var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

		if (elementContext === popper && offsetData) {
			var offset = offsetData[placement];
			Object.keys(overflowOffsets).forEach(function (key) {
				var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
				var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
				overflowOffsets[key] += offset[axis] * multiply;
			});
		}

		return overflowOffsets;
	}

	var INVALID_ELEMENT_ERROR =
		'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';
	var INFINITE_LOOP_ERROR =
		'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
	var DEFAULT_OPTIONS = {
		placement: 'bottom',
		modifiers: [],
		strategy: 'absolute',
	};

	function areValidElements() {
		for (
			var _len = arguments.length, args = new Array(_len), _key = 0;
			_key < _len;
			_key++
		) {
			args[_key] = arguments[_key];
		}

		return !args.some(function (element) {
			return !(element && typeof element.getBoundingClientRect === 'function');
		});
	}

	function popperGenerator(generatorOptions) {
		if (generatorOptions === void 0) {
			generatorOptions = {};
		}

		var _generatorOptions = generatorOptions,
			_generatorOptions$def = _generatorOptions.defaultModifiers,
			defaultModifiers =
				_generatorOptions$def === void 0 ? [] : _generatorOptions$def,
			_generatorOptions$def2 = _generatorOptions.defaultOptions,
			defaultOptions =
				_generatorOptions$def2 === void 0
					? DEFAULT_OPTIONS
					: _generatorOptions$def2;
		return function createPopper(reference, popper, options) {
			if (options === void 0) {
				options = defaultOptions;
			}

			var state = {
				placement: 'bottom',
				orderedModifiers: [],
				options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
				modifiersData: {},
				elements: {
					reference: reference,
					popper: popper,
				},
				attributes: {},
				styles: {},
			};
			var effectCleanupFns = [];
			var isDestroyed = false;
			var instance = {
				state: state,
				setOptions: function setOptions(setOptionsAction) {
					var options =
						typeof setOptionsAction === 'function'
							? setOptionsAction(state.options)
							: setOptionsAction;
					cleanupModifierEffects();
					state.options = Object.assign(
						{},
						defaultOptions,
						state.options,
						options
					);
					state.scrollParents = {
						reference: isElement(reference)
							? listScrollParents(reference)
							: reference.contextElement
							? listScrollParents(reference.contextElement)
							: [],
						popper: listScrollParents(popper),
					}; // Orders the modifiers based on their dependencies and `phase`
					// properties

					var orderedModifiers = orderModifiers(
						mergeByName([].concat(defaultModifiers, state.options.modifiers))
					); // Strip out disabled modifiers

					state.orderedModifiers = orderedModifiers.filter(function (m) {
						return m.enabled;
					}); // Validate the provided modifiers so that the consumer will get warned
					// if one of the modifiers is invalid for any reason

					{
						var modifiers = uniqueBy(
							[].concat(orderedModifiers, state.options.modifiers),
							function (_ref) {
								var name = _ref.name;
								return name;
							}
						);
						validateModifiers(modifiers);

						if (getBasePlacement(state.options.placement) === auto) {
							var flipModifier = state.orderedModifiers.find(function (_ref2) {
								var name = _ref2.name;
								return name === 'flip';
							});

							if (!flipModifier) {
								console.error(
									[
										'Popper: "auto" placements require the "flip" modifier be',
										'present and enabled to work.',
									].join(' ')
								);
							}
						}

						var _getComputedStyle = getComputedStyle(popper),
							marginTop = _getComputedStyle.marginTop,
							marginRight = _getComputedStyle.marginRight,
							marginBottom = _getComputedStyle.marginBottom,
							marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
						// cause bugs with positioning, so we'll warn the consumer

						if (
							[marginTop, marginRight, marginBottom, marginLeft].some(function (
								margin
							) {
								return parseFloat(margin);
							})
						) {
							console.warn(
								[
									'Popper: CSS "margin" styles cannot be used to apply padding',
									'between the popper and its reference element or boundary.',
									'To replicate margin, use the `offset` modifier, as well as',
									'the `padding` option in the `preventOverflow` and `flip`',
									'modifiers.',
								].join(' ')
							);
						}
					}

					runModifierEffects();
					return instance.update();
				},
				// Sync update – it will always be executed, even if not necessary. This
				// is useful for low frequency updates where sync behavior simplifies the
				// logic.
				// For high frequency updates (e.g. `resize` and `scroll` events), always
				// prefer the async Popper#update method
				forceUpdate: function forceUpdate() {
					if (isDestroyed) {
						return;
					}

					var _state$elements = state.elements,
						reference = _state$elements.reference,
						popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
					// anymore

					if (!areValidElements(reference, popper)) {
						{
							console.error(INVALID_ELEMENT_ERROR);
						}

						return;
					} // Store the reference and popper rects to be read by modifiers

					state.rects = {
						reference: getCompositeRect(
							reference,
							getOffsetParent(popper),
							state.options.strategy === 'fixed'
						),
						popper: getLayoutRect(popper),
					}; // Modifiers have the ability to reset the current update cycle. The
					// most common use case for this is the `flip` modifier changing the
					// placement, which then needs to re-run all the modifiers, because the
					// logic was previously ran for the previous placement and is therefore
					// stale/incorrect

					state.reset = false;
					state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
					// is filled with the initial data specified by the modifier. This means
					// it doesn't persist and is fresh on each update.
					// To ensure persistent data, use `${name}#persistent`

					state.orderedModifiers.forEach(function (modifier) {
						return (state.modifiersData[modifier.name] = Object.assign(
							{},
							modifier.data
						));
					});
					var __debug_loops__ = 0;

					for (var index = 0; index < state.orderedModifiers.length; index++) {
						{
							__debug_loops__ += 1;

							if (__debug_loops__ > 100) {
								console.error(INFINITE_LOOP_ERROR);
								break;
							}
						}

						if (state.reset === true) {
							state.reset = false;
							index = -1;
							continue;
						}

						var _state$orderedModifie = state.orderedModifiers[index],
							fn = _state$orderedModifie.fn,
							_state$orderedModifie2 = _state$orderedModifie.options,
							_options =
								_state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
							name = _state$orderedModifie.name;

						if (typeof fn === 'function') {
							state =
								fn({
									state: state,
									options: _options,
									name: name,
									instance: instance,
								}) || state;
						}
					}
				},
				// Async and optimistically optimized update – it will not be executed if
				// not necessary (debounced to run at most once-per-tick)
				update: debounce(function () {
					return new Promise(function (resolve) {
						instance.forceUpdate();
						resolve(state);
					});
				}),
				destroy: function destroy() {
					cleanupModifierEffects();
					isDestroyed = true;
				},
			};

			if (!areValidElements(reference, popper)) {
				{
					console.error(INVALID_ELEMENT_ERROR);
				}

				return instance;
			}

			instance.setOptions(options).then(function (state) {
				if (!isDestroyed && options.onFirstUpdate) {
					options.onFirstUpdate(state);
				}
			}); // Modifiers have the ability to execute arbitrary code before the first
			// update cycle runs. They will be executed in the same order as the update
			// cycle. This is useful when a modifier adds some persistent data that
			// other modifiers need to use, but the modifier is run after the dependent
			// one.

			function runModifierEffects() {
				state.orderedModifiers.forEach(function (_ref3) {
					var name = _ref3.name,
						_ref3$options = _ref3.options,
						options = _ref3$options === void 0 ? {} : _ref3$options,
						effect = _ref3.effect;

					if (typeof effect === 'function') {
						var cleanupFn = effect({
							state: state,
							name: name,
							instance: instance,
							options: options,
						});

						var noopFn = function noopFn() {};

						effectCleanupFns.push(cleanupFn || noopFn);
					}
				});
			}

			function cleanupModifierEffects() {
				effectCleanupFns.forEach(function (fn) {
					return fn();
				});
				effectCleanupFns = [];
			}

			return instance;
		};
	}

	var passive = {
		passive: true,
	};

	function effect$2(_ref) {
		var state = _ref.state,
			instance = _ref.instance,
			options = _ref.options;
		var _options$scroll = options.scroll,
			scroll = _options$scroll === void 0 ? true : _options$scroll,
			_options$resize = options.resize,
			resize = _options$resize === void 0 ? true : _options$resize;
		var window = getWindow(state.elements.popper);
		var scrollParents = [].concat(
			state.scrollParents.reference,
			state.scrollParents.popper
		);

		if (scroll) {
			scrollParents.forEach(function (scrollParent) {
				scrollParent.addEventListener('scroll', instance.update, passive);
			});
		}

		if (resize) {
			window.addEventListener('resize', instance.update, passive);
		}

		return function () {
			if (scroll) {
				scrollParents.forEach(function (scrollParent) {
					scrollParent.removeEventListener('scroll', instance.update, passive);
				});
			}

			if (resize) {
				window.removeEventListener('resize', instance.update, passive);
			}
		};
	} // eslint-disable-next-line import/no-unused-modules

	var eventListeners = {
		name: 'eventListeners',
		enabled: true,
		phase: 'write',
		fn: function fn() {},
		effect: effect$2,
		data: {},
	};

	function popperOffsets(_ref) {
		var state = _ref.state,
			name = _ref.name;
		// Offsets are the actual position the popper needs to have to be
		// properly positioned near its reference element
		// This is the most basic placement, and will be adjusted by
		// the modifiers in the next step
		state.modifiersData[name] = computeOffsets({
			reference: state.rects.reference,
			element: state.rects.popper,
			strategy: 'absolute',
			placement: state.placement,
		});
	} // eslint-disable-next-line import/no-unused-modules

	var popperOffsets$1 = {
		name: 'popperOffsets',
		enabled: true,
		phase: 'read',
		fn: popperOffsets,
		data: {},
	};

	var unsetSides = {
		top: 'auto',
		right: 'auto',
		bottom: 'auto',
		left: 'auto',
	}; // Round the offsets to the nearest suitable subpixel based on the DPR.
	// Zooming can change the DPR, but it seems to report a value that will
	// cleanly divide the values into the appropriate subpixels.

	function roundOffsetsByDPR(_ref) {
		var x = _ref.x,
			y = _ref.y;
		var win = window;
		var dpr = win.devicePixelRatio || 1;
		return {
			x: round(x * dpr) / dpr || 0,
			y: round(y * dpr) / dpr || 0,
		};
	}

	function mapToStyles(_ref2) {
		var _Object$assign2;

		var popper = _ref2.popper,
			popperRect = _ref2.popperRect,
			placement = _ref2.placement,
			variation = _ref2.variation,
			offsets = _ref2.offsets,
			position = _ref2.position,
			gpuAcceleration = _ref2.gpuAcceleration,
			adaptive = _ref2.adaptive,
			roundOffsets = _ref2.roundOffsets,
			isFixed = _ref2.isFixed;
		var _offsets$x = offsets.x,
			x = _offsets$x === void 0 ? 0 : _offsets$x,
			_offsets$y = offsets.y,
			y = _offsets$y === void 0 ? 0 : _offsets$y;

		var _ref3 =
			typeof roundOffsets === 'function'
				? roundOffsets({
						x: x,
						y: y,
				  })
				: {
						x: x,
						y: y,
				  };

		x = _ref3.x;
		y = _ref3.y;
		var hasX = offsets.hasOwnProperty('x');
		var hasY = offsets.hasOwnProperty('y');
		var sideX = left;
		var sideY = top;
		var win = window;

		if (adaptive) {
			var offsetParent = getOffsetParent(popper);
			var heightProp = 'clientHeight';
			var widthProp = 'clientWidth';

			if (offsetParent === getWindow(popper)) {
				offsetParent = getDocumentElement(popper);

				if (
					getComputedStyle(offsetParent).position !== 'static' &&
					position === 'absolute'
				) {
					heightProp = 'scrollHeight';
					widthProp = 'scrollWidth';
				}
			} // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it

			offsetParent = offsetParent;

			if (
				placement === top ||
				((placement === left || placement === right) && variation === end)
			) {
				sideY = bottom;
				var offsetY =
					isFixed && win.visualViewport
						? win.visualViewport.height // $FlowFixMe[prop-missing]
						: offsetParent[heightProp];
				y -= offsetY - popperRect.height;
				y *= gpuAcceleration ? 1 : -1;
			}

			if (
				placement === left ||
				((placement === top || placement === bottom) && variation === end)
			) {
				sideX = right;
				var offsetX =
					isFixed && win.visualViewport
						? win.visualViewport.width // $FlowFixMe[prop-missing]
						: offsetParent[widthProp];
				x -= offsetX - popperRect.width;
				x *= gpuAcceleration ? 1 : -1;
			}
		}

		var commonStyles = Object.assign(
			{
				position: position,
			},
			adaptive && unsetSides
		);

		var _ref4 =
			roundOffsets === true
				? roundOffsetsByDPR({
						x: x,
						y: y,
				  })
				: {
						x: x,
						y: y,
				  };

		x = _ref4.x;
		y = _ref4.y;

		if (gpuAcceleration) {
			var _Object$assign;

			return Object.assign(
				{},
				commonStyles,
				((_Object$assign = {}),
				(_Object$assign[sideY] = hasY ? '0' : ''),
				(_Object$assign[sideX] = hasX ? '0' : ''),
				(_Object$assign.transform =
					(win.devicePixelRatio || 1) <= 1
						? 'translate(' + x + 'px, ' + y + 'px)'
						: 'translate3d(' + x + 'px, ' + y + 'px, 0)'),
				_Object$assign)
			);
		}

		return Object.assign(
			{},
			commonStyles,
			((_Object$assign2 = {}),
			(_Object$assign2[sideY] = hasY ? y + 'px' : ''),
			(_Object$assign2[sideX] = hasX ? x + 'px' : ''),
			(_Object$assign2.transform = ''),
			_Object$assign2)
		);
	}

	function computeStyles(_ref5) {
		var state = _ref5.state,
			options = _ref5.options;
		var _options$gpuAccelerat = options.gpuAcceleration,
			gpuAcceleration =
				_options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
			_options$adaptive = options.adaptive,
			adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
			_options$roundOffsets = options.roundOffsets,
			roundOffsets =
				_options$roundOffsets === void 0 ? true : _options$roundOffsets;

		{
			var transitionProperty =
				getComputedStyle(state.elements.popper).transitionProperty || '';

			if (
				adaptive &&
				['transform', 'top', 'right', 'bottom', 'left'].some(function (
					property
				) {
					return transitionProperty.indexOf(property) >= 0;
				})
			) {
				console.warn(
					[
						'Popper: Detected CSS transitions on at least one of the following',
						'CSS properties: "transform", "top", "right", "bottom", "left".',
						'\n\n',
						'Disable the "computeStyles" modifier\'s `adaptive` option to allow',
						'for smooth transitions, or remove these properties from the CSS',
						'transition declaration on the popper element if only transitioning',
						'opacity or background-color for example.',
						'\n\n',
						'We recommend using the popper element as a wrapper around an inner',
						'element that can have any CSS property transitioned for animations.',
					].join(' ')
				);
			}
		}

		var commonStyles = {
			placement: getBasePlacement(state.placement),
			variation: getVariation(state.placement),
			popper: state.elements.popper,
			popperRect: state.rects.popper,
			gpuAcceleration: gpuAcceleration,
			isFixed: state.options.strategy === 'fixed',
		};

		if (state.modifiersData.popperOffsets != null) {
			state.styles.popper = Object.assign(
				{},
				state.styles.popper,
				mapToStyles(
					Object.assign({}, commonStyles, {
						offsets: state.modifiersData.popperOffsets,
						position: state.options.strategy,
						adaptive: adaptive,
						roundOffsets: roundOffsets,
					})
				)
			);
		}

		if (state.modifiersData.arrow != null) {
			state.styles.arrow = Object.assign(
				{},
				state.styles.arrow,
				mapToStyles(
					Object.assign({}, commonStyles, {
						offsets: state.modifiersData.arrow,
						position: 'absolute',
						adaptive: false,
						roundOffsets: roundOffsets,
					})
				)
			);
		}

		state.attributes.popper = Object.assign({}, state.attributes.popper, {
			'data-popper-placement': state.placement,
		});
	} // eslint-disable-next-line import/no-unused-modules

	var computeStyles$1 = {
		name: 'computeStyles',
		enabled: true,
		phase: 'beforeWrite',
		fn: computeStyles,
		data: {},
	};

	// and applies them to the HTMLElements such as popper and arrow

	function applyStyles(_ref) {
		var state = _ref.state;
		Object.keys(state.elements).forEach(function (name) {
			var style = state.styles[name] || {};
			var attributes = state.attributes[name] || {};
			var element = state.elements[name]; // arrow is optional + virtual elements

			if (!isHTMLElement(element) || !getNodeName(element)) {
				return;
			} // Flow doesn't support to extend this property, but it's the most
			// effective way to apply styles to an HTMLElement
			// $FlowFixMe[cannot-write]

			Object.assign(element.style, style);
			Object.keys(attributes).forEach(function (name) {
				var value = attributes[name];

				if (value === false) {
					element.removeAttribute(name);
				} else {
					element.setAttribute(name, value === true ? '' : value);
				}
			});
		});
	}

	function effect$1(_ref2) {
		var state = _ref2.state;
		var initialStyles = {
			popper: {
				position: state.options.strategy,
				left: '0',
				top: '0',
				margin: '0',
			},
			arrow: {
				position: 'absolute',
			},
			reference: {},
		};
		Object.assign(state.elements.popper.style, initialStyles.popper);
		state.styles = initialStyles;

		if (state.elements.arrow) {
			Object.assign(state.elements.arrow.style, initialStyles.arrow);
		}

		return function () {
			Object.keys(state.elements).forEach(function (name) {
				var element = state.elements[name];
				var attributes = state.attributes[name] || {};
				var styleProperties = Object.keys(
					state.styles.hasOwnProperty(name)
						? state.styles[name]
						: initialStyles[name]
				); // Set all values to an empty string to unset them

				var style = styleProperties.reduce(function (style, property) {
					style[property] = '';
					return style;
				}, {}); // arrow is optional + virtual elements

				if (!isHTMLElement(element) || !getNodeName(element)) {
					return;
				}

				Object.assign(element.style, style);
				Object.keys(attributes).forEach(function (attribute) {
					element.removeAttribute(attribute);
				});
			});
		};
	} // eslint-disable-next-line import/no-unused-modules

	var applyStyles$1 = {
		name: 'applyStyles',
		enabled: true,
		phase: 'write',
		fn: applyStyles,
		effect: effect$1,
		requires: ['computeStyles'],
	};

	function distanceAndSkiddingToXY(placement, rects, offset) {
		var basePlacement = getBasePlacement(placement);
		var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

		var _ref =
				typeof offset === 'function'
					? offset(
							Object.assign({}, rects, {
								placement: placement,
							})
					  )
					: offset,
			skidding = _ref[0],
			distance = _ref[1];

		skidding = skidding || 0;
		distance = (distance || 0) * invertDistance;
		return [left, right].indexOf(basePlacement) >= 0
			? {
					x: distance,
					y: skidding,
			  }
			: {
					x: skidding,
					y: distance,
			  };
	}

	function offset(_ref2) {
		var state = _ref2.state,
			options = _ref2.options,
			name = _ref2.name;
		var _options$offset = options.offset,
			offset = _options$offset === void 0 ? [0, 0] : _options$offset;
		var data = placements.reduce(function (acc, placement) {
			acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
			return acc;
		}, {});
		var _data$state$placement = data[state.placement],
			x = _data$state$placement.x,
			y = _data$state$placement.y;

		if (state.modifiersData.popperOffsets != null) {
			state.modifiersData.popperOffsets.x += x;
			state.modifiersData.popperOffsets.y += y;
		}

		state.modifiersData[name] = data;
	} // eslint-disable-next-line import/no-unused-modules

	var offset$1 = {
		name: 'offset',
		enabled: true,
		phase: 'main',
		requires: ['popperOffsets'],
		fn: offset,
	};

	var hash$1 = {
		left: 'right',
		right: 'left',
		bottom: 'top',
		top: 'bottom',
	};
	function getOppositePlacement(placement) {
		return placement.replace(/left|right|bottom|top/g, function (matched) {
			return hash$1[matched];
		});
	}

	var hash = {
		start: 'end',
		end: 'start',
	};
	function getOppositeVariationPlacement(placement) {
		return placement.replace(/start|end/g, function (matched) {
			return hash[matched];
		});
	}

	function computeAutoPlacement(state, options) {
		if (options === void 0) {
			options = {};
		}

		var _options = options,
			placement = _options.placement,
			boundary = _options.boundary,
			rootBoundary = _options.rootBoundary,
			padding = _options.padding,
			flipVariations = _options.flipVariations,
			_options$allowedAutoP = _options.allowedAutoPlacements,
			allowedAutoPlacements =
				_options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
		var variation = getVariation(placement);
		var placements$1 = variation
			? flipVariations
				? variationPlacements
				: variationPlacements.filter(function (placement) {
						return getVariation(placement) === variation;
				  })
			: basePlacements;
		var allowedPlacements = placements$1.filter(function (placement) {
			return allowedAutoPlacements.indexOf(placement) >= 0;
		});

		if (allowedPlacements.length === 0) {
			allowedPlacements = placements$1;

			{
				console.error(
					[
						'Popper: The `allowedAutoPlacements` option did not allow any',
						'placements. Ensure the `placement` option matches the variation',
						'of the allowed placements.',
						'For example, "auto" cannot be used to allow "bottom-start".',
						'Use "auto-start" instead.',
					].join(' ')
				);
			}
		} // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...

		var overflows = allowedPlacements.reduce(function (acc, placement) {
			acc[placement] = detectOverflow(state, {
				placement: placement,
				boundary: boundary,
				rootBoundary: rootBoundary,
				padding: padding,
			})[getBasePlacement(placement)];
			return acc;
		}, {});
		return Object.keys(overflows).sort(function (a, b) {
			return overflows[a] - overflows[b];
		});
	}

	function getExpandedFallbackPlacements(placement) {
		if (getBasePlacement(placement) === auto) {
			return [];
		}

		var oppositePlacement = getOppositePlacement(placement);
		return [
			getOppositeVariationPlacement(placement),
			oppositePlacement,
			getOppositeVariationPlacement(oppositePlacement),
		];
	}

	function flip(_ref) {
		var state = _ref.state,
			options = _ref.options,
			name = _ref.name;

		if (state.modifiersData[name]._skip) {
			return;
		}

		var _options$mainAxis = options.mainAxis,
			checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
			_options$altAxis = options.altAxis,
			checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
			specifiedFallbackPlacements = options.fallbackPlacements,
			padding = options.padding,
			boundary = options.boundary,
			rootBoundary = options.rootBoundary,
			altBoundary = options.altBoundary,
			_options$flipVariatio = options.flipVariations,
			flipVariations =
				_options$flipVariatio === void 0 ? true : _options$flipVariatio,
			allowedAutoPlacements = options.allowedAutoPlacements;
		var preferredPlacement = state.options.placement;
		var basePlacement = getBasePlacement(preferredPlacement);
		var isBasePlacement = basePlacement === preferredPlacement;
		var fallbackPlacements =
			specifiedFallbackPlacements ||
			(isBasePlacement || !flipVariations
				? [getOppositePlacement(preferredPlacement)]
				: getExpandedFallbackPlacements(preferredPlacement));
		var placements = [preferredPlacement]
			.concat(fallbackPlacements)
			.reduce(function (acc, placement) {
				return acc.concat(
					getBasePlacement(placement) === auto
						? computeAutoPlacement(state, {
								placement: placement,
								boundary: boundary,
								rootBoundary: rootBoundary,
								padding: padding,
								flipVariations: flipVariations,
								allowedAutoPlacements: allowedAutoPlacements,
						  })
						: placement
				);
			}, []);
		var referenceRect = state.rects.reference;
		var popperRect = state.rects.popper;
		var checksMap = new Map();
		var makeFallbackChecks = true;
		var firstFittingPlacement = placements[0];

		for (var i = 0; i < placements.length; i++) {
			var placement = placements[i];

			var _basePlacement = getBasePlacement(placement);

			var isStartVariation = getVariation(placement) === start;
			var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
			var len = isVertical ? 'width' : 'height';
			var overflow = detectOverflow(state, {
				placement: placement,
				boundary: boundary,
				rootBoundary: rootBoundary,
				altBoundary: altBoundary,
				padding: padding,
			});
			var mainVariationSide = isVertical
				? isStartVariation
					? right
					: left
				: isStartVariation
				? bottom
				: top;

			if (referenceRect[len] > popperRect[len]) {
				mainVariationSide = getOppositePlacement(mainVariationSide);
			}

			var altVariationSide = getOppositePlacement(mainVariationSide);
			var checks = [];

			if (checkMainAxis) {
				checks.push(overflow[_basePlacement] <= 0);
			}

			if (checkAltAxis) {
				checks.push(
					overflow[mainVariationSide] <= 0,
					overflow[altVariationSide] <= 0
				);
			}

			if (
				checks.every(function (check) {
					return check;
				})
			) {
				firstFittingPlacement = placement;
				makeFallbackChecks = false;
				break;
			}

			checksMap.set(placement, checks);
		}

		if (makeFallbackChecks) {
			// `2` may be desired in some cases – research later
			var numberOfChecks = flipVariations ? 3 : 1;

			var _loop = function _loop(_i) {
				var fittingPlacement = placements.find(function (placement) {
					var checks = checksMap.get(placement);

					if (checks) {
						return checks.slice(0, _i).every(function (check) {
							return check;
						});
					}
				});

				if (fittingPlacement) {
					firstFittingPlacement = fittingPlacement;
					return 'break';
				}
			};

			for (var _i = numberOfChecks; _i > 0; _i--) {
				var _ret = _loop(_i);

				if (_ret === 'break') break;
			}
		}

		if (state.placement !== firstFittingPlacement) {
			state.modifiersData[name]._skip = true;
			state.placement = firstFittingPlacement;
			state.reset = true;
		}
	} // eslint-disable-next-line import/no-unused-modules

	var flip$1 = {
		name: 'flip',
		enabled: true,
		phase: 'main',
		fn: flip,
		requiresIfExists: ['offset'],
		data: {
			_skip: false,
		},
	};

	function getAltAxis(axis) {
		return axis === 'x' ? 'y' : 'x';
	}

	function within(min$1, value, max$1) {
		return max(min$1, min(value, max$1));
	}
	function withinMaxClamp(min, value, max) {
		var v = within(min, value, max);
		return v > max ? max : v;
	}

	function preventOverflow(_ref) {
		var state = _ref.state,
			options = _ref.options,
			name = _ref.name;
		var _options$mainAxis = options.mainAxis,
			checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
			_options$altAxis = options.altAxis,
			checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
			boundary = options.boundary,
			rootBoundary = options.rootBoundary,
			altBoundary = options.altBoundary,
			padding = options.padding,
			_options$tether = options.tether,
			tether = _options$tether === void 0 ? true : _options$tether,
			_options$tetherOffset = options.tetherOffset,
			tetherOffset =
				_options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
		var overflow = detectOverflow(state, {
			boundary: boundary,
			rootBoundary: rootBoundary,
			padding: padding,
			altBoundary: altBoundary,
		});
		var basePlacement = getBasePlacement(state.placement);
		var variation = getVariation(state.placement);
		var isBasePlacement = !variation;
		var mainAxis = getMainAxisFromPlacement(basePlacement);
		var altAxis = getAltAxis(mainAxis);
		var popperOffsets = state.modifiersData.popperOffsets;
		var referenceRect = state.rects.reference;
		var popperRect = state.rects.popper;
		var tetherOffsetValue =
			typeof tetherOffset === 'function'
				? tetherOffset(
						Object.assign({}, state.rects, {
							placement: state.placement,
						})
				  )
				: tetherOffset;
		var normalizedTetherOffsetValue =
			typeof tetherOffsetValue === 'number'
				? {
						mainAxis: tetherOffsetValue,
						altAxis: tetherOffsetValue,
				  }
				: Object.assign(
						{
							mainAxis: 0,
							altAxis: 0,
						},
						tetherOffsetValue
				  );
		var offsetModifierState = state.modifiersData.offset
			? state.modifiersData.offset[state.placement]
			: null;
		var data = {
			x: 0,
			y: 0,
		};

		if (!popperOffsets) {
			return;
		}

		if (checkMainAxis) {
			var _offsetModifierState$;

			var mainSide = mainAxis === 'y' ? top : left;
			var altSide = mainAxis === 'y' ? bottom : right;
			var len = mainAxis === 'y' ? 'height' : 'width';
			var offset = popperOffsets[mainAxis];
			var min$1 = offset + overflow[mainSide];
			var max$1 = offset - overflow[altSide];
			var additive = tether ? -popperRect[len] / 2 : 0;
			var minLen = variation === start ? referenceRect[len] : popperRect[len];
			var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
			// outside the reference bounds

			var arrowElement = state.elements.arrow;
			var arrowRect =
				tether && arrowElement
					? getLayoutRect(arrowElement)
					: {
							width: 0,
							height: 0,
					  };
			var arrowPaddingObject = state.modifiersData['arrow#persistent']
				? state.modifiersData['arrow#persistent'].padding
				: getFreshSideObject();
			var arrowPaddingMin = arrowPaddingObject[mainSide];
			var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
			// to include its full size in the calculation. If the reference is small
			// and near the edge of a boundary, the popper can overflow even if the
			// reference is not overflowing as well (e.g. virtual elements with no
			// width or height)

			var arrowLen = within(0, referenceRect[len], arrowRect[len]);
			var minOffset = isBasePlacement
				? referenceRect[len] / 2 -
				  additive -
				  arrowLen -
				  arrowPaddingMin -
				  normalizedTetherOffsetValue.mainAxis
				: minLen -
				  arrowLen -
				  arrowPaddingMin -
				  normalizedTetherOffsetValue.mainAxis;
			var maxOffset = isBasePlacement
				? -referenceRect[len] / 2 +
				  additive +
				  arrowLen +
				  arrowPaddingMax +
				  normalizedTetherOffsetValue.mainAxis
				: maxLen +
				  arrowLen +
				  arrowPaddingMax +
				  normalizedTetherOffsetValue.mainAxis;
			var arrowOffsetParent =
				state.elements.arrow && getOffsetParent(state.elements.arrow);
			var clientOffset = arrowOffsetParent
				? mainAxis === 'y'
					? arrowOffsetParent.clientTop || 0
					: arrowOffsetParent.clientLeft || 0
				: 0;
			var offsetModifierValue =
				(_offsetModifierState$ =
					offsetModifierState == null
						? void 0
						: offsetModifierState[mainAxis]) != null
					? _offsetModifierState$
					: 0;
			var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
			var tetherMax = offset + maxOffset - offsetModifierValue;
			var preventedOffset = within(
				tether ? min(min$1, tetherMin) : min$1,
				offset,
				tether ? max(max$1, tetherMax) : max$1
			);
			popperOffsets[mainAxis] = preventedOffset;
			data[mainAxis] = preventedOffset - offset;
		}

		if (checkAltAxis) {
			var _offsetModifierState$2;

			var _mainSide = mainAxis === 'x' ? top : left;

			var _altSide = mainAxis === 'x' ? bottom : right;

			var _offset = popperOffsets[altAxis];

			var _len = altAxis === 'y' ? 'height' : 'width';

			var _min = _offset + overflow[_mainSide];

			var _max = _offset - overflow[_altSide];

			var isOriginSide = [top, left].indexOf(basePlacement) !== -1;

			var _offsetModifierValue =
				(_offsetModifierState$2 =
					offsetModifierState == null
						? void 0
						: offsetModifierState[altAxis]) != null
					? _offsetModifierState$2
					: 0;

			var _tetherMin = isOriginSide
				? _min
				: _offset -
				  referenceRect[_len] -
				  popperRect[_len] -
				  _offsetModifierValue +
				  normalizedTetherOffsetValue.altAxis;

			var _tetherMax = isOriginSide
				? _offset +
				  referenceRect[_len] +
				  popperRect[_len] -
				  _offsetModifierValue -
				  normalizedTetherOffsetValue.altAxis
				: _max;

			var _preventedOffset =
				tether && isOriginSide
					? withinMaxClamp(_tetherMin, _offset, _tetherMax)
					: within(
							tether ? _tetherMin : _min,
							_offset,
							tether ? _tetherMax : _max
					  );

			popperOffsets[altAxis] = _preventedOffset;
			data[altAxis] = _preventedOffset - _offset;
		}

		state.modifiersData[name] = data;
	} // eslint-disable-next-line import/no-unused-modules

	var preventOverflow$1 = {
		name: 'preventOverflow',
		enabled: true,
		phase: 'main',
		fn: preventOverflow,
		requiresIfExists: ['offset'],
	};

	var toPaddingObject = function toPaddingObject(padding, state) {
		padding =
			typeof padding === 'function'
				? padding(
						Object.assign({}, state.rects, {
							placement: state.placement,
						})
				  )
				: padding;
		return mergePaddingObject(
			typeof padding !== 'number'
				? padding
				: expandToHashMap(padding, basePlacements)
		);
	};

	function arrow(_ref) {
		var _state$modifiersData$;

		var state = _ref.state,
			name = _ref.name,
			options = _ref.options;
		var arrowElement = state.elements.arrow;
		var popperOffsets = state.modifiersData.popperOffsets;
		var basePlacement = getBasePlacement(state.placement);
		var axis = getMainAxisFromPlacement(basePlacement);
		var isVertical = [left, right].indexOf(basePlacement) >= 0;
		var len = isVertical ? 'height' : 'width';

		if (!arrowElement || !popperOffsets) {
			return;
		}

		var paddingObject = toPaddingObject(options.padding, state);
		var arrowRect = getLayoutRect(arrowElement);
		var minProp = axis === 'y' ? top : left;
		var maxProp = axis === 'y' ? bottom : right;
		var endDiff =
			state.rects.reference[len] +
			state.rects.reference[axis] -
			popperOffsets[axis] -
			state.rects.popper[len];
		var startDiff = popperOffsets[axis] - state.rects.reference[axis];
		var arrowOffsetParent = getOffsetParent(arrowElement);
		var clientSize = arrowOffsetParent
			? axis === 'y'
				? arrowOffsetParent.clientHeight || 0
				: arrowOffsetParent.clientWidth || 0
			: 0;
		var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
		// outside of the popper bounds

		var min = paddingObject[minProp];
		var max = clientSize - arrowRect[len] - paddingObject[maxProp];
		var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
		var offset = within(min, center, max); // Prevents breaking syntax highlighting...

		var axisProp = axis;
		state.modifiersData[name] =
			((_state$modifiersData$ = {}),
			(_state$modifiersData$[axisProp] = offset),
			(_state$modifiersData$.centerOffset = offset - center),
			_state$modifiersData$);
	}

	function effect(_ref2) {
		var state = _ref2.state,
			options = _ref2.options;
		var _options$element = options.element,
			arrowElement =
				_options$element === void 0 ? '[data-popper-arrow]' : _options$element;

		if (arrowElement == null) {
			return;
		} // CSS selector

		if (typeof arrowElement === 'string') {
			arrowElement = state.elements.popper.querySelector(arrowElement);

			if (!arrowElement) {
				return;
			}
		}

		{
			if (!isHTMLElement(arrowElement)) {
				console.error(
					[
						'Popper: "arrow" element must be an HTMLElement (not an SVGElement).',
						'To use an SVG arrow, wrap it in an HTMLElement that will be used as',
						'the arrow.',
					].join(' ')
				);
			}
		}

		if (!contains(state.elements.popper, arrowElement)) {
			{
				console.error(
					[
						'Popper: "arrow" modifier\'s `element` must be a child of the popper',
						'element.',
					].join(' ')
				);
			}

			return;
		}

		state.elements.arrow = arrowElement;
	} // eslint-disable-next-line import/no-unused-modules

	var arrow$1 = {
		name: 'arrow',
		enabled: true,
		phase: 'main',
		fn: arrow,
		effect: effect,
		requires: ['popperOffsets'],
		requiresIfExists: ['preventOverflow'],
	};

	function getSideOffsets(overflow, rect, preventedOffsets) {
		if (preventedOffsets === void 0) {
			preventedOffsets = {
				x: 0,
				y: 0,
			};
		}

		return {
			top: overflow.top - rect.height - preventedOffsets.y,
			right: overflow.right - rect.width + preventedOffsets.x,
			bottom: overflow.bottom - rect.height + preventedOffsets.y,
			left: overflow.left - rect.width - preventedOffsets.x,
		};
	}

	function isAnySideFullyClipped(overflow) {
		return [top, right, bottom, left].some(function (side) {
			return overflow[side] >= 0;
		});
	}

	function hide(_ref) {
		var state = _ref.state,
			name = _ref.name;
		var referenceRect = state.rects.reference;
		var popperRect = state.rects.popper;
		var preventedOffsets = state.modifiersData.preventOverflow;
		var referenceOverflow = detectOverflow(state, {
			elementContext: 'reference',
		});
		var popperAltOverflow = detectOverflow(state, {
			altBoundary: true,
		});
		var referenceClippingOffsets = getSideOffsets(
			referenceOverflow,
			referenceRect
		);
		var popperEscapeOffsets = getSideOffsets(
			popperAltOverflow,
			popperRect,
			preventedOffsets
		);
		var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
		var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
		state.modifiersData[name] = {
			referenceClippingOffsets: referenceClippingOffsets,
			popperEscapeOffsets: popperEscapeOffsets,
			isReferenceHidden: isReferenceHidden,
			hasPopperEscaped: hasPopperEscaped,
		};
		state.attributes.popper = Object.assign({}, state.attributes.popper, {
			'data-popper-reference-hidden': isReferenceHidden,
			'data-popper-escaped': hasPopperEscaped,
		});
	} // eslint-disable-next-line import/no-unused-modules

	var hide$1 = {
		name: 'hide',
		enabled: true,
		phase: 'main',
		requiresIfExists: ['preventOverflow'],
		fn: hide,
	};

	var defaultModifiers$1 = [
		eventListeners,
		popperOffsets$1,
		computeStyles$1,
		applyStyles$1,
	];
	var createPopper$1 = /*#__PURE__*/ popperGenerator({
		defaultModifiers: defaultModifiers$1,
	}); // eslint-disable-next-line import/no-unused-modules

	var defaultModifiers = [
		eventListeners,
		popperOffsets$1,
		computeStyles$1,
		applyStyles$1,
		offset$1,
		flip$1,
		preventOverflow$1,
		arrow$1,
		hide$1,
	];
	var createPopper = /*#__PURE__*/ popperGenerator({
		defaultModifiers: defaultModifiers,
	}); // eslint-disable-next-line import/no-unused-modules

	exports.applyStyles = applyStyles$1;
	exports.arrow = arrow$1;
	exports.computeStyles = computeStyles$1;
	exports.createPopper = createPopper;
	exports.createPopperLite = createPopper$1;
	exports.defaultModifiers = defaultModifiers;
	exports.detectOverflow = detectOverflow;
	exports.eventListeners = eventListeners;
	exports.flip = flip$1;
	exports.hide = hide$1;
	exports.offset = offset$1;
	exports.popperGenerator = popperGenerator;
	exports.popperOffsets = popperOffsets$1;
	exports.preventOverflow = preventOverflow$1;

	Object.defineProperty(exports, '__esModule', { value: true });
});

/*!
 * MDB5
 *   Version: PRO 3.7.1
 *
 *
 *   Copyright: Material Design for Bootstrap
 *   https://mdbootstrap.com/
 *
 *   Read the license: https://mdbootstrap.com/general/license/
 *
 *
 *   Documentation: https://mdbootstrap.com/docs/standard/
 *
 *   Support: https://mdbootstrap.com/support/
 *
 *   Contact: office@mdbootstrap.com
 *
 */
!(function (e, t) {
	'object' == typeof exports && 'object' == typeof module
		? (module.exports = t())
		: 'function' == typeof define && define.amd
		? define('mdb', [], t)
		: 'object' == typeof exports
		? (exports.mdb = t())
		: (e.mdb = t());
})(this, function () {
	return (
		(i = {}),
		(r.m = n =
			[
				function (e, t, da) {
					(function (ua) {
						var ca; //! moment.js
						//! version : 2.29.1
						//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
						//! license : MIT
						//! momentjs.com
						ua.exports = (function () {
							'use strict';
							var t, r;
							function c() {
								return t.apply(null, arguments);
							}
							function e(e) {
								t = e;
							}
							function a(e) {
								return (
									e instanceof Array ||
									Object.prototype.toString.call(e) === '[object Array]'
								);
							}
							function s(e) {
								return (
									e != null &&
									Object.prototype.toString.call(e) === '[object Object]'
								);
							}
							function l(e, t) {
								return Object.prototype.hasOwnProperty.call(e, t);
							}
							function u(e) {
								if (Object.getOwnPropertyNames)
									return Object.getOwnPropertyNames(e).length === 0;
								else {
									var t;
									for (t in e) if (l(e, t)) return false;
									return true;
								}
							}
							function o(e) {
								return e === void 0;
							}
							function d(e) {
								return (
									typeof e === 'number' ||
									Object.prototype.toString.call(e) === '[object Number]'
								);
							}
							function f(e) {
								return (
									e instanceof Date ||
									Object.prototype.toString.call(e) === '[object Date]'
								);
							}
							function i(e, t) {
								var n = [],
									i;
								for (i = 0; i < e.length; ++i) n.push(t(e[i], i));
								return n;
							}
							function h(e, t) {
								for (var n in t) if (l(t, n)) e[n] = t[n];
								if (l(t, 'toString')) e.toString = t.toString;
								if (l(t, 'valueOf')) e.valueOf = t.valueOf;
								return e;
							}
							function p(e, t, n, i) {
								return Xn(e, t, n, i, true).utc();
							}
							function n() {
								return {
									empty: false,
									unusedTokens: [],
									unusedInput: [],
									overflow: -2,
									charsLeftOver: 0,
									nullInput: false,
									invalidEra: null,
									invalidMonth: null,
									invalidFormat: false,
									userInvalidated: false,
									iso: false,
									parsedDateParts: [],
									era: null,
									meridiem: null,
									rfc2822: false,
									weekdayMismatch: false,
								};
							}
							function m(e) {
								if (e._pf == null) e._pf = n();
								return e._pf;
							}
							if (Array.prototype.some) r = Array.prototype.some;
							else
								r = function (e) {
									var t = Object(this),
										n = t.length >>> 0,
										i;
									for (i = 0; i < n; i++)
										if (i in t && e.call(this, t[i], i, t)) return true;
									return false;
								};
							function _(e) {
								if (e._isValid == null) {
									var t = m(e),
										n = r.call(t.parsedDateParts, function (e) {
											return e != null;
										}),
										i =
											!isNaN(e._d.getTime()) &&
											t.overflow < 0 &&
											!t.empty &&
											!t.invalidEra &&
											!t.invalidMonth &&
											!t.invalidWeekday &&
											!t.weekdayMismatch &&
											!t.nullInput &&
											!t.invalidFormat &&
											!t.userInvalidated &&
											(!t.meridiem || (t.meridiem && n));
									if (e._strict)
										i =
											i &&
											t.charsLeftOver === 0 &&
											t.unusedTokens.length === 0 &&
											t.bigHour === undefined;
									if (Object.isFrozen == null || !Object.isFrozen(e))
										e._isValid = i;
									else return i;
								}
								return e._isValid;
							}
							function v(e) {
								var t = p(NaN);
								if (e != null) h(m(t), e);
								else m(t).userInvalidated = true;
								return t;
							}
							var y = (c.momentProperties = []),
								g = false;
							function b(e, t) {
								var n, i, r;
								if (!o(t._isAMomentObject))
									e._isAMomentObject = t._isAMomentObject;
								if (!o(t._i)) e._i = t._i;
								if (!o(t._f)) e._f = t._f;
								if (!o(t._l)) e._l = t._l;
								if (!o(t._strict)) e._strict = t._strict;
								if (!o(t._tzm)) e._tzm = t._tzm;
								if (!o(t._isUTC)) e._isUTC = t._isUTC;
								if (!o(t._offset)) e._offset = t._offset;
								if (!o(t._pf)) e._pf = m(t);
								if (!o(t._locale)) e._locale = t._locale;
								if (y.length > 0)
									for (n = 0; n < y.length; n++) {
										i = y[n];
										r = t[i];
										if (!o(r)) e[i] = r;
									}
								return e;
							}
							function k(e) {
								b(this, e);
								this._d = new Date(e._d != null ? e._d.getTime() : NaN);
								if (!this.isValid()) this._d = new Date(NaN);
								if (g === false) {
									g = true;
									c.updateOffset(this);
									g = false;
								}
							}
							function w(e) {
								return (
									e instanceof k || (e != null && e._isAMomentObject != null)
								);
							}
							function M(e) {
								if (
									c.suppressDeprecationWarnings === false &&
									typeof console !== 'undefined' &&
									console.warn
								)
									console.warn('Deprecation warning: ' + e);
							}
							function L(r, o) {
								var a = true;
								return h(function () {
									if (c.deprecationHandler != null)
										c.deprecationHandler(null, r);
									if (a) {
										var e = [],
											t,
											n,
											i;
										for (n = 0; n < arguments.length; n++) {
											t = '';
											if (typeof arguments[n] === 'object') {
												t += '\n[' + n + '] ';
												for (i in arguments[0])
													if (l(arguments[0], i))
														t += i + ': ' + arguments[0][i] + ', ';
												t = t.slice(0, -2);
											} else t = arguments[n];
											e.push(t);
										}
										M(
											r +
												'\nArguments: ' +
												Array.prototype.slice.call(e).join('') +
												'\n' +
												new Error().stack
										);
										a = false;
									}
									return o.apply(this, arguments);
								}, o);
							}
							var x = {},
								D;
							function S(e, t) {
								if (c.deprecationHandler != null) c.deprecationHandler(e, t);
								if (!x[e]) {
									M(t);
									x[e] = true;
								}
							}
							function T(e) {
								return (
									(typeof Function !== 'undefined' && e instanceof Function) ||
									Object.prototype.toString.call(e) === '[object Function]'
								);
							}
							function O(e) {
								var t, n;
								for (n in e)
									if (l(e, n)) {
										t = e[n];
										if (T(t)) this[n] = t;
										else this['_' + n] = t;
									}
								this._config = e;
								this._dayOfMonthOrdinalParseLenient = new RegExp(
									(this._dayOfMonthOrdinalParse.source ||
										this._ordinalParse.source) +
										'|' +
										/\d{1,2}/.source
								);
							}
							function Y(e, t) {
								var n = h({}, e),
									i;
								for (i in t)
									if (l(t, i))
										if (s(e[i]) && s(t[i])) {
											n[i] = {};
											h(n[i], e[i]);
											h(n[i], t[i]);
										} else if (t[i] != null) n[i] = t[i];
										else delete n[i];
								for (i in e)
									if (l(e, i) && !l(t, i) && s(e[i])) n[i] = h({}, n[i]);
								return n;
							}
							function C(e) {
								if (e != null) this.set(e);
							}
							if (
								((c.suppressDeprecationWarnings = false),
								(c.deprecationHandler = null),
								Object.keys)
							)
								D = Object.keys;
							else
								D = function (e) {
									var t,
										n = [];
									for (t in e) if (l(e, t)) n.push(t);
									return n;
								};
							var j = {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							};
							function E(e, t, n) {
								var i = this._calendar[e] || this._calendar['sameElse'];
								return T(i) ? i.call(t, n) : i;
							}
							function P(e, t, n) {
								var i = '' + Math.abs(e),
									r = t - i.length,
									o = e >= 0;
								return (
									(o ? (n ? '+' : '') : '-') +
									Math.pow(10, Math.max(0, r)).toString().substr(1) +
									i
								);
							}
							var A =
									/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
								H = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
								I = {},
								R = {};
							function N(e, t, n, i) {
								var r = i;
								if (typeof i === 'string')
									r = function () {
										return this[i]();
									};
								if (e) R[e] = r;
								if (t)
									R[t[0]] = function () {
										return P(r.apply(this, arguments), t[1], t[2]);
									};
								if (n)
									R[n] = function () {
										return this.localeData().ordinal(
											r.apply(this, arguments),
											e
										);
									};
							}
							function W(e) {
								if (e.match(/\[[\s\S]/)) return e.replace(/^\[|\]$/g, '');
								return e.replace(/\\/g, '');
							}
							function F(i) {
								var r = i.match(A),
									e,
									o;
								for (e = 0, o = r.length; e < o; e++)
									if (R[r[e]]) r[e] = R[r[e]];
									else r[e] = W(r[e]);
								return function (e) {
									var t = '',
										n;
									for (n = 0; n < o; n++) t += T(r[n]) ? r[n].call(e, i) : r[n];
									return t;
								};
							}
							function B(e, t) {
								if (!e.isValid()) return e.localeData().invalidDate();
								t = z(t, e.localeData());
								I[t] = I[t] || F(t);
								return I[t](e);
							}
							function z(e, t) {
								var n = 5;
								function i(e) {
									return t.longDateFormat(e) || e;
								}
								H.lastIndex = 0;
								while (n >= 0 && H.test(e)) {
									e = e.replace(H, i);
									H.lastIndex = 0;
									n -= 1;
								}
								return e;
							}
							var V = {
								LTS: 'h:mm:ss A',
								LT: 'h:mm A',
								L: 'MM/DD/YYYY',
								LL: 'MMMM D, YYYY',
								LLL: 'MMMM D, YYYY h:mm A',
								LLLL: 'dddd, MMMM D, YYYY h:mm A',
							};
							function U(e) {
								var t = this._longDateFormat[e],
									n = this._longDateFormat[e.toUpperCase()];
								if (t || !n) return t;
								this._longDateFormat[e] = n
									.match(A)
									.map(function (e) {
										if (
											e === 'MMMM' ||
											e === 'MM' ||
											e === 'DD' ||
											e === 'dddd'
										)
											return e.slice(1);
										return e;
									})
									.join('');
								return this._longDateFormat[e];
							}
							var X = 'Invalid date';
							function J() {
								return this._invalidDate;
							}
							var q = '%d',
								K = /\d{1,2}/;
							function G(e) {
								return this._ordinal.replace('%d', e);
							}
							var Q = {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								w: 'a week',
								ww: '%d weeks',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							};
							function $(e, t, n, i) {
								var r = this._relativeTime[n];
								return T(r) ? r(e, t, n, i) : r.replace(/%d/i, e);
							}
							function Z(e, t) {
								var n = this._relativeTime[e > 0 ? 'future' : 'past'];
								return T(n) ? n(t) : n.replace(/%s/i, t);
							}
							var ee = {};
							function te(e, t) {
								var n = e.toLowerCase();
								ee[n] = ee[n + 's'] = ee[t] = e;
							}
							function ne(e) {
								return typeof e === 'string'
									? ee[e] || ee[e.toLowerCase()]
									: undefined;
							}
							function ie(e) {
								var t = {},
									n,
									i;
								for (i in e)
									if (l(e, i)) {
										n = ne(i);
										if (n) t[n] = e[i];
									}
								return t;
							}
							var re = {};
							function oe(e, t) {
								re[e] = t;
							}
							function ae(e) {
								var t = [],
									n;
								for (n in e) if (l(e, n)) t.push({ unit: n, priority: re[n] });
								t.sort(function (e, t) {
									return e.priority - t.priority;
								});
								return t;
							}
							function se(e) {
								return (e % 4 === 0 && e % 100 !== 0) || e % 400 === 0;
							}
							function le(e) {
								if (e < 0) return Math.ceil(e) || 0;
								else return Math.floor(e);
							}
							function ue(e) {
								var t = +e,
									n = 0;
								if (t !== 0 && isFinite(t)) n = le(t);
								return n;
							}
							function ce(t, n) {
								return function (e) {
									if (e != null) {
										fe(this, t, e);
										c.updateOffset(this, n);
										return this;
									} else return de(this, t);
								};
							}
							function de(e, t) {
								return e.isValid()
									? e._d['get' + (e._isUTC ? 'UTC' : '') + t]()
									: NaN;
							}
							function fe(e, t, n) {
								if (e.isValid() && !isNaN(n))
									if (
										t === 'FullYear' &&
										se(e.year()) &&
										e.month() === 1 &&
										e.date() === 29
									) {
										n = ue(n);
										e._d['set' + (e._isUTC ? 'UTC' : '') + t](
											n,
											e.month(),
											$e(n, e.month())
										);
									} else e._d['set' + (e._isUTC ? 'UTC' : '') + t](n);
							}
							function he(e) {
								e = ne(e);
								if (T(this[e])) return this[e]();
								return this;
							}
							function pe(e, t) {
								if (typeof e === 'object') {
									e = ie(e);
									var n = ae(e),
										i;
									for (i = 0; i < n.length; i++) this[n[i].unit](e[n[i].unit]);
								} else {
									e = ne(e);
									if (T(this[e])) return this[e](t);
								}
								return this;
							}
							var me = /\d/,
								_e = /\d\d/,
								ve = /\d{3}/,
								ye = /\d{4}/,
								ge = /[+-]?\d{6}/,
								be = /\d\d?/,
								ke = /\d\d\d\d?/,
								we = /\d\d\d\d\d\d?/,
								Me = /\d{1,3}/,
								Le = /\d{1,4}/,
								xe = /[+-]?\d{1,6}/,
								De = /\d+/,
								Se = /[+-]?\d+/,
								Te = /Z|[+-]\d\d:?\d\d/gi,
								Oe = /Z|[+-]\d\d(?::?\d\d)?/gi,
								Ye = /[+-]?\d+(\.\d{1,3})?/,
								Ce =
									/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
								je;
							function Ee(e, n, i) {
								je[e] = T(n)
									? n
									: function (e, t) {
											return e && i ? i : n;
									  };
							}
							function Pe(e, t) {
								if (!l(je, e)) return new RegExp(Ae(e));
								return je[e](t._strict, t._locale);
							}
							function Ae(e) {
								return He(
									e
										.replace('\\', '')
										.replace(
											/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
											function (e, t, n, i, r) {
												return t || n || i || r;
											}
										)
								);
							}
							function He(e) {
								return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
							}
							je = {};
							var Ie = {};
							function Re(e, n) {
								var t,
									i = n;
								if (typeof e === 'string') e = [e];
								if (d(n))
									i = function (e, t) {
										t[n] = ue(e);
									};
								for (t = 0; t < e.length; t++) Ie[e[t]] = i;
							}
							function Ne(e, r) {
								Re(e, function (e, t, n, i) {
									n._w = n._w || {};
									r(e, n._w, n, i);
								});
							}
							function We(e, t, n) {
								if (t != null && l(Ie, e)) Ie[e](t, n._a, n, e);
							}
							var Fe = 0,
								Be = 1,
								ze = 2,
								Ve = 3,
								Ue = 4,
								Xe = 5,
								Je = 6,
								qe = 7,
								Ke = 8,
								Ge;
							function Qe(e, t) {
								return ((e % t) + t) % t;
							}
							if (Array.prototype.indexOf) Ge = Array.prototype.indexOf;
							else
								Ge = function (e) {
									var t;
									for (t = 0; t < this.length; ++t) if (this[t] === e) return t;
									return -1;
								};
							function $e(e, t) {
								if (isNaN(e) || isNaN(t)) return NaN;
								var n = Qe(t, 12);
								e += (t - n) / 12;
								return n === 1 ? (se(e) ? 29 : 28) : 31 - ((n % 7) % 2);
							}
							N('M', ['MM', 2], 'Mo', function () {
								return this.month() + 1;
							}),
								N('MMM', 0, 0, function (e) {
									return this.localeData().monthsShort(this, e);
								}),
								N('MMMM', 0, 0, function (e) {
									return this.localeData().months(this, e);
								}),
								te('month', 'M'),
								oe('month', 8),
								Ee('M', be),
								Ee('MM', be, _e),
								Ee('MMM', function (e, t) {
									return t.monthsShortRegex(e);
								}),
								Ee('MMMM', function (e, t) {
									return t.monthsRegex(e);
								}),
								Re(['M', 'MM'], function (e, t) {
									t[Be] = ue(e) - 1;
								}),
								Re(['MMM', 'MMMM'], function (e, t, n, i) {
									var r = n._locale.monthsParse(e, i, n._strict);
									if (r != null) t[Be] = r;
									else m(n).invalidMonth = e;
								});
							var Ze =
									'January_February_March_April_May_June_July_August_September_October_November_December'.split(
										'_'
									),
								et = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
									'_'
								),
								tt = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
								nt = Ce,
								it = Ce;
							function rt(e, t) {
								if (!e)
									return a(this._months)
										? this._months
										: this._months['standalone'];
								return a(this._months)
									? this._months[e.month()]
									: this._months[
											(this._months.isFormat || tt).test(t)
												? 'format'
												: 'standalone'
									  ][e.month()];
							}
							function ot(e, t) {
								if (!e)
									return a(this._monthsShort)
										? this._monthsShort
										: this._monthsShort['standalone'];
								return a(this._monthsShort)
									? this._monthsShort[e.month()]
									: this._monthsShort[tt.test(t) ? 'format' : 'standalone'][
											e.month()
									  ];
							}
							function at(e, t, n) {
								var i,
									r,
									o,
									a = e.toLocaleLowerCase();
								if (!this._monthsParse) {
									this._monthsParse = [];
									this._longMonthsParse = [];
									this._shortMonthsParse = [];
									for (i = 0; i < 12; ++i) {
										o = p([2e3, i]);
										this._shortMonthsParse[i] = this.monthsShort(
											o,
											''
										).toLocaleLowerCase();
										this._longMonthsParse[i] = this.months(
											o,
											''
										).toLocaleLowerCase();
									}
								}
								if (n)
									if (t === 'MMM') {
										r = Ge.call(this._shortMonthsParse, a);
										return r !== -1 ? r : null;
									} else {
										r = Ge.call(this._longMonthsParse, a);
										return r !== -1 ? r : null;
									}
								else if (t === 'MMM') {
									r = Ge.call(this._shortMonthsParse, a);
									if (r !== -1) return r;
									r = Ge.call(this._longMonthsParse, a);
									return r !== -1 ? r : null;
								} else {
									r = Ge.call(this._longMonthsParse, a);
									if (r !== -1) return r;
									r = Ge.call(this._shortMonthsParse, a);
									return r !== -1 ? r : null;
								}
							}
							function st(e, t, n) {
								var i, r, o;
								if (this._monthsParseExact) return at.call(this, e, t, n);
								if (!this._monthsParse) {
									this._monthsParse = [];
									this._longMonthsParse = [];
									this._shortMonthsParse = [];
								}
								for (i = 0; i < 12; i++) {
									r = p([2e3, i]);
									if (n && !this._longMonthsParse[i]) {
										this._longMonthsParse[i] = new RegExp(
											'^' + this.months(r, '').replace('.', '') + '$',
											'i'
										);
										this._shortMonthsParse[i] = new RegExp(
											'^' + this.monthsShort(r, '').replace('.', '') + '$',
											'i'
										);
									}
									if (!n && !this._monthsParse[i]) {
										o =
											'^' + this.months(r, '') + '|^' + this.monthsShort(r, '');
										this._monthsParse[i] = new RegExp(o.replace('.', ''), 'i');
									}
									if (n && t === 'MMMM' && this._longMonthsParse[i].test(e))
										return i;
									else if (
										n &&
										t === 'MMM' &&
										this._shortMonthsParse[i].test(e)
									)
										return i;
									else if (!n && this._monthsParse[i].test(e)) return i;
								}
							}
							function lt(e, t) {
								var n;
								if (!e.isValid()) return e;
								if (typeof t === 'string')
									if (/^\d+$/.test(t)) t = ue(t);
									else {
										t = e.localeData().monthsParse(t);
										if (!d(t)) return e;
									}
								n = Math.min(e.date(), $e(e.year(), t));
								e._d['set' + (e._isUTC ? 'UTC' : '') + 'Month'](t, n);
								return e;
							}
							function ut(e) {
								if (e != null) {
									lt(this, e);
									c.updateOffset(this, true);
									return this;
								} else return de(this, 'Month');
							}
							function ct() {
								return $e(this.year(), this.month());
							}
							function dt(e) {
								if (this._monthsParseExact) {
									if (!l(this, '_monthsRegex')) ht.call(this);
									if (e) return this._monthsShortStrictRegex;
									else return this._monthsShortRegex;
								} else {
									if (!l(this, '_monthsShortRegex'))
										this._monthsShortRegex = nt;
									return this._monthsShortStrictRegex && e
										? this._monthsShortStrictRegex
										: this._monthsShortRegex;
								}
							}
							function ft(e) {
								if (this._monthsParseExact) {
									if (!l(this, '_monthsRegex')) ht.call(this);
									if (e) return this._monthsStrictRegex;
									else return this._monthsRegex;
								} else {
									if (!l(this, '_monthsRegex')) this._monthsRegex = it;
									return this._monthsStrictRegex && e
										? this._monthsStrictRegex
										: this._monthsRegex;
								}
							}
							function ht() {
								function e(e, t) {
									return t.length - e.length;
								}
								var t = [],
									n = [],
									i = [],
									r,
									o;
								for (r = 0; r < 12; r++) {
									o = p([2e3, r]);
									t.push(this.monthsShort(o, ''));
									n.push(this.months(o, ''));
									i.push(this.months(o, ''));
									i.push(this.monthsShort(o, ''));
								}
								t.sort(e);
								n.sort(e);
								i.sort(e);
								for (r = 0; r < 12; r++) {
									t[r] = He(t[r]);
									n[r] = He(n[r]);
								}
								for (r = 0; r < 24; r++) i[r] = He(i[r]);
								this._monthsRegex = new RegExp('^(' + i.join('|') + ')', 'i');
								this._monthsShortRegex = this._monthsRegex;
								this._monthsStrictRegex = new RegExp(
									'^(' + n.join('|') + ')',
									'i'
								);
								this._monthsShortStrictRegex = new RegExp(
									'^(' + t.join('|') + ')',
									'i'
								);
							}
							function pt(e) {
								return se(e) ? 366 : 365;
							}
							N('Y', 0, 0, function () {
								var e = this.year();
								return e <= 9999 ? P(e, 4) : '+' + e;
							}),
								N(0, ['YY', 2], 0, function () {
									return this.year() % 100;
								}),
								N(0, ['YYYY', 4], 0, 'year'),
								N(0, ['YYYYY', 5], 0, 'year'),
								N(0, ['YYYYYY', 6, true], 0, 'year'),
								te('year', 'y'),
								oe('year', 1),
								Ee('Y', Se),
								Ee('YY', be, _e),
								Ee('YYYY', Le, ye),
								Ee('YYYYY', xe, ge),
								Ee('YYYYYY', xe, ge),
								Re(['YYYYY', 'YYYYYY'], Fe),
								Re('YYYY', function (e, t) {
									t[Fe] = e.length === 2 ? c.parseTwoDigitYear(e) : ue(e);
								}),
								Re('YY', function (e, t) {
									t[Fe] = c.parseTwoDigitYear(e);
								}),
								Re('Y', function (e, t) {
									t[Fe] = parseInt(e, 10);
								}),
								(c.parseTwoDigitYear = function (e) {
									return ue(e) + (ue(e) > 68 ? 1900 : 2e3);
								});
							var mt = ce('FullYear', true);
							function _t() {
								return se(this.year());
							}
							function vt(e, t, n, i, r, o, a) {
								var s;
								if (e < 100 && e >= 0) {
									s = new Date(e + 400, t, n, i, r, o, a);
									if (isFinite(s.getFullYear())) s.setFullYear(e);
								} else s = new Date(e, t, n, i, r, o, a);
								return s;
							}
							function yt(e) {
								var t, n;
								if (e < 100 && e >= 0) {
									n = Array.prototype.slice.call(arguments);
									n[0] = e + 400;
									t = new Date(Date.UTC.apply(null, n));
									if (isFinite(t.getUTCFullYear())) t.setUTCFullYear(e);
								} else t = new Date(Date.UTC.apply(null, arguments));
								return t;
							}
							function gt(e, t, n) {
								var i = 7 + t - n,
									r = (7 + yt(e, 0, i).getUTCDay() - t) % 7;
								return -r + i - 1;
							}
							function bt(e, t, n, i, r) {
								var o = (7 + n - i) % 7,
									a = gt(e, i, r),
									s = 1 + 7 * (t - 1) + o + a,
									l,
									u;
								if (s <= 0) {
									l = e - 1;
									u = pt(l) + s;
								} else if (s > pt(e)) {
									l = e + 1;
									u = s - pt(e);
								} else {
									l = e;
									u = s;
								}
								return { year: l, dayOfYear: u };
							}
							function kt(e, t, n) {
								var i = gt(e.year(), t, n),
									r = Math.floor((e.dayOfYear() - i - 1) / 7) + 1,
									o,
									a;
								if (r < 1) {
									a = e.year() - 1;
									o = r + wt(a, t, n);
								} else if (r > wt(e.year(), t, n)) {
									o = r - wt(e.year(), t, n);
									a = e.year() + 1;
								} else {
									a = e.year();
									o = r;
								}
								return { week: o, year: a };
							}
							function wt(e, t, n) {
								var i = gt(e, t, n),
									r = gt(e + 1, t, n);
								return (pt(e) - i + r) / 7;
							}
							function Mt(e) {
								return kt(e, this._week.dow, this._week.doy).week;
							}
							N('w', ['ww', 2], 'wo', 'week'),
								N('W', ['WW', 2], 'Wo', 'isoWeek'),
								te('week', 'w'),
								te('isoWeek', 'W'),
								oe('week', 5),
								oe('isoWeek', 5),
								Ee('w', be),
								Ee('ww', be, _e),
								Ee('W', be),
								Ee('WW', be, _e),
								Ne(['w', 'ww', 'W', 'WW'], function (e, t, n, i) {
									t[i.substr(0, 1)] = ue(e);
								});
							var Lt = { dow: 0, doy: 6 };
							function xt() {
								return this._week.dow;
							}
							function Dt() {
								return this._week.doy;
							}
							function St(e) {
								var t = this.localeData().week(this);
								return e == null ? t : this.add((e - t) * 7, 'd');
							}
							function Tt(e) {
								var t = kt(this, 1, 4).week;
								return e == null ? t : this.add((e - t) * 7, 'd');
							}
							function Ot(e, t) {
								if (typeof e !== 'string') return e;
								if (!isNaN(e)) return parseInt(e, 10);
								e = t.weekdaysParse(e);
								if (typeof e === 'number') return e;
								return null;
							}
							function Yt(e, t) {
								if (typeof e === 'string') return t.weekdaysParse(e) % 7 || 7;
								return isNaN(e) ? null : e;
							}
							function Ct(e, t) {
								return e.slice(t, 7).concat(e.slice(0, t));
							}
							N('d', 0, 'do', 'day'),
								N('dd', 0, 0, function (e) {
									return this.localeData().weekdaysMin(this, e);
								}),
								N('ddd', 0, 0, function (e) {
									return this.localeData().weekdaysShort(this, e);
								}),
								N('dddd', 0, 0, function (e) {
									return this.localeData().weekdays(this, e);
								}),
								N('e', 0, 0, 'weekday'),
								N('E', 0, 0, 'isoWeekday'),
								te('day', 'd'),
								te('weekday', 'e'),
								te('isoWeekday', 'E'),
								oe('day', 11),
								oe('weekday', 11),
								oe('isoWeekday', 11),
								Ee('d', be),
								Ee('e', be),
								Ee('E', be),
								Ee('dd', function (e, t) {
									return t.weekdaysMinRegex(e);
								}),
								Ee('ddd', function (e, t) {
									return t.weekdaysShortRegex(e);
								}),
								Ee('dddd', function (e, t) {
									return t.weekdaysRegex(e);
								}),
								Ne(['dd', 'ddd', 'dddd'], function (e, t, n, i) {
									var r = n._locale.weekdaysParse(e, i, n._strict);
									if (r != null) t.d = r;
									else m(n).invalidWeekday = e;
								}),
								Ne(['d', 'e', 'E'], function (e, t, n, i) {
									t[i] = ue(e);
								});
							var jt =
									'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
										'_'
									),
								Et = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
								Pt = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
								At = Ce,
								Ht = Ce,
								It = Ce;
							function Rt(e, t) {
								var n = a(this._weekdays)
									? this._weekdays
									: this._weekdays[
											e && e !== true && this._weekdays.isFormat.test(t)
												? 'format'
												: 'standalone'
									  ];
								return e === true ? Ct(n, this._week.dow) : e ? n[e.day()] : n;
							}
							function Nt(e) {
								return e === true
									? Ct(this._weekdaysShort, this._week.dow)
									: e
									? this._weekdaysShort[e.day()]
									: this._weekdaysShort;
							}
							function Wt(e) {
								return e === true
									? Ct(this._weekdaysMin, this._week.dow)
									: e
									? this._weekdaysMin[e.day()]
									: this._weekdaysMin;
							}
							function Ft(e, t, n) {
								var i,
									r,
									o,
									a = e.toLocaleLowerCase();
								if (!this._weekdaysParse) {
									this._weekdaysParse = [];
									this._shortWeekdaysParse = [];
									this._minWeekdaysParse = [];
									for (i = 0; i < 7; ++i) {
										o = p([2e3, 1]).day(i);
										this._minWeekdaysParse[i] = this.weekdaysMin(
											o,
											''
										).toLocaleLowerCase();
										this._shortWeekdaysParse[i] = this.weekdaysShort(
											o,
											''
										).toLocaleLowerCase();
										this._weekdaysParse[i] = this.weekdays(
											o,
											''
										).toLocaleLowerCase();
									}
								}
								if (n)
									if (t === 'dddd') {
										r = Ge.call(this._weekdaysParse, a);
										return r !== -1 ? r : null;
									} else if (t === 'ddd') {
										r = Ge.call(this._shortWeekdaysParse, a);
										return r !== -1 ? r : null;
									} else {
										r = Ge.call(this._minWeekdaysParse, a);
										return r !== -1 ? r : null;
									}
								else if (t === 'dddd') {
									r = Ge.call(this._weekdaysParse, a);
									if (r !== -1) return r;
									r = Ge.call(this._shortWeekdaysParse, a);
									if (r !== -1) return r;
									r = Ge.call(this._minWeekdaysParse, a);
									return r !== -1 ? r : null;
								} else if (t === 'ddd') {
									r = Ge.call(this._shortWeekdaysParse, a);
									if (r !== -1) return r;
									r = Ge.call(this._weekdaysParse, a);
									if (r !== -1) return r;
									r = Ge.call(this._minWeekdaysParse, a);
									return r !== -1 ? r : null;
								} else {
									r = Ge.call(this._minWeekdaysParse, a);
									if (r !== -1) return r;
									r = Ge.call(this._weekdaysParse, a);
									if (r !== -1) return r;
									r = Ge.call(this._shortWeekdaysParse, a);
									return r !== -1 ? r : null;
								}
							}
							function Bt(e, t, n) {
								var i, r, o;
								if (this._weekdaysParseExact) return Ft.call(this, e, t, n);
								if (!this._weekdaysParse) {
									this._weekdaysParse = [];
									this._minWeekdaysParse = [];
									this._shortWeekdaysParse = [];
									this._fullWeekdaysParse = [];
								}
								for (i = 0; i < 7; i++) {
									r = p([2e3, 1]).day(i);
									if (n && !this._fullWeekdaysParse[i]) {
										this._fullWeekdaysParse[i] = new RegExp(
											'^' + this.weekdays(r, '').replace('.', '\\.?') + '$',
											'i'
										);
										this._shortWeekdaysParse[i] = new RegExp(
											'^' +
												this.weekdaysShort(r, '').replace('.', '\\.?') +
												'$',
											'i'
										);
										this._minWeekdaysParse[i] = new RegExp(
											'^' + this.weekdaysMin(r, '').replace('.', '\\.?') + '$',
											'i'
										);
									}
									if (!this._weekdaysParse[i]) {
										o =
											'^' +
											this.weekdays(r, '') +
											'|^' +
											this.weekdaysShort(r, '') +
											'|^' +
											this.weekdaysMin(r, '');
										this._weekdaysParse[i] = new RegExp(
											o.replace('.', ''),
											'i'
										);
									}
									if (n && t === 'dddd' && this._fullWeekdaysParse[i].test(e))
										return i;
									else if (
										n &&
										t === 'ddd' &&
										this._shortWeekdaysParse[i].test(e)
									)
										return i;
									else if (n && t === 'dd' && this._minWeekdaysParse[i].test(e))
										return i;
									else if (!n && this._weekdaysParse[i].test(e)) return i;
								}
							}
							function zt(e) {
								if (!this.isValid()) return e != null ? this : NaN;
								var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
								if (e != null) {
									e = Ot(e, this.localeData());
									return this.add(e - t, 'd');
								} else return t;
							}
							function Vt(e) {
								if (!this.isValid()) return e != null ? this : NaN;
								var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
								return e == null ? t : this.add(e - t, 'd');
							}
							function Ut(e) {
								if (!this.isValid()) return e != null ? this : NaN;
								if (e != null) {
									var t = Yt(e, this.localeData());
									return this.day(this.day() % 7 ? t : t - 7);
								} else return this.day() || 7;
							}
							function Xt(e) {
								if (this._weekdaysParseExact) {
									if (!l(this, '_weekdaysRegex')) Kt.call(this);
									if (e) return this._weekdaysStrictRegex;
									else return this._weekdaysRegex;
								} else {
									if (!l(this, '_weekdaysRegex')) this._weekdaysRegex = At;
									return this._weekdaysStrictRegex && e
										? this._weekdaysStrictRegex
										: this._weekdaysRegex;
								}
							}
							function Jt(e) {
								if (this._weekdaysParseExact) {
									if (!l(this, '_weekdaysRegex')) Kt.call(this);
									if (e) return this._weekdaysShortStrictRegex;
									else return this._weekdaysShortRegex;
								} else {
									if (!l(this, '_weekdaysShortRegex'))
										this._weekdaysShortRegex = Ht;
									return this._weekdaysShortStrictRegex && e
										? this._weekdaysShortStrictRegex
										: this._weekdaysShortRegex;
								}
							}
							function qt(e) {
								if (this._weekdaysParseExact) {
									if (!l(this, '_weekdaysRegex')) Kt.call(this);
									if (e) return this._weekdaysMinStrictRegex;
									else return this._weekdaysMinRegex;
								} else {
									if (!l(this, '_weekdaysMinRegex'))
										this._weekdaysMinRegex = It;
									return this._weekdaysMinStrictRegex && e
										? this._weekdaysMinStrictRegex
										: this._weekdaysMinRegex;
								}
							}
							function Kt() {
								function e(e, t) {
									return t.length - e.length;
								}
								var t = [],
									n = [],
									i = [],
									r = [],
									o,
									a,
									s,
									l,
									u;
								for (o = 0; o < 7; o++) {
									a = p([2e3, 1]).day(o);
									s = He(this.weekdaysMin(a, ''));
									l = He(this.weekdaysShort(a, ''));
									u = He(this.weekdays(a, ''));
									t.push(s);
									n.push(l);
									i.push(u);
									r.push(s);
									r.push(l);
									r.push(u);
								}
								t.sort(e);
								n.sort(e);
								i.sort(e);
								r.sort(e);
								this._weekdaysRegex = new RegExp('^(' + r.join('|') + ')', 'i');
								this._weekdaysShortRegex = this._weekdaysRegex;
								this._weekdaysMinRegex = this._weekdaysRegex;
								this._weekdaysStrictRegex = new RegExp(
									'^(' + i.join('|') + ')',
									'i'
								);
								this._weekdaysShortStrictRegex = new RegExp(
									'^(' + n.join('|') + ')',
									'i'
								);
								this._weekdaysMinStrictRegex = new RegExp(
									'^(' + t.join('|') + ')',
									'i'
								);
							}
							function Gt() {
								return this.hours() % 12 || 12;
							}
							function Qt() {
								return this.hours() || 24;
							}
							function $t(e, t) {
								N(e, 0, 0, function () {
									return this.localeData().meridiem(
										this.hours(),
										this.minutes(),
										t
									);
								});
							}
							function Zt(e, t) {
								return t._meridiemParse;
							}
							function en(e) {
								return (e + '').toLowerCase().charAt(0) === 'p';
							}
							N('H', ['HH', 2], 0, 'hour'),
								N('h', ['hh', 2], 0, Gt),
								N('k', ['kk', 2], 0, Qt),
								N('hmm', 0, 0, function () {
									return '' + Gt.apply(this) + P(this.minutes(), 2);
								}),
								N('hmmss', 0, 0, function () {
									return (
										'' +
										Gt.apply(this) +
										P(this.minutes(), 2) +
										P(this.seconds(), 2)
									);
								}),
								N('Hmm', 0, 0, function () {
									return '' + this.hours() + P(this.minutes(), 2);
								}),
								N('Hmmss', 0, 0, function () {
									return (
										'' +
										this.hours() +
										P(this.minutes(), 2) +
										P(this.seconds(), 2)
									);
								}),
								$t('a', true),
								$t('A', false),
								te('hour', 'h'),
								oe('hour', 13),
								Ee('a', Zt),
								Ee('A', Zt),
								Ee('H', be),
								Ee('h', be),
								Ee('k', be),
								Ee('HH', be, _e),
								Ee('hh', be, _e),
								Ee('kk', be, _e),
								Ee('hmm', ke),
								Ee('hmmss', we),
								Ee('Hmm', ke),
								Ee('Hmmss', we),
								Re(['H', 'HH'], Ve),
								Re(['k', 'kk'], function (e, t, n) {
									var i = ue(e);
									t[Ve] = i === 24 ? 0 : i;
								}),
								Re(['a', 'A'], function (e, t, n) {
									n._isPm = n._locale.isPM(e);
									n._meridiem = e;
								}),
								Re(['h', 'hh'], function (e, t, n) {
									t[Ve] = ue(e);
									m(n).bigHour = true;
								}),
								Re('hmm', function (e, t, n) {
									var i = e.length - 2;
									t[Ve] = ue(e.substr(0, i));
									t[Ue] = ue(e.substr(i));
									m(n).bigHour = true;
								}),
								Re('hmmss', function (e, t, n) {
									var i = e.length - 4,
										r = e.length - 2;
									t[Ve] = ue(e.substr(0, i));
									t[Ue] = ue(e.substr(i, 2));
									t[Xe] = ue(e.substr(r));
									m(n).bigHour = true;
								}),
								Re('Hmm', function (e, t, n) {
									var i = e.length - 2;
									t[Ve] = ue(e.substr(0, i));
									t[Ue] = ue(e.substr(i));
								}),
								Re('Hmmss', function (e, t, n) {
									var i = e.length - 4,
										r = e.length - 2;
									t[Ve] = ue(e.substr(0, i));
									t[Ue] = ue(e.substr(i, 2));
									t[Xe] = ue(e.substr(r));
								});
							var tn,
								nn = ce('Hours', true);
							function rn(e, t, n) {
								if (e > 11) return n ? 'pm' : 'PM';
								else return n ? 'am' : 'AM';
							}
							var on = {
									calendar: j,
									longDateFormat: V,
									invalidDate: X,
									ordinal: q,
									dayOfMonthOrdinalParse: K,
									relativeTime: Q,
									months: Ze,
									monthsShort: et,
									week: Lt,
									weekdays: jt,
									weekdaysMin: Pt,
									weekdaysShort: Et,
									meridiemParse: /[ap]\.?m?\.?/i,
								},
								an = {},
								sn = {},
								ln;
							function un(e, t) {
								var n,
									i = Math.min(e.length, t.length);
								for (n = 0; n < i; n += 1) if (e[n] !== t[n]) return n;
								return i;
							}
							function cn(e) {
								return e ? e.toLowerCase().replace('_', '-') : e;
							}
							function dn(e) {
								var t = 0,
									n,
									i,
									r,
									o;
								while (t < e.length) {
									o = cn(e[t]).split('-');
									n = o.length;
									i = cn(e[t + 1]);
									i = i ? i.split('-') : null;
									while (n > 0) {
										r = fn(o.slice(0, n).join('-'));
										if (r) return r;
										if (i && i.length >= n && un(o, i) >= n - 1) break;
										n--;
									}
									t++;
								}
								return ln;
							}
							function fn(t) {
								var e = null,
									n;
								if (
									an[t] === undefined &&
									typeof ua !== 'undefined' &&
									ua &&
									ua.exports
								)
									try {
										e = ln._abbr;
										n = ca;
										da(307)('./' + t);
										hn(e);
									} catch (e) {
										an[t] = null;
									}
								return an[t];
							}
							function hn(e, t) {
								var n;
								if (e) {
									if (o(t)) n = _n(e);
									else n = pn(e, t);
									if (n) ln = n;
									else if (typeof console !== 'undefined' && console.warn)
										console.warn(
											'Locale ' + e + ' not found. Did you forget to load it?'
										);
								}
								return ln._abbr;
							}
							function pn(e, t) {
								if (t !== null) {
									var n,
										i = on;
									t.abbr = e;
									if (an[e] != null) {
										S(
											'defineLocaleOverride',
											'use moment.updateLocale(localeName, config) to change ' +
												'an existing locale. moment.defineLocale(localeName, ' +
												'config) should only be used for creating a new locale ' +
												'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
										);
										i = an[e]._config;
									} else if (t.parentLocale != null)
										if (an[t.parentLocale] != null)
											i = an[t.parentLocale]._config;
										else {
											n = fn(t.parentLocale);
											if (n != null) i = n._config;
											else {
												if (!sn[t.parentLocale]) sn[t.parentLocale] = [];
												sn[t.parentLocale].push({ name: e, config: t });
												return null;
											}
										}
									an[e] = new C(Y(i, t));
									if (sn[e])
										sn[e].forEach(function (e) {
											pn(e.name, e.config);
										});
									hn(e);
									return an[e];
								} else {
									delete an[e];
									return null;
								}
							}
							function mn(e, t) {
								if (null != t) {
									var t,
										n,
										i = on;
									null != an[e] && null != an[e].parentLocale
										? an[e].set(Y(an[e]._config, t))
										: (null != (n = fn(e)) && (i = n._config),
										  (t = Y(i, t)),
										  null == n && (t.abbr = e),
										  ((t = new C(t)).parentLocale = an[e]),
										  (an[e] = t)),
										hn(e);
								} else
									null != an[e] &&
										(null != an[e].parentLocale
											? ((an[e] = an[e].parentLocale), e === hn() && hn(e))
											: null != an[e] && delete an[e]);
								return an[e];
							}
							function _n(e) {
								var t;
								if (e && e._locale && e._locale._abbr) e = e._locale._abbr;
								if (!e) return ln;
								if (!a(e)) {
									t = fn(e);
									if (t) return t;
									e = [e];
								}
								return dn(e);
							}
							function vn() {
								return D(an);
							}
							function yn(e) {
								var t,
									n = e._a;
								if (n && m(e).overflow === -2) {
									t =
										n[Be] < 0 || n[Be] > 11
											? Be
											: n[ze] < 1 || n[ze] > $e(n[Fe], n[Be])
											? ze
											: n[Ve] < 0 ||
											  n[Ve] > 24 ||
											  (n[Ve] === 24 &&
													(n[Ue] !== 0 || n[Xe] !== 0 || n[Je] !== 0))
											? Ve
											: n[Ue] < 0 || n[Ue] > 59
											? Ue
											: n[Xe] < 0 || n[Xe] > 59
											? Xe
											: n[Je] < 0 || n[Je] > 999
											? Je
											: -1;
									if (m(e)._overflowDayOfYear && (t < Fe || t > ze)) t = ze;
									if (m(e)._overflowWeeks && t === -1) t = qe;
									if (m(e)._overflowWeekday && t === -1) t = Ke;
									m(e).overflow = t;
								}
								return e;
							}
							var gn =
									/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
								bn =
									/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
								kn = /Z|[+-]\d\d(?::?\d\d)?/,
								wn = [
									['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
									['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
									['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
									['GGGG-[W]WW', /\d{4}-W\d\d/, false],
									['YYYY-DDD', /\d{4}-\d{3}/],
									['YYYY-MM', /\d{4}-\d\d/, false],
									['YYYYYYMMDD', /[+-]\d{10}/],
									['YYYYMMDD', /\d{8}/],
									['GGGG[W]WWE', /\d{4}W\d{3}/],
									['GGGG[W]WW', /\d{4}W\d{2}/, false],
									['YYYYDDD', /\d{7}/],
									['YYYYMM', /\d{6}/, false],
									['YYYY', /\d{4}/, false],
								],
								Mn = [
									['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
									['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
									['HH:mm:ss', /\d\d:\d\d:\d\d/],
									['HH:mm', /\d\d:\d\d/],
									['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
									['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
									['HHmmss', /\d\d\d\d\d\d/],
									['HHmm', /\d\d\d\d/],
									['HH', /\d\d/],
								],
								Ln = /^\/?Date\((-?\d+)/i,
								xn =
									/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
								Dn = {
									UT: 0,
									GMT: 0,
									EDT: -4 * 60,
									EST: -5 * 60,
									CDT: -5 * 60,
									CST: -6 * 60,
									MDT: -6 * 60,
									MST: -7 * 60,
									PDT: -7 * 60,
									PST: -8 * 60,
								};
							function Sn(e) {
								var t,
									n,
									i = e._i,
									r = gn.exec(i) || bn.exec(i),
									o,
									a,
									s,
									l;
								if (r) {
									m(e).iso = true;
									for (t = 0, n = wn.length; t < n; t++)
										if (wn[t][1].exec(r[1])) {
											a = wn[t][0];
											o = wn[t][2] !== false;
											break;
										}
									if (a == null) {
										e._isValid = false;
										return;
									}
									if (r[3]) {
										for (t = 0, n = Mn.length; t < n; t++)
											if (Mn[t][1].exec(r[3])) {
												s = (r[2] || ' ') + Mn[t][0];
												break;
											}
										if (s == null) {
											e._isValid = false;
											return;
										}
									}
									if (!o && s != null) {
										e._isValid = false;
										return;
									}
									if (r[4])
										if (kn.exec(r[4])) l = 'Z';
										else {
											e._isValid = false;
											return;
										}
									e._f = a + (s || '') + (l || '');
									Nn(e);
								} else e._isValid = false;
							}
							function Tn(e, t, n, i, r, o) {
								var a = [
									On(e),
									et.indexOf(t),
									parseInt(n, 10),
									parseInt(i, 10),
									parseInt(r, 10),
								];
								if (o) a.push(parseInt(o, 10));
								return a;
							}
							function On(e) {
								var t = parseInt(e, 10);
								if (t <= 49) return 2e3 + t;
								else if (t <= 999) return 1900 + t;
								return t;
							}
							function Yn(e) {
								return e
									.replace(/\([^)]*\)|[\n\t]/g, ' ')
									.replace(/(\s\s+)/g, ' ')
									.replace(/^\s\s*/, '')
									.replace(/\s\s*$/, '');
							}
							function Cn(e, t, n) {
								if (e) {
									var i = Et.indexOf(e),
										r = new Date(t[0], t[1], t[2]).getDay();
									if (i !== r) {
										m(n).weekdayMismatch = true;
										n._isValid = false;
										return false;
									}
								}
								return true;
							}
							function jn(e, t, n) {
								if (e) return Dn[e];
								else if (t) return 0;
								else {
									var i = parseInt(n, 10),
										r = i % 100,
										o = (i - r) / 100;
									return o * 60 + r;
								}
							}
							function En(e) {
								var t = xn.exec(Yn(e._i)),
									n;
								if (t) {
									n = Tn(t[4], t[3], t[2], t[5], t[6], t[7]);
									if (!Cn(t[1], n, e)) return;
									e._a = n;
									e._tzm = jn(t[8], t[9], t[10]);
									e._d = yt.apply(null, e._a);
									e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm);
									m(e).rfc2822 = true;
								} else e._isValid = false;
							}
							function Pn(e) {
								var t = Ln.exec(e._i);
								if (t !== null) {
									e._d = new Date(+t[1]);
									return;
								}
								Sn(e);
								if (e._isValid === false) delete e._isValid;
								else return;
								En(e);
								if (e._isValid === false) delete e._isValid;
								else return;
								if (e._strict) e._isValid = false;
								else c.createFromInputFallback(e);
							}
							function An(e, t, n) {
								if (e != null) return e;
								if (t != null) return t;
								return n;
							}
							function Hn(e) {
								var t = new Date(c.now());
								if (e._useUTC)
									return [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()];
								return [t.getFullYear(), t.getMonth(), t.getDate()];
							}
							function In(e) {
								var t,
									n,
									i = [],
									r,
									o,
									a;
								if (e._d) return;
								r = Hn(e);
								if (e._w && e._a[ze] == null && e._a[Be] == null) Rn(e);
								if (e._dayOfYear != null) {
									a = An(e._a[Fe], r[Fe]);
									if (e._dayOfYear > pt(a) || e._dayOfYear === 0)
										m(e)._overflowDayOfYear = true;
									n = yt(a, 0, e._dayOfYear);
									e._a[Be] = n.getUTCMonth();
									e._a[ze] = n.getUTCDate();
								}
								for (t = 0; t < 3 && e._a[t] == null; ++t)
									e._a[t] = i[t] = r[t];
								for (; t < 7; t++)
									e._a[t] = i[t] =
										e._a[t] == null ? (t === 2 ? 1 : 0) : e._a[t];
								if (
									e._a[Ve] === 24 &&
									e._a[Ue] === 0 &&
									e._a[Xe] === 0 &&
									e._a[Je] === 0
								) {
									e._nextDay = true;
									e._a[Ve] = 0;
								}
								e._d = (e._useUTC ? yt : vt).apply(null, i);
								o = e._useUTC ? e._d.getUTCDay() : e._d.getDay();
								if (e._tzm != null)
									e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm);
								if (e._nextDay) e._a[Ve] = 24;
								if (e._w && typeof e._w.d !== 'undefined' && e._w.d !== o)
									m(e).weekdayMismatch = true;
							}
							function Rn(e) {
								var t, n, i, r, o, a, s, l, u;
								t = e._w;
								if (t.GG != null || t.W != null || t.E != null) {
									o = 1;
									a = 4;
									n = An(t.GG, e._a[Fe], kt(Jn(), 1, 4).year);
									i = An(t.W, 1);
									r = An(t.E, 1);
									if (r < 1 || r > 7) l = true;
								} else {
									o = e._locale._week.dow;
									a = e._locale._week.doy;
									u = kt(Jn(), o, a);
									n = An(t.gg, e._a[Fe], u.year);
									i = An(t.w, u.week);
									if (t.d != null) {
										r = t.d;
										if (r < 0 || r > 6) l = true;
									} else if (t.e != null) {
										r = t.e + o;
										if (t.e < 0 || t.e > 6) l = true;
									} else r = o;
								}
								if (i < 1 || i > wt(n, o, a)) m(e)._overflowWeeks = true;
								else if (l != null) m(e)._overflowWeekday = true;
								else {
									s = bt(n, i, r, o, a);
									e._a[Fe] = s.year;
									e._dayOfYear = s.dayOfYear;
								}
							}
							function Nn(e) {
								if (e._f === c.ISO_8601) {
									Sn(e);
									return;
								}
								if (e._f === c.RFC_2822) {
									En(e);
									return;
								}
								e._a = [];
								m(e).empty = true;
								var t = '' + e._i,
									n,
									i,
									r,
									o,
									a,
									s = t.length,
									l = 0,
									u;
								r = z(e._f, e._locale).match(A) || [];
								for (n = 0; n < r.length; n++) {
									o = r[n];
									i = (t.match(Pe(o, e)) || [])[0];
									if (i) {
										a = t.substr(0, t.indexOf(i));
										if (a.length > 0) m(e).unusedInput.push(a);
										t = t.slice(t.indexOf(i) + i.length);
										l += i.length;
									}
									if (R[o]) {
										if (i) m(e).empty = false;
										else m(e).unusedTokens.push(o);
										We(o, i, e);
									} else if (e._strict && !i) m(e).unusedTokens.push(o);
								}
								m(e).charsLeftOver = s - l;
								if (t.length > 0) m(e).unusedInput.push(t);
								if (e._a[Ve] <= 12 && m(e).bigHour === true && e._a[Ve] > 0)
									m(e).bigHour = undefined;
								m(e).parsedDateParts = e._a.slice(0);
								m(e).meridiem = e._meridiem;
								e._a[Ve] = Wn(e._locale, e._a[Ve], e._meridiem);
								u = m(e).era;
								if (u !== null)
									e._a[Fe] = e._locale.erasConvertYear(u, e._a[Fe]);
								In(e);
								yn(e);
							}
							function Wn(e, t, n) {
								var i;
								if (n == null) return t;
								if (e.meridiemHour != null) return e.meridiemHour(t, n);
								else if (e.isPM != null) {
									i = e.isPM(n);
									if (i && t < 12) t += 12;
									if (!i && t === 12) t = 0;
									return t;
								} else return t;
							}
							function Fn(e) {
								var t,
									n,
									i,
									r,
									o,
									a,
									s = false;
								if (e._f.length === 0) {
									m(e).invalidFormat = true;
									e._d = new Date(NaN);
									return;
								}
								for (r = 0; r < e._f.length; r++) {
									o = 0;
									a = false;
									t = b({}, e);
									if (e._useUTC != null) t._useUTC = e._useUTC;
									t._f = e._f[r];
									Nn(t);
									if (_(t)) a = true;
									o += m(t).charsLeftOver;
									o += m(t).unusedTokens.length * 10;
									m(t).score = o;
									if (!s) {
										if (i == null || o < i || a) {
											i = o;
											n = t;
											if (a) s = true;
										}
									} else if (o < i) {
										i = o;
										n = t;
									}
								}
								h(e, n || t);
							}
							function Bn(e) {
								if (e._d) return;
								var t = ie(e._i),
									n = t.day === undefined ? t.date : t.day;
								e._a = i(
									[
										t.year,
										t.month,
										n,
										t.hour,
										t.minute,
										t.second,
										t.millisecond,
									],
									function (e) {
										return e && parseInt(e, 10);
									}
								);
								In(e);
							}
							function zn(e) {
								var t = new k(yn(Vn(e)));
								if (t._nextDay) {
									t.add(1, 'd');
									t._nextDay = undefined;
								}
								return t;
							}
							function Vn(e) {
								var t = e._i,
									n = e._f;
								e._locale = e._locale || _n(e._l);
								if (t === null || (n === undefined && t === ''))
									return v({ nullInput: true });
								if (typeof t === 'string') e._i = t = e._locale.preparse(t);
								if (w(t)) return new k(yn(t));
								else if (f(t)) e._d = t;
								else if (a(n)) Fn(e);
								else if (n) Nn(e);
								else Un(e);
								if (!_(e)) e._d = null;
								return e;
							}
							function Un(e) {
								var t = e._i;
								if (o(t)) e._d = new Date(c.now());
								else if (f(t)) e._d = new Date(t.valueOf());
								else if (typeof t === 'string') Pn(e);
								else if (a(t)) {
									e._a = i(t.slice(0), function (e) {
										return parseInt(e, 10);
									});
									In(e);
								} else if (s(t)) Bn(e);
								else if (d(t)) e._d = new Date(t);
								else c.createFromInputFallback(e);
							}
							function Xn(e, t, n, i, r) {
								var o = {};
								if (t === true || t === false) {
									i = t;
									t = undefined;
								}
								if (n === true || n === false) {
									i = n;
									n = undefined;
								}
								if ((s(e) && u(e)) || (a(e) && e.length === 0)) e = undefined;
								o._isAMomentObject = true;
								o._useUTC = o._isUTC = r;
								o._l = n;
								o._i = e;
								o._f = t;
								o._strict = i;
								return zn(o);
							}
							function Jn(e, t, n, i) {
								return Xn(e, t, n, i, false);
							}
							(c.createFromInputFallback = L(
								'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
									'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
									'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
								function (e) {
									e._d = new Date(e._i + (e._useUTC ? ' UTC' : ''));
								}
							)),
								(c.ISO_8601 = function () {}),
								(c.RFC_2822 = function () {});
							var qn = L(
									'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
									function () {
										var e = Jn.apply(null, arguments);
										if (this.isValid() && e.isValid())
											return e < this ? this : e;
										else return v();
									}
								),
								Kn = L(
									'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
									function () {
										var e = Jn.apply(null, arguments);
										if (this.isValid() && e.isValid())
											return e > this ? this : e;
										else return v();
									}
								);
							function Gn(e, t) {
								var n, i;
								if (t.length === 1 && a(t[0])) t = t[0];
								if (!t.length) return Jn();
								n = t[0];
								for (i = 1; i < t.length; ++i)
									if (!t[i].isValid() || t[i][e](n)) n = t[i];
								return n;
							}
							function Qn() {
								var e;
								return Gn('isBefore', [].slice.call(arguments, 0));
							}
							function $n() {
								var e;
								return Gn('isAfter', [].slice.call(arguments, 0));
							}
							var Zn = function () {
									return Date.now ? Date.now() : +new Date();
								},
								ei = [
									'year',
									'quarter',
									'month',
									'week',
									'day',
									'hour',
									'minute',
									'second',
									'millisecond',
								];
							function ti(e) {
								var t,
									n = false,
									i;
								for (t in e)
									if (
										l(e, t) &&
										!(Ge.call(ei, t) !== -1 && (e[t] == null || !isNaN(e[t])))
									)
										return false;
								for (i = 0; i < ei.length; ++i)
									if (e[ei[i]]) {
										if (n) return false;
										if (parseFloat(e[ei[i]]) !== ue(e[ei[i]])) n = true;
									}
								return true;
							}
							function ni() {
								return this._isValid;
							}
							function ii() {
								return Di(NaN);
							}
							function ri(e) {
								var t = ie(e),
									n = t.year || 0,
									i = t.quarter || 0,
									r = t.month || 0,
									o = t.week || t.isoWeek || 0,
									a = t.day || 0,
									s = t.hour || 0,
									l = t.minute || 0,
									u = t.second || 0,
									c = t.millisecond || 0;
								this._isValid = ti(t);
								this._milliseconds = +c + u * 1e3 + l * 6e4 + s * 1e3 * 60 * 60;
								this._days = +a + o * 7;
								this._months = +r + i * 3 + n * 12;
								this._data = {};
								this._locale = _n();
								this._bubble();
							}
							function oi(e) {
								return e instanceof ri;
							}
							function ai(e) {
								if (e < 0) return Math.round(-1 * e) * -1;
								else return Math.round(e);
							}
							function si(e, t, n) {
								var i = Math.min(e.length, t.length),
									r = Math.abs(e.length - t.length),
									o = 0,
									a;
								for (a = 0; a < i; a++)
									if ((n && e[a] !== t[a]) || (!n && ue(e[a]) !== ue(t[a])))
										o++;
								return o + r;
							}
							function li(e, n) {
								N(e, 0, 0, function () {
									var e = this.utcOffset(),
										t = '+';
									if (e < 0) {
										e = -e;
										t = '-';
									}
									return t + P(~~(e / 60), 2) + n + P(~~e % 60, 2);
								});
							}
							li('Z', ':'),
								li('ZZ', ''),
								Ee('Z', Oe),
								Ee('ZZ', Oe),
								Re(['Z', 'ZZ'], function (e, t, n) {
									n._useUTC = true;
									n._tzm = ci(Oe, e);
								});
							var ui = /([\+\-]|\d\d)/gi;
							function ci(e, t) {
								var n = (t || '').match(e),
									i,
									r,
									o;
								if (n === null) return null;
								i = n[n.length - 1] || [];
								r = (i + '').match(ui) || ['-', 0, 0];
								o = +(r[1] * 60) + ue(r[2]);
								return o === 0 ? 0 : r[0] === '+' ? o : -o;
							}
							function di(e, t) {
								var n, i;
								if (t._isUTC) {
									n = t.clone();
									i =
										(w(e) || f(e) ? e.valueOf() : Jn(e).valueOf()) -
										n.valueOf();
									n._d.setTime(n._d.valueOf() + i);
									c.updateOffset(n, false);
									return n;
								} else return Jn(e).local();
							}
							function fi(e) {
								return -Math.round(e._d.getTimezoneOffset());
							}
							function hi(e, t, n) {
								var i = this._offset || 0,
									r;
								if (!this.isValid()) return e != null ? this : NaN;
								if (e != null) {
									if (typeof e === 'string') {
										e = ci(Oe, e);
										if (e === null) return this;
									} else if (Math.abs(e) < 16 && !n) e = e * 60;
									if (!this._isUTC && t) r = fi(this);
									this._offset = e;
									this._isUTC = true;
									if (r != null) this.add(r, 'm');
									if (i !== e)
										if (!t || this._changeInProgress)
											Ci(this, Di(e - i, 'm'), 1, false);
										else if (!this._changeInProgress) {
											this._changeInProgress = true;
											c.updateOffset(this, true);
											this._changeInProgress = null;
										}
									return this;
								} else return this._isUTC ? i : fi(this);
							}
							function pi(e, t) {
								if (e != null) {
									if (typeof e !== 'string') e = -e;
									this.utcOffset(e, t);
									return this;
								} else return -this.utcOffset();
							}
							function mi(e) {
								return this.utcOffset(0, e);
							}
							function _i(e) {
								if (this._isUTC) {
									this.utcOffset(0, e);
									this._isUTC = false;
									if (e) this.subtract(fi(this), 'm');
								}
								return this;
							}
							function vi() {
								if (this._tzm != null) this.utcOffset(this._tzm, false, true);
								else if (typeof this._i === 'string') {
									var e = ci(Te, this._i);
									if (e != null) this.utcOffset(e);
									else this.utcOffset(0, true);
								}
								return this;
							}
							function yi(e) {
								if (!this.isValid()) return false;
								e = e ? Jn(e).utcOffset() : 0;
								return (this.utcOffset() - e) % 60 === 0;
							}
							function gi() {
								return (
									this.utcOffset() > this.clone().month(0).utcOffset() ||
									this.utcOffset() > this.clone().month(5).utcOffset()
								);
							}
							function bi() {
								if (!o(this._isDSTShifted)) return this._isDSTShifted;
								var e = {},
									t;
								b(e, this);
								e = Vn(e);
								if (e._a) {
									t = e._isUTC ? p(e._a) : Jn(e._a);
									this._isDSTShifted =
										this.isValid() && si(e._a, t.toArray()) > 0;
								} else this._isDSTShifted = false;
								return this._isDSTShifted;
							}
							function ki() {
								return this.isValid() ? !this._isUTC : false;
							}
							function wi() {
								return this.isValid() ? this._isUTC : false;
							}
							function Mi() {
								return this.isValid()
									? this._isUTC && this._offset === 0
									: false;
							}
							c.updateOffset = function () {};
							var Li = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
								xi =
									/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
							function Di(e, t) {
								var n = e,
									i = null,
									r,
									o,
									a;
								if (oi(e))
									n = { ms: e._milliseconds, d: e._days, M: e._months };
								else if (d(e) || !isNaN(+e)) {
									n = {};
									if (t) n[t] = +e;
									else n.milliseconds = +e;
								} else if ((i = Li.exec(e))) {
									r = i[1] === '-' ? -1 : 1;
									n = {
										y: 0,
										d: ue(i[ze]) * r,
										h: ue(i[Ve]) * r,
										m: ue(i[Ue]) * r,
										s: ue(i[Xe]) * r,
										ms: ue(ai(i[Je] * 1e3)) * r,
									};
								} else if ((i = xi.exec(e))) {
									r = i[1] === '-' ? -1 : 1;
									n = {
										y: Si(i[2], r),
										M: Si(i[3], r),
										w: Si(i[4], r),
										d: Si(i[5], r),
										h: Si(i[6], r),
										m: Si(i[7], r),
										s: Si(i[8], r),
									};
								} else if (n == null) n = {};
								else if (typeof n === 'object' && ('from' in n || 'to' in n)) {
									a = Oi(Jn(n.from), Jn(n.to));
									n = {};
									n.ms = a.milliseconds;
									n.M = a.months;
								}
								o = new ri(n);
								if (oi(e) && l(e, '_locale')) o._locale = e._locale;
								if (oi(e) && l(e, '_isValid')) o._isValid = e._isValid;
								return o;
							}
							function Si(e, t) {
								var n = e && parseFloat(e.replace(',', '.'));
								return (isNaN(n) ? 0 : n) * t;
							}
							function Ti(e, t) {
								var n = {};
								n.months = t.month() - e.month() + (t.year() - e.year()) * 12;
								if (e.clone().add(n.months, 'M').isAfter(t)) --n.months;
								n.milliseconds = +t - +e.clone().add(n.months, 'M');
								return n;
							}
							function Oi(e, t) {
								var n;
								if (!(e.isValid() && t.isValid()))
									return { milliseconds: 0, months: 0 };
								t = di(t, e);
								if (e.isBefore(t)) n = Ti(e, t);
								else {
									n = Ti(t, e);
									n.milliseconds = -n.milliseconds;
									n.months = -n.months;
								}
								return n;
							}
							function Yi(r, o) {
								return function (e, t) {
									var n, i;
									if (t !== null && !isNaN(+t)) {
										S(
											o,
											'moment().' +
												o +
												'(period, number) is deprecated. Please use moment().' +
												o +
												'(number, period). ' +
												'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
										);
										i = e;
										e = t;
										t = i;
									}
									n = Di(e, t);
									Ci(this, n, r);
									return this;
								};
							}
							function Ci(e, t, n, i) {
								var r = t._milliseconds,
									o = ai(t._days),
									a = ai(t._months);
								if (!e.isValid()) return;
								i = i == null ? true : i;
								if (a) lt(e, de(e, 'Month') + a * n);
								if (o) fe(e, 'Date', de(e, 'Date') + o * n);
								if (r) e._d.setTime(e._d.valueOf() + r * n);
								if (i) c.updateOffset(e, o || a);
							}
							(Di.fn = ri.prototype), (Di.invalid = ii);
							var ji = Yi(1, 'add'),
								Ei = Yi(-1, 'subtract');
							function Pi(e) {
								return typeof e === 'string' || e instanceof String;
							}
							function Ai(e) {
								return (
									w(e) ||
									f(e) ||
									Pi(e) ||
									d(e) ||
									Ii(e) ||
									Hi(e) ||
									e === null ||
									e === undefined
								);
							}
							function Hi(e) {
								var t = s(e) && !u(e),
									n = false,
									i = [
										'years',
										'year',
										'y',
										'months',
										'month',
										'M',
										'days',
										'day',
										'd',
										'dates',
										'date',
										'D',
										'hours',
										'hour',
										'h',
										'minutes',
										'minute',
										'm',
										'seconds',
										'second',
										's',
										'milliseconds',
										'millisecond',
										'ms',
									],
									r,
									o;
								for (r = 0; r < i.length; r += 1) {
									o = i[r];
									n = n || l(e, o);
								}
								return t && n;
							}
							function Ii(t) {
								var e = a(t),
									n = false;
								if (e)
									n =
										t.filter(function (e) {
											return !d(e) && Pi(t);
										}).length === 0;
								return e && n;
							}
							function Ri(e) {
								var t = s(e) && !u(e),
									n = false,
									i = [
										'sameDay',
										'nextDay',
										'lastDay',
										'nextWeek',
										'lastWeek',
										'sameElse',
									],
									r,
									o;
								for (r = 0; r < i.length; r += 1) {
									o = i[r];
									n = n || l(e, o);
								}
								return t && n;
							}
							function Ni(e, t) {
								var t = e.diff(t, 'days', !0);
								return t < -6
									? 'sameElse'
									: t < -1
									? 'lastWeek'
									: t < 0
									? 'lastDay'
									: t < 1
									? 'sameDay'
									: t < 2
									? 'nextDay'
									: t < 7
									? 'nextWeek'
									: 'sameElse';
							}
							function Wi(e, t) {
								if (arguments.length === 1)
									if (!arguments[0]) {
										e = undefined;
										t = undefined;
									} else if (Ai(arguments[0])) {
										e = arguments[0];
										t = undefined;
									} else if (Ri(arguments[0])) {
										t = arguments[0];
										e = undefined;
									}
								var n = e || Jn(),
									i = di(n, this).startOf('day'),
									r = c.calendarFormat(this, i) || 'sameElse',
									o = t && (T(t[r]) ? t[r].call(this, n) : t[r]);
								return this.format(
									o || this.localeData().calendar(r, this, Jn(n))
								);
							}
							function Fi() {
								return new k(this);
							}
							function Bi(e, t) {
								var n = w(e) ? e : Jn(e);
								if (!(this.isValid() && n.isValid())) return false;
								t = ne(t) || 'millisecond';
								if (t === 'millisecond') return this.valueOf() > n.valueOf();
								else return n.valueOf() < this.clone().startOf(t).valueOf();
							}
							function zi(e, t) {
								var n = w(e) ? e : Jn(e);
								if (!(this.isValid() && n.isValid())) return false;
								t = ne(t) || 'millisecond';
								if (t === 'millisecond') return this.valueOf() < n.valueOf();
								else return this.clone().endOf(t).valueOf() < n.valueOf();
							}
							function Vi(e, t, n, i) {
								var r = w(e) ? e : Jn(e),
									o = w(t) ? t : Jn(t);
								if (!(this.isValid() && r.isValid() && o.isValid()))
									return false;
								i = i || '()';
								return (
									(i[0] === '(' ? this.isAfter(r, n) : !this.isBefore(r, n)) &&
									(i[1] === ')' ? this.isBefore(o, n) : !this.isAfter(o, n))
								);
							}
							function Ui(e, t) {
								var n = w(e) ? e : Jn(e),
									i;
								if (!(this.isValid() && n.isValid())) return false;
								t = ne(t) || 'millisecond';
								if (t === 'millisecond') return this.valueOf() === n.valueOf();
								else {
									i = n.valueOf();
									return (
										this.clone().startOf(t).valueOf() <= i &&
										i <= this.clone().endOf(t).valueOf()
									);
								}
							}
							function Xi(e, t) {
								return this.isSame(e, t) || this.isAfter(e, t);
							}
							function Ji(e, t) {
								return this.isSame(e, t) || this.isBefore(e, t);
							}
							function qi(e, t, n) {
								var i, r, o;
								if (!this.isValid()) return NaN;
								i = di(e, this);
								if (!i.isValid()) return NaN;
								r = (i.utcOffset() - this.utcOffset()) * 6e4;
								t = ne(t);
								switch (t) {
									case 'year':
										o = Ki(this, i) / 12;
										break;
									case 'month':
										o = Ki(this, i);
										break;
									case 'quarter':
										o = Ki(this, i) / 3;
										break;
									case 'second':
										o = (this - i) / 1e3;
										break;
									case 'minute':
										o = (this - i) / 6e4;
										break;
									case 'hour':
										o = (this - i) / 36e5;
										break;
									case 'day':
										o = (this - i - r) / 864e5;
										break;
									case 'week':
										o = (this - i - r) / 6048e5;
										break;
									default:
										o = this - i;
								}
								return n ? o : le(o);
							}
							function Ki(e, t) {
								if (e.date() < t.date()) return -Ki(t, e);
								var n = (t.year() - e.year()) * 12 + (t.month() - e.month()),
									i = e.clone().add(n, 'months'),
									r,
									o;
								if (t - i < 0) {
									r = e.clone().add(n - 1, 'months');
									o = (t - i) / (i - r);
								} else {
									r = e.clone().add(n + 1, 'months');
									o = (t - i) / (r - i);
								}
								return -(n + o) || 0;
							}
							function Gi() {
								return this.clone()
									.locale('en')
									.format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
							}
							function Qi(e) {
								if (!this.isValid()) return null;
								var t = e !== true,
									n = t ? this.clone().utc() : this;
								if (n.year() < 0 || n.year() > 9999)
									return B(
										n,
										t
											? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
											: 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
									);
								if (T(Date.prototype.toISOString))
									if (t) return this.toDate().toISOString();
									else
										return new Date(
											this.valueOf() + this.utcOffset() * 60 * 1e3
										)
											.toISOString()
											.replace('Z', B(n, 'Z'));
								return B(
									n,
									t
										? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
										: 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
								);
							}
							function $i() {
								if (!this.isValid())
									return 'moment.invalid(/* ' + this._i + ' */)';
								var e = 'moment',
									t = '',
									n,
									i,
									r,
									o;
								if (!this.isLocal()) {
									e =
										this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
									t = 'Z';
								}
								n = '[' + e + '("]';
								i = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
								r = '-MM-DD[T]HH:mm:ss.SSS';
								o = t + '[")]';
								return this.format(n + i + r + o);
							}
							function Zi(e) {
								if (!e) e = this.isUtc() ? c.defaultFormatUtc : c.defaultFormat;
								var t = B(this, e);
								return this.localeData().postformat(t);
							}
							function er(e, t) {
								if (
									this.isValid() &&
									((w(e) && e.isValid()) || Jn(e).isValid())
								)
									return Di({ to: this, from: e })
										.locale(this.locale())
										.humanize(!t);
								else return this.localeData().invalidDate();
							}
							function tr(e) {
								return this.from(Jn(), e);
							}
							function nr(e, t) {
								if (
									this.isValid() &&
									((w(e) && e.isValid()) || Jn(e).isValid())
								)
									return Di({ from: this, to: e })
										.locale(this.locale())
										.humanize(!t);
								else return this.localeData().invalidDate();
							}
							function ir(e) {
								return this.to(Jn(), e);
							}
							function rr(e) {
								var t;
								if (e === undefined) return this._locale._abbr;
								else {
									t = _n(e);
									if (t != null) this._locale = t;
									return this;
								}
							}
							(c.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ'),
								(c.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]');
							var or = L(
								'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
								function (e) {
									if (e === undefined) return this.localeData();
									else return this.locale(e);
								}
							);
							function ar() {
								return this._locale;
							}
							var sr = 1e3,
								lr = 60 * sr,
								ur = 60 * lr,
								cr = (365 * 400 + 97) * 24 * ur;
							function dr(e, t) {
								return ((e % t) + t) % t;
							}
							function fr(e, t, n) {
								if (e < 100 && e >= 0) return new Date(e + 400, t, n) - cr;
								else return new Date(e, t, n).valueOf();
							}
							function hr(e, t, n) {
								if (e < 100 && e >= 0) return Date.UTC(e + 400, t, n) - cr;
								else return Date.UTC(e, t, n);
							}
							function pr(e) {
								var t, n;
								e = ne(e);
								if (e === undefined || e === 'millisecond' || !this.isValid())
									return this;
								n = this._isUTC ? hr : fr;
								switch (e) {
									case 'year':
										t = n(this.year(), 0, 1);
										break;
									case 'quarter':
										t = n(this.year(), this.month() - (this.month() % 3), 1);
										break;
									case 'month':
										t = n(this.year(), this.month(), 1);
										break;
									case 'week':
										t = n(
											this.year(),
											this.month(),
											this.date() - this.weekday()
										);
										break;
									case 'isoWeek':
										t = n(
											this.year(),
											this.month(),
											this.date() - (this.isoWeekday() - 1)
										);
										break;
									case 'day':
									case 'date':
										t = n(this.year(), this.month(), this.date());
										break;
									case 'hour':
										t = this._d.valueOf();
										t -= dr(t + (this._isUTC ? 0 : this.utcOffset() * lr), ur);
										break;
									case 'minute':
										t = this._d.valueOf();
										t -= dr(t, lr);
										break;
									case 'second':
										t = this._d.valueOf();
										t -= dr(t, sr);
										break;
								}
								this._d.setTime(t);
								c.updateOffset(this, true);
								return this;
							}
							function mr(e) {
								var t, n;
								e = ne(e);
								if (e === undefined || e === 'millisecond' || !this.isValid())
									return this;
								n = this._isUTC ? hr : fr;
								switch (e) {
									case 'year':
										t = n(this.year() + 1, 0, 1) - 1;
										break;
									case 'quarter':
										t =
											n(this.year(), this.month() - (this.month() % 3) + 3, 1) -
											1;
										break;
									case 'month':
										t = n(this.year(), this.month() + 1, 1) - 1;
										break;
									case 'week':
										t =
											n(
												this.year(),
												this.month(),
												this.date() - this.weekday() + 7
											) - 1;
										break;
									case 'isoWeek':
										t =
											n(
												this.year(),
												this.month(),
												this.date() - (this.isoWeekday() - 1) + 7
											) - 1;
										break;
									case 'day':
									case 'date':
										t = n(this.year(), this.month(), this.date() + 1) - 1;
										break;
									case 'hour':
										t = this._d.valueOf();
										t +=
											ur -
											dr(t + (this._isUTC ? 0 : this.utcOffset() * lr), ur) -
											1;
										break;
									case 'minute':
										t = this._d.valueOf();
										t += lr - dr(t, lr) - 1;
										break;
									case 'second':
										t = this._d.valueOf();
										t += sr - dr(t, sr) - 1;
										break;
								}
								this._d.setTime(t);
								c.updateOffset(this, true);
								return this;
							}
							function _r() {
								return this._d.valueOf() - (this._offset || 0) * 6e4;
							}
							function vr() {
								return Math.floor(this.valueOf() / 1e3);
							}
							function yr() {
								return new Date(this.valueOf());
							}
							function gr() {
								var e = this;
								return [
									e.year(),
									e.month(),
									e.date(),
									e.hour(),
									e.minute(),
									e.second(),
									e.millisecond(),
								];
							}
							function br() {
								var e = this;
								return {
									years: e.year(),
									months: e.month(),
									date: e.date(),
									hours: e.hours(),
									minutes: e.minutes(),
									seconds: e.seconds(),
									milliseconds: e.milliseconds(),
								};
							}
							function kr() {
								return this.isValid() ? this.toISOString() : null;
							}
							function wr() {
								return _(this);
							}
							function Mr() {
								return h({}, m(this));
							}
							function Lr() {
								return m(this).overflow;
							}
							function xr() {
								return {
									input: this._i,
									format: this._f,
									locale: this._locale,
									isUTC: this._isUTC,
									strict: this._strict,
								};
							}
							function Dr(e, t) {
								var n,
									i,
									r,
									o = this._eras || _n('en')._eras;
								for (n = 0, i = o.length; n < i; ++n) {
									switch (typeof o[n].since) {
										case 'string':
											r = c(o[n].since).startOf('day');
											o[n].since = r.valueOf();
											break;
									}
									switch (typeof o[n].until) {
										case 'undefined':
											o[n].until = +Infinity;
											break;
										case 'string':
											r = c(o[n].until).startOf('day').valueOf();
											o[n].until = r.valueOf();
											break;
									}
								}
								return o;
							}
							function Sr(e, t, n) {
								var i,
									r,
									o = this.eras(),
									a,
									s,
									l;
								e = e.toUpperCase();
								for (i = 0, r = o.length; i < r; ++i) {
									a = o[i].name.toUpperCase();
									s = o[i].abbr.toUpperCase();
									l = o[i].narrow.toUpperCase();
									if (n)
										switch (t) {
											case 'N':
											case 'NN':
											case 'NNN':
												if (s === e) return o[i];
												break;
											case 'NNNN':
												if (a === e) return o[i];
												break;
											case 'NNNNN':
												if (l === e) return o[i];
												break;
										}
									else if ([a, s, l].indexOf(e) >= 0) return o[i];
								}
							}
							function Tr(e, t) {
								var n = e.since <= e.until ? +1 : -1;
								if (t === undefined) return c(e.since).year();
								else return c(e.since).year() + (t - e.offset) * n;
							}
							function Or() {
								var e,
									t,
									n,
									i = this.localeData().eras();
								for (e = 0, t = i.length; e < t; ++e) {
									n = this.clone().startOf('day').valueOf();
									if (i[e].since <= n && n <= i[e].until) return i[e].name;
									if (i[e].until <= n && n <= i[e].since) return i[e].name;
								}
								return '';
							}
							function Yr() {
								var e,
									t,
									n,
									i = this.localeData().eras();
								for (e = 0, t = i.length; e < t; ++e) {
									n = this.clone().startOf('day').valueOf();
									if (i[e].since <= n && n <= i[e].until) return i[e].narrow;
									if (i[e].until <= n && n <= i[e].since) return i[e].narrow;
								}
								return '';
							}
							function Cr() {
								var e,
									t,
									n,
									i = this.localeData().eras();
								for (e = 0, t = i.length; e < t; ++e) {
									n = this.clone().startOf('day').valueOf();
									if (i[e].since <= n && n <= i[e].until) return i[e].abbr;
									if (i[e].until <= n && n <= i[e].since) return i[e].abbr;
								}
								return '';
							}
							function jr() {
								var e,
									t,
									n,
									i,
									r = this.localeData().eras();
								for (e = 0, t = r.length; e < t; ++e) {
									n = r[e].since <= r[e].until ? +1 : -1;
									i = this.clone().startOf('day').valueOf();
									if (
										(r[e].since <= i && i <= r[e].until) ||
										(r[e].until <= i && i <= r[e].since)
									)
										return (
											(this.year() - c(r[e].since).year()) * n + r[e].offset
										);
								}
								return this.year();
							}
							function Er(e) {
								if (!l(this, '_erasNameRegex')) Wr.call(this);
								return e ? this._erasNameRegex : this._erasRegex;
							}
							function Pr(e) {
								if (!l(this, '_erasAbbrRegex')) Wr.call(this);
								return e ? this._erasAbbrRegex : this._erasRegex;
							}
							function Ar(e) {
								if (!l(this, '_erasNarrowRegex')) Wr.call(this);
								return e ? this._erasNarrowRegex : this._erasRegex;
							}
							function Hr(e, t) {
								return t.erasAbbrRegex(e);
							}
							function Ir(e, t) {
								return t.erasNameRegex(e);
							}
							function Rr(e, t) {
								return t.erasNarrowRegex(e);
							}
							function Nr(e, t) {
								return t._eraYearOrdinalRegex || De;
							}
							function Wr() {
								var e = [],
									t = [],
									n = [],
									i = [],
									r,
									o,
									a = this.eras();
								for (r = 0, o = a.length; r < o; ++r) {
									t.push(He(a[r].name));
									e.push(He(a[r].abbr));
									n.push(He(a[r].narrow));
									i.push(He(a[r].name));
									i.push(He(a[r].abbr));
									i.push(He(a[r].narrow));
								}
								this._erasRegex = new RegExp('^(' + i.join('|') + ')', 'i');
								this._erasNameRegex = new RegExp('^(' + t.join('|') + ')', 'i');
								this._erasAbbrRegex = new RegExp('^(' + e.join('|') + ')', 'i');
								this._erasNarrowRegex = new RegExp(
									'^(' + n.join('|') + ')',
									'i'
								);
							}
							function Fr(e, t) {
								N(0, [e, e.length], 0, t);
							}
							function Br(e) {
								return qr.call(
									this,
									e,
									this.week(),
									this.weekday(),
									this.localeData()._week.dow,
									this.localeData()._week.doy
								);
							}
							function zr(e) {
								return qr.call(
									this,
									e,
									this.isoWeek(),
									this.isoWeekday(),
									1,
									4
								);
							}
							function Vr() {
								return wt(this.year(), 1, 4);
							}
							function Ur() {
								return wt(this.isoWeekYear(), 1, 4);
							}
							function Xr() {
								var e = this.localeData()._week;
								return wt(this.year(), e.dow, e.doy);
							}
							function Jr() {
								var e = this.localeData()._week;
								return wt(this.weekYear(), e.dow, e.doy);
							}
							function qr(e, t, n, i, r) {
								var o;
								if (e == null) return kt(this, i, r).year;
								else {
									o = wt(e, i, r);
									if (t > o) t = o;
									return Kr.call(this, e, t, n, i, r);
								}
							}
							function Kr(e, t, n, i, r) {
								var o = bt(e, t, n, i, r),
									a = yt(o.year, 0, o.dayOfYear);
								this.year(a.getUTCFullYear());
								this.month(a.getUTCMonth());
								this.date(a.getUTCDate());
								return this;
							}
							function Gr(e) {
								return e == null
									? Math.ceil((this.month() + 1) / 3)
									: this.month((e - 1) * 3 + (this.month() % 3));
							}
							N('N', 0, 0, 'eraAbbr'),
								N('NN', 0, 0, 'eraAbbr'),
								N('NNN', 0, 0, 'eraAbbr'),
								N('NNNN', 0, 0, 'eraName'),
								N('NNNNN', 0, 0, 'eraNarrow'),
								N('y', ['y', 1], 'yo', 'eraYear'),
								N('y', ['yy', 2], 0, 'eraYear'),
								N('y', ['yyy', 3], 0, 'eraYear'),
								N('y', ['yyyy', 4], 0, 'eraYear'),
								Ee('N', Hr),
								Ee('NN', Hr),
								Ee('NNN', Hr),
								Ee('NNNN', Ir),
								Ee('NNNNN', Rr),
								Re(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (e, t, n, i) {
									var r = n._locale.erasParse(e, i, n._strict);
									if (r) m(n).era = r;
									else m(n).invalidEra = e;
								}),
								Ee('y', De),
								Ee('yy', De),
								Ee('yyy', De),
								Ee('yyyy', De),
								Ee('yo', Nr),
								Re(['y', 'yy', 'yyy', 'yyyy'], Fe),
								Re(['yo'], function (e, t, n, i) {
									var r;
									if (n._locale._eraYearOrdinalRegex)
										r = e.match(n._locale._eraYearOrdinalRegex);
									if (n._locale.eraYearOrdinalParse)
										t[Fe] = n._locale.eraYearOrdinalParse(e, r);
									else t[Fe] = parseInt(e, 10);
								}),
								N(0, ['gg', 2], 0, function () {
									return this.weekYear() % 100;
								}),
								N(0, ['GG', 2], 0, function () {
									return this.isoWeekYear() % 100;
								}),
								Fr('gggg', 'weekYear'),
								Fr('ggggg', 'weekYear'),
								Fr('GGGG', 'isoWeekYear'),
								Fr('GGGGG', 'isoWeekYear'),
								te('weekYear', 'gg'),
								te('isoWeekYear', 'GG'),
								oe('weekYear', 1),
								oe('isoWeekYear', 1),
								Ee('G', Se),
								Ee('g', Se),
								Ee('GG', be, _e),
								Ee('gg', be, _e),
								Ee('GGGG', Le, ye),
								Ee('gggg', Le, ye),
								Ee('GGGGG', xe, ge),
								Ee('ggggg', xe, ge),
								Ne(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (e, t, n, i) {
									t[i.substr(0, 2)] = ue(e);
								}),
								Ne(['gg', 'GG'], function (e, t, n, i) {
									t[i] = c.parseTwoDigitYear(e);
								}),
								N('Q', 0, 'Qo', 'quarter'),
								te('quarter', 'Q'),
								oe('quarter', 7),
								Ee('Q', me),
								Re('Q', function (e, t) {
									t[Be] = (ue(e) - 1) * 3;
								}),
								N('D', ['DD', 2], 'Do', 'date'),
								te('date', 'D'),
								oe('date', 9),
								Ee('D', be),
								Ee('DD', be, _e),
								Ee('Do', function (e, t) {
									return e
										? t._dayOfMonthOrdinalParse || t._ordinalParse
										: t._dayOfMonthOrdinalParseLenient;
								}),
								Re(['D', 'DD'], ze),
								Re('Do', function (e, t) {
									t[ze] = ue(e.match(be)[0]);
								});
							var Qr = ce('Date', true);
							function $r(e) {
								var t =
									Math.round(
										(this.clone().startOf('day') -
											this.clone().startOf('year')) /
											864e5
									) + 1;
								return e == null ? t : this.add(e - t, 'd');
							}
							N('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'),
								te('dayOfYear', 'DDD'),
								oe('dayOfYear', 4),
								Ee('DDD', Me),
								Ee('DDDD', ve),
								Re(['DDD', 'DDDD'], function (e, t, n) {
									n._dayOfYear = ue(e);
								}),
								N('m', ['mm', 2], 0, 'minute'),
								te('minute', 'm'),
								oe('minute', 14),
								Ee('m', be),
								Ee('mm', be, _e),
								Re(['m', 'mm'], Ue);
							var Zr = ce('Minutes', false);
							N('s', ['ss', 2], 0, 'second'),
								te('second', 's'),
								oe('second', 15),
								Ee('s', be),
								Ee('ss', be, _e),
								Re(['s', 'ss'], Xe);
							var eo = ce('Seconds', false),
								to,
								no;
							for (
								N('S', 0, 0, function () {
									return ~~(this.millisecond() / 100);
								}),
									N(0, ['SS', 2], 0, function () {
										return ~~(this.millisecond() / 10);
									}),
									N(0, ['SSS', 3], 0, 'millisecond'),
									N(0, ['SSSS', 4], 0, function () {
										return this.millisecond() * 10;
									}),
									N(0, ['SSSSS', 5], 0, function () {
										return this.millisecond() * 100;
									}),
									N(0, ['SSSSSS', 6], 0, function () {
										return this.millisecond() * 1e3;
									}),
									N(0, ['SSSSSSS', 7], 0, function () {
										return this.millisecond() * 1e4;
									}),
									N(0, ['SSSSSSSS', 8], 0, function () {
										return this.millisecond() * 1e5;
									}),
									N(0, ['SSSSSSSSS', 9], 0, function () {
										return this.millisecond() * 1e6;
									}),
									te('millisecond', 'ms'),
									oe('millisecond', 16),
									Ee('S', Me, me),
									Ee('SS', Me, _e),
									Ee('SSS', Me, ve),
									to = 'SSSS';
								to.length <= 9;
								to += 'S'
							)
								Ee(to, De);
							function io(e, t) {
								t[Je] = ue(('0.' + e) * 1e3);
							}
							for (to = 'S'; to.length <= 9; to += 'S') Re(to, io);
							function ro() {
								return this._isUTC ? 'UTC' : '';
							}
							function oo() {
								return this._isUTC ? 'Coordinated Universal Time' : '';
							}
							(no = ce('Milliseconds', false)),
								N('z', 0, 0, 'zoneAbbr'),
								N('zz', 0, 0, 'zoneName');
							var ao = k.prototype;
							if (
								((ao.add = ji),
								(ao.calendar = Wi),
								(ao.clone = Fi),
								(ao.diff = qi),
								(ao.endOf = mr),
								(ao.format = Zi),
								(ao.from = er),
								(ao.fromNow = tr),
								(ao.to = nr),
								(ao.toNow = ir),
								(ao.get = he),
								(ao.invalidAt = Lr),
								(ao.isAfter = Bi),
								(ao.isBefore = zi),
								(ao.isBetween = Vi),
								(ao.isSame = Ui),
								(ao.isSameOrAfter = Xi),
								(ao.isSameOrBefore = Ji),
								(ao.isValid = wr),
								(ao.lang = or),
								(ao.locale = rr),
								(ao.localeData = ar),
								(ao.max = Kn),
								(ao.min = qn),
								(ao.parsingFlags = Mr),
								(ao.set = pe),
								(ao.startOf = pr),
								(ao.subtract = Ei),
								(ao.toArray = gr),
								(ao.toObject = br),
								(ao.toDate = yr),
								(ao.toISOString = Qi),
								(ao.inspect = $i),
								typeof Symbol !== 'undefined' && Symbol.for != null)
							)
								ao[Symbol.for('nodejs.util.inspect.custom')] = function () {
									return 'Moment<' + this.format() + '>';
								};
							function so(e) {
								return Jn(1e3 * e);
							}
							function lo() {
								return Jn.apply(null, arguments).parseZone();
							}
							function uo(e) {
								return e;
							}
							(ao.toJSON = kr),
								(ao.toString = Gi),
								(ao.unix = vr),
								(ao.valueOf = _r),
								(ao.creationData = xr),
								(ao.eraName = Or),
								(ao.eraNarrow = Yr),
								(ao.eraAbbr = Cr),
								(ao.eraYear = jr),
								(ao.year = mt),
								(ao.isLeapYear = _t),
								(ao.weekYear = Br),
								(ao.isoWeekYear = zr),
								(ao.quarter = ao.quarters = Gr),
								(ao.month = ut),
								(ao.daysInMonth = ct),
								(ao.week = ao.weeks = St),
								(ao.isoWeek = ao.isoWeeks = Tt),
								(ao.weeksInYear = Xr),
								(ao.weeksInWeekYear = Jr),
								(ao.isoWeeksInYear = Vr),
								(ao.isoWeeksInISOWeekYear = Ur),
								(ao.date = Qr),
								(ao.day = ao.days = zt),
								(ao.weekday = Vt),
								(ao.isoWeekday = Ut),
								(ao.dayOfYear = $r),
								(ao.hour = ao.hours = nn),
								(ao.minute = ao.minutes = Zr),
								(ao.second = ao.seconds = eo),
								(ao.millisecond = ao.milliseconds = no),
								(ao.utcOffset = hi),
								(ao.utc = mi),
								(ao.local = _i),
								(ao.parseZone = vi),
								(ao.hasAlignedHourOffset = yi),
								(ao.isDST = gi),
								(ao.isLocal = ki),
								(ao.isUtcOffset = wi),
								(ao.isUtc = Mi),
								(ao.isUTC = Mi),
								(ao.zoneAbbr = ro),
								(ao.zoneName = oo),
								(ao.dates = L(
									'dates accessor is deprecated. Use date instead.',
									Qr
								)),
								(ao.months = L(
									'months accessor is deprecated. Use month instead',
									ut
								)),
								(ao.years = L(
									'years accessor is deprecated. Use year instead',
									mt
								)),
								(ao.zone = L(
									'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
									pi
								)),
								(ao.isDSTShifted = L(
									'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
									bi
								));
							var co = C.prototype;
							function fo(e, t, n, i) {
								var r = _n(),
									o = p().set(i, t);
								return r[n](o, e);
							}
							function ho(e, t, n) {
								if (d(e)) {
									t = e;
									e = undefined;
								}
								e = e || '';
								if (t != null) return fo(e, t, n, 'month');
								var i,
									r = [];
								for (i = 0; i < 12; i++) r[i] = fo(e, i, n, 'month');
								return r;
							}
							function po(e, t, n, i) {
								if (typeof e === 'boolean') {
									if (d(t)) {
										n = t;
										t = undefined;
									}
									t = t || '';
								} else {
									t = e;
									n = t;
									e = false;
									if (d(t)) {
										n = t;
										t = undefined;
									}
									t = t || '';
								}
								var r = _n(),
									o = e ? r._week.dow : 0,
									a,
									s = [];
								if (n != null) return fo(t, (n + o) % 7, i, 'day');
								for (a = 0; a < 7; a++) s[a] = fo(t, (a + o) % 7, i, 'day');
								return s;
							}
							function mo(e, t) {
								return ho(e, t, 'months');
							}
							function _o(e, t) {
								return ho(e, t, 'monthsShort');
							}
							function vo(e, t, n) {
								return po(e, t, n, 'weekdays');
							}
							function yo(e, t, n) {
								return po(e, t, n, 'weekdaysShort');
							}
							function go(e, t, n) {
								return po(e, t, n, 'weekdaysMin');
							}
							(co.calendar = E),
								(co.longDateFormat = U),
								(co.invalidDate = J),
								(co.ordinal = G),
								(co.preparse = uo),
								(co.postformat = uo),
								(co.relativeTime = $),
								(co.pastFuture = Z),
								(co.set = O),
								(co.eras = Dr),
								(co.erasParse = Sr),
								(co.erasConvertYear = Tr),
								(co.erasAbbrRegex = Pr),
								(co.erasNameRegex = Er),
								(co.erasNarrowRegex = Ar),
								(co.months = rt),
								(co.monthsShort = ot),
								(co.monthsParse = st),
								(co.monthsRegex = ft),
								(co.monthsShortRegex = dt),
								(co.week = Mt),
								(co.firstDayOfYear = Dt),
								(co.firstDayOfWeek = xt),
								(co.weekdays = Rt),
								(co.weekdaysMin = Wt),
								(co.weekdaysShort = Nt),
								(co.weekdaysParse = Bt),
								(co.weekdaysRegex = Xt),
								(co.weekdaysShortRegex = Jt),
								(co.weekdaysMinRegex = qt),
								(co.isPM = en),
								(co.meridiem = rn),
								hn('en', {
									eras: [
										{
											since: '0001-01-01',
											until: +Infinity,
											offset: 1,
											name: 'Anno Domini',
											narrow: 'AD',
											abbr: 'AD',
										},
										{
											since: '0000-12-31',
											until: -Infinity,
											offset: 1,
											name: 'Before Christ',
											narrow: 'BC',
											abbr: 'BC',
										},
									],
									dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
									ordinal: function (e) {
										var t = e % 10,
											n =
												ue((e % 100) / 10) === 1
													? 'th'
													: t === 1
													? 'st'
													: t === 2
													? 'nd'
													: t === 3
													? 'rd'
													: 'th';
										return e + n;
									},
								}),
								(c.lang = L(
									'moment.lang is deprecated. Use moment.locale instead.',
									hn
								)),
								(c.langData = L(
									'moment.langData is deprecated. Use moment.localeData instead.',
									_n
								));
							var bo = Math.abs;
							function ko() {
								var e = this._data;
								return (
									(this._milliseconds = bo(this._milliseconds)),
									(this._days = bo(this._days)),
									(this._months = bo(this._months)),
									(e.milliseconds = bo(e.milliseconds)),
									(e.seconds = bo(e.seconds)),
									(e.minutes = bo(e.minutes)),
									(e.hours = bo(e.hours)),
									(e.months = bo(e.months)),
									(e.years = bo(e.years)),
									this
								);
							}
							function wo(e, t, n, i) {
								var r = Di(t, n);
								e._milliseconds += i * r._milliseconds;
								e._days += i * r._days;
								e._months += i * r._months;
								return e._bubble();
							}
							function Mo(e, t) {
								return wo(this, e, t, 1);
							}
							function Lo(e, t) {
								return wo(this, e, t, -1);
							}
							function xo(e) {
								if (e < 0) return Math.floor(e);
								else return Math.ceil(e);
							}
							function Do() {
								var e = this._milliseconds,
									t = this._days,
									n = this._months,
									i = this._data;
								if (
									!(
										(0 <= e && 0 <= t && 0 <= n) ||
										(e <= 0 && t <= 0 && n <= 0)
									)
								)
									(e += 864e5 * xo(To(n) + t)), (n = t = 0);
								return (
									(i.milliseconds = e % 1e3),
									(e = le(e / 1e3)),
									(i.seconds = e % 60),
									(e = le(e / 60)),
									(i.minutes = e % 60),
									(e = le(e / 60)),
									(i.hours = e % 24),
									(t += le(e / 24)),
									(e = le(So(t))),
									(n += e),
									(t -= xo(To(e))),
									(e = le(n / 12)),
									(n %= 12),
									(i.days = t),
									(i.months = n),
									(i.years = e),
									this
								);
							}
							function So(e) {
								return (e * 4800) / 146097;
							}
							function To(e) {
								return (e * 146097) / 4800;
							}
							function Oo(e) {
								if (!this.isValid()) return NaN;
								var t,
									n,
									i = this._milliseconds;
								if ('month' === (e = ne(e)) || 'quarter' === e || 'year' === e)
									switch (
										((t = this._days + i / 864e5),
										(n = this._months + So(t)),
										e)
									) {
										case 'month':
											return n;
										case 'quarter':
											return n / 3;
										case 'year':
											return n / 12;
									}
								else
									switch (
										((t = this._days + Math.round(To(this._months))), e)
									) {
										case 'week':
											return t / 7 + i / 6048e5;
										case 'day':
											return t + i / 864e5;
										case 'hour':
											return 24 * t + i / 36e5;
										case 'minute':
											return 1440 * t + i / 6e4;
										case 'second':
											return 86400 * t + i / 1e3;
										case 'millisecond':
											return Math.floor(864e5 * t) + i;
										default:
											throw new Error('Unknown unit ' + e);
									}
							}
							function Yo() {
								return this.isValid()
									? this._milliseconds +
											864e5 * this._days +
											(this._months % 12) * 2592e6 +
											31536e6 * ue(this._months / 12)
									: NaN;
							}
							function Co(e) {
								return function () {
									return this.as(e);
								};
							}
							var jo = Co('ms'),
								Eo = Co('s'),
								Po = Co('m'),
								Ao = Co('h'),
								Ho = Co('d'),
								Io = Co('w'),
								Ro = Co('M'),
								No = Co('Q'),
								Wo = Co('y');
							function Fo() {
								return Di(this);
							}
							function Bo(e) {
								return (e = ne(e)), this.isValid() ? this[e + 's']() : NaN;
							}
							function zo(e) {
								return function () {
									return this.isValid() ? this._data[e] : NaN;
								};
							}
							var Vo = zo('milliseconds'),
								Uo = zo('seconds'),
								Xo = zo('minutes'),
								Jo = zo('hours'),
								qo = zo('days'),
								Ko = zo('months'),
								Go = zo('years');
							function Qo() {
								return le(this.days() / 7);
							}
							var $o = Math.round,
								Zo = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 };
							function ea(e, t, n, i, r) {
								return r.relativeTime(t || 1, !!n, e, i);
							}
							function ta(e, t, n, i) {
								var r = Di(e).abs(),
									o = $o(r.as('s')),
									a = $o(r.as('m')),
									s = $o(r.as('h')),
									l = $o(r.as('d')),
									u = $o(r.as('M')),
									c = $o(r.as('w')),
									r = $o(r.as('y')),
									l =
										(o <= n.ss ? ['s', o] : o < n.s && ['ss', o]) ||
										(a <= 1 && ['m']) ||
										(a < n.m && ['mm', a]) ||
										(s <= 1 && ['h']) ||
										(s < n.h && ['hh', s]) ||
										(l <= 1 && ['d']) ||
										(l < n.d && ['dd', l]);
								if (null != n.w)
									l = l || (c <= 1 && ['w']) || (c < n.w && ['ww', c]);
								return (
									((l = l ||
										(u <= 1 && ['M']) ||
										(u < n.M && ['MM', u]) ||
										(r <= 1 && ['y']) || ['yy', r])[2] = t),
									(l[3] = 0 < +e),
									(l[4] = i),
									function (e, t, n, i, r) {
										return r.relativeTime(t || 1, !!n, e, i);
									}.apply(null, l)
								);
							}
							function na(e) {
								return void 0 !== e
									? 'function' == typeof e && (($o = e), !0)
									: $o;
							}
							function ia(e, t) {
								if (void 0 === Zo[e]) return !1;
								if (void 0 === t) return Zo[e];
								if (((Zo[e] = t), 's' === e)) Zo.ss = t - 1;
								return !0;
							}
							function ra(e, t) {
								if (!this.isValid()) return this.localeData().invalidDate();
								var n = !1,
									i = Zo;
								if ('object' == typeof e) (t = e), (e = !1);
								if ('boolean' == typeof e) n = e;
								if ('object' == typeof t)
									(i = Object.assign({}, Zo, t)),
										null != t.s && null == t.ss && (i.ss = t.s - 1);
								if (
									((t = this.localeData()),
									(i = (function (e, t, n, i) {
										var r = Di(e).abs(),
											o = $o(r.as('s')),
											a = $o(r.as('m')),
											s = $o(r.as('h')),
											l = $o(r.as('d')),
											u = $o(r.as('M')),
											c = $o(r.as('w')),
											r = $o(r.as('y')),
											l =
												(o <= n.ss ? ['s', o] : o < n.s && ['ss', o]) ||
												(a <= 1 && ['m']) ||
												(a < n.m && ['mm', a]) ||
												(s <= 1 && ['h']) ||
												(s < n.h && ['hh', s]) ||
												(l <= 1 && ['d']) ||
												(l < n.d && ['dd', l]);
										null != n.w &&
											(l = l || (c <= 1 && ['w']) || (c < n.w && ['ww', c]));
										return (
											((l = l ||
												(u <= 1 && ['M']) ||
												(u < n.M && ['MM', u]) ||
												(r <= 1 && ['y']) || ['yy', r])[2] = t),
											(l[3] = 0 < +e),
											(l[4] = i),
											function (e, t, n, i, r) {
												return r.relativeTime(t || 1, !!n, e, i);
											}.apply(null, l)
										);
									})(this, !n, i, t)),
									n)
								)
									i = t.pastFuture(+this, i);
								return t.postformat(i);
							}
							var oa = Math.abs;
							function aa(e) {
								return (e > 0) - (e < 0) || +e;
							}
							function sa() {
								if (!this.isValid()) return this.localeData().invalidDate();
								var e = oa(this._milliseconds) / 1e3,
									t = oa(this._days),
									n = oa(this._months),
									i,
									r,
									o,
									a,
									s = this.asSeconds(),
									l,
									u,
									c,
									d;
								if (!s) return 'P0D';
								i = le(e / 60);
								r = le(i / 60);
								e %= 60;
								i %= 60;
								o = le(n / 12);
								n %= 12;
								a = e ? e.toFixed(3).replace(/\.?0+$/, '') : '';
								l = s < 0 ? '-' : '';
								u = aa(this._months) !== aa(s) ? '-' : '';
								c = aa(this._days) !== aa(s) ? '-' : '';
								d = aa(this._milliseconds) !== aa(s) ? '-' : '';
								return (
									l +
									'P' +
									(o ? u + o + 'Y' : '') +
									(n ? u + n + 'M' : '') +
									(t ? c + t + 'D' : '') +
									(r || i || e ? 'T' : '') +
									(r ? d + r + 'H' : '') +
									(i ? d + i + 'M' : '') +
									(e ? d + a + 'S' : '')
								);
							}
							var la = ri.prototype;
							return (
								(la.isValid = function () {
									return this._isValid;
								}),
								(la.abs = function () {
									var e = this._data;
									return (
										(this._milliseconds = bo(this._milliseconds)),
										(this._days = bo(this._days)),
										(this._months = bo(this._months)),
										(e.milliseconds = bo(e.milliseconds)),
										(e.seconds = bo(e.seconds)),
										(e.minutes = bo(e.minutes)),
										(e.hours = bo(e.hours)),
										(e.months = bo(e.months)),
										(e.years = bo(e.years)),
										this
									);
								}),
								(la.add = function (e, t) {
									return wo(this, e, t, 1);
								}),
								(la.subtract = function (e, t) {
									return wo(this, e, t, -1);
								}),
								(la.as = function (e) {
									if (!this.isValid()) return NaN;
									var t,
										n,
										i = this._milliseconds;
									if (
										'month' === (e = ne(e)) ||
										'quarter' === e ||
										'year' === e
									)
										switch (
											((t = this._days + i / 864e5),
											(n = this._months + So(t)),
											e)
										) {
											case 'month':
												return n;
											case 'quarter':
												return n / 3;
											case 'year':
												return n / 12;
										}
									else
										switch (
											((t = this._days + Math.round(To(this._months))), e)
										) {
											case 'week':
												return t / 7 + i / 6048e5;
											case 'day':
												return t + i / 864e5;
											case 'hour':
												return 24 * t + i / 36e5;
											case 'minute':
												return 1440 * t + i / 6e4;
											case 'second':
												return 86400 * t + i / 1e3;
											case 'millisecond':
												return Math.floor(864e5 * t) + i;
											default:
												throw new Error('Unknown unit ' + e);
										}
								}),
								(la.asMilliseconds = jo),
								(la.asSeconds = Eo),
								(la.asMinutes = Po),
								(la.asHours = Ao),
								(la.asDays = Ho),
								(la.asWeeks = Io),
								(la.asMonths = Ro),
								(la.asQuarters = No),
								(la.asYears = Wo),
								(la.valueOf = function () {
									return this.isValid()
										? this._milliseconds +
												864e5 * this._days +
												(this._months % 12) * 2592e6 +
												31536e6 * ue(this._months / 12)
										: NaN;
								}),
								(la._bubble = function () {
									var e = this._milliseconds,
										t = this._days,
										n = this._months,
										i = this._data;
									(0 <= e && 0 <= t && 0 <= n) ||
										(e <= 0 && t <= 0 && n <= 0) ||
										((e += 864e5 * xo(To(n) + t)), (n = t = 0));
									return (
										(i.milliseconds = e % 1e3),
										(e = le(e / 1e3)),
										(i.seconds = e % 60),
										(e = le(e / 60)),
										(i.minutes = e % 60),
										(e = le(e / 60)),
										(i.hours = e % 24),
										(t += le(e / 24)),
										(e = le(So(t))),
										(n += e),
										(t -= xo(To(e))),
										(e = le(n / 12)),
										(n %= 12),
										(i.days = t),
										(i.months = n),
										(i.years = e),
										this
									);
								}),
								(la.clone = function () {
									return Di(this);
								}),
								(la.get = function (e) {
									return (e = ne(e)), this.isValid() ? this[e + 's']() : NaN;
								}),
								(la.milliseconds = Vo),
								(la.seconds = Uo),
								(la.minutes = Xo),
								(la.hours = Jo),
								(la.days = qo),
								(la.weeks = function () {
									return le(this.days() / 7);
								}),
								(la.months = Ko),
								(la.years = Go),
								(la.humanize = function (e, t) {
									if (!this.isValid()) return this.localeData().invalidDate();
									var n = !1,
										i = Zo;
									'object' == typeof e && ((t = e), (e = !1));
									'boolean' == typeof e && (n = e);
									'object' == typeof t &&
										((i = Object.assign({}, Zo, t)),
										null != t.s && null == t.ss && (i.ss = t.s - 1));
									(t = this.localeData()),
										(i = (function (e, t, n, i) {
											var r = Di(e).abs(),
												o = $o(r.as('s')),
												a = $o(r.as('m')),
												s = $o(r.as('h')),
												l = $o(r.as('d')),
												u = $o(r.as('M')),
												c = $o(r.as('w')),
												r = $o(r.as('y')),
												l =
													(o <= n.ss ? ['s', o] : o < n.s && ['ss', o]) ||
													(a <= 1 && ['m']) ||
													(a < n.m && ['mm', a]) ||
													(s <= 1 && ['h']) ||
													(s < n.h && ['hh', s]) ||
													(l <= 1 && ['d']) ||
													(l < n.d && ['dd', l]);
											null != n.w &&
												(l = l || (c <= 1 && ['w']) || (c < n.w && ['ww', c]));
											return (
												((l = l ||
													(u <= 1 && ['M']) ||
													(u < n.M && ['MM', u]) ||
													(r <= 1 && ['y']) || ['yy', r])[2] = t),
												(l[3] = 0 < +e),
												(l[4] = i),
												function (e, t, n, i, r) {
													return r.relativeTime(t || 1, !!n, e, i);
												}.apply(null, l)
											);
										})(this, !n, i, t)),
										n && (i = t.pastFuture(+this, i));
									return t.postformat(i);
								}),
								(la.toISOString = sa),
								(la.toString = sa),
								(la.toJSON = sa),
								(la.locale = rr),
								(la.localeData = ar),
								(la.toIsoString = L(
									'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
									sa
								)),
								(la.lang = or),
								N('X', 0, 0, 'unix'),
								N('x', 0, 0, 'valueOf'),
								Ee('x', Se),
								Ee('X', /[+-]?\d+(\.\d{1,3})?/),
								Re('X', function (e, t, n) {
									n._d = new Date(1e3 * parseFloat(e));
								}),
								Re('x', function (e, t, n) {
									n._d = new Date(ue(e));
								}),
								//! moment.js
								(c.version = '2.29.1'),
								(function (e) {
									t = e;
								})(Jn),
								(c.fn = ao),
								(c.min = function () {
									return Gn('isBefore', [].slice.call(arguments, 0));
								}),
								(c.max = function () {
									return Gn('isAfter', [].slice.call(arguments, 0));
								}),
								(c.now = function () {
									return Date.now ? Date.now() : +new Date();
								}),
								(c.utc = p),
								(c.unix = function (e) {
									return Jn(1e3 * e);
								}),
								(c.months = function (e, t) {
									return ho(e, t, 'months');
								}),
								(c.isDate = f),
								(c.locale = hn),
								(c.invalid = v),
								(c.duration = Di),
								(c.isMoment = w),
								(c.weekdays = function (e, t, n) {
									return po(e, t, n, 'weekdays');
								}),
								(c.parseZone = function () {
									return Jn.apply(null, arguments).parseZone();
								}),
								(c.localeData = _n),
								(c.isDuration = oi),
								(c.monthsShort = function (e, t) {
									return ho(e, t, 'monthsShort');
								}),
								(c.weekdaysMin = function (e, t, n) {
									return po(e, t, n, 'weekdaysMin');
								}),
								(c.defineLocale = pn),
								(c.updateLocale = function (e, t) {
									{
										var n, i;
										null != t
											? ((i = on),
											  null != an[e] && null != an[e].parentLocale
													? an[e].set(Y(an[e]._config, t))
													: (null != (n = fn(e)) && (i = n._config),
													  (t = Y(i, t)),
													  null == n && (t.abbr = e),
													  ((t = new C(t)).parentLocale = an[e]),
													  (an[e] = t)),
											  hn(e))
											: null != an[e] &&
											  (null != an[e].parentLocale
													? ((an[e] = an[e].parentLocale), e === hn() && hn(e))
													: null != an[e] && delete an[e]);
									}
									return an[e];
								}),
								(c.locales = function () {
									return D(an);
								}),
								(c.weekdaysShort = function (e, t, n) {
									return po(e, t, n, 'weekdaysShort');
								}),
								(c.normalizeUnits = ne),
								(c.relativeTimeRounding = function (e) {
									return void 0 !== e
										? 'function' == typeof e && (($o = e), !0)
										: $o;
								}),
								(c.relativeTimeThreshold = function (e, t) {
									if (void 0 === Zo[e]) return !1;
									if (void 0 === t) return Zo[e];
									(Zo[e] = t), 's' === e && (Zo.ss = t - 1);
									return !0;
								}),
								(c.calendarFormat = function (e, t) {
									t = e.diff(t, 'days', !0);
									return t < -6
										? 'sameElse'
										: t < -1
										? 'lastWeek'
										: t < 0
										? 'lastDay'
										: t < 1
										? 'sameDay'
										: t < 2
										? 'nextDay'
										: t < 7
										? 'nextWeek'
										: 'sameElse';
								}),
								(c.prototype = ao),
								(c.HTML5_FMT = {
									DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
									DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
									DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
									DATE: 'YYYY-MM-DD',
									TIME: 'HH:mm',
									TIME_SECONDS: 'HH:mm:ss',
									TIME_MS: 'HH:mm:ss.SSS',
									WEEK: 'GGGG-[W]WW',
									MONTH: 'YYYY-MM',
								}),
								c
							);
						})();
					}.call(this, da(306)(e)));
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						n = n(127);
					i(
						{ target: 'Array', proto: !0, forced: [].forEach != n },
						{ forEach: n }
					);
				},
				function (e, t, n) {
					var i,
						r = n(14),
						o = n(129),
						a = n(127),
						s = n(39);
					for (i in o) {
						var l = r[i],
							u = l && l.prototype;
						if (u && u.forEach !== a)
							try {
								s(u, 'forEach', a);
							} catch (e) {
								u.forEach = a;
							}
					}
				},
				function (e, t, n) {
					var i = n(100),
						r = n(30),
						n = n(294);
					i || r(Object.prototype, 'toString', n, { unsafe: !0 });
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(49).find,
						o = n(76),
						a = n(36),
						n = 'find',
						s = !0,
						a = a(n);
					n in [] &&
						Array(1)[n](function () {
							s = !1;
						}),
						i(
							{ target: 'Array', proto: !0, forced: s || !a },
							{
								find: function (e, t) {
									return r(this, e, 1 < arguments.length ? t : void 0);
								},
							}
						),
						o(n);
				},
				function (e, t, n) {
					'use strict';
					var i = n(30),
						r = n(18),
						o = n(10),
						a = n(102),
						s = 'toString',
						l = RegExp.prototype,
						u = l[s],
						n = o(function () {
							return '/a/b' != u.call({ source: 'a', flags: 'b' });
						}),
						o = u.name != s;
					(n || o) &&
						i(
							RegExp.prototype,
							s,
							function () {
								var e = r(this),
									t = String(e.source),
									n = e.flags;
								return (
									'/' +
									t +
									'/' +
									String(
										void 0 === n && e instanceof RegExp && !('flags' in l)
											? a.call(e)
											: n
									)
								);
							},
							{ unsafe: !0 }
						);
				},
				function (e, t, n) {
					var u = n(14),
						c = n(45).f,
						d = n(39),
						f = n(30),
						h = n(88),
						p = n(120),
						m = n(63);
					e.exports = function (e, t) {
						var n,
							i,
							r,
							o = e.target,
							a = e.global,
							s = e.stat,
							l = a ? u : s ? u[o] || h(o, {}) : (u[o] || {}).prototype;
						if (l)
							for (n in t) {
								if (
									((i = t[n]),
									(r = e.noTargetGet ? (r = c(l, n)) && r.value : l[n]),
									!m(a ? n : o + (s ? '.' : '#') + n, e.forced) && void 0 !== r)
								) {
									if (typeof i == typeof r) continue;
									p(i, r);
								}
								(e.sham || (r && r.sham)) && d(i, 'sham', !0), f(l, n, i, e);
							}
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(10),
						l = n(75),
						u = n(17),
						c = n(35),
						d = n(32),
						f = n(66),
						h = n(96),
						o = n(67),
						a = n(15),
						n = n(77),
						p = a('isConcatSpreadable'),
						m = 9007199254740991,
						_ = 'Maximum allowed index exceeded',
						r =
							51 <= n ||
							!r(function () {
								var e = [];
								return (e[p] = !1), e.concat()[0] !== e;
							}),
						o = o('concat');
					i(
						{ target: 'Array', proto: !0, forced: !r || !o },
						{
							concat: function () {
								for (
									var e,
										t,
										n,
										i = c(this),
										r = h(i, 0),
										o = 0,
										a = -1,
										s = arguments.length;
									a < s;
									a++
								)
									if (
										(function (e) {
											if (!u(e)) return !1;
											var t = e[p];
											return void 0 !== t ? !!t : l(e);
										})((n = -1 === a ? i : arguments[a]))
									) {
										if (((t = d(n.length)), m < o + t)) throw TypeError(_);
										for (e = 0; e < t; e++, o++) e in n && f(r, o, n[e]);
									} else {
										if (m <= o) throw TypeError(_);
										f(r, o++, n);
									}
								return (r.length = o), r;
							},
						}
					);
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(49).filter,
						o = n(67),
						n = n(36),
						o = o('filter'),
						n = n('filter');
					i(
						{ target: 'Array', proto: !0, forced: !o || !n },
						{
							filter: function (e, t) {
								return r(this, e, 1 < arguments.length ? t : void 0);
							},
						}
					);
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						n = n(82);
					i(
						{ target: 'RegExp', proto: !0, forced: /./.exec !== n },
						{ exec: n }
					);
				},
				function (e, t) {
					e.exports = function (e) {
						try {
							return !!e();
						} catch (e) {
							return !0;
						}
					};
				},
				function (e, t, n) {
					var i = n(6),
						r = n(10),
						o = n(35),
						a = n(98),
						n = n(128);
					i(
						{
							target: 'Object',
							stat: !0,
							forced: r(function () {
								a(1);
							}),
							sham: !n,
						},
						{
							getPrototypeOf: function (e) {
								return a(o(e));
							},
						}
					);
				},
				function (e, t, n) {
					n(6)({ target: 'Object', stat: !0 }, { setPrototypeOf: n(99) });
				},
				function (e, t, n) {
					var i = n(6),
						r = n(46),
						o = n(50),
						a = n(18),
						s = n(17),
						l = n(51),
						u = n(295),
						n = n(10),
						c = r('Reflect', 'construct'),
						d = n(function () {
							function e() {}
							return !(c(function () {}, [], e) instanceof e);
						}),
						f = !n(function () {
							c(function () {});
						}),
						n = d || f;
					i(
						{ target: 'Reflect', stat: !0, forced: n, sham: n },
						{
							construct: function (e, t, n) {
								o(e), a(t);
								var i = arguments.length < 3 ? e : o(n);
								if (f && !d) return c(e, t, i);
								if (e == i) {
									switch (t.length) {
										case 0:
											return new e();
										case 1:
											return new e(t[0]);
										case 2:
											return new e(t[0], t[1]);
										case 3:
											return new e(t[0], t[1], t[2]);
										case 4:
											return new e(t[0], t[1], t[2], t[3]);
									}
									var r = [null];
									return r.push.apply(r, t), new (u.apply(e, r))();
								}
								(r = i.prototype),
									(i = l(s(r) ? r : Object.prototype)),
									(r = Function.apply.call(e, i, t));
								return s(r) ? r : i;
							},
						}
					);
				},
				function (n, e, t) {
					(function (e) {
						function t(e) {
							return e && e.Math == Math && e;
						}
						n.exports =
							t('object' == typeof globalThis && globalThis) ||
							t('object' == typeof window && window) ||
							t('object' == typeof self && self) ||
							t('object' == typeof e && e) ||
							(function () {
								return this;
							})() ||
							Function('return this')();
					}.call(this, t(291)));
				},
				function (e, t, n) {
					var i = n(14),
						r = n(91),
						o = n(24),
						a = n(74),
						s = n(97),
						n = n(124),
						l = r('wks'),
						u = i.Symbol,
						c = n ? u : (u && u.withoutSetter) || a;
					e.exports = function (e) {
						return (
							o(l, e) ||
								(s && o(u, e) ? (l[e] = u[e]) : (l[e] = c('Symbol.' + e))),
							l[e]
						);
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(49).map,
						o = n(67),
						n = n(36),
						o = o('map'),
						n = n('map');
					i(
						{ target: 'Array', proto: !0, forced: !o || !n },
						{
							map: function (e, t) {
								return r(this, e, 1 < arguments.length ? t : void 0);
							},
						}
					);
				},
				function (e, t) {
					e.exports = function (e) {
						return 'object' == typeof e ? null !== e : 'function' == typeof e;
					};
				},
				function (e, t, n) {
					var i = n(17);
					e.exports = function (e) {
						if (!i(e)) throw TypeError(String(e) + ' is not an object');
						return e;
					};
				},
				function (e, t, n) {
					'use strict';
					function i(e) {
						var t,
							n,
							i,
							r,
							o,
							a,
							s,
							l = d(e, !1);
						if ('string' == typeof l && 2 < l.length)
							if (43 === (t = (l = v(l)).charCodeAt(0)) || 45 === t) {
								if (88 === (e = l.charCodeAt(2)) || 120 === e) return NaN;
							} else if (48 === t) {
								switch (l.charCodeAt(1)) {
									case 66:
									case 98:
										(n = 2), (i = 49);
										break;
									case 79:
									case 111:
										(n = 8), (i = 55);
										break;
									default:
										return +l;
								}
								for (o = (r = l.slice(2)).length, a = 0; a < o; a++)
									if ((s = r.charCodeAt(a)) < 48 || i < s) return NaN;
								return parseInt(r, n);
							}
						return +l;
					}
					var r = n(22),
						o = n(14),
						a = n(63),
						s = n(30),
						l = n(24),
						u = n(47),
						c = n(105),
						d = n(59),
						f = n(10),
						h = n(51),
						p = n(61).f,
						m = n(45).f,
						_ = n(29).f,
						v = n(79).trim,
						y = 'Number',
						g = o[y],
						b = g.prototype,
						k = u(h(b)) == y;
					if (a(y, !g(' 0o1') || !g('0b1') || g('+0x1'))) {
						for (
							var w,
								M = function (e) {
									var e = arguments.length < 1 ? 0 : e,
										t = this;
									return t instanceof M &&
										(k
											? f(function () {
													b.valueOf.call(t);
											  })
											: u(t) != y)
										? c(new g(i(e)), t, M)
										: i(e);
								},
								L = r
									? p(g)
									: 'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range'.split(
											','
									  ),
								x = 0;
							L.length > x;
							x++
						)
							l(g, (w = L[x])) && !l(M, w) && _(M, w, m(g, w));
						((M.prototype = b).constructor = M), s(o, y, M);
					}
				},
				function (e, t, n) {
					'use strict';
					var i = n(34),
						r = n(76),
						o = n(68),
						a = n(42),
						n = n(109),
						s = 'Array Iterator',
						l = a.set,
						u = a.getterFor(s);
					(e.exports = n(
						Array,
						'Array',
						function (e, t) {
							l(this, { type: s, target: i(e), index: 0, kind: t });
						},
						function () {
							var e = u(this),
								t = e.target,
								n = e.kind,
								i = e.index++;
							return !t || i >= t.length
								? { value: (e.target = void 0), done: !0 }
								: 'keys' == n
								? { value: i, done: !1 }
								: 'values' == n
								? { value: t[i], done: !1 }
								: { value: [i, t[i]], done: !1 };
						},
						'values'
					)),
						(o.Arguments = o.Array),
						r('keys'),
						r('values'),
						r('entries');
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(92).includes,
						o = n(76);
					i(
						{
							target: 'Array',
							proto: !0,
							forced: !n(36)('indexOf', { ACCESSORS: !0, 1: 0 }),
						},
						{
							includes: function (e, t) {
								return r(this, e, 1 < arguments.length ? t : void 0);
							},
						}
					),
						o('includes');
				},
				function (e, t, n) {
					n = n(10);
					e.exports = !n(function () {
						return (
							7 !=
							Object.defineProperty({}, 1, {
								get: function () {
									return 7;
								},
							})[1]
						);
					});
				},
				function (e, t, n) {
					'use strict';
					var i = n(110),
						c = n(106),
						v = n(18),
						d = n(38),
						y = n(137),
						g = n(111),
						b = n(32),
						k = n(112),
						f = n(82),
						n = n(10),
						h = [].push,
						w = Math.min,
						M = 4294967295,
						L = !n(function () {
							return !RegExp(M, 'y');
						});
					i(
						'split',
						2,
						function (r, p, m) {
							var _ =
								'c' == 'abbc'.split(/(b)*/)[1] ||
								4 != 'test'.split(/(?:)/, -1).length ||
								2 != 'ab'.split(/(?:ab)*/).length ||
								4 != '.'.split(/(.?)(.?)/).length ||
								1 < '.'.split(/()()/).length ||
								''.split(/.?/).length
									? function (e, t) {
											var n = String(d(this)),
												i = void 0 === t ? M : t >>> 0;
											if (0 == i) return [];
											if (void 0 === e) return [n];
											if (!c(e)) return p.call(n, e, i);
											for (
												var r,
													o,
													a,
													s = [],
													t =
														(e.ignoreCase ? 'i' : '') +
														(e.multiline ? 'm' : '') +
														(e.unicode ? 'u' : '') +
														(e.sticky ? 'y' : ''),
													l = 0,
													u = new RegExp(e.source, t + 'g');
												(r = f.call(u, n)) &&
												!(
													l < (o = u.lastIndex) &&
													(s.push(n.slice(l, r.index)),
													1 < r.length &&
														r.index < n.length &&
														h.apply(s, r.slice(1)),
													(a = r[0].length),
													(l = o),
													s.length >= i)
												);

											)
												u.lastIndex === r.index && u.lastIndex++;
											return (
												l === n.length
													? (!a && u.test('')) || s.push('')
													: s.push(n.slice(l)),
												s.length > i ? s.slice(0, i) : s
											);
									  }
									: '0'.split(void 0, 0).length
									? function (e, t) {
											return void 0 === e && 0 === t ? [] : p.call(this, e, t);
									  }
									: p;
							return [
								function (e, t) {
									var n = d(this),
										i = null == e ? void 0 : e[r];
									return void 0 !== i
										? i.call(e, n, t)
										: _.call(String(n), e, t);
								},
								function (e, t) {
									var n = m(_, e, this, t, _ !== p);
									if (n.done) return n.value;
									var i = v(e),
										r = String(this),
										n = y(i, RegExp),
										o = i.unicode,
										e =
											(i.ignoreCase ? 'i' : '') +
											(i.multiline ? 'm' : '') +
											(i.unicode ? 'u' : '') +
											(L ? 'y' : 'g'),
										a = new n(L ? i : '^(?:' + i.source + ')', e),
										s = void 0 === t ? M : t >>> 0;
									if (0 == s) return [];
									if (0 === r.length) return null === k(a, r) ? [r] : [];
									for (var l = 0, u = 0, c = []; u < r.length; ) {
										a.lastIndex = L ? u : 0;
										var d,
											f = k(a, L ? r : r.slice(u));
										if (
											null === f ||
											(d = w(b(a.lastIndex + (L ? 0 : u)), r.length)) === l
										)
											u = g(r, u, o);
										else {
											if ((c.push(r.slice(l, u)), c.length === s)) return c;
											for (var h = 1; h <= f.length - 1; h++)
												if ((c.push(f[h]), c.length === s)) return c;
											u = l = d;
										}
									}
									return c.push(r.slice(l)), c;
								},
							];
						},
						!L
					);
				},
				function (e, t) {
					var n = {}.hasOwnProperty;
					e.exports = function (e, t) {
						return n.call(e, t);
					};
				},
				function (e, t, n) {
					var i = n(6),
						r = n(35),
						o = n(64);
					i(
						{
							target: 'Object',
							stat: !0,
							forced: n(10)(function () {
								o(1);
							}),
						},
						{
							keys: function (e) {
								return o(r(e));
							},
						}
					);
				},
				function (e, t, n) {
					var i,
						r = n(14),
						o = n(129),
						a = n(20),
						s = n(39),
						n = n(15),
						l = n('iterator'),
						u = n('toStringTag'),
						c = a.values;
					for (i in o) {
						var d = r[i],
							f = d && d.prototype;
						if (f) {
							if (f[l] !== c)
								try {
									s(f, l, c);
								} catch (e) {
									f[l] = c;
								}
							if ((f[u] || s(f, u, i), o[i]))
								for (var h in a)
									if (f[h] !== a[h])
										try {
											s(f, h, a[h]);
										} catch (e) {
											f[h] = a[h];
										}
						}
					}
				},
				function (e, t, n) {
					'use strict';
					var i = n(108).charAt,
						r = n(42),
						n = n(109),
						o = 'String Iterator',
						a = r.set,
						s = r.getterFor(o);
					n(
						String,
						'String',
						function (e) {
							a(this, { type: o, string: String(e), index: 0 });
						},
						function () {
							var e = s(this),
								t = e.string,
								n = e.index;
							return n >= t.length
								? { value: void 0, done: !0 }
								: ((n = i(t, n)),
								  (e.index += n.length),
								  { value: n, done: !1 });
						}
					);
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(92).indexOf,
						o = n(65),
						n = n(36),
						a = [].indexOf,
						s = !!a && 1 / [1].indexOf(1, -0) < 0,
						o = o('indexOf'),
						n = n('indexOf', { ACCESSORS: !0, 1: 0 });
					i(
						{ target: 'Array', proto: !0, forced: s || !o || !n },
						{
							indexOf: function (e, t) {
								return s
									? a.apply(this, arguments) || 0
									: r(this, e, 1 < arguments.length ? t : void 0);
							},
						}
					);
				},
				function (e, t, n) {
					var i = n(22),
						r = n(119),
						o = n(18),
						a = n(59),
						s = Object.defineProperty;
					t.f = i
						? s
						: function (e, t, n) {
								if ((o(e), (t = a(t, !0)), o(n), r))
									try {
										return s(e, t, n);
									} catch (e) {}
								if ('get' in n || 'set' in n)
									throw TypeError('Accessors not supported');
								return 'value' in n && (e[t] = n.value), e;
						  };
				},
				function (e, t, n) {
					var s = n(14),
						l = n(39),
						u = n(24),
						c = n(88),
						i = n(89),
						n = n(42),
						r = n.get,
						d = n.enforce,
						f = String(String).split('String');
					(e.exports = function (e, t, n, i) {
						var r = !!i && !!i.unsafe,
							o = !!i && !!i.enumerable,
							a = !!i && !!i.noTargetGet;
						'function' == typeof n &&
							('string' != typeof t || u(n, 'name') || l(n, 'name', t),
							(i = d(n)).source ||
								(i.source = f.join('string' == typeof t ? t : ''))),
							e !== s
								? (r ? !a && e[t] && (o = !0) : delete e[t],
								  o ? (e[t] = n) : l(e, t, n))
								: o
								? (e[t] = n)
								: c(t, n);
					})(Function.prototype, 'toString', function () {
						return ('function' == typeof this && r(this).source) || i(this);
					});
				},
				function (e, t, n) {
					'use strict';
					var i = n(110),
						c = n(18),
						d = n(32),
						r = n(38),
						f = n(111),
						h = n(112);
					i('match', 1, function (i, l, u) {
						return [
							function (e) {
								var t = r(this),
									n = null == e ? void 0 : e[i];
								return void 0 !== n
									? n.call(e, t)
									: new RegExp(e)[i](String(t));
							},
							function (e) {
								var t = u(l, e, this);
								if (t.done) return t.value;
								var n = c(e),
									i = String(this);
								if (!n.global) return h(n, i);
								for (
									var r = n.unicode, o = [], a = (n.lastIndex = 0);
									null !== (s = h(n, i));

								) {
									var s = String(s[0]);
									'' === (o[a] = s) && (n.lastIndex = f(i, d(n.lastIndex), r)),
										a++;
								}
								return 0 === a ? null : o;
							},
						];
					});
				},
				function (e, t, n) {
					var i = n(62),
						r = Math.min;
					e.exports = function (e) {
						return 0 < e ? r(i(e), 9007199254740991) : 0;
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(144),
						o = n(38);
					i(
						{ target: 'String', proto: !0, forced: !n(145)('includes') },
						{
							includes: function (e, t) {
								return !!~String(o(this)).indexOf(
									r(e),
									1 < arguments.length ? t : void 0
								);
							},
						}
					);
				},
				function (e, t, n) {
					var i = n(58),
						r = n(38);
					e.exports = function (e) {
						return i(r(e));
					};
				},
				function (e, t, n) {
					var i = n(38);
					e.exports = function (e) {
						return Object(i(e));
					};
				},
				function (e, t, n) {
					function a(e) {
						throw e;
					}
					var s = n(22),
						l = n(10),
						u = n(24),
						c = Object.defineProperty,
						d = {};
					e.exports = function (e, t) {
						if (u(d, e)) return d[e];
						var n = [][e],
							i = !!u((t = t || {}), 'ACCESSORS') && t.ACCESSORS,
							r = u(t, 0) ? t[0] : a,
							o = u(t, 1) ? t[1] : void 0;
						return (d[e] =
							!!n &&
							!l(function () {
								if (i && !s) return !0;
								var e = { length: -1 };
								i ? c(e, 1, { enumerable: !0, get: a }) : (e[1] = 1),
									n.call(e, r, o);
							}));
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						u = n(17),
						c = n(75),
						d = n(93),
						f = n(32),
						h = n(34),
						p = n(66),
						r = n(15),
						o = n(67),
						n = n(36),
						o = o('slice'),
						n = n('slice', { ACCESSORS: !0, 0: 0, 1: 2 }),
						m = r('species'),
						_ = [].slice,
						v = Math.max;
					i(
						{ target: 'Array', proto: !0, forced: !o || !n },
						{
							slice: function (e, t) {
								var n,
									i,
									r,
									o = h(this),
									a = f(o.length),
									s = d(e, a),
									l = d(void 0 === t ? a : t, a);
								if (
									c(o) &&
									((('function' == typeof (n = o.constructor) &&
										(n === Array || c(n.prototype))) ||
										(u(n) && null === (n = n[m]))) &&
										(n = void 0),
									n === Array || void 0 === n)
								)
									return _.call(o, s, l);
								for (
									i = new (void 0 === n ? Array : n)(v(l - s, 0)), r = 0;
									s < l;
									s++, r++
								)
									s in o && p(i, r, o[s]);
								return (i.length = r), i;
							},
						}
					);
				},
				function (e, t) {
					e.exports = function (e) {
						if (null == e) throw TypeError("Can't call method on " + e);
						return e;
					};
				},
				function (e, t, n) {
					var i = n(22),
						r = n(29),
						o = n(56);
					e.exports = i
						? function (e, t, n) {
								return r.f(e, t, o(1, n));
						  }
						: function (e, t, n) {
								return (e[t] = n), e;
						  };
				},
				function (e, t, n) {
					var i = n(22),
						r = n(14),
						o = n(63),
						a = n(105),
						s = n(29).f,
						l = n(61).f,
						u = n(106),
						c = n(102),
						d = n(134),
						f = n(30),
						h = n(10),
						p = n(42).set,
						m = n(107),
						_ = n(15)('match'),
						v = r.RegExp,
						y = v.prototype,
						g = /a/g,
						b = /a/g,
						k = new v(g) !== g,
						w = d.UNSUPPORTED_Y;
					if (
						i &&
						o(
							'RegExp',
							!k ||
								w ||
								h(function () {
									return (
										(b[_] = !1), v(g) != g || v(b) == b || '/a/i' != v(g, 'i')
									);
								})
						)
					) {
						for (
							var M = function (e, t) {
									var n,
										i = this instanceof M,
										r = u(e),
										o = void 0 === t;
									if (!i && r && e.constructor === M && o) return e;
									k
										? r && !o && (e = e.source)
										: e instanceof M && (o && (t = c.call(e)), (e = e.source)),
										w &&
											(n = !!t && -1 < t.indexOf('y')) &&
											(t = t.replace(/y/g, ''));
									i = a(k ? new v(e, t) : v(e, t), i ? this : y, M);
									return w && n && p(i, { sticky: n }), i;
								},
								L = l(v),
								x = 0;
							L.length > x;

						)
							!(function (t) {
								t in M ||
									s(M, t, {
										configurable: !0,
										get: function () {
											return v[t];
										},
										set: function (e) {
											v[t] = e;
										},
									});
							})(L[x++]);
						((y.constructor = M).prototype = y), f(r, 'RegExp', M);
					}
					m('RegExp');
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(58),
						o = n(34),
						n = n(65),
						a = [].join,
						r = r != Object,
						n = n('join', ',');
					i(
						{ target: 'Array', proto: !0, forced: r || !n },
						{
							join: function (e) {
								return a.call(o(this), void 0 === e ? ',' : e);
							},
						}
					);
				},
				function (e, t, n) {
					var i,
						r,
						o,
						a,
						s,
						l,
						u,
						c,
						d = n(292),
						f = n(14),
						h = n(17),
						p = n(39),
						m = n(24),
						_ = n(90),
						v = n(73),
						n = n(60),
						f = f.WeakMap;
					(u = d
						? ((i = _.state || (_.state = new f())),
						  (r = i.get),
						  (o = i.has),
						  (a = i.set),
						  (s = function (e, t) {
								return (t.facade = e), a.call(i, e, t), t;
						  }),
						  (l = function (e) {
								return r.call(i, e) || {};
						  }),
						  function (e) {
								return o.call(i, e);
						  })
						: ((n[(c = v('state'))] = !0),
						  (s = function (e, t) {
								return (t.facade = e), p(e, c, t), t;
						  }),
						  (l = function (e) {
								return m(e, c) ? e[c] : {};
						  }),
						  function (e) {
								return m(e, c);
						  })),
						(e.exports = {
							set: s,
							get: l,
							has: u,
							enforce: function (e) {
								return u(e) ? l(e) : s(e, {});
							},
							getterFor: function (n) {
								return function (e) {
									var t;
									if (!h(e) || (t = l(e)).type !== n)
										throw TypeError(
											'Incompatible receiver, ' + n + ' required'
										);
									return t;
								};
							},
						});
				},
				function (e, t, n) {
					'use strict';
					function i(e, t) {
						var n = (Z[e] = k(J[z]));
						return (
							V(n, { type: B, tag: e, description: t }),
							u || (n.description = t),
							n
						);
					}
					function r(t, e) {
						_(t);
						var n = y(e),
							e = w(n).concat(le(n));
						return (
							W(e, function (e) {
								(u && !se.call(n, e)) || ae(t, e, n[e]);
							}),
							t
						);
					}
					var o = n(6),
						a = n(14),
						s = n(46),
						l = n(48),
						u = n(22),
						c = n(97),
						d = n(124),
						f = n(10),
						h = n(24),
						p = n(75),
						m = n(17),
						_ = n(18),
						v = n(35),
						y = n(34),
						g = n(59),
						b = n(56),
						k = n(51),
						w = n(64),
						M = n(61),
						L = n(138),
						x = n(95),
						D = n(45),
						S = n(29),
						T = n(72),
						O = n(39),
						Y = n(30),
						C = n(91),
						j = n(73),
						E = n(60),
						P = n(74),
						A = n(15),
						H = n(139),
						I = n(140),
						R = n(52),
						N = n(42),
						W = n(49).forEach,
						F = j('hidden'),
						B = 'Symbol',
						z = 'prototype',
						j = A('toPrimitive'),
						V = N.set,
						U = N.getterFor(B),
						X = Object[z],
						J = a.Symbol,
						q = s('JSON', 'stringify'),
						K = D.f,
						G = S.f,
						Q = L.f,
						$ = T.f,
						Z = C('symbols'),
						ee = C('op-symbols'),
						te = C('string-to-symbol-registry'),
						ne = C('symbol-to-string-registry'),
						C = C('wks'),
						a = a.QObject,
						ie = !a || !a[z] || !a[z].findChild,
						re =
							u &&
							f(function () {
								return (
									7 !=
									k(
										G({}, 'a', {
											get: function () {
												return G(this, 'a', { value: 7 }).a;
											},
										})
									).a
								);
							})
								? function (e, t, n) {
										var i = K(X, t);
										i && delete X[t], G(e, t, n), i && e !== X && G(X, t, i);
								  }
								: G,
						oe = d
							? function (e) {
									return 'symbol' == typeof e;
							  }
							: function (e) {
									return Object(e) instanceof J;
							  },
						ae = function (e, t, n) {
							e === X && ae(ee, t, n), _(e);
							t = g(t, !0);
							return (
								_(n),
								h(Z, t)
									? (n.enumerable
											? (h(e, F) && e[F][t] && (e[F][t] = !1),
											  (n = k(n, { enumerable: b(0, !1) })))
											: (h(e, F) || G(e, F, b(1, {})), (e[F][t] = !0)),
									  re(e, t, n))
									: G(e, t, n)
							);
						},
						se = function (e) {
							var t = g(e, !0),
								e = $.call(this, t);
							return (
								!(this === X && h(Z, t) && !h(ee, t)) &&
								(!(
									e ||
									!h(this, t) ||
									!h(Z, t) ||
									(h(this, F) && this[F][t])
								) ||
									e)
							);
						},
						a = function (e, t) {
							var n = y(e),
								e = g(t, !0);
							if (n !== X || !h(Z, e) || h(ee, e)) {
								t = K(n, e);
								return (
									!t || !h(Z, e) || (h(n, F) && n[F][e]) || (t.enumerable = !0),
									t
								);
							}
						},
						d = function (e) {
							var e = Q(y(e)),
								t = [];
							return (
								W(e, function (e) {
									h(Z, e) || h(E, e) || t.push(e);
								}),
								t
							);
						},
						le = function (e) {
							var t = e === X,
								e = Q(t ? ee : y(e)),
								n = [];
							return (
								W(e, function (e) {
									!h(Z, e) || (t && !h(X, e)) || n.push(Z[e]);
								}),
								n
							);
						};
					c ||
						(Y(
							(J = function (e) {
								if (this instanceof J)
									throw TypeError('Symbol is not a constructor');
								var e = arguments.length && void 0 !== e ? String(e) : void 0,
									t = P(e),
									n = function (e) {
										this === X && n.call(ee, e),
											h(this, F) && h(this[F], t) && (this[F][t] = !1),
											re(this, t, b(1, e));
									};
								return (
									u && ie && re(X, t, { configurable: !0, set: n }), i(t, e)
								);
							})[z],
							'toString',
							function () {
								return U(this).tag;
							}
						),
						Y(J, 'withoutSetter', function (e) {
							return i(P(e), e);
						}),
						(T.f = se),
						(S.f = ae),
						(D.f = a),
						(M.f = L.f = d),
						(x.f = le),
						(H.f = function (e) {
							return i(A(e), e);
						}),
						u &&
							(G(J[z], 'description', {
								configurable: !0,
								get: function () {
									return U(this).description;
								},
							}),
							l || Y(X, 'propertyIsEnumerable', se, { unsafe: !0 }))),
						o({ global: !0, wrap: !0, forced: !c, sham: !c }, { Symbol: J }),
						W(w(C), function (e) {
							I(e);
						}),
						o(
							{ target: B, stat: !0, forced: !c },
							{
								for: function (e) {
									var t = String(e);
									if (h(te, t)) return te[t];
									e = J(t);
									return (te[t] = e), (ne[e] = t), e;
								},
								keyFor: function (e) {
									if (!oe(e)) throw TypeError(e + ' is not a symbol');
									if (h(ne, e)) return ne[e];
								},
								useSetter: function () {
									ie = !0;
								},
								useSimple: function () {
									ie = !1;
								},
							}
						),
						o(
							{ target: 'Object', stat: !0, forced: !c, sham: !u },
							{
								create: function (e, t) {
									return void 0 === t ? k(e) : r(k(e), t);
								},
								defineProperty: ae,
								defineProperties: r,
								getOwnPropertyDescriptor: a,
							}
						),
						o(
							{ target: 'Object', stat: !0, forced: !c },
							{ getOwnPropertyNames: d, getOwnPropertySymbols: le }
						),
						o(
							{
								target: 'Object',
								stat: !0,
								forced: f(function () {
									x.f(1);
								}),
							},
							{
								getOwnPropertySymbols: function (e) {
									return x.f(v(e));
								},
							}
						),
						q &&
							o(
								{
									target: 'JSON',
									stat: !0,
									forced:
										!c ||
										f(function () {
											var e = J();
											return (
												'[null]' != q([e]) ||
												'{}' != q({ a: e }) ||
												'{}' != q(Object(e))
											);
										}),
								},
								{
									stringify: function (e, t) {
										for (var n, i = [e], r = 1; r < arguments.length; )
											i.push(arguments[r++]);
										if ((m((n = t)) || void 0 !== e) && !oe(e))
											return (
												p(t) ||
													(t = function (e, t) {
														if (
															('function' == typeof n &&
																(t = n.call(this, e, t)),
															!oe(t))
														)
															return t;
													}),
												(i[1] = t),
												q.apply(null, i)
											);
									},
								}
							),
						J[z][j] || O(J[z], j, J[z].valueOf),
						R(J, B),
						(E[F] = !0);
				},
				function (e, t, n) {
					'use strict';
					var i = n(110),
						x = n(18),
						D = n(35),
						S = n(32),
						T = n(62),
						o = n(38),
						O = n(111),
						Y = n(112),
						C = Math.max,
						j = Math.min,
						E = Math.floor,
						P = /\$([$&'`]|\d\d?|<[^>]*>)/g,
						A = /\$([$&'`]|\d\d?)/g;
					i('replace', 2, function (r, b, k, e) {
						var w = e.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,
							M = e.REPLACE_KEEPS_$0,
							L = w ? '$' : '$0';
						return [
							function (e, t) {
								var n = o(this),
									i = null == e ? void 0 : e[r];
								return void 0 !== i ? i.call(e, n, t) : b.call(String(n), e, t);
							},
							function (e, t) {
								if (
									(!w && M) ||
									('string' == typeof t && -1 === t.indexOf(L))
								) {
									var n = k(b, e, this, t);
									if (n.done) return n.value;
								}
								var i = x(e),
									r = String(this),
									o = 'function' == typeof t;
								o || (t = String(t));
								var a,
									s = i.global;
								s && ((a = i.unicode), (i.lastIndex = 0));
								for (var l = []; ; ) {
									var u = Y(i, r);
									if (null === u) break;
									if ((l.push(u), !s)) break;
									'' === String(u[0]) &&
										(i.lastIndex = O(r, S(i.lastIndex), a));
								}
								for (var c, d = '', f = 0, h = 0; h < l.length; h++) {
									u = l[h];
									for (
										var p = String(u[0]),
											m = C(j(T(u.index), r.length), 0),
											_ = [],
											v = 1;
										v < u.length;
										v++
									)
										_.push(void 0 === (c = u[v]) ? c : String(c));
									var y,
										g = u.groups,
										g = o
											? ((y = [p].concat(_, m, r)),
											  void 0 !== g && y.push(g),
											  String(t.apply(void 0, y)))
											: (function (o, a, s, l, u, e) {
													var c = s + o.length,
														d = l.length,
														t = A;
													void 0 !== u && ((u = D(u)), (t = P));
													return b.call(e, t, function (e, t) {
														var n;
														switch (t.charAt(0)) {
															case '$':
																return '$';
															case '&':
																return o;
															case '`':
																return a.slice(0, s);
															case "'":
																return a.slice(c);
															case '<':
																n = u[t.slice(1, -1)];
																break;
															default:
																var i = +t;
																if (0 == i) return e;
																if (d < i) {
																	var r = E(i / 10);
																	return 0 === r
																		? e
																		: r <= d
																		? void 0 === l[r - 1]
																			? t.charAt(1)
																			: l[r - 1] + t.charAt(1)
																		: e;
																}
																n = l[i - 1];
														}
														return void 0 === n ? '' : n;
													});
											  })(p, r, m, _, g, t);
									f <= m && ((d += r.slice(f, m) + g), (f = m + p.length));
								}
								return d + r.slice(f);
							},
						];
					});
				},
				function (e, t, n) {
					var i = n(22),
						r = n(72),
						o = n(56),
						a = n(34),
						s = n(59),
						l = n(24),
						u = n(119),
						c = Object.getOwnPropertyDescriptor;
					t.f = i
						? c
						: function (e, t) {
								if (((e = a(e)), (t = s(t, !0)), u))
									try {
										return c(e, t);
									} catch (e) {}
								if (l(e, t)) return o(!r.f.call(e, t), e[t]);
						  };
				},
				function (e, t, n) {
					function i(e) {
						return 'function' == typeof e ? e : void 0;
					}
					var r = n(122),
						o = n(14);
					e.exports = function (e, t) {
						return arguments.length < 2
							? i(r[e]) || i(o[e])
							: (r[e] && r[e][t]) || (o[e] && o[e][t]);
					};
				},
				function (e, t) {
					var n = {}.toString;
					e.exports = function (e) {
						return n.call(e).slice(8, -1);
					};
				},
				function (e, t) {
					e.exports = !1;
				},
				function (e, t, n) {
					var b = n(57),
						k = n(58),
						w = n(35),
						M = n(32),
						L = n(96),
						x = [].push,
						n = function (f) {
							var h = 1 == f,
								p = 2 == f,
								m = 3 == f,
								_ = 4 == f,
								v = 6 == f,
								y = 7 == f,
								g = 5 == f || v;
							return function (e, t, n, i) {
								for (
									var r,
										o,
										a = w(e),
										s = k(a),
										l = b(t, n, 3),
										u = M(s.length),
										c = 0,
										i = i || L,
										d = h ? i(e, u) : p || y ? i(e, 0) : void 0;
									c < u;
									c++
								)
									if ((g || c in s) && ((o = l((r = s[c]), c, a)), f))
										if (h) d[c] = o;
										else if (o)
											switch (f) {
												case 3:
													return !0;
												case 5:
													return r;
												case 6:
													return c;
												case 2:
													x.call(d, r);
											}
										else
											switch (f) {
												case 4:
													return !1;
												case 7:
													x.call(d, r);
											}
								return v ? -1 : m || _ ? _ : d;
							};
						};
					e.exports = {
						forEach: n(0),
						map: n(1),
						filter: n(2),
						some: n(3),
						every: n(4),
						find: n(5),
						findIndex: n(6),
						filterOut: n(7),
					};
				},
				function (e, t) {
					e.exports = function (e) {
						if ('function' != typeof e)
							throw TypeError(String(e) + ' is not a function');
						return e;
					};
				},
				function (e, t, n) {
					function i() {}
					function r(e) {
						return '<script>' + e + '</' + h + '>';
					}
					var o,
						a = n(18),
						s = n(125),
						l = n(94),
						u = n(60),
						c = n(126),
						d = n(87),
						n = n(73),
						f = 'prototype',
						h = 'script',
						p = n('IE_PROTO'),
						m = function () {
							try {
								o = document.domain && new ActiveXObject('htmlfile');
							} catch (e) {}
							var e;
							m = o
								? (function (e) {
										e.write(r('')), e.close();
										var t = e.parentWindow.Object;
										return (e = null), t;
								  })(o)
								: (((e = d('iframe')).style.display = 'none'),
								  c.appendChild(e),
								  (e.src = String('javascript:')),
								  (e = e.contentWindow.document).open(),
								  e.write(r('document.F=Object')),
								  e.close(),
								  e.F);
							for (var t = l.length; t--; ) delete m[f][l[t]];
							return m();
						};
					(u[p] = !0),
						(e.exports =
							Object.create ||
							function (e, t) {
								var n;
								return (
									null !== e
										? ((i[f] = a(e)), (n = new i()), (i[f] = null), (n[p] = e))
										: (n = m()),
									void 0 === t ? n : s(n, t)
								);
							});
				},
				function (e, t, n) {
					var i = n(29).f,
						r = n(24),
						o = n(15)('toStringTag');
					e.exports = function (e, t, n) {
						e &&
							!r((e = n ? e : e.prototype), o) &&
							i(e, o, { configurable: !0, value: t });
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(79).trim;
					i(
						{ target: 'String', proto: !0, forced: n(298)('trim') },
						{
							trim: function () {
								return r(this);
							},
						}
					);
				},
				function (e, t, n) {
					'use strict';
					var i,
						r,
						o,
						a,
						s,
						l = n(6),
						u = n(22),
						c = n(14),
						d = n(24),
						f = n(17),
						h = n(29).f,
						n = n(120),
						p = c.Symbol;
					!u ||
						'function' != typeof p ||
						('description' in p.prototype && void 0 === p().description) ||
						((i = {}),
						n(
							(r = function (e) {
								var t =
										arguments.length < 1 || void 0 === e ? void 0 : String(e),
									e = this instanceof r ? new p(t) : void 0 === t ? p() : p(t);
								return '' === t && (i[e] = !0), e;
							}),
							p
						),
						((n = r.prototype = p.prototype).constructor = r),
						(o = n.toString),
						(a = 'Symbol(test)' == String(p('test'))),
						(s = /^Symbol\((.*)\)[^)]+$/),
						h(n, 'description', {
							configurable: !0,
							get: function () {
								var e = f(this) ? this.valueOf() : this,
									t = o.call(e);
								if (d(i, e)) return '';
								t = a ? t.slice(7, -1) : t.replace(s, '$1');
								return '' === t ? void 0 : t;
							},
						}),
						l({ global: !0, forced: !0 }, { Symbol: r }));
				},
				function (e, t, n) {
					n(140)('iterator');
				},
				function (e, t) {
					e.exports = function (e, t) {
						return {
							enumerable: !(1 & e),
							configurable: !(2 & e),
							writable: !(4 & e),
							value: t,
						};
					};
				},
				function (e, t, n) {
					var o = n(50);
					e.exports = function (i, r, e) {
						if ((o(i), void 0 === r)) return i;
						switch (e) {
							case 0:
								return function () {
									return i.call(r);
								};
							case 1:
								return function (e) {
									return i.call(r, e);
								};
							case 2:
								return function (e, t) {
									return i.call(r, e, t);
								};
							case 3:
								return function (e, t, n) {
									return i.call(r, e, t, n);
								};
						}
						return function () {
							return i.apply(r, arguments);
						};
					};
				},
				function (e, t, n) {
					var i = n(10),
						r = n(47),
						o = ''.split;
					e.exports = i(function () {
						return !Object('z').propertyIsEnumerable(0);
					})
						? function (e) {
								return 'String' == r(e) ? o.call(e, '') : Object(e);
						  }
						: Object;
				},
				function (e, t, n) {
					var r = n(17);
					e.exports = function (e, t) {
						if (!r(e)) return e;
						var n, i;
						if (
							t &&
							'function' == typeof (n = e.toString) &&
							!r((i = n.call(e)))
						)
							return i;
						if ('function' == typeof (n = e.valueOf) && !r((i = n.call(e))))
							return i;
						if (
							!t &&
							'function' == typeof (n = e.toString) &&
							!r((i = n.call(e)))
						)
							return i;
						throw TypeError("Can't convert object to primitive value");
					};
				},
				function (e, t) {
					e.exports = {};
				},
				function (e, t, n) {
					var i = n(123),
						r = n(94).concat('length', 'prototype');
					t.f =
						Object.getOwnPropertyNames ||
						function (e) {
							return i(e, r);
						};
				},
				function (e, t) {
					var n = Math.ceil,
						i = Math.floor;
					e.exports = function (e) {
						return isNaN((e = +e)) ? 0 : (0 < e ? i : n)(e);
					};
				},
				function (e, t, n) {
					var i = n(10),
						r = /#|\.prototype\./,
						n = function (e, t) {
							e = a[o(e)];
							return (
								e == l || (e != s && ('function' == typeof t ? i(t) : !!t))
							);
						},
						o = (n.normalize = function (e) {
							return String(e).replace(r, '.').toLowerCase();
						}),
						a = (n.data = {}),
						s = (n.NATIVE = 'N'),
						l = (n.POLYFILL = 'P');
					e.exports = n;
				},
				function (e, t, n) {
					var i = n(123),
						r = n(94);
					e.exports =
						Object.keys ||
						function (e) {
							return i(e, r);
						};
				},
				function (e, t, n) {
					'use strict';
					var i = n(10);
					e.exports = function (e, t) {
						var n = [][e];
						return (
							!!n &&
							i(function () {
								n.call(
									null,
									t ||
										function () {
											throw 1;
										},
									1
								);
							})
						);
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(59),
						r = n(29),
						o = n(56);
					e.exports = function (e, t, n) {
						t = i(t);
						t in e ? r.f(e, t, o(0, n)) : (e[t] = n);
					};
				},
				function (e, t, n) {
					var i = n(10),
						r = n(15),
						o = n(77),
						a = r('species');
					e.exports = function (t) {
						return (
							51 <= o ||
							!i(function () {
								var e = [];
								return (
									((e.constructor = {})[a] = function () {
										return { foo: 1 };
									}),
									1 !== e[t](Boolean).foo
								);
							})
						);
					};
				},
				function (e, t) {
					e.exports = {};
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(45).f,
						o = n(32),
						a = n(144),
						s = n(38),
						l = n(145),
						n = n(48),
						u = ''.startsWith,
						c = Math.min,
						l = l('startsWith');
					i(
						{
							target: 'String',
							proto: !0,
							forced:
								!!(
									n ||
									l ||
									!(r = r(String.prototype, 'startsWith')) ||
									r.writable
								) && !l,
						},
						{
							startsWith: function (e, t) {
								var n = String(s(this));
								a(e);
								(t = o(c(1 < arguments.length ? t : void 0, n.length))),
									(e = String(e));
								return u ? u.call(n, e, t) : n.slice(t, t + e.length) === e;
							},
						}
					);
				},
				function (e, t) {
					e.exports = function (e, t, n) {
						if (!(e instanceof t))
							throw TypeError('Incorrect ' + (n ? n + ' ' : '') + 'invocation');
						return e;
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(49).findIndex,
						o = n(76),
						a = n(36),
						n = 'findIndex',
						s = !0,
						a = a(n);
					n in [] &&
						Array(1)[n](function () {
							s = !1;
						}),
						i(
							{ target: 'Array', proto: !0, forced: s || !a },
							{
								findIndex: function (e, t) {
									return r(this, e, 1 < arguments.length ? t : void 0);
								},
							}
						),
						o(n);
				},
				function (e, t, n) {
					'use strict';
					var i = {}.propertyIsEnumerable,
						r = Object.getOwnPropertyDescriptor,
						o = r && !i.call({ 1: 2 }, 1);
					t.f = o
						? function (e) {
								e = r(this, e);
								return !!e && e.enumerable;
						  }
						: i;
				},
				function (e, t, n) {
					var i = n(91),
						r = n(74),
						o = i('keys');
					e.exports = function (e) {
						return o[e] || (o[e] = r(e));
					};
				},
				function (e, t) {
					var n = 0,
						i = Math.random();
					e.exports = function (e) {
						return (
							'Symbol(' +
							String(void 0 === e ? '' : e) +
							')_' +
							(++n + i).toString(36)
						);
					};
				},
				function (e, t, n) {
					var i = n(47);
					e.exports =
						Array.isArray ||
						function (e) {
							return 'Array' == i(e);
						};
				},
				function (e, t, n) {
					var i = n(15),
						r = n(51),
						n = n(29),
						o = i('unscopables'),
						a = Array.prototype;
					null == a[o] && n.f(a, o, { configurable: !0, value: r(null) }),
						(e.exports = function (e) {
							a[o][e] = !0;
						});
				},
				function (e, t, n) {
					var i,
						r,
						o = n(14),
						n = n(130),
						o = o.process,
						o = o && o.versions,
						o = o && o.v8;
					o
						? (r = (i = o.split('.'))[0] + i[1])
						: n &&
						  (!(i = n.match(/Edge\/(\d+)/)) || 74 <= i[1]) &&
						  (i = n.match(/Chrome\/(\d+)/)) &&
						  (r = i[1]),
						(e.exports = r && +r);
				},
				function (e, t, n) {
					var i = n(101),
						r = n(68),
						o = n(15)('iterator');
					e.exports = function (e) {
						if (null != e) return e[o] || e['@@iterator'] || r[i(e)];
					};
				},
				function (e, t, n) {
					var i = n(38),
						n = '[' + n(80) + ']',
						r = RegExp('^' + n + n + '*'),
						o = RegExp(n + n + '*$'),
						n = function (t) {
							return function (e) {
								e = String(i(e));
								return (
									1 & t && (e = e.replace(r, '')),
									2 & t && (e = e.replace(o, '')),
									e
								);
							};
						};
					e.exports = { start: n(1), end: n(2), trim: n(3) };
				},
				function (e, t) {
					e.exports = '\t\n\v\f\r                　\u2028\u2029\ufeff';
				},
				function (e, t, n) {
					var i = n(6),
						n = n(297);
					i(
						{ target: 'Number', stat: !0, forced: Number.parseFloat != n },
						{ parseFloat: n }
					);
				},
				function (e, t, n) {
					'use strict';
					var i,
						d = n(102),
						r = n(134),
						f = RegExp.prototype.exec,
						h = String.prototype.replace,
						o = f,
						p =
							((i = /a/),
							(n = /b*/g),
							f.call(i, 'a'),
							f.call(n, 'a'),
							0 !== i.lastIndex || 0 !== n.lastIndex),
						m = r.UNSUPPORTED_Y || r.BROKEN_CARET,
						_ = void 0 !== /()??/.exec('')[1];
					(p || _ || m) &&
						(o = function (e) {
							var t,
								n,
								i,
								r,
								o = this,
								a = m && o.sticky,
								s = d.call(o),
								l = o.source,
								u = 0,
								c = e;
							return (
								a &&
									(-1 === (s = s.replace('y', '')).indexOf('g') && (s += 'g'),
									(c = String(e).slice(o.lastIndex)),
									0 < o.lastIndex &&
										(!o.multiline ||
											(o.multiline && '\n' !== e[o.lastIndex - 1])) &&
										((l = '(?: ' + l + ')'), (c = ' ' + c), u++),
									(n = new RegExp('^(?:' + l + ')', s))),
								_ && (n = new RegExp('^' + l + '$(?!\\s)', s)),
								p && (t = o.lastIndex),
								(i = f.call(a ? n : o, c)),
								a
									? i
										? ((i.input = i.input.slice(u)),
										  (i[0] = i[0].slice(u)),
										  (i.index = o.lastIndex),
										  (o.lastIndex += i[0].length))
										: (o.lastIndex = 0)
									: p &&
									  i &&
									  (o.lastIndex = o.global ? i.index + i[0].length : t),
								_ &&
									i &&
									1 < i.length &&
									h.call(i[0], n, function () {
										for (r = 1; r < arguments.length - 2; r++)
											void 0 === arguments[r] && (i[r] = void 0);
									}),
								i
							);
						}),
						(e.exports = o);
				},
				function (e, t, n) {
					'use strict';
					var i = n(146),
						n = n(148);
					e.exports = i(
						'Set',
						function (t) {
							return function (e) {
								return t(this, arguments.length ? e : void 0);
							};
						},
						n
					);
				},
				function (e, t, n) {
					var i = n(6),
						n = n(303);
					i(
						{ target: 'Number', stat: !0, forced: Number.parseInt != n },
						{ parseInt: n }
					);
				},
				function (e, t, n) {
					var i = n(47),
						n = n(14);
					e.exports = 'process' == i(n.process);
				},
				function (e, t, n) {
					/*!
					 * Chart.js v2.9.4
					 * https://www.chartjs.org
					 * (c) 2020 Chart.js Contributors
					 * Released under the MIT License
					 */
					e.exports = (function (i) {
						'use strict';
						function e(e, t) {
							return (t = { exports: {} }), e(t, t.exports), t.exports;
						}
						function t(e) {
							return (e && e['default']) || e;
						}
						i = i && i.hasOwnProperty('default') ? i['default'] : i;
						var c = {
								aliceblue: [240, 248, 255],
								antiquewhite: [250, 235, 215],
								aqua: [0, 255, 255],
								aquamarine: [127, 255, 212],
								azure: [240, 255, 255],
								beige: [245, 245, 220],
								bisque: [255, 228, 196],
								black: [0, 0, 0],
								blanchedalmond: [255, 235, 205],
								blue: [0, 0, 255],
								blueviolet: [138, 43, 226],
								brown: [165, 42, 42],
								burlywood: [222, 184, 135],
								cadetblue: [95, 158, 160],
								chartreuse: [127, 255, 0],
								chocolate: [210, 105, 30],
								coral: [255, 127, 80],
								cornflowerblue: [100, 149, 237],
								cornsilk: [255, 248, 220],
								crimson: [220, 20, 60],
								cyan: [0, 255, 255],
								darkblue: [0, 0, 139],
								darkcyan: [0, 139, 139],
								darkgoldenrod: [184, 134, 11],
								darkgray: [169, 169, 169],
								darkgreen: [0, 100, 0],
								darkgrey: [169, 169, 169],
								darkkhaki: [189, 183, 107],
								darkmagenta: [139, 0, 139],
								darkolivegreen: [85, 107, 47],
								darkorange: [255, 140, 0],
								darkorchid: [153, 50, 204],
								darkred: [139, 0, 0],
								darksalmon: [233, 150, 122],
								darkseagreen: [143, 188, 143],
								darkslateblue: [72, 61, 139],
								darkslategray: [47, 79, 79],
								darkslategrey: [47, 79, 79],
								darkturquoise: [0, 206, 209],
								darkviolet: [148, 0, 211],
								deeppink: [255, 20, 147],
								deepskyblue: [0, 191, 255],
								dimgray: [105, 105, 105],
								dimgrey: [105, 105, 105],
								dodgerblue: [30, 144, 255],
								firebrick: [178, 34, 34],
								floralwhite: [255, 250, 240],
								forestgreen: [34, 139, 34],
								fuchsia: [255, 0, 255],
								gainsboro: [220, 220, 220],
								ghostwhite: [248, 248, 255],
								gold: [255, 215, 0],
								goldenrod: [218, 165, 32],
								gray: [128, 128, 128],
								green: [0, 128, 0],
								greenyellow: [173, 255, 47],
								grey: [128, 128, 128],
								honeydew: [240, 255, 240],
								hotpink: [255, 105, 180],
								indianred: [205, 92, 92],
								indigo: [75, 0, 130],
								ivory: [255, 255, 240],
								khaki: [240, 230, 140],
								lavender: [230, 230, 250],
								lavenderblush: [255, 240, 245],
								lawngreen: [124, 252, 0],
								lemonchiffon: [255, 250, 205],
								lightblue: [173, 216, 230],
								lightcoral: [240, 128, 128],
								lightcyan: [224, 255, 255],
								lightgoldenrodyellow: [250, 250, 210],
								lightgray: [211, 211, 211],
								lightgreen: [144, 238, 144],
								lightgrey: [211, 211, 211],
								lightpink: [255, 182, 193],
								lightsalmon: [255, 160, 122],
								lightseagreen: [32, 178, 170],
								lightskyblue: [135, 206, 250],
								lightslategray: [119, 136, 153],
								lightslategrey: [119, 136, 153],
								lightsteelblue: [176, 196, 222],
								lightyellow: [255, 255, 224],
								lime: [0, 255, 0],
								limegreen: [50, 205, 50],
								linen: [250, 240, 230],
								magenta: [255, 0, 255],
								maroon: [128, 0, 0],
								mediumaquamarine: [102, 205, 170],
								mediumblue: [0, 0, 205],
								mediumorchid: [186, 85, 211],
								mediumpurple: [147, 112, 219],
								mediumseagreen: [60, 179, 113],
								mediumslateblue: [123, 104, 238],
								mediumspringgreen: [0, 250, 154],
								mediumturquoise: [72, 209, 204],
								mediumvioletred: [199, 21, 133],
								midnightblue: [25, 25, 112],
								mintcream: [245, 255, 250],
								mistyrose: [255, 228, 225],
								moccasin: [255, 228, 181],
								navajowhite: [255, 222, 173],
								navy: [0, 0, 128],
								oldlace: [253, 245, 230],
								olive: [128, 128, 0],
								olivedrab: [107, 142, 35],
								orange: [255, 165, 0],
								orangered: [255, 69, 0],
								orchid: [218, 112, 214],
								palegoldenrod: [238, 232, 170],
								palegreen: [152, 251, 152],
								paleturquoise: [175, 238, 238],
								palevioletred: [219, 112, 147],
								papayawhip: [255, 239, 213],
								peachpuff: [255, 218, 185],
								peru: [205, 133, 63],
								pink: [255, 192, 203],
								plum: [221, 160, 221],
								powderblue: [176, 224, 230],
								purple: [128, 0, 128],
								rebeccapurple: [102, 51, 153],
								red: [255, 0, 0],
								rosybrown: [188, 143, 143],
								royalblue: [65, 105, 225],
								saddlebrown: [139, 69, 19],
								salmon: [250, 128, 114],
								sandybrown: [244, 164, 96],
								seagreen: [46, 139, 87],
								seashell: [255, 245, 238],
								sienna: [160, 82, 45],
								silver: [192, 192, 192],
								skyblue: [135, 206, 235],
								slateblue: [106, 90, 205],
								slategray: [112, 128, 144],
								slategrey: [112, 128, 144],
								snow: [255, 250, 250],
								springgreen: [0, 255, 127],
								steelblue: [70, 130, 180],
								tan: [210, 180, 140],
								teal: [0, 128, 128],
								thistle: [216, 191, 216],
								tomato: [255, 99, 71],
								turquoise: [64, 224, 208],
								violet: [238, 130, 238],
								wheat: [245, 222, 179],
								white: [255, 255, 255],
								whitesmoke: [245, 245, 245],
								yellow: [255, 255, 0],
								yellowgreen: [154, 205, 50],
							},
							u = e(function (e) {
								var s = {};
								for (var t in c) if (c.hasOwnProperty(t)) s[c[t]] = t;
								var l = (e.exports = {
									rgb: { channels: 3, labels: 'rgb' },
									hsl: { channels: 3, labels: 'hsl' },
									hsv: { channels: 3, labels: 'hsv' },
									hwb: { channels: 3, labels: 'hwb' },
									cmyk: { channels: 4, labels: 'cmyk' },
									xyz: { channels: 3, labels: 'xyz' },
									lab: { channels: 3, labels: 'lab' },
									lch: { channels: 3, labels: 'lch' },
									hex: { channels: 1, labels: ['hex'] },
									keyword: { channels: 1, labels: ['keyword'] },
									ansi16: { channels: 1, labels: ['ansi16'] },
									ansi256: { channels: 1, labels: ['ansi256'] },
									hcg: { channels: 3, labels: ['h', 'c', 'g'] },
									apple: { channels: 3, labels: ['r16', 'g16', 'b16'] },
									gray: { channels: 1, labels: ['gray'] },
								});
								for (var n in l)
									if (l.hasOwnProperty(n)) {
										if (!('channels' in l[n]))
											throw new Error('missing channels property: ' + n);
										if (!('labels' in l[n]))
											throw new Error('missing channel labels property: ' + n);
										if (l[n].labels.length !== l[n].channels)
											throw new Error(
												'channel and label counts mismatch: ' + n
											);
										var i = l[n].channels;
										var r = l[n].labels;
										delete l[n].channels;
										delete l[n].labels;
										Object.defineProperty(l[n], 'channels', { value: i });
										Object.defineProperty(l[n], 'labels', { value: r });
									}
								l.rgb.hsl = function (e) {
									var t = e[0] / 255;
									var n = e[1] / 255;
									var i = e[2] / 255;
									var r = Math.min(t, n, i);
									var o = Math.max(t, n, i);
									var a = o - r;
									var s;
									var l;
									var u;
									if (o === r) s = 0;
									else if (t === o) s = (n - i) / a;
									else if (n === o) s = 2 + (i - t) / a;
									else if (i === o) s = 4 + (t - n) / a;
									s = Math.min(s * 60, 360);
									if (s < 0) s += 360;
									u = (r + o) / 2;
									if (o === r) l = 0;
									else if (u <= 0.5) l = a / (o + r);
									else l = a / (2 - o - r);
									return [s, l * 100, u * 100];
								};
								l.rgb.hsv = function (e) {
									var t;
									var n;
									var i;
									var r;
									var o;
									var a = e[0] / 255;
									var s = e[1] / 255;
									var l = e[2] / 255;
									var u = Math.max(a, s, l);
									var c = u - Math.min(a, s, l);
									var d = function (e) {
										return (u - e) / 6 / c + 1 / 2;
									};
									if (c === 0) r = o = 0;
									else {
										o = c / u;
										t = d(a);
										n = d(s);
										i = d(l);
										if (a === u) r = i - n;
										else if (s === u) r = 1 / 3 + t - i;
										else if (l === u) r = 2 / 3 + n - t;
										if (r < 0) r += 1;
										else if (r > 1) r -= 1;
									}
									return [r * 360, o * 100, u * 100];
								};
								l.rgb.hwb = function (e) {
									var t = e[0];
									var n = e[1];
									var i = e[2];
									var r = l.rgb.hsl(e)[0];
									var o = (1 / 255) * Math.min(t, Math.min(n, i));
									i = 1 - (1 / 255) * Math.max(t, Math.max(n, i));
									return [r, o * 100, i * 100];
								};
								l.rgb.cmyk = function (e) {
									var t = e[0] / 255;
									var n = e[1] / 255;
									var i = e[2] / 255;
									var r;
									var o;
									var a;
									var s;
									s = Math.min(1 - t, 1 - n, 1 - i);
									r = (1 - t - s) / (1 - s) || 0;
									o = (1 - n - s) / (1 - s) || 0;
									a = (1 - i - s) / (1 - s) || 0;
									return [r * 100, o * 100, a * 100, s * 100];
								};
								function u(e, t) {
									return (
										Math.pow(e[0] - t[0], 2) +
										Math.pow(e[1] - t[1], 2) +
										Math.pow(e[2] - t[2], 2)
									);
								}
								l.rgb.keyword = function (e) {
									var t = s[e];
									if (t) return t;
									var n = Infinity;
									var i;
									for (var r in c)
										if (c.hasOwnProperty(r)) {
											var o = c[r];
											var a = u(e, o);
											if (a < n) {
												n = a;
												i = r;
											}
										}
									return i;
								};
								l.keyword.rgb = function (e) {
									return c[e];
								};
								l.rgb.xyz = function (e) {
									var t = e[0] / 255;
									var n = e[1] / 255;
									var i = e[2] / 255;
									t =
										t > 0.04045
											? Math.pow((t + 0.055) / 1.055, 2.4)
											: t / 12.92;
									n =
										n > 0.04045
											? Math.pow((n + 0.055) / 1.055, 2.4)
											: n / 12.92;
									i =
										i > 0.04045
											? Math.pow((i + 0.055) / 1.055, 2.4)
											: i / 12.92;
									var r = t * 0.4124 + n * 0.3576 + i * 0.1805;
									var o = t * 0.2126 + n * 0.7152 + i * 0.0722;
									var a = t * 0.0193 + n * 0.1192 + i * 0.9505;
									return [r * 100, o * 100, a * 100];
								};
								l.rgb.lab = function (e) {
									var t = l.rgb.xyz(e);
									var n = t[0];
									var i = t[1];
									var r = t[2];
									var o;
									var a;
									var s;
									n /= 95.047;
									i /= 100;
									r /= 108.883;
									n = n > 0.008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116;
									i = i > 0.008856 ? Math.pow(i, 1 / 3) : 7.787 * i + 16 / 116;
									r = r > 0.008856 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116;
									o = 116 * i - 16;
									a = 500 * (n - i);
									s = 200 * (i - r);
									return [o, a, s];
								};
								l.hsl.rgb = function (e) {
									var t = e[0] / 360;
									var n = e[1] / 100;
									var i = e[2] / 100;
									var r;
									var o;
									var a;
									var s;
									var l;
									if (n === 0) {
										l = i * 255;
										return [l, l, l];
									}
									if (i < 0.5) o = i * (1 + n);
									else o = i + n - i * n;
									r = 2 * i - o;
									s = [0, 0, 0];
									for (var u = 0; u < 3; u++) {
										a = t + (1 / 3) * -(u - 1);
										if (a < 0) a++;
										if (a > 1) a--;
										if (6 * a < 1) l = r + (o - r) * 6 * a;
										else if (2 * a < 1) l = o;
										else if (3 * a < 2) l = r + (o - r) * (2 / 3 - a) * 6;
										else l = r;
										s[u] = l * 255;
									}
									return s;
								};
								l.hsl.hsv = function (e) {
									var t = e[0];
									var n = e[1] / 100;
									var i = e[2] / 100;
									var r = n;
									var o = Math.max(i, 0.01);
									var a;
									var s;
									i *= 2;
									n *= i <= 1 ? i : 2 - i;
									r *= o <= 1 ? o : 2 - o;
									s = (i + n) / 2;
									a = i === 0 ? (2 * r) / (o + r) : (2 * n) / (i + n);
									return [t, a * 100, s * 100];
								};
								l.hsv.rgb = function (e) {
									var t = e[0] / 60;
									var n = e[1] / 100;
									var i = e[2] / 100;
									var r = Math.floor(t) % 6;
									var o = t - Math.floor(t);
									var a = 255 * i * (1 - n);
									var s = 255 * i * (1 - n * o);
									var l = 255 * i * (1 - n * (1 - o));
									i *= 255;
									switch (r) {
										case 0:
											return [i, l, a];
										case 1:
											return [s, i, a];
										case 2:
											return [a, i, l];
										case 3:
											return [a, s, i];
										case 4:
											return [l, a, i];
										case 5:
											return [i, a, s];
									}
								};
								l.hsv.hsl = function (e) {
									var t = e[0];
									var n = e[1] / 100;
									var i = e[2] / 100;
									var r = Math.max(i, 0.01);
									var o;
									var a;
									var s;
									s = (2 - n) * i;
									o = (2 - n) * r;
									a = n * r;
									a /= o <= 1 ? o : 2 - o;
									a = a || 0;
									s /= 2;
									return [t, a * 100, s * 100];
								};
								l.hwb.rgb = function (e) {
									var t = e[0] / 360;
									var n = e[1] / 100;
									var i = e[2] / 100;
									var r = n + i;
									var o;
									var a;
									var s;
									var l;
									if (r > 1) {
										n /= r;
										i /= r;
									}
									o = Math.floor(6 * t);
									a = 1 - i;
									s = 6 * t - o;
									if ((o & 1) !== 0) s = 1 - s;
									l = n + s * (a - n);
									var u;
									var c;
									var d;
									switch (o) {
										default:
										case 6:
										case 0:
											u = a;
											c = l;
											d = n;
											break;
										case 1:
											u = l;
											c = a;
											d = n;
											break;
										case 2:
											u = n;
											c = a;
											d = l;
											break;
										case 3:
											u = n;
											c = l;
											d = a;
											break;
										case 4:
											u = l;
											c = n;
											d = a;
											break;
										case 5:
											u = a;
											c = n;
											d = l;
											break;
									}
									return [u * 255, c * 255, d * 255];
								};
								l.cmyk.rgb = function (e) {
									var t = e[0] / 100;
									var n = e[1] / 100;
									var i = e[2] / 100;
									var r = e[3] / 100;
									var o;
									var a;
									var s;
									o = 1 - Math.min(1, t * (1 - r) + r);
									a = 1 - Math.min(1, n * (1 - r) + r);
									s = 1 - Math.min(1, i * (1 - r) + r);
									return [o * 255, a * 255, s * 255];
								};
								l.xyz.rgb = function (e) {
									var t = e[0] / 100;
									var n = e[1] / 100;
									var i = e[2] / 100;
									var r;
									var o;
									var a;
									r = t * 3.2406 + n * -1.5372 + i * -0.4986;
									o = t * -0.9689 + n * 1.8758 + i * 0.0415;
									a = t * 0.0557 + n * -0.204 + i * 1.057;
									r =
										r > 0.0031308
											? 1.055 * Math.pow(r, 1 / 2.4) - 0.055
											: r * 12.92;
									o =
										o > 0.0031308
											? 1.055 * Math.pow(o, 1 / 2.4) - 0.055
											: o * 12.92;
									a =
										a > 0.0031308
											? 1.055 * Math.pow(a, 1 / 2.4) - 0.055
											: a * 12.92;
									r = Math.min(Math.max(0, r), 1);
									o = Math.min(Math.max(0, o), 1);
									a = Math.min(Math.max(0, a), 1);
									return [r * 255, o * 255, a * 255];
								};
								l.xyz.lab = function (e) {
									var t = e[0];
									var n = e[1];
									var i = e[2];
									var r;
									var o;
									var a;
									t /= 95.047;
									n /= 100;
									i /= 108.883;
									t = t > 0.008856 ? Math.pow(t, 1 / 3) : 7.787 * t + 16 / 116;
									n = n > 0.008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116;
									i = i > 0.008856 ? Math.pow(i, 1 / 3) : 7.787 * i + 16 / 116;
									r = 116 * n - 16;
									o = 500 * (t - n);
									a = 200 * (n - i);
									return [r, o, a];
								};
								l.lab.xyz = function (e) {
									var t = e[0];
									var n = e[1];
									var i = e[2];
									var r;
									var o;
									var a;
									o = (t + 16) / 116;
									r = n / 500 + o;
									a = o - i / 200;
									var s = Math.pow(o, 3);
									var l = Math.pow(r, 3);
									var u = Math.pow(a, 3);
									o = s > 0.008856 ? s : (o - 16 / 116) / 7.787;
									r = l > 0.008856 ? l : (r - 16 / 116) / 7.787;
									a = u > 0.008856 ? u : (a - 16 / 116) / 7.787;
									r *= 95.047;
									o *= 100;
									a *= 108.883;
									return [r, o, a];
								};
								l.lab.lch = function (e) {
									var t = e[0];
									var n = e[1];
									var i = e[2];
									var r;
									var o;
									var a;
									r = Math.atan2(i, n);
									o = (r * 360) / 2 / Math.PI;
									if (o < 0) o += 360;
									a = Math.sqrt(n * n + i * i);
									return [t, a, o];
								};
								l.lch.lab = function (e) {
									var t = e[0];
									var n = e[1];
									var i = e[2];
									var r;
									var o;
									var a;
									a = (i / 360) * 2 * Math.PI;
									r = n * Math.cos(a);
									o = n * Math.sin(a);
									return [t, r, o];
								};
								l.rgb.ansi16 = function (e) {
									var t = e[0];
									var n = e[1];
									var i = e[2];
									var r = 1 in arguments ? arguments[1] : l.rgb.hsv(e)[2];
									r = Math.round(r / 50);
									if (r === 0) return 30;
									var o =
										30 +
										((Math.round(i / 255) << 2) |
											(Math.round(n / 255) << 1) |
											Math.round(t / 255));
									if (r === 2) o += 60;
									return o;
								};
								l.hsv.ansi16 = function (e) {
									return l.rgb.ansi16(l.hsv.rgb(e), e[2]);
								};
								l.rgb.ansi256 = function (e) {
									var t = e[0];
									var n = e[1];
									var i = e[2];
									if (t === n && n === i) {
										if (t < 8) return 16;
										if (t > 248) return 231;
										return Math.round(((t - 8) / 247) * 24) + 232;
									}
									var r =
										16 +
										36 * Math.round((t / 255) * 5) +
										6 * Math.round((n / 255) * 5) +
										Math.round((i / 255) * 5);
									return r;
								};
								l.ansi16.rgb = function (e) {
									var t = e % 10;
									if (t === 0 || t === 7) {
										if (e > 50) t += 3.5;
										t = (t / 10.5) * 255;
										return [t, t, t];
									}
									var n = (~~(e > 50) + 1) * 0.5;
									var i = (t & 1) * n * 255;
									var r = ((t >> 1) & 1) * n * 255;
									var o = ((t >> 2) & 1) * n * 255;
									return [i, r, o];
								};
								l.ansi256.rgb = function (e) {
									if (e >= 232) {
										var t = (e - 232) * 10 + 8;
										return [t, t, t];
									}
									e -= 16;
									var n;
									var i = (Math.floor(e / 36) / 5) * 255;
									var r = (Math.floor((n = e % 36) / 6) / 5) * 255;
									var o = ((n % 6) / 5) * 255;
									return [i, r, o];
								};
								l.rgb.hex = function (e) {
									var t =
										((Math.round(e[0]) & 255) << 16) +
										((Math.round(e[1]) & 255) << 8) +
										(Math.round(e[2]) & 255);
									var n = t.toString(16).toUpperCase();
									return '000000'.substring(n.length) + n;
								};
								l.hex.rgb = function (e) {
									var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
									if (!t) return [0, 0, 0];
									var n = t[0];
									if (t[0].length === 3)
										n = n
											.split('')
											.map(function (e) {
												return e + e;
											})
											.join('');
									var i = parseInt(n, 16);
									var r = (i >> 16) & 255;
									var o = (i >> 8) & 255;
									var a = i & 255;
									return [r, o, a];
								};
								l.rgb.hcg = function (e) {
									var t = e[0] / 255;
									var n = e[1] / 255;
									var i = e[2] / 255;
									var r = Math.max(Math.max(t, n), i);
									var o = Math.min(Math.min(t, n), i);
									var a = r - o;
									var s;
									var l;
									if (a < 1) s = o / (1 - a);
									else s = 0;
									if (a <= 0) l = 0;
									else if (r === t) l = ((n - i) / a) % 6;
									else if (r === n) l = 2 + (i - t) / a;
									else l = 4 + (t - n) / a + 4;
									l /= 6;
									l %= 1;
									return [l * 360, a * 100, s * 100];
								};
								l.hsl.hcg = function (e) {
									var t = e[1] / 100;
									var n = e[2] / 100;
									var i = 1;
									var r = 0;
									if (n < 0.5) i = 2 * t * n;
									else i = 2 * t * (1 - n);
									if (i < 1) r = (n - 0.5 * i) / (1 - i);
									return [e[0], i * 100, r * 100];
								};
								l.hsv.hcg = function (e) {
									var t = e[1] / 100;
									var n = e[2] / 100;
									var i = t * n;
									var r = 0;
									if (i < 1) r = (n - i) / (1 - i);
									return [e[0], i * 100, r * 100];
								};
								l.hcg.rgb = function (e) {
									var t = e[0] / 360;
									var n = e[1] / 100;
									var i = e[2] / 100;
									if (n === 0) return [i * 255, i * 255, i * 255];
									var r = [0, 0, 0];
									var o = (t % 1) * 6;
									var a = o % 1;
									var s = 1 - a;
									var l = 0;
									switch (Math.floor(o)) {
										case 0:
											r[0] = 1;
											r[1] = a;
											r[2] = 0;
											break;
										case 1:
											r[0] = s;
											r[1] = 1;
											r[2] = 0;
											break;
										case 2:
											r[0] = 0;
											r[1] = 1;
											r[2] = a;
											break;
										case 3:
											r[0] = 0;
											r[1] = s;
											r[2] = 1;
											break;
										case 4:
											r[0] = a;
											r[1] = 0;
											r[2] = 1;
											break;
										default:
											r[0] = 1;
											r[1] = 0;
											r[2] = s;
									}
									l = (1 - n) * i;
									return [
										(n * r[0] + l) * 255,
										(n * r[1] + l) * 255,
										(n * r[2] + l) * 255,
									];
								};
								l.hcg.hsv = function (e) {
									var t = e[1] / 100;
									var n = e[2] / 100;
									var i = t + n * (1 - t);
									var r = 0;
									if (i > 0) r = t / i;
									return [e[0], r * 100, i * 100];
								};
								l.hcg.hsl = function (e) {
									var t = e[1] / 100;
									var n = e[2] / 100;
									var i = n * (1 - t) + 0.5 * t;
									var r = 0;
									if (i > 0 && i < 0.5) r = t / (2 * i);
									else if (i >= 0.5 && i < 1) r = t / (2 * (1 - i));
									return [e[0], r * 100, i * 100];
								};
								l.hcg.hwb = function (e) {
									var t = e[1] / 100;
									var n = e[2] / 100;
									var i = t + n * (1 - t);
									return [e[0], (i - t) * 100, (1 - i) * 100];
								};
								l.hwb.hcg = function (e) {
									var t = e[1] / 100;
									var n = e[2] / 100;
									var i = 1 - n;
									var r = i - t;
									var o = 0;
									if (r < 1) o = (i - r) / (1 - r);
									return [e[0], r * 100, o * 100];
								};
								l.apple.rgb = function (e) {
									return [
										(e[0] / 65535) * 255,
										(e[1] / 65535) * 255,
										(e[2] / 65535) * 255,
									];
								};
								l.rgb.apple = function (e) {
									return [
										(e[0] / 255) * 65535,
										(e[1] / 255) * 65535,
										(e[2] / 255) * 65535,
									];
								};
								l.gray.rgb = function (e) {
									return [
										(e[0] / 100) * 255,
										(e[0] / 100) * 255,
										(e[0] / 100) * 255,
									];
								};
								l.gray.hsl = l.gray.hsv = function (e) {
									return [0, 0, e[0]];
								};
								l.gray.hwb = function (e) {
									return [0, 100, e[0]];
								};
								l.gray.cmyk = function (e) {
									return [0, 0, 0, e[0]];
								};
								l.gray.lab = function (e) {
									return [e[0], 0, 0];
								};
								l.gray.hex = function (e) {
									var t = Math.round((e[0] / 100) * 255) & 255;
									var n = (t << 16) + (t << 8) + t;
									var i = n.toString(16).toUpperCase();
									return '000000'.substring(i.length) + i;
								};
								l.rgb.gray = function (e) {
									var t = (e[0] + e[1] + e[2]) / 3;
									return [(t / 255) * 100];
								};
							}),
							n = u.rgb,
							r = u.hsl,
							o = u.hsv,
							a = u.hwb,
							s = u.cmyk,
							l = u.xyz,
							d = u.lab,
							f = u.lch,
							h = u.hex,
							p = u.keyword,
							m = u.ansi16,
							_ = u.ansi256,
							v = u.hcg,
							y = u.apple,
							g = u.gray;
						function b() {
							var e = {};
							var t = Object.keys(u);
							for (var n = t.length, i = 0; i < n; i++)
								e[t[i]] = { distance: -1, parent: null };
							return e;
						}
						function k(e) {
							var t = b();
							var n = [e];
							t[e].distance = 0;
							while (n.length) {
								var i = n.pop();
								var r = Object.keys(u[i]);
								for (var o = r.length, a = 0; a < o; a++) {
									var s = r[a];
									var l = t[s];
									if (l.distance === -1) {
										l.distance = t[i].distance + 1;
										l.parent = i;
										n.unshift(s);
									}
								}
							}
							return t;
						}
						function w(t, n) {
							return function (e) {
								return n(t(e));
							};
						}
						function M(e, t) {
							var n = [t[e].parent, e];
							var i = u[t[e].parent][e];
							var r = t[e].parent;
							while (t[r].parent) {
								n.unshift(t[r].parent);
								i = w(u[t[r].parent][r], i);
								r = t[r].parent;
							}
							i.conversion = n;
							return i;
						}
						var L = function (e) {
								var t = k(e);
								var n = {};
								var i = Object.keys(t);
								for (var r = i.length, o = 0; o < r; o++) {
									var a = i[o];
									var s = t[a];
									if (s.parent === null) continue;
									n[a] = M(a, t);
								}
								return n;
							},
							x = {},
							D;
						function S(t) {
							var e = function (e) {
								if (e === undefined || e === null) return e;
								if (arguments.length > 1)
									e = Array.prototype.slice.call(arguments);
								return t(e);
							};
							if ('conversion' in t) e.conversion = t.conversion;
							return e;
						}
						function T(r) {
							var e = function (e) {
								if (e === undefined || e === null) return e;
								if (arguments.length > 1)
									e = Array.prototype.slice.call(arguments);
								var t = r(e);
								if (typeof t === 'object')
									for (var n = t.length, i = 0; i < n; i++)
										t[i] = Math.round(t[i]);
								return t;
							};
							if ('conversion' in r) e.conversion = r.conversion;
							return e;
						}
						Object.keys(u).forEach(function (n) {
							x[n] = {};
							Object.defineProperty(x[n], 'channels', { value: u[n].channels });
							Object.defineProperty(x[n], 'labels', { value: u[n].labels });
							var i = L(n);
							var e = Object.keys(i);
							e.forEach(function (e) {
								var t = i[e];
								x[n][e] = T(t);
								x[n][e].raw = S(t);
							});
						});
						var O = x,
							Y = {
								aliceblue: [240, 248, 255],
								antiquewhite: [250, 235, 215],
								aqua: [0, 255, 255],
								aquamarine: [127, 255, 212],
								azure: [240, 255, 255],
								beige: [245, 245, 220],
								bisque: [255, 228, 196],
								black: [0, 0, 0],
								blanchedalmond: [255, 235, 205],
								blue: [0, 0, 255],
								blueviolet: [138, 43, 226],
								brown: [165, 42, 42],
								burlywood: [222, 184, 135],
								cadetblue: [95, 158, 160],
								chartreuse: [127, 255, 0],
								chocolate: [210, 105, 30],
								coral: [255, 127, 80],
								cornflowerblue: [100, 149, 237],
								cornsilk: [255, 248, 220],
								crimson: [220, 20, 60],
								cyan: [0, 255, 255],
								darkblue: [0, 0, 139],
								darkcyan: [0, 139, 139],
								darkgoldenrod: [184, 134, 11],
								darkgray: [169, 169, 169],
								darkgreen: [0, 100, 0],
								darkgrey: [169, 169, 169],
								darkkhaki: [189, 183, 107],
								darkmagenta: [139, 0, 139],
								darkolivegreen: [85, 107, 47],
								darkorange: [255, 140, 0],
								darkorchid: [153, 50, 204],
								darkred: [139, 0, 0],
								darksalmon: [233, 150, 122],
								darkseagreen: [143, 188, 143],
								darkslateblue: [72, 61, 139],
								darkslategray: [47, 79, 79],
								darkslategrey: [47, 79, 79],
								darkturquoise: [0, 206, 209],
								darkviolet: [148, 0, 211],
								deeppink: [255, 20, 147],
								deepskyblue: [0, 191, 255],
								dimgray: [105, 105, 105],
								dimgrey: [105, 105, 105],
								dodgerblue: [30, 144, 255],
								firebrick: [178, 34, 34],
								floralwhite: [255, 250, 240],
								forestgreen: [34, 139, 34],
								fuchsia: [255, 0, 255],
								gainsboro: [220, 220, 220],
								ghostwhite: [248, 248, 255],
								gold: [255, 215, 0],
								goldenrod: [218, 165, 32],
								gray: [128, 128, 128],
								green: [0, 128, 0],
								greenyellow: [173, 255, 47],
								grey: [128, 128, 128],
								honeydew: [240, 255, 240],
								hotpink: [255, 105, 180],
								indianred: [205, 92, 92],
								indigo: [75, 0, 130],
								ivory: [255, 255, 240],
								khaki: [240, 230, 140],
								lavender: [230, 230, 250],
								lavenderblush: [255, 240, 245],
								lawngreen: [124, 252, 0],
								lemonchiffon: [255, 250, 205],
								lightblue: [173, 216, 230],
								lightcoral: [240, 128, 128],
								lightcyan: [224, 255, 255],
								lightgoldenrodyellow: [250, 250, 210],
								lightgray: [211, 211, 211],
								lightgreen: [144, 238, 144],
								lightgrey: [211, 211, 211],
								lightpink: [255, 182, 193],
								lightsalmon: [255, 160, 122],
								lightseagreen: [32, 178, 170],
								lightskyblue: [135, 206, 250],
								lightslategray: [119, 136, 153],
								lightslategrey: [119, 136, 153],
								lightsteelblue: [176, 196, 222],
								lightyellow: [255, 255, 224],
								lime: [0, 255, 0],
								limegreen: [50, 205, 50],
								linen: [250, 240, 230],
								magenta: [255, 0, 255],
								maroon: [128, 0, 0],
								mediumaquamarine: [102, 205, 170],
								mediumblue: [0, 0, 205],
								mediumorchid: [186, 85, 211],
								mediumpurple: [147, 112, 219],
								mediumseagreen: [60, 179, 113],
								mediumslateblue: [123, 104, 238],
								mediumspringgreen: [0, 250, 154],
								mediumturquoise: [72, 209, 204],
								mediumvioletred: [199, 21, 133],
								midnightblue: [25, 25, 112],
								mintcream: [245, 255, 250],
								mistyrose: [255, 228, 225],
								moccasin: [255, 228, 181],
								navajowhite: [255, 222, 173],
								navy: [0, 0, 128],
								oldlace: [253, 245, 230],
								olive: [128, 128, 0],
								olivedrab: [107, 142, 35],
								orange: [255, 165, 0],
								orangered: [255, 69, 0],
								orchid: [218, 112, 214],
								palegoldenrod: [238, 232, 170],
								palegreen: [152, 251, 152],
								paleturquoise: [175, 238, 238],
								palevioletred: [219, 112, 147],
								papayawhip: [255, 239, 213],
								peachpuff: [255, 218, 185],
								peru: [205, 133, 63],
								pink: [255, 192, 203],
								plum: [221, 160, 221],
								powderblue: [176, 224, 230],
								purple: [128, 0, 128],
								rebeccapurple: [102, 51, 153],
								red: [255, 0, 0],
								rosybrown: [188, 143, 143],
								royalblue: [65, 105, 225],
								saddlebrown: [139, 69, 19],
								salmon: [250, 128, 114],
								sandybrown: [244, 164, 96],
								seagreen: [46, 139, 87],
								seashell: [255, 245, 238],
								sienna: [160, 82, 45],
								silver: [192, 192, 192],
								skyblue: [135, 206, 235],
								slateblue: [106, 90, 205],
								slategray: [112, 128, 144],
								slategrey: [112, 128, 144],
								snow: [255, 250, 250],
								springgreen: [0, 255, 127],
								steelblue: [70, 130, 180],
								tan: [210, 180, 140],
								teal: [0, 128, 128],
								thistle: [216, 191, 216],
								tomato: [255, 99, 71],
								turquoise: [64, 224, 208],
								violet: [238, 130, 238],
								wheat: [245, 222, 179],
								white: [255, 255, 255],
								whitesmoke: [245, 245, 245],
								yellow: [255, 255, 0],
								yellowgreen: [154, 205, 50],
							},
							C = {
								getRgba: j,
								getHsla: E,
								getRgb: A,
								getHsl: H,
								getHwb: P,
								getAlpha: I,
								hexString: R,
								rgbString: N,
								rgbaString: W,
								percentString: F,
								percentaString: B,
								hslString: z,
								hslaString: V,
								hwbString: U,
								keyword: X,
							};
						function j(e) {
							if (!e) return;
							var t = /^#([a-fA-F0-9]{3,4})$/i,
								n = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,
								i =
									/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
								r =
									/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
								o = /(\w+)/;
							var a = [0, 0, 0],
								s = 1,
								l = e.match(t),
								u = '';
							if (l) {
								l = l[1];
								u = l[3];
								for (var c = 0; c < a.length; c++)
									a[c] = parseInt(l[c] + l[c], 16);
								if (u) s = Math.round((parseInt(u + u, 16) / 255) * 100) / 100;
							} else if ((l = e.match(n))) {
								u = l[2];
								l = l[1];
								for (var c = 0; c < a.length; c++)
									a[c] = parseInt(l.slice(c * 2, c * 2 + 2), 16);
								if (u) s = Math.round((parseInt(u, 16) / 255) * 100) / 100;
							} else if ((l = e.match(i))) {
								for (var c = 0; c < a.length; c++) a[c] = parseInt(l[c + 1]);
								s = parseFloat(l[4]);
							} else if ((l = e.match(r))) {
								for (var c = 0; c < a.length; c++)
									a[c] = Math.round(parseFloat(l[c + 1]) * 2.55);
								s = parseFloat(l[4]);
							} else if ((l = e.match(o))) {
								if (l[1] == 'transparent') return [0, 0, 0, 0];
								a = Y[l[1]];
								if (!a) return;
							}
							for (var c = 0; c < a.length; c++) a[c] = J(a[c], 0, 255);
							if (!s && s != 0) s = 1;
							else s = J(s, 0, 1);
							a[3] = s;
							return a;
						}
						function E(e) {
							if (!e) return;
							var t =
								/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
							var n = e.match(t);
							if (n) {
								var i = parseFloat(n[4]);
								var r = J(parseInt(n[1]), 0, 360),
									o = J(parseFloat(n[2]), 0, 100),
									a = J(parseFloat(n[3]), 0, 100),
									s = J(isNaN(i) ? 1 : i, 0, 1);
								return [r, o, a, s];
							}
						}
						function P(e) {
							if (!e) return;
							var t =
								/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
							var n = e.match(t);
							if (n) {
								var i = parseFloat(n[4]);
								var r = J(parseInt(n[1]), 0, 360),
									o = J(parseFloat(n[2]), 0, 100),
									a = J(parseFloat(n[3]), 0, 100),
									s = J(isNaN(i) ? 1 : i, 0, 1);
								return [r, o, a, s];
							}
						}
						function A(e) {
							var t = j(e);
							return t && t.slice(0, 3);
						}
						function H(e) {
							var t = E(e);
							return t && t.slice(0, 3);
						}
						function I(e) {
							var t = j(e);
							if (t) return t[3];
							else if ((t = E(e))) return t[3];
							else if ((t = P(e))) return t[3];
						}
						function R(e, t) {
							var t = t !== undefined && e.length === 3 ? t : e[3];
							return (
								'#' +
								q(e[0]) +
								q(e[1]) +
								q(e[2]) +
								(t >= 0 && t < 1 ? q(Math.round(t * 255)) : '')
							);
						}
						function N(e, t) {
							if (t < 1 || (e[3] && e[3] < 1)) return W(e, t);
							return 'rgb(' + e[0] + ', ' + e[1] + ', ' + e[2] + ')';
						}
						function W(e, t) {
							if (t === undefined) t = e[3] !== undefined ? e[3] : 1;
							return (
								'rgba(' + e[0] + ', ' + e[1] + ', ' + e[2] + ', ' + t + ')'
							);
						}
						function F(e, t) {
							if (t < 1 || (e[3] && e[3] < 1)) return B(e, t);
							var n = Math.round((e[0] / 255) * 100),
								i = Math.round((e[1] / 255) * 100),
								r = Math.round((e[2] / 255) * 100);
							return 'rgb(' + n + '%, ' + i + '%, ' + r + '%)';
						}
						function B(e, t) {
							var n = Math.round((e[0] / 255) * 100),
								i = Math.round((e[1] / 255) * 100),
								r = Math.round((e[2] / 255) * 100);
							return (
								'rgba(' +
								n +
								'%, ' +
								i +
								'%, ' +
								r +
								'%, ' +
								(t || e[3] || 1) +
								')'
							);
						}
						function z(e, t) {
							if (t < 1 || (e[3] && e[3] < 1)) return V(e, t);
							return 'hsl(' + e[0] + ', ' + e[1] + '%, ' + e[2] + '%)';
						}
						function V(e, t) {
							if (t === undefined) t = e[3] !== undefined ? e[3] : 1;
							return (
								'hsla(' + e[0] + ', ' + e[1] + '%, ' + e[2] + '%, ' + t + ')'
							);
						}
						function U(e, t) {
							if (t === undefined) t = e[3] !== undefined ? e[3] : 1;
							return (
								'hwb(' +
								e[0] +
								', ' +
								e[1] +
								'%, ' +
								e[2] +
								'%' +
								(t !== undefined && t !== 1 ? ', ' + t : '') +
								')'
							);
						}
						function X(e) {
							return K[e.slice(0, 3)];
						}
						function J(e, t, n) {
							return Math.min(Math.max(t, e), n);
						}
						function q(e) {
							var t = e.toString(16).toUpperCase();
							return t.length < 2 ? '0' + t : t;
						}
						var K = {},
							G;
						for (G in Y) K[Y[G]] = G;
						var Q = function (e) {
							if (e instanceof Q) return e;
							if (!(this instanceof Q)) return new Q(e);
							this.valid = false;
							this.values = {
								rgb: [0, 0, 0],
								hsl: [0, 0, 0],
								hsv: [0, 0, 0],
								hwb: [0, 0, 0],
								cmyk: [0, 0, 0, 0],
								alpha: 1,
							};
							var t;
							if (typeof e === 'string') {
								t = C.getRgba(e);
								if (t) this.setValues('rgb', t);
								else if ((t = C.getHsla(e))) this.setValues('hsl', t);
								else if ((t = C.getHwb(e))) this.setValues('hwb', t);
							} else if (typeof e === 'object') {
								t = e;
								if (t.r !== undefined || t.red !== undefined)
									this.setValues('rgb', t);
								else if (t.l !== undefined || t.lightness !== undefined)
									this.setValues('hsl', t);
								else if (t.v !== undefined || t.value !== undefined)
									this.setValues('hsv', t);
								else if (t.w !== undefined || t.whiteness !== undefined)
									this.setValues('hwb', t);
								else if (t.c !== undefined || t.cyan !== undefined)
									this.setValues('cmyk', t);
							}
						};
						if (
							((Q.prototype = {
								isValid: function () {
									return this.valid;
								},
								rgb: function () {
									return this.setSpace('rgb', arguments);
								},
								hsl: function () {
									return this.setSpace('hsl', arguments);
								},
								hsv: function () {
									return this.setSpace('hsv', arguments);
								},
								hwb: function () {
									return this.setSpace('hwb', arguments);
								},
								cmyk: function () {
									return this.setSpace('cmyk', arguments);
								},
								rgbArray: function () {
									return this.values.rgb;
								},
								hslArray: function () {
									return this.values.hsl;
								},
								hsvArray: function () {
									return this.values.hsv;
								},
								hwbArray: function () {
									var e = this.values;
									if (e.alpha !== 1) return e.hwb.concat([e.alpha]);
									return e.hwb;
								},
								cmykArray: function () {
									return this.values.cmyk;
								},
								rgbaArray: function () {
									var e = this.values;
									return e.rgb.concat([e.alpha]);
								},
								hslaArray: function () {
									var e = this.values;
									return e.hsl.concat([e.alpha]);
								},
								alpha: function (e) {
									if (e === undefined) return this.values.alpha;
									this.setValues('alpha', e);
									return this;
								},
								red: function (e) {
									return this.setChannel('rgb', 0, e);
								},
								green: function (e) {
									return this.setChannel('rgb', 1, e);
								},
								blue: function (e) {
									return this.setChannel('rgb', 2, e);
								},
								hue: function (e) {
									if (e) {
										e %= 360;
										e = e < 0 ? 360 + e : e;
									}
									return this.setChannel('hsl', 0, e);
								},
								saturation: function (e) {
									return this.setChannel('hsl', 1, e);
								},
								lightness: function (e) {
									return this.setChannel('hsl', 2, e);
								},
								saturationv: function (e) {
									return this.setChannel('hsv', 1, e);
								},
								whiteness: function (e) {
									return this.setChannel('hwb', 1, e);
								},
								blackness: function (e) {
									return this.setChannel('hwb', 2, e);
								},
								value: function (e) {
									return this.setChannel('hsv', 2, e);
								},
								cyan: function (e) {
									return this.setChannel('cmyk', 0, e);
								},
								magenta: function (e) {
									return this.setChannel('cmyk', 1, e);
								},
								yellow: function (e) {
									return this.setChannel('cmyk', 2, e);
								},
								black: function (e) {
									return this.setChannel('cmyk', 3, e);
								},
								hexString: function () {
									return C.hexString(this.values.rgb);
								},
								rgbString: function () {
									return C.rgbString(this.values.rgb, this.values.alpha);
								},
								rgbaString: function () {
									return C.rgbaString(this.values.rgb, this.values.alpha);
								},
								percentString: function () {
									return C.percentString(this.values.rgb, this.values.alpha);
								},
								hslString: function () {
									return C.hslString(this.values.hsl, this.values.alpha);
								},
								hslaString: function () {
									return C.hslaString(this.values.hsl, this.values.alpha);
								},
								hwbString: function () {
									return C.hwbString(this.values.hwb, this.values.alpha);
								},
								keyword: function () {
									return C.keyword(this.values.rgb, this.values.alpha);
								},
								rgbNumber: function () {
									var e = this.values.rgb;
									return (e[0] << 16) | (e[1] << 8) | e[2];
								},
								luminosity: function () {
									var e = this.values.rgb;
									var t = [];
									for (var n = 0; n < e.length; n++) {
										var i = e[n] / 255;
										t[n] =
											i <= 0.03928
												? i / 12.92
												: Math.pow((i + 0.055) / 1.055, 2.4);
									}
									return 0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2];
								},
								contrast: function (e) {
									var t = this.luminosity();
									var n = e.luminosity();
									if (t > n) return (t + 0.05) / (n + 0.05);
									return (n + 0.05) / (t + 0.05);
								},
								level: function (e) {
									var t = this.contrast(e);
									if (t >= 7.1) return 'AAA';
									return t >= 4.5 ? 'AA' : '';
								},
								dark: function () {
									var e = this.values.rgb;
									var t = (e[0] * 299 + e[1] * 587 + e[2] * 114) / 1e3;
									return t < 128;
								},
								light: function () {
									return !this.dark();
								},
								negate: function () {
									var e = [];
									for (var t = 0; t < 3; t++) e[t] = 255 - this.values.rgb[t];
									this.setValues('rgb', e);
									return this;
								},
								lighten: function (e) {
									var t = this.values.hsl;
									t[2] += t[2] * e;
									this.setValues('hsl', t);
									return this;
								},
								darken: function (e) {
									var t = this.values.hsl;
									t[2] -= t[2] * e;
									this.setValues('hsl', t);
									return this;
								},
								saturate: function (e) {
									var t = this.values.hsl;
									t[1] += t[1] * e;
									this.setValues('hsl', t);
									return this;
								},
								desaturate: function (e) {
									var t = this.values.hsl;
									t[1] -= t[1] * e;
									this.setValues('hsl', t);
									return this;
								},
								whiten: function (e) {
									var t = this.values.hwb;
									t[1] += t[1] * e;
									this.setValues('hwb', t);
									return this;
								},
								blacken: function (e) {
									var t = this.values.hwb;
									t[2] += t[2] * e;
									this.setValues('hwb', t);
									return this;
								},
								greyscale: function () {
									var e = this.values.rgb;
									var t = e[0] * 0.3 + e[1] * 0.59 + e[2] * 0.11;
									this.setValues('rgb', [t, t, t]);
									return this;
								},
								clearer: function (e) {
									var t = this.values.alpha;
									this.setValues('alpha', t - t * e);
									return this;
								},
								opaquer: function (e) {
									var t = this.values.alpha;
									this.setValues('alpha', t + t * e);
									return this;
								},
								rotate: function (e) {
									var t = this.values.hsl;
									var n = (t[0] + e) % 360;
									t[0] = n < 0 ? 360 + n : n;
									this.setValues('hsl', t);
									return this;
								},
								mix: function (e, t) {
									var n = this;
									var i = e;
									var r = t === undefined ? 0.5 : t;
									var o = 2 * r - 1;
									var a = n.alpha() - i.alpha();
									var s = ((o * a === -1 ? o : (o + a) / (1 + o * a)) + 1) / 2;
									var l = 1 - s;
									return this.rgb(
										s * n.red() + l * i.red(),
										s * n.green() + l * i.green(),
										s * n.blue() + l * i.blue()
									).alpha(n.alpha() * r + i.alpha() * (1 - r));
								},
								toJSON: function () {
									return this.rgb();
								},
								clone: function () {
									var e = new Q();
									var t = this.values;
									var n = e.values;
									var i, r;
									for (var o in t)
										if (t.hasOwnProperty(o)) {
											i = t[o];
											r = {}.toString.call(i);
											if (r === '[object Array]') n[o] = i.slice(0);
											else if (r === '[object Number]') n[o] = i;
											else console.error('unexpected color value:', i);
										}
									return e;
								},
							}),
							(Q.prototype.spaces = {
								rgb: ['red', 'green', 'blue'],
								hsl: ['hue', 'saturation', 'lightness'],
								hsv: ['hue', 'saturation', 'value'],
								hwb: ['hue', 'whiteness', 'blackness'],
								cmyk: ['cyan', 'magenta', 'yellow', 'black'],
							}),
							(Q.prototype.maxes = {
								rgb: [255, 255, 255],
								hsl: [360, 100, 100],
								hsv: [360, 100, 100],
								hwb: [360, 100, 100],
								cmyk: [100, 100, 100, 100],
							}),
							(Q.prototype.getValues = function (e) {
								var t = this.values;
								var n = {};
								for (var i = 0; i < e.length; i++) n[e.charAt(i)] = t[e][i];
								if (t.alpha !== 1) n.a = t.alpha;
								return n;
							}),
							(Q.prototype.setValues = function (e, t) {
								var n = this.values;
								var i = this.spaces;
								var r = this.maxes;
								var o = 1;
								var a;
								this.valid = true;
								if (e === 'alpha') o = t;
								else if (t.length) {
									n[e] = t.slice(0, e.length);
									o = t[e.length];
								} else if (t[e.charAt(0)] !== undefined) {
									for (a = 0; a < e.length; a++) n[e][a] = t[e.charAt(a)];
									o = t.a;
								} else if (t[i[e][0]] !== undefined) {
									var s = i[e];
									for (a = 0; a < e.length; a++) n[e][a] = t[s[a]];
									o = t.alpha;
								}
								n.alpha = Math.max(
									0,
									Math.min(1, o === undefined ? n.alpha : o)
								);
								if (e === 'alpha') return false;
								var l;
								for (a = 0; a < e.length; a++) {
									l = Math.max(0, Math.min(r[e][a], n[e][a]));
									n[e][a] = Math.round(l);
								}
								for (var u in i) if (u !== e) n[u] = O[e][u](n[e]);
								return true;
							}),
							(Q.prototype.setSpace = function (e, t) {
								var n = t[0];
								if (n === undefined) return this.getValues(e);
								if (typeof n === 'number') n = Array.prototype.slice.call(t);
								this.setValues(e, n);
								return this;
							}),
							(Q.prototype.setChannel = function (e, t, n) {
								var i = this.values[e];
								if (n === undefined) return i[t];
								else if (n === i[t]) return this;
								i[t] = n;
								this.setValues(e, i);
								return this;
							}),
							typeof window !== 'undefined')
						)
							window.Color = Q;
						var $ = Q;
						function Z(e) {
							return (
								['__proto__', 'prototype', 'constructor'].indexOf(e) === -1
							);
						}
						var ee = {
								noop: function () {},
								uid: (function () {
									var e = 0;
									return function () {
										return e++;
									};
								})(),
								isNullOrUndef: function (e) {
									return e === null || typeof e === 'undefined';
								},
								isArray: function (e) {
									if (Array.isArray && Array.isArray(e)) return true;
									var t = Object.prototype.toString.call(e);
									if (t.substr(0, 7) === '[object' && t.substr(-6) === 'Array]')
										return true;
									return false;
								},
								isObject: function (e) {
									return (
										e !== null &&
										Object.prototype.toString.call(e) === '[object Object]'
									);
								},
								isFinite: function (e) {
									return (
										(typeof e === 'number' || e instanceof Number) &&
										isFinite(e)
									);
								},
								valueOrDefault: function (e, t) {
									return typeof e === 'undefined' ? t : e;
								},
								valueAtIndexOrDefault: function (e, t, n) {
									return ee.valueOrDefault(ee.isArray(e) ? e[t] : e, n);
								},
								callback: function (e, t, n) {
									if (e && typeof e.call === 'function') return e.apply(n, t);
								},
								each: function (e, t, n, i) {
									var r, o, a;
									if (ee.isArray(e)) {
										o = e.length;
										if (i) for (r = o - 1; r >= 0; r--) t.call(n, e[r], r);
										else for (r = 0; r < o; r++) t.call(n, e[r], r);
									} else if (ee.isObject(e)) {
										a = Object.keys(e);
										o = a.length;
										for (r = 0; r < o; r++) t.call(n, e[a[r]], a[r]);
									}
								},
								arrayEquals: function (e, t) {
									var n, i, r, o;
									if (!e || !t || e.length !== t.length) return false;
									for (n = 0, i = e.length; n < i; ++n) {
										r = e[n];
										o = t[n];
										if (r instanceof Array && o instanceof Array) {
											if (!ee.arrayEquals(r, o)) return false;
										} else if (r !== o) return false;
									}
									return true;
								},
								clone: function (e) {
									if (ee.isArray(e)) return e.map(ee.clone);
									if (ee.isObject(e)) {
										var t = Object.create(e);
										var n = Object.keys(e);
										var i = n.length;
										var r = 0;
										for (; r < i; ++r) t[n[r]] = ee.clone(e[n[r]]);
										return t;
									}
									return e;
								},
								_merger: function (e, t, n, i) {
									if (!Z(e)) return;
									var r = t[e];
									var o = n[e];
									if (ee.isObject(r) && ee.isObject(o)) ee.merge(r, o, i);
									else t[e] = ee.clone(o);
								},
								_mergerIf: function (e, t, n) {
									if (!Z(e)) return;
									var i = t[e];
									var r = n[e];
									if (ee.isObject(i) && ee.isObject(r)) ee.mergeIf(i, r);
									else if (!t.hasOwnProperty(e)) t[e] = ee.clone(r);
								},
								merge: function (e, t, n) {
									var i = ee.isArray(t) ? t : [t];
									var r = i.length;
									var o, a, s, l, u;
									if (!ee.isObject(e)) return e;
									n = n || {};
									o = n.merger || ee._merger;
									for (a = 0; a < r; ++a) {
										t = i[a];
										if (!ee.isObject(t)) continue;
										s = Object.keys(t);
										for (u = 0, l = s.length; u < l; ++u) o(s[u], e, t, n);
									}
									return e;
								},
								mergeIf: function (e, t) {
									return ee.merge(e, t, { merger: ee._mergerIf });
								},
								extend:
									Object.assign ||
									function (e) {
										return ee.merge(e, [].slice.call(arguments, 1), {
											merger: function (e, t, n) {
												t[e] = n[e];
											},
										});
									},
								inherits: function (e) {
									var t = this;
									var n =
										e && e.hasOwnProperty('constructor')
											? e.constructor
											: function () {
													return t.apply(this, arguments);
											  };
									var i = function () {
										this.constructor = n;
									};
									i.prototype = t.prototype;
									n.prototype = new i();
									n.extend = ee.inherits;
									if (e) ee.extend(n.prototype, e);
									n.__super__ = t.prototype;
									return n;
								},
								_deprecated: function (e, t, n, i) {
									if (t !== undefined)
										console.warn(
											e +
												': "' +
												n +
												'" is deprecated. Please use "' +
												i +
												'" instead'
										);
								},
							},
							te = ee;
						(ee.callCallback = ee.callback),
							(ee.indexOf = function (e, t, n) {
								return Array.prototype.indexOf.call(e, t, n);
							}),
							(ee.getValueOrDefault = ee.valueOrDefault),
							(ee.getValueAtIndexOrDefault = ee.valueAtIndexOrDefault);
						var ne = {
								linear: function (e) {
									return e;
								},
								easeInQuad: function (e) {
									return e * e;
								},
								easeOutQuad: function (e) {
									return -e * (e - 2);
								},
								easeInOutQuad: function (e) {
									if ((e /= 0.5) < 1) return 0.5 * e * e;
									return -0.5 * (--e * (e - 2) - 1);
								},
								easeInCubic: function (e) {
									return e * e * e;
								},
								easeOutCubic: function (e) {
									return (e = e - 1) * e * e + 1;
								},
								easeInOutCubic: function (e) {
									if ((e /= 0.5) < 1) return 0.5 * e * e * e;
									return 0.5 * ((e -= 2) * e * e + 2);
								},
								easeInQuart: function (e) {
									return e * e * e * e;
								},
								easeOutQuart: function (e) {
									return -((e = e - 1) * e * e * e - 1);
								},
								easeInOutQuart: function (e) {
									if ((e /= 0.5) < 1) return 0.5 * e * e * e * e;
									return -0.5 * ((e -= 2) * e * e * e - 2);
								},
								easeInQuint: function (e) {
									return e * e * e * e * e;
								},
								easeOutQuint: function (e) {
									return (e = e - 1) * e * e * e * e + 1;
								},
								easeInOutQuint: function (e) {
									if ((e /= 0.5) < 1) return 0.5 * e * e * e * e * e;
									return 0.5 * ((e -= 2) * e * e * e * e + 2);
								},
								easeInSine: function (e) {
									return -Math.cos(e * (Math.PI / 2)) + 1;
								},
								easeOutSine: function (e) {
									return Math.sin(e * (Math.PI / 2));
								},
								easeInOutSine: function (e) {
									return -0.5 * (Math.cos(Math.PI * e) - 1);
								},
								easeInExpo: function (e) {
									return e === 0 ? 0 : Math.pow(2, 10 * (e - 1));
								},
								easeOutExpo: function (e) {
									return e === 1 ? 1 : -Math.pow(2, -10 * e) + 1;
								},
								easeInOutExpo: function (e) {
									if (e === 0) return 0;
									if (e === 1) return 1;
									if ((e /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (e - 1));
									return 0.5 * (-Math.pow(2, -10 * --e) + 2);
								},
								easeInCirc: function (e) {
									if (e >= 1) return e;
									return -(Math.sqrt(1 - e * e) - 1);
								},
								easeOutCirc: function (e) {
									return Math.sqrt(1 - (e = e - 1) * e);
								},
								easeInOutCirc: function (e) {
									if ((e /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - e * e) - 1);
									return 0.5 * (Math.sqrt(1 - (e -= 2) * e) + 1);
								},
								easeInElastic: function (e) {
									var t = 1.70158;
									var n = 0;
									var i = 1;
									if (e === 0) return 0;
									if (e === 1) return 1;
									if (!n) n = 0.3;
									if (i < 1) {
										i = 1;
										t = n / 4;
									} else t = (n / (2 * Math.PI)) * Math.asin(1 / i);
									return -(
										i *
										Math.pow(2, 10 * (e -= 1)) *
										Math.sin(((e - t) * (2 * Math.PI)) / n)
									);
								},
								easeOutElastic: function (e) {
									var t = 1.70158;
									var n = 0;
									var i = 1;
									if (e === 0) return 0;
									if (e === 1) return 1;
									if (!n) n = 0.3;
									if (i < 1) {
										i = 1;
										t = n / 4;
									} else t = (n / (2 * Math.PI)) * Math.asin(1 / i);
									return (
										i *
											Math.pow(2, -10 * e) *
											Math.sin(((e - t) * (2 * Math.PI)) / n) +
										1
									);
								},
								easeInOutElastic: function (e) {
									var t = 1.70158;
									var n = 0;
									var i = 1;
									if (e === 0) return 0;
									if ((e /= 0.5) === 2) return 1;
									if (!n) n = 0.45;
									if (i < 1) {
										i = 1;
										t = n / 4;
									} else t = (n / (2 * Math.PI)) * Math.asin(1 / i);
									if (e < 1)
										return (
											-0.5 *
											(i *
												Math.pow(2, 10 * (e -= 1)) *
												Math.sin(((e - t) * (2 * Math.PI)) / n))
										);
									return (
										i *
											Math.pow(2, -10 * (e -= 1)) *
											Math.sin(((e - t) * (2 * Math.PI)) / n) *
											0.5 +
										1
									);
								},
								easeInBack: function (e) {
									var t = 1.70158;
									return e * e * ((t + 1) * e - t);
								},
								easeOutBack: function (e) {
									var t = 1.70158;
									return (e = e - 1) * e * ((t + 1) * e + t) + 1;
								},
								easeInOutBack: function (e) {
									var t = 1.70158;
									if ((e /= 0.5) < 1)
										return 0.5 * (e * e * (((t *= 1.525) + 1) * e - t));
									return (
										0.5 * ((e -= 2) * e * (((t *= 1.525) + 1) * e + t) + 2)
									);
								},
								easeInBounce: function (e) {
									return 1 - ne.easeOutBounce(1 - e);
								},
								easeOutBounce: function (e) {
									if (e < 1 / 2.75) return 7.5625 * e * e;
									if (e < 2 / 2.75)
										return 7.5625 * (e -= 1.5 / 2.75) * e + 0.75;
									if (e < 2.5 / 2.75)
										return 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375;
									return 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375;
								},
								easeInOutBounce: function (e) {
									if (e < 0.5) return ne.easeInBounce(e * 2) * 0.5;
									return ne.easeOutBounce(e * 2 - 1) * 0.5 + 0.5;
								},
							},
							ie = { effects: ne };
						te.easingEffects = ne;
						var re = Math.PI,
							oe = re / 180,
							ae = re * 2,
							se = re / 2,
							le = re / 4,
							ue = (re * 2) / 3,
							ce = {
								clear: function (e) {
									e.ctx.clearRect(0, 0, e.width, e.height);
								},
								roundedRect: function (e, t, n, i, r, o) {
									if (o) {
										var a = Math.min(o, r / 2, i / 2);
										var s = t + a;
										var l = n + a;
										var u = t + i - a;
										var c = n + r - a;
										e.moveTo(t, l);
										if (s < u && l < c) {
											e.arc(s, l, a, -re, -se);
											e.arc(u, l, a, -se, 0);
											e.arc(u, c, a, 0, se);
											e.arc(s, c, a, se, re);
										} else if (s < u) {
											e.moveTo(s, n);
											e.arc(u, l, a, -se, se);
											e.arc(s, l, a, se, re + se);
										} else if (l < c) {
											e.arc(s, l, a, -re, 0);
											e.arc(s, c, a, 0, re);
										} else e.arc(s, l, a, -re, re);
										e.closePath();
										e.moveTo(t, n);
									} else e.rect(t, n, i, r);
								},
								drawPoint: function (e, t, n, i, r, o) {
									var a, s, l, u, c;
									var d = (o || 0) * oe;
									if (t && typeof t === 'object') {
										a = t.toString();
										if (
											a === '[object HTMLImageElement]' ||
											a === '[object HTMLCanvasElement]'
										) {
											e.save();
											e.translate(i, r);
											e.rotate(d);
											e.drawImage(
												t,
												-t.width / 2,
												-t.height / 2,
												t.width,
												t.height
											);
											e.restore();
											return;
										}
									}
									if (isNaN(n) || n <= 0) return;
									e.beginPath();
									switch (t) {
										default:
											e.arc(i, r, n, 0, ae);
											e.closePath();
											break;
										case 'triangle':
											e.moveTo(i + Math.sin(d) * n, r - Math.cos(d) * n);
											d += ue;
											e.lineTo(i + Math.sin(d) * n, r - Math.cos(d) * n);
											d += ue;
											e.lineTo(i + Math.sin(d) * n, r - Math.cos(d) * n);
											e.closePath();
											break;
										case 'rectRounded':
											c = n * 0.516;
											u = n - c;
											s = Math.cos(d + le) * u;
											l = Math.sin(d + le) * u;
											e.arc(i - s, r - l, c, d - re, d - se);
											e.arc(i + l, r - s, c, d - se, d);
											e.arc(i + s, r + l, c, d, d + se);
											e.arc(i - l, r + s, c, d + se, d + re);
											e.closePath();
											break;
										case 'rect':
											if (!o) {
												u = Math.SQRT1_2 * n;
												e.rect(i - u, r - u, 2 * u, 2 * u);
												break;
											}
											d += le;
										case 'rectRot':
											s = Math.cos(d) * n;
											l = Math.sin(d) * n;
											e.moveTo(i - s, r - l);
											e.lineTo(i + l, r - s);
											e.lineTo(i + s, r + l);
											e.lineTo(i - l, r + s);
											e.closePath();
											break;
										case 'crossRot':
											d += le;
										case 'cross':
											s = Math.cos(d) * n;
											l = Math.sin(d) * n;
											e.moveTo(i - s, r - l);
											e.lineTo(i + s, r + l);
											e.moveTo(i + l, r - s);
											e.lineTo(i - l, r + s);
											break;
										case 'star':
											s = Math.cos(d) * n;
											l = Math.sin(d) * n;
											e.moveTo(i - s, r - l);
											e.lineTo(i + s, r + l);
											e.moveTo(i + l, r - s);
											e.lineTo(i - l, r + s);
											d += le;
											s = Math.cos(d) * n;
											l = Math.sin(d) * n;
											e.moveTo(i - s, r - l);
											e.lineTo(i + s, r + l);
											e.moveTo(i + l, r - s);
											e.lineTo(i - l, r + s);
											break;
										case 'line':
											s = Math.cos(d) * n;
											l = Math.sin(d) * n;
											e.moveTo(i - s, r - l);
											e.lineTo(i + s, r + l);
											break;
										case 'dash':
											e.moveTo(i, r);
											e.lineTo(i + Math.cos(d) * n, r + Math.sin(d) * n);
											break;
									}
									e.fill();
									e.stroke();
								},
								_isPointInArea: function (e, t) {
									var n = 1e-6;
									return (
										e.x > t.left - n &&
										e.x < t.right + n &&
										e.y > t.top - n &&
										e.y < t.bottom + n
									);
								},
								clipArea: function (e, t) {
									e.save();
									e.beginPath();
									e.rect(t.left, t.top, t.right - t.left, t.bottom - t.top);
									e.clip();
								},
								unclipArea: function (e) {
									e.restore();
								},
								lineTo: function (e, t, n, i) {
									var r = n.steppedLine;
									if (r) {
										if (r === 'middle') {
											var o = (t.x + n.x) / 2;
											e.lineTo(o, i ? n.y : t.y);
											e.lineTo(o, i ? t.y : n.y);
										} else if ((r === 'after' && !i) || (r !== 'after' && i))
											e.lineTo(t.x, n.y);
										else e.lineTo(n.x, t.y);
										e.lineTo(n.x, n.y);
										return;
									}
									if (!n.tension) {
										e.lineTo(n.x, n.y);
										return;
									}
									e.bezierCurveTo(
										i ? t.controlPointPreviousX : t.controlPointNextX,
										i ? t.controlPointPreviousY : t.controlPointNextY,
										i ? n.controlPointNextX : n.controlPointPreviousX,
										i ? n.controlPointNextY : n.controlPointPreviousY,
										n.x,
										n.y
									);
								},
							},
							de = ce;
						(te.clear = ce.clear),
							(te.drawRoundedRectangle = function (e) {
								e.beginPath();
								ce.roundedRect.apply(ce, arguments);
							});
						var fe = {
							_set: function (e, t) {
								return te.merge(this[e] || (this[e] = {}), t);
							},
						};
						fe._set('global', {
							defaultColor: 'rgba(0,0,0,0.1)',
							defaultFontColor: '#666',
							defaultFontFamily:
								"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
							defaultFontSize: 12,
							defaultFontStyle: 'normal',
							defaultLineHeight: 1.2,
							showLines: true,
						});
						var he = fe,
							pe = te.valueOrDefault;
						function me(e) {
							if (!e || te.isNullOrUndef(e.size) || te.isNullOrUndef(e.family))
								return null;
							return (
								(e.style ? e.style + ' ' : '') +
								(e.weight ? e.weight + ' ' : '') +
								e.size +
								'px ' +
								e.family
							);
						}
						var _e = {
								toLineHeight: function (e, t) {
									var n = ('' + e).match(
										/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/
									);
									if (!n || n[1] === 'normal') return t * 1.2;
									e = +n[2];
									switch (n[3]) {
										case 'px':
											return e;
										case '%':
											e /= 100;
											break;
									}
									return t * e;
								},
								toPadding: function (e) {
									var t, n, i, r;
									if (te.isObject(e)) {
										t = +e.top || 0;
										n = +e.right || 0;
										i = +e.bottom || 0;
										r = +e.left || 0;
									} else t = n = i = r = +e || 0;
									return {
										top: t,
										right: n,
										bottom: i,
										left: r,
										height: t + i,
										width: r + n,
									};
								},
								_parseFont: function (e) {
									var t = he.global;
									var n = pe(e.fontSize, t.defaultFontSize);
									var i = {
										family: pe(e.fontFamily, t.defaultFontFamily),
										lineHeight: te.options.toLineHeight(
											pe(e.lineHeight, t.defaultLineHeight),
											n
										),
										size: n,
										style: pe(e.fontStyle, t.defaultFontStyle),
										weight: null,
										string: '',
									};
									i.string = me(i);
									return i;
								},
								resolve: function (e, t, n, i) {
									var r = true;
									var o, a, s;
									for (o = 0, a = e.length; o < a; ++o) {
										s = e[o];
										if (s === undefined) continue;
										if (t !== undefined && typeof s === 'function') {
											s = s(t);
											r = false;
										}
										if (n !== undefined && te.isArray(s)) {
											s = s[n];
											r = false;
										}
										if (s !== undefined) {
											if (i && !r) i.cacheable = false;
											return s;
										}
									}
								},
							},
							ve = {
								_factorize: function (e) {
									var t = [];
									var n = Math.sqrt(e);
									var i;
									for (i = 1; i < n; i++)
										if (e % i === 0) {
											t.push(i);
											t.push(e / i);
										}
									if (n === (n | 0)) t.push(n);
									t.sort(function (e, t) {
										return e - t;
									}).pop();
									return t;
								},
								log10:
									Math.log10 ||
									function (e) {
										var t = Math.log(e) * Math.LOG10E;
										var n = Math.round(t);
										var i = e === Math.pow(10, n);
										return i ? n : t;
									},
							},
							ye = ve;
						te.log10 = ve.log10;
						var ge = function (t, n) {
								return {
									x: function (e) {
										return t + t + n - e;
									},
									setWidth: function (e) {
										n = e;
									},
									textAlign: function (e) {
										if (e === 'center') return e;
										return e === 'right' ? 'left' : 'right';
									},
									xPlus: function (e, t) {
										return e - t;
									},
									leftForLtr: function (e, t) {
										return e - t;
									},
								};
							},
							be = function () {
								return {
									x: function (e) {
										return e;
									},
									setWidth: function (e) {},
									textAlign: function (e) {
										return e;
									},
									xPlus: function (e, t) {
										return e + t;
									},
									leftForLtr: function (e, t) {
										return e;
									},
								};
							},
							ke,
							we,
							Me,
							Le,
							xe = te,
							De,
							Se = de,
							Te = _e,
							Oe = ye,
							Ye = {
								getRtlAdapter: function (e, t, n) {
									return e ? ge(t, n) : be();
								},
								overrideTextDirection: function (e, t) {
									var n, i;
									if (t === 'ltr' || t === 'rtl') {
										n = e.canvas.style;
										i = [
											n.getPropertyValue('direction'),
											n.getPropertyPriority('direction'),
										];
										n.setProperty('direction', t, 'important');
										e.prevTextDirection = i;
									}
								},
								restoreTextDirection: function (e) {
									var t = e.prevTextDirection;
									if (t !== undefined) {
										delete e.prevTextDirection;
										e.canvas.style.setProperty('direction', t[0], t[1]);
									}
								},
							};
						function Ce(e, t, n, i) {
							var r = Object.keys(n);
							var o, a, s, l, u, c, d, f, h;
							for (o = 0, a = r.length; o < a; ++o) {
								s = r[o];
								c = n[s];
								if (!t.hasOwnProperty(s)) t[s] = c;
								l = t[s];
								if (l === c || s[0] === '_') continue;
								if (!e.hasOwnProperty(s)) e[s] = l;
								u = e[s];
								d = typeof c;
								if (d === typeof u)
									if (d === 'string') {
										f = $(u);
										if (f.valid) {
											h = $(c);
											if (h.valid) {
												t[s] = h.mix(f, i).rgbString();
												continue;
											}
										}
									} else if (xe.isFinite(u) && xe.isFinite(c)) {
										t[s] = u + (c - u) * i;
										continue;
									}
								t[s] = c;
							}
						}
						(xe.easing = ie),
							(xe.canvas = Se),
							(xe.options = Te),
							(xe.math = Oe),
							(xe.rtl = Ye);
						var je = function (e) {
							xe.extend(this, e);
							this.initialize.apply(this, arguments);
						};
						xe.extend(je.prototype, {
							_type: undefined,
							initialize: function () {
								this.hidden = false;
							},
							pivot: function () {
								var e = this;
								if (!e._view) e._view = xe.extend({}, e._model);
								e._start = {};
								return e;
							},
							transition: function (e) {
								var t = this;
								var n = t._model;
								var i = t._start;
								var r = t._view;
								if (!n || e === 1) {
									t._view = xe.extend({}, n);
									t._start = null;
									return t;
								}
								if (!r) r = t._view = {};
								if (!i) i = t._start = {};
								Ce(i, r, n, e);
								return t;
							},
							tooltipPosition: function () {
								return { x: this._model.x, y: this._model.y };
							},
							hasValue: function () {
								return xe.isNumber(this._model.x) && xe.isNumber(this._model.y);
							},
						}),
							(je.extend = xe.inherits);
						var Ee = je,
							Pe = Ee.extend({
								chart: null,
								currentStep: 0,
								numSteps: 60,
								easing: '',
								render: null,
								onAnimationProgress: null,
								onAnimationComplete: null,
							}),
							Ae = Pe;
						Object.defineProperty(Pe.prototype, 'animationObject', {
							get: function () {
								return this;
							},
						}),
							Object.defineProperty(Pe.prototype, 'chartInstance', {
								get: function () {
									return this.chart;
								},
								set: function (e) {
									this.chart = e;
								},
							}),
							he._set('global', {
								animation: {
									duration: 1e3,
									easing: 'easeOutQuart',
									onProgress: xe.noop,
									onComplete: xe.noop,
								},
							});
						var He = {
								animations: [],
								request: null,
								addAnimation: function (e, t, n, i) {
									var r = this.animations;
									var o, a;
									t.chart = e;
									t.startTime = Date.now();
									t.duration = n;
									if (!i) e.animating = true;
									for (o = 0, a = r.length; o < a; ++o)
										if (r[o].chart === e) {
											r[o] = t;
											return;
										}
									r.push(t);
									if (r.length === 1) this.requestAnimationFrame();
								},
								cancelAnimation: function (t) {
									var e = xe.findIndex(this.animations, function (e) {
										return e.chart === t;
									});
									if (e !== -1) {
										this.animations.splice(e, 1);
										t.animating = false;
									}
								},
								requestAnimationFrame: function () {
									var e = this;
									if (e.request === null)
										e.request = xe.requestAnimFrame.call(window, function () {
											e.request = null;
											e.startDigest();
										});
								},
								startDigest: function () {
									var e = this;
									e.advance();
									if (e.animations.length > 0) e.requestAnimationFrame();
								},
								advance: function () {
									var e = this.animations;
									var t, n, i, r;
									var o = 0;
									while (o < e.length) {
										t = e[o];
										n = t.chart;
										i = t.numSteps;
										r =
											Math.floor(
												((Date.now() - t.startTime) / t.duration) * i
											) + 1;
										t.currentStep = Math.min(r, i);
										xe.callback(t.render, [n, t], n);
										xe.callback(t.onAnimationProgress, [t], n);
										if (t.currentStep >= i) {
											xe.callback(t.onAnimationComplete, [t], n);
											n.animating = false;
											e.splice(o, 1);
										} else ++o;
									}
								},
							},
							Ie = xe.options.resolve,
							Re = ['push', 'pop', 'shift', 'splice', 'unshift'];
						function Ne(r, e) {
							if (r._chartjs) {
								r._chartjs.listeners.push(e);
								return;
							}
							Object.defineProperty(r, '_chartjs', {
								configurable: true,
								enumerable: false,
								value: { listeners: [e] },
							});
							Re.forEach(function (e) {
								var n = 'onData' + e.charAt(0).toUpperCase() + e.slice(1);
								var i = r[e];
								Object.defineProperty(r, e, {
									configurable: true,
									enumerable: false,
									value: function () {
										var t = Array.prototype.slice.call(arguments);
										var e = i.apply(this, t);
										xe.each(r._chartjs.listeners, function (e) {
											if (typeof e[n] === 'function') e[n].apply(e, t);
										});
										return e;
									},
								});
							});
						}
						function We(t, e) {
							var n = t._chartjs;
							if (!n) return;
							var i = n.listeners;
							var r = i.indexOf(e);
							if (r !== -1) i.splice(r, 1);
							if (i.length > 0) return;
							Re.forEach(function (e) {
								delete t[e];
							});
							delete t._chartjs;
						}
						var Fe = function (e, t) {
							this.initialize(e, t);
						};
						xe.extend(Fe.prototype, {
							datasetElementType: null,
							dataElementType: null,
							_datasetElementOptions: [
								'backgroundColor',
								'borderCapStyle',
								'borderColor',
								'borderDash',
								'borderDashOffset',
								'borderJoinStyle',
								'borderWidth',
							],
							_dataElementOptions: [
								'backgroundColor',
								'borderColor',
								'borderWidth',
								'pointStyle',
							],
							initialize: function (e, t) {
								var n = this;
								n.chart = e;
								n.index = t;
								n.linkScales();
								n.addElements();
								n._type = n.getMeta().type;
							},
							updateIndex: function (e) {
								this.index = e;
							},
							linkScales: function () {
								var e = this;
								var t = e.getMeta();
								var n = e.chart;
								var i = n.scales;
								var r = e.getDataset();
								var o = n.options.scales;
								if (t.xAxisID === null || !(t.xAxisID in i) || r.xAxisID)
									t.xAxisID = r.xAxisID || o.xAxes[0].id;
								if (t.yAxisID === null || !(t.yAxisID in i) || r.yAxisID)
									t.yAxisID = r.yAxisID || o.yAxes[0].id;
							},
							getDataset: function () {
								return this.chart.data.datasets[this.index];
							},
							getMeta: function () {
								return this.chart.getDatasetMeta(this.index);
							},
							getScaleForId: function (e) {
								return this.chart.scales[e];
							},
							_getValueScaleId: function () {
								return this.getMeta().yAxisID;
							},
							_getIndexScaleId: function () {
								return this.getMeta().xAxisID;
							},
							_getValueScale: function () {
								return this.getScaleForId(this._getValueScaleId());
							},
							_getIndexScale: function () {
								return this.getScaleForId(this._getIndexScaleId());
							},
							reset: function () {
								this._update(true);
							},
							destroy: function () {
								if (this._data) We(this._data, this);
							},
							createMetaDataset: function () {
								var e = this;
								var t = e.datasetElementType;
								return t && new t({ _chart: e.chart, _datasetIndex: e.index });
							},
							createMetaData: function (e) {
								var t = this;
								var n = t.dataElementType;
								return (
									n &&
									new n({ _chart: t.chart, _datasetIndex: t.index, _index: e })
								);
							},
							addElements: function () {
								var e = this;
								var t = e.getMeta();
								var n = e.getDataset().data || [];
								var i = t.data;
								var r, o;
								for (r = 0, o = n.length; r < o; ++r)
									i[r] = i[r] || e.createMetaData(r);
								t.dataset = t.dataset || e.createMetaDataset();
							},
							addElementAndReset: function (e) {
								var t = this.createMetaData(e);
								this.getMeta().data.splice(e, 0, t);
								this.updateElement(t, e, true);
							},
							buildOrUpdateElements: function () {
								var e = this;
								var t = e.getDataset();
								var n = t.data || (t.data = []);
								if (e._data !== n) {
									if (e._data) We(e._data, e);
									if (n && Object.isExtensible(n)) Ne(n, e);
									e._data = n;
								}
								e.resyncElements();
							},
							_configure: function () {
								var e = this;
								e._config = xe.merge(
									Object.create(null),
									[e.chart.options.datasets[e._type], e.getDataset()],
									{
										merger: function (e, t, n) {
											if (e !== '_meta' && e !== 'data') xe._merger(e, t, n);
										},
									}
								);
							},
							_update: function (e) {
								var t = this;
								t._configure();
								t._cachedDataOpts = null;
								t.update(e);
							},
							update: xe.noop,
							transition: function (e) {
								var t = this.getMeta();
								var n = t.data || [];
								var i = n.length;
								var r = 0;
								for (; r < i; ++r) n[r].transition(e);
								if (t.dataset) t.dataset.transition(e);
							},
							draw: function () {
								var e = this.getMeta();
								var t = e.data || [];
								var n = t.length;
								var i = 0;
								if (e.dataset) e.dataset.draw();
								for (; i < n; ++i) t[i].draw();
							},
							getStyle: function (e) {
								var t = this;
								var n = t.getMeta();
								var i = n.dataset;
								var r;
								t._configure();
								if (i && e === undefined)
									r = t._resolveDatasetElementOptions(i || {});
								else {
									e = e || 0;
									r = t._resolveDataElementOptions(n.data[e] || {}, e);
								}
								if (r.fill === false || r.fill === null)
									r.backgroundColor = r.borderColor;
								return r;
							},
							_resolveDatasetElementOptions: function (e, t) {
								var n = this;
								var i = n.chart;
								var r = n._config;
								var o = e.custom || {};
								var a =
									i.options.elements[n.datasetElementType.prototype._type] ||
									{};
								var s = n._datasetElementOptions;
								var l = {};
								var u, c, d, f;
								var h = {
									chart: i,
									dataset: n.getDataset(),
									datasetIndex: n.index,
									hover: t,
								};
								for (u = 0, c = s.length; u < c; ++u) {
									d = s[u];
									f = t ? 'hover' + d.charAt(0).toUpperCase() + d.slice(1) : d;
									l[d] = Ie([o[f], r[f], a[f]], h);
								}
								return l;
							},
							_resolveDataElementOptions: function (e, t) {
								var n = this;
								var i = e && e.custom;
								var r = n._cachedDataOpts;
								if (r && !i) return r;
								var o = n.chart;
								var a = n._config;
								var s =
									o.options.elements[n.dataElementType.prototype._type] || {};
								var l = n._dataElementOptions;
								var u = {};
								var c = {
									chart: o,
									dataIndex: t,
									dataset: n.getDataset(),
									datasetIndex: n.index,
								};
								var d = { cacheable: !i };
								var f, h, p, m;
								i = i || {};
								if (xe.isArray(l))
									for (h = 0, p = l.length; h < p; ++h) {
										m = l[h];
										u[m] = Ie([i[m], a[m], s[m]], c, t, d);
									}
								else {
									f = Object.keys(l);
									for (h = 0, p = f.length; h < p; ++h) {
										m = f[h];
										u[m] = Ie([i[m], a[l[m]], a[m], s[m]], c, t, d);
									}
								}
								if (d.cacheable) n._cachedDataOpts = Object.freeze(u);
								return u;
							},
							removeHoverStyle: function (e) {
								xe.merge(e._model, e.$previousStyle || {});
								delete e.$previousStyle;
							},
							setHoverStyle: function (e) {
								var t = this.chart.data.datasets[e._datasetIndex];
								var n = e._index;
								var i = e.custom || {};
								var r = e._model;
								var o = xe.getHoverColor;
								e.$previousStyle = {
									backgroundColor: r.backgroundColor,
									borderColor: r.borderColor,
									borderWidth: r.borderWidth,
								};
								r.backgroundColor = Ie(
									[
										i.hoverBackgroundColor,
										t.hoverBackgroundColor,
										o(r.backgroundColor),
									],
									undefined,
									n
								);
								r.borderColor = Ie(
									[i.hoverBorderColor, t.hoverBorderColor, o(r.borderColor)],
									undefined,
									n
								);
								r.borderWidth = Ie(
									[i.hoverBorderWidth, t.hoverBorderWidth, r.borderWidth],
									undefined,
									n
								);
							},
							_removeDatasetHoverStyle: function () {
								var e = this.getMeta().dataset;
								if (e) this.removeHoverStyle(e);
							},
							_setDatasetHoverStyle: function () {
								var e = this.getMeta().dataset;
								var t = {};
								var n, i, r, o, a, s;
								if (!e) return;
								s = e._model;
								a = this._resolveDatasetElementOptions(e, true);
								o = Object.keys(a);
								for (n = 0, i = o.length; n < i; ++n) {
									r = o[n];
									t[r] = s[r];
									s[r] = a[r];
								}
								e.$previousStyle = t;
							},
							resyncElements: function () {
								var e = this;
								var t = e.getMeta();
								var n = e.getDataset().data;
								var i = t.data.length;
								var r = n.length;
								if (r < i) t.data.splice(r, i - r);
								else if (r > i) e.insertElements(i, r - i);
							},
							insertElements: function (e, t) {
								for (var n = 0; n < t; ++n) this.addElementAndReset(e + n);
							},
							onDataPush: function () {
								var e = arguments.length;
								this.insertElements(this.getDataset().data.length - e, e);
							},
							onDataPop: function () {
								this.getMeta().data.pop();
							},
							onDataShift: function () {
								this.getMeta().data.shift();
							},
							onDataSplice: function (e, t) {
								this.getMeta().data.splice(e, t);
								this.insertElements(e, arguments.length - 2);
							},
							onDataUnshift: function () {
								this.insertElements(0, arguments.length);
							},
						}),
							(Fe.extend = xe.inherits);
						var Be = Fe,
							ze = Math.PI * 2;
						function Ve(e, t) {
							var n = t.startAngle;
							var i = t.endAngle;
							var r = t.pixelMargin;
							var o = r / t.outerRadius;
							var a = t.x;
							var s = t.y;
							e.beginPath();
							e.arc(a, s, t.outerRadius, n - o, i + o);
							if (t.innerRadius > r) {
								o = r / t.innerRadius;
								e.arc(a, s, t.innerRadius - r, i + o, n - o, true);
							} else e.arc(a, s, r, i + Math.PI / 2, n - Math.PI / 2);
							e.closePath();
							e.clip();
						}
						function Ue(e, t, n, i) {
							var r = n.endAngle;
							var o;
							if (i) {
								n.endAngle = n.startAngle + ze;
								Ve(e, n);
								n.endAngle = r;
								if (n.endAngle === n.startAngle && n.fullCircles) {
									n.endAngle += ze;
									n.fullCircles--;
								}
							}
							e.beginPath();
							e.arc(
								n.x,
								n.y,
								n.innerRadius,
								n.startAngle + ze,
								n.startAngle,
								true
							);
							for (o = 0; o < n.fullCircles; ++o) e.stroke();
							e.beginPath();
							e.arc(n.x, n.y, t.outerRadius, n.startAngle, n.startAngle + ze);
							for (o = 0; o < n.fullCircles; ++o) e.stroke();
						}
						function Xe(e, t, n) {
							var i = t.borderAlign === 'inner';
							if (i) {
								e.lineWidth = t.borderWidth * 2;
								e.lineJoin = 'round';
							} else {
								e.lineWidth = t.borderWidth;
								e.lineJoin = 'bevel';
							}
							if (n.fullCircles) Ue(e, t, n, i);
							if (i) Ve(e, n);
							e.beginPath();
							e.arc(n.x, n.y, t.outerRadius, n.startAngle, n.endAngle);
							e.arc(n.x, n.y, n.innerRadius, n.endAngle, n.startAngle, true);
							e.closePath();
							e.stroke();
						}
						he._set('global', {
							elements: {
								arc: {
									backgroundColor: he.global.defaultColor,
									borderColor: '#fff',
									borderWidth: 2,
									borderAlign: 'center',
								},
							},
						});
						var Je = Ee.extend({
								_type: 'arc',
								inLabelRange: function (e) {
									var t = this._view;
									if (t)
										return (
											Math.pow(e - t.x, 2) <
											Math.pow(t.radius + t.hoverRadius, 2)
										);
									return false;
								},
								inRange: function (e, t) {
									var n = this._view;
									if (n) {
										var i = xe.getAngleFromPoint(n, { x: e, y: t });
										var r = i.angle;
										var o = i.distance;
										var a = n.startAngle;
										var s = n.endAngle;
										while (s < a) s += ze;
										while (r > s) r -= ze;
										while (r < a) r += ze;
										var l = r >= a && r <= s;
										var u = o >= n.innerRadius && o <= n.outerRadius;
										return l && u;
									}
									return false;
								},
								getCenterPoint: function () {
									var e = this._view;
									var t = (e.startAngle + e.endAngle) / 2;
									var n = (e.innerRadius + e.outerRadius) / 2;
									return { x: e.x + Math.cos(t) * n, y: e.y + Math.sin(t) * n };
								},
								getArea: function () {
									var e = this._view;
									return (
										Math.PI *
										((e.endAngle - e.startAngle) / (2 * Math.PI)) *
										(Math.pow(e.outerRadius, 2) - Math.pow(e.innerRadius, 2))
									);
								},
								tooltipPosition: function () {
									var e = this._view;
									var t = e.startAngle + (e.endAngle - e.startAngle) / 2;
									var n = (e.outerRadius - e.innerRadius) / 2 + e.innerRadius;
									return { x: e.x + Math.cos(t) * n, y: e.y + Math.sin(t) * n };
								},
								draw: function () {
									var e = this._chart.ctx;
									var t = this._view;
									var n = t.borderAlign === 'inner' ? 0.33 : 0;
									var i = {
										x: t.x,
										y: t.y,
										innerRadius: t.innerRadius,
										outerRadius: Math.max(t.outerRadius - n, 0),
										pixelMargin: n,
										startAngle: t.startAngle,
										endAngle: t.endAngle,
										fullCircles: Math.floor(t.circumference / ze),
									};
									var r;
									e.save();
									e.fillStyle = t.backgroundColor;
									e.strokeStyle = t.borderColor;
									if (i.fullCircles) {
										i.endAngle = i.startAngle + ze;
										e.beginPath();
										e.arc(i.x, i.y, i.outerRadius, i.startAngle, i.endAngle);
										e.arc(
											i.x,
											i.y,
											i.innerRadius,
											i.endAngle,
											i.startAngle,
											true
										);
										e.closePath();
										for (r = 0; r < i.fullCircles; ++r) e.fill();
										i.endAngle = i.startAngle + (t.circumference % ze);
									}
									e.beginPath();
									e.arc(i.x, i.y, i.outerRadius, i.startAngle, i.endAngle);
									e.arc(
										i.x,
										i.y,
										i.innerRadius,
										i.endAngle,
										i.startAngle,
										true
									);
									e.closePath();
									e.fill();
									if (t.borderWidth) Xe(e, t, i);
									e.restore();
								},
							}),
							qe = xe.valueOrDefault,
							Ke = he.global.defaultColor;
						he._set('global', {
							elements: {
								line: {
									tension: 0.4,
									backgroundColor: Ke,
									borderWidth: 3,
									borderColor: Ke,
									borderCapStyle: 'butt',
									borderDash: [],
									borderDashOffset: 0,
									borderJoinStyle: 'miter',
									capBezierPoints: true,
									fill: true,
								},
							},
						});
						var Ge = Ee.extend({
								_type: 'line',
								draw: function () {
									var e = this;
									var t = e._view;
									var n = e._chart.ctx;
									var i = t.spanGaps;
									var r = e._children.slice();
									var o = he.global;
									var a = o.elements.line;
									var s = -1;
									var l = e._loop;
									var u, c, d;
									if (!r.length) return;
									if (e._loop) {
										for (u = 0; u < r.length; ++u) {
											c = xe.previousItem(r, u);
											if (!r[u]._view.skip && c._view.skip) {
												r = r.slice(u).concat(r.slice(0, u));
												l = i;
												break;
											}
										}
										if (l) r.push(r[0]);
									}
									n.save();
									n.lineCap = t.borderCapStyle || a.borderCapStyle;
									if (n.setLineDash)
										n.setLineDash(t.borderDash || a.borderDash);
									n.lineDashOffset = qe(t.borderDashOffset, a.borderDashOffset);
									n.lineJoin = t.borderJoinStyle || a.borderJoinStyle;
									n.lineWidth = qe(t.borderWidth, a.borderWidth);
									n.strokeStyle = t.borderColor || o.defaultColor;
									n.beginPath();
									d = r[0]._view;
									if (!d.skip) {
										n.moveTo(d.x, d.y);
										s = 0;
									}
									for (u = 1; u < r.length; ++u) {
										d = r[u]._view;
										c = s === -1 ? xe.previousItem(r, u) : r[s];
										if (!d.skip) {
											if ((s !== u - 1 && !i) || s === -1) n.moveTo(d.x, d.y);
											else xe.canvas.lineTo(n, c._view, d);
											s = u;
										}
									}
									if (l) n.closePath();
									n.stroke();
									n.restore();
								},
							}),
							Qe = xe.valueOrDefault,
							$e = he.global.defaultColor;
						function Ze(e) {
							var t = this._view;
							return t ? Math.abs(e - t.x) < t.radius + t.hitRadius : false;
						}
						function et(e) {
							var t = this._view;
							return t ? Math.abs(e - t.y) < t.radius + t.hitRadius : false;
						}
						he._set('global', {
							elements: {
								point: {
									radius: 3,
									pointStyle: 'circle',
									backgroundColor: $e,
									borderColor: $e,
									borderWidth: 1,
									hitRadius: 1,
									hoverRadius: 4,
									hoverBorderWidth: 1,
								},
							},
						});
						var tt = Ee.extend({
								_type: 'point',
								inRange: function (e, t) {
									var n = this._view;
									return n
										? Math.pow(e - n.x, 2) + Math.pow(t - n.y, 2) <
												Math.pow(n.hitRadius + n.radius, 2)
										: false;
								},
								inLabelRange: Ze,
								inXRange: Ze,
								inYRange: et,
								getCenterPoint: function () {
									var e = this._view;
									return { x: e.x, y: e.y };
								},
								getArea: function () {
									return Math.PI * Math.pow(this._view.radius, 2);
								},
								tooltipPosition: function () {
									var e = this._view;
									return { x: e.x, y: e.y, padding: e.radius + e.borderWidth };
								},
								draw: function (e) {
									var t = this._view;
									var n = this._chart.ctx;
									var i = t.pointStyle;
									var r = t.rotation;
									var o = t.radius;
									var a = t.x;
									var s = t.y;
									var l = he.global;
									var u = l.defaultColor;
									if (t.skip) return;
									if (e === undefined || xe.canvas._isPointInArea(t, e)) {
										n.strokeStyle = t.borderColor || u;
										n.lineWidth = Qe(
											t.borderWidth,
											l.elements.point.borderWidth
										);
										n.fillStyle = t.backgroundColor || u;
										xe.canvas.drawPoint(n, i, o, a, s, r);
									}
								},
							}),
							nt = he.global.defaultColor;
						function it(e) {
							return e && e.width !== undefined;
						}
						function rt(e) {
							var t, n, i, r, o;
							if (it(e)) {
								o = e.width / 2;
								t = e.x - o;
								n = e.x + o;
								i = Math.min(e.y, e.base);
								r = Math.max(e.y, e.base);
							} else {
								o = e.height / 2;
								t = Math.min(e.x, e.base);
								n = Math.max(e.x, e.base);
								i = e.y - o;
								r = e.y + o;
							}
							return { left: t, top: i, right: n, bottom: r };
						}
						function ot(e, t, n) {
							return e === t ? n : e === n ? t : e;
						}
						function at(e) {
							var t = e.borderSkipped;
							var n = {};
							if (!t) return n;
							if (e.horizontal) {
								if (e.base > e.x) t = ot(t, 'left', 'right');
							} else if (e.base < e.y) t = ot(t, 'bottom', 'top');
							n[t] = true;
							return n;
						}
						function st(e, t, n) {
							var i = e.borderWidth;
							var r = at(e);
							var o, a, s, l;
							if (xe.isObject(i)) {
								o = +i.top || 0;
								a = +i.right || 0;
								s = +i.bottom || 0;
								l = +i.left || 0;
							} else o = a = s = l = +i || 0;
							return {
								t: r.top || o < 0 ? 0 : o > n ? n : o,
								r: r.right || a < 0 ? 0 : a > t ? t : a,
								b: r.bottom || s < 0 ? 0 : s > n ? n : s,
								l: r.left || l < 0 ? 0 : l > t ? t : l,
							};
						}
						function lt(e) {
							var t = rt(e);
							var n = t.right - t.left;
							var i = t.bottom - t.top;
							var r = st(e, n / 2, i / 2);
							return {
								outer: { x: t.left, y: t.top, w: n, h: i },
								inner: {
									x: t.left + r.l,
									y: t.top + r.t,
									w: n - r.l - r.r,
									h: i - r.t - r.b,
								},
							};
						}
						function ut(e, t, n) {
							var i = t === null;
							var r = n === null;
							var o = !e || (i && r) ? false : rt(e);
							return (
								o &&
								(i || (t >= o.left && t <= o.right)) &&
								(r || (n >= o.top && n <= o.bottom))
							);
						}
						he._set('global', {
							elements: {
								rectangle: {
									backgroundColor: nt,
									borderColor: nt,
									borderSkipped: 'bottom',
									borderWidth: 0,
								},
							},
						});
						var ct = Ee.extend({
								_type: 'rectangle',
								draw: function () {
									var e = this._chart.ctx;
									var t = this._view;
									var n = lt(t);
									var i = n.outer;
									var r = n.inner;
									e.fillStyle = t.backgroundColor;
									e.fillRect(i.x, i.y, i.w, i.h);
									if (i.w === r.w && i.h === r.h) return;
									e.save();
									e.beginPath();
									e.rect(i.x, i.y, i.w, i.h);
									e.clip();
									e.fillStyle = t.borderColor;
									e.rect(r.x, r.y, r.w, r.h);
									e.fill('evenodd');
									e.restore();
								},
								height: function () {
									var e = this._view;
									return e.base - e.y;
								},
								inRange: function (e, t) {
									return ut(this._view, e, t);
								},
								inLabelRange: function (e, t) {
									var n = this._view;
									return it(n) ? ut(n, e, null) : ut(n, null, t);
								},
								inXRange: function (e) {
									return ut(this._view, e, null);
								},
								inYRange: function (e) {
									return ut(this._view, null, e);
								},
								getCenterPoint: function () {
									var e = this._view;
									var t, n;
									if (it(e)) {
										t = e.x;
										n = (e.y + e.base) / 2;
									} else {
										t = (e.x + e.base) / 2;
										n = e.y;
									}
									return { x: t, y: n };
								},
								getArea: function () {
									var e = this._view;
									return it(e)
										? e.width * Math.abs(e.y - e.base)
										: e.height * Math.abs(e.x - e.base);
								},
								tooltipPosition: function () {
									var e = this._view;
									return { x: e.x, y: e.y };
								},
							}),
							dt = {},
							ft,
							ht = Ge,
							pt = tt,
							mt = ct;
						(dt.Arc = Je), (dt.Line = ht), (dt.Point = pt), (dt.Rectangle = mt);
						var _t = xe._deprecated,
							vt = xe.valueOrDefault;
						function yt(e, t) {
							var n = e._length;
							var i, r, o, a;
							for (o = 1, a = t.length; o < a; ++o)
								n = Math.min(n, Math.abs(t[o] - t[o - 1]));
							for (o = 0, a = e.getTicks().length; o < a; ++o) {
								r = e.getPixelForTick(o);
								n = o > 0 ? Math.min(n, Math.abs(r - i)) : n;
								i = r;
							}
							return n;
						}
						function gt(e, t, n) {
							var i = n.barThickness;
							var r = t.stackCount;
							var o = t.pixels[e];
							var a = xe.isNullOrUndef(i) ? yt(t.scale, t.pixels) : -1;
							var s, l;
							if (xe.isNullOrUndef(i)) {
								s = a * n.categoryPercentage;
								l = n.barPercentage;
							} else {
								s = i * r;
								l = 1;
							}
							return { chunk: s / r, ratio: l, start: o - s / 2 };
						}
						function bt(e, t, n) {
							var i = t.pixels;
							var r = i[e];
							var o = e > 0 ? i[e - 1] : null;
							var a = e < i.length - 1 ? i[e + 1] : null;
							var s = n.categoryPercentage;
							var l, u;
							if (o === null) o = r - (a === null ? t.end - t.start : a - r);
							if (a === null) a = r + r - o;
							l = r - ((r - Math.min(o, a)) / 2) * s;
							u = (Math.abs(a - o) / 2) * s;
							return {
								chunk: u / t.stackCount,
								ratio: n.barPercentage,
								start: l,
							};
						}
						he._set('bar', {
							hover: { mode: 'label' },
							scales: {
								xAxes: [
									{
										type: 'category',
										offset: true,
										gridLines: { offsetGridLines: true },
									},
								],
								yAxes: [{ type: 'linear' }],
							},
						}),
							he._set('global', {
								datasets: {
									bar: { categoryPercentage: 0.8, barPercentage: 0.9 },
								},
							});
						var kt = Be.extend({
								dataElementType: dt.Rectangle,
								_dataElementOptions: [
									'backgroundColor',
									'borderColor',
									'borderSkipped',
									'borderWidth',
									'barPercentage',
									'barThickness',
									'categoryPercentage',
									'maxBarThickness',
									'minBarLength',
								],
								initialize: function () {
									var e = this;
									var t, n;
									Be.prototype.initialize.apply(e, arguments);
									t = e.getMeta();
									t.stack = e.getDataset().stack;
									t.bar = true;
									n = e._getIndexScale().options;
									_t(
										'bar chart',
										n.barPercentage,
										'scales.[x/y]Axes.barPercentage',
										'dataset.barPercentage'
									);
									_t(
										'bar chart',
										n.barThickness,
										'scales.[x/y]Axes.barThickness',
										'dataset.barThickness'
									);
									_t(
										'bar chart',
										n.categoryPercentage,
										'scales.[x/y]Axes.categoryPercentage',
										'dataset.categoryPercentage'
									);
									_t(
										'bar chart',
										e._getValueScale().options.minBarLength,
										'scales.[x/y]Axes.minBarLength',
										'dataset.minBarLength'
									);
									_t(
										'bar chart',
										n.maxBarThickness,
										'scales.[x/y]Axes.maxBarThickness',
										'dataset.maxBarThickness'
									);
								},
								update: function (e) {
									var t = this;
									var n = t.getMeta().data;
									var i, r;
									t._ruler = t.getRuler();
									for (i = 0, r = n.length; i < r; ++i)
										t.updateElement(n[i], i, e);
								},
								updateElement: function (e, t, n) {
									var i = this;
									var r = i.getMeta();
									var o = i.getDataset();
									var a = i._resolveDataElementOptions(e, t);
									e._xScale = i.getScaleForId(r.xAxisID);
									e._yScale = i.getScaleForId(r.yAxisID);
									e._datasetIndex = i.index;
									e._index = t;
									e._model = {
										backgroundColor: a.backgroundColor,
										borderColor: a.borderColor,
										borderSkipped: a.borderSkipped,
										borderWidth: a.borderWidth,
										datasetLabel: o.label,
										label: i.chart.data.labels[t],
									};
									if (xe.isArray(o.data[t])) e._model.borderSkipped = null;
									i._updateElementGeometry(e, t, n, a);
									e.pivot();
								},
								_updateElementGeometry: function (e, t, n, i) {
									var r = this;
									var o = e._model;
									var a = r._getValueScale();
									var s = a.getBasePixel();
									var l = a.isHorizontal();
									var u = r._ruler || r.getRuler();
									var c = r.calculateBarValuePixels(r.index, t, i);
									var d = r.calculateBarIndexPixels(r.index, t, u, i);
									o.horizontal = l;
									o.base = n ? s : c.base;
									o.x = l ? (n ? s : c.head) : d.center;
									o.y = l ? d.center : n ? s : c.head;
									o.height = l ? d.size : undefined;
									o.width = l ? undefined : d.size;
								},
								_getStacks: function (e) {
									var t = this;
									var n = t._getIndexScale();
									var i = n._getMatchingVisibleMetas(t._type);
									var r = n.options.stacked;
									var o = i.length;
									var a = [];
									var s, l;
									for (s = 0; s < o; ++s) {
										l = i[s];
										if (
											r === false ||
											a.indexOf(l.stack) === -1 ||
											(r === undefined && l.stack === undefined)
										)
											a.push(l.stack);
										if (l.index === e) break;
									}
									return a;
								},
								getStackCount: function () {
									return this._getStacks().length;
								},
								getStackIndex: function (e, t) {
									var n = this._getStacks(e);
									var i = t !== undefined ? n.indexOf(t) : -1;
									return i === -1 ? n.length - 1 : i;
								},
								getRuler: function () {
									var e = this;
									var t = e._getIndexScale();
									var n = [];
									var i, r;
									for (i = 0, r = e.getMeta().data.length; i < r; ++i)
										n.push(t.getPixelForValue(null, i, e.index));
									return {
										pixels: n,
										start: t._startPixel,
										end: t._endPixel,
										stackCount: e.getStackCount(),
										scale: t,
									};
								},
								calculateBarValuePixels: function (e, t, n) {
									var i = this;
									var r = i.chart;
									var o = i._getValueScale();
									var a = o.isHorizontal();
									var s = r.data.datasets;
									var l = o._getMatchingVisibleMetas(i._type);
									var u = o._parseValue(s[e].data[t]);
									var c = n.minBarLength;
									var d = o.options.stacked;
									var f = i.getMeta().stack;
									var h =
										u.start === undefined
											? 0
											: u.max >= 0 && u.min >= 0
											? u.min
											: u.max;
									var p =
										u.start === undefined
											? u.end
											: u.max >= 0 && u.min >= 0
											? u.max - u.min
											: u.min - u.max;
									var m = l.length;
									var _, v, y, g, b, k, w;
									if (d || (d === undefined && f !== undefined))
										for (_ = 0; _ < m; ++_) {
											v = l[_];
											if (v.index === e) break;
											if (v.stack === f) {
												w = o._parseValue(s[v.index].data[t]);
												y =
													w.start === undefined
														? w.end
														: w.min >= 0 && w.max >= 0
														? w.max
														: w.min;
												if ((u.min < 0 && y < 0) || (u.max >= 0 && y > 0))
													h += y;
											}
										}
									g = o.getPixelForValue(h);
									b = o.getPixelForValue(h + p);
									k = b - g;
									if (c !== undefined && Math.abs(k) < c) {
										k = c;
										if ((p >= 0 && !a) || (p < 0 && a)) b = g - c;
										else b = g + c;
									}
									return { size: k, base: g, head: b, center: b + k / 2 };
								},
								calculateBarIndexPixels: function (e, t, n, i) {
									var r = this;
									var o = i.barThickness === 'flex' ? bt(t, n, i) : gt(t, n, i);
									var a = r.getStackIndex(e, r.getMeta().stack);
									var s = o.start + o.chunk * a + o.chunk / 2;
									var l = Math.min(
										vt(i.maxBarThickness, Infinity),
										o.chunk * o.ratio
									);
									return {
										base: s - l / 2,
										head: s + l / 2,
										center: s,
										size: l,
									};
								},
								draw: function () {
									var e = this;
									var t = e.chart;
									var n = e._getValueScale();
									var i = e.getMeta().data;
									var r = e.getDataset();
									var o = i.length;
									var a = 0;
									xe.canvas.clipArea(t.ctx, t.chartArea);
									for (; a < o; ++a) {
										var s = n._parseValue(r.data[a]);
										if (!isNaN(s.min) && !isNaN(s.max)) i[a].draw();
									}
									xe.canvas.unclipArea(t.ctx);
								},
								_resolveDataElementOptions: function () {
									var e = this;
									var t = xe.extend(
										{},
										Be.prototype._resolveDataElementOptions.apply(e, arguments)
									);
									var n = e._getIndexScale().options;
									var i = e._getValueScale().options;
									t.barPercentage = vt(n.barPercentage, t.barPercentage);
									t.barThickness = vt(n.barThickness, t.barThickness);
									t.categoryPercentage = vt(
										n.categoryPercentage,
										t.categoryPercentage
									);
									t.maxBarThickness = vt(n.maxBarThickness, t.maxBarThickness);
									t.minBarLength = vt(i.minBarLength, t.minBarLength);
									return t;
								},
							}),
							wt = xe.valueOrDefault,
							Mt = xe.options.resolve;
						he._set('bubble', {
							hover: { mode: 'single' },
							scales: {
								xAxes: [{ type: 'linear', position: 'bottom', id: 'x-axis-0' }],
								yAxes: [{ type: 'linear', position: 'left', id: 'y-axis-0' }],
							},
							tooltips: {
								callbacks: {
									title: function () {
										return '';
									},
									label: function (e, t) {
										var n = t.datasets[e.datasetIndex].label || '';
										var i = t.datasets[e.datasetIndex].data[e.index];
										return (
											n + ': (' + e.xLabel + ', ' + e.yLabel + ', ' + i.r + ')'
										);
									},
								},
							},
						});
						var Lt = Be.extend({
								dataElementType: dt.Point,
								_dataElementOptions: [
									'backgroundColor',
									'borderColor',
									'borderWidth',
									'hoverBackgroundColor',
									'hoverBorderColor',
									'hoverBorderWidth',
									'hoverRadius',
									'hitRadius',
									'pointStyle',
									'rotation',
								],
								update: function (n) {
									var i = this;
									var e = i.getMeta();
									var t = e.data;
									xe.each(t, function (e, t) {
										i.updateElement(e, t, n);
									});
								},
								updateElement: function (e, t, n) {
									var i = this;
									var r = i.getMeta();
									var o = e.custom || {};
									var a = i.getScaleForId(r.xAxisID);
									var s = i.getScaleForId(r.yAxisID);
									var l = i._resolveDataElementOptions(e, t);
									var u = i.getDataset().data[t];
									var c = i.index;
									var d = n
										? a.getPixelForDecimal(0.5)
										: a.getPixelForValue(typeof u === 'object' ? u : NaN, t, c);
									var f = n ? s.getBasePixel() : s.getPixelForValue(u, t, c);
									e._xScale = a;
									e._yScale = s;
									e._options = l;
									e._datasetIndex = c;
									e._index = t;
									e._model = {
										backgroundColor: l.backgroundColor,
										borderColor: l.borderColor,
										borderWidth: l.borderWidth,
										hitRadius: l.hitRadius,
										pointStyle: l.pointStyle,
										rotation: l.rotation,
										radius: n ? 0 : l.radius,
										skip: o.skip || isNaN(d) || isNaN(f),
										x: d,
										y: f,
									};
									e.pivot();
								},
								setHoverStyle: function (e) {
									var t = e._model;
									var n = e._options;
									var i = xe.getHoverColor;
									e.$previousStyle = {
										backgroundColor: t.backgroundColor,
										borderColor: t.borderColor,
										borderWidth: t.borderWidth,
										radius: t.radius,
									};
									t.backgroundColor = wt(
										n.hoverBackgroundColor,
										i(n.backgroundColor)
									);
									t.borderColor = wt(n.hoverBorderColor, i(n.borderColor));
									t.borderWidth = wt(n.hoverBorderWidth, n.borderWidth);
									t.radius = n.radius + n.hoverRadius;
								},
								_resolveDataElementOptions: function (e, t) {
									var n = this;
									var i = n.chart;
									var r = n.getDataset();
									var o = e.custom || {};
									var a = r.data[t] || {};
									var s = Be.prototype._resolveDataElementOptions.apply(
										n,
										arguments
									);
									var l = {
										chart: i,
										dataIndex: t,
										dataset: r,
										datasetIndex: n.index,
									};
									if (n._cachedDataOpts === s) s = xe.extend({}, s);
									s.radius = Mt(
										[
											o.radius,
											a.r,
											n._config.radius,
											i.options.elements.point.radius,
										],
										l,
										t
									);
									return s;
								},
							}),
							xt = xe.valueOrDefault,
							Dt = Math.PI,
							St = Dt * 2,
							Tt = Dt / 2;
						he._set('doughnut', {
							animation: { animateRotate: true, animateScale: false },
							hover: { mode: 'single' },
							legendCallback: function (e) {
								var t = document.createElement('ul');
								var n = e.data;
								var i = n.datasets;
								var r = n.labels;
								var o, a, s, l;
								t.setAttribute('class', e.id + '-legend');
								if (i.length)
									for (o = 0, a = i[0].data.length; o < a; ++o) {
										s = t.appendChild(document.createElement('li'));
										l = s.appendChild(document.createElement('span'));
										l.style.backgroundColor = i[0].backgroundColor[o];
										if (r[o]) s.appendChild(document.createTextNode(r[o]));
									}
								return t.outerHTML;
							},
							legend: {
								labels: {
									generateLabels: function (r) {
										var o = r.data;
										if (o.labels.length && o.datasets.length)
											return o.labels.map(function (e, t) {
												var n = r.getDatasetMeta(0);
												var i = n.controller.getStyle(t);
												return {
													text: e,
													fillStyle: i.backgroundColor,
													strokeStyle: i.borderColor,
													lineWidth: i.borderWidth,
													hidden:
														isNaN(o.datasets[0].data[t]) || n.data[t].hidden,
													index: t,
												};
											});
										return [];
									},
								},
								onClick: function (e, t) {
									var n = t.index;
									var i = this.chart;
									var r, o, a;
									for (r = 0, o = (i.data.datasets || []).length; r < o; ++r) {
										a = i.getDatasetMeta(r);
										if (a.data[n]) a.data[n].hidden = !a.data[n].hidden;
									}
									i.update();
								},
							},
							cutoutPercentage: 50,
							rotation: -Tt,
							circumference: St,
							tooltips: {
								callbacks: {
									title: function () {
										return '';
									},
									label: function (e, t) {
										var n = t.labels[e.index];
										var i = ': ' + t.datasets[e.datasetIndex].data[e.index];
										if (xe.isArray(n)) {
											n = n.slice();
											n[0] += i;
										} else n += i;
										return n;
									},
								},
							},
						});
						var Ot = Be.extend({
							dataElementType: dt.Arc,
							linkScales: xe.noop,
							_dataElementOptions: [
								'backgroundColor',
								'borderColor',
								'borderWidth',
								'borderAlign',
								'hoverBackgroundColor',
								'hoverBorderColor',
								'hoverBorderWidth',
							],
							getRingIndex: function (e) {
								var t = 0;
								for (var n = 0; n < e; ++n)
									if (this.chart.isDatasetVisible(n)) ++t;
								return t;
							},
							update: function (e) {
								var t = this;
								var n = t.chart;
								var i = n.chartArea;
								var r = n.options;
								var o = 1;
								var a = 1;
								var s = 0;
								var l = 0;
								var u = t.getMeta();
								var c = u.data;
								var d = r.cutoutPercentage / 100 || 0;
								var f = r.circumference;
								var h = t._getRingWeight(t.index);
								var p, m, _, v;
								if (f < St) {
									var y = r.rotation % St;
									y += y >= Dt ? -St : y < -Dt ? St : 0;
									var g = y + f;
									var b = Math.cos(y);
									var k = Math.sin(y);
									var w = Math.cos(g);
									var M = Math.sin(g);
									var L = (y <= 0 && g >= 0) || g >= St;
									var x = (y <= Tt && g >= Tt) || g >= St + Tt;
									var D = y === -Dt || g >= Dt;
									var S = (y <= -Tt && g >= -Tt) || g >= Dt + Tt;
									var T = D ? -1 : Math.min(b, b * d, w, w * d);
									var O = S ? -1 : Math.min(k, k * d, M, M * d);
									var Y = L ? 1 : Math.max(b, b * d, w, w * d);
									var C = x ? 1 : Math.max(k, k * d, M, M * d);
									o = (Y - T) / 2;
									a = (C - O) / 2;
									s = -(Y + T) / 2;
									l = -(C + O) / 2;
								}
								for (_ = 0, v = c.length; _ < v; ++_)
									c[_]._options = t._resolveDataElementOptions(c[_], _);
								n.borderWidth = t.getMaxBorderWidth();
								p = (i.right - i.left - n.borderWidth) / o;
								m = (i.bottom - i.top - n.borderWidth) / a;
								n.outerRadius = Math.max(Math.min(p, m) / 2, 0);
								n.innerRadius = Math.max(n.outerRadius * d, 0);
								n.radiusLength =
									(n.outerRadius - n.innerRadius) /
									(t._getVisibleDatasetWeightTotal() || 1);
								n.offsetX = s * n.outerRadius;
								n.offsetY = l * n.outerRadius;
								u.total = t.calculateTotal();
								t.outerRadius =
									n.outerRadius -
									n.radiusLength * t._getRingWeightOffset(t.index);
								t.innerRadius = Math.max(t.outerRadius - n.radiusLength * h, 0);
								for (_ = 0, v = c.length; _ < v; ++_)
									t.updateElement(c[_], _, e);
							},
							updateElement: function (e, t, n) {
								var i = this;
								var r = i.chart;
								var o = r.chartArea;
								var a = r.options;
								var s = a.animation;
								var l = (o.left + o.right) / 2;
								var u = (o.top + o.bottom) / 2;
								var c = a.rotation;
								var d = a.rotation;
								var f = i.getDataset();
								var h =
									n && s.animateRotate
										? 0
										: e.hidden
										? 0
										: i.calculateCircumference(f.data[t]) *
										  (a.circumference / St);
								var p = n && s.animateScale ? 0 : i.innerRadius;
								var m = n && s.animateScale ? 0 : i.outerRadius;
								var _ = e._options || {};
								xe.extend(e, {
									_datasetIndex: i.index,
									_index: t,
									_model: {
										backgroundColor: _.backgroundColor,
										borderColor: _.borderColor,
										borderWidth: _.borderWidth,
										borderAlign: _.borderAlign,
										x: l + r.offsetX,
										y: u + r.offsetY,
										startAngle: c,
										endAngle: d,
										circumference: h,
										outerRadius: m,
										innerRadius: p,
										label: xe.valueAtIndexOrDefault(
											f.label,
											t,
											r.data.labels[t]
										),
									},
								});
								var v = e._model;
								if (!n || !s.animateRotate) {
									if (t === 0) v.startAngle = a.rotation;
									else v.startAngle = i.getMeta().data[t - 1]._model.endAngle;
									v.endAngle = v.startAngle + v.circumference;
								}
								e.pivot();
							},
							calculateTotal: function () {
								var n = this.getDataset();
								var e = this.getMeta();
								var i = 0;
								var r;
								xe.each(e.data, function (e, t) {
									r = n.data[t];
									if (!isNaN(r) && !e.hidden) i += Math.abs(r);
								});
								return i;
							},
							calculateCircumference: function (e) {
								var t = this.getMeta().total;
								if (t > 0 && !isNaN(e)) return St * (Math.abs(e) / t);
								return 0;
							},
							getMaxBorderWidth: function (e) {
								var t = this;
								var n = 0;
								var i = t.chart;
								var r, o, a, s, l, u, c, d;
								if (!e)
									for (r = 0, o = i.data.datasets.length; r < o; ++r)
										if (i.isDatasetVisible(r)) {
											a = i.getDatasetMeta(r);
											e = a.data;
											if (r !== t.index) l = a.controller;
											break;
										}
								if (!e) return 0;
								for (r = 0, o = e.length; r < o; ++r) {
									s = e[r];
									if (l) {
										l._configure();
										u = l._resolveDataElementOptions(s, r);
									} else u = s._options;
									if (u.borderAlign !== 'inner') {
										c = u.borderWidth;
										d = u.hoverBorderWidth;
										n = c > n ? c : n;
										n = d > n ? d : n;
									}
								}
								return n;
							},
							setHoverStyle: function (e) {
								var t = e._model;
								var n = e._options;
								var i = xe.getHoverColor;
								e.$previousStyle = {
									backgroundColor: t.backgroundColor,
									borderColor: t.borderColor,
									borderWidth: t.borderWidth,
								};
								t.backgroundColor = xt(
									n.hoverBackgroundColor,
									i(n.backgroundColor)
								);
								t.borderColor = xt(n.hoverBorderColor, i(n.borderColor));
								t.borderWidth = xt(n.hoverBorderWidth, n.borderWidth);
							},
							_getRingWeightOffset: function (e) {
								var t = 0;
								for (var n = 0; n < e; ++n)
									if (this.chart.isDatasetVisible(n))
										t += this._getRingWeight(n);
								return t;
							},
							_getRingWeight: function (e) {
								return Math.max(xt(this.chart.data.datasets[e].weight, 1), 0);
							},
							_getVisibleDatasetWeightTotal: function () {
								return this._getRingWeightOffset(
									this.chart.data.datasets.length
								);
							},
						});
						he._set('horizontalBar', {
							hover: { mode: 'index', axis: 'y' },
							scales: {
								xAxes: [{ type: 'linear', position: 'bottom' }],
								yAxes: [
									{
										type: 'category',
										position: 'left',
										offset: true,
										gridLines: { offsetGridLines: true },
									},
								],
							},
							elements: { rectangle: { borderSkipped: 'left' } },
							tooltips: { mode: 'index', axis: 'y' },
						}),
							he._set('global', {
								datasets: {
									horizontalBar: {
										categoryPercentage: 0.8,
										barPercentage: 0.9,
									},
								},
							});
						var Yt = kt.extend({
								_getValueScaleId: function () {
									return this.getMeta().xAxisID;
								},
								_getIndexScaleId: function () {
									return this.getMeta().yAxisID;
								},
							}),
							Ct = xe.valueOrDefault,
							jt = xe.options.resolve,
							Et = xe.canvas._isPointInArea;
						function Pt(e, t) {
							var n = (e && e.options.ticks) || {};
							var i = n.reverse;
							var r = n.min === undefined ? t : 0;
							var o = n.max === undefined ? t : 0;
							return { start: i ? o : r, end: i ? r : o };
						}
						function At(e, t, n) {
							var i = n / 2;
							var r = Pt(e, i);
							var o = Pt(t, i);
							return {
								top: o.end,
								right: r.end,
								bottom: o.start,
								left: r.start,
							};
						}
						function Ht(e) {
							var t, n, i, r;
							if (xe.isObject(e)) {
								t = e.top;
								n = e.right;
								i = e.bottom;
								r = e.left;
							} else t = n = i = r = e;
							return { top: t, right: n, bottom: i, left: r };
						}
						he._set('line', {
							showLines: true,
							spanGaps: false,
							hover: { mode: 'label' },
							scales: {
								xAxes: [{ type: 'category', id: 'x-axis-0' }],
								yAxes: [{ type: 'linear', id: 'y-axis-0' }],
							},
						});
						var It = Be.extend({
								datasetElementType: dt.Line,
								dataElementType: dt.Point,
								_datasetElementOptions: [
									'backgroundColor',
									'borderCapStyle',
									'borderColor',
									'borderDash',
									'borderDashOffset',
									'borderJoinStyle',
									'borderWidth',
									'cubicInterpolationMode',
									'fill',
								],
								_dataElementOptions: {
									backgroundColor: 'pointBackgroundColor',
									borderColor: 'pointBorderColor',
									borderWidth: 'pointBorderWidth',
									hitRadius: 'pointHitRadius',
									hoverBackgroundColor: 'pointHoverBackgroundColor',
									hoverBorderColor: 'pointHoverBorderColor',
									hoverBorderWidth: 'pointHoverBorderWidth',
									hoverRadius: 'pointHoverRadius',
									pointStyle: 'pointStyle',
									radius: 'pointRadius',
									rotation: 'pointRotation',
								},
								update: function (e) {
									var t = this;
									var n = t.getMeta();
									var i = n.dataset;
									var r = n.data || [];
									var o = t.chart.options;
									var a = t._config;
									var s = (t._showLine = Ct(a.showLine, o.showLines));
									var l, u;
									t._xScale = t.getScaleForId(n.xAxisID);
									t._yScale = t.getScaleForId(n.yAxisID);
									if (s) {
										if (a.tension !== undefined && a.lineTension === undefined)
											a.lineTension = a.tension;
										i._scale = t._yScale;
										i._datasetIndex = t.index;
										i._children = r;
										i._model = t._resolveDatasetElementOptions(i);
										i.pivot();
									}
									for (l = 0, u = r.length; l < u; ++l)
										t.updateElement(r[l], l, e);
									if (s && i._model.tension !== 0)
										t.updateBezierControlPoints();
									for (l = 0, u = r.length; l < u; ++l) r[l].pivot();
								},
								updateElement: function (e, t, n) {
									var i = this;
									var r = i.getMeta();
									var o = e.custom || {};
									var a = i.getDataset();
									var s = i.index;
									var l = a.data[t];
									var u = i._xScale;
									var c = i._yScale;
									var d = r.dataset._model;
									var f, h;
									var p = i._resolveDataElementOptions(e, t);
									f = u.getPixelForValue(typeof l === 'object' ? l : NaN, t, s);
									h = n ? c.getBasePixel() : i.calculatePointY(l, t, s);
									e._xScale = u;
									e._yScale = c;
									e._options = p;
									e._datasetIndex = s;
									e._index = t;
									e._model = {
										x: f,
										y: h,
										skip: o.skip || isNaN(f) || isNaN(h),
										radius: p.radius,
										pointStyle: p.pointStyle,
										rotation: p.rotation,
										backgroundColor: p.backgroundColor,
										borderColor: p.borderColor,
										borderWidth: p.borderWidth,
										tension: Ct(o.tension, d ? d.tension : 0),
										steppedLine: d ? d.steppedLine : false,
										hitRadius: p.hitRadius,
									};
								},
								_resolveDatasetElementOptions: function (e) {
									var t = this;
									var n = t._config;
									var i = e.custom || {};
									var r = t.chart.options;
									var o = r.elements.line;
									var a = Be.prototype._resolveDatasetElementOptions.apply(
										t,
										arguments
									);
									a.spanGaps = Ct(n.spanGaps, r.spanGaps);
									a.tension = Ct(n.lineTension, o.tension);
									a.steppedLine = jt([i.steppedLine, n.steppedLine, o.stepped]);
									a.clip = Ht(
										Ct(n.clip, At(t._xScale, t._yScale, a.borderWidth))
									);
									return a;
								},
								calculatePointY: function (e, t, n) {
									var i = this;
									var r = i.chart;
									var o = i._yScale;
									var a = 0;
									var s = 0;
									var l, u, c, d, f, h, p;
									if (o.options.stacked) {
										f = +o.getRightValue(e);
										h = r._getSortedVisibleDatasetMetas();
										p = h.length;
										for (l = 0; l < p; ++l) {
											c = h[l];
											if (c.index === n) break;
											u = r.data.datasets[c.index];
											if (c.type === 'line' && c.yAxisID === o.id) {
												d = +o.getRightValue(u.data[t]);
												if (d < 0) s += d || 0;
												else a += d || 0;
											}
										}
										if (f < 0) return o.getPixelForValue(s + f);
										return o.getPixelForValue(a + f);
									}
									return o.getPixelForValue(e);
								},
								updateBezierControlPoints: function () {
									var e = this;
									var t = e.chart;
									var n = e.getMeta();
									var i = n.dataset._model;
									var r = t.chartArea;
									var o = n.data || [];
									var a, s, l, u;
									if (i.spanGaps)
										o = o.filter(function (e) {
											return !e._model.skip;
										});
									function c(e, t, n) {
										return Math.max(Math.min(e, n), t);
									}
									if (i.cubicInterpolationMode === 'monotone')
										xe.splineCurveMonotone(o);
									else
										for (a = 0, s = o.length; a < s; ++a) {
											l = o[a]._model;
											u = xe.splineCurve(
												xe.previousItem(o, a)._model,
												l,
												xe.nextItem(o, a)._model,
												i.tension
											);
											l.controlPointPreviousX = u.previous.x;
											l.controlPointPreviousY = u.previous.y;
											l.controlPointNextX = u.next.x;
											l.controlPointNextY = u.next.y;
										}
									if (t.options.elements.line.capBezierPoints)
										for (a = 0, s = o.length; a < s; ++a) {
											l = o[a]._model;
											if (Et(l, r)) {
												if (a > 0 && Et(o[a - 1]._model, r)) {
													l.controlPointPreviousX = c(
														l.controlPointPreviousX,
														r.left,
														r.right
													);
													l.controlPointPreviousY = c(
														l.controlPointPreviousY,
														r.top,
														r.bottom
													);
												}
												if (a < o.length - 1 && Et(o[a + 1]._model, r)) {
													l.controlPointNextX = c(
														l.controlPointNextX,
														r.left,
														r.right
													);
													l.controlPointNextY = c(
														l.controlPointNextY,
														r.top,
														r.bottom
													);
												}
											}
										}
								},
								draw: function () {
									var e = this;
									var t = e.chart;
									var n = e.getMeta();
									var i = n.data || [];
									var r = t.chartArea;
									var o = t.canvas;
									var a = 0;
									var s = i.length;
									var l;
									if (e._showLine) {
										l = n.dataset._model.clip;
										xe.canvas.clipArea(t.ctx, {
											left: l.left === false ? 0 : r.left - l.left,
											right: l.right === false ? o.width : r.right + l.right,
											top: l.top === false ? 0 : r.top - l.top,
											bottom:
												l.bottom === false ? o.height : r.bottom + l.bottom,
										});
										n.dataset.draw();
										xe.canvas.unclipArea(t.ctx);
									}
									for (; a < s; ++a) i[a].draw(r);
								},
								setHoverStyle: function (e) {
									var t = e._model;
									var n = e._options;
									var i = xe.getHoverColor;
									e.$previousStyle = {
										backgroundColor: t.backgroundColor,
										borderColor: t.borderColor,
										borderWidth: t.borderWidth,
										radius: t.radius,
									};
									t.backgroundColor = Ct(
										n.hoverBackgroundColor,
										i(n.backgroundColor)
									);
									t.borderColor = Ct(n.hoverBorderColor, i(n.borderColor));
									t.borderWidth = Ct(n.hoverBorderWidth, n.borderWidth);
									t.radius = Ct(n.hoverRadius, n.radius);
								},
							}),
							Rt = xe.options.resolve;
						he._set('polarArea', {
							scale: {
								type: 'radialLinear',
								angleLines: { display: false },
								gridLines: { circular: true },
								pointLabels: { display: false },
								ticks: { beginAtZero: true },
							},
							animation: { animateRotate: true, animateScale: true },
							startAngle: -0.5 * Math.PI,
							legendCallback: function (e) {
								var t = document.createElement('ul');
								var n = e.data;
								var i = n.datasets;
								var r = n.labels;
								var o, a, s, l;
								t.setAttribute('class', e.id + '-legend');
								if (i.length)
									for (o = 0, a = i[0].data.length; o < a; ++o) {
										s = t.appendChild(document.createElement('li'));
										l = s.appendChild(document.createElement('span'));
										l.style.backgroundColor = i[0].backgroundColor[o];
										if (r[o]) s.appendChild(document.createTextNode(r[o]));
									}
								return t.outerHTML;
							},
							legend: {
								labels: {
									generateLabels: function (r) {
										var o = r.data;
										if (o.labels.length && o.datasets.length)
											return o.labels.map(function (e, t) {
												var n = r.getDatasetMeta(0);
												var i = n.controller.getStyle(t);
												return {
													text: e,
													fillStyle: i.backgroundColor,
													strokeStyle: i.borderColor,
													lineWidth: i.borderWidth,
													hidden:
														isNaN(o.datasets[0].data[t]) || n.data[t].hidden,
													index: t,
												};
											});
										return [];
									},
								},
								onClick: function (e, t) {
									var n = t.index;
									var i = this.chart;
									var r, o, a;
									for (r = 0, o = (i.data.datasets || []).length; r < o; ++r) {
										a = i.getDatasetMeta(r);
										a.data[n].hidden = !a.data[n].hidden;
									}
									i.update();
								},
							},
							tooltips: {
								callbacks: {
									title: function () {
										return '';
									},
									label: function (e, t) {
										return t.labels[e.index] + ': ' + e.yLabel;
									},
								},
							},
						});
						var Nt = Be.extend({
							dataElementType: dt.Arc,
							linkScales: xe.noop,
							_dataElementOptions: [
								'backgroundColor',
								'borderColor',
								'borderWidth',
								'borderAlign',
								'hoverBackgroundColor',
								'hoverBorderColor',
								'hoverBorderWidth',
							],
							_getIndexScaleId: function () {
								return this.chart.scale.id;
							},
							_getValueScaleId: function () {
								return this.chart.scale.id;
							},
							update: function (e) {
								var t = this;
								var n = t.getDataset();
								var i = t.getMeta();
								var r = t.chart.options.startAngle || 0;
								var o = (t._starts = []);
								var a = (t._angles = []);
								var s = i.data;
								var l, u, c;
								t._updateRadius();
								i.count = t.countVisibleElements();
								for (l = 0, u = n.data.length; l < u; l++) {
									o[l] = r;
									c = t._computeAngle(l);
									a[l] = c;
									r += c;
								}
								for (l = 0, u = s.length; l < u; ++l) {
									s[l]._options = t._resolveDataElementOptions(s[l], l);
									t.updateElement(s[l], l, e);
								}
							},
							_updateRadius: function () {
								var e = this;
								var t = e.chart;
								var n = t.chartArea;
								var i = t.options;
								var r = Math.min(n.right - n.left, n.bottom - n.top);
								t.outerRadius = Math.max(r / 2, 0);
								t.innerRadius = Math.max(
									i.cutoutPercentage
										? (t.outerRadius / 100) * i.cutoutPercentage
										: 1,
									0
								);
								t.radiusLength =
									(t.outerRadius - t.innerRadius) / t.getVisibleDatasetCount();
								e.outerRadius = t.outerRadius - t.radiusLength * e.index;
								e.innerRadius = e.outerRadius - t.radiusLength;
							},
							updateElement: function (e, t, n) {
								var i = this;
								var r = i.chart;
								var o = i.getDataset();
								var a = r.options;
								var s = a.animation;
								var l = r.scale;
								var u = r.data.labels;
								var c = l.xCenter;
								var d = l.yCenter;
								var f = a.startAngle;
								var h = e.hidden
									? 0
									: l.getDistanceFromCenterForValue(o.data[t]);
								var p = i._starts[t];
								var m = p + (e.hidden ? 0 : i._angles[t]);
								var _ = s.animateScale
									? 0
									: l.getDistanceFromCenterForValue(o.data[t]);
								var v = e._options || {};
								xe.extend(e, {
									_datasetIndex: i.index,
									_index: t,
									_scale: l,
									_model: {
										backgroundColor: v.backgroundColor,
										borderColor: v.borderColor,
										borderWidth: v.borderWidth,
										borderAlign: v.borderAlign,
										x: c,
										y: d,
										innerRadius: 0,
										outerRadius: n ? _ : h,
										startAngle: n && s.animateRotate ? f : p,
										endAngle: n && s.animateRotate ? f : m,
										label: xe.valueAtIndexOrDefault(u, t, u[t]),
									},
								});
								e.pivot();
							},
							countVisibleElements: function () {
								var n = this.getDataset();
								var e = this.getMeta();
								var i = 0;
								xe.each(e.data, function (e, t) {
									if (!isNaN(n.data[t]) && !e.hidden) i++;
								});
								return i;
							},
							setHoverStyle: function (e) {
								var t = e._model;
								var n = e._options;
								var i = xe.getHoverColor;
								var r = xe.valueOrDefault;
								e.$previousStyle = {
									backgroundColor: t.backgroundColor,
									borderColor: t.borderColor,
									borderWidth: t.borderWidth,
								};
								t.backgroundColor = r(
									n.hoverBackgroundColor,
									i(n.backgroundColor)
								);
								t.borderColor = r(n.hoverBorderColor, i(n.borderColor));
								t.borderWidth = r(n.hoverBorderWidth, n.borderWidth);
							},
							_computeAngle: function (e) {
								var t = this;
								var n = this.getMeta().count;
								var i = t.getDataset();
								var r = t.getMeta();
								if (isNaN(i.data[e]) || r.data[e].hidden) return 0;
								var o = {
									chart: t.chart,
									dataIndex: e,
									dataset: i,
									datasetIndex: t.index,
								};
								return Rt(
									[t.chart.options.elements.arc.angle, (2 * Math.PI) / n],
									o,
									e
								);
							},
						});
						he._set('pie', xe.clone(he.doughnut)),
							he._set('pie', { cutoutPercentage: 0 });
						var Wt = Ot,
							Ft = xe.valueOrDefault;
						he._set('radar', {
							spanGaps: false,
							scale: { type: 'radialLinear' },
							elements: { line: { fill: 'start', tension: 0 } },
						});
						var Bt = Be.extend({
							datasetElementType: dt.Line,
							dataElementType: dt.Point,
							linkScales: xe.noop,
							_datasetElementOptions: [
								'backgroundColor',
								'borderWidth',
								'borderColor',
								'borderCapStyle',
								'borderDash',
								'borderDashOffset',
								'borderJoinStyle',
								'fill',
							],
							_dataElementOptions: {
								backgroundColor: 'pointBackgroundColor',
								borderColor: 'pointBorderColor',
								borderWidth: 'pointBorderWidth',
								hitRadius: 'pointHitRadius',
								hoverBackgroundColor: 'pointHoverBackgroundColor',
								hoverBorderColor: 'pointHoverBorderColor',
								hoverBorderWidth: 'pointHoverBorderWidth',
								hoverRadius: 'pointHoverRadius',
								pointStyle: 'pointStyle',
								radius: 'pointRadius',
								rotation: 'pointRotation',
							},
							_getIndexScaleId: function () {
								return this.chart.scale.id;
							},
							_getValueScaleId: function () {
								return this.chart.scale.id;
							},
							update: function (e) {
								var t = this;
								var n = t.getMeta();
								var i = n.dataset;
								var r = n.data || [];
								var o = t.chart.scale;
								var a = t._config;
								var s, l;
								if (a.tension !== undefined && a.lineTension === undefined)
									a.lineTension = a.tension;
								i._scale = o;
								i._datasetIndex = t.index;
								i._children = r;
								i._loop = true;
								i._model = t._resolveDatasetElementOptions(i);
								i.pivot();
								for (s = 0, l = r.length; s < l; ++s)
									t.updateElement(r[s], s, e);
								t.updateBezierControlPoints();
								for (s = 0, l = r.length; s < l; ++s) r[s].pivot();
							},
							updateElement: function (e, t, n) {
								var i = this;
								var r = e.custom || {};
								var o = i.getDataset();
								var a = i.chart.scale;
								var s = a.getPointPositionForValue(t, o.data[t]);
								var l = i._resolveDataElementOptions(e, t);
								var u = i.getMeta().dataset._model;
								var c = n ? a.xCenter : s.x;
								var d = n ? a.yCenter : s.y;
								e._scale = a;
								e._options = l;
								e._datasetIndex = i.index;
								e._index = t;
								e._model = {
									x: c,
									y: d,
									skip: r.skip || isNaN(c) || isNaN(d),
									radius: l.radius,
									pointStyle: l.pointStyle,
									rotation: l.rotation,
									backgroundColor: l.backgroundColor,
									borderColor: l.borderColor,
									borderWidth: l.borderWidth,
									tension: Ft(r.tension, u ? u.tension : 0),
									hitRadius: l.hitRadius,
								};
							},
							_resolveDatasetElementOptions: function () {
								var e = this;
								var t = e._config;
								var n = e.chart.options;
								var i = Be.prototype._resolveDatasetElementOptions.apply(
									e,
									arguments
								);
								i.spanGaps = Ft(t.spanGaps, n.spanGaps);
								i.tension = Ft(t.lineTension, n.elements.line.tension);
								return i;
							},
							updateBezierControlPoints: function () {
								var e = this;
								var t = e.getMeta();
								var n = e.chart.chartArea;
								var i = t.data || [];
								var r, o, a, s;
								if (t.dataset._model.spanGaps)
									i = i.filter(function (e) {
										return !e._model.skip;
									});
								function l(e, t, n) {
									return Math.max(Math.min(e, n), t);
								}
								for (r = 0, o = i.length; r < o; ++r) {
									a = i[r]._model;
									s = xe.splineCurve(
										xe.previousItem(i, r, true)._model,
										a,
										xe.nextItem(i, r, true)._model,
										a.tension
									);
									a.controlPointPreviousX = l(s.previous.x, n.left, n.right);
									a.controlPointPreviousY = l(s.previous.y, n.top, n.bottom);
									a.controlPointNextX = l(s.next.x, n.left, n.right);
									a.controlPointNextY = l(s.next.y, n.top, n.bottom);
								}
							},
							setHoverStyle: function (e) {
								var t = e._model;
								var n = e._options;
								var i = xe.getHoverColor;
								e.$previousStyle = {
									backgroundColor: t.backgroundColor,
									borderColor: t.borderColor,
									borderWidth: t.borderWidth,
									radius: t.radius,
								};
								t.backgroundColor = Ft(
									n.hoverBackgroundColor,
									i(n.backgroundColor)
								);
								t.borderColor = Ft(n.hoverBorderColor, i(n.borderColor));
								t.borderWidth = Ft(n.hoverBorderWidth, n.borderWidth);
								t.radius = Ft(n.hoverRadius, n.radius);
							},
						});
						he._set('scatter', {
							hover: { mode: 'single' },
							scales: {
								xAxes: [{ id: 'x-axis-1', type: 'linear', position: 'bottom' }],
								yAxes: [{ id: 'y-axis-1', type: 'linear', position: 'left' }],
							},
							tooltips: {
								callbacks: {
									title: function () {
										return '';
									},
									label: function (e) {
										return '(' + e.xLabel + ', ' + e.yLabel + ')';
									},
								},
							},
						}),
							he._set('global', { datasets: { scatter: { showLine: false } } });
						var zt,
							Vt = {
								bar: kt,
								bubble: Lt,
								doughnut: Ot,
								horizontalBar: Yt,
								line: It,
								polarArea: Nt,
								pie: Wt,
								radar: Bt,
								scatter: It,
							};
						function Ut(e, t) {
							if (e.native) return { x: e.x, y: e.y };
							return xe.getRelativePosition(e, t);
						}
						function Xt(e, t) {
							var n = e._getSortedVisibleDatasetMetas();
							var i, r, o, a, s, l;
							for (r = 0, a = n.length; r < a; ++r) {
								i = n[r].data;
								for (o = 0, s = i.length; o < s; ++o) {
									l = i[o];
									if (!l._view.skip) t(l);
								}
							}
						}
						function Jt(e, t) {
							var n = [];
							Xt(e, function (e) {
								if (e.inRange(t.x, t.y)) n.push(e);
							});
							return n;
						}
						function qt(e, i, r, o) {
							var a = Number.POSITIVE_INFINITY;
							var s = [];
							Xt(e, function (e) {
								if (r && !e.inRange(i.x, i.y)) return;
								var t = e.getCenterPoint();
								var n = o(i, t);
								if (n < a) {
									s = [e];
									a = n;
								} else if (n === a) s.push(e);
							});
							return s;
						}
						function Kt(e) {
							var r = e.indexOf('x') !== -1;
							var o = e.indexOf('y') !== -1;
							return function (e, t) {
								var n = r ? Math.abs(e.x - t.x) : 0;
								var i = o ? Math.abs(e.y - t.y) : 0;
								return Math.sqrt(Math.pow(n, 2) + Math.pow(i, 2));
							};
						}
						function Gt(e, t, n) {
							var i = Ut(t, e);
							n.axis = n.axis || 'x';
							var r = Kt(n.axis);
							var o = n.intersect ? Jt(e, i) : qt(e, i, false, r);
							var a = [];
							if (!o.length) return [];
							e._getSortedVisibleDatasetMetas().forEach(function (e) {
								var t = e.data[o[0]._index];
								if (t && !t._view.skip) a.push(t);
							});
							return a;
						}
						var Qt = {
								modes: {
									single: function (e, t) {
										var n = Ut(t, e);
										var i = [];
										Xt(e, function (e) {
											if (e.inRange(n.x, n.y)) {
												i.push(e);
												return i;
											}
										});
										return i.slice(0, 1);
									},
									label: Gt,
									index: Gt,
									dataset: function (e, t, n) {
										var i = Ut(t, e);
										n.axis = n.axis || 'xy';
										var r = Kt(n.axis);
										var o = n.intersect ? Jt(e, i) : qt(e, i, false, r);
										if (o.length > 0)
											o = e.getDatasetMeta(o[0]._datasetIndex).data;
										return o;
									},
									'x-axis': function (e, t) {
										return Gt(e, t, { intersect: false });
									},
									point: function (e, t) {
										var n = Ut(t, e);
										return Jt(e, n);
									},
									nearest: function (e, t, n) {
										var i = Ut(t, e);
										n.axis = n.axis || 'xy';
										var r = Kt(n.axis);
										return qt(e, i, n.intersect, r);
									},
									x: function (e, t, n) {
										var i = Ut(t, e);
										var r = [];
										var o = false;
										Xt(e, function (e) {
											if (e.inXRange(i.x)) r.push(e);
											if (e.inRange(i.x, i.y)) o = true;
										});
										if (n.intersect && !o) r = [];
										return r;
									},
									y: function (e, t, n) {
										var i = Ut(t, e);
										var r = [];
										var o = false;
										Xt(e, function (e) {
											if (e.inYRange(i.y)) r.push(e);
											if (e.inRange(i.x, i.y)) o = true;
										});
										if (n.intersect && !o) r = [];
										return r;
									},
								},
							},
							$t = xe.extend;
						function Zt(e, t) {
							return xe.where(e, function (e) {
								return e.pos === t;
							});
						}
						function en(e, r) {
							return e.sort(function (e, t) {
								var n = r ? t : e;
								var i = r ? e : t;
								return n.weight === i.weight
									? n.index - i.index
									: n.weight - i.weight;
							});
						}
						function tn(e) {
							var t = [];
							var n, i, r;
							for (n = 0, i = (e || []).length; n < i; ++n) {
								r = e[n];
								t.push({
									index: n,
									box: r,
									pos: r.position,
									horizontal: r.isHorizontal(),
									weight: r.weight,
								});
							}
							return t;
						}
						function nn(e, t) {
							var n, i, r;
							for (n = 0, i = e.length; n < i; ++n) {
								r = e[n];
								r.width = r.horizontal
									? r.box.fullWidth && t.availableWidth
									: t.vBoxMaxWidth;
								r.height = r.horizontal && t.hBoxMaxHeight;
							}
						}
						function rn(e) {
							var t = tn(e);
							var n = en(Zt(t, 'left'), true);
							var i = en(Zt(t, 'right'));
							var r = en(Zt(t, 'top'), true);
							var o = en(Zt(t, 'bottom'));
							return {
								leftAndTop: n.concat(r),
								rightAndBottom: i.concat(o),
								chartArea: Zt(t, 'chartArea'),
								vertical: n.concat(i),
								horizontal: r.concat(o),
							};
						}
						function on(e, t, n, i) {
							return Math.max(e[n], t[n]) + Math.max(e[i], t[i]);
						}
						function an(e, t, n) {
							var i = n.box;
							var r = e.maxPadding;
							var o, a;
							if (n.size) e[n.pos] -= n.size;
							n.size = n.horizontal ? i.height : i.width;
							e[n.pos] += n.size;
							if (i.getPadding) {
								var s = i.getPadding();
								r.top = Math.max(r.top, s.top);
								r.left = Math.max(r.left, s.left);
								r.bottom = Math.max(r.bottom, s.bottom);
								r.right = Math.max(r.right, s.right);
							}
							o = t.outerWidth - on(r, e, 'left', 'right');
							a = t.outerHeight - on(r, e, 'top', 'bottom');
							if (o !== e.w || a !== e.h) {
								e.w = o;
								e.h = a;
								var l = n.horizontal ? [o, e.w] : [a, e.h];
								return l[0] !== l[1] && (!isNaN(l[0]) || !isNaN(l[1]));
							}
						}
						function sn(n) {
							var i = n.maxPadding;
							function e(e) {
								var t = Math.max(i[e] - n[e], 0);
								n[e] += t;
								return t;
							}
							n.y += e('top');
							n.x += e('left');
							e('right');
							e('bottom');
						}
						function ln(e, n) {
							var i = n.maxPadding;
							function t(e) {
								var t = { left: 0, top: 0, right: 0, bottom: 0 };
								e.forEach(function (e) {
									t[e] = Math.max(n[e], i[e]);
								});
								return t;
							}
							return e ? t(['left', 'right']) : t(['top', 'bottom']);
						}
						function un(e, t, n) {
							var i = [];
							var r, o, a, s, l, u;
							for (r = 0, o = e.length; r < o; ++r) {
								a = e[r];
								s = a.box;
								s.update(a.width || t.w, a.height || t.h, ln(a.horizontal, t));
								if (an(t, n, a)) {
									u = true;
									if (i.length) l = true;
								}
								if (!s.fullWidth) i.push(a);
							}
							return l ? un(i, t, n) || u : u;
						}
						function cn(e, t, n) {
							var i = n.padding;
							var r = t.x;
							var o = t.y;
							var a, s, l, u;
							for (a = 0, s = e.length; a < s; ++a) {
								l = e[a];
								u = l.box;
								if (l.horizontal) {
									u.left = u.fullWidth ? i.left : t.left;
									u.right = u.fullWidth ? n.outerWidth - i.right : t.left + t.w;
									u.top = o;
									u.bottom = o + u.height;
									u.width = u.right - u.left;
									o = u.bottom;
								} else {
									u.left = r;
									u.right = r + u.width;
									u.top = t.top;
									u.bottom = t.top + t.h;
									u.height = u.bottom - u.top;
									r = u.right;
								}
							}
							t.x = r;
							t.y = o;
						}
						he._set('global', {
							layout: { padding: { top: 0, right: 0, bottom: 0, left: 0 } },
						});
						var dn = {
								defaults: {},
								addBox: function (e, t) {
									if (!e.boxes) e.boxes = [];
									t.fullWidth = t.fullWidth || false;
									t.position = t.position || 'top';
									t.weight = t.weight || 0;
									t._layers =
										t._layers ||
										function () {
											return [
												{
													z: 0,
													draw: function () {
														t.draw.apply(t, arguments);
													},
												},
											];
										};
									e.boxes.push(t);
								},
								removeBox: function (e, t) {
									var n = e.boxes ? e.boxes.indexOf(t) : -1;
									if (n !== -1) e.boxes.splice(n, 1);
								},
								configure: function (e, t, n) {
									var i = ['fullWidth', 'position', 'weight'];
									var r = i.length;
									var o = 0;
									var a;
									for (; o < r; ++o) {
										a = i[o];
										if (n.hasOwnProperty(a)) t[a] = n[a];
									}
								},
								update: function (n, e, t) {
									if (!n) return;
									var i = n.options.layout || {};
									var r = xe.options.toPadding(i.padding);
									var o = e - r.width;
									var a = t - r.height;
									var s = rn(n.boxes);
									var l = s.vertical;
									var u = s.horizontal;
									var c = Object.freeze({
										outerWidth: e,
										outerHeight: t,
										padding: r,
										availableWidth: o,
										vBoxMaxWidth: o / 2 / l.length,
										hBoxMaxHeight: a / 2,
									});
									var d = $t(
										{ maxPadding: $t({}, r), w: o, h: a, x: r.left, y: r.top },
										r
									);
									nn(l.concat(u), c);
									un(l, d, c);
									if (un(u, d, c)) un(l, d, c);
									sn(d);
									cn(s.leftAndTop, d, c);
									d.x += d.w;
									d.y += d.h;
									cn(s.rightAndBottom, d, c);
									n.chartArea = {
										left: d.left,
										top: d.top,
										right: d.left + d.w,
										bottom: d.top + d.h,
									};
									xe.each(s.chartArea, function (e) {
										var t = e.box;
										$t(t, n.chartArea);
										t.update(d.w, d.h);
									});
								},
							},
							fn = {
								acquireContext: function (e) {
									if (e && e.canvas) e = e.canvas;
									return (e && e.getContext('2d')) || null;
								},
							},
							hn =
								'/*\r\n * DOM element rendering detection\r\n * https://davidwalsh.name/detect-node-insertion\r\n */\r\n@keyframes chartjs-render-animation {\r\n\tfrom { opacity: 0.99; }\r\n\tto { opacity: 1; }\r\n}\r\n\r\n.chartjs-render-monitor {\r\n\tanimation: chartjs-render-animation 0.001s;\r\n}\r\n\r\n/*\r\n * DOM element resizing detection\r\n * https://github.com/marcj/css-element-queries\r\n */\r\n.chartjs-size-monitor,\r\n.chartjs-size-monitor-expand,\r\n.chartjs-size-monitor-shrink {\r\n\tposition: absolute;\r\n\tdirection: ltr;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\toverflow: hidden;\r\n\tpointer-events: none;\r\n\tvisibility: hidden;\r\n\tz-index: -1;\r\n}\r\n\r\n.chartjs-size-monitor-expand > div {\r\n\tposition: absolute;\r\n\twidth: 1000000px;\r\n\theight: 1000000px;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n\r\n.chartjs-size-monitor-shrink > div {\r\n\tposition: absolute;\r\n\twidth: 200%;\r\n\theight: 200%;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n',
							pn,
							mn = t(Object.freeze({ __proto__: null, default: hn })),
							_n = '$chartjs',
							vn = 'chartjs-',
							yn = vn + 'size-monitor',
							gn = vn + 'render-monitor',
							bn = vn + 'render-animation',
							kn = ['animationstart', 'webkitAnimationStart'],
							wn = {
								touchstart: 'mousedown',
								touchmove: 'mousemove',
								touchend: 'mouseup',
								pointerenter: 'mouseenter',
								pointerdown: 'mousedown',
								pointermove: 'mousemove',
								pointerup: 'mouseup',
								pointerleave: 'mouseout',
								pointerout: 'mouseout',
							};
						function Mn(e, t) {
							var n = xe.getStyle(e, t);
							var i = n && n.match(/^(\d+)(\.\d+)?px$/);
							return i ? Number(i[1]) : undefined;
						}
						function Ln(e, t) {
							var n = e.style;
							var i = e.getAttribute('height');
							var r = e.getAttribute('width');
							e[_n] = {
								initial: {
									height: i,
									width: r,
									style: {
										display: n.display,
										height: n.height,
										width: n.width,
									},
								},
							};
							n.display = n.display || 'block';
							if (r === null || r === '') {
								var o = Mn(e, 'width');
								if (o !== undefined) e.width = o;
							}
							if (i === null || i === '')
								if (e.style.height === '')
									e.height = e.width / (t.options.aspectRatio || 2);
								else {
									var a = Mn(e, 'height');
									if (o !== undefined) e.height = a;
								}
							return e;
						}
						var xn,
							Dn = (function () {
								var e = false;
								try {
									var t = Object.defineProperty({}, 'passive', {
										get: function () {
											e = true;
										},
									});
									window.addEventListener('e', null, t);
								} catch (e) {}
								return e;
							})()
								? { passive: true }
								: false;
						function Sn(e, t, n) {
							e.addEventListener(t, n, Dn);
						}
						function Tn(e, t, n) {
							e.removeEventListener(t, n, Dn);
						}
						function On(e, t, n, i, r) {
							return {
								type: e,
								chart: t,
								native: r || null,
								x: n !== undefined ? n : null,
								y: i !== undefined ? i : null,
							};
						}
						function Yn(e, t) {
							var n = wn[e.type] || e.type;
							var i = xe.getRelativePosition(e, t);
							return On(n, t, i.x, i.y, e);
						}
						function Cn(e, t) {
							var n = false;
							var i = [];
							return function () {
								i = Array.prototype.slice.call(arguments);
								t = t || this;
								if (!n) {
									n = true;
									xe.requestAnimFrame.call(window, function () {
										n = false;
										e.apply(t, i);
									});
								}
							};
						}
						function jn(e) {
							var t = document.createElement('div');
							t.className = e || '';
							return t;
						}
						function En(e) {
							var t = 1e6;
							var n = jn(yn);
							var i = jn(yn + '-expand');
							var r = jn(yn + '-shrink');
							i.appendChild(jn());
							r.appendChild(jn());
							n.appendChild(i);
							n.appendChild(r);
							n._reset = function () {
								i.scrollLeft = t;
								i.scrollTop = t;
								r.scrollLeft = t;
								r.scrollTop = t;
							};
							var o = function () {
								n._reset();
								e();
							};
							Sn(i, 'scroll', o.bind(i, 'expand'));
							Sn(r, 'scroll', o.bind(r, 'shrink'));
							return n;
						}
						function Pn(t, n) {
							var e = t[_n] || (t[_n] = {});
							var i = (e.renderProxy = function (e) {
								if (e.animationName === bn) n();
							});
							xe.each(kn, function (e) {
								Sn(t, e, i);
							});
							e.reflow = !!t.offsetParent;
							t.classList.add(gn);
						}
						function An(t) {
							var e = t[_n] || {};
							var n = e.renderProxy;
							if (n) {
								xe.each(kn, function (e) {
									Tn(t, e, n);
								});
								delete e.renderProxy;
							}
							t.classList.remove(gn);
						}
						function Hn(n, i, r) {
							var o = n[_n] || (n[_n] = {});
							var t = (o.resizer = En(
								Cn(function () {
									if (o.resizer) {
										var e = r.options.maintainAspectRatio && n.parentNode;
										var t = e ? e.clientWidth : 0;
										i(On('resize', r));
										if (e && e.clientWidth < t && r.canvas) i(On('resize', r));
									}
								})
							));
							Pn(n, function () {
								if (o.resizer) {
									var e = n.parentNode;
									if (e && e !== t.parentNode) e.insertBefore(t, e.firstChild);
									t._reset();
								}
							});
						}
						function In(e) {
							var t = e[_n] || {};
							var n = t.resizer;
							delete t.resizer;
							An(e);
							if (n && n.parentNode) n.parentNode.removeChild(n);
						}
						function Rn(e, t) {
							var n = e[_n] || (e[_n] = {});
							if (!n.containsStyles) {
								n.containsStyles = true;
								t = '/* Chart.js */\n' + t;
								var i = document.createElement('style');
								i.setAttribute('type', 'text/css');
								i.appendChild(document.createTextNode(t));
								e.appendChild(i);
							}
						}
						var Nn = {
							disableCSSInjection: false,
							_enabled:
								typeof window !== 'undefined' &&
								typeof document !== 'undefined',
							_ensureLoaded: function (e) {
								if (!this.disableCSSInjection) {
									var t = e.getRootNode ? e.getRootNode() : document;
									var n = t.host ? t : document.head;
									Rn(n, mn);
								}
							},
							acquireContext: function (e, t) {
								if (typeof e === 'string') e = document.getElementById(e);
								else if (e.length) e = e[0];
								if (e && e.canvas) e = e.canvas;
								var n = e && e.getContext && e.getContext('2d');
								if (n && n.canvas === e) {
									this._ensureLoaded(e);
									Ln(e, t);
									return n;
								}
								return null;
							},
							releaseContext: function (e) {
								var n = e.canvas;
								if (!n[_n]) return;
								var i = n[_n].initial;
								['height', 'width'].forEach(function (e) {
									var t = i[e];
									if (xe.isNullOrUndef(t)) n.removeAttribute(e);
									else n.setAttribute(e, t);
								});
								xe.each(i.style || {}, function (e, t) {
									n.style[t] = e;
								});
								n.width = n.width;
								delete n[_n];
							},
							addEventListener: function (t, e, n) {
								var i = t.canvas;
								if (e === 'resize') {
									Hn(i, n, t);
									return;
								}
								var r = n[_n] || (n[_n] = {});
								var o = r.proxies || (r.proxies = {});
								var a = (o[t.id + '_' + e] = function (e) {
									n(Yn(e, t));
								});
								Sn(i, e, a);
							},
							removeEventListener: function (e, t, n) {
								var i = e.canvas;
								if (t === 'resize') {
									In(i);
									return;
								}
								var r = n[_n] || {};
								var o = r.proxies || {};
								var a = o[e.id + '_' + t];
								if (!a) return;
								Tn(i, t, a);
							},
						};
						(xe.addEvent = Sn), (xe.removeEvent = Tn);
						var Wn = Nn._enabled ? Nn : fn,
							Fn = xe.extend(
								{
									initialize: function () {},
									acquireContext: function () {},
									releaseContext: function () {},
									addEventListener: function () {},
									removeEventListener: function () {},
								},
								Wn
							);
						he._set('global', { plugins: {} });
						var Bn = {
								_plugins: [],
								_cacheId: 0,
								register: function (e) {
									var t = this._plugins;
									[].concat(e).forEach(function (e) {
										if (t.indexOf(e) === -1) t.push(e);
									});
									this._cacheId++;
								},
								unregister: function (e) {
									var n = this._plugins;
									[].concat(e).forEach(function (e) {
										var t = n.indexOf(e);
										if (t !== -1) n.splice(t, 1);
									});
									this._cacheId++;
								},
								clear: function () {
									this._plugins = [];
									this._cacheId++;
								},
								count: function () {
									return this._plugins.length;
								},
								getAll: function () {
									return this._plugins;
								},
								notify: function (e, t, n) {
									var i = this.descriptors(e);
									var r = i.length;
									var o, a, s, l, u;
									for (o = 0; o < r; ++o) {
										a = i[o];
										s = a.plugin;
										u = s[t];
										if (typeof u === 'function') {
											l = [e].concat(n || []);
											l.push(a.options);
											if (u.apply(s, l) === false) return false;
										}
									}
									return true;
								},
								descriptors: function (e) {
									var t = e.$plugins || (e.$plugins = {});
									if (t.id === this._cacheId) return t.descriptors;
									var r = [];
									var o = [];
									var n = (e && e.config) || {};
									var a = (n.options && n.options.plugins) || {};
									this._plugins.concat(n.plugins || []).forEach(function (e) {
										var t = r.indexOf(e);
										if (t !== -1) return;
										var n = e.id;
										var i = a[n];
										if (i === false) return;
										if (i === true) i = xe.clone(he.global.plugins[n]);
										r.push(e);
										o.push({ plugin: e, options: i || {} });
									});
									t.descriptors = o;
									t.id = this._cacheId;
									return o;
								},
								_invalidate: function (e) {
									delete e.$plugins;
								},
							},
							zn = {
								constructors: {},
								defaults: {},
								registerScaleType: function (e, t, n) {
									this.constructors[e] = t;
									this.defaults[e] = xe.clone(n);
								},
								getScaleConstructor: function (e) {
									return this.constructors.hasOwnProperty(e)
										? this.constructors[e]
										: undefined;
								},
								getScaleDefaults: function (e) {
									return this.defaults.hasOwnProperty(e)
										? xe.merge(Object.create(null), [
												he.scale,
												this.defaults[e],
										  ])
										: {};
								},
								updateScaleDefaults: function (e, t) {
									var n = this;
									if (n.defaults.hasOwnProperty(e))
										n.defaults[e] = xe.extend(n.defaults[e], t);
								},
								addScalesToLayout: function (t) {
									xe.each(t.scales, function (e) {
										e.fullWidth = e.options.fullWidth;
										e.position = e.options.position;
										e.weight = e.options.weight;
										dn.addBox(t, e);
									});
								},
							},
							Vn = xe.valueOrDefault,
							Un = xe.rtl.getRtlAdapter;
						he._set('global', {
							tooltips: {
								enabled: true,
								custom: null,
								mode: 'nearest',
								position: 'average',
								intersect: true,
								backgroundColor: 'rgba(0,0,0,0.8)',
								titleFontStyle: 'bold',
								titleSpacing: 2,
								titleMarginBottom: 6,
								titleFontColor: '#fff',
								titleAlign: 'left',
								bodySpacing: 2,
								bodyFontColor: '#fff',
								bodyAlign: 'left',
								footerFontStyle: 'bold',
								footerSpacing: 2,
								footerMarginTop: 6,
								footerFontColor: '#fff',
								footerAlign: 'left',
								yPadding: 6,
								xPadding: 6,
								caretPadding: 2,
								caretSize: 5,
								cornerRadius: 6,
								multiKeyBackground: '#fff',
								displayColors: true,
								borderColor: 'rgba(0,0,0,0)',
								borderWidth: 0,
								callbacks: {
									beforeTitle: xe.noop,
									title: function (e, t) {
										var n = '';
										var i = t.labels;
										var r = i ? i.length : 0;
										if (e.length > 0) {
											var o = e[0];
											if (o.label) n = o.label;
											else if (o.xLabel) n = o.xLabel;
											else if (r > 0 && o.index < r) n = i[o.index];
										}
										return n;
									},
									afterTitle: xe.noop,
									beforeBody: xe.noop,
									beforeLabel: xe.noop,
									label: function (e, t) {
										var n = t.datasets[e.datasetIndex].label || '';
										if (n) n += ': ';
										if (!xe.isNullOrUndef(e.value)) n += e.value;
										else n += e.yLabel;
										return n;
									},
									labelColor: function (e, t) {
										var n = t.getDatasetMeta(e.datasetIndex);
										var i = n.data[e.index];
										var r = i._view;
										return {
											borderColor: r.borderColor,
											backgroundColor: r.backgroundColor,
										};
									},
									labelTextColor: function () {
										return this._options.bodyFontColor;
									},
									afterLabel: xe.noop,
									afterBody: xe.noop,
									beforeFooter: xe.noop,
									footer: xe.noop,
									afterFooter: xe.noop,
								},
							},
						});
						var Xn = {
							average: function (e) {
								if (!e.length) return false;
								var t, n;
								var i = 0;
								var r = 0;
								var o = 0;
								for (t = 0, n = e.length; t < n; ++t) {
									var a = e[t];
									if (a && a.hasValue()) {
										var s = a.tooltipPosition();
										i += s.x;
										r += s.y;
										++o;
									}
								}
								return { x: i / o, y: r / o };
							},
							nearest: function (e, t) {
								var n = t.x;
								var i = t.y;
								var r = Number.POSITIVE_INFINITY;
								var o, a, s;
								for (o = 0, a = e.length; o < a; ++o) {
									var l = e[o];
									if (l && l.hasValue()) {
										var u = l.getCenterPoint();
										var c = xe.distanceBetweenPoints(t, u);
										if (c < r) {
											r = c;
											s = l;
										}
									}
								}
								if (s) {
									var d = s.tooltipPosition();
									n = d.x;
									i = d.y;
								}
								return { x: n, y: i };
							},
						};
						function Jn(e, t) {
							if (t)
								if (xe.isArray(t)) Array.prototype.push.apply(e, t);
								else e.push(t);
							return e;
						}
						function qn(e) {
							if (
								(typeof e === 'string' || e instanceof String) &&
								e.indexOf('\n') > -1
							)
								return e.split('\n');
							return e;
						}
						function Kn(e) {
							var t = e._xScale;
							var n = e._yScale || e._scale;
							var i = e._index;
							var r = e._datasetIndex;
							var o = e._chart.getDatasetMeta(r).controller;
							var a = o._getIndexScale();
							var s = o._getValueScale();
							return {
								xLabel: t ? t.getLabelForIndex(i, r) : '',
								yLabel: n ? n.getLabelForIndex(i, r) : '',
								label: a ? '' + a.getLabelForIndex(i, r) : '',
								value: s ? '' + s.getLabelForIndex(i, r) : '',
								index: i,
								datasetIndex: r,
								x: e._model.x,
								y: e._model.y,
							};
						}
						function Gn(e) {
							var t = he.global;
							return {
								xPadding: e.xPadding,
								yPadding: e.yPadding,
								xAlign: e.xAlign,
								yAlign: e.yAlign,
								rtl: e.rtl,
								textDirection: e.textDirection,
								bodyFontColor: e.bodyFontColor,
								_bodyFontFamily: Vn(e.bodyFontFamily, t.defaultFontFamily),
								_bodyFontStyle: Vn(e.bodyFontStyle, t.defaultFontStyle),
								_bodyAlign: e.bodyAlign,
								bodyFontSize: Vn(e.bodyFontSize, t.defaultFontSize),
								bodySpacing: e.bodySpacing,
								titleFontColor: e.titleFontColor,
								_titleFontFamily: Vn(e.titleFontFamily, t.defaultFontFamily),
								_titleFontStyle: Vn(e.titleFontStyle, t.defaultFontStyle),
								titleFontSize: Vn(e.titleFontSize, t.defaultFontSize),
								_titleAlign: e.titleAlign,
								titleSpacing: e.titleSpacing,
								titleMarginBottom: e.titleMarginBottom,
								footerFontColor: e.footerFontColor,
								_footerFontFamily: Vn(e.footerFontFamily, t.defaultFontFamily),
								_footerFontStyle: Vn(e.footerFontStyle, t.defaultFontStyle),
								footerFontSize: Vn(e.footerFontSize, t.defaultFontSize),
								_footerAlign: e.footerAlign,
								footerSpacing: e.footerSpacing,
								footerMarginTop: e.footerMarginTop,
								caretSize: e.caretSize,
								cornerRadius: e.cornerRadius,
								backgroundColor: e.backgroundColor,
								opacity: 0,
								legendColorBackground: e.multiKeyBackground,
								displayColors: e.displayColors,
								borderColor: e.borderColor,
								borderWidth: e.borderWidth,
							};
						}
						function Qn(e, t) {
							var n = e._chart.ctx;
							var i = t.yPadding * 2;
							var r = 0;
							var o = t.body;
							var a = o.reduce(function (e, t) {
								return e + t.before.length + t.lines.length + t.after.length;
							}, 0);
							a += t.beforeBody.length + t.afterBody.length;
							var s = t.title.length;
							var l = t.footer.length;
							var u = t.titleFontSize;
							var c = t.bodyFontSize;
							var d = t.footerFontSize;
							i += s * u;
							i += s ? (s - 1) * t.titleSpacing : 0;
							i += s ? t.titleMarginBottom : 0;
							i += a * c;
							i += a ? (a - 1) * t.bodySpacing : 0;
							i += l ? t.footerMarginTop : 0;
							i += l * d;
							i += l ? (l - 1) * t.footerSpacing : 0;
							var f = 0;
							var h = function (e) {
								r = Math.max(r, n.measureText(e).width + f);
							};
							n.font = xe.fontString(u, t._titleFontStyle, t._titleFontFamily);
							xe.each(t.title, h);
							n.font = xe.fontString(c, t._bodyFontStyle, t._bodyFontFamily);
							xe.each(t.beforeBody.concat(t.afterBody), h);
							f = t.displayColors ? c + 2 : 0;
							xe.each(o, function (e) {
								xe.each(e.before, h);
								xe.each(e.lines, h);
								xe.each(e.after, h);
							});
							f = 0;
							n.font = xe.fontString(
								d,
								t._footerFontStyle,
								t._footerFontFamily
							);
							xe.each(t.footer, h);
							r += 2 * t.xPadding;
							return { width: r, height: i };
						}
						function $n(e, t) {
							var n = e._model;
							var i = e._chart;
							var r = e._chart.chartArea;
							var o = 'center';
							var a = 'center';
							if (n.y < t.height) a = 'top';
							else if (n.y > i.height - t.height) a = 'bottom';
							var s, l;
							var u, c;
							var d;
							var f = (r.left + r.right) / 2;
							var h = (r.top + r.bottom) / 2;
							if (a === 'center') {
								s = function (e) {
									return e <= f;
								};
								l = function (e) {
									return e > f;
								};
							} else {
								s = function (e) {
									return e <= t.width / 2;
								};
								l = function (e) {
									return e >= i.width - t.width / 2;
								};
							}
							u = function (e) {
								return e + t.width + n.caretSize + n.caretPadding > i.width;
							};
							c = function (e) {
								return e - t.width - n.caretSize - n.caretPadding < 0;
							};
							d = function (e) {
								return e <= h ? 'top' : 'bottom';
							};
							if (s(n.x)) {
								o = 'left';
								if (u(n.x)) {
									o = 'center';
									a = d(n.y);
								}
							} else if (l(n.x)) {
								o = 'right';
								if (c(n.x)) {
									o = 'center';
									a = d(n.y);
								}
							}
							var p = e._options;
							return {
								xAlign: p.xAlign ? p.xAlign : o,
								yAlign: p.yAlign ? p.yAlign : a,
							};
						}
						function Zn(e, t, n, i) {
							var r = e.x;
							var o = e.y;
							var a = e.caretSize;
							var s = e.caretPadding;
							var l = e.cornerRadius;
							var u = n.xAlign;
							var c = n.yAlign;
							var d = a + s;
							var f = l + s;
							if (u === 'right') r -= t.width;
							else if (u === 'center') {
								r -= t.width / 2;
								if (r + t.width > i.width) r = i.width - t.width;
								if (r < 0) r = 0;
							}
							if (c === 'top') o += d;
							else if (c === 'bottom') o -= t.height + d;
							else o -= t.height / 2;
							if (c === 'center') {
								if (u === 'left') r += d;
								else if (u === 'right') r -= d;
							} else if (u === 'left') r -= f;
							else if (u === 'right') r += f;
							return { x: r, y: o };
						}
						function ei(e, t) {
							return t === 'center'
								? e.x + e.width / 2
								: t === 'right'
								? e.x + e.width - e.xPadding
								: e.x + e.xPadding;
						}
						function ti(e) {
							return Jn([], qn(e));
						}
						var ni,
							ii,
							ri = Ee.extend({
								initialize: function () {
									this._model = Gn(this._options);
									this._lastActive = [];
								},
								getTitle: function () {
									var e = this;
									var t = e._options;
									var n = t.callbacks;
									var i = n.beforeTitle.apply(e, arguments);
									var r = n.title.apply(e, arguments);
									var o = n.afterTitle.apply(e, arguments);
									var a = [];
									a = Jn(a, qn(i));
									a = Jn(a, qn(r));
									a = Jn(a, qn(o));
									return a;
								},
								getBeforeBody: function () {
									return ti(
										this._options.callbacks.beforeBody.apply(this, arguments)
									);
								},
								getBody: function (e, n) {
									var i = this;
									var r = i._options.callbacks;
									var o = [];
									xe.each(e, function (e) {
										var t = { before: [], lines: [], after: [] };
										Jn(t.before, qn(r.beforeLabel.call(i, e, n)));
										Jn(t.lines, r.label.call(i, e, n));
										Jn(t.after, qn(r.afterLabel.call(i, e, n)));
										o.push(t);
									});
									return o;
								},
								getAfterBody: function () {
									return ti(
										this._options.callbacks.afterBody.apply(this, arguments)
									);
								},
								getFooter: function () {
									var e = this;
									var t = e._options.callbacks;
									var n = t.beforeFooter.apply(e, arguments);
									var i = t.footer.apply(e, arguments);
									var r = t.afterFooter.apply(e, arguments);
									var o = [];
									o = Jn(o, qn(n));
									o = Jn(o, qn(i));
									o = Jn(o, qn(r));
									return o;
								},
								update: function (e) {
									var t = this;
									var n = t._options;
									var i = t._model;
									var r = (t._model = Gn(n));
									var o = t._active;
									var a = t._data;
									var s = { xAlign: i.xAlign, yAlign: i.yAlign };
									var l = { x: i.x, y: i.y };
									var u = { width: i.width, height: i.height };
									var c = { x: i.caretX, y: i.caretY };
									var d, f;
									if (o.length) {
										r.opacity = 1;
										var h = [];
										var p = [];
										c = Xn[n.position].call(t, o, t._eventPosition);
										var m = [];
										for (d = 0, f = o.length; d < f; ++d) m.push(Kn(o[d]));
										if (n.filter)
											m = m.filter(function (e) {
												return n.filter(e, a);
											});
										if (n.itemSort)
											m = m.sort(function (e, t) {
												return n.itemSort(e, t, a);
											});
										xe.each(m, function (e) {
											h.push(n.callbacks.labelColor.call(t, e, t._chart));
											p.push(n.callbacks.labelTextColor.call(t, e, t._chart));
										});
										r.title = t.getTitle(m, a);
										r.beforeBody = t.getBeforeBody(m, a);
										r.body = t.getBody(m, a);
										r.afterBody = t.getAfterBody(m, a);
										r.footer = t.getFooter(m, a);
										r.x = c.x;
										r.y = c.y;
										r.caretPadding = n.caretPadding;
										r.labelColors = h;
										r.labelTextColors = p;
										r.dataPoints = m;
										u = Qn(this, r);
										s = $n(this, u);
										l = Zn(r, u, s, t._chart);
									} else r.opacity = 0;
									r.xAlign = s.xAlign;
									r.yAlign = s.yAlign;
									r.x = l.x;
									r.y = l.y;
									r.width = u.width;
									r.height = u.height;
									r.caretX = c.x;
									r.caretY = c.y;
									t._model = r;
									if (e && n.custom) n.custom.call(t, r);
									return t;
								},
								drawCaret: function (e, t) {
									var n = this._chart.ctx;
									var i = this._view;
									var r = this.getCaretPosition(e, t, i);
									n.lineTo(r.x1, r.y1);
									n.lineTo(r.x2, r.y2);
									n.lineTo(r.x3, r.y3);
								},
								getCaretPosition: function (e, t, n) {
									var i, r, o, a, s, l;
									var u = n.caretSize;
									var c = n.cornerRadius;
									var d = n.xAlign;
									var f = n.yAlign;
									var h = e.x;
									var p = e.y;
									var m = t.width;
									var _ = t.height;
									if (f === 'center') {
										s = p + _ / 2;
										if (d === 'left') {
											i = h;
											r = i - u;
											o = i;
											a = s + u;
											l = s - u;
										} else {
											i = h + m;
											r = i + u;
											o = i;
											a = s - u;
											l = s + u;
										}
									} else {
										if (d === 'left') {
											r = h + c + u;
											i = r - u;
											o = r + u;
										} else if (d === 'right') {
											r = h + m - c - u;
											i = r - u;
											o = r + u;
										} else {
											r = n.caretX;
											i = r - u;
											o = r + u;
										}
										if (f === 'top') {
											a = p;
											s = a - u;
											l = a;
										} else {
											a = p + _;
											s = a + u;
											l = a;
											var v = o;
											o = i;
											i = v;
										}
									}
									return { x1: i, x2: r, x3: o, y1: a, y2: s, y3: l };
								},
								drawTitle: function (e, t, n) {
									var i = t.title;
									var r = i.length;
									var o, a, s;
									if (r) {
										var l = Un(t.rtl, t.x, t.width);
										e.x = ei(t, t._titleAlign);
										n.textAlign = l.textAlign(t._titleAlign);
										n.textBaseline = 'middle';
										o = t.titleFontSize;
										a = t.titleSpacing;
										n.fillStyle = t.titleFontColor;
										n.font = xe.fontString(
											o,
											t._titleFontStyle,
											t._titleFontFamily
										);
										for (s = 0; s < r; ++s) {
											n.fillText(i[s], l.x(e.x), e.y + o / 2);
											e.y += o + a;
											if (s + 1 === r) e.y += t.titleMarginBottom - a;
										}
									}
								},
								drawBody: function (t, e, n) {
									var i = e.bodyFontSize;
									var r = e.bodySpacing;
									var o = e._bodyAlign;
									var a = e.body;
									var s = e.displayColors;
									var l = 0;
									var u = s ? ei(e, 'left') : 0;
									var c = Un(e.rtl, e.x, e.width);
									var d = function (e) {
										n.fillText(e, c.x(t.x + l), t.y + i / 2);
										t.y += i + r;
									};
									var f, h, p, m, _, v, y, g;
									var b = c.textAlign(o);
									n.textAlign = o;
									n.textBaseline = 'middle';
									n.font = xe.fontString(
										i,
										e._bodyFontStyle,
										e._bodyFontFamily
									);
									t.x = ei(e, b);
									n.fillStyle = e.bodyFontColor;
									xe.each(e.beforeBody, d);
									l =
										s && b !== 'right'
											? o === 'center'
												? i / 2 + 1
												: i + 2
											: 0;
									for (_ = 0, y = a.length; _ < y; ++_) {
										f = a[_];
										h = e.labelTextColors[_];
										p = e.labelColors[_];
										n.fillStyle = h;
										xe.each(f.before, d);
										m = f.lines;
										for (v = 0, g = m.length; v < g; ++v) {
											if (s) {
												var k = c.x(u);
												n.fillStyle = e.legendColorBackground;
												n.fillRect(c.leftForLtr(k, i), t.y, i, i);
												n.lineWidth = 1;
												n.strokeStyle = p.borderColor;
												n.strokeRect(c.leftForLtr(k, i), t.y, i, i);
												n.fillStyle = p.backgroundColor;
												n.fillRect(
													c.leftForLtr(c.xPlus(k, 1), i - 2),
													t.y + 1,
													i - 2,
													i - 2
												);
												n.fillStyle = h;
											}
											d(m[v]);
										}
										xe.each(f.after, d);
									}
									l = 0;
									xe.each(e.afterBody, d);
									t.y -= r;
								},
								drawFooter: function (e, t, n) {
									var i = t.footer;
									var r = i.length;
									var o, a;
									if (r) {
										var s = Un(t.rtl, t.x, t.width);
										e.x = ei(t, t._footerAlign);
										e.y += t.footerMarginTop;
										n.textAlign = s.textAlign(t._footerAlign);
										n.textBaseline = 'middle';
										o = t.footerFontSize;
										n.fillStyle = t.footerFontColor;
										n.font = xe.fontString(
											o,
											t._footerFontStyle,
											t._footerFontFamily
										);
										for (a = 0; a < r; ++a) {
											n.fillText(i[a], s.x(e.x), e.y + o / 2);
											e.y += o + t.footerSpacing;
										}
									}
								},
								drawBackground: function (e, t, n, i) {
									n.fillStyle = t.backgroundColor;
									n.strokeStyle = t.borderColor;
									n.lineWidth = t.borderWidth;
									var r = t.xAlign;
									var o = t.yAlign;
									var a = e.x;
									var s = e.y;
									var l = i.width;
									var u = i.height;
									var c = t.cornerRadius;
									n.beginPath();
									n.moveTo(a + c, s);
									if (o === 'top') this.drawCaret(e, i);
									n.lineTo(a + l - c, s);
									n.quadraticCurveTo(a + l, s, a + l, s + c);
									if (o === 'center' && r === 'right') this.drawCaret(e, i);
									n.lineTo(a + l, s + u - c);
									n.quadraticCurveTo(a + l, s + u, a + l - c, s + u);
									if (o === 'bottom') this.drawCaret(e, i);
									n.lineTo(a + c, s + u);
									n.quadraticCurveTo(a, s + u, a, s + u - c);
									if (o === 'center' && r === 'left') this.drawCaret(e, i);
									n.lineTo(a, s + c);
									n.quadraticCurveTo(a, s, a + c, s);
									n.closePath();
									n.fill();
									if (t.borderWidth > 0) n.stroke();
								},
								draw: function () {
									var e = this._chart.ctx;
									var t = this._view;
									if (t.opacity === 0) return;
									var n = { width: t.width, height: t.height };
									var i = { x: t.x, y: t.y };
									var r = Math.abs(t.opacity < 0.001) ? 0 : t.opacity;
									var o =
										t.title.length ||
										t.beforeBody.length ||
										t.body.length ||
										t.afterBody.length ||
										t.footer.length;
									if (this._options.enabled && o) {
										e.save();
										e.globalAlpha = r;
										this.drawBackground(i, t, e, n);
										i.y += t.yPadding;
										xe.rtl.overrideTextDirection(e, t.textDirection);
										this.drawTitle(i, t, e);
										this.drawBody(i, t, e);
										this.drawFooter(i, t, e);
										xe.rtl.restoreTextDirection(e, t.textDirection);
										e.restore();
									}
								},
								handleEvent: function (e) {
									var t = this;
									var n = t._options;
									var i = false;
									t._lastActive = t._lastActive || [];
									if (e.type === 'mouseout') t._active = [];
									else {
										t._active = t._chart.getElementsAtEventForMode(
											e,
											n.mode,
											n
										);
										if (n.reverse) t._active.reverse();
									}
									i = !xe.arrayEquals(t._active, t._lastActive);
									if (i) {
										t._lastActive = t._active;
										if (n.enabled || n.custom) {
											t._eventPosition = { x: e.x, y: e.y };
											t.update(true);
											t.pivot();
										}
									}
									return i;
								},
							});
						ri.positioners = Xn;
						var oi = xe.valueOrDefault;
						function ai() {
							return xe.merge(Object.create(null), [].slice.call(arguments), {
								merger: function (e, t, n, i) {
									if (e === 'xAxes' || e === 'yAxes') {
										var r = n[e].length;
										var o, a, s;
										if (!t[e]) t[e] = [];
										for (o = 0; o < r; ++o) {
											s = n[e][o];
											a = oi(s.type, e === 'xAxes' ? 'category' : 'linear');
											if (o >= t[e].length) t[e].push({});
											if (!t[e][o].type || (s.type && s.type !== t[e][o].type))
												xe.merge(t[e][o], [zn.getScaleDefaults(a), s]);
											else xe.merge(t[e][o], s);
										}
									} else xe._merger(e, t, n, i);
								},
							});
						}
						function si() {
							return xe.merge(Object.create(null), [].slice.call(arguments), {
								merger: function (e, t, n, i) {
									var r = t[e] || Object.create(null);
									var o = n[e];
									if (e === 'scales') t[e] = ai(r, o);
									else if (e === 'scale')
										t[e] = xe.merge(r, [zn.getScaleDefaults(o.type), o]);
									else xe._merger(e, t, n, i);
								},
							});
						}
						function li(e) {
							e = e || Object.create(null);
							var t = (e.data = e.data || {});
							t.datasets = t.datasets || [];
							t.labels = t.labels || [];
							e.options = si(he.global, he[e.type], e.options || {});
							return e;
						}
						function ui(t) {
							var e = t.options;
							xe.each(t.scales, function (e) {
								dn.removeBox(t, e);
							});
							e = si(he.global, he[t.config.type], e);
							t.options = t.config.options = e;
							t.ensureScalesHaveIDs();
							t.buildOrUpdateScales();
							t.tooltip._options = e.tooltips;
							t.tooltip.initialize();
						}
						function ci(e, t, n) {
							var i;
							var r = function (e) {
								return e.id === i;
							};
							do {
								i = t + n++;
							} while (xe.findIndex(e, r) >= 0);
							return i;
						}
						function di(e) {
							return e === 'top' || e === 'bottom';
						}
						function fi(n, i) {
							return function (e, t) {
								return e[n] === t[n] ? e[i] - t[i] : e[n] - t[n];
							};
						}
						he._set('global', {
							elements: {},
							events: [
								'mousemove',
								'mouseout',
								'click',
								'touchstart',
								'touchmove',
							],
							hover: {
								onHover: null,
								mode: 'nearest',
								intersect: true,
								animationDuration: 400,
							},
							onClick: null,
							maintainAspectRatio: true,
							responsive: true,
							responsiveAnimationDuration: 0,
						});
						var hi = function (e, t) {
							this.construct(e, t);
							return this;
						};
						xe.extend(hi.prototype, {
							construct: function (e, t) {
								var n = this;
								t = li(t);
								var i = Fn.acquireContext(e, t);
								var r = i && i.canvas;
								var o = r && r.height;
								var a = r && r.width;
								n.id = xe.uid();
								n.ctx = i;
								n.canvas = r;
								n.config = t;
								n.width = a;
								n.height = o;
								n.aspectRatio = o ? a / o : null;
								n.options = t.options;
								n._bufferedRender = false;
								n._layers = [];
								n.chart = n;
								n.controller = n;
								hi.instances[n.id] = n;
								Object.defineProperty(n, 'data', {
									get: function () {
										return n.config.data;
									},
									set: function (e) {
										n.config.data = e;
									},
								});
								if (!i || !r) {
									console.error(
										"Failed to create chart: can't acquire context from the given item"
									);
									return;
								}
								n.initialize();
								n.update();
							},
							initialize: function () {
								var e = this;
								Bn.notify(e, 'beforeInit');
								xe.retinaScale(e, e.options.devicePixelRatio);
								e.bindEvents();
								if (e.options.responsive) e.resize(true);
								e.initToolTip();
								Bn.notify(e, 'afterInit');
								return e;
							},
							clear: function () {
								xe.canvas.clear(this);
								return this;
							},
							stop: function () {
								He.cancelAnimation(this);
								return this;
							},
							resize: function (e) {
								var t = this;
								var n = t.options;
								var i = t.canvas;
								var r = (n.maintainAspectRatio && t.aspectRatio) || null;
								var o = Math.max(0, Math.floor(xe.getMaximumWidth(i)));
								var a = Math.max(
									0,
									Math.floor(r ? o / r : xe.getMaximumHeight(i))
								);
								if (t.width === o && t.height === a) return;
								i.width = t.width = o;
								i.height = t.height = a;
								i.style.width = o + 'px';
								i.style.height = a + 'px';
								xe.retinaScale(t, n.devicePixelRatio);
								if (!e) {
									var s = { width: o, height: a };
									Bn.notify(t, 'resize', [s]);
									if (n.onResize) n.onResize(t, s);
									t.stop();
									t.update({ duration: n.responsiveAnimationDuration });
								}
							},
							ensureScalesHaveIDs: function () {
								var e = this.options;
								var n = e.scales || {};
								var t = e.scale;
								xe.each(n.xAxes, function (e, t) {
									if (!e.id) e.id = ci(n.xAxes, 'x-axis-', t);
								});
								xe.each(n.yAxes, function (e, t) {
									if (!e.id) e.id = ci(n.yAxes, 'y-axis-', t);
								});
								if (t) t.id = t.id || 'scale';
							},
							buildOrUpdateScales: function () {
								var a = this;
								var e = a.options;
								var s = a.scales || {};
								var t = [];
								var l = Object.keys(s).reduce(function (e, t) {
									e[t] = false;
									return e;
								}, {});
								if (e.scales)
									t = t.concat(
										(e.scales.xAxes || []).map(function (e) {
											return {
												options: e,
												dtype: 'category',
												dposition: 'bottom',
											};
										}),
										(e.scales.yAxes || []).map(function (e) {
											return { options: e, dtype: 'linear', dposition: 'left' };
										})
									);
								if (e.scale)
									t.push({
										options: e.scale,
										dtype: 'radialLinear',
										isDefault: true,
										dposition: 'chartArea',
									});
								xe.each(t, function (e) {
									var t = e.options;
									var n = t.id;
									var i = oi(t.type, e.dtype);
									if (di(t.position) !== di(e.dposition))
										t.position = e.dposition;
									l[n] = true;
									var r = null;
									if (n in s && s[n].type === i) {
										r = s[n];
										r.options = t;
										r.ctx = a.ctx;
										r.chart = a;
									} else {
										var o = zn.getScaleConstructor(i);
										if (!o) return;
										r = new o({
											id: n,
											type: i,
											options: t,
											ctx: a.ctx,
											chart: a,
										});
										s[r.id] = r;
									}
									r.mergeTicksOptions();
									if (e.isDefault) a.scale = r;
								});
								xe.each(l, function (e, t) {
									if (!e) delete s[t];
								});
								a.scales = s;
								zn.addScalesToLayout(this);
							},
							buildOrUpdateControllers: function () {
								var e = this;
								var t = [];
								var n = e.data.datasets;
								var i, r;
								for (i = 0, r = n.length; i < r; i++) {
									var o = n[i];
									var a = e.getDatasetMeta(i);
									var s = o.type || e.config.type;
									if (a.type && a.type !== s) {
										e.destroyDatasetMeta(i);
										a = e.getDatasetMeta(i);
									}
									a.type = s;
									a.order = o.order || 0;
									a.index = i;
									if (a.controller) {
										a.controller.updateIndex(i);
										a.controller.linkScales();
									} else {
										var l = Vt[a.type];
										if (l === undefined)
											throw new Error('"' + a.type + '" is not a chart type.');
										a.controller = new l(e, i);
										t.push(a.controller);
									}
								}
								return t;
							},
							resetElements: function () {
								var n = this;
								xe.each(
									n.data.datasets,
									function (e, t) {
										n.getDatasetMeta(t).controller.reset();
									},
									n
								);
							},
							reset: function () {
								this.resetElements();
								this.tooltip.initialize();
							},
							update: function (e) {
								var t = this;
								var n, i;
								if (!e || typeof e !== 'object')
									e = { duration: e, lazy: arguments[1] };
								ui(t);
								Bn._invalidate(t);
								if (Bn.notify(t, 'beforeUpdate') === false) return;
								t.tooltip._data = t.data;
								var r = t.buildOrUpdateControllers();
								for (n = 0, i = t.data.datasets.length; n < i; n++)
									t.getDatasetMeta(n).controller.buildOrUpdateElements();
								t.updateLayout();
								if (t.options.animation && t.options.animation.duration)
									xe.each(r, function (e) {
										e.reset();
									});
								t.updateDatasets();
								t.tooltip.initialize();
								t.lastActive = [];
								Bn.notify(t, 'afterUpdate');
								t._layers.sort(fi('z', '_idx'));
								if (t._bufferedRender)
									t._bufferedRequest = {
										duration: e.duration,
										easing: e.easing,
										lazy: e.lazy,
									};
								else t.render(e);
							},
							updateLayout: function () {
								var t = this;
								if (Bn.notify(t, 'beforeLayout') === false) return;
								dn.update(this, this.width, this.height);
								t._layers = [];
								xe.each(
									t.boxes,
									function (e) {
										if (e._configure) e._configure();
										t._layers.push.apply(t._layers, e._layers());
									},
									t
								);
								t._layers.forEach(function (e, t) {
									e._idx = t;
								});
								Bn.notify(t, 'afterScaleUpdate');
								Bn.notify(t, 'afterLayout');
							},
							updateDatasets: function () {
								var e = this;
								if (Bn.notify(e, 'beforeDatasetsUpdate') === false) return;
								for (var t = 0, n = e.data.datasets.length; t < n; ++t)
									e.updateDataset(t);
								Bn.notify(e, 'afterDatasetsUpdate');
							},
							updateDataset: function (e) {
								var t = this;
								var n = t.getDatasetMeta(e);
								var i = { meta: n, index: e };
								if (Bn.notify(t, 'beforeDatasetUpdate', [i]) === false) return;
								n.controller._update();
								Bn.notify(t, 'afterDatasetUpdate', [i]);
							},
							render: function (e) {
								var t = this;
								if (!e || typeof e !== 'object')
									e = { duration: e, lazy: arguments[1] };
								var n = t.options.animation;
								var i = oi(e.duration, n && n.duration);
								var r = e.lazy;
								if (Bn.notify(t, 'beforeRender') === false) return;
								var o = function (e) {
									Bn.notify(t, 'afterRender');
									xe.callback(n && n.onComplete, [e], t);
								};
								if (n && i) {
									var a = new Ae({
										numSteps: i / 16.66,
										easing: e.easing || n.easing,
										render: function (e, t) {
											var n = xe.easing.effects[t.easing];
											var i = t.currentStep;
											var r = i / t.numSteps;
											e.draw(n(r), r, i);
										},
										onAnimationProgress: n.onProgress,
										onAnimationComplete: o,
									});
									He.addAnimation(t, a, i, r);
								} else {
									t.draw();
									o(new Ae({ numSteps: 0, chart: t }));
								}
								return t;
							},
							draw: function (e) {
								var t = this;
								var n, i;
								t.clear();
								if (xe.isNullOrUndef(e)) e = 1;
								t.transition(e);
								if (t.width <= 0 || t.height <= 0) return;
								if (Bn.notify(t, 'beforeDraw', [e]) === false) return;
								i = t._layers;
								for (n = 0; n < i.length && i[n].z <= 0; ++n)
									i[n].draw(t.chartArea);
								t.drawDatasets(e);
								for (; n < i.length; ++n) i[n].draw(t.chartArea);
								t._drawTooltip(e);
								Bn.notify(t, 'afterDraw', [e]);
							},
							transition: function (e) {
								var t = this;
								for (var n = 0, i = (t.data.datasets || []).length; n < i; ++n)
									if (t.isDatasetVisible(n))
										t.getDatasetMeta(n).controller.transition(e);
								t.tooltip.transition(e);
							},
							_getSortedDatasetMetas: function (e) {
								var t = this;
								var n = t.data.datasets || [];
								var i = [];
								var r, o;
								for (r = 0, o = n.length; r < o; ++r)
									if (!e || t.isDatasetVisible(r)) i.push(t.getDatasetMeta(r));
								i.sort(fi('order', 'index'));
								return i;
							},
							_getSortedVisibleDatasetMetas: function () {
								return this._getSortedDatasetMetas(true);
							},
							drawDatasets: function (e) {
								var t = this;
								var n, i;
								if (Bn.notify(t, 'beforeDatasetsDraw', [e]) === false) return;
								n = t._getSortedVisibleDatasetMetas();
								for (i = n.length - 1; i >= 0; --i) t.drawDataset(n[i], e);
								Bn.notify(t, 'afterDatasetsDraw', [e]);
							},
							drawDataset: function (e, t) {
								var n = this;
								var i = { meta: e, index: e.index, easingValue: t };
								if (Bn.notify(n, 'beforeDatasetDraw', [i]) === false) return;
								e.controller.draw(t);
								Bn.notify(n, 'afterDatasetDraw', [i]);
							},
							_drawTooltip: function (e) {
								var t = this;
								var n = t.tooltip;
								var i = { tooltip: n, easingValue: e };
								if (Bn.notify(t, 'beforeTooltipDraw', [i]) === false) return;
								n.draw();
								Bn.notify(t, 'afterTooltipDraw', [i]);
							},
							getElementAtEvent: function (e) {
								return Qt.modes.single(this, e);
							},
							getElementsAtEvent: function (e) {
								return Qt.modes.label(this, e, { intersect: true });
							},
							getElementsAtXAxis: function (e) {
								return Qt.modes['x-axis'](this, e, { intersect: true });
							},
							getElementsAtEventForMode: function (e, t, n) {
								var i = Qt.modes[t];
								if (typeof i === 'function') return i(this, e, n);
								return [];
							},
							getDatasetAtEvent: function (e) {
								return Qt.modes.dataset(this, e, { intersect: true });
							},
							getDatasetMeta: function (e) {
								var t = this;
								var n = t.data.datasets[e];
								if (!n._meta) n._meta = {};
								var i = n._meta[t.id];
								if (!i)
									i = n._meta[t.id] = {
										type: null,
										data: [],
										dataset: null,
										controller: null,
										hidden: null,
										xAxisID: null,
										yAxisID: null,
										order: n.order || 0,
										index: e,
									};
								return i;
							},
							getVisibleDatasetCount: function () {
								var e = 0;
								for (var t = 0, n = this.data.datasets.length; t < n; ++t)
									if (this.isDatasetVisible(t)) e++;
								return e;
							},
							isDatasetVisible: function (e) {
								var t = this.getDatasetMeta(e);
								return typeof t.hidden === 'boolean'
									? !t.hidden
									: !this.data.datasets[e].hidden;
							},
							generateLegend: function () {
								return this.options.legendCallback(this);
							},
							destroyDatasetMeta: function (e) {
								var t = this.id;
								var n = this.data.datasets[e];
								var i = n._meta && n._meta[t];
								if (i) {
									i.controller.destroy();
									delete n._meta[t];
								}
							},
							destroy: function () {
								var e = this;
								var t = e.canvas;
								var n, i;
								e.stop();
								for (n = 0, i = e.data.datasets.length; n < i; ++n)
									e.destroyDatasetMeta(n);
								if (t) {
									e.unbindEvents();
									xe.canvas.clear(e);
									Fn.releaseContext(e.ctx);
									e.canvas = null;
									e.ctx = null;
								}
								Bn.notify(e, 'destroy');
								delete hi.instances[e.id];
							},
							toBase64Image: function () {
								return this.canvas.toDataURL.apply(this.canvas, arguments);
							},
							initToolTip: function () {
								var e = this;
								e.tooltip = new ri(
									{
										_chart: e,
										_chartInstance: e,
										_data: e.data,
										_options: e.options.tooltips,
									},
									e
								);
							},
							bindEvents: function () {
								var t = this;
								var n = (t._listeners = {});
								var i = function () {
									t.eventHandler.apply(t, arguments);
								};
								xe.each(t.options.events, function (e) {
									Fn.addEventListener(t, e, i);
									n[e] = i;
								});
								if (t.options.responsive) {
									i = function () {
										t.resize();
									};
									Fn.addEventListener(t, 'resize', i);
									n.resize = i;
								}
							},
							unbindEvents: function () {
								var n = this;
								var e = n._listeners;
								if (!e) return;
								delete n._listeners;
								xe.each(e, function (e, t) {
									Fn.removeEventListener(n, t, e);
								});
							},
							updateHoverStyle: function (e, t, n) {
								var i = n ? 'set' : 'remove';
								var r, o, a;
								for (o = 0, a = e.length; o < a; ++o) {
									r = e[o];
									if (r)
										this.getDatasetMeta(r._datasetIndex).controller[
											i + 'HoverStyle'
										](r);
								}
								if (t === 'dataset')
									this.getDatasetMeta(e[0]._datasetIndex).controller[
										'_' + i + 'DatasetHoverStyle'
									]();
							},
							eventHandler: function (e) {
								var t = this;
								var n = t.tooltip;
								if (Bn.notify(t, 'beforeEvent', [e]) === false) return;
								t._bufferedRender = true;
								t._bufferedRequest = null;
								var i = t.handleEvent(e);
								if (n) i = n._start ? n.handleEvent(e) : i | n.handleEvent(e);
								Bn.notify(t, 'afterEvent', [e]);
								var r = t._bufferedRequest;
								if (r) t.render(r);
								else if (i && !t.animating) {
									t.stop();
									t.render({
										duration: t.options.hover.animationDuration,
										lazy: true,
									});
								}
								t._bufferedRender = false;
								t._bufferedRequest = null;
								return t;
							},
							handleEvent: function (e) {
								var t = this;
								var n = t.options || {};
								var i = n.hover;
								var r = false;
								t.lastActive = t.lastActive || [];
								if (e.type === 'mouseout') t.active = [];
								else t.active = t.getElementsAtEventForMode(e, i.mode, i);
								xe.callback(
									n.onHover || n.hover.onHover,
									[e.native, t.active],
									t
								);
								if (e.type === 'mouseup' || e.type === 'click')
									if (n.onClick) n.onClick.call(t, e.native, t.active);
								if (t.lastActive.length)
									t.updateHoverStyle(t.lastActive, i.mode, false);
								if (t.active.length && i.mode)
									t.updateHoverStyle(t.active, i.mode, true);
								r = !xe.arrayEquals(t.active, t.lastActive);
								t.lastActive = t.active;
								return r;
							},
						}),
							(hi.instances = {});
						var pi = hi;
						((hi.Controller = hi).types = {}),
							(xe.configMerge = si),
							(xe.scaleMerge = ai);
						var mi = function () {
							xe.where = function (e, t) {
								if (xe.isArray(e) && Array.prototype.filter) return e.filter(t);
								var n = [];
								xe.each(e, function (e) {
									if (t(e)) n.push(e);
								});
								return n;
							};
							xe.findIndex = Array.prototype.findIndex
								? function (e, t, n) {
										return e.findIndex(t, n);
								  }
								: function (e, t, n) {
										n = n === undefined ? e : n;
										for (var i = 0, r = e.length; i < r; ++i)
											if (t.call(n, e[i], i, e)) return i;
										return -1;
								  };
							xe.findNextWhere = function (e, t, n) {
								if (xe.isNullOrUndef(n)) n = -1;
								for (var i = n + 1; i < e.length; i++) {
									var r = e[i];
									if (t(r)) return r;
								}
							};
							xe.findPreviousWhere = function (e, t, n) {
								if (xe.isNullOrUndef(n)) n = e.length;
								for (var i = n - 1; i >= 0; i--) {
									var r = e[i];
									if (t(r)) return r;
								}
							};
							xe.isNumber = function (e) {
								return !isNaN(parseFloat(e)) && isFinite(e);
							};
							xe.almostEquals = function (e, t, n) {
								return Math.abs(e - t) < n;
							};
							xe.almostWhole = function (e, t) {
								var n = Math.round(e);
								return n - t <= e && n + t >= e;
							};
							xe.max = function (e) {
								return e.reduce(function (e, t) {
									if (!isNaN(t)) return Math.max(e, t);
									return e;
								}, Number.NEGATIVE_INFINITY);
							};
							xe.min = function (e) {
								return e.reduce(function (e, t) {
									if (!isNaN(t)) return Math.min(e, t);
									return e;
								}, Number.POSITIVE_INFINITY);
							};
							xe.sign = Math.sign
								? function (e) {
										return Math.sign(e);
								  }
								: function (e) {
										e = +e;
										if (e === 0 || isNaN(e)) return e;
										return e > 0 ? 1 : -1;
								  };
							xe.toRadians = function (e) {
								return e * (Math.PI / 180);
							};
							xe.toDegrees = function (e) {
								return e * (180 / Math.PI);
							};
							xe._decimalPlaces = function (e) {
								if (!xe.isFinite(e)) return;
								var t = 1;
								var n = 0;
								while (Math.round(e * t) / t !== e) {
									t *= 10;
									n++;
								}
								return n;
							};
							xe.getAngleFromPoint = function (e, t) {
								var n = t.x - e.x;
								var i = t.y - e.y;
								var r = Math.sqrt(n * n + i * i);
								var o = Math.atan2(i, n);
								if (o < -0.5 * Math.PI) o += 2 * Math.PI;
								return { angle: o, distance: r };
							};
							xe.distanceBetweenPoints = function (e, t) {
								return Math.sqrt(
									Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2)
								);
							};
							xe.aliasPixel = function (e) {
								return e % 2 === 0 ? 0 : 0.5;
							};
							xe._alignPixel = function (e, t, n) {
								var i = e.currentDevicePixelRatio;
								var r = n / 2;
								return Math.round((t - r) * i) / i + r;
							};
							xe.splineCurve = function (e, t, n, i) {
								var r = e.skip ? t : e;
								var o = t;
								var a = n.skip ? t : n;
								var s = Math.sqrt(
									Math.pow(o.x - r.x, 2) + Math.pow(o.y - r.y, 2)
								);
								var l = Math.sqrt(
									Math.pow(a.x - o.x, 2) + Math.pow(a.y - o.y, 2)
								);
								var u = s / (s + l);
								var c = l / (s + l);
								u = isNaN(u) ? 0 : u;
								c = isNaN(c) ? 0 : c;
								var d = i * u;
								var f = i * c;
								return {
									previous: {
										x: o.x - d * (a.x - r.x),
										y: o.y - d * (a.y - r.y),
									},
									next: { x: o.x + f * (a.x - r.x), y: o.y + f * (a.y - r.y) },
								};
							};
							xe.EPSILON = Number.EPSILON || 1e-14;
							xe.splineCurveMonotone = function (e) {
								var t = (e || []).map(function (e) {
									return { model: e._model, deltaK: 0, mK: 0 };
								});
								var n = t.length;
								var i, r, o, a;
								for (i = 0; i < n; ++i) {
									o = t[i];
									if (o.model.skip) continue;
									r = i > 0 ? t[i - 1] : null;
									a = i < n - 1 ? t[i + 1] : null;
									if (a && !a.model.skip) {
										var s = a.model.x - o.model.x;
										o.deltaK = s !== 0 ? (a.model.y - o.model.y) / s : 0;
									}
									if (!r || r.model.skip) o.mK = o.deltaK;
									else if (!a || a.model.skip) o.mK = r.deltaK;
									else if (this.sign(r.deltaK) !== this.sign(o.deltaK))
										o.mK = 0;
									else o.mK = (r.deltaK + o.deltaK) / 2;
								}
								var l, u, c, d;
								for (i = 0; i < n - 1; ++i) {
									o = t[i];
									a = t[i + 1];
									if (o.model.skip || a.model.skip) continue;
									if (xe.almostEquals(o.deltaK, 0, this.EPSILON)) {
										o.mK = a.mK = 0;
										continue;
									}
									l = o.mK / o.deltaK;
									u = a.mK / o.deltaK;
									d = Math.pow(l, 2) + Math.pow(u, 2);
									if (d <= 9) continue;
									c = 3 / Math.sqrt(d);
									o.mK = l * c * o.deltaK;
									a.mK = u * c * o.deltaK;
								}
								var f;
								for (i = 0; i < n; ++i) {
									o = t[i];
									if (o.model.skip) continue;
									r = i > 0 ? t[i - 1] : null;
									a = i < n - 1 ? t[i + 1] : null;
									if (r && !r.model.skip) {
										f = (o.model.x - r.model.x) / 3;
										o.model.controlPointPreviousX = o.model.x - f;
										o.model.controlPointPreviousY = o.model.y - f * o.mK;
									}
									if (a && !a.model.skip) {
										f = (a.model.x - o.model.x) / 3;
										o.model.controlPointNextX = o.model.x + f;
										o.model.controlPointNextY = o.model.y + f * o.mK;
									}
								}
							};
							xe.nextItem = function (e, t, n) {
								if (n) return t >= e.length - 1 ? e[0] : e[t + 1];
								return t >= e.length - 1 ? e[e.length - 1] : e[t + 1];
							};
							xe.previousItem = function (e, t, n) {
								if (n) return t <= 0 ? e[e.length - 1] : e[t - 1];
								return t <= 0 ? e[0] : e[t - 1];
							};
							xe.niceNum = function (e, t) {
								var n = Math.floor(xe.log10(e));
								var i = e / Math.pow(10, n);
								var r;
								if (t)
									if (i < 1.5) r = 1;
									else if (i < 3) r = 2;
									else if (i < 7) r = 5;
									else r = 10;
								else if (i <= 1) r = 1;
								else if (i <= 2) r = 2;
								else if (i <= 5) r = 5;
								else r = 10;
								return r * Math.pow(10, n);
							};
							xe.requestAnimFrame = (function () {
								if (typeof window === 'undefined')
									return function (e) {
										e();
									};
								return (
									window.requestAnimationFrame ||
									window.webkitRequestAnimationFrame ||
									window.mozRequestAnimationFrame ||
									window.oRequestAnimationFrame ||
									window.msRequestAnimationFrame ||
									function (e) {
										return window.setTimeout(e, 1e3 / 60);
									}
								);
							})();
							xe.getRelativePosition = function (e, t) {
								var n, i;
								var r = e.originalEvent || e;
								var o = e.target || e.srcElement;
								var a = o.getBoundingClientRect();
								var s = r.touches;
								if (s && s.length > 0) {
									n = s[0].clientX;
									i = s[0].clientY;
								} else {
									n = r.clientX;
									i = r.clientY;
								}
								var l = parseFloat(xe.getStyle(o, 'padding-left'));
								var u = parseFloat(xe.getStyle(o, 'padding-top'));
								var c = parseFloat(xe.getStyle(o, 'padding-right'));
								var d = parseFloat(xe.getStyle(o, 'padding-bottom'));
								var f = a.right - a.left - l - c;
								var h = a.bottom - a.top - u - d;
								n = Math.round(
									(((n - a.left - l) / f) * o.width) / t.currentDevicePixelRatio
								);
								i = Math.round(
									(((i - a.top - u) / h) * o.height) / t.currentDevicePixelRatio
								);
								return { x: n, y: i };
							};
							function c(e, t, n) {
								var i;
								if (typeof e === 'string') {
									i = parseInt(e, 10);
									if (e.indexOf('%') !== -1) i = (i / 100) * t.parentNode[n];
								} else i = e;
								return i;
							}
							function d(e) {
								return e !== undefined && e !== null && e !== 'none';
							}
							function t(e, t, n) {
								var i = document.defaultView;
								var r = xe._getParentNode(e);
								var o = i.getComputedStyle(e)[t];
								var a = i.getComputedStyle(r)[t];
								var s = d(o);
								var l = d(a);
								var u = Number.POSITIVE_INFINITY;
								if (s || l)
									return Math.min(s ? c(o, e, n) : u, l ? c(a, r, n) : u);
								return 'none';
							}
							xe.getConstraintWidth = function (e) {
								return t(e, 'max-width', 'clientWidth');
							};
							xe.getConstraintHeight = function (e) {
								return t(e, 'max-height', 'clientHeight');
							};
							xe._calculatePadding = function (e, t, n) {
								t = xe.getStyle(e, t);
								return t.indexOf('%') > -1
									? (n * parseInt(t, 10)) / 100
									: parseInt(t, 10);
							};
							xe._getParentNode = function (e) {
								var t = e.parentNode;
								if (t && t.toString() === '[object ShadowRoot]') t = t.host;
								return t;
							};
							xe.getMaximumWidth = function (e) {
								var t = xe._getParentNode(e);
								if (!t) return e.clientWidth;
								var n = t.clientWidth;
								var i = xe._calculatePadding(t, 'padding-left', n);
								var r = xe._calculatePadding(t, 'padding-right', n);
								var o = n - i - r;
								var a = xe.getConstraintWidth(e);
								return isNaN(a) ? o : Math.min(o, a);
							};
							xe.getMaximumHeight = function (e) {
								var t = xe._getParentNode(e);
								if (!t) return e.clientHeight;
								var n = t.clientHeight;
								var i = xe._calculatePadding(t, 'padding-top', n);
								var r = xe._calculatePadding(t, 'padding-bottom', n);
								var o = n - i - r;
								var a = xe.getConstraintHeight(e);
								return isNaN(a) ? o : Math.min(o, a);
							};
							xe.getStyle = function (e, t) {
								return e.currentStyle
									? e.currentStyle[t]
									: document.defaultView
											.getComputedStyle(e, null)
											.getPropertyValue(t);
							};
							xe.retinaScale = function (e, t) {
								var n = (e.currentDevicePixelRatio =
									t ||
									(typeof window !== 'undefined' && window.devicePixelRatio) ||
									1);
								if (n === 1) return;
								var i = e.canvas;
								var r = e.height;
								var o = e.width;
								i.height = r * n;
								i.width = o * n;
								e.ctx.scale(n, n);
								if (!i.style.height && !i.style.width) {
									i.style.height = r + 'px';
									i.style.width = o + 'px';
								}
							};
							xe.fontString = function (e, t, n) {
								return t + ' ' + e + 'px ' + n;
							};
							xe.longestText = function (e, t, n, i) {
								i = i || {};
								var r = (i.data = i.data || {});
								var o = (i.garbageCollect = i.garbageCollect || []);
								if (i.font !== t) {
									r = i.data = {};
									o = i.garbageCollect = [];
									i.font = t;
								}
								e.font = t;
								var a = 0;
								var s = n.length;
								var l, u, c, d, f;
								for (l = 0; l < s; l++) {
									d = n[l];
									if (d !== undefined && d !== null && xe.isArray(d) !== true)
										a = xe.measureText(e, r, o, a, d);
									else if (xe.isArray(d))
										for (u = 0, c = d.length; u < c; u++) {
											f = d[u];
											if (f !== undefined && f !== null && !xe.isArray(f))
												a = xe.measureText(e, r, o, a, f);
										}
								}
								var h = o.length / 2;
								if (h > n.length) {
									for (l = 0; l < h; l++) delete r[o[l]];
									o.splice(0, h);
								}
								return a;
							};
							xe.measureText = function (e, t, n, i, r) {
								var o = t[r];
								if (!o) {
									o = t[r] = e.measureText(r).width;
									n.push(r);
								}
								if (o > i) i = o;
								return i;
							};
							xe.numberOfLabelLines = function (e) {
								var t = 1;
								xe.each(e, function (e) {
									if (xe.isArray(e)) if (e.length > t) t = e.length;
								});
								return t;
							};
							xe.color = !$
								? function (e) {
										console.error('Color.js not found!');
										return e;
								  }
								: function (e) {
										if (e instanceof CanvasGradient) e = he.global.defaultColor;
										return $(e);
								  };
							xe.getHoverColor = function (e) {
								return e instanceof CanvasPattern || e instanceof CanvasGradient
									? e
									: xe.color(e).saturate(0.5).darken(0.1).rgbString();
							};
						};
						function _i() {
							throw new Error(
								'This method is not implemented: either no adapter can ' +
									'be found or an incomplete integration was provided.'
							);
						}
						function vi(e) {
							this.options = e || {};
						}
						xe.extend(vi.prototype, {
							formats: _i,
							parse: _i,
							format: _i,
							add: _i,
							diff: _i,
							startOf: _i,
							endOf: _i,
							_create: function (e) {
								return e;
							},
						}),
							(vi.override = function (e) {
								xe.extend(vi.prototype, e);
							});
						var yi,
							gi = { _date: vi },
							bi = {
								formatters: {
									values: function (e) {
										return xe.isArray(e) ? e : '' + e;
									},
									linear: function (e, t, n) {
										var i = n.length > 3 ? n[2] - n[1] : n[1] - n[0];
										if (Math.abs(i) > 1)
											if (e !== Math.floor(e)) i = e - Math.floor(e);
										var r = xe.log10(Math.abs(i));
										var o = '';
										if (e !== 0) {
											var a = Math.max(
												Math.abs(n[0]),
												Math.abs(n[n.length - 1])
											);
											if (a < 1e-4) {
												var s = xe.log10(Math.abs(e));
												var l = Math.floor(s) - Math.floor(r);
												l = Math.max(Math.min(l, 20), 0);
												o = e.toExponential(l);
											} else {
												var u = -1 * Math.floor(r);
												u = Math.max(Math.min(u, 20), 0);
												o = e.toFixed(u);
											}
										} else o = '0';
										return o;
									},
									logarithmic: function (e, t, n) {
										var i = e / Math.pow(10, Math.floor(xe.log10(e)));
										if (e === 0) return '0';
										else if (
											i === 1 ||
											i === 2 ||
											i === 5 ||
											t === 0 ||
											t === n.length - 1
										)
											return e.toExponential();
										return '';
									},
								},
							},
							ki = xe.isArray,
							wi = xe.isNullOrUndef,
							Mi = xe.valueOrDefault,
							Li = xe.valueAtIndexOrDefault;
						function xi(e, t) {
							var n = [];
							var i = e.length / t;
							var r = 0;
							var o = e.length;
							for (; r < o; r += i) n.push(e[Math.floor(r)]);
							return n;
						}
						function Di(e, t, n) {
							var i = e.getTicks().length;
							var r = Math.min(t, i - 1);
							var o = e.getPixelForTick(r);
							var a = e._startPixel;
							var s = e._endPixel;
							var l = 1e-6;
							var u;
							if (n) {
								if (i === 1) u = Math.max(o - a, s - o);
								else if (t === 0) u = (e.getPixelForTick(1) - o) / 2;
								else u = (o - e.getPixelForTick(r - 1)) / 2;
								o += r < t ? u : -u;
								if (o < a - l || o > s + l) return;
							}
							return o;
						}
						function Si(e, r) {
							xe.each(e, function (e) {
								var t = e.gc;
								var n = t.length / 2;
								var i;
								if (n > r) {
									for (i = 0; i < n; ++i) delete e.data[t[i]];
									t.splice(0, n);
								}
							});
						}
						function Ti(e, t, n, i) {
							var r = n.length;
							var o = [];
							var a = [];
							var s = [];
							var l = 0;
							var u = 0;
							var c, d, f, h, p, m, _, v, y, g, b, k, w;
							for (c = 0; c < r; ++c) {
								h = n[c].label;
								p = n[c].major ? t.major : t.minor;
								e.font = m = p.string;
								_ = i[m] = i[m] || { data: {}, gc: [] };
								v = p.lineHeight;
								y = g = 0;
								if (!wi(h) && !ki(h)) {
									y = xe.measureText(e, _.data, _.gc, y, h);
									g = v;
								} else if (ki(h))
									for (d = 0, f = h.length; d < f; ++d) {
										b = h[d];
										if (!wi(b) && !ki(b)) {
											y = xe.measureText(e, _.data, _.gc, y, b);
											g += v;
										}
									}
								o.push(y);
								a.push(g);
								s.push(v / 2);
								l = Math.max(y, l);
								u = Math.max(g, u);
							}
							Si(i, r);
							k = o.indexOf(l);
							w = a.indexOf(u);
							function M(e) {
								return {
									width: o[e] || 0,
									height: a[e] || 0,
									offset: s[e] || 0,
								};
							}
							return {
								first: M(0),
								last: M(r - 1),
								widest: M(k),
								highest: M(w),
							};
						}
						function Oi(e) {
							return e.drawTicks ? e.tickMarkLength : 0;
						}
						function Yi(e) {
							var t, n;
							if (!e.display) return 0;
							t = xe.options._parseFont(e);
							n = xe.options.toPadding(e.padding);
							return t.lineHeight + n.height;
						}
						function Ci(e, t) {
							return xe.extend(
								xe.options._parseFont({
									fontFamily: Mi(t.fontFamily, e.fontFamily),
									fontSize: Mi(t.fontSize, e.fontSize),
									fontStyle: Mi(t.fontStyle, e.fontStyle),
									lineHeight: Mi(t.lineHeight, e.lineHeight),
								}),
								{
									color: xe.options.resolve([
										t.fontColor,
										e.fontColor,
										he.global.defaultFontColor,
									]),
								}
							);
						}
						function ji(e) {
							var t = Ci(e, e.minor);
							var n = e.major.enabled ? Ci(e, e.major) : t;
							return { minor: t, major: n };
						}
						function Ei(e) {
							var t = [];
							var n, i, r;
							for (i = 0, r = e.length; i < r; ++i) {
								n = e[i];
								if (typeof n._index !== 'undefined') t.push(n);
							}
							return t;
						}
						function Pi(e) {
							var t = e.length;
							var n, i;
							if (t < 2) return false;
							for (i = e[0], n = 1; n < t; ++n)
								if (e[n] - e[n - 1] !== i) return false;
							return i;
						}
						function Ai(e, t, n, i) {
							var r = Pi(e);
							var o = (t.length - 1) / i;
							var a, s, l, u;
							if (!r) return Math.max(o, 1);
							a = xe.math._factorize(r);
							for (l = 0, u = a.length - 1; l < u; l++) {
								s = a[l];
								if (s > o) return s;
							}
							return Math.max(o, 1);
						}
						function Hi(e) {
							var t = [];
							var n, i;
							for (n = 0, i = e.length; n < i; n++) if (e[n].major) t.push(n);
							return t;
						}
						function Ii(e, t, n) {
							var i = 0;
							var r = t[0];
							var o, a;
							n = Math.ceil(n);
							for (o = 0; o < e.length; o++) {
								a = e[o];
								if (o === r) {
									a._index = o;
									i++;
									r = t[i * n];
								} else delete a.label;
							}
						}
						function Ri(e, t, n, i) {
							var r = Mi(n, 0);
							var o = Math.min(Mi(i, e.length), e.length);
							var a = 0;
							var s, l, u, c;
							t = Math.ceil(t);
							if (i) {
								s = i - n;
								t = s / Math.floor(s / t);
							}
							c = r;
							while (c < 0) {
								a++;
								c = Math.round(r + a * t);
							}
							for (l = Math.max(r, 0); l < o; l++) {
								u = e[l];
								if (l === c) {
									u._index = l;
									a++;
									c = Math.round(r + a * t);
								} else delete u.label;
							}
						}
						he._set('scale', {
							display: true,
							position: 'left',
							offset: false,
							gridLines: {
								display: true,
								color: 'rgba(0,0,0,0.1)',
								lineWidth: 1,
								drawBorder: true,
								drawOnChartArea: true,
								drawTicks: true,
								tickMarkLength: 10,
								zeroLineWidth: 1,
								zeroLineColor: 'rgba(0,0,0,0.25)',
								zeroLineBorderDash: [],
								zeroLineBorderDashOffset: 0,
								offsetGridLines: false,
								borderDash: [],
								borderDashOffset: 0,
							},
							scaleLabel: {
								display: false,
								labelString: '',
								padding: { top: 4, bottom: 4 },
							},
							ticks: {
								beginAtZero: false,
								minRotation: 0,
								maxRotation: 50,
								mirror: false,
								padding: 0,
								reverse: false,
								display: true,
								autoSkip: true,
								autoSkipPadding: 0,
								labelOffset: 0,
								callback: bi.formatters.values,
								minor: {},
								major: {},
							},
						});
						var Ni = Ee.extend({
							zeroLineIndex: 0,
							getPadding: function () {
								var e = this;
								return {
									left: e.paddingLeft || 0,
									top: e.paddingTop || 0,
									right: e.paddingRight || 0,
									bottom: e.paddingBottom || 0,
								};
							},
							getTicks: function () {
								return this._ticks;
							},
							_getLabels: function () {
								var e = this.chart.data;
								return (
									this.options.labels ||
									(this.isHorizontal() ? e.xLabels : e.yLabels) ||
									e.labels ||
									[]
								);
							},
							mergeTicksOptions: function () {},
							beforeUpdate: function () {
								xe.callback(this.options.beforeUpdate, [this]);
							},
							update: function (e, t, n) {
								var i = this;
								var r = i.options.ticks;
								var o = r.sampleSize;
								var a, s, l, u, c;
								i.beforeUpdate();
								i.maxWidth = e;
								i.maxHeight = t;
								i.margins = xe.extend(
									{ left: 0, right: 0, top: 0, bottom: 0 },
									n
								);
								i._ticks = null;
								i.ticks = null;
								i._labelSizes = null;
								i._maxLabelLines = 0;
								i.longestLabelWidth = 0;
								i.longestTextCache = i.longestTextCache || {};
								i._gridLineItems = null;
								i._labelItems = null;
								i.beforeSetDimensions();
								i.setDimensions();
								i.afterSetDimensions();
								i.beforeDataLimits();
								i.determineDataLimits();
								i.afterDataLimits();
								i.beforeBuildTicks();
								u = i.buildTicks() || [];
								u = i.afterBuildTicks(u) || u;
								if ((!u || !u.length) && i.ticks) {
									u = [];
									for (a = 0, s = i.ticks.length; a < s; ++a)
										u.push({ value: i.ticks[a], major: false });
								}
								i._ticks = u;
								c = o < u.length;
								l = i._convertTicksToLabels(c ? xi(u, o) : u);
								i._configure();
								i.beforeCalculateTickRotation();
								i.calculateTickRotation();
								i.afterCalculateTickRotation();
								i.beforeFit();
								i.fit();
								i.afterFit();
								i._ticksToDraw =
									r.display && (r.autoSkip || r.source === 'auto')
										? i._autoSkip(u)
										: u;
								if (c) l = i._convertTicksToLabels(i._ticksToDraw);
								i.ticks = l;
								i.afterUpdate();
								return i.minSize;
							},
							_configure: function () {
								var e = this;
								var t = e.options.ticks.reverse;
								var n, i;
								if (e.isHorizontal()) {
									n = e.left;
									i = e.right;
								} else {
									n = e.top;
									i = e.bottom;
									t = !t;
								}
								e._startPixel = n;
								e._endPixel = i;
								e._reversePixels = t;
								e._length = i - n;
							},
							afterUpdate: function () {
								xe.callback(this.options.afterUpdate, [this]);
							},
							beforeSetDimensions: function () {
								xe.callback(this.options.beforeSetDimensions, [this]);
							},
							setDimensions: function () {
								var e = this;
								if (e.isHorizontal()) {
									e.width = e.maxWidth;
									e.left = 0;
									e.right = e.width;
								} else {
									e.height = e.maxHeight;
									e.top = 0;
									e.bottom = e.height;
								}
								e.paddingLeft = 0;
								e.paddingTop = 0;
								e.paddingRight = 0;
								e.paddingBottom = 0;
							},
							afterSetDimensions: function () {
								xe.callback(this.options.afterSetDimensions, [this]);
							},
							beforeDataLimits: function () {
								xe.callback(this.options.beforeDataLimits, [this]);
							},
							determineDataLimits: xe.noop,
							afterDataLimits: function () {
								xe.callback(this.options.afterDataLimits, [this]);
							},
							beforeBuildTicks: function () {
								xe.callback(this.options.beforeBuildTicks, [this]);
							},
							buildTicks: xe.noop,
							afterBuildTicks: function (e) {
								var t = this;
								if (ki(e) && e.length)
									return xe.callback(t.options.afterBuildTicks, [t, e]);
								t.ticks =
									xe.callback(t.options.afterBuildTicks, [t, t.ticks]) ||
									t.ticks;
								return e;
							},
							beforeTickToLabelConversion: function () {
								xe.callback(this.options.beforeTickToLabelConversion, [this]);
							},
							convertTicksToLabels: function () {
								var e = this;
								var t = e.options.ticks;
								e.ticks = e.ticks.map(t.userCallback || t.callback, this);
							},
							afterTickToLabelConversion: function () {
								xe.callback(this.options.afterTickToLabelConversion, [this]);
							},
							beforeCalculateTickRotation: function () {
								xe.callback(this.options.beforeCalculateTickRotation, [this]);
							},
							calculateTickRotation: function () {
								var e = this;
								var t = e.options;
								var n = t.ticks;
								var i = e.getTicks().length;
								var r = n.minRotation || 0;
								var o = n.maxRotation;
								var a = r;
								var s, l, u, c, d, f, h;
								if (
									!e._isVisible() ||
									!n.display ||
									r >= o ||
									i <= 1 ||
									!e.isHorizontal()
								) {
									e.labelRotation = r;
									return;
								}
								s = e._getLabelSizes();
								l = s.widest.width;
								u = s.highest.height - s.highest.offset;
								c = Math.min(e.maxWidth, e.chart.width - l);
								d = t.offset ? e.maxWidth / i : c / (i - 1);
								if (l + 6 > d) {
									d = c / (i - (t.offset ? 0.5 : 1));
									f =
										e.maxHeight -
										Oi(t.gridLines) -
										n.padding -
										Yi(t.scaleLabel);
									h = Math.sqrt(l * l + u * u);
									a = xe.toDegrees(
										Math.min(
											Math.asin(Math.min((s.highest.height + 6) / d, 1)),
											Math.asin(Math.min(f / h, 1)) - Math.asin(u / h)
										)
									);
									a = Math.max(r, Math.min(o, a));
								}
								e.labelRotation = a;
							},
							afterCalculateTickRotation: function () {
								xe.callback(this.options.afterCalculateTickRotation, [this]);
							},
							beforeFit: function () {
								xe.callback(this.options.beforeFit, [this]);
							},
							fit: function () {
								var e = this;
								var t = (e.minSize = { width: 0, height: 0 });
								var n = e.chart;
								var i = e.options;
								var r = i.ticks;
								var o = i.scaleLabel;
								var a = i.gridLines;
								var s = e._isVisible();
								var l = i.position === 'bottom';
								var u = e.isHorizontal();
								if (u) t.width = e.maxWidth;
								else if (s) t.width = Oi(a) + Yi(o);
								if (!u) t.height = e.maxHeight;
								else if (s) t.height = Oi(a) + Yi(o);
								if (r.display && s) {
									var c = ji(r);
									var d = e._getLabelSizes();
									var f = d.first;
									var h = d.last;
									var p = d.widest;
									var m = d.highest;
									var _ = c.minor.lineHeight * 0.4;
									var v = r.padding;
									if (u) {
										var y = e.labelRotation !== 0;
										var g = xe.toRadians(e.labelRotation);
										var b = Math.cos(g);
										var k = Math.sin(g);
										var w =
											k * p.width +
											b * (m.height - (y ? m.offset : 0)) +
											(y ? 0 : _);
										t.height = Math.min(e.maxHeight, t.height + w + v);
										var M = e.getPixelForTick(0) - e.left;
										var L =
											e.right - e.getPixelForTick(e.getTicks().length - 1);
										var x, D;
										if (y) {
											x = l
												? b * f.width + k * f.offset
												: k * (f.height - f.offset);
											D = l
												? k * (h.height - h.offset)
												: b * h.width + k * h.offset;
										} else {
											x = f.width / 2;
											D = h.width / 2;
										}
										e.paddingLeft =
											Math.max(((x - M) * e.width) / (e.width - M), 0) + 3;
										e.paddingRight =
											Math.max(((D - L) * e.width) / (e.width - L), 0) + 3;
									} else {
										var S = r.mirror ? 0 : p.width + v + _;
										t.width = Math.min(e.maxWidth, t.width + S);
										e.paddingTop = f.height / 2;
										e.paddingBottom = h.height / 2;
									}
								}
								e.handleMargins();
								if (u) {
									e.width = e._length =
										n.width - e.margins.left - e.margins.right;
									e.height = t.height;
								} else {
									e.width = t.width;
									e.height = e._length =
										n.height - e.margins.top - e.margins.bottom;
								}
							},
							handleMargins: function () {
								var e = this;
								if (e.margins) {
									e.margins.left = Math.max(e.paddingLeft, e.margins.left);
									e.margins.top = Math.max(e.paddingTop, e.margins.top);
									e.margins.right = Math.max(e.paddingRight, e.margins.right);
									e.margins.bottom = Math.max(
										e.paddingBottom,
										e.margins.bottom
									);
								}
							},
							afterFit: function () {
								xe.callback(this.options.afterFit, [this]);
							},
							isHorizontal: function () {
								var e = this.options.position;
								return e === 'top' || e === 'bottom';
							},
							isFullWidth: function () {
								return this.options.fullWidth;
							},
							getRightValue: function (e) {
								if (wi(e)) return NaN;
								if (
									(typeof e === 'number' || e instanceof Number) &&
									!isFinite(e)
								)
									return NaN;
								if (e)
									if (this.isHorizontal()) {
										if (e.x !== undefined) return this.getRightValue(e.x);
									} else if (e.y !== undefined) return this.getRightValue(e.y);
								return e;
							},
							_convertTicksToLabels: function (e) {
								var t = this;
								var n, i, r;
								t.ticks = e.map(function (e) {
									return e.value;
								});
								t.beforeTickToLabelConversion();
								n = t.convertTicksToLabels(e) || t.ticks;
								t.afterTickToLabelConversion();
								for (i = 0, r = e.length; i < r; ++i) e[i].label = n[i];
								return n;
							},
							_getLabelSizes: function () {
								var e = this;
								var t = e._labelSizes;
								if (!t) {
									e._labelSizes = t = Ti(
										e.ctx,
										ji(e.options.ticks),
										e.getTicks(),
										e.longestTextCache
									);
									e.longestLabelWidth = t.widest.width;
								}
								return t;
							},
							_parseValue: function (e) {
								var t, n, i, r;
								if (ki(e)) {
									t = +this.getRightValue(e[0]);
									n = +this.getRightValue(e[1]);
									i = Math.min(t, n);
									r = Math.max(t, n);
								} else {
									e = +this.getRightValue(e);
									t = undefined;
									n = e;
									i = e;
									r = e;
								}
								return { min: i, max: r, start: t, end: n };
							},
							_getScaleLabel: function (e) {
								var t = this._parseValue(e);
								if (t.start !== undefined)
									return '[' + t.start + ', ' + t.end + ']';
								return +this.getRightValue(e);
							},
							getLabelForIndex: xe.noop,
							getPixelForValue: xe.noop,
							getValueForPixel: xe.noop,
							getPixelForTick: function (e) {
								var t = this;
								var n = t.options.offset;
								var i = t._ticks.length;
								var r = 1 / Math.max(i - (n ? 0 : 1), 1);
								return e < 0 || e > i - 1
									? null
									: t.getPixelForDecimal(e * r + (n ? r / 2 : 0));
							},
							getPixelForDecimal: function (e) {
								var t = this;
								if (t._reversePixels) e = 1 - e;
								return t._startPixel + e * t._length;
							},
							getDecimalForPixel: function (e) {
								var t = (e - this._startPixel) / this._length;
								return this._reversePixels ? 1 - t : t;
							},
							getBasePixel: function () {
								return this.getPixelForValue(this.getBaseValue());
							},
							getBaseValue: function () {
								var e = this;
								var t = e.min;
								var n = e.max;
								return e.beginAtZero
									? 0
									: t < 0 && n < 0
									? n
									: t > 0 && n > 0
									? t
									: 0;
							},
							_autoSkip: function (e) {
								var t = this;
								var n = t.options.ticks;
								var i = t._length;
								var r = n.maxTicksLimit || i / t._tickSize() + 1;
								var o = n.major.enabled ? Hi(e) : [];
								var a = o.length;
								var s = o[0];
								var l = o[a - 1];
								var u, c, d, f;
								if (a > r) {
									Ii(e, o, a / r);
									return Ei(e);
								}
								d = Ai(o, e, i, r);
								if (a > 0) {
									for (u = 0, c = a - 1; u < c; u++) Ri(e, d, o[u], o[u + 1]);
									f = a > 1 ? (l - s) / (a - 1) : null;
									Ri(e, d, xe.isNullOrUndef(f) ? 0 : s - f, s);
									Ri(e, d, l, xe.isNullOrUndef(f) ? e.length : l + f);
									return Ei(e);
								}
								Ri(e, d);
								return Ei(e);
							},
							_tickSize: function () {
								var e = this;
								var t = e.options.ticks;
								var n = xe.toRadians(e.labelRotation);
								var i = Math.abs(Math.cos(n));
								var r = Math.abs(Math.sin(n));
								var o = e._getLabelSizes();
								var a = t.autoSkipPadding || 0;
								var s = o ? o.widest.width + a : 0;
								var l = o ? o.highest.height + a : 0;
								return e.isHorizontal()
									? l * i > s * r
										? s / i
										: l / r
									: l * r < s * i
									? l / i
									: s / r;
							},
							_isVisible: function () {
								var e = this;
								var t = e.chart;
								var n = e.options.display;
								var i, r, o;
								if (n !== 'auto') return !!n;
								for (i = 0, r = t.data.datasets.length; i < r; ++i)
									if (t.isDatasetVisible(i)) {
										o = t.getDatasetMeta(i);
										if (o.xAxisID === e.id || o.yAxisID === e.id) return true;
									}
								return false;
							},
							_computeGridLineItems: function (e) {
								var t = this;
								var n = t.chart;
								var i = t.options;
								var r = i.gridLines;
								var o = i.position;
								var a = r.offsetGridLines;
								var s = t.isHorizontal();
								var l = t._ticksToDraw;
								var u = l.length + (a ? 1 : 0);
								var c = Oi(r);
								var d = [];
								var f = r.drawBorder ? Li(r.lineWidth, 0, 0) : 0;
								var h = f / 2;
								var p = xe._alignPixel;
								var m = function (e) {
									return p(n, e, f);
								};
								var _, v, y, g, b;
								var k, w, M, L, x, D, S, T, O, Y, C, j;
								if (o === 'top') {
									_ = m(t.bottom);
									w = t.bottom - c;
									L = _ - h;
									D = m(e.top) + h;
									T = e.bottom;
								} else if (o === 'bottom') {
									_ = m(t.top);
									D = e.top;
									T = m(e.bottom) - h;
									w = _ + h;
									L = t.top + c;
								} else if (o === 'left') {
									_ = m(t.right);
									k = t.right - c;
									M = _ - h;
									x = m(e.left) + h;
									S = e.right;
								} else {
									_ = m(t.left);
									x = e.left;
									S = m(e.right) - h;
									k = _ + h;
									M = t.left + c;
								}
								for (v = 0; v < u; ++v) {
									y = l[v] || {};
									if (wi(y.label) && v < l.length) continue;
									if (v === t.zeroLineIndex && i.offset === a) {
										O = r.zeroLineWidth;
										Y = r.zeroLineColor;
										C = r.zeroLineBorderDash || [];
										j = r.zeroLineBorderDashOffset || 0;
									} else {
										O = Li(r.lineWidth, v, 1);
										Y = Li(r.color, v, 'rgba(0,0,0,0.1)');
										C = r.borderDash || [];
										j = r.borderDashOffset || 0;
									}
									g = Di(t, y._index || v, a);
									if (g === undefined) continue;
									b = p(n, g, O);
									if (s) k = M = x = S = b;
									else w = L = D = T = b;
									d.push({
										tx1: k,
										ty1: w,
										tx2: M,
										ty2: L,
										x1: x,
										y1: D,
										x2: S,
										y2: T,
										width: O,
										color: Y,
										borderDash: C,
										borderDashOffset: j,
									});
								}
								d.ticksLength = u;
								d.borderValue = _;
								return d;
							},
							_computeLabelItems: function () {
								var e = this;
								var t = e.options;
								var n = t.ticks;
								var i = t.position;
								var r = n.mirror;
								var o = e.isHorizontal();
								var a = e._ticksToDraw;
								var s = ji(n);
								var l = n.padding;
								var u = Oi(t.gridLines);
								var c = -xe.toRadians(e.labelRotation);
								var d = [];
								var f, h, p, m, _, v, y, g, b, k, w, M;
								if (i === 'top') {
									v = e.bottom - u - l;
									y = !c ? 'center' : 'left';
								} else if (i === 'bottom') {
									v = e.top + u + l;
									y = !c ? 'center' : 'right';
								} else if (i === 'left') {
									_ = e.right - (r ? 0 : u) - l;
									y = r ? 'left' : 'right';
								} else {
									_ = e.left + (r ? 0 : u) + l;
									y = r ? 'right' : 'left';
								}
								for (f = 0, h = a.length; f < h; ++f) {
									p = a[f];
									m = p.label;
									if (wi(m)) continue;
									g = e.getPixelForTick(p._index || f) + n.labelOffset;
									b = p.major ? s.major : s.minor;
									k = b.lineHeight;
									w = ki(m) ? m.length : 1;
									if (o) {
										_ = g;
										M =
											i === 'top'
												? ((!c ? 0.5 : 1) - w) * k
												: (!c ? 0.5 : 0) * k;
									} else {
										v = g;
										M = ((1 - w) * k) / 2;
									}
									d.push({
										x: _,
										y: v,
										rotation: c,
										label: m,
										font: b,
										textOffset: M,
										textAlign: y,
									});
								}
								return d;
							},
							_drawGrid: function (e) {
								var t = this;
								var n = t.options.gridLines;
								if (!n.display) return;
								var i = t.ctx;
								var r = t.chart;
								var o = xe._alignPixel;
								var a = n.drawBorder ? Li(n.lineWidth, 0, 0) : 0;
								var s =
									t._gridLineItems ||
									(t._gridLineItems = t._computeGridLineItems(e));
								var l, u, c, d, f;
								for (c = 0, d = s.length; c < d; ++c) {
									f = s[c];
									l = f.width;
									u = f.color;
									if (l && u) {
										i.save();
										i.lineWidth = l;
										i.strokeStyle = u;
										if (i.setLineDash) {
											i.setLineDash(f.borderDash);
											i.lineDashOffset = f.borderDashOffset;
										}
										i.beginPath();
										if (n.drawTicks) {
											i.moveTo(f.tx1, f.ty1);
											i.lineTo(f.tx2, f.ty2);
										}
										if (n.drawOnChartArea) {
											i.moveTo(f.x1, f.y1);
											i.lineTo(f.x2, f.y2);
										}
										i.stroke();
										i.restore();
									}
								}
								if (a) {
									var h = a;
									var p = Li(n.lineWidth, s.ticksLength - 1, 1);
									var m = s.borderValue;
									var _, v, y, g;
									if (t.isHorizontal()) {
										_ = o(r, t.left, h) - h / 2;
										v = o(r, t.right, p) + p / 2;
										y = g = m;
									} else {
										y = o(r, t.top, h) - h / 2;
										g = o(r, t.bottom, p) + p / 2;
										_ = v = m;
									}
									i.lineWidth = a;
									i.strokeStyle = Li(n.color, 0);
									i.beginPath();
									i.moveTo(_, y);
									i.lineTo(v, g);
									i.stroke();
								}
							},
							_drawLabels: function () {
								var e = this;
								var t = e.options.ticks;
								if (!t.display) return;
								var n = e.ctx;
								var i =
									e._labelItems || (e._labelItems = e._computeLabelItems());
								var r, o, a, s, l, u, c, d;
								for (r = 0, a = i.length; r < a; ++r) {
									l = i[r];
									u = l.font;
									n.save();
									n.translate(l.x, l.y);
									n.rotate(l.rotation);
									n.font = u.string;
									n.fillStyle = u.color;
									n.textBaseline = 'middle';
									n.textAlign = l.textAlign;
									c = l.label;
									d = l.textOffset;
									if (ki(c))
										for (o = 0, s = c.length; o < s; ++o) {
											n.fillText('' + c[o], 0, d);
											d += u.lineHeight;
										}
									else n.fillText(c, 0, d);
									n.restore();
								}
							},
							_drawTitle: function () {
								var e = this;
								var t = e.ctx;
								var n = e.options;
								var i = n.scaleLabel;
								if (!i.display) return;
								var r = Mi(i.fontColor, he.global.defaultFontColor);
								var o = xe.options._parseFont(i);
								var a = xe.options.toPadding(i.padding);
								var s = o.lineHeight / 2;
								var l = n.position;
								var u = 0;
								var c, d;
								if (e.isHorizontal()) {
									c = e.left + e.width / 2;
									d =
										l === 'bottom'
											? e.bottom - s - a.bottom
											: e.top + s + a.top;
								} else {
									var f = l === 'left';
									c = f ? e.left + s + a.top : e.right - s - a.top;
									d = e.top + e.height / 2;
									u = f ? -0.5 * Math.PI : 0.5 * Math.PI;
								}
								t.save();
								t.translate(c, d);
								t.rotate(u);
								t.textAlign = 'center';
								t.textBaseline = 'middle';
								t.fillStyle = r;
								t.font = o.string;
								t.fillText(i.labelString, 0, 0);
								t.restore();
							},
							draw: function (e) {
								var t = this;
								if (!t._isVisible()) return;
								t._drawGrid(e);
								t._drawTitle();
								t._drawLabels();
							},
							_layers: function () {
								var e = this;
								var t = e.options;
								var n = (t.ticks && t.ticks.z) || 0;
								var i = (t.gridLines && t.gridLines.z) || 0;
								if (!e._isVisible() || n === i || e.draw !== e._draw)
									return [
										{
											z: n,
											draw: function () {
												e.draw.apply(e, arguments);
											},
										},
									];
								return [
									{
										z: i,
										draw: function () {
											e._drawGrid.apply(e, arguments);
											e._drawTitle.apply(e, arguments);
										},
									},
									{
										z: n,
										draw: function () {
											e._drawLabels.apply(e, arguments);
										},
									},
								];
							},
							_getMatchingVisibleMetas: function (t) {
								var n = this;
								var i = n.isHorizontal();
								return n.chart
									._getSortedVisibleDatasetMetas()
									.filter(function (e) {
										return (
											(!t || e.type === t) &&
											(i ? e.xAxisID === n.id : e.yAxisID === n.id)
										);
									});
							},
						});
						Ni.prototype._draw = Ni.prototype.draw;
						var Wi = Ni,
							Fi = xe.isNullOrUndef,
							Bi = { position: 'bottom' },
							zi = Wi.extend({
								determineDataLimits: function () {
									var e = this;
									var t = e._getLabels();
									var n = e.options.ticks;
									var i = n.min;
									var r = n.max;
									var o = 0;
									var a = t.length - 1;
									var s;
									if (i !== undefined) {
										s = t.indexOf(i);
										if (s >= 0) o = s;
									}
									if (r !== undefined) {
										s = t.indexOf(r);
										if (s >= 0) a = s;
									}
									e.minIndex = o;
									e.maxIndex = a;
									e.min = t[o];
									e.max = t[a];
								},
								buildTicks: function () {
									var e = this;
									var t = e._getLabels();
									var n = e.minIndex;
									var i = e.maxIndex;
									e.ticks =
										n === 0 && i === t.length - 1 ? t : t.slice(n, i + 1);
								},
								getLabelForIndex: function (e, t) {
									var n = this;
									var i = n.chart;
									if (
										i.getDatasetMeta(t).controller._getValueScaleId() === n.id
									)
										return n.getRightValue(i.data.datasets[t].data[e]);
									return n._getLabels()[e];
								},
								_configure: function () {
									var e = this;
									var t = e.options.offset;
									var n = e.ticks;
									Wi.prototype._configure.call(e);
									if (!e.isHorizontal()) e._reversePixels = !e._reversePixels;
									if (!n) return;
									e._startValue = e.minIndex - (t ? 0.5 : 0);
									e._valueRange = Math.max(n.length - (t ? 0 : 1), 1);
								},
								getPixelForValue: function (e, t, n) {
									var i = this;
									var r, o, a;
									if (!Fi(t) && !Fi(n)) e = i.chart.data.datasets[n].data[t];
									if (!Fi(e)) r = i.isHorizontal() ? e.x : e.y;
									if (r !== undefined || (e !== undefined && isNaN(t))) {
										o = i._getLabels();
										e = xe.valueOrDefault(r, e);
										a = o.indexOf(e);
										t = a !== -1 ? a : t;
										if (isNaN(t)) t = e;
									}
									return i.getPixelForDecimal(
										(t - i._startValue) / i._valueRange
									);
								},
								getPixelForTick: function (e) {
									var t = this.ticks;
									return e < 0 || e > t.length - 1
										? null
										: this.getPixelForValue(t[e], e + this.minIndex);
								},
								getValueForPixel: function (e) {
									var t = this;
									var n = Math.round(
										t._startValue + t.getDecimalForPixel(e) * t._valueRange
									);
									return Math.min(Math.max(n, 0), t.ticks.length - 1);
								},
								getBasePixel: function () {
									return this.bottom;
								},
							}),
							Vi;
						zi._defaults = Bi;
						var Ui = xe.noop,
							Xi = xe.isNullOrUndef;
						function Ji(e, t) {
							var n = [];
							var i = 1e-14;
							var r = e.stepSize;
							var o = r || 1;
							var a = e.maxTicks - 1;
							var s = e.min;
							var l = e.max;
							var u = e.precision;
							var c = t.min;
							var d = t.max;
							var f = xe.niceNum((d - c) / a / o) * o;
							var h, p, m, _;
							if (f < i && Xi(s) && Xi(l)) return [c, d];
							_ = Math.ceil(d / f) - Math.floor(c / f);
							if (_ > a) f = xe.niceNum((_ * f) / a / o) * o;
							if (r || Xi(u)) h = Math.pow(10, xe._decimalPlaces(f));
							else {
								h = Math.pow(10, u);
								f = Math.ceil(f * h) / h;
							}
							p = Math.floor(c / f) * f;
							m = Math.ceil(d / f) * f;
							if (r) {
								if (!Xi(s) && xe.almostWhole(s / f, f / 1e3)) p = s;
								if (!Xi(l) && xe.almostWhole(l / f, f / 1e3)) m = l;
							}
							_ = (m - p) / f;
							if (xe.almostEquals(_, Math.round(_), f / 1e3)) _ = Math.round(_);
							else _ = Math.ceil(_);
							p = Math.round(p * h) / h;
							m = Math.round(m * h) / h;
							n.push(Xi(s) ? p : s);
							for (var v = 1; v < _; ++v)
								n.push(Math.round((p + v * f) * h) / h);
							n.push(Xi(l) ? m : l);
							return n;
						}
						var qi = Wi.extend({
								getRightValue: function (e) {
									if (typeof e === 'string') return +e;
									return Wi.prototype.getRightValue.call(this, e);
								},
								handleTickRangeOptions: function () {
									var e = this;
									var t = e.options;
									var n = t.ticks;
									if (n.beginAtZero) {
										var i = xe.sign(e.min);
										var r = xe.sign(e.max);
										if (i < 0 && r < 0) e.max = 0;
										else if (i > 0 && r > 0) e.min = 0;
									}
									var o = n.min !== undefined || n.suggestedMin !== undefined;
									var a = n.max !== undefined || n.suggestedMax !== undefined;
									if (n.min !== undefined) e.min = n.min;
									else if (n.suggestedMin !== undefined)
										if (e.min === null) e.min = n.suggestedMin;
										else e.min = Math.min(e.min, n.suggestedMin);
									if (n.max !== undefined) e.max = n.max;
									else if (n.suggestedMax !== undefined)
										if (e.max === null) e.max = n.suggestedMax;
										else e.max = Math.max(e.max, n.suggestedMax);
									if (o !== a)
										if (e.min >= e.max)
											if (o) e.max = e.min + 1;
											else e.min = e.max - 1;
									if (e.min === e.max) {
										e.max++;
										if (!n.beginAtZero) e.min--;
									}
								},
								getTickLimit: function () {
									var e = this;
									var t = e.options.ticks;
									var n = t.stepSize;
									var i = t.maxTicksLimit;
									var r;
									if (n) r = Math.ceil(e.max / n) - Math.floor(e.min / n) + 1;
									else {
										r = e._computeTickLimit();
										i = i || 11;
									}
									if (i) r = Math.min(i, r);
									return r;
								},
								_computeTickLimit: function () {
									return Number.POSITIVE_INFINITY;
								},
								handleDirectionalChanges: Ui,
								buildTicks: function () {
									var e = this;
									var t = e.options;
									var n = t.ticks;
									var i = e.getTickLimit();
									i = Math.max(2, i);
									var r = {
										maxTicks: i,
										min: n.min,
										max: n.max,
										precision: n.precision,
										stepSize: xe.valueOrDefault(n.fixedStepSize, n.stepSize),
									};
									var o = (e.ticks = Ji(r, e));
									e.handleDirectionalChanges();
									e.max = xe.max(o);
									e.min = xe.min(o);
									if (n.reverse) {
										o.reverse();
										e.start = e.max;
										e.end = e.min;
									} else {
										e.start = e.min;
										e.end = e.max;
									}
								},
								convertTicksToLabels: function () {
									var e = this;
									e.ticksAsNumbers = e.ticks.slice();
									e.zeroLineIndex = e.ticks.indexOf(0);
									Wi.prototype.convertTicksToLabels.call(e);
								},
								_configure: function () {
									var e = this;
									var t = e.getTicks();
									var n = e.min;
									var i = e.max;
									var r;
									Wi.prototype._configure.call(e);
									if (e.options.offset && t.length) {
										r = (i - n) / Math.max(t.length - 1, 1) / 2;
										n -= r;
										i += r;
									}
									e._startValue = n;
									e._endValue = i;
									e._valueRange = i - n;
								},
							}),
							Ki = {
								position: 'left',
								ticks: { callback: bi.formatters.linear },
							},
							Gi = 0,
							Qi = 1;
						function $i(e, t, n) {
							var i = [
								n.type,
								t === undefined && n.stack === undefined ? n.index : '',
								n.stack,
							].join('.');
							if (e[i] === undefined) e[i] = { pos: [], neg: [] };
							return e[i];
						}
						function Zi(e, t, n, i) {
							var r = e.options;
							var o = r.stacked;
							var a = $i(t, o, n);
							var s = a.pos;
							var l = a.neg;
							var u = i.length;
							var c, d;
							for (c = 0; c < u; ++c) {
								d = e._parseValue(i[c]);
								if (isNaN(d.min) || isNaN(d.max) || n.data[c].hidden) continue;
								s[c] = s[c] || 0;
								l[c] = l[c] || 0;
								if (r.relativePoints) s[c] = 100;
								else if (d.min < 0 || d.max < 0) l[c] += d.min;
								else s[c] += d.max;
							}
						}
						function er(e, t, n) {
							var i = n.length;
							var r, o;
							for (r = 0; r < i; ++r) {
								o = e._parseValue(n[r]);
								if (isNaN(o.min) || isNaN(o.max) || t.data[r].hidden) continue;
								e.min = Math.min(e.min, o.min);
								e.max = Math.max(e.max, o.max);
							}
						}
						var tr = qi.extend({
								determineDataLimits: function () {
									var t = this;
									var e = t.options;
									var n = t.chart;
									var i = n.data.datasets;
									var r = t._getMatchingVisibleMetas();
									var o = e.stacked;
									var a = {};
									var s = r.length;
									var l, u, c, d;
									t.min = Number.POSITIVE_INFINITY;
									t.max = Number.NEGATIVE_INFINITY;
									if (o === undefined)
										for (l = 0; !o && l < s; ++l) {
											u = r[l];
											o = u.stack !== undefined;
										}
									for (l = 0; l < s; ++l) {
										u = r[l];
										c = i[u.index].data;
										if (o) Zi(t, a, u, c);
										else er(t, u, c);
									}
									xe.each(a, function (e) {
										d = e.pos.concat(e.neg);
										t.min = Math.min(t.min, xe.min(d));
										t.max = Math.max(t.max, xe.max(d));
									});
									t.min = xe.isFinite(t.min) && !isNaN(t.min) ? t.min : Gi;
									t.max = xe.isFinite(t.max) && !isNaN(t.max) ? t.max : Qi;
									t.handleTickRangeOptions();
								},
								_computeTickLimit: function () {
									var e = this;
									var t;
									if (e.isHorizontal()) return Math.ceil(e.width / 40);
									t = xe.options._parseFont(e.options.ticks);
									return Math.ceil(e.height / t.lineHeight);
								},
								handleDirectionalChanges: function () {
									if (!this.isHorizontal()) this.ticks.reverse();
								},
								getLabelForIndex: function (e, t) {
									return this._getScaleLabel(
										this.chart.data.datasets[t].data[e]
									);
								},
								getPixelForValue: function (e) {
									var t = this;
									return t.getPixelForDecimal(
										(+t.getRightValue(e) - t._startValue) / t._valueRange
									);
								},
								getValueForPixel: function (e) {
									return (
										this._startValue +
										this.getDecimalForPixel(e) * this._valueRange
									);
								},
								getPixelForTick: function (e) {
									var t = this.ticksAsNumbers;
									if (e < 0 || e > t.length - 1) return null;
									return this.getPixelForValue(t[e]);
								},
							}),
							nr;
						tr._defaults = Ki;
						var ir = xe.valueOrDefault,
							rr = xe.math.log10;
						function or(e, t) {
							var n = [];
							var i = ir(e.min, Math.pow(10, Math.floor(rr(t.min))));
							var r = Math.floor(rr(t.max));
							var o = Math.ceil(t.max / Math.pow(10, r));
							var a, s;
							if (i === 0) {
								a = Math.floor(rr(t.minNotZero));
								s = Math.floor(t.minNotZero / Math.pow(10, a));
								n.push(i);
								i = s * Math.pow(10, a);
							} else {
								a = Math.floor(rr(i));
								s = Math.floor(i / Math.pow(10, a));
							}
							var l = a < 0 ? Math.pow(10, Math.abs(a)) : 1;
							do {
								n.push(i);
								++s;
								if (s === 10) {
									s = 1;
									++a;
									l = a >= 0 ? 1 : l;
								}
								i = Math.round(s * Math.pow(10, a) * l) / l;
							} while (a < r || (a === r && s < o));
							var u = ir(e.max, i);
							n.push(u);
							return n;
						}
						var ar = {
							position: 'left',
							ticks: { callback: bi.formatters.logarithmic },
						};
						function sr(e, t) {
							return xe.isFinite(e) && e >= 0 ? e : t;
						}
						var lr = Wi.extend({
								determineDataLimits: function () {
									var i = this;
									var e = i.options;
									var t = i.chart;
									var n = t.data.datasets;
									var r = i.isHorizontal();
									function o(e) {
										return r ? e.xAxisID === i.id : e.yAxisID === i.id;
									}
									var a, s, l, u, c, d;
									i.min = Number.POSITIVE_INFINITY;
									i.max = Number.NEGATIVE_INFINITY;
									i.minNotZero = Number.POSITIVE_INFINITY;
									var f = e.stacked;
									if (f === undefined)
										for (a = 0; a < n.length; a++) {
											s = t.getDatasetMeta(a);
											if (
												t.isDatasetVisible(a) &&
												o(s) &&
												s.stack !== undefined
											) {
												f = true;
												break;
											}
										}
									if (e.stacked || f) {
										var h = {};
										for (a = 0; a < n.length; a++) {
											s = t.getDatasetMeta(a);
											var p = [
												s.type,
												e.stacked === undefined && s.stack === undefined
													? a
													: '',
												s.stack,
											].join('.');
											if (t.isDatasetVisible(a) && o(s)) {
												if (h[p] === undefined) h[p] = [];
												u = n[a].data;
												for (c = 0, d = u.length; c < d; c++) {
													var m = h[p];
													l = i._parseValue(u[c]);
													if (
														isNaN(l.min) ||
														isNaN(l.max) ||
														s.data[c].hidden ||
														l.min < 0 ||
														l.max < 0
													)
														continue;
													m[c] = m[c] || 0;
													m[c] += l.max;
												}
											}
										}
										xe.each(h, function (e) {
											if (e.length > 0) {
												var t = xe.min(e);
												var n = xe.max(e);
												i.min = Math.min(i.min, t);
												i.max = Math.max(i.max, n);
											}
										});
									} else
										for (a = 0; a < n.length; a++) {
											s = t.getDatasetMeta(a);
											if (t.isDatasetVisible(a) && o(s)) {
												u = n[a].data;
												for (c = 0, d = u.length; c < d; c++) {
													l = i._parseValue(u[c]);
													if (
														isNaN(l.min) ||
														isNaN(l.max) ||
														s.data[c].hidden ||
														l.min < 0 ||
														l.max < 0
													)
														continue;
													i.min = Math.min(l.min, i.min);
													i.max = Math.max(l.max, i.max);
													if (l.min !== 0)
														i.minNotZero = Math.min(l.min, i.minNotZero);
												}
											}
										}
									i.min = xe.isFinite(i.min) ? i.min : null;
									i.max = xe.isFinite(i.max) ? i.max : null;
									i.minNotZero = xe.isFinite(i.minNotZero)
										? i.minNotZero
										: null;
									this.handleTickRangeOptions();
								},
								handleTickRangeOptions: function () {
									var e = this;
									var t = e.options.ticks;
									var n = 1;
									var i = 10;
									e.min = sr(t.min, e.min);
									e.max = sr(t.max, e.max);
									if (e.min === e.max)
										if (e.min !== 0 && e.min !== null) {
											e.min = Math.pow(10, Math.floor(rr(e.min)) - 1);
											e.max = Math.pow(10, Math.floor(rr(e.max)) + 1);
										} else {
											e.min = n;
											e.max = i;
										}
									if (e.min === null)
										e.min = Math.pow(10, Math.floor(rr(e.max)) - 1);
									if (e.max === null)
										e.max =
											e.min !== 0 ? Math.pow(10, Math.floor(rr(e.min)) + 1) : i;
									if (e.minNotZero === null)
										if (e.min > 0) e.minNotZero = e.min;
										else if (e.max < 1)
											e.minNotZero = Math.pow(10, Math.floor(rr(e.max)));
										else e.minNotZero = n;
								},
								buildTicks: function () {
									var e = this;
									var t = e.options.ticks;
									var n = !e.isHorizontal();
									var i = { min: sr(t.min), max: sr(t.max) };
									var r = (e.ticks = or(i, e));
									e.max = xe.max(r);
									e.min = xe.min(r);
									if (t.reverse) {
										n = !n;
										e.start = e.max;
										e.end = e.min;
									} else {
										e.start = e.min;
										e.end = e.max;
									}
									if (n) r.reverse();
								},
								convertTicksToLabels: function () {
									this.tickValues = this.ticks.slice();
									Wi.prototype.convertTicksToLabels.call(this);
								},
								getLabelForIndex: function (e, t) {
									return this._getScaleLabel(
										this.chart.data.datasets[t].data[e]
									);
								},
								getPixelForTick: function (e) {
									var t = this.tickValues;
									if (e < 0 || e > t.length - 1) return null;
									return this.getPixelForValue(t[e]);
								},
								_getFirstTickValue: function (e) {
									var t = Math.floor(rr(e));
									var n = Math.floor(e / Math.pow(10, t));
									return n * Math.pow(10, t);
								},
								_configure: function () {
									var e = this;
									var t = e.min;
									var n = 0;
									Wi.prototype._configure.call(e);
									if (t === 0) {
										t = e._getFirstTickValue(e.minNotZero);
										n =
											ir(e.options.ticks.fontSize, he.global.defaultFontSize) /
											e._length;
									}
									e._startValue = rr(t);
									e._valueOffset = n;
									e._valueRange = (rr(e.max) - rr(t)) / (1 - n);
								},
								getPixelForValue: function (e) {
									var t = this;
									var n = 0;
									e = +t.getRightValue(e);
									if (e > t.min && e > 0)
										n =
											(rr(e) - t._startValue) / t._valueRange + t._valueOffset;
									return t.getPixelForDecimal(n);
								},
								getValueForPixel: function (e) {
									var t = this;
									var n = t.getDecimalForPixel(e);
									return n === 0 && t.min === 0
										? 0
										: Math.pow(
												10,
												t._startValue + (n - t._valueOffset) * t._valueRange
										  );
								},
							}),
							ur;
						lr._defaults = ar;
						var cr = xe.valueOrDefault,
							dr = xe.valueAtIndexOrDefault,
							fr = xe.options.resolve,
							hr = {
								display: true,
								animate: true,
								position: 'chartArea',
								angleLines: {
									display: true,
									color: 'rgba(0,0,0,0.1)',
									lineWidth: 1,
									borderDash: [],
									borderDashOffset: 0,
								},
								gridLines: { circular: false },
								ticks: {
									showLabelBackdrop: true,
									backdropColor: 'rgba(255,255,255,0.75)',
									backdropPaddingY: 2,
									backdropPaddingX: 2,
									callback: bi.formatters.linear,
								},
								pointLabels: {
									display: true,
									fontSize: 10,
									callback: function (e) {
										return e;
									},
								},
							};
						function pr(e) {
							var t = e.ticks;
							if (t.display && e.display)
								return (
									cr(t.fontSize, he.global.defaultFontSize) +
									t.backdropPaddingY * 2
								);
							return 0;
						}
						function mr(e, t, n) {
							if (xe.isArray(n))
								return { w: xe.longestText(e, e.font, n), h: n.length * t };
							return { w: e.measureText(n).width, h: t };
						}
						function _r(e, t, n, i, r) {
							if (e === i || e === r)
								return { start: t - n / 2, end: t + n / 2 };
							else if (e < i || e > r) return { start: t - n, end: t };
							return { start: t, end: t + n };
						}
						function vr(e) {
							var t = xe.options._parseFont(e.options.pointLabels);
							var n = { l: 0, r: e.width, t: 0, b: e.height - e.paddingTop };
							var i = {};
							var r, o, a;
							e.ctx.font = t.string;
							e._pointLabelSizes = [];
							var s = e.chart.data.labels.length;
							for (r = 0; r < s; r++) {
								a = e.getPointPosition(r, e.drawingArea + 5);
								o = mr(e.ctx, t.lineHeight, e.pointLabels[r]);
								e._pointLabelSizes[r] = o;
								var l = e.getIndexAngle(r);
								var u = xe.toDegrees(l) % 360;
								var c = _r(u, a.x, o.w, 0, 180);
								var d = _r(u, a.y, o.h, 90, 270);
								if (c.start < n.l) {
									n.l = c.start;
									i.l = l;
								}
								if (c.end > n.r) {
									n.r = c.end;
									i.r = l;
								}
								if (d.start < n.t) {
									n.t = d.start;
									i.t = l;
								}
								if (d.end > n.b) {
									n.b = d.end;
									i.b = l;
								}
							}
							e.setReductions(e.drawingArea, n, i);
						}
						function yr(e) {
							if (e === 0 || e === 180) return 'center';
							else if (e < 180) return 'left';
							return 'right';
						}
						function gr(e, t, n, i) {
							var r = n.y + i / 2;
							var o, a;
							if (xe.isArray(t))
								for (o = 0, a = t.length; o < a; ++o) {
									e.fillText(t[o], n.x, r);
									r += i;
								}
							else e.fillText(t, n.x, r);
						}
						function br(e, t, n) {
							if (e === 90 || e === 270) n.y -= t.h / 2;
							else if (e > 270 || e < 90) n.y -= t.h;
						}
						function kr(e) {
							var t = e.ctx;
							var n = e.options;
							var i = n.pointLabels;
							var r = pr(n);
							var o = e.getDistanceFromCenterForValue(
								n.ticks.reverse ? e.min : e.max
							);
							var a = xe.options._parseFont(i);
							t.save();
							t.font = a.string;
							t.textBaseline = 'middle';
							for (var s = e.chart.data.labels.length - 1; s >= 0; s--) {
								var l = s === 0 ? r / 2 : 0;
								var u = e.getPointPosition(s, o + l + 5);
								var c = dr(i.fontColor, s, he.global.defaultFontColor);
								t.fillStyle = c;
								var d = e.getIndexAngle(s);
								var f = xe.toDegrees(d);
								t.textAlign = yr(f);
								br(f, e._pointLabelSizes[s], u);
								gr(t, e.pointLabels[s], u, a.lineHeight);
							}
							t.restore();
						}
						function wr(e, t, n, i) {
							var r = e.ctx;
							var o = t.circular;
							var a = e.chart.data.labels.length;
							var s = dr(t.color, i - 1);
							var l = dr(t.lineWidth, i - 1);
							var u;
							if ((!o && !a) || !s || !l) return;
							r.save();
							r.strokeStyle = s;
							r.lineWidth = l;
							if (r.setLineDash) {
								r.setLineDash(t.borderDash || []);
								r.lineDashOffset = t.borderDashOffset || 0;
							}
							r.beginPath();
							if (o) r.arc(e.xCenter, e.yCenter, n, 0, Math.PI * 2);
							else {
								u = e.getPointPosition(0, n);
								r.moveTo(u.x, u.y);
								for (var c = 1; c < a; c++) {
									u = e.getPointPosition(c, n);
									r.lineTo(u.x, u.y);
								}
							}
							r.closePath();
							r.stroke();
							r.restore();
						}
						function Mr(e) {
							return xe.isNumber(e) ? e : 0;
						}
						var Lr = qi.extend({
								setDimensions: function () {
									var e = this;
									e.width = e.maxWidth;
									e.height = e.maxHeight;
									e.paddingTop = pr(e.options) / 2;
									e.xCenter = Math.floor(e.width / 2);
									e.yCenter = Math.floor((e.height - e.paddingTop) / 2);
									e.drawingArea =
										Math.min(e.height - e.paddingTop, e.width) / 2;
								},
								determineDataLimits: function () {
									var r = this;
									var n = r.chart;
									var o = Number.POSITIVE_INFINITY;
									var a = Number.NEGATIVE_INFINITY;
									xe.each(n.data.datasets, function (e, t) {
										if (n.isDatasetVisible(t)) {
											var i = n.getDatasetMeta(t);
											xe.each(e.data, function (e, t) {
												var n = +r.getRightValue(e);
												if (isNaN(n) || i.data[t].hidden) return;
												o = Math.min(n, o);
												a = Math.max(n, a);
											});
										}
									});
									r.min = o === Number.POSITIVE_INFINITY ? 0 : o;
									r.max = a === Number.NEGATIVE_INFINITY ? 0 : a;
									r.handleTickRangeOptions();
								},
								_computeTickLimit: function () {
									return Math.ceil(this.drawingArea / pr(this.options));
								},
								convertTicksToLabels: function () {
									var t = this;
									qi.prototype.convertTicksToLabels.call(t);
									t.pointLabels = t.chart.data.labels.map(function () {
										var e = xe.callback(
											t.options.pointLabels.callback,
											arguments,
											t
										);
										return e || e === 0 ? e : '';
									});
								},
								getLabelForIndex: function (e, t) {
									return +this.getRightValue(
										this.chart.data.datasets[t].data[e]
									);
								},
								fit: function () {
									var e = this;
									var t = e.options;
									if (t.display && t.pointLabels.display) vr(e);
									else e.setCenterPoint(0, 0, 0, 0);
								},
								setReductions: function (e, t, n) {
									var i = this;
									var r = t.l / Math.sin(n.l);
									var o = Math.max(t.r - i.width, 0) / Math.sin(n.r);
									var a = -t.t / Math.cos(n.t);
									var s =
										-Math.max(t.b - (i.height - i.paddingTop), 0) /
										Math.cos(n.b);
									r = Mr(r);
									o = Mr(o);
									a = Mr(a);
									s = Mr(s);
									i.drawingArea = Math.min(
										Math.floor(e - (r + o) / 2),
										Math.floor(e - (a + s) / 2)
									);
									i.setCenterPoint(r, o, a, s);
								},
								setCenterPoint: function (e, t, n, i) {
									var r = this;
									var o = r.width - t - r.drawingArea;
									var a = e + r.drawingArea;
									var s = n + r.drawingArea;
									var l = r.height - r.paddingTop - i - r.drawingArea;
									r.xCenter = Math.floor((a + o) / 2 + r.left);
									r.yCenter = Math.floor((s + l) / 2 + r.top + r.paddingTop);
								},
								getIndexAngle: function (e) {
									var t = this.chart;
									var n = 360 / t.data.labels.length;
									var i = t.options || {};
									var r = i.startAngle || 0;
									var o = (e * n + r) % 360;
									return ((o < 0 ? o + 360 : o) * Math.PI * 2) / 360;
								},
								getDistanceFromCenterForValue: function (e) {
									var t = this;
									if (xe.isNullOrUndef(e)) return NaN;
									var n = t.drawingArea / (t.max - t.min);
									if (t.options.ticks.reverse) return (t.max - e) * n;
									return (e - t.min) * n;
								},
								getPointPosition: function (e, t) {
									var n = this;
									var i = n.getIndexAngle(e) - Math.PI / 2;
									return {
										x: Math.cos(i) * t + n.xCenter,
										y: Math.sin(i) * t + n.yCenter,
									};
								},
								getPointPositionForValue: function (e, t) {
									return this.getPointPosition(
										e,
										this.getDistanceFromCenterForValue(t)
									);
								},
								getBasePosition: function (e) {
									var t = this;
									var n = t.min;
									var i = t.max;
									return t.getPointPositionForValue(
										e || 0,
										t.beginAtZero
											? 0
											: n < 0 && i < 0
											? i
											: n > 0 && i > 0
											? n
											: 0
									);
								},
								_drawGrid: function () {
									var n = this;
									var e = n.ctx;
									var t = n.options;
									var i = t.gridLines;
									var r = t.angleLines;
									var o = cr(r.lineWidth, i.lineWidth);
									var a = cr(r.color, i.color);
									var s, l, u;
									if (t.pointLabels.display) kr(n);
									if (i.display)
										xe.each(n.ticks, function (e, t) {
											if (t !== 0) {
												l = n.getDistanceFromCenterForValue(
													n.ticksAsNumbers[t]
												);
												wr(n, i, l, t);
											}
										});
									if (r.display && o && a) {
										e.save();
										e.lineWidth = o;
										e.strokeStyle = a;
										if (e.setLineDash) {
											e.setLineDash(fr([r.borderDash, i.borderDash, []]));
											e.lineDashOffset = fr([
												r.borderDashOffset,
												i.borderDashOffset,
												0,
											]);
										}
										for (s = n.chart.data.labels.length - 1; s >= 0; s--) {
											l = n.getDistanceFromCenterForValue(
												t.ticks.reverse ? n.min : n.max
											);
											u = n.getPointPosition(s, l);
											e.beginPath();
											e.moveTo(n.xCenter, n.yCenter);
											e.lineTo(u.x, u.y);
											e.stroke();
										}
										e.restore();
									}
								},
								_drawLabels: function () {
									var n = this;
									var i = n.ctx;
									var e = n.options;
									var r = e.ticks;
									if (!r.display) return;
									var t = n.getIndexAngle(0);
									var o = xe.options._parseFont(r);
									var a = cr(r.fontColor, he.global.defaultFontColor);
									var s, l;
									i.save();
									i.font = o.string;
									i.translate(n.xCenter, n.yCenter);
									i.rotate(t);
									i.textAlign = 'center';
									i.textBaseline = 'middle';
									xe.each(n.ticks, function (e, t) {
										if (t === 0 && !r.reverse) return;
										s = n.getDistanceFromCenterForValue(n.ticksAsNumbers[t]);
										if (r.showLabelBackdrop) {
											l = i.measureText(e).width;
											i.fillStyle = r.backdropColor;
											i.fillRect(
												-l / 2 - r.backdropPaddingX,
												-s - o.size / 2 - r.backdropPaddingY,
												l + r.backdropPaddingX * 2,
												o.size + r.backdropPaddingY * 2
											);
										}
										i.fillStyle = a;
										i.fillText(e, 0, -s);
									});
									i.restore();
								},
								_drawTitle: xe.noop,
							}),
							xr;
						Lr._defaults = hr;
						var Dr = xe._deprecated,
							Sr = xe.options.resolve,
							Tr = xe.valueOrDefault,
							Or = Number.MIN_SAFE_INTEGER || -9007199254740991,
							Yr = Number.MAX_SAFE_INTEGER || 9007199254740991,
							Cr = {
								millisecond: { common: true, size: 1, steps: 1e3 },
								second: { common: true, size: 1e3, steps: 60 },
								minute: { common: true, size: 6e4, steps: 60 },
								hour: { common: true, size: 36e5, steps: 24 },
								day: { common: true, size: 864e5, steps: 30 },
								week: { common: false, size: 6048e5, steps: 4 },
								month: { common: true, size: 2628e6, steps: 12 },
								quarter: { common: false, size: 7884e6, steps: 4 },
								year: { common: true, size: 3154e7 },
							},
							jr = Object.keys(Cr);
						function Er(e, t) {
							return e - t;
						}
						function Pr(e) {
							var t = {};
							var n = [];
							var i, r, o;
							for (i = 0, r = e.length; i < r; ++i) {
								o = e[i];
								if (!t[o]) {
									t[o] = true;
									n.push(o);
								}
							}
							return n;
						}
						function Ar(e) {
							return xe.valueOrDefault(e.time.min, e.ticks.min);
						}
						function Hr(e) {
							return xe.valueOrDefault(e.time.max, e.ticks.max);
						}
						function Ir(e, t, n, i) {
							if (i === 'linear' || !e.length)
								return [
									{ time: t, pos: 0 },
									{ time: n, pos: 1 },
								];
							var r = [];
							var o = [t];
							var a, s, l, u, c;
							for (a = 0, s = e.length; a < s; ++a) {
								u = e[a];
								if (u > t && u < n) o.push(u);
							}
							o.push(n);
							for (a = 0, s = o.length; a < s; ++a) {
								c = o[a + 1];
								l = o[a - 1];
								u = o[a];
								if (
									l === undefined ||
									c === undefined ||
									Math.round((c + l) / 2) !== u
								)
									r.push({ time: u, pos: a / (s - 1) });
							}
							return r;
						}
						function Rr(e, t, n) {
							var i = 0;
							var r = e.length - 1;
							var o, a, s;
							while (i >= 0 && i <= r) {
								o = (i + r) >> 1;
								a = e[o - 1] || null;
								s = e[o];
								if (!a) return { lo: null, hi: s };
								else if (s[t] < n) i = o + 1;
								else if (a[t] > n) r = o - 1;
								else return { lo: a, hi: s };
							}
							return { lo: s, hi: null };
						}
						function Nr(e, t, n, i) {
							var r = Rr(e, t, n);
							var o = !r.lo ? e[0] : !r.hi ? e[e.length - 2] : r.lo;
							var a = !r.lo ? e[1] : !r.hi ? e[e.length - 1] : r.hi;
							var s = a[t] - o[t];
							var l = s ? (n - o[t]) / s : 0;
							var u = (a[i] - o[i]) * l;
							return o[i] + u;
						}
						function Wr(e, t) {
							var n = e._adapter;
							var i = e.options.time;
							var r = i.parser;
							var o = r || i.format;
							var a = t;
							if (typeof r === 'function') a = r(a);
							if (!xe.isFinite(a))
								a = typeof o === 'string' ? n.parse(a, o) : n.parse(a);
							if (a !== null) return +a;
							if (!r && typeof o === 'function') {
								a = o(t);
								if (!xe.isFinite(a)) a = n.parse(a);
							}
							return a;
						}
						function Fr(e, t) {
							if (xe.isNullOrUndef(t)) return null;
							var n = e.options.time;
							var i = Wr(e, e.getRightValue(t));
							if (i === null) return i;
							if (n.round) i = +e._adapter.startOf(i, n.round);
							return i;
						}
						function Br(e, t, n, i) {
							var r = jr.length;
							var o, a, s;
							for (o = jr.indexOf(e); o < r - 1; ++o) {
								a = Cr[jr[o]];
								s = a.steps ? a.steps : Yr;
								if (a.common && Math.ceil((n - t) / (s * a.size)) <= i)
									return jr[o];
							}
							return jr[r - 1];
						}
						function zr(e, t, n, i, r) {
							var o, a;
							for (o = jr.length - 1; o >= jr.indexOf(n); o--) {
								a = jr[o];
								if (Cr[a].common && e._adapter.diff(r, i, a) >= t - 1) return a;
							}
							return jr[n ? jr.indexOf(n) : 0];
						}
						function Vr(e) {
							for (var t = jr.indexOf(e) + 1, n = jr.length; t < n; ++t)
								if (Cr[jr[t]].common) return jr[t];
						}
						function Ur(e, t, n, i) {
							var r = e._adapter;
							var o = e.options;
							var a = o.time;
							var s = a.unit || Br(a.minUnit, t, n, i);
							var l = Sr([a.stepSize, a.unitStepSize, 1]);
							var u = s === 'week' ? a.isoWeekday : false;
							var c = t;
							var d = [];
							var f;
							if (u) c = +r.startOf(c, 'isoWeek', u);
							c = +r.startOf(c, u ? 'day' : s);
							if (r.diff(n, t, s) > 1e5 * l)
								throw (
									t +
									' and ' +
									n +
									' are too far apart with stepSize of ' +
									l +
									' ' +
									s
								);
							for (f = c; f < n; f = +r.add(f, l, s)) d.push(f);
							if (f === n || o.bounds === 'ticks') d.push(f);
							return d;
						}
						function Xr(e, t, n, i, r) {
							var o = 0;
							var a = 0;
							var s, l;
							if (r.offset && t.length) {
								s = Nr(e, 'time', t[0], 'pos');
								if (t.length === 1) o = 1 - s;
								else o = (Nr(e, 'time', t[1], 'pos') - s) / 2;
								l = Nr(e, 'time', t[t.length - 1], 'pos');
								if (t.length === 1) a = l;
								else a = (l - Nr(e, 'time', t[t.length - 2], 'pos')) / 2;
							}
							return { start: o, end: a, factor: 1 / (o + 1 + a) };
						}
						function Jr(e, t, n, i) {
							var r = e._adapter;
							var o = +r.startOf(t[0].value, i);
							var a = t[t.length - 1].value;
							var s, l;
							for (s = o; s <= a; s = +r.add(s, 1, i)) {
								l = n[s];
								if (l >= 0) t[l].major = true;
							}
							return t;
						}
						function qr(e, t, n) {
							var i = [];
							var r = {};
							var o = t.length;
							var a, s;
							for (a = 0; a < o; ++a) {
								s = t[a];
								r[s] = a;
								i.push({ value: s, major: false });
							}
							return o === 0 || !n ? i : Jr(e, i, r, n);
						}
						var Kr = {
								position: 'bottom',
								distribution: 'linear',
								bounds: 'data',
								adapters: {},
								time: {
									parser: false,
									unit: false,
									round: false,
									displayFormat: false,
									isoWeekday: false,
									minUnit: 'millisecond',
									displayFormats: {},
								},
								ticks: {
									autoSkip: false,
									source: 'auto',
									major: { enabled: false },
								},
							},
							Gr = Wi.extend({
								initialize: function () {
									this.mergeTicksOptions();
									Wi.prototype.initialize.call(this);
								},
								update: function () {
									var e = this;
									var t = e.options;
									var n = t.time || (t.time = {});
									var i = (e._adapter = new gi._date(t.adapters.date));
									Dr('time scale', n.format, 'time.format', 'time.parser');
									Dr('time scale', n.min, 'time.min', 'ticks.min');
									Dr('time scale', n.max, 'time.max', 'ticks.max');
									xe.mergeIf(n.displayFormats, i.formats());
									return Wi.prototype.update.apply(e, arguments);
								},
								getRightValue: function (e) {
									if (e && e.t !== undefined) e = e.t;
									return Wi.prototype.getRightValue.call(this, e);
								},
								determineDataLimits: function () {
									var e = this;
									var t = e.chart;
									var n = e._adapter;
									var i = e.options;
									var r = i.time.unit || 'day';
									var o = Yr;
									var a = Or;
									var s = [];
									var l = [];
									var u = [];
									var c, d, f, h, p, m, _;
									var v = e._getLabels();
									for (c = 0, f = v.length; c < f; ++c) u.push(Fr(e, v[c]));
									for (c = 0, f = (t.data.datasets || []).length; c < f; ++c)
										if (t.isDatasetVisible(c)) {
											p = t.data.datasets[c].data;
											if (xe.isObject(p[0])) {
												l[c] = [];
												for (d = 0, h = p.length; d < h; ++d) {
													m = Fr(e, p[d]);
													s.push(m);
													l[c][d] = m;
												}
											} else {
												l[c] = u.slice(0);
												if (!_) {
													s = s.concat(u);
													_ = true;
												}
											}
										} else l[c] = [];
									if (u.length) {
										o = Math.min(o, u[0]);
										a = Math.max(a, u[u.length - 1]);
									}
									if (s.length) {
										s = f > 1 ? Pr(s).sort(Er) : s.sort(Er);
										o = Math.min(o, s[0]);
										a = Math.max(a, s[s.length - 1]);
									}
									o = Fr(e, Ar(i)) || o;
									a = Fr(e, Hr(i)) || a;
									o = o === Yr ? +n.startOf(Date.now(), r) : o;
									a = a === Or ? +n.endOf(Date.now(), r) + 1 : a;
									e.min = Math.min(o, a);
									e.max = Math.max(o + 1, a);
									e._table = [];
									e._timestamps = { data: s, datasets: l, labels: u };
								},
								buildTicks: function () {
									var e = this;
									var t = e.min;
									var n = e.max;
									var i = e.options;
									var r = i.ticks;
									var o = i.time;
									var a = e._timestamps;
									var s = [];
									var l = e.getLabelCapacity(t);
									var u = r.source;
									var c = i.distribution;
									var d, f, h;
									if (u === 'data' || (u === 'auto' && c === 'series'))
										a = a.data;
									else if (u === 'labels') a = a.labels;
									else a = Ur(e, t, n, l);
									if (i.bounds === 'ticks' && a.length) {
										t = a[0];
										n = a[a.length - 1];
									}
									t = Fr(e, Ar(i)) || t;
									n = Fr(e, Hr(i)) || n;
									for (d = 0, f = a.length; d < f; ++d) {
										h = a[d];
										if (h >= t && h <= n) s.push(h);
									}
									e.min = t;
									e.max = n;
									e._unit =
										o.unit ||
										(r.autoSkip
											? Br(o.minUnit, e.min, e.max, l)
											: zr(e, s.length, o.minUnit, e.min, e.max));
									e._majorUnit =
										!r.major.enabled || e._unit === 'year'
											? undefined
											: Vr(e._unit);
									e._table = Ir(e._timestamps.data, t, n, c);
									e._offsets = Xr(e._table, s, t, n, i);
									if (r.reverse) s.reverse();
									return qr(e, s, e._majorUnit);
								},
								getLabelForIndex: function (e, t) {
									var n = this;
									var i = n._adapter;
									var r = n.chart.data;
									var o = n.options.time;
									var a = r.labels && e < r.labels.length ? r.labels[e] : '';
									var s = r.datasets[t].data[e];
									if (xe.isObject(s)) a = n.getRightValue(s);
									if (o.tooltipFormat)
										return i.format(Wr(n, a), o.tooltipFormat);
									if (typeof a === 'string') return a;
									return i.format(Wr(n, a), o.displayFormats.datetime);
								},
								tickFormatFunction: function (e, t, n, i) {
									var r = this;
									var o = r._adapter;
									var a = r.options;
									var s = a.time.displayFormats;
									var l = s[r._unit];
									var u = r._majorUnit;
									var c = s[u];
									var d = n[t];
									var f = a.ticks;
									var h = u && c && d && d.major;
									var p = o.format(e, i ? i : h ? c : l);
									var m = h ? f.major : f.minor;
									var _ = Sr([
										m.callback,
										m.userCallback,
										f.callback,
										f.userCallback,
									]);
									return _ ? _(p, t, n) : p;
								},
								convertTicksToLabels: function (e) {
									var t = [];
									var n, i;
									for (n = 0, i = e.length; n < i; ++n)
										t.push(this.tickFormatFunction(e[n].value, n, e));
									return t;
								},
								getPixelForOffset: function (e) {
									var t = this;
									var n = t._offsets;
									var i = Nr(t._table, 'time', e, 'pos');
									return t.getPixelForDecimal((n.start + i) * n.factor);
								},
								getPixelForValue: function (e, t, n) {
									var i = this;
									var r = null;
									if (t !== undefined && n !== undefined)
										r = i._timestamps.datasets[n][t];
									if (r === null) r = Fr(i, e);
									if (r !== null) return i.getPixelForOffset(r);
								},
								getPixelForTick: function (e) {
									var t = this.getTicks();
									return e >= 0 && e < t.length
										? this.getPixelForOffset(t[e].value)
										: null;
								},
								getValueForPixel: function (e) {
									var t = this;
									var n = t._offsets;
									var i = t.getDecimalForPixel(e) / n.factor - n.end;
									var r = Nr(t._table, 'pos', i, 'time');
									return t._adapter._create(r);
								},
								_getLabelSize: function (e) {
									var t = this;
									var n = t.options.ticks;
									var i = t.ctx.measureText(e).width;
									var r = xe.toRadians(
										t.isHorizontal() ? n.maxRotation : n.minRotation
									);
									var o = Math.cos(r);
									var a = Math.sin(r);
									var s = Tr(n.fontSize, he.global.defaultFontSize);
									return { w: i * o + s * a, h: i * a + s * o };
								},
								getLabelWidth: function (e) {
									return this._getLabelSize(e).w;
								},
								getLabelCapacity: function (e) {
									var t = this;
									var n = t.options.time;
									var i = n.displayFormats;
									var r = i[n.unit] || i.millisecond;
									var o = t.tickFormatFunction(
										e,
										0,
										qr(t, [e], t._majorUnit),
										r
									);
									var a = t._getLabelSize(o);
									var s = Math.floor(
										t.isHorizontal() ? t.width / a.w : t.height / a.h
									);
									if (t.options.offset) s--;
									return s > 0 ? s : 1;
								},
							}),
							Qr;
						Gr._defaults = Kr;
						var $r = {
								category: zi,
								linear: tr,
								logarithmic: lr,
								radialLinear: Lr,
								time: Gr,
							},
							Zr = {
								datetime: 'MMM D, YYYY, h:mm:ss a',
								millisecond: 'h:mm:ss.SSS a',
								second: 'h:mm:ss a',
								minute: 'h:mm a',
								hour: 'hA',
								day: 'MMM D',
								week: 'll',
								month: 'MMM YYYY',
								quarter: '[Q]Q - YYYY',
								year: 'YYYY',
							};
						gi._date.override(
							typeof i === 'function'
								? {
										_id: 'moment',
										formats: function () {
											return Zr;
										},
										parse: function (e, t) {
											if (typeof e === 'string' && typeof t === 'string')
												e = i(e, t);
											else if (!(e instanceof i)) e = i(e);
											return e.isValid() ? e.valueOf() : null;
										},
										format: function (e, t) {
											return i(e).format(t);
										},
										add: function (e, t, n) {
											return i(e).add(t, n).valueOf();
										},
										diff: function (e, t, n) {
											return i(e).diff(i(t), n);
										},
										startOf: function (e, t, n) {
											e = i(e);
											if (t === 'isoWeek') return e.isoWeekday(n).valueOf();
											return e.startOf(t).valueOf();
										},
										endOf: function (e, t) {
											return i(e).endOf(t).valueOf();
										},
										_create: function (e) {
											return i(e);
										},
								  }
								: {}
						),
							he._set('global', { plugins: { filler: { propagate: true } } });
						var eo = {
							dataset: function (e) {
								var t = e.fill;
								var n = e.chart;
								var i = n.getDatasetMeta(t);
								var r = i && n.isDatasetVisible(t);
								var o = (r && i.dataset._children) || [];
								var a = o.length || 0;
								return !a
									? null
									: function (e, t) {
											return (t < a && o[t]._view) || null;
									  };
							},
							boundary: function (e) {
								var n = e.boundary;
								var t = n ? n.x : null;
								var i = n ? n.y : null;
								if (xe.isArray(n))
									return function (e, t) {
										return n[t];
									};
								return function (e) {
									return { x: t === null ? e.x : t, y: i === null ? e.y : i };
								};
							},
						};
						function to(e, t, n) {
							var i = e._model || {};
							var r = i.fill;
							var o;
							if (r === undefined) r = !!i.backgroundColor;
							if (r === false || r === null) return false;
							if (r === true) return 'origin';
							o = parseFloat(r, 10);
							if (isFinite(o) && Math.floor(o) === o) {
								if (r[0] === '-' || r[0] === '+') o = t + o;
								if (o === t || o < 0 || o >= n) return false;
								return o;
							}
							switch (r) {
								case 'bottom':
									return 'start';
								case 'top':
									return 'end';
								case 'zero':
									return 'origin';
								case 'origin':
								case 'start':
								case 'end':
									return r;
								default:
									return false;
							}
						}
						function no(e) {
							var t = e.el._model || {};
							var n = e.el._scale || {};
							var i = e.fill;
							var r = null;
							var o;
							if (isFinite(i)) return null;
							if (i === 'start')
								r = t.scaleBottom === undefined ? n.bottom : t.scaleBottom;
							else if (i === 'end')
								r = t.scaleTop === undefined ? n.top : t.scaleTop;
							else if (t.scaleZero !== undefined) r = t.scaleZero;
							else if (n.getBasePixel) r = n.getBasePixel();
							if (r !== undefined && r !== null) {
								if (r.x !== undefined && r.y !== undefined) return r;
								if (xe.isFinite(r)) {
									o = n.isHorizontal();
									return { x: o ? r : null, y: o ? null : r };
								}
							}
							return null;
						}
						function io(e) {
							var t = e.el._scale;
							var n = t.options;
							var i = t.chart.data.labels.length;
							var r = e.fill;
							var o = [];
							var a, s, l, u, c;
							if (!i) return null;
							a = n.ticks.reverse ? t.max : t.min;
							s = n.ticks.reverse ? t.min : t.max;
							l = t.getPointPositionForValue(0, a);
							for (u = 0; u < i; ++u) {
								c =
									r === 'start' || r === 'end'
										? t.getPointPositionForValue(u, r === 'start' ? a : s)
										: t.getBasePosition(u);
								if (n.gridLines.circular) {
									c.cx = l.x;
									c.cy = l.y;
									c.angle = t.getIndexAngle(u) - Math.PI / 2;
								}
								o.push(c);
							}
							return o;
						}
						function ro(e) {
							var t = e.el._scale || {};
							if (t.getPointPositionForValue) return io(e);
							return no(e);
						}
						function oo(e, t, n) {
							var i = e[t];
							var r = i.fill;
							var o = [t];
							var a;
							if (!n) return r;
							while (r !== false && o.indexOf(r) === -1) {
								if (!isFinite(r)) return r;
								a = e[r];
								if (!a) return false;
								if (a.visible) return r;
								o.push(r);
								r = a.fill;
							}
							return false;
						}
						function ao(e) {
							var t = e.fill;
							var n = 'dataset';
							if (t === false) return null;
							if (!isFinite(t)) n = 'boundary';
							return eo[n](e);
						}
						function so(e) {
							return e && !e.skip;
						}
						function lo(e, t, n, i, r) {
							var o, a, s, l;
							if (!i || !r) return;
							e.moveTo(t[0].x, t[0].y);
							for (o = 1; o < i; ++o) xe.canvas.lineTo(e, t[o - 1], t[o]);
							if (n[0].angle !== undefined) {
								a = n[0].cx;
								s = n[0].cy;
								l = Math.sqrt(
									Math.pow(n[0].x - a, 2) + Math.pow(n[0].y - s, 2)
								);
								for (o = r - 1; o > 0; --o)
									e.arc(a, s, l, n[o].angle, n[o - 1].angle, true);
								return;
							}
							e.lineTo(n[r - 1].x, n[r - 1].y);
							for (o = r - 1; o > 0; --o)
								xe.canvas.lineTo(e, n[o], n[o - 1], true);
						}
						function uo(e, t, n, i, r, o) {
							var a = t.length;
							var s = i.spanGaps;
							var l = [];
							var u = [];
							var c = 0;
							var d = 0;
							var f, h, p, m, _, v, y, g;
							e.beginPath();
							for (f = 0, h = a; f < h; ++f) {
								p = f % a;
								m = t[p]._view;
								_ = n(m, p, i);
								v = so(m);
								y = so(_);
								if (o && g === undefined && v) {
									g = f + 1;
									h = a + g;
								}
								if (v && y) {
									c = l.push(m);
									d = u.push(_);
								} else if (c && d)
									if (!s) {
										lo(e, l, u, c, d);
										c = d = 0;
										l = [];
										u = [];
									} else {
										if (v) l.push(m);
										if (y) u.push(_);
									}
							}
							lo(e, l, u, c, d);
							e.closePath();
							e.fillStyle = r;
							e.fill();
						}
						var co = {
								id: 'filler',
								afterDatasetsUpdate: function (e, t) {
									var n = (e.data.datasets || []).length;
									var i = t.propagate;
									var r = [];
									var o, a, s, l;
									for (a = 0; a < n; ++a) {
										o = e.getDatasetMeta(a);
										s = o.dataset;
										l = null;
										if (s && s._model && s instanceof dt.Line)
											l = {
												visible: e.isDatasetVisible(a),
												fill: to(s, a, n),
												chart: e,
												el: s,
											};
										o.$filler = l;
										r.push(l);
									}
									for (a = 0; a < n; ++a) {
										l = r[a];
										if (!l) continue;
										l.fill = oo(r, a, i);
										l.boundary = ro(l);
										l.mapper = ao(l);
									}
								},
								beforeDatasetsDraw: function (e) {
									var t = e._getSortedVisibleDatasetMetas();
									var n = e.ctx;
									var i, r, o, a, s, l, u;
									for (r = t.length - 1; r >= 0; --r) {
										i = t[r].$filler;
										if (!i || !i.visible) continue;
										o = i.el;
										a = o._view;
										s = o._children || [];
										l = i.mapper;
										u = a.backgroundColor || he.global.defaultColor;
										if (l && u && s.length) {
											xe.canvas.clipArea(n, e.chartArea);
											uo(n, s, l, a, u, o._loop);
											xe.canvas.unclipArea(n);
										}
									}
								},
							},
							fo = xe.rtl.getRtlAdapter,
							ho = xe.noop,
							po = xe.valueOrDefault;
						function mo(e, t) {
							return e.usePointStyle && e.boxWidth > t ? t : e.boxWidth;
						}
						he._set('global', {
							legend: {
								display: true,
								position: 'top',
								align: 'center',
								fullWidth: true,
								reverse: false,
								weight: 1e3,
								onClick: function (e, t) {
									var n = t.datasetIndex;
									var i = this.chart;
									var r = i.getDatasetMeta(n);
									r.hidden =
										r.hidden === null ? !i.data.datasets[n].hidden : null;
									i.update();
								},
								onHover: null,
								onLeave: null,
								labels: {
									boxWidth: 40,
									padding: 10,
									generateLabels: function (n) {
										var i = n.data.datasets;
										var e = n.options.legend || {};
										var r = e.labels && e.labels.usePointStyle;
										return n._getSortedDatasetMetas().map(function (e) {
											var t = e.controller.getStyle(r ? 0 : undefined);
											return {
												text: i[e.index].label,
												fillStyle: t.backgroundColor,
												hidden: !n.isDatasetVisible(e.index),
												lineCap: t.borderCapStyle,
												lineDash: t.borderDash,
												lineDashOffset: t.borderDashOffset,
												lineJoin: t.borderJoinStyle,
												lineWidth: t.borderWidth,
												strokeStyle: t.borderColor,
												pointStyle: t.pointStyle,
												rotation: t.rotation,
												datasetIndex: e.index,
											};
										}, this);
									},
								},
							},
							legendCallback: function (e) {
								var t = document.createElement('ul');
								var n = e.data.datasets;
								var i, r, o, a;
								t.setAttribute('class', e.id + '-legend');
								for (i = 0, r = n.length; i < r; i++) {
									o = t.appendChild(document.createElement('li'));
									a = o.appendChild(document.createElement('span'));
									a.style.backgroundColor = n[i].backgroundColor;
									if (n[i].label)
										o.appendChild(document.createTextNode(n[i].label));
								}
								return t.outerHTML;
							},
						});
						var _o = Ee.extend({
							initialize: function (e) {
								var t = this;
								xe.extend(t, e);
								t.legendHitBoxes = [];
								t._hoveredItem = null;
								t.doughnutMode = false;
							},
							beforeUpdate: ho,
							update: function (e, t, n) {
								var i = this;
								i.beforeUpdate();
								i.maxWidth = e;
								i.maxHeight = t;
								i.margins = n;
								i.beforeSetDimensions();
								i.setDimensions();
								i.afterSetDimensions();
								i.beforeBuildLabels();
								i.buildLabels();
								i.afterBuildLabels();
								i.beforeFit();
								i.fit();
								i.afterFit();
								i.afterUpdate();
								return i.minSize;
							},
							afterUpdate: ho,
							beforeSetDimensions: ho,
							setDimensions: function () {
								var e = this;
								if (e.isHorizontal()) {
									e.width = e.maxWidth;
									e.left = 0;
									e.right = e.width;
								} else {
									e.height = e.maxHeight;
									e.top = 0;
									e.bottom = e.height;
								}
								e.paddingLeft = 0;
								e.paddingTop = 0;
								e.paddingRight = 0;
								e.paddingBottom = 0;
								e.minSize = { width: 0, height: 0 };
							},
							afterSetDimensions: ho,
							beforeBuildLabels: ho,
							buildLabels: function () {
								var t = this;
								var n = t.options.labels || {};
								var e = xe.callback(n.generateLabels, [t.chart], t) || [];
								if (n.filter)
									e = e.filter(function (e) {
										return n.filter(e, t.chart.data);
									});
								if (t.options.reverse) e.reverse();
								t.legendItems = e;
							},
							afterBuildLabels: ho,
							beforeFit: ho,
							fit: function () {
								var e = this;
								var t = e.options;
								var r = t.labels;
								var n = t.display;
								var o = e.ctx;
								var i = xe.options._parseFont(r);
								var a = i.size;
								var s = (e.legendHitBoxes = []);
								var l = e.minSize;
								var u = e.isHorizontal();
								if (u) {
									l.width = e.maxWidth;
									l.height = n ? 10 : 0;
								} else {
									l.width = n ? 10 : 0;
									l.height = e.maxHeight;
								}
								if (!n) {
									e.width = l.width = e.height = l.height = 0;
									return;
								}
								o.font = i.string;
								if (u) {
									var c = (e.lineWidths = [0]);
									var d = 0;
									o.textAlign = 'left';
									o.textBaseline = 'middle';
									xe.each(e.legendItems, function (e, t) {
										var n = mo(r, a);
										var i = n + a / 2 + o.measureText(e.text).width;
										if (
											t === 0 ||
											c[c.length - 1] + i + 2 * r.padding > l.width
										) {
											d += a + r.padding;
											c[c.length - (t > 0 ? 0 : 1)] = 0;
										}
										s[t] = { left: 0, top: 0, width: i, height: a };
										c[c.length - 1] += i + r.padding;
									});
									l.height += d;
								} else {
									var f = r.padding;
									var h = (e.columnWidths = []);
									var p = (e.columnHeights = []);
									var m = r.padding;
									var _ = 0;
									var v = 0;
									xe.each(e.legendItems, function (e, t) {
										var n = mo(r, a);
										var i = n + a / 2 + o.measureText(e.text).width;
										if (t > 0 && v + a + 2 * f > l.height) {
											m += _ + r.padding;
											h.push(_);
											p.push(v);
											_ = 0;
											v = 0;
										}
										_ = Math.max(_, i);
										v += a + f;
										s[t] = { left: 0, top: 0, width: i, height: a };
									});
									m += _;
									h.push(_);
									p.push(v);
									l.width += m;
								}
								e.width = l.width;
								e.height = l.height;
							},
							afterFit: ho,
							isHorizontal: function () {
								return (
									this.options.position === 'top' ||
									this.options.position === 'bottom'
								);
							},
							draw: function () {
								var s = this;
								var n = s.options;
								var l = n.labels;
								var e = he.global;
								var u = e.defaultColor;
								var c = e.elements.line;
								var d = s.height;
								var f = s.columnHeights;
								var h = s.width;
								var p = s.lineWidths;
								if (!n.display) return;
								var m = fo(n.rtl, s.left, s.minSize.width);
								var _ = s.ctx;
								var t = po(l.fontColor, e.defaultFontColor);
								var i = xe.options._parseFont(l);
								var v = i.size;
								var y;
								_.textAlign = m.textAlign('left');
								_.textBaseline = 'middle';
								_.lineWidth = 0.5;
								_.strokeStyle = t;
								_.fillStyle = t;
								_.font = i.string;
								var g = mo(l, v);
								var b = s.legendHitBoxes;
								var k = function (e, t, n) {
									if (isNaN(g) || g <= 0) return;
									_.save();
									var i = po(n.lineWidth, c.borderWidth);
									_.fillStyle = po(n.fillStyle, u);
									_.lineCap = po(n.lineCap, c.borderCapStyle);
									_.lineDashOffset = po(n.lineDashOffset, c.borderDashOffset);
									_.lineJoin = po(n.lineJoin, c.borderJoinStyle);
									_.lineWidth = i;
									_.strokeStyle = po(n.strokeStyle, u);
									if (_.setLineDash)
										_.setLineDash(po(n.lineDash, c.borderDash));
									if (l && l.usePointStyle) {
										var r = (g * Math.SQRT2) / 2;
										var o = m.xPlus(e, g / 2);
										var a = t + v / 2;
										xe.canvas.drawPoint(_, n.pointStyle, r, o, a, n.rotation);
									} else {
										_.fillRect(m.leftForLtr(e, g), t, g, v);
										if (i !== 0) _.strokeRect(m.leftForLtr(e, g), t, g, v);
									}
									_.restore();
								};
								var w = function (e, t, n, i) {
									var r = v / 2;
									var o = m.xPlus(e, g + r);
									var a = t + r;
									_.fillText(n.text, o, a);
									if (n.hidden) {
										_.beginPath();
										_.lineWidth = 2;
										_.moveTo(o, a);
										_.lineTo(m.xPlus(o, i), a);
										_.stroke();
									}
								};
								var M = function (e, t) {
									switch (n.align) {
										case 'start':
											return l.padding;
										case 'end':
											return e - t;
										default:
											return (e - t + l.padding) / 2;
									}
								};
								var L = s.isHorizontal();
								if (L)
									y = { x: s.left + M(h, p[0]), y: s.top + l.padding, line: 0 };
								else
									y = { x: s.left + l.padding, y: s.top + M(d, f[0]), line: 0 };
								xe.rtl.overrideTextDirection(s.ctx, n.textDirection);
								var x = v + l.padding;
								xe.each(s.legendItems, function (e, t) {
									var n = _.measureText(e.text).width;
									var i = g + v / 2 + n;
									var r = y.x;
									var o = y.y;
									m.setWidth(s.minSize.width);
									if (L) {
										if (t > 0 && r + i + l.padding > s.left + s.minSize.width) {
											o = y.y += x;
											y.line++;
											r = y.x = s.left + M(h, p[y.line]);
										}
									} else if (t > 0 && o + x > s.top + s.minSize.height) {
										r = y.x = r + s.columnWidths[y.line] + l.padding;
										y.line++;
										o = y.y = s.top + M(d, f[y.line]);
									}
									var a = m.x(r);
									k(a, o, e);
									b[t].left = m.leftForLtr(a, b[t].width);
									b[t].top = o;
									w(a, o, e, n);
									if (L) y.x += i + l.padding;
									else y.y += x;
								});
								xe.rtl.restoreTextDirection(s.ctx, n.textDirection);
							},
							_getLegendItemAt: function (e, t) {
								var n = this;
								var i, r, o;
								if (
									e >= n.left &&
									e <= n.right &&
									t >= n.top &&
									t <= n.bottom
								) {
									o = n.legendHitBoxes;
									for (i = 0; i < o.length; ++i) {
										r = o[i];
										if (
											e >= r.left &&
											e <= r.left + r.width &&
											t >= r.top &&
											t <= r.top + r.height
										)
											return n.legendItems[i];
									}
								}
								return null;
							},
							handleEvent: function (e) {
								var t = this;
								var n = t.options;
								var i = e.type === 'mouseup' ? 'click' : e.type;
								var r;
								if (i === 'mousemove') {
									if (!n.onHover && !n.onLeave) return;
								} else if (i === 'click') {
									if (!n.onClick) return;
								} else return;
								r = t._getLegendItemAt(e.x, e.y);
								if (i === 'click') {
									if (r && n.onClick) n.onClick.call(t, e.native, r);
								} else {
									if (n.onLeave && r !== t._hoveredItem) {
										if (t._hoveredItem)
											n.onLeave.call(t, e.native, t._hoveredItem);
										t._hoveredItem = r;
									}
									if (n.onHover && r) n.onHover.call(t, e.native, r);
								}
							},
						});
						function vo(e, t) {
							var n = new _o({ ctx: e.ctx, options: t, chart: e });
							dn.configure(e, n, t);
							dn.addBox(e, n);
							e.legend = n;
						}
						var yo = {
								id: 'legend',
								_element: _o,
								beforeInit: function (e) {
									var t = e.options.legend;
									if (t) vo(e, t);
								},
								beforeUpdate: function (e) {
									var t = e.options.legend;
									var n = e.legend;
									if (t) {
										xe.mergeIf(t, he.global.legend);
										if (n) {
											dn.configure(e, n, t);
											n.options = t;
										} else vo(e, t);
									} else if (n) {
										dn.removeBox(e, n);
										delete e.legend;
									}
								},
								afterEvent: function (e, t) {
									var n = e.legend;
									if (n) n.handleEvent(t);
								},
							},
							go = xe.noop;
						he._set('global', {
							title: {
								display: false,
								fontStyle: 'bold',
								fullWidth: true,
								padding: 10,
								position: 'top',
								text: '',
								weight: 2e3,
							},
						});
						var bo = Ee.extend({
							initialize: function (e) {
								var t = this;
								xe.extend(t, e);
								t.legendHitBoxes = [];
							},
							beforeUpdate: go,
							update: function (e, t, n) {
								var i = this;
								i.beforeUpdate();
								i.maxWidth = e;
								i.maxHeight = t;
								i.margins = n;
								i.beforeSetDimensions();
								i.setDimensions();
								i.afterSetDimensions();
								i.beforeBuildLabels();
								i.buildLabels();
								i.afterBuildLabels();
								i.beforeFit();
								i.fit();
								i.afterFit();
								i.afterUpdate();
								return i.minSize;
							},
							afterUpdate: go,
							beforeSetDimensions: go,
							setDimensions: function () {
								var e = this;
								if (e.isHorizontal()) {
									e.width = e.maxWidth;
									e.left = 0;
									e.right = e.width;
								} else {
									e.height = e.maxHeight;
									e.top = 0;
									e.bottom = e.height;
								}
								e.paddingLeft = 0;
								e.paddingTop = 0;
								e.paddingRight = 0;
								e.paddingBottom = 0;
								e.minSize = { width: 0, height: 0 };
							},
							afterSetDimensions: go,
							beforeBuildLabels: go,
							buildLabels: go,
							afterBuildLabels: go,
							beforeFit: go,
							fit: function () {
								var e = this;
								var t = e.options;
								var n = (e.minSize = {});
								var i = e.isHorizontal();
								var r, o;
								if (!t.display) {
									e.width = n.width = e.height = n.height = 0;
									return;
								}
								r = xe.isArray(t.text) ? t.text.length : 1;
								o = r * xe.options._parseFont(t).lineHeight + t.padding * 2;
								e.width = n.width = i ? e.maxWidth : o;
								e.height = n.height = i ? o : e.maxHeight;
							},
							afterFit: go,
							isHorizontal: function () {
								var e = this.options.position;
								return e === 'top' || e === 'bottom';
							},
							draw: function () {
								var e = this;
								var t = e.ctx;
								var n = e.options;
								if (!n.display) return;
								var i = xe.options._parseFont(n);
								var r = i.lineHeight;
								var o = r / 2 + n.padding;
								var a = 0;
								var s = e.top;
								var l = e.left;
								var u = e.bottom;
								var c = e.right;
								var d, f, h;
								t.fillStyle = xe.valueOrDefault(
									n.fontColor,
									he.global.defaultFontColor
								);
								t.font = i.string;
								if (e.isHorizontal()) {
									f = l + (c - l) / 2;
									h = s + o;
									d = c - l;
								} else {
									f = n.position === 'left' ? l + o : c - o;
									h = s + (u - s) / 2;
									d = u - s;
									a = Math.PI * (n.position === 'left' ? -0.5 : 0.5);
								}
								t.save();
								t.translate(f, h);
								t.rotate(a);
								t.textAlign = 'center';
								t.textBaseline = 'middle';
								var p = n.text;
								if (xe.isArray(p)) {
									var m = 0;
									for (var _ = 0; _ < p.length; ++_) {
										t.fillText(p[_], 0, m, d);
										m += r;
									}
								} else t.fillText(p, 0, 0, d);
								t.restore();
							},
						});
						function ko(e, t) {
							var n = new bo({ ctx: e.ctx, options: t, chart: e });
							dn.configure(e, n, t);
							dn.addBox(e, n);
							e.titleBlock = n;
						}
						var wo,
							Mo = {},
							Lo,
							xo = yo,
							Do = {
								id: 'title',
								_element: bo,
								beforeInit: function (e) {
									var t = e.options.title;
									if (t) ko(e, t);
								},
								beforeUpdate: function (e) {
									var t = e.options.title;
									var n = e.titleBlock;
									if (t) {
										xe.mergeIf(t, he.global.title);
										if (n) {
											dn.configure(e, n, t);
											n.options = t;
										} else ko(e, t);
									} else if (n) {
										dn.removeBox(e, n);
										delete e.titleBlock;
									}
								},
							},
							So;
						for (So in ((Mo.filler = co),
						(Mo.legend = xo),
						(Mo.title = Do),
						(pi.helpers = xe),
						mi(),
						(pi._adapters = gi),
						(pi.Animation = Ae),
						(pi.animationService = He),
						(pi.controllers = Vt),
						(pi.DatasetController = Be),
						(pi.defaults = he),
						(pi.Element = Ee),
						(pi.elements = dt),
						(pi.Interaction = Qt),
						(pi.layouts = dn),
						(pi.platform = Fn),
						(pi.plugins = Bn),
						(pi.Scale = Wi),
						(pi.scaleService = zn),
						(pi.Ticks = bi),
						(pi.Tooltip = ri),
						pi.helpers.each($r, function (e, t) {
							pi.scaleService.registerScaleType(t, e, e._defaults);
						}),
						Mo))
							if (Mo.hasOwnProperty(So)) pi.plugins.register(Mo[So]);
						pi.platform.initialize();
						var To = pi;
						if (typeof window !== 'undefined') window.Chart = pi;
						return (
							((pi.Chart = pi).Legend = Mo.legend._element),
							(pi.Title = Mo.title._element),
							(pi.pluginService = pi.plugins),
							(pi.PluginBase = pi.Element.extend({})),
							(pi.canvasHelpers = pi.helpers.canvas),
							(pi.layoutService = pi.layouts),
							(pi.LinearScaleBase = qi),
							pi.helpers.each(
								[
									'Bar',
									'Bubble',
									'Doughnut',
									'Line',
									'PolarArea',
									'Radar',
									'Scatter',
								],
								function (n) {
									pi[n] = function (e, t) {
										return new pi(
											e,
											pi.helpers.merge(t || {}, {
												type: n.charAt(0).toLowerCase() + n.slice(1),
											})
										);
									};
								}
							),
							To
						);
					})(
						(function () {
							try {
								return n(0);
							} catch (e) {}
						})()
					);
				},
				function (e, t, n) {
					var i = n(14),
						n = n(17),
						r = i.document,
						o = n(r) && n(r.createElement);
					e.exports = function (e) {
						return o ? r.createElement(e) : {};
					};
				},
				function (e, t, n) {
					var i = n(14),
						r = n(39);
					e.exports = function (t, n) {
						try {
							r(i, t, n);
						} catch (e) {
							i[t] = n;
						}
						return n;
					};
				},
				function (e, t, n) {
					var n = n(90),
						i = Function.toString;
					'function' != typeof n.inspectSource &&
						(n.inspectSource = function (e) {
							return i.call(e);
						}),
						(e.exports = n.inspectSource);
				},
				function (e, t, n) {
					var i = n(14),
						r = n(88),
						n = '__core-js_shared__',
						n = i[n] || r(n, {});
					e.exports = n;
				},
				function (e, t, n) {
					var i = n(48),
						r = n(90);
					(e.exports = function (e, t) {
						return r[e] || (r[e] = void 0 !== t ? t : {});
					})('versions', []).push({
						version: '3.8.1',
						mode: i ? 'pure' : 'global',
						copyright: '© 2020 Denis Pushkarev (zloirock.ru)',
					});
				},
				function (e, t, n) {
					var l = n(34),
						u = n(32),
						c = n(93),
						n = function (s) {
							return function (e, t, n) {
								var i,
									r = l(e),
									o = u(r.length),
									a = c(n, o);
								if (s && t != t) {
									for (; a < o; ) if ((i = r[a++]) != i) return !0;
								} else
									for (; a < o; a++)
										if ((s || a in r) && r[a] === t) return s || a || 0;
								return !s && -1;
							};
						};
					e.exports = { includes: n(!0), indexOf: n(!1) };
				},
				function (e, t, n) {
					var i = n(62),
						r = Math.max,
						o = Math.min;
					e.exports = function (e, t) {
						e = i(e);
						return e < 0 ? r(e + t, 0) : o(e, t);
					};
				},
				function (e, t) {
					e.exports = [
						'constructor',
						'hasOwnProperty',
						'isPrototypeOf',
						'propertyIsEnumerable',
						'toLocaleString',
						'toString',
						'valueOf',
					];
				},
				function (e, t) {
					t.f = Object.getOwnPropertySymbols;
				},
				function (e, t, n) {
					var i = n(17),
						r = n(75),
						o = n(15)('species');
					e.exports = function (e, t) {
						var n;
						return (
							r(e) &&
								(('function' == typeof (n = e.constructor) &&
									(n === Array || r(n.prototype))) ||
									(i(n) && null === (n = n[o]))) &&
								(n = void 0),
							new (void 0 === n ? Array : n)(0 === t ? 0 : t)
						);
					};
				},
				function (e, t, n) {
					n = n(10);
					e.exports =
						!!Object.getOwnPropertySymbols &&
						!n(function () {
							return !String(Symbol());
						});
				},
				function (e, t, n) {
					var i = n(24),
						r = n(35),
						o = n(73),
						n = n(128),
						a = o('IE_PROTO'),
						s = Object.prototype;
					e.exports = n
						? Object.getPrototypeOf
						: function (e) {
								return (
									(e = r(e)),
									i(e, a)
										? e[a]
										: 'function' == typeof e.constructor &&
										  e instanceof e.constructor
										? e.constructor.prototype
										: e instanceof Object
										? s
										: null
								);
						  };
				},
				function (e, t, n) {
					var r = n(18),
						o = n(293);
					e.exports =
						Object.setPrototypeOf ||
						('__proto__' in {}
							? (function () {
									var n,
										i = !1,
										e = {};
									try {
										(n = Object.getOwnPropertyDescriptor(
											Object.prototype,
											'__proto__'
										).set).call(e, []),
											(i = e instanceof Array);
									} catch (e) {}
									return function (e, t) {
										return r(e), o(t), i ? n.call(e, t) : (e.__proto__ = t), e;
									};
							  })()
							: void 0);
				},
				function (e, t, n) {
					var i = {};
					(i[n(15)('toStringTag')] = 'z'),
						(e.exports = '[object z]' === String(i));
				},
				function (e, t, n) {
					var i = n(100),
						r = n(47),
						o = n(15)('toStringTag'),
						a =
							'Arguments' ==
							r(
								(function () {
									return arguments;
								})()
							);
					e.exports = i
						? r
						: function (e) {
								var t;
								return void 0 === e
									? 'Undefined'
									: null === e
									? 'Null'
									: 'string' ==
									  typeof (e = (function (e, t) {
											try {
												return e[t];
											} catch (e) {}
									  })((t = Object(e)), o))
									? e
									: a
									? r(t)
									: 'Object' == (e = r(t)) && 'function' == typeof t.callee
									? 'Arguments'
									: e;
						  };
				},
				function (e, t, n) {
					'use strict';
					var i = n(18);
					e.exports = function () {
						var e = i(this),
							t = '';
						return (
							e.global && (t += 'g'),
							e.ignoreCase && (t += 'i'),
							e.multiline && (t += 'm'),
							e.dotAll && (t += 's'),
							e.unicode && (t += 'u'),
							e.sticky && (t += 'y'),
							t
						);
					};
				},
				function (e, t, n) {
					var i = n(6),
						r = n(131);
					i(
						{
							target: 'Array',
							stat: !0,
							forced: !n(104)(function (e) {
								Array.from(e);
							}),
						},
						{ from: r }
					);
				},
				function (e, t, n) {
					var r = n(15)('iterator'),
						o = !1;
					try {
						var i = 0,
							a = {
								next: function () {
									return { done: !!i++ };
								},
								return: function () {
									o = !0;
								},
							};
						(a[r] = function () {
							return this;
						}),
							Array.from(a, function () {
								throw 2;
							});
					} catch (e) {}
					e.exports = function (e, t) {
						if (!t && !o) return !1;
						var n = !1;
						try {
							var i = {};
							(i[r] = function () {
								return {
									next: function () {
										return { done: (n = !0) };
									},
								};
							}),
								e(i);
						} catch (e) {}
						return n;
					};
				},
				function (e, t, n) {
					var o = n(17),
						a = n(99);
					e.exports = function (e, t, n) {
						var i, r;
						return (
							a &&
								'function' == typeof (i = t.constructor) &&
								i !== n &&
								o((r = i.prototype)) &&
								r !== n.prototype &&
								a(e, r),
							e
						);
					};
				},
				function (e, t, n) {
					var i = n(17),
						r = n(47),
						o = n(15)('match');
					e.exports = function (e) {
						var t;
						return i(e) && (void 0 !== (t = e[o]) ? !!t : 'RegExp' == r(e));
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(46),
						r = n(29),
						o = n(15),
						a = n(22),
						s = o('species');
					e.exports = function (e) {
						var t = i(e),
							e = r.f;
						a &&
							t &&
							!t[s] &&
							e(t, s, {
								configurable: !0,
								get: function () {
									return this;
								},
							});
					};
				},
				function (e, t, n) {
					var a = n(62),
						s = n(38),
						n = function (o) {
							return function (e, t) {
								var n,
									i = String(s(e)),
									r = a(t),
									e = i.length;
								return r < 0 || e <= r
									? o
										? ''
										: void 0
									: (t = i.charCodeAt(r)) < 55296 ||
									  56319 < t ||
									  r + 1 === e ||
									  (n = i.charCodeAt(r + 1)) < 56320 ||
									  57343 < n
									? o
										? i.charAt(r)
										: t
									: o
									? i.slice(r, r + 2)
									: n - 56320 + ((t - 55296) << 10) + 65536;
							};
						};
					e.exports = { codeAt: n(!1), charAt: n(!0) };
				},
				function (e, t, n) {
					'use strict';
					function m() {
						return this;
					}
					var _ = n(6),
						v = n(135),
						y = n(98),
						g = n(99),
						b = n(52),
						k = n(39),
						w = n(30),
						i = n(15),
						M = n(48),
						L = n(68),
						n = n(136),
						x = n.IteratorPrototype,
						D = n.BUGGY_SAFARI_ITERATORS,
						S = i('iterator'),
						T = 'values';
					e.exports = function (e, t, n, i, r, o, a) {
						v(n, t, i);
						function s(e) {
							if (e === r && p) return p;
							if (!D && e in f) return f[e];
							switch (e) {
								case 'keys':
								case T:
								case 'entries':
									return function () {
										return new n(this, e);
									};
							}
							return function () {
								return new n(this);
							};
						}
						var l,
							u,
							c = t + ' Iterator',
							d = !1,
							f = e.prototype,
							h = f[S] || f['@@iterator'] || (r && f[r]),
							p = (!D && h) || s(r),
							i = ('Array' == t && f.entries) || h;
						if (
							(i &&
								((e = y(i.call(new e()))),
								x !== Object.prototype &&
									e.next &&
									(M ||
										y(e) === x ||
										(g ? g(e, x) : 'function' != typeof e[S] && k(e, S, m)),
									b(e, c, !0, !0),
									M && (L[c] = m))),
							r == T &&
								h &&
								h.name !== T &&
								((d = !0),
								(p = function () {
									return h.call(this);
								})),
							(M && !a) || f[S] === p || k(f, S, p),
							(L[t] = p),
							r)
						)
							if (
								((l = {
									values: s(T),
									keys: o ? p : s('keys'),
									entries: s('entries'),
								}),
								a)
							)
								for (u in l) (!D && !d && u in f) || w(f, u, l[u]);
							else _({ target: t, proto: !0, forced: D || d }, l);
						return l;
					};
				},
				function (e, t, n) {
					'use strict';
					n(9);
					var u = n(30),
						c = n(10),
						d = n(15),
						f = n(82),
						h = n(39),
						p = d('species'),
						m = !c(function () {
							var e = /./;
							return (
								(e.exec = function () {
									var e = [];
									return (e.groups = { a: '7' }), e;
								}),
								'7' !== ''.replace(e, '$<a>')
							);
						}),
						_ = '$0' === 'a'.replace(/./, '$0'),
						n = d('replace'),
						v = !!/./[n] && '' === /./[n]('a', '$0'),
						y = !c(function () {
							var e = /(?:)/,
								t = e.exec;
							e.exec = function () {
								return t.apply(this, arguments);
							};
							e = 'ab'.split(e);
							return 2 !== e.length || 'a' !== e[0] || 'b' !== e[1];
						});
					e.exports = function (n, e, t, i) {
						var o,
							r,
							a = d(n),
							s = !c(function () {
								var e = {};
								return (
									(e[a] = function () {
										return 7;
									}),
									7 != ''[n](e)
								);
							}),
							l =
								s &&
								!c(function () {
									var e = !1,
										t = /a/;
									return (
										'split' === n &&
											(((t = { constructor: {} }).constructor[p] = function () {
												return t;
											}),
											(t.flags = ''),
											(t[a] = /./[a])),
										(t.exec = function () {
											return (e = !0), null;
										}),
										t[a](''),
										!e
									);
								});
						(s &&
							l &&
							('replace' !== n || (m && _ && !v)) &&
							('split' !== n || y)) ||
							((o = /./[a]),
							(t = (l = t(
								a,
								''[n],
								function (e, t, n, i, r) {
									return t.exec === f
										? s && !r
											? { done: !0, value: o.call(t, n, i) }
											: { done: !0, value: e.call(n, t, i) }
										: { done: !1 };
								},
								{
									REPLACE_KEEPS_$0: _,
									REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: v,
								}
							))[0]),
							(r = l[1]),
							u(String.prototype, n, t),
							u(
								RegExp.prototype,
								a,
								2 == e
									? function (e, t) {
											return r.call(e, this, t);
									  }
									: function (e) {
											return r.call(e, this);
									  }
							)),
							i && h(RegExp.prototype[a], 'sham', !0);
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(108).charAt;
					e.exports = function (e, t, n) {
						return t + (n ? i(e, t).length : 1);
					};
				},
				function (e, t, n) {
					var i = n(47),
						r = n(82);
					e.exports = function (e, t) {
						var n = e.exec;
						if ('function' == typeof n) {
							n = n.call(e, t);
							if ('object' != typeof n)
								throw TypeError(
									'RegExp exec method returned something other than an Object or null'
								);
							return n;
						}
						if ('RegExp' !== i(e))
							throw TypeError('RegExp#exec called on incompatible receiver');
						return r.call(e, t);
					};
				},
				function (e, t, n) {
					function _(e, t) {
						(this.stopped = e), (this.result = t);
					}
					var v = n(18),
						y = n(133),
						g = n(32),
						b = n(57),
						k = n(78),
						w = n(132);
					e.exports = function (e, t, n) {
						function i(e) {
							return o && w(o), new _(!0, e);
						}
						function r(e) {
							return f
								? (v(e), p ? m(e[0], e[1], i) : m(e[0], e[1]))
								: p
								? m(e, i)
								: m(e);
						}
						var o,
							a,
							s,
							l,
							u,
							c,
							d = n && n.that,
							f = !(!n || !n.AS_ENTRIES),
							h = !(!n || !n.IS_ITERATOR),
							p = !(!n || !n.INTERRUPTED),
							m = b(t, d, 1 + f + p);
						if (h) o = e;
						else {
							if ('function' != typeof (h = k(e)))
								throw TypeError('Target is not iterable');
							if (y(h)) {
								for (a = 0, s = g(e.length); a < s; a++)
									if ((l = r(e[a])) && l instanceof _) return l;
								return new _(!1);
							}
							o = h.call(e);
						}
						for (u = o.next; !(c = u.call(o)).done; ) {
							try {
								l = r(c.value);
							} catch (e) {
								throw (w(o), e);
							}
							if ('object' == typeof l && l && l instanceof _) return l;
						}
						return new _(!1);
					};
				},
				function (e, t, n) {
					var r = n(30);
					e.exports = function (e, t, n) {
						for (var i in t) r(e, i, t[i], n);
						return e;
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(315).left,
						o = n(65),
						a = n(36),
						s = n(77),
						n = n(85),
						o = o('reduce'),
						a = a('reduce', { 1: 0 });
					i(
						{
							target: 'Array',
							proto: !0,
							forced: !o || !a || (!n && 79 < s && s < 83),
						},
						{
							reduce: function (e, t) {
								return r(
									this,
									e,
									arguments.length,
									1 < arguments.length ? t : void 0
								);
							},
						}
					);
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(323);
					i(
						{ target: 'String', proto: !0, forced: n(324)('fixed') },
						{
							fixed: function () {
								return r(this, 'tt', '', '');
							},
						}
					);
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						r = n(49).every,
						o = n(65),
						n = n(36),
						o = o('every'),
						n = n('every');
					i(
						{ target: 'Array', proto: !0, forced: !o || !n },
						{
							every: function (e, t) {
								return r(this, e, 1 < arguments.length ? t : void 0);
							},
						}
					);
				},
				function (e, t, n) {
					/*!
					 * chartjs-plugin-datalabels v0.7.0
					 * https://chartjs-plugin-datalabels.netlify.com
					 * (c) 2019 Chart.js Contributors
					 * Released under the MIT license
					 */
					e.exports = (function (u) {
						'use strict';
						var r = (u = u && u.hasOwnProperty('default') ? u['default'] : u)
								.helpers,
							t = (function () {
								if (typeof window !== 'undefined') {
									if (window.devicePixelRatio) return window.devicePixelRatio;
									var e = window.screen;
									if (e) return (e.deviceXDPI || 1) / (e.logicalXDPI || 1);
								}
								return 1;
							})(),
							f = {
								toTextLines: function (e) {
									var t = [];
									var n;
									e = [].concat(e);
									while (e.length) {
										n = e.pop();
										if (typeof n === 'string')
											t.unshift.apply(t, n.split('\n'));
										else if (Array.isArray(n)) e.push.apply(e, n);
										else if (!r.isNullOrUndef(e)) t.unshift('' + n);
									}
									return t;
								},
								toFontString: function (e) {
									if (
										!e ||
										r.isNullOrUndef(e.size) ||
										r.isNullOrUndef(e.family)
									)
										return null;
									return (
										(e.style ? e.style + ' ' : '') +
										(e.weight ? e.weight + ' ' : '') +
										e.size +
										'px ' +
										e.family
									);
								},
								textSize: function (e, t, n) {
									var i = [].concat(t);
									var r = i.length;
									var o = e.font;
									var a = 0;
									var s;
									e.font = n.string;
									for (s = 0; s < r; ++s)
										a = Math.max(e.measureText(i[s]).width, a);
									e.font = o;
									return { height: r * n.lineHeight, width: a };
								},
								parseFont: function (e) {
									var t = u.defaults.global;
									var n = r.valueOrDefault(e.size, t.defaultFontSize);
									var i = {
										family: r.valueOrDefault(e.family, t.defaultFontFamily),
										lineHeight: r.options.toLineHeight(e.lineHeight, n),
										size: n,
										style: r.valueOrDefault(e.style, t.defaultFontStyle),
										weight: r.valueOrDefault(e.weight, null),
										string: '',
									};
									i.string = f.toFontString(i);
									return i;
								},
								bound: function (e, t, n) {
									return Math.max(e, Math.min(t, n));
								},
								arrayDiff: function (e, t) {
									var n = e.slice();
									var i = [];
									var r, o, a, s;
									for (r = 0, a = t.length; r < a; ++r) {
										s = t[r];
										o = n.indexOf(s);
										if (o === -1) i.push([s, 1]);
										else n.splice(o, 1);
									}
									for (r = 0, a = n.length; r < a; ++r) i.push([n[r], -1]);
									return i;
								},
								rasterize: function (e) {
									return Math.round(e * t) / t;
								},
							};
						function s(e, t) {
							var n = t.x;
							var i = t.y;
							if (n === null) return { x: 0, y: -1 };
							if (i === null) return { x: 1, y: 0 };
							var r = e.x - n;
							var o = e.y - i;
							var a = Math.sqrt(r * r + o * o);
							return { x: a ? r / a : 0, y: a ? o / a : -1 };
						}
						function a(e, t, n, i, r) {
							switch (r) {
								case 'center':
									n = i = 0;
									break;
								case 'bottom':
									n = 0;
									i = 1;
									break;
								case 'right':
									n = 1;
									i = 0;
									break;
								case 'left':
									n = -1;
									i = 0;
									break;
								case 'top':
									n = 0;
									i = -1;
									break;
								case 'start':
									n = -n;
									i = -i;
									break;
								case 'end':
									break;
								default:
									r *= Math.PI / 180;
									n = Math.cos(r);
									i = Math.sin(r);
									break;
							}
							return { x: e, y: t, vx: n, vy: i };
						}
						var o = 0,
							d = 1,
							h = 2,
							p = 4,
							m = 8;
						function _(e, t, n) {
							var i = o;
							if (e < n.left) i |= d;
							else if (e > n.right) i |= h;
							if (t < n.top) i |= m;
							else if (t > n.bottom) i |= p;
							return i;
						}
						function l(e, t) {
							var n = e.x0;
							var i = e.y0;
							var r = e.x1;
							var o = e.y1;
							var a = _(n, i, t);
							var s = _(r, o, t);
							var l, u, c;
							while (true) {
								if (!(a | s) || a & s) break;
								l = a || s;
								if (l & m) {
									u = n + ((r - n) * (t.top - i)) / (o - i);
									c = t.top;
								} else if (l & p) {
									u = n + ((r - n) * (t.bottom - i)) / (o - i);
									c = t.bottom;
								} else if (l & h) {
									c = i + ((o - i) * (t.right - n)) / (r - n);
									u = t.right;
								} else if (l & d) {
									c = i + ((o - i) * (t.left - n)) / (r - n);
									u = t.left;
								}
								if (l === a) {
									n = u;
									i = c;
									a = _(n, i, t);
								} else {
									r = u;
									o = c;
									s = _(r, o, t);
								}
							}
							return { x0: n, x1: r, y0: i, y1: o };
						}
						function c(e, t) {
							var n = t.anchor;
							var i = e;
							var r, o;
							if (t.clamp) i = l(i, t.area);
							if (n === 'start') {
								r = i.x0;
								o = i.y0;
							} else if (n === 'end') {
								r = i.x1;
								o = i.y1;
							} else {
								r = (i.x0 + i.x1) / 2;
								o = (i.y0 + i.y1) / 2;
							}
							return a(r, o, e.vx, e.vy, t.align);
						}
						var n = {
								arc: function (e, t) {
									var n = (e.startAngle + e.endAngle) / 2;
									var i = Math.cos(n);
									var r = Math.sin(n);
									var o = e.innerRadius;
									var a = e.outerRadius;
									return c(
										{
											x0: e.x + i * o,
											y0: e.y + r * o,
											x1: e.x + i * a,
											y1: e.y + r * a,
											vx: i,
											vy: r,
										},
										t
									);
								},
								point: function (e, t) {
									var n = s(e, t.origin);
									var i = n.x * e.radius;
									var r = n.y * e.radius;
									return c(
										{
											x0: e.x - i,
											y0: e.y - r,
											x1: e.x + i,
											y1: e.y + r,
											vx: n.x,
											vy: n.y,
										},
										t
									);
								},
								rect: function (e, t) {
									var n = s(e, t.origin);
									var i = e.x;
									var r = e.y;
									var o = 0;
									var a = 0;
									if (e.horizontal) {
										i = Math.min(e.x, e.base);
										o = Math.abs(e.base - e.x);
									} else {
										r = Math.min(e.y, e.base);
										a = Math.abs(e.base - e.y);
									}
									return c(
										{ x0: i, y0: r + a, x1: i + o, y1: r, vx: n.x, vy: n.y },
										t
									);
								},
								fallback: function (e, t) {
									var n = s(e, t.origin);
									return c(
										{ x0: e.x, y0: e.y, x1: e.x, y1: e.y, vx: n.x, vy: n.y },
										t
									);
								},
							},
							v = u.helpers,
							y = f.rasterize;
						function g(e) {
							var t = e.borderWidth || 0;
							var n = e.padding;
							var i = e.size.height;
							var r = e.size.width;
							var o = -r / 2;
							var a = -i / 2;
							return {
								frame: {
									x: o - n.left - t,
									y: a - n.top - t,
									w: r + n.width + t * 2,
									h: i + n.height + t * 2,
								},
								text: { x: o, y: a, w: r, h: i },
							};
						}
						function b(e) {
							var t = e._model.horizontal;
							var n = e._scale || (t && e._xScale) || e._yScale;
							if (!n) return null;
							if (n.xCenter !== undefined && n.yCenter !== undefined)
								return { x: n.xCenter, y: n.yCenter };
							var i = n.getBasePixel();
							return t ? { x: i, y: null } : { x: null, y: i };
						}
						function k(e) {
							if (e instanceof u.elements.Arc) return n.arc;
							if (e instanceof u.elements.Point) return n.point;
							if (e instanceof u.elements.Rectangle) return n.rect;
							return n.fallback;
						}
						function w(e, t, n) {
							var i = n.backgroundColor;
							var r = n.borderColor;
							var o = n.borderWidth;
							if (!i && (!r || !o)) return;
							e.beginPath();
							v.canvas.roundedRect(
								e,
								y(t.x) + o / 2,
								y(t.y) + o / 2,
								y(t.w) - o,
								y(t.h) - o,
								n.borderRadius
							);
							e.closePath();
							if (i) {
								e.fillStyle = i;
								e.fill();
							}
							if (r && o) {
								e.strokeStyle = r;
								e.lineWidth = o;
								e.lineJoin = 'miter';
								e.stroke();
							}
						}
						function M(e, t, n) {
							var i = n.lineHeight;
							var r = e.w;
							var o = e.x;
							var a = e.y + i / 2;
							if (t === 'center') o += r / 2;
							else if (t === 'end' || t === 'right') o += r;
							return { h: i, w: r, x: o, y: a };
						}
						function L(e, t, n) {
							var i = e.shadowBlur;
							var r = n.stroked;
							var o = y(n.x);
							var a = y(n.y);
							var s = y(n.w);
							if (r) e.strokeText(t, o, a, s);
							if (n.filled) {
								if (i && r) e.shadowBlur = 0;
								e.fillText(t, o, a, s);
								if (i && r) e.shadowBlur = i;
							}
						}
						function x(e, t, n, i) {
							var r = i.textAlign;
							var o = i.color;
							var a = !!o;
							var s = i.font;
							var l = t.length;
							var u = i.textStrokeColor;
							var c = i.textStrokeWidth;
							var d = u && c;
							var f;
							if (!l || (!a && !d)) return;
							n = M(n, r, s);
							e.font = s.string;
							e.textAlign = r;
							e.textBaseline = 'middle';
							e.shadowBlur = i.textShadowBlur;
							e.shadowColor = i.textShadowColor;
							if (a) e.fillStyle = o;
							if (d) {
								e.lineJoin = 'round';
								e.lineWidth = c;
								e.strokeStyle = u;
							}
							for (f = 0, l = t.length; f < l; ++f)
								L(e, t[f], {
									stroked: d,
									filled: a,
									w: n.w,
									x: n.x,
									y: n.y + n.h * f,
								});
						}
						var D = function (e, t, n, i) {
							var r = this;
							r._config = e;
							r._index = i;
							r._model = null;
							r._rects = null;
							r._ctx = t;
							r._el = n;
						};
						v.extend(D.prototype, {
							_modelize: function (e, t, n, i) {
								var r = this;
								var o = r._index;
								var a = v.options.resolve;
								var s = f.parseFont(a([n.font, {}], i, o));
								var l = a([n.color, u.defaults.global.defaultFontColor], i, o);
								return {
									align: a([n.align, 'center'], i, o),
									anchor: a([n.anchor, 'center'], i, o),
									area: i.chart.chartArea,
									backgroundColor: a([n.backgroundColor, null], i, o),
									borderColor: a([n.borderColor, null], i, o),
									borderRadius: a([n.borderRadius, 0], i, o),
									borderWidth: a([n.borderWidth, 0], i, o),
									clamp: a([n.clamp, false], i, o),
									clip: a([n.clip, false], i, o),
									color: l,
									display: e,
									font: s,
									lines: t,
									offset: a([n.offset, 0], i, o),
									opacity: a([n.opacity, 1], i, o),
									origin: b(r._el),
									padding: v.options.toPadding(a([n.padding, 0], i, o)),
									positioner: k(r._el),
									rotation: a([n.rotation, 0], i, o) * (Math.PI / 180),
									size: f.textSize(r._ctx, t, s),
									textAlign: a([n.textAlign, 'start'], i, o),
									textShadowBlur: a([n.textShadowBlur, 0], i, o),
									textShadowColor: a([n.textShadowColor, l], i, o),
									textStrokeColor: a([n.textStrokeColor, l], i, o),
									textStrokeWidth: a([n.textStrokeWidth, 0], i, o),
								};
							},
							update: function (e) {
								var t = this;
								var n = null;
								var i = null;
								var r = t._index;
								var o = t._config;
								var a, s, l;
								var u = v.options.resolve([o.display, true], e, r);
								if (u) {
									a = e.dataset.data[r];
									s = v.valueOrDefault(v.callback(o.formatter, [a, e]), a);
									l = v.isNullOrUndef(s) ? [] : f.toTextLines(s);
									if (l.length) {
										n = t._modelize(u, l, o, e);
										i = g(n);
									}
								}
								t._model = n;
								t._rects = i;
							},
							geometry: function () {
								return this._rects ? this._rects.frame : {};
							},
							rotation: function () {
								return this._model ? this._model.rotation : 0;
							},
							visible: function () {
								return this._model && this._model.opacity;
							},
							model: function () {
								return this._model;
							},
							draw: function (e, t) {
								var n = this;
								var i = e.ctx;
								var r = n._model;
								var o = n._rects;
								var a;
								if (!this.visible()) return;
								i.save();
								if (r.clip) {
									a = r.area;
									i.beginPath();
									i.rect(a.left, a.top, a.right - a.left, a.bottom - a.top);
									i.clip();
								}
								i.globalAlpha = f.bound(0, r.opacity, 1);
								i.translate(y(t.x), y(t.y));
								i.rotate(r.rotation);
								w(i, o.frame, r);
								x(i, r.lines, o.text, r);
								i.restore();
							},
						});
						var e = u.helpers,
							S = Number.MIN_SAFE_INTEGER || -9007199254740991,
							T = Number.MAX_SAFE_INTEGER || 9007199254740991;
						function O(e, t, n) {
							var i = Math.cos(n);
							var r = Math.sin(n);
							var o = t.x;
							var a = t.y;
							return {
								x: o + i * (e.x - o) - r * (e.y - a),
								y: a + r * (e.x - o) + i * (e.y - a),
							};
						}
						function Y(e, t) {
							var n = T;
							var i = S;
							var r = t.origin;
							var o, a, s, l, u;
							for (o = 0; o < e.length; ++o) {
								a = e[o];
								s = a.x - r.x;
								l = a.y - r.y;
								u = t.vx * s + t.vy * l;
								n = Math.min(n, u);
								i = Math.max(i, u);
							}
							return { min: n, max: i };
						}
						function C(e, t) {
							var n = t.x - e.x;
							var i = t.y - e.y;
							var r = Math.sqrt(n * n + i * i);
							return {
								vx: (t.x - e.x) / r,
								vy: (t.y - e.y) / r,
								origin: e,
								ln: r,
							};
						}
						var j = function () {
							this._rotation = 0;
							this._rect = { x: 0, y: 0, w: 0, h: 0 };
						};
						function E(e, t, n) {
							var i = t.positioner(e, t);
							var r = i.vx;
							var o = i.vy;
							if (!r && !o) return { x: i.x, y: i.y };
							var a = n.w;
							var s = n.h;
							var l = t.rotation;
							var u =
								Math.abs((a / 2) * Math.cos(l)) +
								Math.abs((s / 2) * Math.sin(l));
							var c =
								Math.abs((a / 2) * Math.sin(l)) +
								Math.abs((s / 2) * Math.cos(l));
							var d = 1 / Math.max(Math.abs(r), Math.abs(o));
							u *= r * d;
							c *= o * d;
							u += t.offset * r;
							c += t.offset * o;
							return { x: i.x + u, y: i.y + c };
						}
						function P(e, t) {
							var n, i, r, o;
							for (n = e.length - 1; n >= 0; --n) {
								r = e[n].$layout;
								for (i = n - 1; i >= 0 && r._visible; --i) {
									o = e[i].$layout;
									if (o._visible && r._box.intersects(o._box)) t(r, o);
								}
							}
							return e;
						}
						function A(e) {
							var t, n, i, r, o, a;
							for (t = 0, n = e.length; t < n; ++t) {
								i = e[t];
								r = i.$layout;
								if (r._visible) {
									o = i.geometry();
									a = E(i._el._model, i.model(), o);
									r._box.update(a, o, i.rotation());
								}
							}
							return P(e, function (e, t) {
								var n = e._hidable;
								var i = t._hidable;
								if ((n && i) || i) t._visible = false;
								else if (n) e._visible = false;
							});
						}
						e.extend(j.prototype, {
							center: function () {
								var e = this._rect;
								return { x: e.x + e.w / 2, y: e.y + e.h / 2 };
							},
							update: function (e, t, n) {
								this._rotation = n;
								this._rect = { x: t.x + e.x, y: t.y + e.y, w: t.w, h: t.h };
							},
							contains: function (e) {
								var t = this;
								var n = 1;
								var i = t._rect;
								e = O(e, t.center(), -t._rotation);
								return !(
									e.x < i.x - n ||
									e.y < i.y - n ||
									e.x > i.x + i.w + n * 2 ||
									e.y > i.y + i.h + n * 2
								);
							},
							intersects: function (e) {
								var t = this._points();
								var n = e._points();
								var i = [C(t[0], t[1]), C(t[0], t[3])];
								var r, o, a;
								if (this._rotation !== e._rotation)
									i.push(C(n[0], n[1]), C(n[0], n[3]));
								for (r = 0; r < i.length; ++r) {
									o = Y(t, i[r]);
									a = Y(n, i[r]);
									if (o.max < a.min || a.max < o.min) return false;
								}
								return true;
							},
							_points: function () {
								var e = this;
								var t = e._rect;
								var n = e._rotation;
								var i = e.center();
								return [
									O({ x: t.x, y: t.y }, i, n),
									O({ x: t.x + t.w, y: t.y }, i, n),
									O({ x: t.x + t.w, y: t.y + t.h }, i, n),
									O({ x: t.x, y: t.y + t.h }, i, n),
								];
							},
						});
						var H = {
								prepare: function (e) {
									var t = [];
									var n, i, r, o, a;
									for (n = 0, r = e.length; n < r; ++n)
										for (i = 0, o = e[n].length; i < o; ++i) {
											a = e[n][i];
											t.push(a);
											a.$layout = {
												_box: new j(),
												_hidable: false,
												_visible: true,
												_set: n,
												_idx: i,
											};
										}
									t.sort(function (e, t) {
										var n = e.$layout;
										var i = t.$layout;
										return n._idx === i._idx
											? i._set - n._set
											: i._idx - n._idx;
									});
									this.update(t);
									return t;
								},
								update: function (e) {
									var t = false;
									var n, i, r, o, a;
									for (n = 0, i = e.length; n < i; ++n) {
										r = e[n];
										o = r.model();
										a = r.$layout;
										a._hidable = o && o.display === 'auto';
										a._visible = r.visible();
										t |= a._hidable;
									}
									if (t) A(e);
								},
								lookup: function (e, t) {
									var n, i;
									for (n = e.length - 1; n >= 0; --n) {
										i = e[n].$layout;
										if (i && i._visible && i._box.contains(t)) return e[n];
									}
									return null;
								},
								draw: function (e, t) {
									var n, i, r, o, a, s;
									for (n = 0, i = t.length; n < i; ++n) {
										r = t[n];
										o = r.$layout;
										if (o._visible) {
											a = r.geometry();
											s = E(r._el._view, r.model(), a);
											o._box.update(s, a, r.rotation());
											r.draw(e, s);
										}
									}
								},
							},
							I = u.helpers,
							i,
							R = {
								align: 'center',
								anchor: 'center',
								backgroundColor: null,
								borderColor: null,
								borderRadius: 0,
								borderWidth: 0,
								clamp: false,
								clip: false,
								color: undefined,
								display: true,
								font: {
									family: undefined,
									lineHeight: 1.2,
									size: undefined,
									style: undefined,
									weight: null,
								},
								formatter: function (e) {
									if (I.isNullOrUndef(e)) return null;
									var t = e;
									var n, i, r;
									if (I.isObject(e))
										if (!I.isNullOrUndef(e.label)) t = e.label;
										else if (!I.isNullOrUndef(e.r)) t = e.r;
										else {
											t = '';
											n = Object.keys(e);
											for (r = 0, i = n.length; r < i; ++r)
												t += (r !== 0 ? ', ' : '') + n[r] + ': ' + e[n[r]];
										}
									return '' + t;
								},
								labels: undefined,
								listeners: {},
								offset: 4,
								opacity: 1,
								padding: { top: 4, right: 4, bottom: 4, left: 4 },
								rotation: 0,
								textAlign: 'start',
								textStrokeColor: undefined,
								textStrokeWidth: 0,
								textShadowBlur: 0,
								textShadowColor: undefined,
							},
							N = u.helpers,
							W = '$datalabels',
							F = '$default';
						function B(e, t) {
							var n = e.datalabels;
							var i = {};
							var r = [];
							var o, a;
							if (n === false) return null;
							if (n === true) n = {};
							t = N.merge({}, [t, n]);
							o = t.labels || {};
							a = Object.keys(o);
							delete t.labels;
							if (a.length)
								a.forEach(function (e) {
									if (o[e]) r.push(N.merge({}, [t, o[e], { _key: e }]));
								});
							else r.push(t);
							i = r.reduce(function (n, i) {
								N.each(i.listeners || {}, function (e, t) {
									n[t] = n[t] || {};
									n[t][i._key || F] = e;
								});
								delete i.listeners;
								return n;
							}, {});
							return { labels: r, listeners: i };
						}
						function z(e, t, n) {
							if (!t) return;
							var i = n.$context;
							var r = n.$groups;
							var o;
							if (!t[r._set]) return;
							o = t[r._set][r._key];
							if (!o) return;
							if (N.callback(o, [i]) === true) {
								e[W]._dirty = true;
								n.update(i);
							}
						}
						function V(e, t, n, i) {
							var r, o;
							if (!n && !i) return;
							if (!n) r = true;
							else if (!i) o = true;
							else if (n !== i) o = r = true;
							if (o) z(e, t.leave, n);
							if (r) z(e, t.enter, i);
						}
						function U(e, t) {
							var n = e[W];
							var i = n._listeners;
							var r, o;
							if (!i.enter && !i.leave) return;
							if (t.type === 'mousemove') o = H.lookup(n._labels, t);
							else if (t.type !== 'mouseout') return;
							r = n._hovered;
							n._hovered = o;
							V(e, i, r, o);
						}
						function X(e, t) {
							var n = e[W];
							var i = n._listeners.click;
							var r = i && H.lookup(n._labels, t);
							if (r) z(e, i, r);
						}
						function J(e) {
							if (e.animating) return;
							var t = u.animationService.animations;
							for (var n = 0, i = t.length; n < i; ++n)
								if (t[n].chart === e) return;
							e.render({ duration: 1, lazy: true });
						}
						u.defaults.global.plugins.datalabels = R;
						var q = {
							id: 'datalabels',
							beforeInit: function (e) {
								e[W] = { _actives: [] };
							},
							beforeUpdate: function (e) {
								var t = e[W];
								t._listened = false;
								t._listeners = {};
								t._datasets = [];
								t._labels = [];
							},
							afterDatasetUpdate: function (e, i, t) {
								var n = i.index;
								var r = e[W];
								var o = (r._datasets[n] = []);
								var a = e.isDatasetVisible(n);
								var s = e.data.datasets[n];
								var l = B(s, t);
								var u = i.meta.data || [];
								var c = e.ctx;
								var d, f, h, p, m, _, v, y;
								c.save();
								for (d = 0, h = u.length; d < h; ++d) {
									v = u[d];
									v[W] = [];
									if (a && v && !v.hidden && !v._model.skip)
										for (f = 0, p = l.labels.length; f < p; ++f) {
											m = l.labels[f];
											_ = m._key;
											y = new D(m, c, v, d);
											y.$groups = { _set: n, _key: _ || F };
											y.$context = {
												active: false,
												chart: e,
												dataIndex: d,
												dataset: s,
												datasetIndex: n,
											};
											y.update(y.$context);
											v[W].push(y);
											o.push(y);
										}
								}
								c.restore();
								N.merge(r._listeners, l.listeners, {
									merger: function (e, t, n) {
										t[e] = t[e] || {};
										t[e][i.index] = n[e];
										r._listened = true;
									},
								});
							},
							afterUpdate: function (e, t) {
								e[W]._labels = H.prepare(e[W]._datasets, t);
							},
							afterDatasetsDraw: function (e) {
								H.draw(e, e[W]._labels);
							},
							beforeEvent: function (e, t) {
								if (e[W]._listened)
									switch (t.type) {
										case 'mousemove':
										case 'mouseout':
											U(e, t);
											break;
										case 'click':
											X(e, t);
											break;
										default:
									}
							},
							afterEvent: function (e) {
								var t = e[W];
								var n = t._actives;
								var i = (t._actives = e.lastActive || []);
								var r = f.arrayDiff(n, i);
								var o, a, s, l, u, c, d;
								for (o = 0, a = r.length; o < a; ++o) {
									u = r[o];
									if (u[1]) {
										d = u[0][W] || [];
										for (s = 0, l = d.length; s < l; ++s) {
											c = d[s];
											c.$context.active = u[1] === 1;
											c.update(c.$context);
										}
									}
								}
								if (t._dirty || r.length) {
									H.update(t._labels);
									J(e);
								}
								delete t._dirty;
							},
						};
						return u.plugins.register(q), q;
					})(n(86));
				},
				function (e, t, n) {
					var i = n(22),
						r = n(10),
						o = n(87);
					e.exports =
						!i &&
						!r(function () {
							return (
								7 !=
								Object.defineProperty(o('div'), 'a', {
									get: function () {
										return 7;
									},
								}).a
							);
						});
				},
				function (e, t, n) {
					var s = n(24),
						l = n(121),
						u = n(45),
						c = n(29);
					e.exports = function (e, t) {
						for (var n = l(t), i = c.f, r = u.f, o = 0; o < n.length; o++) {
							var a = n[o];
							s(e, a) || i(e, a, r(t, a));
						}
					};
				},
				function (e, t, n) {
					var i = n(46),
						r = n(61),
						o = n(95),
						a = n(18);
					e.exports =
						i('Reflect', 'ownKeys') ||
						function (e) {
							var t = r.f(a(e)),
								n = o.f;
							return n ? t.concat(n(e)) : t;
						};
				},
				function (e, t, n) {
					n = n(14);
					e.exports = n;
				},
				function (e, t, n) {
					var a = n(24),
						s = n(34),
						l = n(92).indexOf,
						u = n(60);
					e.exports = function (e, t) {
						var n,
							i = s(e),
							r = 0,
							o = [];
						for (n in i) !a(u, n) && a(i, n) && o.push(n);
						for (; t.length > r; )
							a(i, (n = t[r++])) && (~l(o, n) || o.push(n));
						return o;
					};
				},
				function (e, t, n) {
					n = n(97);
					e.exports = n && !Symbol.sham && 'symbol' == typeof Symbol.iterator;
				},
				function (e, t, n) {
					var i = n(22),
						a = n(29),
						s = n(18),
						l = n(64);
					e.exports = i
						? Object.defineProperties
						: function (e, t) {
								s(e);
								for (var n, i = l(t), r = i.length, o = 0; o < r; )
									a.f(e, (n = i[o++]), t[n]);
								return e;
						  };
				},
				function (e, t, n) {
					n = n(46);
					e.exports = n('document', 'documentElement');
				},
				function (e, t, n) {
					'use strict';
					var i = n(49).forEach,
						r = n(65),
						n = n(36),
						r = r('forEach'),
						n = n('forEach');
					e.exports =
						r && n
							? [].forEach
							: function (e, t) {
									return i(this, e, 1 < arguments.length ? t : void 0);
							  };
				},
				function (e, t, n) {
					n = n(10);
					e.exports = !n(function () {
						function e() {}
						return (
							(e.prototype.constructor = null),
							Object.getPrototypeOf(new e()) !== e.prototype
						);
					});
				},
				function (e, t) {
					e.exports = {
						CSSRuleList: 0,
						CSSStyleDeclaration: 0,
						CSSValueList: 0,
						ClientRectList: 0,
						DOMRectList: 0,
						DOMStringList: 0,
						DOMTokenList: 1,
						DataTransferItemList: 0,
						FileList: 0,
						HTMLAllCollection: 0,
						HTMLCollection: 0,
						HTMLFormElement: 0,
						HTMLSelectElement: 0,
						MediaList: 0,
						MimeTypeArray: 0,
						NamedNodeMap: 0,
						NodeList: 1,
						PaintRequestList: 0,
						Plugin: 0,
						PluginArray: 0,
						SVGLengthList: 0,
						SVGNumberList: 0,
						SVGPathSegList: 0,
						SVGPointList: 0,
						SVGStringList: 0,
						SVGTransformList: 0,
						SourceBufferList: 0,
						StyleSheetList: 0,
						TextTrackCueList: 0,
						TextTrackList: 0,
						TouchList: 0,
					};
				},
				function (e, t, n) {
					n = n(46);
					e.exports = n('navigator', 'userAgent') || '';
				},
				function (e, t, n) {
					'use strict';
					var p = n(57),
						m = n(35),
						_ = n(296),
						v = n(133),
						y = n(32),
						g = n(66),
						b = n(78);
					e.exports = function (e, t, n) {
						var i,
							r,
							o,
							a,
							s,
							l,
							u = m(e),
							c = 'function' == typeof this ? this : Array,
							e = arguments.length,
							d = 1 < e ? t : void 0,
							f = void 0 !== d,
							t = b(u),
							h = 0;
						if (
							(f && (d = p(d, 2 < e ? n : void 0, 2)),
							null == t || (c == Array && v(t)))
						)
							for (r = new c((i = y(u.length))); h < i; h++)
								(l = f ? d(u[h], h) : u[h]), g(r, h, l);
						else
							for (
								s = (a = t.call(u)).next, r = new c();
								!(o = s.call(a)).done;
								h++
							)
								(l = f ? _(a, d, [o.value, h], !0) : o.value), g(r, h, l);
						return (r.length = h), r;
					};
				},
				function (e, t, n) {
					var i = n(18);
					e.exports = function (e) {
						var t = e.return;
						if (void 0 !== t) return i(t.call(e)).value;
					};
				},
				function (e, t, n) {
					var i = n(15),
						r = n(68),
						o = i('iterator'),
						a = Array.prototype;
					e.exports = function (e) {
						return void 0 !== e && (r.Array === e || a[o] === e);
					};
				},
				function (e, t, n) {
					'use strict';
					n = n(10);
					function i(e, t) {
						return RegExp(e, t);
					}
					(t.UNSUPPORTED_Y = n(function () {
						var e = i('a', 'y');
						return (e.lastIndex = 2), null != e.exec('abcd');
					})),
						(t.BROKEN_CARET = n(function () {
							var e = i('^r', 'gy');
							return (e.lastIndex = 2), null != e.exec('str');
						}));
				},
				function (e, t, n) {
					'use strict';
					function i() {
						return this;
					}
					var r = n(136).IteratorPrototype,
						o = n(51),
						a = n(56),
						s = n(52),
						l = n(68);
					e.exports = function (e, t, n) {
						t += ' Iterator';
						return (
							(e.prototype = o(r, { next: a(1, n) })),
							s(e, t, !1, !0),
							(l[t] = i),
							e
						);
					};
				},
				function (e, t, n) {
					'use strict';
					var i,
						r = n(98),
						o = n(39),
						a = n(24),
						s = n(15),
						l = n(48),
						u = s('iterator'),
						n = !1;
					[].keys &&
						('next' in (s = [].keys())
							? (s = r(r(s))) !== Object.prototype && (i = s)
							: (n = !0)),
						null == i && (i = {}),
						l ||
							a(i, u) ||
							o(i, u, function () {
								return this;
							}),
						(e.exports = { IteratorPrototype: i, BUGGY_SAFARI_ITERATORS: n });
				},
				function (e, t, n) {
					var i = n(18),
						r = n(50),
						o = n(15)('species');
					e.exports = function (e, t) {
						var n,
							e = i(e).constructor;
						return void 0 === e || null == (n = i(e)[o]) ? t : r(n);
					};
				},
				function (e, t, n) {
					var i = n(34),
						r = n(61).f,
						o = {}.toString,
						a =
							'object' == typeof window && window && Object.getOwnPropertyNames
								? Object.getOwnPropertyNames(window)
								: [];
					e.exports.f = function (e) {
						return a && '[object Window]' == o.call(e)
							? (function (e) {
									try {
										return r(e);
									} catch (e) {
										return a.slice();
									}
							  })(e)
							: r(i(e));
					};
				},
				function (e, t, n) {
					n = n(15);
					t.f = n;
				},
				function (e, t, n) {
					var i = n(122),
						r = n(24),
						o = n(139),
						a = n(29).f;
					e.exports = function (e) {
						var t = i.Symbol || (i.Symbol = {});
						r(t, e) || a(t, e, { value: o.f(e) });
					};
				},
				function (e, t, n) {
					'use strict';
					var d = n(22),
						i = n(10),
						f = n(64),
						h = n(95),
						p = n(72),
						m = n(35),
						_ = n(58),
						r = Object.assign,
						o = Object.defineProperty;
					e.exports =
						!r ||
						i(function () {
							if (
								d &&
								1 !==
									r(
										{ b: 1 },
										r(
											o({}, 'a', {
												enumerable: !0,
												get: function () {
													o(this, 'b', { value: 3, enumerable: !1 });
												},
											}),
											{ b: 2 }
										)
									).b
							)
								return !0;
							var e = {},
								t = {},
								n = Symbol(),
								i = 'abcdefghijklmnopqrst';
							return (
								(e[n] = 7),
								i.split('').forEach(function (e) {
									t[e] = e;
								}),
								7 != r({}, e)[n] || f(r({}, t)).join('') != i
							);
						})
							? function (e) {
									for (
										var t = m(e), n = arguments.length, i = 1, r = h.f, o = p.f;
										i < n;

									)
										for (
											var a,
												s = _(arguments[i++]),
												l = r ? f(s).concat(r(s)) : f(s),
												u = l.length,
												c = 0;
											c < u;

										)
											(a = l[c++]), (d && !o.call(s, a)) || (t[a] = s[a]);
									return t;
							  }
							: r;
				},
				function (e, t, n) {
					var i = n(6),
						r = n(10),
						o = n(34),
						a = n(45).f,
						n = n(22),
						r = r(function () {
							a(1);
						});
					i(
						{ target: 'Object', stat: !0, forced: !n || r, sham: !n },
						{
							getOwnPropertyDescriptor: function (e, t) {
								return a(o(e), t);
							},
						}
					);
				},
				function (e, t, n) {
					var i = n(6),
						r = n(22),
						l = n(121),
						u = n(34),
						c = n(45),
						d = n(66);
					i(
						{ target: 'Object', stat: !0, sham: !r },
						{
							getOwnPropertyDescriptors: function (e) {
								for (
									var t, n, i = u(e), r = c.f, o = l(i), a = {}, s = 0;
									o.length > s;

								)
									void 0 !== (n = r(i, (t = o[s++]))) && d(a, t, n);
								return a;
							},
						}
					);
				},
				function (e, t, n) {
					var i = n(106);
					e.exports = function (e) {
						if (i(e))
							throw TypeError("The method doesn't accept regular expressions");
						return e;
					};
				},
				function (e, t, n) {
					var i = n(15)('match');
					e.exports = function (t) {
						var n = /./;
						try {
							'/./'[t](n);
						} catch (e) {
							try {
								return (n[i] = !1), '/./'[t](n);
							} catch (e) {}
						}
						return !1;
					};
				},
				function (e, t, n) {
					'use strict';
					var _ = n(6),
						v = n(14),
						y = n(63),
						g = n(30),
						b = n(147),
						k = n(113),
						w = n(70),
						M = n(17),
						L = n(10),
						x = n(104),
						D = n(52),
						S = n(105);
					e.exports = function (n, e, t) {
						function i(e) {
							var n = h[e];
							g(
								h,
								e,
								'add' == e
									? function (e) {
											return n.call(this, 0 === e ? 0 : e), this;
									  }
									: 'delete' == e
									? function (e) {
											return !(c && !M(e)) && n.call(this, 0 === e ? 0 : e);
									  }
									: 'get' == e
									? function (e) {
											return c && !M(e)
												? void 0
												: n.call(this, 0 === e ? 0 : e);
									  }
									: 'has' == e
									? function (e) {
											return !(c && !M(e)) && n.call(this, 0 === e ? 0 : e);
									  }
									: function (e, t) {
											return n.call(this, 0 === e ? 0 : e, t), this;
									  }
							);
						}
						var r,
							o,
							a,
							s,
							l,
							u = -1 !== n.indexOf('Map'),
							c = -1 !== n.indexOf('Weak'),
							d = u ? 'set' : 'add',
							f = v[n],
							h = f && f.prototype,
							p = f,
							m = {};
						return (
							y(
								n,
								'function' != typeof f ||
									!(
										c ||
										(h.forEach &&
											!L(function () {
												new f().entries().next();
											}))
									)
							)
								? ((p = t.getConstructor(e, n, u, d)), (b.REQUIRED = !0))
								: y(n, !0) &&
								  ((o = (r = new p())[d](c ? {} : -0, 1) != r),
								  (a = L(function () {
										r.has(1);
								  })),
								  (s = x(function (e) {
										new f(e);
								  })),
								  (l =
										!c &&
										L(function () {
											for (var e = new f(), t = 5; t--; ) e[d](t, t);
											return !e.has(-0);
										})),
								  s ||
										(((p = e(function (e, t) {
											w(e, p, n);
											e = S(new f(), e, p);
											return (
												null != t && k(t, e[d], { that: e, AS_ENTRIES: u }), e
											);
										})).prototype = h).constructor = p),
								  (a || l) && (i('delete'), i('has'), u && i('get')),
								  (l || o) && i(d),
								  c && h.clear && delete h.clear),
							(m[n] = p),
							_({ global: !0, forced: p != f }, m),
							D(p, n),
							c || t.setStrong(p, n, u),
							p
						);
					};
				},
				function (e, t, n) {
					function i(e) {
						s(e, c, { value: { objectID: 'O' + ++d, weakData: {} } });
					}
					var r = n(60),
						o = n(17),
						a = n(24),
						s = n(29).f,
						l = n(74),
						u = n(301),
						c = l('meta'),
						d = 0,
						f =
							Object.isExtensible ||
							function () {
								return !0;
							},
						h = (e.exports = {
							REQUIRED: !1,
							fastKey: function (e, t) {
								if (!o(e))
									return 'symbol' == typeof e
										? e
										: ('string' == typeof e ? 'S' : 'P') + e;
								if (!a(e, c)) {
									if (!f(e)) return 'F';
									if (!t) return 'E';
									i(e);
								}
								return e[c].objectID;
							},
							getWeakData: function (e, t) {
								if (!a(e, c)) {
									if (!f(e)) return !0;
									if (!t) return !1;
									i(e);
								}
								return e[c].weakData;
							},
							onFreeze: function (e) {
								return u && h.REQUIRED && f(e) && !a(e, c) && i(e), e;
							},
						});
					r[c] = !0;
				},
				function (e, t, n) {
					'use strict';
					var u = n(29).f,
						c = n(51),
						d = n(114),
						f = n(57),
						h = n(70),
						p = n(113),
						a = n(109),
						s = n(107),
						m = n(22),
						_ = n(147).fastKey,
						n = n(42),
						v = n.set,
						y = n.getterFor;
					e.exports = {
						getConstructor: function (e, n, i, r) {
							function o(e, t, n) {
								var i,
									r = s(e),
									o = l(e, t);
								return (
									o
										? (o.value = n)
										: ((r.last = o =
												{
													index: (i = _(t, !0)),
													key: t,
													value: n,
													previous: (n = r.last),
													next: void 0,
													removed: !1,
												}),
										  r.first || (r.first = o),
										  n && (n.next = o),
										  m ? r.size++ : e.size++,
										  'F' !== i && (r.index[i] = o)),
									e
								);
							}
							var a = e(function (e, t) {
									h(e, a, n),
										v(e, {
											type: n,
											index: c(null),
											first: void 0,
											last: void 0,
											size: 0,
										}),
										m || (e.size = 0),
										null != t && p(t, e[r], { that: e, AS_ENTRIES: i });
								}),
								s = y(n),
								l = function (e, t) {
									var n,
										i = s(e),
										e = _(t);
									if ('F' !== e) return i.index[e];
									for (n = i.first; n; n = n.next) if (n.key == t) return n;
								};
							return (
								d(a.prototype, {
									clear: function () {
										for (var e = s(this), t = e.index, n = e.first; n; )
											(n.removed = !0),
												n.previous && (n.previous = n.previous.next = void 0),
												delete t[n.index],
												(n = n.next);
										(e.first = e.last = void 0),
											m ? (e.size = 0) : (this.size = 0);
									},
									delete: function (e) {
										var t,
											n = s(this),
											i = l(this, e);
										return (
											i &&
												((t = i.next),
												(e = i.previous),
												delete n.index[i.index],
												(i.removed = !0),
												e && (e.next = t),
												t && (t.previous = e),
												n.first == i && (n.first = t),
												n.last == i && (n.last = e),
												m ? n.size-- : this.size--),
											!!i
										);
									},
									forEach: function (e, t) {
										for (
											var n,
												i = s(this),
												r = f(e, 1 < arguments.length ? t : void 0, 3);
											(n = n ? n.next : i.first);

										)
											for (r(n.value, n.key, this); n && n.removed; )
												n = n.previous;
									},
									has: function (e) {
										return !!l(this, e);
									},
								}),
								d(
									a.prototype,
									i
										? {
												get: function (e) {
													e = l(this, e);
													return e && e.value;
												},
												set: function (e, t) {
													return o(this, 0 === e ? 0 : e, t);
												},
										  }
										: {
												add: function (e) {
													return o(this, (e = 0 === e ? 0 : e), e);
												},
										  }
								),
								m &&
									u(a.prototype, 'size', {
										get: function () {
											return s(this).size;
										},
									}),
								a
							);
						},
						setStrong: function (e, t, n) {
							var i = t + ' Iterator',
								r = y(t),
								o = y(i);
							a(
								e,
								t,
								function (e, t) {
									v(this, {
										type: i,
										target: e,
										state: r(e),
										kind: t,
										last: void 0,
									});
								},
								function () {
									for (
										var e = o(this), t = e.kind, n = e.last;
										n && n.removed;

									)
										n = n.previous;
									return e.target && (e.last = n = n ? n.next : e.state.first)
										? 'keys' == t
											? { value: n.key, done: !1 }
											: 'values' == t
											? { value: n.value, done: !1 }
											: { value: [n.key, n.value], done: !1 }
										: { value: (e.target = void 0), done: !0 };
								},
								n ? 'entries' : 'values',
								!n,
								!0
							),
								s(t);
						},
					};
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('af', {
							months:
								'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
							weekdays:
								'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(
									'_'
								),
							weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
							weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
							meridiemParse: /vm|nm/i,
							isPM: function (e) {
								return /^nm$/i.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 12 ? (n ? 'vm' : 'VM') : n ? 'nm' : 'NM';
							},
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Vandag om] LT',
								nextDay: '[Môre om] LT',
								nextWeek: 'dddd [om] LT',
								lastDay: '[Gister om] LT',
								lastWeek: '[Laas] dddd [om] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'oor %s',
								past: '%s gelede',
								s: "'n paar sekondes",
								ss: '%d sekondes',
								m: "'n minuut",
								mm: '%d minute',
								h: "'n uur",
								hh: '%d ure',
								d: "'n dag",
								dd: '%d dae',
								M: "'n maand",
								MM: '%d maande',
								y: "'n jaar",
								yy: '%d jaar',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
							ordinal: function (e) {
								return e + (1 === e || 8 === e || 20 <= e ? 'ste' : 'de');
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						function s(e) {
							return 0 === e
								? 0
								: 1 === e
								? 1
								: 2 === e
								? 2
								: 3 <= e % 100 && e % 100 <= 10
								? 3
								: 11 <= e % 100
								? 4
								: 5;
						}
						function t(a) {
							return function (e, t, n, i) {
								var r = s(e),
									o = l[a][s(e)];
								return 2 === r && (o = o[t ? 0 : 1]), o.replace(/%d/i, e);
							};
						}
						var n = {
								1: '١',
								2: '٢',
								3: '٣',
								4: '٤',
								5: '٥',
								6: '٦',
								7: '٧',
								8: '٨',
								9: '٩',
								0: '٠',
							},
							i = {
								'١': '1',
								'٢': '2',
								'٣': '3',
								'٤': '4',
								'٥': '5',
								'٦': '6',
								'٧': '7',
								'٨': '8',
								'٩': '9',
								'٠': '0',
							},
							l = {
								s: [
									'أقل من ثانية',
									'ثانية واحدة',
									['ثانيتان', 'ثانيتين'],
									'%d ثوان',
									'%d ثانية',
									'%d ثانية',
								],
								m: [
									'أقل من دقيقة',
									'دقيقة واحدة',
									['دقيقتان', 'دقيقتين'],
									'%d دقائق',
									'%d دقيقة',
									'%d دقيقة',
								],
								h: [
									'أقل من ساعة',
									'ساعة واحدة',
									['ساعتان', 'ساعتين'],
									'%d ساعات',
									'%d ساعة',
									'%d ساعة',
								],
								d: [
									'أقل من يوم',
									'يوم واحد',
									['يومان', 'يومين'],
									'%d أيام',
									'%d يومًا',
									'%d يوم',
								],
								M: [
									'أقل من شهر',
									'شهر واحد',
									['شهران', 'شهرين'],
									'%d أشهر',
									'%d شهرا',
									'%d شهر',
								],
								y: [
									'أقل من عام',
									'عام واحد',
									['عامان', 'عامين'],
									'%d أعوام',
									'%d عامًا',
									'%d عام',
								],
							},
							r = [
								'يناير',
								'فبراير',
								'مارس',
								'أبريل',
								'مايو',
								'يونيو',
								'يوليو',
								'أغسطس',
								'سبتمبر',
								'أكتوبر',
								'نوفمبر',
								'ديسمبر',
							];
						e.defineLocale('ar', {
							months: r,
							monthsShort: r,
							weekdays:
								'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
									'_'
								),
							weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
							weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'D/‏M/‏YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							meridiemParse: /ص|م/,
							isPM: function (e) {
								return 'م' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'ص' : 'م';
							},
							calendar: {
								sameDay: '[اليوم عند الساعة] LT',
								nextDay: '[غدًا عند الساعة] LT',
								nextWeek: 'dddd [عند الساعة] LT',
								lastDay: '[أمس عند الساعة] LT',
								lastWeek: 'dddd [عند الساعة] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'بعد %s',
								past: 'منذ %s',
								s: t('s'),
								ss: t('s'),
								m: t('m'),
								mm: t('m'),
								h: t('h'),
								hh: t('h'),
								d: t('d'),
								dd: t('d'),
								M: t('M'),
								MM: t('M'),
								y: t('y'),
								yy: t('y'),
							},
							preparse: function (e) {
								return e
									.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
										return i[e];
									})
									.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e
									.replace(/\d/g, function (e) {
										return n[e];
									})
									.replace(/,/g, '،');
							},
							week: { dow: 6, doy: 12 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						function s(e) {
							return 0 === e
								? 0
								: 1 === e
								? 1
								: 2 === e
								? 2
								: 3 <= e % 100 && e % 100 <= 10
								? 3
								: 11 <= e % 100
								? 4
								: 5;
						}
						function t(a) {
							return function (e, t, n, i) {
								var r = s(e),
									o = l[a][s(e)];
								return 2 === r && (o = o[t ? 0 : 1]), o.replace(/%d/i, e);
							};
						}
						var l = {
								s: [
									'أقل من ثانية',
									'ثانية واحدة',
									['ثانيتان', 'ثانيتين'],
									'%d ثوان',
									'%d ثانية',
									'%d ثانية',
								],
								m: [
									'أقل من دقيقة',
									'دقيقة واحدة',
									['دقيقتان', 'دقيقتين'],
									'%d دقائق',
									'%d دقيقة',
									'%d دقيقة',
								],
								h: [
									'أقل من ساعة',
									'ساعة واحدة',
									['ساعتان', 'ساعتين'],
									'%d ساعات',
									'%d ساعة',
									'%d ساعة',
								],
								d: [
									'أقل من يوم',
									'يوم واحد',
									['يومان', 'يومين'],
									'%d أيام',
									'%d يومًا',
									'%d يوم',
								],
								M: [
									'أقل من شهر',
									'شهر واحد',
									['شهران', 'شهرين'],
									'%d أشهر',
									'%d شهرا',
									'%d شهر',
								],
								y: [
									'أقل من عام',
									'عام واحد',
									['عامان', 'عامين'],
									'%d أعوام',
									'%d عامًا',
									'%d عام',
								],
							},
							n = [
								'جانفي',
								'فيفري',
								'مارس',
								'أفريل',
								'ماي',
								'جوان',
								'جويلية',
								'أوت',
								'سبتمبر',
								'أكتوبر',
								'نوفمبر',
								'ديسمبر',
							];
						e.defineLocale('ar-dz', {
							months: n,
							monthsShort: n,
							weekdays:
								'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
									'_'
								),
							weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
							weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'D/‏M/‏YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							meridiemParse: /ص|م/,
							isPM: function (e) {
								return 'م' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'ص' : 'م';
							},
							calendar: {
								sameDay: '[اليوم عند الساعة] LT',
								nextDay: '[غدًا عند الساعة] LT',
								nextWeek: 'dddd [عند الساعة] LT',
								lastDay: '[أمس عند الساعة] LT',
								lastWeek: 'dddd [عند الساعة] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'بعد %s',
								past: 'منذ %s',
								s: t('s'),
								ss: t('s'),
								m: t('m'),
								mm: t('m'),
								h: t('h'),
								hh: t('h'),
								d: t('d'),
								dd: t('d'),
								M: t('M'),
								MM: t('M'),
								y: t('y'),
								yy: t('y'),
							},
							postformat: function (e) {
								return e.replace(/,/g, '،');
							},
							week: { dow: 0, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ar-kw', {
							months:
								'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
									'_'
								),
							monthsShort:
								'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
									'_'
								),
							weekdays:
								'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
									'_'
								),
							weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
							weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[اليوم على الساعة] LT',
								nextDay: '[غدا على الساعة] LT',
								nextWeek: 'dddd [على الساعة] LT',
								lastDay: '[أمس على الساعة] LT',
								lastWeek: 'dddd [على الساعة] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'في %s',
								past: 'منذ %s',
								s: 'ثوان',
								ss: '%d ثانية',
								m: 'دقيقة',
								mm: '%d دقائق',
								h: 'ساعة',
								hh: '%d ساعات',
								d: 'يوم',
								dd: '%d أيام',
								M: 'شهر',
								MM: '%d أشهر',
								y: 'سنة',
								yy: '%d سنوات',
							},
							week: { dow: 0, doy: 12 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						function s(e) {
							return 0 === e
								? 0
								: 1 === e
								? 1
								: 2 === e
								? 2
								: 3 <= e % 100 && e % 100 <= 10
								? 3
								: 11 <= e % 100
								? 4
								: 5;
						}
						function t(a) {
							return function (e, t, n, i) {
								var r = s(e),
									o = l[a][s(e)];
								return 2 === r && (o = o[t ? 0 : 1]), o.replace(/%d/i, e);
							};
						}
						var n = {
								1: '1',
								2: '2',
								3: '3',
								4: '4',
								5: '5',
								6: '6',
								7: '7',
								8: '8',
								9: '9',
								0: '0',
							},
							l = {
								s: [
									'أقل من ثانية',
									'ثانية واحدة',
									['ثانيتان', 'ثانيتين'],
									'%d ثوان',
									'%d ثانية',
									'%d ثانية',
								],
								m: [
									'أقل من دقيقة',
									'دقيقة واحدة',
									['دقيقتان', 'دقيقتين'],
									'%d دقائق',
									'%d دقيقة',
									'%d دقيقة',
								],
								h: [
									'أقل من ساعة',
									'ساعة واحدة',
									['ساعتان', 'ساعتين'],
									'%d ساعات',
									'%d ساعة',
									'%d ساعة',
								],
								d: [
									'أقل من يوم',
									'يوم واحد',
									['يومان', 'يومين'],
									'%d أيام',
									'%d يومًا',
									'%d يوم',
								],
								M: [
									'أقل من شهر',
									'شهر واحد',
									['شهران', 'شهرين'],
									'%d أشهر',
									'%d شهرا',
									'%d شهر',
								],
								y: [
									'أقل من عام',
									'عام واحد',
									['عامان', 'عامين'],
									'%d أعوام',
									'%d عامًا',
									'%d عام',
								],
							},
							i = [
								'يناير',
								'فبراير',
								'مارس',
								'أبريل',
								'مايو',
								'يونيو',
								'يوليو',
								'أغسطس',
								'سبتمبر',
								'أكتوبر',
								'نوفمبر',
								'ديسمبر',
							];
						e.defineLocale('ar-ly', {
							months: i,
							monthsShort: i,
							weekdays:
								'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
									'_'
								),
							weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
							weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'D/‏M/‏YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							meridiemParse: /ص|م/,
							isPM: function (e) {
								return 'م' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'ص' : 'م';
							},
							calendar: {
								sameDay: '[اليوم عند الساعة] LT',
								nextDay: '[غدًا عند الساعة] LT',
								nextWeek: 'dddd [عند الساعة] LT',
								lastDay: '[أمس عند الساعة] LT',
								lastWeek: 'dddd [عند الساعة] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'بعد %s',
								past: 'منذ %s',
								s: t('s'),
								ss: t('s'),
								m: t('m'),
								mm: t('m'),
								h: t('h'),
								hh: t('h'),
								d: t('d'),
								dd: t('d'),
								M: t('M'),
								MM: t('M'),
								y: t('y'),
								yy: t('y'),
							},
							preparse: function (e) {
								return e.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e
									.replace(/\d/g, function (e) {
										return n[e];
									})
									.replace(/,/g, '،');
							},
							week: { dow: 6, doy: 12 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ar-ma', {
							months:
								'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
									'_'
								),
							monthsShort:
								'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
									'_'
								),
							weekdays:
								'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
									'_'
								),
							weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
							weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[اليوم على الساعة] LT',
								nextDay: '[غدا على الساعة] LT',
								nextWeek: 'dddd [على الساعة] LT',
								lastDay: '[أمس على الساعة] LT',
								lastWeek: 'dddd [على الساعة] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'في %s',
								past: 'منذ %s',
								s: 'ثوان',
								ss: '%d ثانية',
								m: 'دقيقة',
								mm: '%d دقائق',
								h: 'ساعة',
								hh: '%d ساعات',
								d: 'يوم',
								dd: '%d أيام',
								M: 'شهر',
								MM: '%d أشهر',
								y: 'سنة',
								yy: '%d سنوات',
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '١',
								2: '٢',
								3: '٣',
								4: '٤',
								5: '٥',
								6: '٦',
								7: '٧',
								8: '٨',
								9: '٩',
								0: '٠',
							},
							n = {
								'١': '1',
								'٢': '2',
								'٣': '3',
								'٤': '4',
								'٥': '5',
								'٦': '6',
								'٧': '7',
								'٨': '8',
								'٩': '9',
								'٠': '0',
							};
						e.defineLocale('ar-sa', {
							months:
								'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
									'_'
								),
							monthsShort:
								'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
									'_'
								),
							weekdays:
								'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
									'_'
								),
							weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
							weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							meridiemParse: /ص|م/,
							isPM: function (e) {
								return 'م' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'ص' : 'م';
							},
							calendar: {
								sameDay: '[اليوم على الساعة] LT',
								nextDay: '[غدا على الساعة] LT',
								nextWeek: 'dddd [على الساعة] LT',
								lastDay: '[أمس على الساعة] LT',
								lastWeek: 'dddd [على الساعة] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'في %s',
								past: 'منذ %s',
								s: 'ثوان',
								ss: '%d ثانية',
								m: 'دقيقة',
								mm: '%d دقائق',
								h: 'ساعة',
								hh: '%d ساعات',
								d: 'يوم',
								dd: '%d أيام',
								M: 'شهر',
								MM: '%d أشهر',
								y: 'سنة',
								yy: '%d سنوات',
							},
							preparse: function (e) {
								return e
									.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
										return n[e];
									})
									.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e
									.replace(/\d/g, function (e) {
										return t[e];
									})
									.replace(/,/g, '،');
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ar-tn', {
							months:
								'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
									'_'
								),
							monthsShort:
								'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
									'_'
								),
							weekdays:
								'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
									'_'
								),
							weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
							weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[اليوم على الساعة] LT',
								nextDay: '[غدا على الساعة] LT',
								nextWeek: 'dddd [على الساعة] LT',
								lastDay: '[أمس على الساعة] LT',
								lastWeek: 'dddd [على الساعة] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'في %s',
								past: 'منذ %s',
								s: 'ثوان',
								ss: '%d ثانية',
								m: 'دقيقة',
								mm: '%d دقائق',
								h: 'ساعة',
								hh: '%d ساعات',
								d: 'يوم',
								dd: '%d أيام',
								M: 'شهر',
								MM: '%d أشهر',
								y: 'سنة',
								yy: '%d سنوات',
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n = {
							1: '-inci',
							5: '-inci',
							8: '-inci',
							70: '-inci',
							80: '-inci',
							2: '-nci',
							7: '-nci',
							20: '-nci',
							50: '-nci',
							3: '-üncü',
							4: '-üncü',
							100: '-üncü',
							6: '-ncı',
							9: '-uncu',
							10: '-uncu',
							30: '-uncu',
							60: '-ıncı',
							90: '-ıncı',
						};
						e.defineLocale('az', {
							months:
								'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(
									'_'
								),
							monthsShort:
								'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
							weekdays:
								'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(
									'_'
								),
							weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
							weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[bugün saat] LT',
								nextDay: '[sabah saat] LT',
								nextWeek: '[gələn həftə] dddd [saat] LT',
								lastDay: '[dünən] LT',
								lastWeek: '[keçən həftə] dddd [saat] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s sonra',
								past: '%s əvvəl',
								s: 'bir neçə saniyə',
								ss: '%d saniyə',
								m: 'bir dəqiqə',
								mm: '%d dəqiqə',
								h: 'bir saat',
								hh: '%d saat',
								d: 'bir gün',
								dd: '%d gün',
								M: 'bir ay',
								MM: '%d ay',
								y: 'bir il',
								yy: '%d il',
							},
							meridiemParse: /gecə|səhər|gündüz|axşam/,
							isPM: function (e) {
								return /^(gündüz|axşam)$/.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'gecə'
									: e < 12
									? 'səhər'
									: e < 17
									? 'gündüz'
									: 'axşam';
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
							ordinal: function (e) {
								if (0 === e) return e + '-ıncı';
								var t = e % 10;
								return (
									e + (n[t] || n[(e % 100) - t] || n[100 <= e ? 100 : null])
								);
							},
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n) {
							return 'm' === n
								? t
									? 'хвіліна'
									: 'хвіліну'
								: 'h' === n
								? t
									? 'гадзіна'
									: 'гадзіну'
								: e +
								  ' ' +
								  ((e = +e),
								  (n = (n = {
										ss: t ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
										mm: t ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
										hh: t ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
										dd: 'дзень_дні_дзён',
										MM: 'месяц_месяцы_месяцаў',
										yy: 'год_гады_гадоў',
								  }[n]).split('_')),
								  e % 10 == 1 && e % 100 != 11
										? n[0]
										: 2 <= e % 10 &&
										  e % 10 <= 4 &&
										  (e % 100 < 10 || 20 <= e % 100)
										? n[1]
										: n[2]);
						}
						n(0).defineLocale('be', {
							months: {
								format:
									'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(
										'_'
									),
								standalone:
									'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(
										'_'
									),
							},
							monthsShort:
								'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(
									'_'
								),
							weekdays: {
								format:
									'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(
										'_'
									),
								standalone:
									'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(
										'_'
									),
								isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/,
							},
							weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
							weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY г.',
								LLL: 'D MMMM YYYY г., HH:mm',
								LLLL: 'dddd, D MMMM YYYY г., HH:mm',
							},
							calendar: {
								sameDay: '[Сёння ў] LT',
								nextDay: '[Заўтра ў] LT',
								lastDay: '[Учора ў] LT',
								nextWeek: function () {
									return '[У] dddd [ў] LT';
								},
								lastWeek: function () {
									switch (this.day()) {
										case 0:
										case 3:
										case 5:
										case 6:
											return '[У мінулую] dddd [ў] LT';
										case 1:
										case 2:
										case 4:
											return '[У мінулы] dddd [ў] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'праз %s',
								past: '%s таму',
								s: 'некалькі секунд',
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: 'дзень',
								dd: e,
								M: 'месяц',
								MM: e,
								y: 'год',
								yy: e,
							},
							meridiemParse: /ночы|раніцы|дня|вечара/,
							isPM: function (e) {
								return /^(дня|вечара)$/.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'ночы'
									: e < 12
									? 'раніцы'
									: e < 17
									? 'дня'
									: 'вечара';
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'M':
									case 'd':
									case 'DDD':
									case 'w':
									case 'W':
										return (e % 10 != 2 && e % 10 != 3) ||
											e % 100 == 12 ||
											e % 100 == 13
											? e + '-ы'
											: e + '-і';
									case 'D':
										return e + '-га';
									default:
										return e;
								}
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('bg', {
							months:
								'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(
									'_'
								),
							monthsShort:
								'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
							weekdays:
								'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(
									'_'
								),
							weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
							weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'D.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY H:mm',
								LLLL: 'dddd, D MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[Днес в] LT',
								nextDay: '[Утре в] LT',
								nextWeek: 'dddd [в] LT',
								lastDay: '[Вчера в] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 0:
										case 3:
										case 6:
											return '[Миналата] dddd [в] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[Миналия] dddd [в] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'след %s',
								past: 'преди %s',
								s: 'няколко секунди',
								ss: '%d секунди',
								m: 'минута',
								mm: '%d минути',
								h: 'час',
								hh: '%d часа',
								d: 'ден',
								dd: '%d дена',
								w: 'седмица',
								ww: '%d седмици',
								M: 'месец',
								MM: '%d месеца',
								y: 'година',
								yy: '%d години',
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
							ordinal: function (e) {
								var t = e % 10,
									n = e % 100;
								return 0 === e
									? e + '-ев'
									: 0 == n
									? e + '-ен'
									: 10 < n && n < 20
									? e + '-ти'
									: 1 == t
									? e + '-ви'
									: 2 == t
									? e + '-ри'
									: 7 == t || 8 == t
									? e + '-ми'
									: e + '-ти';
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('bm', {
							months:
								'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(
									'_'
								),
							monthsShort:
								'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
							weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split(
								'_'
							),
							weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
							weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'MMMM [tile] D [san] YYYY',
								LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
								LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
							},
							calendar: {
								sameDay: '[Bi lɛrɛ] LT',
								nextDay: '[Sini lɛrɛ] LT',
								nextWeek: 'dddd [don lɛrɛ] LT',
								lastDay: '[Kunu lɛrɛ] LT',
								lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s kɔnɔ',
								past: 'a bɛ %s bɔ',
								s: 'sanga dama dama',
								ss: 'sekondi %d',
								m: 'miniti kelen',
								mm: 'miniti %d',
								h: 'lɛrɛ kelen',
								hh: 'lɛrɛ %d',
								d: 'tile kelen',
								dd: 'tile %d',
								M: 'kalo kelen',
								MM: 'kalo %d',
								y: 'san kelen',
								yy: 'san %d',
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '১',
								2: '২',
								3: '৩',
								4: '৪',
								5: '৫',
								6: '৬',
								7: '৭',
								8: '৮',
								9: '৯',
								0: '০',
							},
							n = {
								'১': '1',
								'২': '2',
								'৩': '3',
								'৪': '4',
								'৫': '5',
								'৬': '6',
								'৭': '7',
								'৮': '8',
								'৯': '9',
								'০': '0',
							};
						e.defineLocale('bn', {
							months:
								'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
									'_'
								),
							monthsShort:
								'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
									'_'
								),
							weekdays:
								'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
									'_'
								),
							weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
							weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
							longDateFormat: {
								LT: 'A h:mm সময়',
								LTS: 'A h:mm:ss সময়',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm সময়',
								LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
							},
							calendar: {
								sameDay: '[আজ] LT',
								nextDay: '[আগামীকাল] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[গতকাল] LT',
								lastWeek: '[গত] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s পরে',
								past: '%s আগে',
								s: 'কয়েক সেকেন্ড',
								ss: '%d সেকেন্ড',
								m: 'এক মিনিট',
								mm: '%d মিনিট',
								h: 'এক ঘন্টা',
								hh: '%d ঘন্টা',
								d: 'এক দিন',
								dd: '%d দিন',
								M: 'এক মাস',
								MM: '%d মাস',
								y: 'এক বছর',
								yy: '%d বছর',
							},
							preparse: function (e) {
								return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									('রাত' === t && 4 <= e) ||
									('দুপুর' === t && e < 5) ||
									'বিকাল' === t
										? e + 12
										: e
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'রাত'
									: e < 10
									? 'সকাল'
									: e < 17
									? 'দুপুর'
									: e < 20
									? 'বিকাল'
									: 'রাত';
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '১',
								2: '২',
								3: '৩',
								4: '৪',
								5: '৫',
								6: '৬',
								7: '৭',
								8: '৮',
								9: '৯',
								0: '০',
							},
							n = {
								'১': '1',
								'২': '2',
								'৩': '3',
								'৪': '4',
								'৫': '5',
								'৬': '6',
								'৭': '7',
								'৮': '8',
								'৯': '9',
								'০': '0',
							};
						e.defineLocale('bn-bd', {
							months:
								'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
									'_'
								),
							monthsShort:
								'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
									'_'
								),
							weekdays:
								'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
									'_'
								),
							weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
							weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
							longDateFormat: {
								LT: 'A h:mm সময়',
								LTS: 'A h:mm:ss সময়',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm সময়',
								LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
							},
							calendar: {
								sameDay: '[আজ] LT',
								nextDay: '[আগামীকাল] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[গতকাল] LT',
								lastWeek: '[গত] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s পরে',
								past: '%s আগে',
								s: 'কয়েক সেকেন্ড',
								ss: '%d সেকেন্ড',
								m: 'এক মিনিট',
								mm: '%d মিনিট',
								h: 'এক ঘন্টা',
								hh: '%d ঘন্টা',
								d: 'এক দিন',
								dd: '%d দিন',
								M: 'এক মাস',
								MM: '%d মাস',
								y: 'এক বছর',
								yy: '%d বছর',
							},
							preparse: function (e) {
								return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'রাত' === t
										? e < 4
											? e
											: e + 12
										: 'ভোর' === t || 'সকাল' === t
										? e
										: 'দুপুর' === t
										? 3 <= e
											? e
											: e + 12
										: 'বিকাল' === t || 'সন্ধ্যা' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'রাত'
									: e < 6
									? 'ভোর'
									: e < 12
									? 'সকাল'
									: e < 15
									? 'দুপুর'
									: e < 18
									? 'বিকাল'
									: e < 20
									? 'সন্ধ্যা'
									: 'রাত';
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '༡',
								2: '༢',
								3: '༣',
								4: '༤',
								5: '༥',
								6: '༦',
								7: '༧',
								8: '༨',
								9: '༩',
								0: '༠',
							},
							n = {
								'༡': '1',
								'༢': '2',
								'༣': '3',
								'༤': '4',
								'༥': '5',
								'༦': '6',
								'༧': '7',
								'༨': '8',
								'༩': '9',
								'༠': '0',
							};
						e.defineLocale('bo', {
							months:
								'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
									'_'
								),
							monthsShort:
								'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(
									'_'
								),
							monthsShortRegex: /^(ཟླ་\d{1,2})/,
							monthsParseExact: !0,
							weekdays:
								'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(
									'_'
								),
							weekdaysShort:
								'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
							weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),
							longDateFormat: {
								LT: 'A h:mm',
								LTS: 'A h:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm',
								LLLL: 'dddd, D MMMM YYYY, A h:mm',
							},
							calendar: {
								sameDay: '[དི་རིང] LT',
								nextDay: '[སང་ཉིན] LT',
								nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
								lastDay: '[ཁ་སང] LT',
								lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s ལ་',
								past: '%s སྔན་ལ',
								s: 'ལམ་སང',
								ss: '%d སྐར་ཆ།',
								m: 'སྐར་མ་གཅིག',
								mm: '%d སྐར་མ',
								h: 'ཆུ་ཚོད་གཅིག',
								hh: '%d ཆུ་ཚོད',
								d: 'ཉིན་གཅིག',
								dd: '%d ཉིན་',
								M: 'ཟླ་བ་གཅིག',
								MM: '%d ཟླ་བ',
								y: 'ལོ་གཅིག',
								yy: '%d ལོ',
							},
							preparse: function (e) {
								return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									('མཚན་མོ' === t && 4 <= e) ||
									('ཉིན་གུང' === t && e < 5) ||
									'དགོང་དག' === t
										? e + 12
										: e
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'མཚན་མོ'
									: e < 10
									? 'ཞོགས་ཀས'
									: e < 17
									? 'ཉིན་གུང'
									: e < 20
									? 'དགོང་དག'
									: 'མཚན་མོ';
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						function t(e, t, n) {
							return (
								e +
								' ' +
								((n = { mm: 'munutenn', MM: 'miz', dd: 'devezh' }[n]),
								2 !== e
									? n
									: (function (e) {
											var t = { m: 'v', b: 'v', d: 'z' };
											return void 0 !== t[e.charAt(0)]
												? t[e.charAt(0)] + e.substring(1)
												: e;
									  })(n))
							);
						}
						var n = [
								/^gen/i,
								/^c[ʼ\']hwe/i,
								/^meu/i,
								/^ebr/i,
								/^mae/i,
								/^(mez|eve)/i,
								/^gou/i,
								/^eos/i,
								/^gwe/i,
								/^her/i,
								/^du/i,
								/^ker/i,
							],
							i =
								/^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
							r = [
								/^Su/i,
								/^Lu/i,
								/^Me([^r]|$)/i,
								/^Mer/i,
								/^Ya/i,
								/^Gw/i,
								/^Sa/i,
							];
						e.defineLocale('br', {
							months:
								'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(
									'_'
								),
							monthsShort:
								'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
							weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),
							weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
							weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
							weekdaysParse: r,
							fullWeekdaysParse: [
								/^sul/i,
								/^lun/i,
								/^meurzh/i,
								/^merc[ʼ\']her/i,
								/^yaou/i,
								/^gwener/i,
								/^sadorn/i,
							],
							shortWeekdaysParse: [
								/^Sul/i,
								/^Lun/i,
								/^Meu/i,
								/^Mer/i,
								/^Yao/i,
								/^Gwe/i,
								/^Sad/i,
							],
							minWeekdaysParse: r,
							monthsRegex: i,
							monthsShortRegex: i,
							monthsStrictRegex:
								/^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
							monthsShortStrictRegex:
								/^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
							monthsParse: n,
							longMonthsParse: n,
							shortMonthsParse: n,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D [a viz] MMMM YYYY',
								LLL: 'D [a viz] MMMM YYYY HH:mm',
								LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Hiziv da] LT',
								nextDay: '[Warcʼhoazh da] LT',
								nextWeek: 'dddd [da] LT',
								lastDay: '[Decʼh da] LT',
								lastWeek: 'dddd [paset da] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'a-benn %s',
								past: '%s ʼzo',
								s: 'un nebeud segondennoù',
								ss: '%d eilenn',
								m: 'ur vunutenn',
								mm: t,
								h: 'un eur',
								hh: '%d eur',
								d: 'un devezh',
								dd: t,
								M: 'ur miz',
								MM: t,
								y: 'ur bloaz',
								yy: function (e) {
									switch (
										(function e(t) {
											if (9 < t) return e(t % 10);
											return t;
										})(e)
									) {
										case 1:
										case 3:
										case 4:
										case 5:
										case 9:
											return e + ' bloaz';
										default:
											return e + ' vloaz';
									}
								},
							},
							dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
							ordinal: function (e) {
								return e + (1 === e ? 'añ' : 'vet');
							},
							week: { dow: 1, doy: 4 },
							meridiemParse: /a.m.|g.m./,
							isPM: function (e) {
								return 'g.m.' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'a.m.' : 'g.m.';
							},
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n) {
							var i = e + ' ';
							switch (n) {
								case 'ss':
									return (i +=
										1 === e
											? 'sekunda'
											: 2 === e || 3 === e || 4 === e
											? 'sekunde'
											: 'sekundi');
								case 'm':
									return t ? 'jedna minuta' : 'jedne minute';
								case 'mm':
									return (i +=
										1 !== e && (2 === e || 3 === e || 4 === e)
											? 'minute'
											: 'minuta');
								case 'h':
									return t ? 'jedan sat' : 'jednog sata';
								case 'hh':
									return (i +=
										1 === e
											? 'sat'
											: 2 === e || 3 === e || 4 === e
											? 'sata'
											: 'sati');
								case 'dd':
									return (i += 1 === e ? 'dan' : 'dana');
								case 'MM':
									return (i +=
										1 === e
											? 'mjesec'
											: 2 === e || 3 === e || 4 === e
											? 'mjeseca'
											: 'mjeseci');
								case 'yy':
									return (i +=
										1 !== e && (2 === e || 3 === e || 4 === e)
											? 'godine'
											: 'godina');
							}
						}
						n(0).defineLocale('bs', {
							months:
								'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(
									'_'
								),
							monthsShort:
								'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
									'_'
								),
							weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
							weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY H:mm',
								LLLL: 'dddd, D. MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[danas u] LT',
								nextDay: '[sutra u] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[u] [nedjelju] [u] LT';
										case 3:
											return '[u] [srijedu] [u] LT';
										case 6:
											return '[u] [subotu] [u] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[u] dddd [u] LT';
									}
								},
								lastDay: '[jučer u] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 0:
										case 3:
											return '[prošlu] dddd [u] LT';
										case 6:
											return '[prošle] [subote] [u] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[prošli] dddd [u] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'za %s',
								past: 'prije %s',
								s: 'par sekundi',
								ss: e,
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: 'dan',
								dd: e,
								M: 'mjesec',
								MM: e,
								y: 'godinu',
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ca', {
							months: {
								standalone:
									'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(
										'_'
									),
								format:
									"de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
										'_'
									),
								isFormat: /D[oD]?(\s)+MMMM/,
							},
							monthsShort:
								'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(
									'_'
								),
							weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
							weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM [de] YYYY',
								ll: 'D MMM YYYY',
								LLL: 'D MMMM [de] YYYY [a les] H:mm',
								lll: 'D MMM YYYY, H:mm',
								LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
								llll: 'ddd D MMM YYYY, H:mm',
							},
							calendar: {
								sameDay: function () {
									return (
										'[avui a ' + (1 !== this.hours() ? 'les' : 'la') + '] LT'
									);
								},
								nextDay: function () {
									return (
										'[demà a ' + (1 !== this.hours() ? 'les' : 'la') + '] LT'
									);
								},
								nextWeek: function () {
									return (
										'dddd [a ' + (1 !== this.hours() ? 'les' : 'la') + '] LT'
									);
								},
								lastDay: function () {
									return (
										'[ahir a ' + (1 !== this.hours() ? 'les' : 'la') + '] LT'
									);
								},
								lastWeek: function () {
									return (
										'[el] dddd [passat a ' +
										(1 !== this.hours() ? 'les' : 'la') +
										'] LT'
									);
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: "d'aquí %s",
								past: 'fa %s',
								s: 'uns segons',
								ss: '%d segons',
								m: 'un minut',
								mm: '%d minuts',
								h: 'una hora',
								hh: '%d hores',
								d: 'un dia',
								dd: '%d dies',
								M: 'un mes',
								MM: '%d mesos',
								y: 'un any',
								yy: '%d anys',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
							ordinal: function (e, t) {
								return (
									e +
									('w' !== t && 'W' !== t
										? 1 === e
											? 'r'
											: 2 === e
											? 'n'
											: 3 === e
											? 'r'
											: 4 === e
											? 't'
											: 'è'
										: 'a')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t =
								'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(
									'_'
								),
							n = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),
							i = [
								/^led/i,
								/^úno/i,
								/^bře/i,
								/^dub/i,
								/^kvě/i,
								/^(čvn|červen$|června)/i,
								/^(čvc|červenec|července)/i,
								/^srp/i,
								/^zář/i,
								/^říj/i,
								/^lis/i,
								/^pro/i,
							],
							r =
								/^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;
						function o(e) {
							return 1 < e && e < 5 && 1 != ~~(e / 10);
						}
						function a(e, t, n, i) {
							var r = e + ' ';
							switch (n) {
								case 's':
									return t || i ? 'pár sekund' : 'pár sekundami';
								case 'ss':
									return t || i
										? r + (o(e) ? 'sekundy' : 'sekund')
										: r + 'sekundami';
								case 'm':
									return t ? 'minuta' : i ? 'minutu' : 'minutou';
								case 'mm':
									return t || i
										? r + (o(e) ? 'minuty' : 'minut')
										: r + 'minutami';
								case 'h':
									return t ? 'hodina' : i ? 'hodinu' : 'hodinou';
								case 'hh':
									return t || i
										? r + (o(e) ? 'hodiny' : 'hodin')
										: r + 'hodinami';
								case 'd':
									return t || i ? 'den' : 'dnem';
								case 'dd':
									return t || i ? r + (o(e) ? 'dny' : 'dní') : r + 'dny';
								case 'M':
									return t || i ? 'měsíc' : 'měsícem';
								case 'MM':
									return t || i
										? r + (o(e) ? 'měsíce' : 'měsíců')
										: r + 'měsíci';
								case 'y':
									return t || i ? 'rok' : 'rokem';
								case 'yy':
									return t || i ? r + (o(e) ? 'roky' : 'let') : r + 'lety';
							}
						}
						e.defineLocale('cs', {
							months: t,
							monthsShort: n,
							monthsRegex: r,
							monthsShortRegex: r,
							monthsStrictRegex:
								/^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
							monthsShortStrictRegex:
								/^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
							monthsParse: i,
							longMonthsParse: i,
							shortMonthsParse: i,
							weekdays:
								'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
							weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
							weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY H:mm',
								LLLL: 'dddd D. MMMM YYYY H:mm',
								l: 'D. M. YYYY',
							},
							calendar: {
								sameDay: '[dnes v] LT',
								nextDay: '[zítra v] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[v neděli v] LT';
										case 1:
										case 2:
											return '[v] dddd [v] LT';
										case 3:
											return '[ve středu v] LT';
										case 4:
											return '[ve čtvrtek v] LT';
										case 5:
											return '[v pátek v] LT';
										case 6:
											return '[v sobotu v] LT';
									}
								},
								lastDay: '[včera v] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 0:
											return '[minulou neděli v] LT';
										case 1:
										case 2:
											return '[minulé] dddd [v] LT';
										case 3:
											return '[minulou středu v] LT';
										case 4:
										case 5:
											return '[minulý] dddd [v] LT';
										case 6:
											return '[minulou sobotu v] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'za %s',
								past: 'před %s',
								s: a,
								ss: a,
								m: a,
								mm: a,
								h: a,
								hh: a,
								d: a,
								dd: a,
								M: a,
								MM: a,
								y: a,
								yy: a,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('cv', {
							months:
								'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(
									'_'
								),
							monthsShort:
								'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
							weekdays:
								'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(
									'_'
								),
							weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
							weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD-MM-YYYY',
								LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
								LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
								LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
							},
							calendar: {
								sameDay: '[Паян] LT [сехетре]',
								nextDay: '[Ыран] LT [сехетре]',
								lastDay: '[Ӗнер] LT [сехетре]',
								nextWeek: '[Ҫитес] dddd LT [сехетре]',
								lastWeek: '[Иртнӗ] dddd LT [сехетре]',
								sameElse: 'L',
							},
							relativeTime: {
								future: function (e) {
									return (
										e +
										(/сехет$/i.exec(e)
											? 'рен'
											: /ҫул$/i.exec(e)
											? 'тан'
											: 'ран')
									);
								},
								past: '%s каялла',
								s: 'пӗр-ик ҫеккунт',
								ss: '%d ҫеккунт',
								m: 'пӗр минут',
								mm: '%d минут',
								h: 'пӗр сехет',
								hh: '%d сехет',
								d: 'пӗр кун',
								dd: '%d кун',
								M: 'пӗр уйӑх',
								MM: '%d уйӑх',
								y: 'пӗр ҫул',
								yy: '%d ҫул',
							},
							dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
							ordinal: '%d-мӗш',
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('cy', {
							months:
								'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(
									'_'
								),
							monthsShort:
								'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
							weekdays:
								'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(
									'_'
								),
							weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
							weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Heddiw am] LT',
								nextDay: '[Yfory am] LT',
								nextWeek: 'dddd [am] LT',
								lastDay: '[Ddoe am] LT',
								lastWeek: 'dddd [diwethaf am] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'mewn %s',
								past: '%s yn ôl',
								s: 'ychydig eiliadau',
								ss: '%d eiliad',
								m: 'munud',
								mm: '%d munud',
								h: 'awr',
								hh: '%d awr',
								d: 'diwrnod',
								dd: '%d diwrnod',
								M: 'mis',
								MM: '%d mis',
								y: 'blwyddyn',
								yy: '%d flynedd',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
							ordinal: function (e) {
								var t = '';
								return (
									20 < e
										? (t =
												40 === e ||
												50 === e ||
												60 === e ||
												80 === e ||
												100 === e
													? 'fed'
													: 'ain')
										: 0 < e &&
										  (t = [
												'',
												'af',
												'il',
												'ydd',
												'ydd',
												'ed',
												'ed',
												'ed',
												'fed',
												'fed',
												'fed',
												'eg',
												'fed',
												'eg',
												'eg',
												'fed',
												'eg',
												'eg',
												'fed',
												'eg',
												'fed',
										  ][e]),
									e + t
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('da', {
							months:
								'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(
									'_'
								),
							monthsShort:
								'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
							weekdays:
								'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
							weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
							weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY HH:mm',
								LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',
							},
							calendar: {
								sameDay: '[i dag kl.] LT',
								nextDay: '[i morgen kl.] LT',
								nextWeek: 'på dddd [kl.] LT',
								lastDay: '[i går kl.] LT',
								lastWeek: '[i] dddd[s kl.] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'om %s',
								past: '%s siden',
								s: 'få sekunder',
								ss: '%d sekunder',
								m: 'et minut',
								mm: '%d minutter',
								h: 'en time',
								hh: '%d timer',
								d: 'en dag',
								dd: '%d dage',
								M: 'en måned',
								MM: '%d måneder',
								y: 'et år',
								yy: '%d år',
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							e = {
								m: ['eine Minute', 'einer Minute'],
								h: ['eine Stunde', 'einer Stunde'],
								d: ['ein Tag', 'einem Tag'],
								dd: [e + ' Tage', e + ' Tagen'],
								w: ['eine Woche', 'einer Woche'],
								M: ['ein Monat', 'einem Monat'],
								MM: [e + ' Monate', e + ' Monaten'],
								y: ['ein Jahr', 'einem Jahr'],
								yy: [e + ' Jahre', e + ' Jahren'],
							};
							return t ? e[n][0] : e[n][1];
						}
						n(0).defineLocale('de', {
							months:
								'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
									'_'
								),
							monthsShort:
								'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
									'_'
								),
							weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
							weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY HH:mm',
								LLLL: 'dddd, D. MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[heute um] LT [Uhr]',
								sameElse: 'L',
								nextDay: '[morgen um] LT [Uhr]',
								nextWeek: 'dddd [um] LT [Uhr]',
								lastDay: '[gestern um] LT [Uhr]',
								lastWeek: '[letzten] dddd [um] LT [Uhr]',
							},
							relativeTime: {
								future: 'in %s',
								past: 'vor %s',
								s: 'ein paar Sekunden',
								ss: '%d Sekunden',
								m: e,
								mm: '%d Minuten',
								h: e,
								hh: '%d Stunden',
								d: e,
								dd: e,
								w: e,
								ww: '%d Wochen',
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							e = {
								m: ['eine Minute', 'einer Minute'],
								h: ['eine Stunde', 'einer Stunde'],
								d: ['ein Tag', 'einem Tag'],
								dd: [e + ' Tage', e + ' Tagen'],
								w: ['eine Woche', 'einer Woche'],
								M: ['ein Monat', 'einem Monat'],
								MM: [e + ' Monate', e + ' Monaten'],
								y: ['ein Jahr', 'einem Jahr'],
								yy: [e + ' Jahre', e + ' Jahren'],
							};
							return t ? e[n][0] : e[n][1];
						}
						n(0).defineLocale('de-at', {
							months:
								'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
									'_'
								),
							monthsShort:
								'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
									'_'
								),
							weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
							weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY HH:mm',
								LLLL: 'dddd, D. MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[heute um] LT [Uhr]',
								sameElse: 'L',
								nextDay: '[morgen um] LT [Uhr]',
								nextWeek: 'dddd [um] LT [Uhr]',
								lastDay: '[gestern um] LT [Uhr]',
								lastWeek: '[letzten] dddd [um] LT [Uhr]',
							},
							relativeTime: {
								future: 'in %s',
								past: 'vor %s',
								s: 'ein paar Sekunden',
								ss: '%d Sekunden',
								m: e,
								mm: '%d Minuten',
								h: e,
								hh: '%d Stunden',
								d: e,
								dd: e,
								w: e,
								ww: '%d Wochen',
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							e = {
								m: ['eine Minute', 'einer Minute'],
								h: ['eine Stunde', 'einer Stunde'],
								d: ['ein Tag', 'einem Tag'],
								dd: [e + ' Tage', e + ' Tagen'],
								w: ['eine Woche', 'einer Woche'],
								M: ['ein Monat', 'einem Monat'],
								MM: [e + ' Monate', e + ' Monaten'],
								y: ['ein Jahr', 'einem Jahr'],
								yy: [e + ' Jahre', e + ' Jahren'],
							};
							return t ? e[n][0] : e[n][1];
						}
						n(0).defineLocale('de-ch', {
							months:
								'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
									'_'
								),
							monthsShort:
								'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
									'_'
								),
							weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
							weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY HH:mm',
								LLLL: 'dddd, D. MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[heute um] LT [Uhr]',
								sameElse: 'L',
								nextDay: '[morgen um] LT [Uhr]',
								nextWeek: 'dddd [um] LT [Uhr]',
								lastDay: '[gestern um] LT [Uhr]',
								lastWeek: '[letzten] dddd [um] LT [Uhr]',
							},
							relativeTime: {
								future: 'in %s',
								past: 'vor %s',
								s: 'ein paar Sekunden',
								ss: '%d Sekunden',
								m: e,
								mm: '%d Minuten',
								h: e,
								hh: '%d Stunden',
								d: e,
								dd: e,
								w: e,
								ww: '%d Wochen',
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = [
								'ޖެނުއަރީ',
								'ފެބްރުއަރީ',
								'މާރިޗު',
								'އޭޕްރީލު',
								'މޭ',
								'ޖޫން',
								'ޖުލައި',
								'އޯގަސްޓު',
								'ސެޕްޓެމްބަރު',
								'އޮކްޓޯބަރު',
								'ނޮވެމްބަރު',
								'ޑިސެމްބަރު',
							],
							n = [
								'އާދިއްތަ',
								'ހޯމަ',
								'އަންގާރަ',
								'ބުދަ',
								'ބުރާސްފަތި',
								'ހުކުރު',
								'ހޮނިހިރު',
							];
						e.defineLocale('dv', {
							months: t,
							monthsShort: t,
							weekdays: n,
							weekdaysShort: n,
							weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'D/M/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							meridiemParse: /މކ|މފ/,
							isPM: function (e) {
								return 'މފ' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'މކ' : 'މފ';
							},
							calendar: {
								sameDay: '[މިއަދު] LT',
								nextDay: '[މާދަމާ] LT',
								nextWeek: 'dddd LT',
								lastDay: '[އިއްޔެ] LT',
								lastWeek: '[ފާއިތުވި] dddd LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'ތެރޭގައި %s',
								past: 'ކުރިން %s',
								s: 'ސިކުންތުކޮޅެއް',
								ss: 'd% ސިކުންތު',
								m: 'މިނިޓެއް',
								mm: 'މިނިޓު %d',
								h: 'ގަޑިއިރެއް',
								hh: 'ގަޑިއިރު %d',
								d: 'ދުވަހެއް',
								dd: 'ދުވަސް %d',
								M: 'މަހެއް',
								MM: 'މަސް %d',
								y: 'އަހަރެއް',
								yy: 'އަހަރު %d',
							},
							preparse: function (e) {
								return e.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e.replace(/,/g, '،');
							},
							week: { dow: 7, doy: 12 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('el', {
							monthsNominativeEl:
								'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(
									'_'
								),
							monthsGenitiveEl:
								'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(
									'_'
								),
							months: function (e, t) {
								return e
									? ('string' == typeof t &&
									  /D/.test(t.substring(0, t.indexOf('MMMM')))
											? this._monthsGenitiveEl
											: this._monthsNominativeEl)[e.month()]
									: this._monthsNominativeEl;
							},
							monthsShort:
								'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
							weekdays:
								'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(
									'_'
								),
							weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
							weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
							meridiem: function (e, t, n) {
								return 11 < e ? (n ? 'μμ' : 'ΜΜ') : n ? 'πμ' : 'ΠΜ';
							},
							isPM: function (e) {
								return 'μ' === (e + '').toLowerCase()[0];
							},
							meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY h:mm A',
								LLLL: 'dddd, D MMMM YYYY h:mm A',
							},
							calendarEl: {
								sameDay: '[Σήμερα {}] LT',
								nextDay: '[Αύριο {}] LT',
								nextWeek: 'dddd [{}] LT',
								lastDay: '[Χθες {}] LT',
								lastWeek: function () {
									return 6 !== this.day()
										? '[την προηγούμενη] dddd [{}] LT'
										: '[το προηγούμενο] dddd [{}] LT';
								},
								sameElse: 'L',
							},
							calendar: function (e, t) {
								var n = this._calendarEl[e],
									i = t && t.hours();
								return (
									(e = n),
									(('undefined' != typeof Function && e instanceof Function) ||
										'[object Function]' ===
											Object.prototype.toString.call(e)) &&
										(n = n.apply(t)),
									n.replace('{}', i % 12 == 1 ? 'στη' : 'στις')
								);
							},
							relativeTime: {
								future: 'σε %s',
								past: '%s πριν',
								s: 'λίγα δευτερόλεπτα',
								ss: '%d δευτερόλεπτα',
								m: 'ένα λεπτό',
								mm: '%d λεπτά',
								h: 'μία ώρα',
								hh: '%d ώρες',
								d: 'μία μέρα',
								dd: '%d μέρες',
								M: 'ένας μήνας',
								MM: '%d μήνες',
								y: 'ένας χρόνος',
								yy: '%d χρόνια',
							},
							dayOfMonthOrdinalParse: /\d{1,2}η/,
							ordinal: '%dη',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('en-au', {
							months:
								'January_February_March_April_May_June_July_August_September_October_November_December'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
							weekdays:
								'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
									'_'
								),
							weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
							weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY h:mm A',
								LLLL: 'dddd, D MMMM YYYY h:mm A',
							},
							calendar: {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
							week: { dow: 0, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('en-ca', {
							months:
								'January_February_March_April_May_June_July_August_September_October_November_December'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
							weekdays:
								'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
									'_'
								),
							weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
							weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'YYYY-MM-DD',
								LL: 'MMMM D, YYYY',
								LLL: 'MMMM D, YYYY h:mm A',
								LLLL: 'dddd, MMMM D, YYYY h:mm A',
							},
							calendar: {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('en-gb', {
							months:
								'January_February_March_April_May_June_July_August_September_October_November_December'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
							weekdays:
								'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
									'_'
								),
							weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
							weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('en-ie', {
							months:
								'January_February_March_April_May_June_July_August_September_October_November_December'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
							weekdays:
								'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
									'_'
								),
							weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
							weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('en-il', {
							months:
								'January_February_March_April_May_June_July_August_September_October_November_December'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
							weekdays:
								'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
									'_'
								),
							weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
							weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('en-in', {
							months:
								'January_February_March_April_May_June_July_August_September_October_November_December'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
							weekdays:
								'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
									'_'
								),
							weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
							weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY h:mm A',
								LLLL: 'dddd, D MMMM YYYY h:mm A',
							},
							calendar: {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
							week: { dow: 0, doy: 6 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('en-nz', {
							months:
								'January_February_March_April_May_June_July_August_September_October_November_December'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
							weekdays:
								'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
									'_'
								),
							weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
							weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY h:mm A',
								LLLL: 'dddd, D MMMM YYYY h:mm A',
							},
							calendar: {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('en-sg', {
							months:
								'January_February_March_April_May_June_July_August_September_October_November_December'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
							weekdays:
								'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
									'_'
								),
							weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
							weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Today at] LT',
								nextDay: '[Tomorrow at] LT',
								nextWeek: 'dddd [at] LT',
								lastDay: '[Yesterday at] LT',
								lastWeek: '[Last] dddd [at] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'in %s',
								past: '%s ago',
								s: 'a few seconds',
								ss: '%d seconds',
								m: 'a minute',
								mm: '%d minutes',
								h: 'an hour',
								hh: '%d hours',
								d: 'a day',
								dd: '%d days',
								M: 'a month',
								MM: '%d months',
								y: 'a year',
								yy: '%d years',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('eo', {
							months:
								'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(
									'_'
								),
							monthsShort:
								'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),
							weekdays:
								'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
							weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
							weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY-MM-DD',
								LL: '[la] D[-an de] MMMM, YYYY',
								LLL: '[la] D[-an de] MMMM, YYYY HH:mm',
								LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',
								llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm',
							},
							meridiemParse: /[ap]\.t\.m/i,
							isPM: function (e) {
								return 'p' === e.charAt(0).toLowerCase();
							},
							meridiem: function (e, t, n) {
								return 11 < e
									? n
										? 'p.t.m.'
										: 'P.T.M.'
									: n
									? 'a.t.m.'
									: 'A.T.M.';
							},
							calendar: {
								sameDay: '[Hodiaŭ je] LT',
								nextDay: '[Morgaŭ je] LT',
								nextWeek: 'dddd[n je] LT',
								lastDay: '[Hieraŭ je] LT',
								lastWeek: '[pasintan] dddd[n je] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'post %s',
								past: 'antaŭ %s',
								s: 'kelkaj sekundoj',
								ss: '%d sekundoj',
								m: 'unu minuto',
								mm: '%d minutoj',
								h: 'unu horo',
								hh: '%d horoj',
								d: 'unu tago',
								dd: '%d tagoj',
								M: 'unu monato',
								MM: '%d monatoj',
								y: 'unu jaro',
								yy: '%d jaroj',
							},
							dayOfMonthOrdinalParse: /\d{1,2}a/,
							ordinal: '%da',
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n =
								'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
									'_'
								),
							i = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
							t = [
								/^ene/i,
								/^feb/i,
								/^mar/i,
								/^abr/i,
								/^may/i,
								/^jun/i,
								/^jul/i,
								/^ago/i,
								/^sep/i,
								/^oct/i,
								/^nov/i,
								/^dic/i,
							],
							r =
								/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
						e.defineLocale('es', {
							months:
								'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
									'_'
								),
							monthsShort: function (e, t) {
								return e ? (/-MMM-/.test(t) ? i : n)[e.month()] : n;
							},
							monthsRegex: r,
							monthsShortRegex: r,
							monthsStrictRegex:
								/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
							monthsShortStrictRegex:
								/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
							monthsParse: t,
							longMonthsParse: t,
							shortMonthsParse: t,
							weekdays:
								'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
									'_'
								),
							weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
							weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D [de] MMMM [de] YYYY',
								LLL: 'D [de] MMMM [de] YYYY H:mm',
								LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
							},
							calendar: {
								sameDay: function () {
									return '[hoy a la' + (1 !== this.hours() ? 's' : '') + '] LT';
								},
								nextDay: function () {
									return (
										'[mañana a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								nextWeek: function () {
									return (
										'dddd [a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								lastDay: function () {
									return (
										'[ayer a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								lastWeek: function () {
									return (
										'[el] dddd [pasado a la' +
										(1 !== this.hours() ? 's' : '') +
										'] LT'
									);
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'en %s',
								past: 'hace %s',
								s: 'unos segundos',
								ss: '%d segundos',
								m: 'un minuto',
								mm: '%d minutos',
								h: 'una hora',
								hh: '%d horas',
								d: 'un día',
								dd: '%d días',
								w: 'una semana',
								ww: '%d semanas',
								M: 'un mes',
								MM: '%d meses',
								y: 'un año',
								yy: '%d años',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 1, doy: 4 },
							invalidDate: 'Fecha inválida',
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n =
								'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
									'_'
								),
							i = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
							t = [
								/^ene/i,
								/^feb/i,
								/^mar/i,
								/^abr/i,
								/^may/i,
								/^jun/i,
								/^jul/i,
								/^ago/i,
								/^sep/i,
								/^oct/i,
								/^nov/i,
								/^dic/i,
							],
							r =
								/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
						e.defineLocale('es-do', {
							months:
								'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
									'_'
								),
							monthsShort: function (e, t) {
								return e ? (/-MMM-/.test(t) ? i : n)[e.month()] : n;
							},
							monthsRegex: r,
							monthsShortRegex: r,
							monthsStrictRegex:
								/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
							monthsShortStrictRegex:
								/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
							monthsParse: t,
							longMonthsParse: t,
							shortMonthsParse: t,
							weekdays:
								'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
									'_'
								),
							weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
							weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'DD/MM/YYYY',
								LL: 'D [de] MMMM [de] YYYY',
								LLL: 'D [de] MMMM [de] YYYY h:mm A',
								LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
							},
							calendar: {
								sameDay: function () {
									return '[hoy a la' + (1 !== this.hours() ? 's' : '') + '] LT';
								},
								nextDay: function () {
									return (
										'[mañana a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								nextWeek: function () {
									return (
										'dddd [a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								lastDay: function () {
									return (
										'[ayer a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								lastWeek: function () {
									return (
										'[el] dddd [pasado a la' +
										(1 !== this.hours() ? 's' : '') +
										'] LT'
									);
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'en %s',
								past: 'hace %s',
								s: 'unos segundos',
								ss: '%d segundos',
								m: 'un minuto',
								mm: '%d minutos',
								h: 'una hora',
								hh: '%d horas',
								d: 'un día',
								dd: '%d días',
								w: 'una semana',
								ww: '%d semanas',
								M: 'un mes',
								MM: '%d meses',
								y: 'un año',
								yy: '%d años',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n =
								'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
									'_'
								),
							i = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
							t = [
								/^ene/i,
								/^feb/i,
								/^mar/i,
								/^abr/i,
								/^may/i,
								/^jun/i,
								/^jul/i,
								/^ago/i,
								/^sep/i,
								/^oct/i,
								/^nov/i,
								/^dic/i,
							],
							r =
								/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
						e.defineLocale('es-mx', {
							months:
								'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
									'_'
								),
							monthsShort: function (e, t) {
								return e ? (/-MMM-/.test(t) ? i : n)[e.month()] : n;
							},
							monthsRegex: r,
							monthsShortRegex: r,
							monthsStrictRegex:
								/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
							monthsShortStrictRegex:
								/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
							monthsParse: t,
							longMonthsParse: t,
							shortMonthsParse: t,
							weekdays:
								'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
									'_'
								),
							weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
							weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D [de] MMMM [de] YYYY',
								LLL: 'D [de] MMMM [de] YYYY H:mm',
								LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
							},
							calendar: {
								sameDay: function () {
									return '[hoy a la' + (1 !== this.hours() ? 's' : '') + '] LT';
								},
								nextDay: function () {
									return (
										'[mañana a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								nextWeek: function () {
									return (
										'dddd [a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								lastDay: function () {
									return (
										'[ayer a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								lastWeek: function () {
									return (
										'[el] dddd [pasado a la' +
										(1 !== this.hours() ? 's' : '') +
										'] LT'
									);
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'en %s',
								past: 'hace %s',
								s: 'unos segundos',
								ss: '%d segundos',
								m: 'un minuto',
								mm: '%d minutos',
								h: 'una hora',
								hh: '%d horas',
								d: 'un día',
								dd: '%d días',
								w: 'una semana',
								ww: '%d semanas',
								M: 'un mes',
								MM: '%d meses',
								y: 'un año',
								yy: '%d años',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 0, doy: 4 },
							invalidDate: 'Fecha inválida',
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n =
								'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
									'_'
								),
							i = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
							t = [
								/^ene/i,
								/^feb/i,
								/^mar/i,
								/^abr/i,
								/^may/i,
								/^jun/i,
								/^jul/i,
								/^ago/i,
								/^sep/i,
								/^oct/i,
								/^nov/i,
								/^dic/i,
							],
							r =
								/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
						e.defineLocale('es-us', {
							months:
								'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
									'_'
								),
							monthsShort: function (e, t) {
								return e ? (/-MMM-/.test(t) ? i : n)[e.month()] : n;
							},
							monthsRegex: r,
							monthsShortRegex: r,
							monthsStrictRegex:
								/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
							monthsShortStrictRegex:
								/^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
							monthsParse: t,
							longMonthsParse: t,
							shortMonthsParse: t,
							weekdays:
								'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
									'_'
								),
							weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
							weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'MM/DD/YYYY',
								LL: 'D [de] MMMM [de] YYYY',
								LLL: 'D [de] MMMM [de] YYYY h:mm A',
								LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
							},
							calendar: {
								sameDay: function () {
									return '[hoy a la' + (1 !== this.hours() ? 's' : '') + '] LT';
								},
								nextDay: function () {
									return (
										'[mañana a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								nextWeek: function () {
									return (
										'dddd [a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								lastDay: function () {
									return (
										'[ayer a la' + (1 !== this.hours() ? 's' : '') + '] LT'
									);
								},
								lastWeek: function () {
									return (
										'[el] dddd [pasado a la' +
										(1 !== this.hours() ? 's' : '') +
										'] LT'
									);
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'en %s',
								past: 'hace %s',
								s: 'unos segundos',
								ss: '%d segundos',
								m: 'un minuto',
								mm: '%d minutos',
								h: 'una hora',
								hh: '%d horas',
								d: 'un día',
								dd: '%d días',
								w: 'una semana',
								ww: '%d semanas',
								M: 'un mes',
								MM: '%d meses',
								y: 'un año',
								yy: '%d años',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							e = {
								s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
								ss: [e + 'sekundi', e + 'sekundit'],
								m: ['ühe minuti', 'üks minut'],
								mm: [e + ' minuti', e + ' minutit'],
								h: ['ühe tunni', 'tund aega', 'üks tund'],
								hh: [e + ' tunni', e + ' tundi'],
								d: ['ühe päeva', 'üks päev'],
								M: ['kuu aja', 'kuu aega', 'üks kuu'],
								MM: [e + ' kuu', e + ' kuud'],
								y: ['ühe aasta', 'aasta', 'üks aasta'],
								yy: [e + ' aasta', e + ' aastat'],
							};
							return t ? e[n][2] || e[n][1] : i ? e[n][0] : e[n][1];
						}
						n(0).defineLocale('et', {
							months:
								'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(
									'_'
								),
							monthsShort:
								'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split(
									'_'
								),
							weekdays:
								'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(
									'_'
								),
							weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
							weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY H:mm',
								LLLL: 'dddd, D. MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[Täna,] LT',
								nextDay: '[Homme,] LT',
								nextWeek: '[Järgmine] dddd LT',
								lastDay: '[Eile,] LT',
								lastWeek: '[Eelmine] dddd LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s pärast',
								past: '%s tagasi',
								s: e,
								ss: e,
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: e,
								dd: '%d päeva',
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('eu', {
							months:
								'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(
									'_'
								),
							monthsShort:
								'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(
									'_'
								),
							weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
							weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY-MM-DD',
								LL: 'YYYY[ko] MMMM[ren] D[a]',
								LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
								LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
								l: 'YYYY-M-D',
								ll: 'YYYY[ko] MMM D[a]',
								lll: 'YYYY[ko] MMM D[a] HH:mm',
								llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',
							},
							calendar: {
								sameDay: '[gaur] LT[etan]',
								nextDay: '[bihar] LT[etan]',
								nextWeek: 'dddd LT[etan]',
								lastDay: '[atzo] LT[etan]',
								lastWeek: '[aurreko] dddd LT[etan]',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s barru',
								past: 'duela %s',
								s: 'segundo batzuk',
								ss: '%d segundo',
								m: 'minutu bat',
								mm: '%d minutu',
								h: 'ordu bat',
								hh: '%d ordu',
								d: 'egun bat',
								dd: '%d egun',
								M: 'hilabete bat',
								MM: '%d hilabete',
								y: 'urte bat',
								yy: '%d urte',
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '۱',
								2: '۲',
								3: '۳',
								4: '۴',
								5: '۵',
								6: '۶',
								7: '۷',
								8: '۸',
								9: '۹',
								0: '۰',
							},
							n = {
								'۱': '1',
								'۲': '2',
								'۳': '3',
								'۴': '4',
								'۵': '5',
								'۶': '6',
								'۷': '7',
								'۸': '8',
								'۹': '9',
								'۰': '0',
							};
						e.defineLocale('fa', {
							months:
								'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
									'_'
								),
							monthsShort:
								'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
									'_'
								),
							weekdays:
								'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split('_'),
							weekdaysShort:
								'یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه'.split('_'),
							weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							meridiemParse: /قبل از ظهر|بعد از ظهر/,
							isPM: function (e) {
								return /بعد از ظهر/.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'قبل از ظهر' : 'بعد از ظهر';
							},
							calendar: {
								sameDay: '[امروز ساعت] LT',
								nextDay: '[فردا ساعت] LT',
								nextWeek: 'dddd [ساعت] LT',
								lastDay: '[دیروز ساعت] LT',
								lastWeek: 'dddd [پیش] [ساعت] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'در %s',
								past: '%s پیش',
								s: 'چند ثانیه',
								ss: '%d ثانیه',
								m: 'یک دقیقه',
								mm: '%d دقیقه',
								h: 'یک ساعت',
								hh: '%d ساعت',
								d: 'یک روز',
								dd: '%d روز',
								M: 'یک ماه',
								MM: '%d ماه',
								y: 'یک سال',
								yy: '%d سال',
							},
							preparse: function (e) {
								return e
									.replace(/[۰-۹]/g, function (e) {
										return n[e];
									})
									.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e
									.replace(/\d/g, function (e) {
										return t[e];
									})
									.replace(/,/g, '،');
							},
							dayOfMonthOrdinalParse: /\d{1,2}م/,
							ordinal: '%dم',
							week: { dow: 6, doy: 12 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var o =
								'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(
									' '
								),
							a = [
								'nolla',
								'yhden',
								'kahden',
								'kolmen',
								'neljän',
								'viiden',
								'kuuden',
								o[7],
								o[8],
								o[9],
							];
						function t(e, t, n, i) {
							var r = '';
							switch (n) {
								case 's':
									return i ? 'muutaman sekunnin' : 'muutama sekunti';
								case 'ss':
									r = i ? 'sekunnin' : 'sekuntia';
									break;
								case 'm':
									return i ? 'minuutin' : 'minuutti';
								case 'mm':
									r = i ? 'minuutin' : 'minuuttia';
									break;
								case 'h':
									return i ? 'tunnin' : 'tunti';
								case 'hh':
									r = i ? 'tunnin' : 'tuntia';
									break;
								case 'd':
									return i ? 'päivän' : 'päivä';
								case 'dd':
									r = i ? 'päivän' : 'päivää';
									break;
								case 'M':
									return i ? 'kuukauden' : 'kuukausi';
								case 'MM':
									r = i ? 'kuukauden' : 'kuukautta';
									break;
								case 'y':
									return i ? 'vuoden' : 'vuosi';
								case 'yy':
									r = i ? 'vuoden' : 'vuotta';
							}
							return (
								(n = i), (r = ((e = e) < 10 ? (n ? a : o)[e] : e) + ' ' + r)
							);
						}
						e.defineLocale('fi', {
							months:
								'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
									'_'
								),
							monthsShort:
								'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(
									'_'
								),
							weekdays:
								'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
									'_'
								),
							weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
							weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
							longDateFormat: {
								LT: 'HH.mm',
								LTS: 'HH.mm.ss',
								L: 'DD.MM.YYYY',
								LL: 'Do MMMM[ta] YYYY',
								LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
								LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
								l: 'D.M.YYYY',
								ll: 'Do MMM YYYY',
								lll: 'Do MMM YYYY, [klo] HH.mm',
								llll: 'ddd, Do MMM YYYY, [klo] HH.mm',
							},
							calendar: {
								sameDay: '[tänään] [klo] LT',
								nextDay: '[huomenna] [klo] LT',
								nextWeek: 'dddd [klo] LT',
								lastDay: '[eilen] [klo] LT',
								lastWeek: '[viime] dddd[na] [klo] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s päästä',
								past: '%s sitten',
								s: t,
								ss: t,
								m: t,
								mm: t,
								h: t,
								hh: t,
								d: t,
								dd: t,
								M: t,
								MM: t,
								y: t,
								yy: t,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('fil', {
							months:
								'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
									'_'
								),
							monthsShort:
								'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
							weekdays:
								'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
									'_'
								),
							weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
							weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'MM/D/YYYY',
								LL: 'MMMM D, YYYY',
								LLL: 'MMMM D, YYYY HH:mm',
								LLLL: 'dddd, MMMM DD, YYYY HH:mm',
							},
							calendar: {
								sameDay: 'LT [ngayong araw]',
								nextDay: '[Bukas ng] LT',
								nextWeek: 'LT [sa susunod na] dddd',
								lastDay: 'LT [kahapon]',
								lastWeek: 'LT [noong nakaraang] dddd',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'sa loob ng %s',
								past: '%s ang nakalipas',
								s: 'ilang segundo',
								ss: '%d segundo',
								m: 'isang minuto',
								mm: '%d minuto',
								h: 'isang oras',
								hh: '%d oras',
								d: 'isang araw',
								dd: '%d araw',
								M: 'isang buwan',
								MM: '%d buwan',
								y: 'isang taon',
								yy: '%d taon',
							},
							dayOfMonthOrdinalParse: /\d{1,2}/,
							ordinal: function (e) {
								return e;
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('fo', {
							months:
								'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(
									'_'
								),
							monthsShort:
								'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
							weekdays:
								'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(
									'_'
								),
							weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
							weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D. MMMM, YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Í dag kl.] LT',
								nextDay: '[Í morgin kl.] LT',
								nextWeek: 'dddd [kl.] LT',
								lastDay: '[Í gjár kl.] LT',
								lastWeek: '[síðstu] dddd [kl] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'um %s',
								past: '%s síðani',
								s: 'fá sekund',
								ss: '%d sekundir',
								m: 'ein minuttur',
								mm: '%d minuttir',
								h: 'ein tími',
								hh: '%d tímar',
								d: 'ein dagur',
								dd: '%d dagar',
								M: 'ein mánaður',
								MM: '%d mánaðir',
								y: 'eitt ár',
								yy: '%d ár',
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t =
								/(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
							n = [
								/^janv/i,
								/^févr/i,
								/^mars/i,
								/^avr/i,
								/^mai/i,
								/^juin/i,
								/^juil/i,
								/^août/i,
								/^sept/i,
								/^oct/i,
								/^nov/i,
								/^déc/i,
							];
						e.defineLocale('fr', {
							months:
								'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
									'_'
								),
							monthsShort:
								'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
									'_'
								),
							monthsRegex: t,
							monthsShortRegex: t,
							monthsStrictRegex:
								/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
							monthsShortStrictRegex:
								/(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
							monthsParse: n,
							longMonthsParse: n,
							shortMonthsParse: n,
							weekdays:
								'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
									'_'
								),
							weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
							weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Aujourd’hui à] LT',
								nextDay: '[Demain à] LT',
								nextWeek: 'dddd [à] LT',
								lastDay: '[Hier à] LT',
								lastWeek: 'dddd [dernier à] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'dans %s',
								past: 'il y a %s',
								s: 'quelques secondes',
								ss: '%d secondes',
								m: 'une minute',
								mm: '%d minutes',
								h: 'une heure',
								hh: '%d heures',
								d: 'un jour',
								dd: '%d jours',
								w: 'une semaine',
								ww: '%d semaines',
								M: 'un mois',
								MM: '%d mois',
								y: 'un an',
								yy: '%d ans',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'D':
										return e + (1 === e ? 'er' : '');
									default:
									case 'M':
									case 'Q':
									case 'DDD':
									case 'd':
										return e + (1 === e ? 'er' : 'e');
									case 'w':
									case 'W':
										return e + (1 === e ? 're' : 'e');
								}
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('fr-ca', {
							months:
								'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
									'_'
								),
							monthsShort:
								'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
									'_'
								),
							weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
							weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY-MM-DD',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Aujourd’hui à] LT',
								nextDay: '[Demain à] LT',
								nextWeek: 'dddd [à] LT',
								lastDay: '[Hier à] LT',
								lastWeek: 'dddd [dernier à] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'dans %s',
								past: 'il y a %s',
								s: 'quelques secondes',
								ss: '%d secondes',
								m: 'une minute',
								mm: '%d minutes',
								h: 'une heure',
								hh: '%d heures',
								d: 'un jour',
								dd: '%d jours',
								M: 'un mois',
								MM: '%d mois',
								y: 'un an',
								yy: '%d ans',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
							ordinal: function (e, t) {
								switch (t) {
									default:
									case 'M':
									case 'Q':
									case 'D':
									case 'DDD':
									case 'd':
										return e + (1 === e ? 'er' : 'e');
									case 'w':
									case 'W':
										return e + (1 === e ? 're' : 'e');
								}
							},
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('fr-ch', {
							months:
								'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
									'_'
								),
							monthsShort:
								'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
									'_'
								),
							weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
							weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Aujourd’hui à] LT',
								nextDay: '[Demain à] LT',
								nextWeek: 'dddd [à] LT',
								lastDay: '[Hier à] LT',
								lastWeek: 'dddd [dernier à] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'dans %s',
								past: 'il y a %s',
								s: 'quelques secondes',
								ss: '%d secondes',
								m: 'une minute',
								mm: '%d minutes',
								h: 'une heure',
								hh: '%d heures',
								d: 'un jour',
								dd: '%d jours',
								M: 'un mois',
								MM: '%d mois',
								y: 'un an',
								yy: '%d ans',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
							ordinal: function (e, t) {
								switch (t) {
									default:
									case 'M':
									case 'Q':
									case 'D':
									case 'DDD':
									case 'd':
										return e + (1 === e ? 'er' : 'e');
									case 'w':
									case 'W':
										return e + (1 === e ? 're' : 'e');
								}
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n =
								'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split(
									'_'
								),
							i = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');
						e.defineLocale('fy', {
							months:
								'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(
									'_'
								),
							monthsShort: function (e, t) {
								return e ? (/-MMM-/.test(t) ? i : n)[e.month()] : n;
							},
							monthsParseExact: !0,
							weekdays:
								'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(
									'_'
								),
							weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
							weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD-MM-YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[hjoed om] LT',
								nextDay: '[moarn om] LT',
								nextWeek: 'dddd [om] LT',
								lastDay: '[juster om] LT',
								lastWeek: '[ôfrûne] dddd [om] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'oer %s',
								past: '%s lyn',
								s: 'in pear sekonden',
								ss: '%d sekonden',
								m: 'ien minút',
								mm: '%d minuten',
								h: 'ien oere',
								hh: '%d oeren',
								d: 'ien dei',
								dd: '%d dagen',
								M: 'ien moanne',
								MM: '%d moannen',
								y: 'ien jier',
								yy: '%d jierren',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
							ordinal: function (e) {
								return e + (1 === e || 8 === e || 20 <= e ? 'ste' : 'de');
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ga', {
							months: [
								'Eanáir',
								'Feabhra',
								'Márta',
								'Aibreán',
								'Bealtaine',
								'Meitheamh',
								'Iúil',
								'Lúnasa',
								'Meán Fómhair',
								'Deireadh Fómhair',
								'Samhain',
								'Nollaig',
							],
							monthsShort: [
								'Ean',
								'Feabh',
								'Márt',
								'Aib',
								'Beal',
								'Meith',
								'Iúil',
								'Lún',
								'M.F.',
								'D.F.',
								'Samh',
								'Noll',
							],
							monthsParseExact: !0,
							weekdays: [
								'Dé Domhnaigh',
								'Dé Luain',
								'Dé Máirt',
								'Dé Céadaoin',
								'Déardaoin',
								'Dé hAoine',
								'Dé Sathairn',
							],
							weekdaysShort: [
								'Domh',
								'Luan',
								'Máirt',
								'Céad',
								'Déar',
								'Aoine',
								'Sath',
							],
							weekdaysMin: ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'],
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Inniu ag] LT',
								nextDay: '[Amárach ag] LT',
								nextWeek: 'dddd [ag] LT',
								lastDay: '[Inné ag] LT',
								lastWeek: 'dddd [seo caite] [ag] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'i %s',
								past: '%s ó shin',
								s: 'cúpla soicind',
								ss: '%d soicind',
								m: 'nóiméad',
								mm: '%d nóiméad',
								h: 'uair an chloig',
								hh: '%d uair an chloig',
								d: 'lá',
								dd: '%d lá',
								M: 'mí',
								MM: '%d míonna',
								y: 'bliain',
								yy: '%d bliain',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
							ordinal: function (e) {
								return e + (1 === e ? 'd' : e % 10 == 2 ? 'na' : 'mh');
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('gd', {
							months: [
								'Am Faoilleach',
								'An Gearran',
								'Am Màrt',
								'An Giblean',
								'An Cèitean',
								'An t-Ògmhios',
								'An t-Iuchar',
								'An Lùnastal',
								'An t-Sultain',
								'An Dàmhair',
								'An t-Samhain',
								'An Dùbhlachd',
							],
							monthsShort: [
								'Faoi',
								'Gear',
								'Màrt',
								'Gibl',
								'Cèit',
								'Ògmh',
								'Iuch',
								'Lùn',
								'Sult',
								'Dàmh',
								'Samh',
								'Dùbh',
							],
							monthsParseExact: !0,
							weekdays: [
								'Didòmhnaich',
								'Diluain',
								'Dimàirt',
								'Diciadain',
								'Diardaoin',
								'Dihaoine',
								'Disathairne',
							],
							weekdaysShort: ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],
							weekdaysMin: ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'],
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[An-diugh aig] LT',
								nextDay: '[A-màireach aig] LT',
								nextWeek: 'dddd [aig] LT',
								lastDay: '[An-dè aig] LT',
								lastWeek: 'dddd [seo chaidh] [aig] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'ann an %s',
								past: 'bho chionn %s',
								s: 'beagan diogan',
								ss: '%d diogan',
								m: 'mionaid',
								mm: '%d mionaidean',
								h: 'uair',
								hh: '%d uairean',
								d: 'latha',
								dd: '%d latha',
								M: 'mìos',
								MM: '%d mìosan',
								y: 'bliadhna',
								yy: '%d bliadhna',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
							ordinal: function (e) {
								return e + (1 === e ? 'd' : e % 10 == 2 ? 'na' : 'mh');
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('gl', {
							months:
								'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(
									'_'
								),
							monthsShort:
								'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
							weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
							weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D [de] MMMM [de] YYYY',
								LLL: 'D [de] MMMM [de] YYYY H:mm',
								LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
							},
							calendar: {
								sameDay: function () {
									return '[hoxe ' + (1 !== this.hours() ? 'ás' : 'á') + '] LT';
								},
								nextDay: function () {
									return '[mañá ' + (1 !== this.hours() ? 'ás' : 'á') + '] LT';
								},
								nextWeek: function () {
									return 'dddd [' + (1 !== this.hours() ? 'ás' : 'a') + '] LT';
								},
								lastDay: function () {
									return '[onte ' + (1 !== this.hours() ? 'á' : 'a') + '] LT';
								},
								lastWeek: function () {
									return (
										'[o] dddd [pasado ' +
										(1 !== this.hours() ? 'ás' : 'a') +
										'] LT'
									);
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: function (e) {
									return 0 === e.indexOf('un') ? 'n' + e : 'en ' + e;
								},
								past: 'hai %s',
								s: 'uns segundos',
								ss: '%d segundos',
								m: 'un minuto',
								mm: '%d minutos',
								h: 'unha hora',
								hh: '%d horas',
								d: 'un día',
								dd: '%d días',
								M: 'un mes',
								MM: '%d meses',
								y: 'un ano',
								yy: '%d anos',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							e = {
								s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],
								ss: [e + ' सॅकंडांनी', e + ' सॅकंड'],
								m: ['एका मिणटान', 'एक मिनूट'],
								mm: [e + ' मिणटांनी', e + ' मिणटां'],
								h: ['एका वरान', 'एक वर'],
								hh: [e + ' वरांनी', e + ' वरां'],
								d: ['एका दिसान', 'एक दीस'],
								dd: [e + ' दिसांनी', e + ' दीस'],
								M: ['एका म्हयन्यान', 'एक म्हयनो'],
								MM: [e + ' म्हयन्यानी', e + ' म्हयने'],
								y: ['एका वर्सान', 'एक वर्स'],
								yy: [e + ' वर्सांनी', e + ' वर्सां'],
							};
							return i ? e[n][0] : e[n][1];
						}
						n(0).defineLocale('gom-deva', {
							months: {
								standalone:
									'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
										'_'
									),
								format:
									'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(
										'_'
									),
								isFormat: /MMMM(\s)+D[oD]?/,
							},
							monthsShort:
								'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),
							weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split(
								'_'
							),
							weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'A h:mm [वाजतां]',
								LTS: 'A h:mm:ss [वाजतां]',
								L: 'DD-MM-YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY A h:mm [वाजतां]',
								LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',
								llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]',
							},
							calendar: {
								sameDay: '[आयज] LT',
								nextDay: '[फाल्यां] LT',
								nextWeek: '[फुडलो] dddd[,] LT',
								lastDay: '[काल] LT',
								lastWeek: '[फाटलो] dddd[,] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s',
								past: '%s आदीं',
								s: e,
								ss: e,
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: e,
								dd: e,
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'D':
										return e + 'वेर';
									default:
									case 'M':
									case 'Q':
									case 'DDD':
									case 'd':
									case 'w':
									case 'W':
										return e;
								}
							},
							week: { dow: 0, doy: 3 },
							meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'राती' === t
										? e < 4
											? e
											: e + 12
										: 'सकाळीं' === t
										? e
										: 'दनपारां' === t
										? 12 < e
											? e
											: e + 12
										: 'सांजे' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'राती'
									: e < 12
									? 'सकाळीं'
									: e < 16
									? 'दनपारां'
									: e < 20
									? 'सांजे'
									: 'राती';
							},
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							e = {
								s: ['thoddea sekondamni', 'thodde sekond'],
								ss: [e + ' sekondamni', e + ' sekond'],
								m: ['eka mintan', 'ek minut'],
								mm: [e + ' mintamni', e + ' mintam'],
								h: ['eka voran', 'ek vor'],
								hh: [e + ' voramni', e + ' voram'],
								d: ['eka disan', 'ek dis'],
								dd: [e + ' disamni', e + ' dis'],
								M: ['eka mhoinean', 'ek mhoino'],
								MM: [e + ' mhoineamni', e + ' mhoine'],
								y: ['eka vorsan', 'ek voros'],
								yy: [e + ' vorsamni', e + ' vorsam'],
							};
							return i ? e[n][0] : e[n][1];
						}
						n(0).defineLocale('gom-latn', {
							months: {
								standalone:
									'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(
										'_'
									),
								format:
									'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(
										'_'
									),
								isFormat: /MMMM(\s)+D[oD]?/,
							},
							monthsShort:
								'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split(
									'_'
								),
							weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
							weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'A h:mm [vazta]',
								LTS: 'A h:mm:ss [vazta]',
								L: 'DD-MM-YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY A h:mm [vazta]',
								LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',
								llll: 'ddd, D MMM YYYY, A h:mm [vazta]',
							},
							calendar: {
								sameDay: '[Aiz] LT',
								nextDay: '[Faleam] LT',
								nextWeek: '[Fuddlo] dddd[,] LT',
								lastDay: '[Kal] LT',
								lastWeek: '[Fattlo] dddd[,] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s',
								past: '%s adim',
								s: e,
								ss: e,
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: e,
								dd: e,
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}(er)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'D':
										return e + 'er';
									default:
									case 'M':
									case 'Q':
									case 'DDD':
									case 'd':
									case 'w':
									case 'W':
										return e;
								}
							},
							week: { dow: 0, doy: 3 },
							meridiemParse: /rati|sokallim|donparam|sanje/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'rati' === t
										? e < 4
											? e
											: e + 12
										: 'sokallim' === t
										? e
										: 'donparam' === t
										? 12 < e
											? e
											: e + 12
										: 'sanje' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'rati'
									: e < 12
									? 'sokallim'
									: e < 16
									? 'donparam'
									: e < 20
									? 'sanje'
									: 'rati';
							},
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '૧',
								2: '૨',
								3: '૩',
								4: '૪',
								5: '૫',
								6: '૬',
								7: '૭',
								8: '૮',
								9: '૯',
								0: '૦',
							},
							n = {
								'૧': '1',
								'૨': '2',
								'૩': '3',
								'૪': '4',
								'૫': '5',
								'૬': '6',
								'૭': '7',
								'૮': '8',
								'૯': '9',
								'૦': '0',
							};
						e.defineLocale('gu', {
							months:
								'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(
									'_'
								),
							monthsShort:
								'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(
									'_'
								),
							weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
							weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
							longDateFormat: {
								LT: 'A h:mm વાગ્યે',
								LTS: 'A h:mm:ss વાગ્યે',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
								LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',
							},
							calendar: {
								sameDay: '[આજ] LT',
								nextDay: '[કાલે] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[ગઇકાલે] LT',
								lastWeek: '[પાછલા] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s મા',
								past: '%s પહેલા',
								s: 'અમુક પળો',
								ss: '%d સેકંડ',
								m: 'એક મિનિટ',
								mm: '%d મિનિટ',
								h: 'એક કલાક',
								hh: '%d કલાક',
								d: 'એક દિવસ',
								dd: '%d દિવસ',
								M: 'એક મહિનો',
								MM: '%d મહિનો',
								y: 'એક વર્ષ',
								yy: '%d વર્ષ',
							},
							preparse: function (e) {
								return e.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'રાત' === t
										? e < 4
											? e
											: e + 12
										: 'સવાર' === t
										? e
										: 'બપોર' === t
										? 10 <= e
											? e
											: e + 12
										: 'સાંજ' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'રાત'
									: e < 10
									? 'સવાર'
									: e < 17
									? 'બપોર'
									: e < 20
									? 'સાંજ'
									: 'રાત';
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('he', {
							months:
								'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(
									'_'
								),
							monthsShort:
								'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split(
									'_'
								),
							weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
							weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
							weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D [ב]MMMM YYYY',
								LLL: 'D [ב]MMMM YYYY HH:mm',
								LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
								l: 'D/M/YYYY',
								ll: 'D MMM YYYY',
								lll: 'D MMM YYYY HH:mm',
								llll: 'ddd, D MMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[היום ב־]LT',
								nextDay: '[מחר ב־]LT',
								nextWeek: 'dddd [בשעה] LT',
								lastDay: '[אתמול ב־]LT',
								lastWeek: '[ביום] dddd [האחרון בשעה] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'בעוד %s',
								past: 'לפני %s',
								s: 'מספר שניות',
								ss: '%d שניות',
								m: 'דקה',
								mm: '%d דקות',
								h: 'שעה',
								hh: function (e) {
									return 2 === e ? 'שעתיים' : e + ' שעות';
								},
								d: 'יום',
								dd: function (e) {
									return 2 === e ? 'יומיים' : e + ' ימים';
								},
								M: 'חודש',
								MM: function (e) {
									return 2 === e ? 'חודשיים' : e + ' חודשים';
								},
								y: 'שנה',
								yy: function (e) {
									return 2 === e
										? 'שנתיים'
										: e % 10 == 0 && 10 !== e
										? e + ' שנה'
										: e + ' שנים';
								},
							},
							meridiemParse:
								/אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
							isPM: function (e) {
								return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 5
									? 'לפנות בוקר'
									: e < 10
									? 'בבוקר'
									: e < 12
									? n
										? 'לפנה"צ'
										: 'לפני הצהריים'
									: e < 18
									? n
										? 'אחה"צ'
										: 'אחרי הצהריים'
									: 'בערב';
							},
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '१',
								2: '२',
								3: '३',
								4: '४',
								5: '५',
								6: '६',
								7: '७',
								8: '८',
								9: '९',
								0: '०',
							},
							n = {
								'१': '1',
								'२': '2',
								'३': '3',
								'४': '4',
								'५': '5',
								'६': '6',
								'७': '7',
								'८': '8',
								'९': '9',
								'०': '0',
							},
							i = [
								/^जन/i,
								/^फ़र|फर/i,
								/^मार्च/i,
								/^अप्रै/i,
								/^मई/i,
								/^जून/i,
								/^जुल/i,
								/^अग/i,
								/^सितं|सित/i,
								/^अक्टू/i,
								/^नव|नवं/i,
								/^दिसं|दिस/i,
							];
						e.defineLocale('hi', {
							months: {
								format:
									'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(
										'_'
									),
								standalone:
									'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split(
										'_'
									),
							},
							monthsShort:
								'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(
									'_'
								),
							weekdays:
								'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split(
									'_'
								),
							weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
							weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
							longDateFormat: {
								LT: 'A h:mm बजे',
								LTS: 'A h:mm:ss बजे',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm बजे',
								LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',
							},
							monthsParse: i,
							longMonthsParse: i,
							shortMonthsParse: [
								/^जन/i,
								/^फ़र/i,
								/^मार्च/i,
								/^अप्रै/i,
								/^मई/i,
								/^जून/i,
								/^जुल/i,
								/^अग/i,
								/^सित/i,
								/^अक्टू/i,
								/^नव/i,
								/^दिस/i,
							],
							monthsRegex:
								/^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,
							monthsShortRegex:
								/^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,
							monthsStrictRegex:
								/^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,
							monthsShortStrictRegex:
								/^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,
							calendar: {
								sameDay: '[आज] LT',
								nextDay: '[कल] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[कल] LT',
								lastWeek: '[पिछले] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s में',
								past: '%s पहले',
								s: 'कुछ ही क्षण',
								ss: '%d सेकंड',
								m: 'एक मिनट',
								mm: '%d मिनट',
								h: 'एक घंटा',
								hh: '%d घंटे',
								d: 'एक दिन',
								dd: '%d दिन',
								M: 'एक महीने',
								MM: '%d महीने',
								y: 'एक वर्ष',
								yy: '%d वर्ष',
							},
							preparse: function (e) {
								return e.replace(/[१२३४५६७८९०]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /रात|सुबह|दोपहर|शाम/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'रात' === t
										? e < 4
											? e
											: e + 12
										: 'सुबह' === t
										? e
										: 'दोपहर' === t
										? 10 <= e
											? e
											: e + 12
										: 'शाम' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'रात'
									: e < 10
									? 'सुबह'
									: e < 17
									? 'दोपहर'
									: e < 20
									? 'शाम'
									: 'रात';
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n) {
							var i = e + ' ';
							switch (n) {
								case 'ss':
									return (i +=
										1 === e
											? 'sekunda'
											: 2 === e || 3 === e || 4 === e
											? 'sekunde'
											: 'sekundi');
								case 'm':
									return t ? 'jedna minuta' : 'jedne minute';
								case 'mm':
									return (i +=
										1 !== e && (2 === e || 3 === e || 4 === e)
											? 'minute'
											: 'minuta');
								case 'h':
									return t ? 'jedan sat' : 'jednog sata';
								case 'hh':
									return (i +=
										1 === e
											? 'sat'
											: 2 === e || 3 === e || 4 === e
											? 'sata'
											: 'sati');
								case 'dd':
									return (i += 1 === e ? 'dan' : 'dana');
								case 'MM':
									return (i +=
										1 === e
											? 'mjesec'
											: 2 === e || 3 === e || 4 === e
											? 'mjeseca'
											: 'mjeseci');
								case 'yy':
									return (i +=
										1 !== e && (2 === e || 3 === e || 4 === e)
											? 'godine'
											: 'godina');
							}
						}
						n(0).defineLocale('hr', {
							months: {
								format:
									'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(
										'_'
									),
								standalone:
									'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(
										'_'
									),
							},
							monthsShort:
								'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
									'_'
								),
							weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
							weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'Do MMMM YYYY',
								LLL: 'Do MMMM YYYY H:mm',
								LLLL: 'dddd, Do MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[danas u] LT',
								nextDay: '[sutra u] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[u] [nedjelju] [u] LT';
										case 3:
											return '[u] [srijedu] [u] LT';
										case 6:
											return '[u] [subotu] [u] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[u] dddd [u] LT';
									}
								},
								lastDay: '[jučer u] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 0:
											return '[prošlu] [nedjelju] [u] LT';
										case 3:
											return '[prošlu] [srijedu] [u] LT';
										case 6:
											return '[prošle] [subote] [u] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[prošli] dddd [u] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'za %s',
								past: 'prije %s',
								s: 'par sekundi',
								ss: e,
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: 'dan',
								dd: e,
								M: 'mjesec',
								MM: e,
								y: 'godinu',
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t =
							'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(
								' '
							);
						function n(e, t, n, i) {
							var r = e;
							switch (n) {
								case 's':
									return i || t ? 'néhány másodperc' : 'néhány másodperce';
								case 'ss':
									return r + (i || t) ? ' másodperc' : ' másodperce';
								case 'm':
									return 'egy' + (i || t ? ' perc' : ' perce');
								case 'mm':
									return r + (i || t ? ' perc' : ' perce');
								case 'h':
									return 'egy' + (i || t ? ' óra' : ' órája');
								case 'hh':
									return r + (i || t ? ' óra' : ' órája');
								case 'd':
									return 'egy' + (i || t ? ' nap' : ' napja');
								case 'dd':
									return r + (i || t ? ' nap' : ' napja');
								case 'M':
									return 'egy' + (i || t ? ' hónap' : ' hónapja');
								case 'MM':
									return r + (i || t ? ' hónap' : ' hónapja');
								case 'y':
									return 'egy' + (i || t ? ' év' : ' éve');
								case 'yy':
									return r + (i || t ? ' év' : ' éve');
							}
							return '';
						}
						function i(e) {
							return (e ? '' : '[múlt] ') + '[' + t[this.day()] + '] LT[-kor]';
						}
						e.defineLocale('hu', {
							months:
								'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(
									'_'
								),
							monthsShort:
								'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split(
									'_'
								),
							weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
							weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'YYYY.MM.DD.',
								LL: 'YYYY. MMMM D.',
								LLL: 'YYYY. MMMM D. H:mm',
								LLLL: 'YYYY. MMMM D., dddd H:mm',
							},
							meridiemParse: /de|du/i,
							isPM: function (e) {
								return 'u' === e.charAt(1).toLowerCase();
							},
							meridiem: function (e, t, n) {
								return e < 12
									? !0 === n
										? 'de'
										: 'DE'
									: !0 === n
									? 'du'
									: 'DU';
							},
							calendar: {
								sameDay: '[ma] LT[-kor]',
								nextDay: '[holnap] LT[-kor]',
								nextWeek: function () {
									return i.call(this, !0);
								},
								lastDay: '[tegnap] LT[-kor]',
								lastWeek: function () {
									return i.call(this, !1);
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s múlva',
								past: '%s',
								s: n,
								ss: n,
								m: n,
								mm: n,
								h: n,
								hh: n,
								d: n,
								dd: n,
								M: n,
								MM: n,
								y: n,
								yy: n,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('hy-am', {
							months: {
								format:
									'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(
										'_'
									),
								standalone:
									'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(
										'_'
									),
							},
							monthsShort:
								'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
							weekdays:
								'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(
									'_'
								),
							weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
							weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY թ.',
								LLL: 'D MMMM YYYY թ., HH:mm',
								LLLL: 'dddd, D MMMM YYYY թ., HH:mm',
							},
							calendar: {
								sameDay: '[այսօր] LT',
								nextDay: '[վաղը] LT',
								lastDay: '[երեկ] LT',
								nextWeek: function () {
									return 'dddd [օրը ժամը] LT';
								},
								lastWeek: function () {
									return '[անցած] dddd [օրը ժամը] LT';
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s հետո',
								past: '%s առաջ',
								s: 'մի քանի վայրկյան',
								ss: '%d վայրկյան',
								m: 'րոպե',
								mm: '%d րոպե',
								h: 'ժամ',
								hh: '%d ժամ',
								d: 'օր',
								dd: '%d օր',
								M: 'ամիս',
								MM: '%d ամիս',
								y: 'տարի',
								yy: '%d տարի',
							},
							meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
							isPM: function (e) {
								return /^(ցերեկվա|երեկոյան)$/.test(e);
							},
							meridiem: function (e) {
								return e < 4
									? 'գիշերվա'
									: e < 12
									? 'առավոտվա'
									: e < 17
									? 'ցերեկվա'
									: 'երեկոյան';
							},
							dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'DDD':
									case 'w':
									case 'W':
									case 'DDDo':
										return 1 === e ? e + '-ին' : e + '-րդ';
									default:
										return e;
								}
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('id', {
							months:
								'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
							weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
							weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
							weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
							longDateFormat: {
								LT: 'HH.mm',
								LTS: 'HH.mm.ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY [pukul] HH.mm',
								LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
							},
							meridiemParse: /pagi|siang|sore|malam/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'pagi' === t
										? e
										: 'siang' === t
										? 11 <= e
											? e
											: e + 12
										: 'sore' === t || 'malam' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 11
									? 'pagi'
									: e < 15
									? 'siang'
									: e < 19
									? 'sore'
									: 'malam';
							},
							calendar: {
								sameDay: '[Hari ini pukul] LT',
								nextDay: '[Besok pukul] LT',
								nextWeek: 'dddd [pukul] LT',
								lastDay: '[Kemarin pukul] LT',
								lastWeek: 'dddd [lalu pukul] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'dalam %s',
								past: '%s yang lalu',
								s: 'beberapa detik',
								ss: '%d detik',
								m: 'semenit',
								mm: '%d menit',
								h: 'sejam',
								hh: '%d jam',
								d: 'sehari',
								dd: '%d hari',
								M: 'sebulan',
								MM: '%d bulan',
								y: 'setahun',
								yy: '%d tahun',
							},
							week: { dow: 0, doy: 6 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function o(e) {
							return e % 100 == 11 || e % 10 != 1;
						}
						function e(e, t, n, i) {
							var r = e + ' ';
							switch (n) {
								case 's':
									return t || i ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
								case 'ss':
									return o(e)
										? r + (t || i ? 'sekúndur' : 'sekúndum')
										: r + 'sekúnda';
								case 'm':
									return t ? 'mínúta' : 'mínútu';
								case 'mm':
									return o(e)
										? r + (t || i ? 'mínútur' : 'mínútum')
										: t
										? r + 'mínúta'
										: r + 'mínútu';
								case 'hh':
									return o(e)
										? r + (t || i ? 'klukkustundir' : 'klukkustundum')
										: r + 'klukkustund';
								case 'd':
									return t ? 'dagur' : i ? 'dag' : 'degi';
								case 'dd':
									return o(e)
										? t
											? r + 'dagar'
											: r + (i ? 'daga' : 'dögum')
										: t
										? r + 'dagur'
										: r + (i ? 'dag' : 'degi');
								case 'M':
									return t ? 'mánuður' : i ? 'mánuð' : 'mánuði';
								case 'MM':
									return o(e)
										? t
											? r + 'mánuðir'
											: r + (i ? 'mánuði' : 'mánuðum')
										: t
										? r + 'mánuður'
										: r + (i ? 'mánuð' : 'mánuði');
								case 'y':
									return t || i ? 'ár' : 'ári';
								case 'yy':
									return o(e)
										? r + (t || i ? 'ár' : 'árum')
										: r + (t || i ? 'ár' : 'ári');
							}
						}
						n(0).defineLocale('is', {
							months:
								'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(
									'_'
								),
							monthsShort:
								'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
							weekdays:
								'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(
									'_'
								),
							weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
							weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY [kl.] H:mm',
								LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',
							},
							calendar: {
								sameDay: '[í dag kl.] LT',
								nextDay: '[á morgun kl.] LT',
								nextWeek: 'dddd [kl.] LT',
								lastDay: '[í gær kl.] LT',
								lastWeek: '[síðasta] dddd [kl.] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'eftir %s',
								past: 'fyrir %s síðan',
								s: e,
								ss: e,
								m: e,
								mm: e,
								h: 'klukkustund',
								hh: e,
								d: e,
								dd: e,
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('it', {
							months:
								'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
									'_'
								),
							monthsShort:
								'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
							weekdays:
								'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
									'_'
								),
							weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
							weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: function () {
									return (
										'[Oggi a' +
										(1 < this.hours()
											? 'lle '
											: 0 === this.hours()
											? ' '
											: "ll'") +
										']LT'
									);
								},
								nextDay: function () {
									return (
										'[Domani a' +
										(1 < this.hours()
											? 'lle '
											: 0 === this.hours()
											? ' '
											: "ll'") +
										']LT'
									);
								},
								nextWeek: function () {
									return (
										'dddd [a' +
										(1 < this.hours()
											? 'lle '
											: 0 === this.hours()
											? ' '
											: "ll'") +
										']LT'
									);
								},
								lastDay: function () {
									return (
										'[Ieri a' +
										(1 < this.hours()
											? 'lle '
											: 0 === this.hours()
											? ' '
											: "ll'") +
										']LT'
									);
								},
								lastWeek: function () {
									return 0 !== this.day()
										? '[Lo scorso] dddd [a' +
												(1 < this.hours()
													? 'lle '
													: 0 === this.hours()
													? ' '
													: "ll'") +
												']LT'
										: '[La scorsa] dddd [a' +
												(1 < this.hours()
													? 'lle '
													: 0 === this.hours()
													? ' '
													: "ll'") +
												']LT';
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'tra %s',
								past: '%s fa',
								s: 'alcuni secondi',
								ss: '%d secondi',
								m: 'un minuto',
								mm: '%d minuti',
								h: "un'ora",
								hh: '%d ore',
								d: 'un giorno',
								dd: '%d giorni',
								w: 'una settimana',
								ww: '%d settimane',
								M: 'un mese',
								MM: '%d mesi',
								y: 'un anno',
								yy: '%d anni',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('it-ch', {
							months:
								'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
									'_'
								),
							monthsShort:
								'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
							weekdays:
								'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
									'_'
								),
							weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
							weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Oggi alle] LT',
								nextDay: '[Domani alle] LT',
								nextWeek: 'dddd [alle] LT',
								lastDay: '[Ieri alle] LT',
								lastWeek: function () {
									return 0 !== this.day()
										? '[lo scorso] dddd [alle] LT'
										: '[la scorsa] dddd [alle] LT';
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: function (e) {
									return (/^[0-9].+$/.test(e) ? 'tra' : 'in') + ' ' + e;
								},
								past: '%s fa',
								s: 'alcuni secondi',
								ss: '%d secondi',
								m: 'un minuto',
								mm: '%d minuti',
								h: "un'ora",
								hh: '%d ore',
								d: 'un giorno',
								dd: '%d giorni',
								M: 'un mese',
								MM: '%d mesi',
								y: 'un anno',
								yy: '%d anni',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ja', {
							eras: [
								{
									since: '2019-05-01',
									offset: 1,
									name: '令和',
									narrow: '㋿',
									abbr: 'R',
								},
								{
									since: '1989-01-08',
									until: '2019-04-30',
									offset: 1,
									name: '平成',
									narrow: '㍻',
									abbr: 'H',
								},
								{
									since: '1926-12-25',
									until: '1989-01-07',
									offset: 1,
									name: '昭和',
									narrow: '㍼',
									abbr: 'S',
								},
								{
									since: '1912-07-30',
									until: '1926-12-24',
									offset: 1,
									name: '大正',
									narrow: '㍽',
									abbr: 'T',
								},
								{
									since: '1873-01-01',
									until: '1912-07-29',
									offset: 6,
									name: '明治',
									narrow: '㍾',
									abbr: 'M',
								},
								{
									since: '0001-01-01',
									until: '1873-12-31',
									offset: 1,
									name: '西暦',
									narrow: 'AD',
									abbr: 'AD',
								},
								{
									since: '0000-12-31',
									until: -1 / 0,
									offset: 1,
									name: '紀元前',
									narrow: 'BC',
									abbr: 'BC',
								},
							],
							eraYearOrdinalRegex: /(元|\d+)年/,
							eraYearOrdinalParse: function (e, t) {
								return '元' === t[1] ? 1 : parseInt(t[1] || e, 10);
							},
							months:
								'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
							monthsShort:
								'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
							weekdays:
								'日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
							weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
							weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY/MM/DD',
								LL: 'YYYY年M月D日',
								LLL: 'YYYY年M月D日 HH:mm',
								LLLL: 'YYYY年M月D日 dddd HH:mm',
								l: 'YYYY/MM/DD',
								ll: 'YYYY年M月D日',
								lll: 'YYYY年M月D日 HH:mm',
								llll: 'YYYY年M月D日(ddd) HH:mm',
							},
							meridiemParse: /午前|午後/i,
							isPM: function (e) {
								return '午後' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? '午前' : '午後';
							},
							calendar: {
								sameDay: '[今日] LT',
								nextDay: '[明日] LT',
								nextWeek: function (e) {
									return e.week() !== this.week() ? '[来週]dddd LT' : 'dddd LT';
								},
								lastDay: '[昨日] LT',
								lastWeek: function (e) {
									return this.week() !== e.week() ? '[先週]dddd LT' : 'dddd LT';
								},
								sameElse: 'L',
							},
							dayOfMonthOrdinalParse: /\d{1,2}日/,
							ordinal: function (e, t) {
								switch (t) {
									case 'y':
										return 1 === e ? '元年' : e + '年';
									case 'd':
									case 'D':
									case 'DDD':
										return e + '日';
									default:
										return e;
								}
							},
							relativeTime: {
								future: '%s後',
								past: '%s前',
								s: '数秒',
								ss: '%d秒',
								m: '1分',
								mm: '%d分',
								h: '1時間',
								hh: '%d時間',
								d: '1日',
								dd: '%d日',
								M: '1ヶ月',
								MM: '%dヶ月',
								y: '1年',
								yy: '%d年',
							},
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('jv', {
							months:
								'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
							weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split(
								'_'
							),
							weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
							weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
							longDateFormat: {
								LT: 'HH.mm',
								LTS: 'HH.mm.ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY [pukul] HH.mm',
								LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
							},
							meridiemParse: /enjing|siyang|sonten|ndalu/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'enjing' === t
										? e
										: 'siyang' === t
										? 11 <= e
											? e
											: e + 12
										: 'sonten' === t || 'ndalu' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 11
									? 'enjing'
									: e < 15
									? 'siyang'
									: e < 19
									? 'sonten'
									: 'ndalu';
							},
							calendar: {
								sameDay: '[Dinten puniko pukul] LT',
								nextDay: '[Mbenjang pukul] LT',
								nextWeek: 'dddd [pukul] LT',
								lastDay: '[Kala wingi pukul] LT',
								lastWeek: 'dddd [kepengker pukul] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'wonten ing %s',
								past: '%s ingkang kepengker',
								s: 'sawetawis detik',
								ss: '%d detik',
								m: 'setunggal menit',
								mm: '%d menit',
								h: 'setunggal jam',
								hh: '%d jam',
								d: 'sedinten',
								dd: '%d dinten',
								M: 'sewulan',
								MM: '%d wulan',
								y: 'setaun',
								yy: '%d taun',
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ka', {
							months:
								'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(
									'_'
								),
							monthsShort:
								'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
							weekdays: {
								standalone:
									'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(
										'_'
									),
								format:
									'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(
										'_'
									),
								isFormat: /(წინა|შემდეგ)/,
							},
							weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
							weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[დღეს] LT[-ზე]',
								nextDay: '[ხვალ] LT[-ზე]',
								lastDay: '[გუშინ] LT[-ზე]',
								nextWeek: '[შემდეგ] dddd LT[-ზე]',
								lastWeek: '[წინა] dddd LT-ზე',
								sameElse: 'L',
							},
							relativeTime: {
								future: function (e) {
									return e.replace(
										/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/,
										function (e, t, n) {
											return 'ი' === n ? t + 'ში' : t + n + 'ში';
										}
									);
								},
								past: function (e) {
									return /(წამი|წუთი|საათი|დღე|თვე)/.test(e)
										? e.replace(/(ი|ე)$/, 'ის წინ')
										: /წელი/.test(e)
										? e.replace(/წელი$/, 'წლის წინ')
										: e;
								},
								s: 'რამდენიმე წამი',
								ss: '%d წამი',
								m: 'წუთი',
								mm: '%d წუთი',
								h: 'საათი',
								hh: '%d საათი',
								d: 'დღე',
								dd: '%d დღე',
								M: 'თვე',
								MM: '%d თვე',
								y: 'წელი',
								yy: '%d წელი',
							},
							dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
							ordinal: function (e) {
								return 0 === e
									? e
									: 1 === e
									? e + '-ლი'
									: e < 20 || (e <= 100 && e % 20 == 0) || e % 100 == 0
									? 'მე-' + e
									: e + '-ე';
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
							0: '-ші',
							1: '-ші',
							2: '-ші',
							3: '-ші',
							4: '-ші',
							5: '-ші',
							6: '-шы',
							7: '-ші',
							8: '-ші',
							9: '-шы',
							10: '-шы',
							20: '-шы',
							30: '-шы',
							40: '-шы',
							50: '-ші',
							60: '-шы',
							70: '-ші',
							80: '-ші',
							90: '-шы',
							100: '-ші',
						};
						e.defineLocale('kk', {
							months:
								'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(
									'_'
								),
							monthsShort:
								'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
							weekdays:
								'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(
									'_'
								),
							weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
							weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Бүгін сағат] LT',
								nextDay: '[Ертең сағат] LT',
								nextWeek: 'dddd [сағат] LT',
								lastDay: '[Кеше сағат] LT',
								lastWeek: '[Өткен аптаның] dddd [сағат] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s ішінде',
								past: '%s бұрын',
								s: 'бірнеше секунд',
								ss: '%d секунд',
								m: 'бір минут',
								mm: '%d минут',
								h: 'бір сағат',
								hh: '%d сағат',
								d: 'бір күн',
								dd: '%d күн',
								M: 'бір ай',
								MM: '%d ай',
								y: 'бір жыл',
								yy: '%d жыл',
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
							ordinal: function (e) {
								return e + (t[e] || t[e % 10] || t[100 <= e ? 100 : null]);
							},
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '១',
								2: '២',
								3: '៣',
								4: '៤',
								5: '៥',
								6: '៦',
								7: '៧',
								8: '៨',
								9: '៩',
								0: '០',
							},
							n = {
								'១': '1',
								'២': '2',
								'៣': '3',
								'៤': '4',
								'៥': '5',
								'៦': '6',
								'៧': '7',
								'៨': '8',
								'៩': '9',
								'០': '0',
							};
						e.defineLocale('km', {
							months:
								'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
									'_'
								),
							monthsShort:
								'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
									'_'
								),
							weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split(
								'_'
							),
							weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
							weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							meridiemParse: /ព្រឹក|ល្ងាច/,
							isPM: function (e) {
								return 'ល្ងាច' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'ព្រឹក' : 'ល្ងាច';
							},
							calendar: {
								sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
								nextDay: '[ស្អែក ម៉ោង] LT',
								nextWeek: 'dddd [ម៉ោង] LT',
								lastDay: '[ម្សិលមិញ ម៉ោង] LT',
								lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%sទៀត',
								past: '%sមុន',
								s: 'ប៉ុន្មានវិនាទី',
								ss: '%d វិនាទី',
								m: 'មួយនាទី',
								mm: '%d នាទី',
								h: 'មួយម៉ោង',
								hh: '%d ម៉ោង',
								d: 'មួយថ្ងៃ',
								dd: '%d ថ្ងៃ',
								M: 'មួយខែ',
								MM: '%d ខែ',
								y: 'មួយឆ្នាំ',
								yy: '%d ឆ្នាំ',
							},
							dayOfMonthOrdinalParse: /ទី\d{1,2}/,
							ordinal: 'ទី%d',
							preparse: function (e) {
								return e.replace(/[១២៣៤៥៦៧៨៩០]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '೧',
								2: '೨',
								3: '೩',
								4: '೪',
								5: '೫',
								6: '೬',
								7: '೭',
								8: '೮',
								9: '೯',
								0: '೦',
							},
							n = {
								'೧': '1',
								'೨': '2',
								'೩': '3',
								'೪': '4',
								'೫': '5',
								'೬': '6',
								'೭': '7',
								'೮': '8',
								'೯': '9',
								'೦': '0',
							};
						e.defineLocale('kn', {
							months:
								'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(
									'_'
								),
							monthsShort:
								'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(
									'_'
								),
							weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
							weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
							longDateFormat: {
								LT: 'A h:mm',
								LTS: 'A h:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm',
								LLLL: 'dddd, D MMMM YYYY, A h:mm',
							},
							calendar: {
								sameDay: '[ಇಂದು] LT',
								nextDay: '[ನಾಳೆ] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[ನಿನ್ನೆ] LT',
								lastWeek: '[ಕೊನೆಯ] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s ನಂತರ',
								past: '%s ಹಿಂದೆ',
								s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
								ss: '%d ಸೆಕೆಂಡುಗಳು',
								m: 'ಒಂದು ನಿಮಿಷ',
								mm: '%d ನಿಮಿಷ',
								h: 'ಒಂದು ಗಂಟೆ',
								hh: '%d ಗಂಟೆ',
								d: 'ಒಂದು ದಿನ',
								dd: '%d ದಿನ',
								M: 'ಒಂದು ತಿಂಗಳು',
								MM: '%d ತಿಂಗಳು',
								y: 'ಒಂದು ವರ್ಷ',
								yy: '%d ವರ್ಷ',
							},
							preparse: function (e) {
								return e.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'ರಾತ್ರಿ' === t
										? e < 4
											? e
											: e + 12
										: 'ಬೆಳಿಗ್ಗೆ' === t
										? e
										: 'ಮಧ್ಯಾಹ್ನ' === t
										? 10 <= e
											? e
											: e + 12
										: 'ಸಂಜೆ' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'ರಾತ್ರಿ'
									: e < 10
									? 'ಬೆಳಿಗ್ಗೆ'
									: e < 17
									? 'ಮಧ್ಯಾಹ್ನ'
									: e < 20
									? 'ಸಂಜೆ'
									: 'ರಾತ್ರಿ';
							},
							dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
							ordinal: function (e) {
								return e + 'ನೇ';
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ko', {
							months:
								'1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
							monthsShort:
								'1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
							weekdays:
								'일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
							weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
							weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
							longDateFormat: {
								LT: 'A h:mm',
								LTS: 'A h:mm:ss',
								L: 'YYYY.MM.DD.',
								LL: 'YYYY년 MMMM D일',
								LLL: 'YYYY년 MMMM D일 A h:mm',
								LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
								l: 'YYYY.MM.DD.',
								ll: 'YYYY년 MMMM D일',
								lll: 'YYYY년 MMMM D일 A h:mm',
								llll: 'YYYY년 MMMM D일 dddd A h:mm',
							},
							calendar: {
								sameDay: '오늘 LT',
								nextDay: '내일 LT',
								nextWeek: 'dddd LT',
								lastDay: '어제 LT',
								lastWeek: '지난주 dddd LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s 후',
								past: '%s 전',
								s: '몇 초',
								ss: '%d초',
								m: '1분',
								mm: '%d분',
								h: '한 시간',
								hh: '%d시간',
								d: '하루',
								dd: '%d일',
								M: '한 달',
								MM: '%d달',
								y: '일 년',
								yy: '%d년',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'DDD':
										return e + '일';
									case 'M':
										return e + '월';
									case 'w':
									case 'W':
										return e + '주';
									default:
										return e;
								}
							},
							meridiemParse: /오전|오후/,
							isPM: function (e) {
								return '오후' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? '오전' : '오후';
							},
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '١',
								2: '٢',
								3: '٣',
								4: '٤',
								5: '٥',
								6: '٦',
								7: '٧',
								8: '٨',
								9: '٩',
								0: '٠',
							},
							n = {
								'١': '1',
								'٢': '2',
								'٣': '3',
								'٤': '4',
								'٥': '5',
								'٦': '6',
								'٧': '7',
								'٨': '8',
								'٩': '9',
								'٠': '0',
							},
							i = [
								'کانونی دووەم',
								'شوبات',
								'ئازار',
								'نیسان',
								'ئایار',
								'حوزەیران',
								'تەمموز',
								'ئاب',
								'ئەیلوول',
								'تشرینی یەكەم',
								'تشرینی دووەم',
								'كانونی یەکەم',
							];
						e.defineLocale('ku', {
							months: i,
							monthsShort: i,
							weekdays:
								'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(
									'_'
								),
							weekdaysShort:
								'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split(
									'_'
								),
							weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							meridiemParse: /ئێواره‌|به‌یانی/,
							isPM: function (e) {
								return /ئێواره‌/.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'به‌یانی' : 'ئێواره‌';
							},
							calendar: {
								sameDay: '[ئه‌مرۆ كاتژمێر] LT',
								nextDay: '[به‌یانی كاتژمێر] LT',
								nextWeek: 'dddd [كاتژمێر] LT',
								lastDay: '[دوێنێ كاتژمێر] LT',
								lastWeek: 'dddd [كاتژمێر] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'له‌ %s',
								past: '%s',
								s: 'چه‌ند چركه‌یه‌ك',
								ss: 'چركه‌ %d',
								m: 'یه‌ك خوله‌ك',
								mm: '%d خوله‌ك',
								h: 'یه‌ك كاتژمێر',
								hh: '%d كاتژمێر',
								d: 'یه‌ك ڕۆژ',
								dd: '%d ڕۆژ',
								M: 'یه‌ك مانگ',
								MM: '%d مانگ',
								y: 'یه‌ك ساڵ',
								yy: '%d ساڵ',
							},
							preparse: function (e) {
								return e
									.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (e) {
										return n[e];
									})
									.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e
									.replace(/\d/g, function (e) {
										return t[e];
									})
									.replace(/,/g, '،');
							},
							week: { dow: 6, doy: 12 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
							0: '-чү',
							1: '-чи',
							2: '-чи',
							3: '-чү',
							4: '-чү',
							5: '-чи',
							6: '-чы',
							7: '-чи',
							8: '-чи',
							9: '-чу',
							10: '-чу',
							20: '-чы',
							30: '-чу',
							40: '-чы',
							50: '-чү',
							60: '-чы',
							70: '-чи',
							80: '-чи',
							90: '-чу',
							100: '-чү',
						};
						e.defineLocale('ky', {
							months:
								'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
									'_'
								),
							monthsShort:
								'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
							weekdays:
								'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(
									'_'
								),
							weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
							weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Бүгүн саат] LT',
								nextDay: '[Эртең саат] LT',
								nextWeek: 'dddd [саат] LT',
								lastDay: '[Кечээ саат] LT',
								lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s ичинде',
								past: '%s мурун',
								s: 'бирнече секунд',
								ss: '%d секунд',
								m: 'бир мүнөт',
								mm: '%d мүнөт',
								h: 'бир саат',
								hh: '%d саат',
								d: 'бир күн',
								dd: '%d күн',
								M: 'бир ай',
								MM: '%d ай',
								y: 'бир жыл',
								yy: '%d жыл',
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
							ordinal: function (e) {
								return e + (t[e] || t[e % 10] || t[100 <= e ? 100 : null]);
							},
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, i) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							var r = {
								m: ['eng Minutt', 'enger Minutt'],
								h: ['eng Stonn', 'enger Stonn'],
								d: ['een Dag', 'engem Dag'],
								M: ['ee Mount', 'engem Mount'],
								y: ['ee Joer', 'engem Joer'],
							};
							return t ? r[n][0] : r[n][1];
						}
						function n(e) {
							if (((e = parseInt(e, 10)), isNaN(e))) return !1;
							if (e < 0) return !0;
							if (e < 10) return 4 <= e && e <= 7;
							if (e < 100) {
								var t = e % 10;
								return 0 == t ? n(e / 10) : n(t);
							}
							if (e < 1e4) {
								for (; 10 <= e; ) e /= 10;
								return n(e);
							}
							return n((e /= 1e3));
						}
						i(0).defineLocale('lb', {
							months:
								'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(
									'_'
								),
							monthsShort:
								'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(
									'_'
								),
							weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
							weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm [Auer]',
								LTS: 'H:mm:ss [Auer]',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY H:mm [Auer]',
								LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',
							},
							calendar: {
								sameDay: '[Haut um] LT',
								sameElse: 'L',
								nextDay: '[Muer um] LT',
								nextWeek: 'dddd [um] LT',
								lastDay: '[Gëschter um] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 2:
										case 4:
											return '[Leschten] dddd [um] LT';
										default:
											return '[Leschte] dddd [um] LT';
									}
								},
							},
							relativeTime: {
								future: function (e) {
									return n(e.substr(0, e.indexOf(' '))) ? 'a ' + e : 'an ' + e;
								},
								past: function (e) {
									return n(e.substr(0, e.indexOf(' ')))
										? 'viru ' + e
										: 'virun ' + e;
								},
								s: 'e puer Sekonnen',
								ss: '%d Sekonnen',
								m: e,
								mm: '%d Minutten',
								h: e,
								hh: '%d Stonnen',
								d: e,
								dd: '%d Deeg',
								M: e,
								MM: '%d Méint',
								y: e,
								yy: '%d Joer',
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('lo', {
							months:
								'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
									'_'
								),
							monthsShort:
								'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
									'_'
								),
							weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
							weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
							weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'ວັນdddd D MMMM YYYY HH:mm',
							},
							meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
							isPM: function (e) {
								return 'ຕອນແລງ' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'ຕອນເຊົ້າ' : 'ຕອນແລງ';
							},
							calendar: {
								sameDay: '[ມື້ນີ້ເວລາ] LT',
								nextDay: '[ມື້ອື່ນເວລາ] LT',
								nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
								lastDay: '[ມື້ວານນີ້ເວລາ] LT',
								lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'ອີກ %s',
								past: '%sຜ່ານມາ',
								s: 'ບໍ່ເທົ່າໃດວິນາທີ',
								ss: '%d ວິນາທີ',
								m: '1 ນາທີ',
								mm: '%d ນາທີ',
								h: '1 ຊົ່ວໂມງ',
								hh: '%d ຊົ່ວໂມງ',
								d: '1 ມື້',
								dd: '%d ມື້',
								M: '1 ເດືອນ',
								MM: '%d ເດືອນ',
								y: '1 ປີ',
								yy: '%d ປີ',
							},
							dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
							ordinal: function (e) {
								return 'ທີ່' + e;
							},
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
							ss: 'sekundė_sekundžių_sekundes',
							m: 'minutė_minutės_minutę',
							mm: 'minutės_minučių_minutes',
							h: 'valanda_valandos_valandą',
							hh: 'valandos_valandų_valandas',
							d: 'diena_dienos_dieną',
							dd: 'dienos_dienų_dienas',
							M: 'mėnuo_mėnesio_mėnesį',
							MM: 'mėnesiai_mėnesių_mėnesius',
							y: 'metai_metų_metus',
							yy: 'metai_metų_metus',
						};
						function o(e, t, n, i) {
							return t ? s(n)[0] : i ? s(n)[1] : s(n)[2];
						}
						function a(e) {
							return e % 10 == 0 || (10 < e && e < 20);
						}
						function s(e) {
							return t[e].split('_');
						}
						function n(e, t, n, i) {
							var r = e + ' ';
							return 1 === e
								? r + o(0, t, n[0], i)
								: t
								? r + (a(e) ? s(n)[1] : s(n)[0])
								: i
								? r + s(n)[1]
								: r + (a(e) ? s(n)[1] : s(n)[2]);
						}
						e.defineLocale('lt', {
							months: {
								format:
									'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(
										'_'
									),
								standalone:
									'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(
										'_'
									),
								isFormat:
									/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/,
							},
							monthsShort:
								'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
							weekdays: {
								format:
									'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(
										'_'
									),
								standalone:
									'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(
										'_'
									),
								isFormat: /dddd HH:mm/,
							},
							weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
							weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY-MM-DD',
								LL: 'YYYY [m.] MMMM D [d.]',
								LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
								LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
								l: 'YYYY-MM-DD',
								ll: 'YYYY [m.] MMMM D [d.]',
								lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
								llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',
							},
							calendar: {
								sameDay: '[Šiandien] LT',
								nextDay: '[Rytoj] LT',
								nextWeek: 'dddd LT',
								lastDay: '[Vakar] LT',
								lastWeek: '[Praėjusį] dddd LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'po %s',
								past: 'prieš %s',
								s: function (e, t, n, i) {
									return t
										? 'kelios sekundės'
										: i
										? 'kelių sekundžių'
										: 'kelias sekundes';
								},
								ss: n,
								m: o,
								mm: n,
								h: o,
								hh: n,
								d: o,
								dd: n,
								M: o,
								MM: n,
								y: o,
								yy: n,
							},
							dayOfMonthOrdinalParse: /\d{1,2}-oji/,
							ordinal: function (e) {
								return e + '-oji';
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var i = {
							ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
							m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
							mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
							h: 'stundas_stundām_stunda_stundas'.split('_'),
							hh: 'stundas_stundām_stunda_stundas'.split('_'),
							d: 'dienas_dienām_diena_dienas'.split('_'),
							dd: 'dienas_dienām_diena_dienas'.split('_'),
							M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
							MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
							y: 'gada_gadiem_gads_gadi'.split('_'),
							yy: 'gada_gadiem_gads_gadi'.split('_'),
						};
						function r(e, t, n) {
							return n
								? t % 10 == 1 && t % 100 != 11
									? e[2]
									: e[3]
								: t % 10 == 1 && t % 100 != 11
								? e[0]
								: e[1];
						}
						function t(e, t, n) {
							return e + ' ' + r(i[n], e, t);
						}
						function n(e, t, n) {
							return r(i[n], e, t);
						}
						e.defineLocale('lv', {
							months:
								'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(
									'_'
								),
							monthsShort:
								'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
							weekdays:
								'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(
									'_'
								),
							weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
							weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY.',
								LL: 'YYYY. [gada] D. MMMM',
								LLL: 'YYYY. [gada] D. MMMM, HH:mm',
								LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',
							},
							calendar: {
								sameDay: '[Šodien pulksten] LT',
								nextDay: '[Rīt pulksten] LT',
								nextWeek: 'dddd [pulksten] LT',
								lastDay: '[Vakar pulksten] LT',
								lastWeek: '[Pagājušā] dddd [pulksten] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'pēc %s',
								past: 'pirms %s',
								s: function (e, t) {
									return t ? 'dažas sekundes' : 'dažām sekundēm';
								},
								ss: t,
								m: n,
								mm: t,
								h: n,
								hh: t,
								d: n,
								dd: t,
								M: n,
								MM: t,
								y: n,
								yy: t,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var r = {
							words: {
								ss: ['sekund', 'sekunda', 'sekundi'],
								m: ['jedan minut', 'jednog minuta'],
								mm: ['minut', 'minuta', 'minuta'],
								h: ['jedan sat', 'jednog sata'],
								hh: ['sat', 'sata', 'sati'],
								dd: ['dan', 'dana', 'dana'],
								MM: ['mjesec', 'mjeseca', 'mjeseci'],
								yy: ['godina', 'godine', 'godina'],
							},
							correctGrammaticalCase: function (e, t) {
								return 1 === e ? t[0] : 2 <= e && e <= 4 ? t[1] : t[2];
							},
							translate: function (e, t, n) {
								var i = r.words[n];
								return 1 === n.length
									? t
										? i[0]
										: i[1]
									: e + ' ' + r.correctGrammaticalCase(e, i);
							},
						};
						e.defineLocale('me', {
							months:
								'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
									'_'
								),
							monthsShort:
								'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
									'_'
								),
							weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
							weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY H:mm',
								LLLL: 'dddd, D. MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[danas u] LT',
								nextDay: '[sjutra u] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[u] [nedjelju] [u] LT';
										case 3:
											return '[u] [srijedu] [u] LT';
										case 6:
											return '[u] [subotu] [u] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[u] dddd [u] LT';
									}
								},
								lastDay: '[juče u] LT',
								lastWeek: function () {
									return [
										'[prošle] [nedjelje] [u] LT',
										'[prošlog] [ponedjeljka] [u] LT',
										'[prošlog] [utorka] [u] LT',
										'[prošle] [srijede] [u] LT',
										'[prošlog] [četvrtka] [u] LT',
										'[prošlog] [petka] [u] LT',
										'[prošle] [subote] [u] LT',
									][this.day()];
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'za %s',
								past: 'prije %s',
								s: 'nekoliko sekundi',
								ss: r.translate,
								m: r.translate,
								mm: r.translate,
								h: r.translate,
								hh: r.translate,
								d: 'dan',
								dd: r.translate,
								M: 'mjesec',
								MM: r.translate,
								y: 'godinu',
								yy: r.translate,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('mi', {
							months:
								'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(
									'_'
								),
							monthsShort:
								'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(
									'_'
								),
							monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
							monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
							monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
							monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
							weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split(
								'_'
							),
							weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
							weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY [i] HH:mm',
								LLLL: 'dddd, D MMMM YYYY [i] HH:mm',
							},
							calendar: {
								sameDay: '[i teie mahana, i] LT',
								nextDay: '[apopo i] LT',
								nextWeek: 'dddd [i] LT',
								lastDay: '[inanahi i] LT',
								lastWeek: 'dddd [whakamutunga i] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'i roto i %s',
								past: '%s i mua',
								s: 'te hēkona ruarua',
								ss: '%d hēkona',
								m: 'he meneti',
								mm: '%d meneti',
								h: 'te haora',
								hh: '%d haora',
								d: 'he ra',
								dd: '%d ra',
								M: 'he marama',
								MM: '%d marama',
								y: 'he tau',
								yy: '%d tau',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('mk', {
							months:
								'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(
									'_'
								),
							monthsShort:
								'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
							weekdays:
								'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(
									'_'
								),
							weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
							weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'D.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY H:mm',
								LLLL: 'dddd, D MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[Денес во] LT',
								nextDay: '[Утре во] LT',
								nextWeek: '[Во] dddd [во] LT',
								lastDay: '[Вчера во] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 0:
										case 3:
										case 6:
											return '[Изминатата] dddd [во] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[Изминатиот] dddd [во] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'за %s',
								past: 'пред %s',
								s: 'неколку секунди',
								ss: '%d секунди',
								m: 'една минута',
								mm: '%d минути',
								h: 'еден час',
								hh: '%d часа',
								d: 'еден ден',
								dd: '%d дена',
								M: 'еден месец',
								MM: '%d месеци',
								y: 'една година',
								yy: '%d години',
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
							ordinal: function (e) {
								var t = e % 10,
									n = e % 100;
								return 0 === e
									? e + '-ев'
									: 0 == n
									? e + '-ен'
									: 10 < n && n < 20
									? e + '-ти'
									: 1 == t
									? e + '-ви'
									: 2 == t
									? e + '-ри'
									: 7 == t || 8 == t
									? e + '-ми'
									: e + '-ти';
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ml', {
							months:
								'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(
									'_'
								),
							monthsShort:
								'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(
									'_'
								),
							weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split(
								'_'
							),
							weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
							longDateFormat: {
								LT: 'A h:mm -നു',
								LTS: 'A h:mm:ss -നു',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm -നു',
								LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',
							},
							calendar: {
								sameDay: '[ഇന്ന്] LT',
								nextDay: '[നാളെ] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[ഇന്നലെ] LT',
								lastWeek: '[കഴിഞ്ഞ] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s കഴിഞ്ഞ്',
								past: '%s മുൻപ്',
								s: 'അൽപ നിമിഷങ്ങൾ',
								ss: '%d സെക്കൻഡ്',
								m: 'ഒരു മിനിറ്റ്',
								mm: '%d മിനിറ്റ്',
								h: 'ഒരു മണിക്കൂർ',
								hh: '%d മണിക്കൂർ',
								d: 'ഒരു ദിവസം',
								dd: '%d ദിവസം',
								M: 'ഒരു മാസം',
								MM: '%d മാസം',
								y: 'ഒരു വർഷം',
								yy: '%d വർഷം',
							},
							meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									('രാത്രി' === t && 4 <= e) ||
									'ഉച്ച കഴിഞ്ഞ്' === t ||
									'വൈകുന്നേരം' === t
										? e + 12
										: e
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'രാത്രി'
									: e < 12
									? 'രാവിലെ'
									: e < 17
									? 'ഉച്ച കഴിഞ്ഞ്'
									: e < 20
									? 'വൈകുന്നേരം'
									: 'രാത്രി';
							},
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							switch (n) {
								case 's':
									return t ? 'хэдхэн секунд' : 'хэдхэн секундын';
								case 'ss':
									return e + (t ? ' секунд' : ' секундын');
								case 'm':
								case 'mm':
									return e + (t ? ' минут' : ' минутын');
								case 'h':
								case 'hh':
									return e + (t ? ' цаг' : ' цагийн');
								case 'd':
								case 'dd':
									return e + (t ? ' өдөр' : ' өдрийн');
								case 'M':
								case 'MM':
									return e + (t ? ' сар' : ' сарын');
								case 'y':
								case 'yy':
									return e + (t ? ' жил' : ' жилийн');
								default:
									return e;
							}
						}
						n(0).defineLocale('mn', {
							months:
								'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(
									'_'
								),
							monthsShort:
								'1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
							weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
							weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY-MM-DD',
								LL: 'YYYY оны MMMMын D',
								LLL: 'YYYY оны MMMMын D HH:mm',
								LLLL: 'dddd, YYYY оны MMMMын D HH:mm',
							},
							meridiemParse: /ҮӨ|ҮХ/i,
							isPM: function (e) {
								return 'ҮХ' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'ҮӨ' : 'ҮХ';
							},
							calendar: {
								sameDay: '[Өнөөдөр] LT',
								nextDay: '[Маргааш] LT',
								nextWeek: '[Ирэх] dddd LT',
								lastDay: '[Өчигдөр] LT',
								lastWeek: '[Өнгөрсөн] dddd LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s дараа',
								past: '%s өмнө',
								s: e,
								ss: e,
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: e,
								dd: e,
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'DDD':
										return e + ' өдөр';
									default:
										return e;
								}
							},
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '१',
								2: '२',
								3: '३',
								4: '४',
								5: '५',
								6: '६',
								7: '७',
								8: '८',
								9: '९',
								0: '०',
							},
							n = {
								'१': '1',
								'२': '2',
								'३': '3',
								'४': '4',
								'५': '5',
								'६': '6',
								'७': '7',
								'८': '8',
								'९': '9',
								'०': '0',
							};
						function i(e, t, n, i) {
							var r = '';
							if (t)
								switch (n) {
									case 's':
										r = 'काही सेकंद';
										break;
									case 'ss':
										r = '%d सेकंद';
										break;
									case 'm':
										r = 'एक मिनिट';
										break;
									case 'mm':
										r = '%d मिनिटे';
										break;
									case 'h':
										r = 'एक तास';
										break;
									case 'hh':
										r = '%d तास';
										break;
									case 'd':
										r = 'एक दिवस';
										break;
									case 'dd':
										r = '%d दिवस';
										break;
									case 'M':
										r = 'एक महिना';
										break;
									case 'MM':
										r = '%d महिने';
										break;
									case 'y':
										r = 'एक वर्ष';
										break;
									case 'yy':
										r = '%d वर्षे';
								}
							else
								switch (n) {
									case 's':
										r = 'काही सेकंदां';
										break;
									case 'ss':
										r = '%d सेकंदां';
										break;
									case 'm':
										r = 'एका मिनिटा';
										break;
									case 'mm':
										r = '%d मिनिटां';
										break;
									case 'h':
										r = 'एका तासा';
										break;
									case 'hh':
										r = '%d तासां';
										break;
									case 'd':
										r = 'एका दिवसा';
										break;
									case 'dd':
										r = '%d दिवसां';
										break;
									case 'M':
										r = 'एका महिन्या';
										break;
									case 'MM':
										r = '%d महिन्यां';
										break;
									case 'y':
										r = 'एका वर्षा';
										break;
									case 'yy':
										r = '%d वर्षां';
								}
							return r.replace(/%d/i, e);
						}
						e.defineLocale('mr', {
							months:
								'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
									'_'
								),
							monthsShort:
								'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split(
									'_'
								),
							weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
							weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
							longDateFormat: {
								LT: 'A h:mm वाजता',
								LTS: 'A h:mm:ss वाजता',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm वाजता',
								LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',
							},
							calendar: {
								sameDay: '[आज] LT',
								nextDay: '[उद्या] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[काल] LT',
								lastWeek: '[मागील] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%sमध्ये',
								past: '%sपूर्वी',
								s: i,
								ss: i,
								m: i,
								mm: i,
								h: i,
								hh: i,
								d: i,
								dd: i,
								M: i,
								MM: i,
								y: i,
								yy: i,
							},
							preparse: function (e) {
								return e.replace(/[१२३४५६७८९०]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'पहाटे' === t || 'सकाळी' === t
										? e
										: 'दुपारी' === t || 'सायंकाळी' === t || 'रात्री' === t
										? 12 <= e
											? e
											: e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return 0 <= e && e < 6
									? 'पहाटे'
									: e < 12
									? 'सकाळी'
									: e < 17
									? 'दुपारी'
									: e < 20
									? 'सायंकाळी'
									: 'रात्री';
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ms', {
							months:
								'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
							weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
							weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
							weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
							longDateFormat: {
								LT: 'HH.mm',
								LTS: 'HH.mm.ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY [pukul] HH.mm',
								LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
							},
							meridiemParse: /pagi|tengahari|petang|malam/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'pagi' === t
										? e
										: 'tengahari' === t
										? 11 <= e
											? e
											: e + 12
										: 'petang' === t || 'malam' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 11
									? 'pagi'
									: e < 15
									? 'tengahari'
									: e < 19
									? 'petang'
									: 'malam';
							},
							calendar: {
								sameDay: '[Hari ini pukul] LT',
								nextDay: '[Esok pukul] LT',
								nextWeek: 'dddd [pukul] LT',
								lastDay: '[Kelmarin pukul] LT',
								lastWeek: 'dddd [lepas pukul] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'dalam %s',
								past: '%s yang lepas',
								s: 'beberapa saat',
								ss: '%d saat',
								m: 'seminit',
								mm: '%d minit',
								h: 'sejam',
								hh: '%d jam',
								d: 'sehari',
								dd: '%d hari',
								M: 'sebulan',
								MM: '%d bulan',
								y: 'setahun',
								yy: '%d tahun',
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ms-my', {
							months:
								'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
							weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
							weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
							weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
							longDateFormat: {
								LT: 'HH.mm',
								LTS: 'HH.mm.ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY [pukul] HH.mm',
								LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
							},
							meridiemParse: /pagi|tengahari|petang|malam/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'pagi' === t
										? e
										: 'tengahari' === t
										? 11 <= e
											? e
											: e + 12
										: 'petang' === t || 'malam' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 11
									? 'pagi'
									: e < 15
									? 'tengahari'
									: e < 19
									? 'petang'
									: 'malam';
							},
							calendar: {
								sameDay: '[Hari ini pukul] LT',
								nextDay: '[Esok pukul] LT',
								nextWeek: 'dddd [pukul] LT',
								lastDay: '[Kelmarin pukul] LT',
								lastWeek: 'dddd [lepas pukul] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'dalam %s',
								past: '%s yang lepas',
								s: 'beberapa saat',
								ss: '%d saat',
								m: 'seminit',
								mm: '%d minit',
								h: 'sejam',
								hh: '%d jam',
								d: 'sehari',
								dd: '%d hari',
								M: 'sebulan',
								MM: '%d bulan',
								y: 'setahun',
								yy: '%d tahun',
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('mt', {
							months:
								'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(
									'_'
								),
							monthsShort:
								'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
							weekdays:
								'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(
									'_'
								),
							weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
							weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Illum fil-]LT',
								nextDay: '[Għada fil-]LT',
								nextWeek: 'dddd [fil-]LT',
								lastDay: '[Il-bieraħ fil-]LT',
								lastWeek: 'dddd [li għadda] [fil-]LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'f’ %s',
								past: '%s ilu',
								s: 'ftit sekondi',
								ss: '%d sekondi',
								m: 'minuta',
								mm: '%d minuti',
								h: 'siegħa',
								hh: '%d siegħat',
								d: 'ġurnata',
								dd: '%d ġranet',
								M: 'xahar',
								MM: '%d xhur',
								y: 'sena',
								yy: '%d sni',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '၁',
								2: '၂',
								3: '၃',
								4: '၄',
								5: '၅',
								6: '၆',
								7: '၇',
								8: '၈',
								9: '၉',
								0: '၀',
							},
							n = {
								'၁': '1',
								'၂': '2',
								'၃': '3',
								'၄': '4',
								'၅': '5',
								'၆': '6',
								'၇': '7',
								'၈': '8',
								'၉': '9',
								'၀': '0',
							};
						e.defineLocale('my', {
							months:
								'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(
									'_'
								),
							monthsShort:
								'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
							weekdays:
								'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(
									'_'
								),
							weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
							weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[ယနေ.] LT [မှာ]',
								nextDay: '[မနက်ဖြန်] LT [မှာ]',
								nextWeek: 'dddd LT [မှာ]',
								lastDay: '[မနေ.က] LT [မှာ]',
								lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'လာမည့် %s မှာ',
								past: 'လွန်ခဲ့သော %s က',
								s: 'စက္ကန်.အနည်းငယ်',
								ss: '%d စက္ကန့်',
								m: 'တစ်မိနစ်',
								mm: '%d မိနစ်',
								h: 'တစ်နာရီ',
								hh: '%d နာရီ',
								d: 'တစ်ရက်',
								dd: '%d ရက်',
								M: 'တစ်လ',
								MM: '%d လ',
								y: 'တစ်နှစ်',
								yy: '%d နှစ်',
							},
							preparse: function (e) {
								return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('nb', {
							months:
								'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
									'_'
								),
							monthsShort:
								'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
							weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
							weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY [kl.] HH:mm',
								LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
							},
							calendar: {
								sameDay: '[i dag kl.] LT',
								nextDay: '[i morgen kl.] LT',
								nextWeek: 'dddd [kl.] LT',
								lastDay: '[i går kl.] LT',
								lastWeek: '[forrige] dddd [kl.] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'om %s',
								past: '%s siden',
								s: 'noen sekunder',
								ss: '%d sekunder',
								m: 'ett minutt',
								mm: '%d minutter',
								h: 'en time',
								hh: '%d timer',
								d: 'en dag',
								dd: '%d dager',
								w: 'en uke',
								ww: '%d uker',
								M: 'en måned',
								MM: '%d måneder',
								y: 'ett år',
								yy: '%d år',
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '१',
								2: '२',
								3: '३',
								4: '४',
								5: '५',
								6: '६',
								7: '७',
								8: '८',
								9: '९',
								0: '०',
							},
							n = {
								'१': '1',
								'२': '2',
								'३': '3',
								'४': '4',
								'५': '5',
								'६': '6',
								'७': '7',
								'८': '8',
								'९': '9',
								'०': '0',
							};
						e.defineLocale('ne', {
							months:
								'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(
									'_'
								),
							monthsShort:
								'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(
									'_'
								),
							weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split(
								'_'
							),
							weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'Aको h:mm बजे',
								LTS: 'Aको h:mm:ss बजे',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, Aको h:mm बजे',
								LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',
							},
							preparse: function (e) {
								return e.replace(/[१२३४५६७८९०]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'राति' === t
										? e < 4
											? e
											: e + 12
										: 'बिहान' === t
										? e
										: 'दिउँसो' === t
										? 10 <= e
											? e
											: e + 12
										: 'साँझ' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 3
									? 'राति'
									: e < 12
									? 'बिहान'
									: e < 16
									? 'दिउँसो'
									: e < 20
									? 'साँझ'
									: 'राति';
							},
							calendar: {
								sameDay: '[आज] LT',
								nextDay: '[भोलि] LT',
								nextWeek: '[आउँदो] dddd[,] LT',
								lastDay: '[हिजो] LT',
								lastWeek: '[गएको] dddd[,] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%sमा',
								past: '%s अगाडि',
								s: 'केही क्षण',
								ss: '%d सेकेण्ड',
								m: 'एक मिनेट',
								mm: '%d मिनेट',
								h: 'एक घण्टा',
								hh: '%d घण्टा',
								d: 'एक दिन',
								dd: '%d दिन',
								M: 'एक महिना',
								MM: '%d महिना',
								y: 'एक बर्ष',
								yy: '%d बर्ष',
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n =
								'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
									'_'
								),
							i = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
							t = [
								/^jan/i,
								/^feb/i,
								/^maart|mrt.?$/i,
								/^apr/i,
								/^mei$/i,
								/^jun[i.]?$/i,
								/^jul[i.]?$/i,
								/^aug/i,
								/^sep/i,
								/^okt/i,
								/^nov/i,
								/^dec/i,
							],
							r =
								/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
						e.defineLocale('nl', {
							months:
								'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
									'_'
								),
							monthsShort: function (e, t) {
								return e ? (/-MMM-/.test(t) ? i : n)[e.month()] : n;
							},
							monthsRegex: r,
							monthsShortRegex: r,
							monthsStrictRegex:
								/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
							monthsShortStrictRegex:
								/^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
							monthsParse: t,
							longMonthsParse: t,
							shortMonthsParse: t,
							weekdays:
								'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
									'_'
								),
							weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
							weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD-MM-YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[vandaag om] LT',
								nextDay: '[morgen om] LT',
								nextWeek: 'dddd [om] LT',
								lastDay: '[gisteren om] LT',
								lastWeek: '[afgelopen] dddd [om] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'over %s',
								past: '%s geleden',
								s: 'een paar seconden',
								ss: '%d seconden',
								m: 'één minuut',
								mm: '%d minuten',
								h: 'één uur',
								hh: '%d uur',
								d: 'één dag',
								dd: '%d dagen',
								w: 'één week',
								ww: '%d weken',
								M: 'één maand',
								MM: '%d maanden',
								y: 'één jaar',
								yy: '%d jaar',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
							ordinal: function (e) {
								return e + (1 === e || 8 === e || 20 <= e ? 'ste' : 'de');
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n =
								'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
									'_'
								),
							i = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
							t = [
								/^jan/i,
								/^feb/i,
								/^maart|mrt.?$/i,
								/^apr/i,
								/^mei$/i,
								/^jun[i.]?$/i,
								/^jul[i.]?$/i,
								/^aug/i,
								/^sep/i,
								/^okt/i,
								/^nov/i,
								/^dec/i,
							],
							r =
								/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
						e.defineLocale('nl-be', {
							months:
								'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
									'_'
								),
							monthsShort: function (e, t) {
								return e ? (/-MMM-/.test(t) ? i : n)[e.month()] : n;
							},
							monthsRegex: r,
							monthsShortRegex: r,
							monthsStrictRegex:
								/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
							monthsShortStrictRegex:
								/^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
							monthsParse: t,
							longMonthsParse: t,
							shortMonthsParse: t,
							weekdays:
								'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
									'_'
								),
							weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
							weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[vandaag om] LT',
								nextDay: '[morgen om] LT',
								nextWeek: 'dddd [om] LT',
								lastDay: '[gisteren om] LT',
								lastWeek: '[afgelopen] dddd [om] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'over %s',
								past: '%s geleden',
								s: 'een paar seconden',
								ss: '%d seconden',
								m: 'één minuut',
								mm: '%d minuten',
								h: 'één uur',
								hh: '%d uur',
								d: 'één dag',
								dd: '%d dagen',
								M: 'één maand',
								MM: '%d maanden',
								y: 'één jaar',
								yy: '%d jaar',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
							ordinal: function (e) {
								return e + (1 === e || 8 === e || 20 <= e ? 'ste' : 'de');
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('nn', {
							months:
								'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
									'_'
								),
							monthsShort:
								'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
							weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),
							weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY [kl.] H:mm',
								LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
							},
							calendar: {
								sameDay: '[I dag klokka] LT',
								nextDay: '[I morgon klokka] LT',
								nextWeek: 'dddd [klokka] LT',
								lastDay: '[I går klokka] LT',
								lastWeek: '[Føregåande] dddd [klokka] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'om %s',
								past: '%s sidan',
								s: 'nokre sekund',
								ss: '%d sekund',
								m: 'eit minutt',
								mm: '%d minutt',
								h: 'ein time',
								hh: '%d timar',
								d: 'ein dag',
								dd: '%d dagar',
								w: 'ei veke',
								ww: '%d veker',
								M: 'ein månad',
								MM: '%d månader',
								y: 'eit år',
								yy: '%d år',
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('oc-lnc', {
							months: {
								standalone:
									'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(
										'_'
									),
								format:
									"de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split(
										'_'
									),
								isFormat: /D[oD]?(\s)+MMMM/,
							},
							monthsShort:
								'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(
									'_'
								),
							weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),
							weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM [de] YYYY',
								ll: 'D MMM YYYY',
								LLL: 'D MMMM [de] YYYY [a] H:mm',
								lll: 'D MMM YYYY, H:mm',
								LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',
								llll: 'ddd D MMM YYYY, H:mm',
							},
							calendar: {
								sameDay: '[uèi a] LT',
								nextDay: '[deman a] LT',
								nextWeek: 'dddd [a] LT',
								lastDay: '[ièr a] LT',
								lastWeek: 'dddd [passat a] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: "d'aquí %s",
								past: 'fa %s',
								s: 'unas segondas',
								ss: '%d segondas',
								m: 'una minuta',
								mm: '%d minutas',
								h: 'una ora',
								hh: '%d oras',
								d: 'un jorn',
								dd: '%d jorns',
								M: 'un mes',
								MM: '%d meses',
								y: 'un an',
								yy: '%d ans',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
							ordinal: function (e, t) {
								return (
									e +
									('w' !== t && 'W' !== t
										? 1 === e
											? 'r'
											: 2 === e
											? 'n'
											: 3 === e
											? 'r'
											: 4 === e
											? 't'
											: 'è'
										: 'a')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '੧',
								2: '੨',
								3: '੩',
								4: '੪',
								5: '੫',
								6: '੬',
								7: '੭',
								8: '੮',
								9: '੯',
								0: '੦',
							},
							n = {
								'੧': '1',
								'੨': '2',
								'੩': '3',
								'੪': '4',
								'੫': '5',
								'੬': '6',
								'੭': '7',
								'੮': '8',
								'੯': '9',
								'੦': '0',
							};
						e.defineLocale('pa-in', {
							months:
								'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
									'_'
								),
							monthsShort:
								'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
									'_'
								),
							weekdays:
								'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(
									'_'
								),
							weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
							weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
							longDateFormat: {
								LT: 'A h:mm ਵਜੇ',
								LTS: 'A h:mm:ss ਵਜੇ',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
								LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',
							},
							calendar: {
								sameDay: '[ਅਜ] LT',
								nextDay: '[ਕਲ] LT',
								nextWeek: '[ਅਗਲਾ] dddd, LT',
								lastDay: '[ਕਲ] LT',
								lastWeek: '[ਪਿਛਲੇ] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s ਵਿੱਚ',
								past: '%s ਪਿਛਲੇ',
								s: 'ਕੁਝ ਸਕਿੰਟ',
								ss: '%d ਸਕਿੰਟ',
								m: 'ਇਕ ਮਿੰਟ',
								mm: '%d ਮਿੰਟ',
								h: 'ਇੱਕ ਘੰਟਾ',
								hh: '%d ਘੰਟੇ',
								d: 'ਇੱਕ ਦਿਨ',
								dd: '%d ਦਿਨ',
								M: 'ਇੱਕ ਮਹੀਨਾ',
								MM: '%d ਮਹੀਨੇ',
								y: 'ਇੱਕ ਸਾਲ',
								yy: '%d ਸਾਲ',
							},
							preparse: function (e) {
								return e.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'ਰਾਤ' === t
										? e < 4
											? e
											: e + 12
										: 'ਸਵੇਰ' === t
										? e
										: 'ਦੁਪਹਿਰ' === t
										? 10 <= e
											? e
											: e + 12
										: 'ਸ਼ਾਮ' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'ਰਾਤ'
									: e < 10
									? 'ਸਵੇਰ'
									: e < 17
									? 'ਦੁਪਹਿਰ'
									: e < 20
									? 'ਸ਼ਾਮ'
									: 'ਰਾਤ';
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var n =
								'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
									'_'
								),
							i =
								'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
									'_'
								),
							t = [
								/^sty/i,
								/^lut/i,
								/^mar/i,
								/^kwi/i,
								/^maj/i,
								/^cze/i,
								/^lip/i,
								/^sie/i,
								/^wrz/i,
								/^paź/i,
								/^lis/i,
								/^gru/i,
							];
						function r(e) {
							return e % 10 < 5 && 1 < e % 10 && ~~(e / 10) % 10 != 1;
						}
						function o(e, t, n) {
							var i = e + ' ';
							switch (n) {
								case 'ss':
									return i + (r(e) ? 'sekundy' : 'sekund');
								case 'm':
									return t ? 'minuta' : 'minutę';
								case 'mm':
									return i + (r(e) ? 'minuty' : 'minut');
								case 'h':
									return t ? 'godzina' : 'godzinę';
								case 'hh':
									return i + (r(e) ? 'godziny' : 'godzin');
								case 'ww':
									return i + (r(e) ? 'tygodnie' : 'tygodni');
								case 'MM':
									return i + (r(e) ? 'miesiące' : 'miesięcy');
								case 'yy':
									return i + (r(e) ? 'lata' : 'lat');
							}
						}
						e.defineLocale('pl', {
							months: function (e, t) {
								return e ? (/D MMMM/.test(t) ? i : n)[e.month()] : n;
							},
							monthsShort:
								'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
							monthsParse: t,
							longMonthsParse: t,
							shortMonthsParse: t,
							weekdays:
								'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(
									'_'
								),
							weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
							weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Dziś o] LT',
								nextDay: '[Jutro o] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[W niedzielę o] LT';
										case 2:
											return '[We wtorek o] LT';
										case 3:
											return '[W środę o] LT';
										case 6:
											return '[W sobotę o] LT';
										default:
											return '[W] dddd [o] LT';
									}
								},
								lastDay: '[Wczoraj o] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 0:
											return '[W zeszłą niedzielę o] LT';
										case 3:
											return '[W zeszłą środę o] LT';
										case 6:
											return '[W zeszłą sobotę o] LT';
										default:
											return '[W zeszły] dddd [o] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'za %s',
								past: '%s temu',
								s: 'kilka sekund',
								ss: o,
								m: o,
								mm: o,
								h: o,
								hh: o,
								d: '1 dzień',
								dd: '%d dni',
								w: 'tydzień',
								ww: o,
								M: 'miesiąc',
								MM: o,
								y: 'rok',
								yy: o,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('pt', {
							months:
								'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
									'_'
								),
							monthsShort:
								'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
							weekdays:
								'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(
									'_'
								),
							weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
							weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D [de] MMMM [de] YYYY',
								LLL: 'D [de] MMMM [de] YYYY HH:mm',
								LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Hoje às] LT',
								nextDay: '[Amanhã às] LT',
								nextWeek: 'dddd [às] LT',
								lastDay: '[Ontem às] LT',
								lastWeek: function () {
									return 0 === this.day() || 6 === this.day()
										? '[Último] dddd [às] LT'
										: '[Última] dddd [às] LT';
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'em %s',
								past: 'há %s',
								s: 'segundos',
								ss: '%d segundos',
								m: 'um minuto',
								mm: '%d minutos',
								h: 'uma hora',
								hh: '%d horas',
								d: 'um dia',
								dd: '%d dias',
								w: 'uma semana',
								ww: '%d semanas',
								M: 'um mês',
								MM: '%d meses',
								y: 'um ano',
								yy: '%d anos',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('pt-br', {
							months:
								'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
									'_'
								),
							monthsShort:
								'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
							weekdays:
								'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(
									'_'
								),
							weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
							weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D [de] MMMM [de] YYYY',
								LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
								LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',
							},
							calendar: {
								sameDay: '[Hoje às] LT',
								nextDay: '[Amanhã às] LT',
								nextWeek: 'dddd [às] LT',
								lastDay: '[Ontem às] LT',
								lastWeek: function () {
									return 0 === this.day() || 6 === this.day()
										? '[Último] dddd [às] LT'
										: '[Última] dddd [às] LT';
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'em %s',
								past: 'há %s',
								s: 'poucos segundos',
								ss: '%d segundos',
								m: 'um minuto',
								mm: '%d minutos',
								h: 'uma hora',
								hh: '%d horas',
								d: 'um dia',
								dd: '%d dias',
								M: 'um mês',
								MM: '%d meses',
								y: 'um ano',
								yy: '%d anos',
							},
							dayOfMonthOrdinalParse: /\d{1,2}º/,
							ordinal: '%dº',
							invalidDate: 'Data inválida',
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n) {
							return (
								e +
								(20 <= e % 100 || (100 <= e && e % 100 == 0) ? ' de ' : ' ') +
								{
									ss: 'secunde',
									mm: 'minute',
									hh: 'ore',
									dd: 'zile',
									ww: 'săptămâni',
									MM: 'luni',
									yy: 'ani',
								}[n]
							);
						}
						n(0).defineLocale('ro', {
							months:
								'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(
									'_'
								),
							monthsShort:
								'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split(
								'_'
							),
							weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
							weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY H:mm',
								LLLL: 'dddd, D MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[azi la] LT',
								nextDay: '[mâine la] LT',
								nextWeek: 'dddd [la] LT',
								lastDay: '[ieri la] LT',
								lastWeek: '[fosta] dddd [la] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'peste %s',
								past: '%s în urmă',
								s: 'câteva secunde',
								ss: e,
								m: 'un minut',
								mm: e,
								h: 'o oră',
								hh: e,
								d: 'o zi',
								dd: e,
								w: 'o săptămână',
								ww: e,
								M: 'o lună',
								MM: e,
								y: 'un an',
								yy: e,
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						function t(e, t, n) {
							return 'm' === n
								? t
									? 'минута'
									: 'минуту'
								: e +
										' ' +
										((e = +e),
										(n = (n = {
											ss: t
												? 'секунда_секунды_секунд'
												: 'секунду_секунды_секунд',
											mm: t ? 'минута_минуты_минут' : 'минуту_минуты_минут',
											hh: 'час_часа_часов',
											dd: 'день_дня_дней',
											ww: 'неделя_недели_недель',
											MM: 'месяц_месяца_месяцев',
											yy: 'год_года_лет',
										}[n]).split('_')),
										e % 10 == 1 && e % 100 != 11
											? n[0]
											: 2 <= e % 10 &&
											  e % 10 <= 4 &&
											  (e % 100 < 10 || 20 <= e % 100)
											? n[1]
											: n[2]);
						}
						var n = [
							/^янв/i,
							/^фев/i,
							/^мар/i,
							/^апр/i,
							/^ма[йя]/i,
							/^июн/i,
							/^июл/i,
							/^авг/i,
							/^сен/i,
							/^окт/i,
							/^ноя/i,
							/^дек/i,
						];
						e.defineLocale('ru', {
							months: {
								format:
									'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(
										'_'
									),
								standalone:
									'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
										'_'
									),
							},
							monthsShort: {
								format:
									'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(
										'_'
									),
								standalone:
									'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(
										'_'
									),
							},
							weekdays: {
								standalone:
									'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(
										'_'
									),
								format:
									'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(
										'_'
									),
								isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,
							},
							weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
							weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
							monthsParse: n,
							longMonthsParse: n,
							shortMonthsParse: n,
							monthsRegex:
								/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
							monthsShortRegex:
								/^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
							monthsStrictRegex:
								/^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
							monthsShortStrictRegex:
								/^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY г.',
								LLL: 'D MMMM YYYY г., H:mm',
								LLLL: 'dddd, D MMMM YYYY г., H:mm',
							},
							calendar: {
								sameDay: '[Сегодня, в] LT',
								nextDay: '[Завтра, в] LT',
								lastDay: '[Вчера, в] LT',
								nextWeek: function (e) {
									if (e.week() === this.week())
										return 2 === this.day()
											? '[Во] dddd, [в] LT'
											: '[В] dddd, [в] LT';
									switch (this.day()) {
										case 0:
											return '[В следующее] dddd, [в] LT';
										case 1:
										case 2:
										case 4:
											return '[В следующий] dddd, [в] LT';
										case 3:
										case 5:
										case 6:
											return '[В следующую] dddd, [в] LT';
									}
								},
								lastWeek: function (e) {
									if (e.week() === this.week())
										return 2 === this.day()
											? '[Во] dddd, [в] LT'
											: '[В] dddd, [в] LT';
									switch (this.day()) {
										case 0:
											return '[В прошлое] dddd, [в] LT';
										case 1:
										case 2:
										case 4:
											return '[В прошлый] dddd, [в] LT';
										case 3:
										case 5:
										case 6:
											return '[В прошлую] dddd, [в] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'через %s',
								past: '%s назад',
								s: 'несколько секунд',
								ss: t,
								m: t,
								mm: t,
								h: 'час',
								hh: t,
								d: 'день',
								dd: t,
								w: 'неделя',
								ww: t,
								M: 'месяц',
								MM: t,
								y: 'год',
								yy: t,
							},
							meridiemParse: /ночи|утра|дня|вечера/i,
							isPM: function (e) {
								return /^(дня|вечера)$/.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'ночи'
									: e < 12
									? 'утра'
									: e < 17
									? 'дня'
									: 'вечера';
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'M':
									case 'd':
									case 'DDD':
										return e + '-й';
									case 'D':
										return e + '-го';
									case 'w':
									case 'W':
										return e + '-я';
									default:
										return e;
								}
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = [
								'جنوري',
								'فيبروري',
								'مارچ',
								'اپريل',
								'مئي',
								'جون',
								'جولاءِ',
								'آگسٽ',
								'سيپٽمبر',
								'آڪٽوبر',
								'نومبر',
								'ڊسمبر',
							],
							n = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];
						e.defineLocale('sd', {
							months: t,
							monthsShort: t,
							weekdays: n,
							weekdaysShort: n,
							weekdaysMin: n,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd، D MMMM YYYY HH:mm',
							},
							meridiemParse: /صبح|شام/,
							isPM: function (e) {
								return 'شام' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'صبح' : 'شام';
							},
							calendar: {
								sameDay: '[اڄ] LT',
								nextDay: '[سڀاڻي] LT',
								nextWeek: 'dddd [اڳين هفتي تي] LT',
								lastDay: '[ڪالهه] LT',
								lastWeek: '[گزريل هفتي] dddd [تي] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s پوء',
								past: '%s اڳ',
								s: 'چند سيڪنڊ',
								ss: '%d سيڪنڊ',
								m: 'هڪ منٽ',
								mm: '%d منٽ',
								h: 'هڪ ڪلاڪ',
								hh: '%d ڪلاڪ',
								d: 'هڪ ڏينهن',
								dd: '%d ڏينهن',
								M: 'هڪ مهينو',
								MM: '%d مهينا',
								y: 'هڪ سال',
								yy: '%d سال',
							},
							preparse: function (e) {
								return e.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e.replace(/,/g, '،');
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('se', {
							months:
								'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(
									'_'
								),
							monthsShort:
								'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split(
									'_'
								),
							weekdays:
								'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(
									'_'
								),
							weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
							weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'MMMM D. [b.] YYYY',
								LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
								LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',
							},
							calendar: {
								sameDay: '[otne ti] LT',
								nextDay: '[ihttin ti] LT',
								nextWeek: 'dddd [ti] LT',
								lastDay: '[ikte ti] LT',
								lastWeek: '[ovddit] dddd [ti] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s geažes',
								past: 'maŋit %s',
								s: 'moadde sekunddat',
								ss: '%d sekunddat',
								m: 'okta minuhta',
								mm: '%d minuhtat',
								h: 'okta diimmu',
								hh: '%d diimmut',
								d: 'okta beaivi',
								dd: '%d beaivvit',
								M: 'okta mánnu',
								MM: '%d mánut',
								y: 'okta jahki',
								yy: '%d jagit',
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('si', {
							months:
								'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(
									'_'
								),
							monthsShort:
								'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(
									'_'
								),
							weekdays:
								'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(
									'_'
								),
							weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
							weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'a h:mm',
								LTS: 'a h:mm:ss',
								L: 'YYYY/MM/DD',
								LL: 'YYYY MMMM D',
								LLL: 'YYYY MMMM D, a h:mm',
								LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',
							},
							calendar: {
								sameDay: '[අද] LT[ට]',
								nextDay: '[හෙට] LT[ට]',
								nextWeek: 'dddd LT[ට]',
								lastDay: '[ඊයේ] LT[ට]',
								lastWeek: '[පසුගිය] dddd LT[ට]',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%sකින්',
								past: '%sකට පෙර',
								s: 'තත්පර කිහිපය',
								ss: 'තත්පර %d',
								m: 'මිනිත්තුව',
								mm: 'මිනිත්තු %d',
								h: 'පැය',
								hh: 'පැය %d',
								d: 'දිනය',
								dd: 'දින %d',
								M: 'මාසය',
								MM: 'මාස %d',
								y: 'වසර',
								yy: 'වසර %d',
							},
							dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
							ordinal: function (e) {
								return e + ' වැනි';
							},
							meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
							isPM: function (e) {
								return 'ප.ව.' === e || 'පස් වරු' === e;
							},
							meridiem: function (e, t, n) {
								return 11 < e
									? n
										? 'ප.ව.'
										: 'පස් වරු'
									: n
									? 'පෙ.ව.'
									: 'පෙර වරු';
							},
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t =
								'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(
									'_'
								),
							n = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
						function o(e) {
							return 1 < e && e < 5;
						}
						function i(e, t, n, i) {
							var r = e + ' ';
							switch (n) {
								case 's':
									return t || i ? 'pár sekúnd' : 'pár sekundami';
								case 'ss':
									return t || i
										? r + (o(e) ? 'sekundy' : 'sekúnd')
										: r + 'sekundami';
								case 'm':
									return t ? 'minúta' : i ? 'minútu' : 'minútou';
								case 'mm':
									return t || i
										? r + (o(e) ? 'minúty' : 'minút')
										: r + 'minútami';
								case 'h':
									return t ? 'hodina' : i ? 'hodinu' : 'hodinou';
								case 'hh':
									return t || i
										? r + (o(e) ? 'hodiny' : 'hodín')
										: r + 'hodinami';
								case 'd':
									return t || i ? 'deň' : 'dňom';
								case 'dd':
									return t || i ? r + (o(e) ? 'dni' : 'dní') : r + 'dňami';
								case 'M':
									return t || i ? 'mesiac' : 'mesiacom';
								case 'MM':
									return t || i
										? r + (o(e) ? 'mesiace' : 'mesiacov')
										: r + 'mesiacmi';
								case 'y':
									return t || i ? 'rok' : 'rokom';
								case 'yy':
									return t || i ? r + (o(e) ? 'roky' : 'rokov') : r + 'rokmi';
							}
						}
						e.defineLocale('sk', {
							months: t,
							monthsShort: n,
							weekdays:
								'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split(
									'_'
								),
							weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
							weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY H:mm',
								LLLL: 'dddd D. MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[dnes o] LT',
								nextDay: '[zajtra o] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[v nedeľu o] LT';
										case 1:
										case 2:
											return '[v] dddd [o] LT';
										case 3:
											return '[v stredu o] LT';
										case 4:
											return '[vo štvrtok o] LT';
										case 5:
											return '[v piatok o] LT';
										case 6:
											return '[v sobotu o] LT';
									}
								},
								lastDay: '[včera o] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 0:
											return '[minulú nedeľu o] LT';
										case 1:
										case 2:
											return '[minulý] dddd [o] LT';
										case 3:
											return '[minulú stredu o] LT';
										case 4:
										case 5:
											return '[minulý] dddd [o] LT';
										case 6:
											return '[minulú sobotu o] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'za %s',
								past: 'pred %s',
								s: i,
								ss: i,
								m: i,
								mm: i,
								h: i,
								hh: i,
								d: i,
								dd: i,
								M: i,
								MM: i,
								y: i,
								yy: i,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							var r = e + ' ';
							switch (n) {
								case 's':
									return t || i ? 'nekaj sekund' : 'nekaj sekundami';
								case 'ss':
									return (r +=
										1 === e
											? t
												? 'sekundo'
												: 'sekundi'
											: 2 === e
											? t || i
												? 'sekundi'
												: 'sekundah'
											: e < 5
											? t || i
												? 'sekunde'
												: 'sekundah'
											: 'sekund');
								case 'm':
									return t ? 'ena minuta' : 'eno minuto';
								case 'mm':
									return (r +=
										1 === e
											? t
												? 'minuta'
												: 'minuto'
											: 2 === e
											? t || i
												? 'minuti'
												: 'minutama'
											: e < 5
											? t || i
												? 'minute'
												: 'minutami'
											: t || i
											? 'minut'
											: 'minutami');
								case 'h':
									return t ? 'ena ura' : 'eno uro';
								case 'hh':
									return (r +=
										1 === e
											? t
												? 'ura'
												: 'uro'
											: 2 === e
											? t || i
												? 'uri'
												: 'urama'
											: e < 5
											? t || i
												? 'ure'
												: 'urami'
											: t || i
											? 'ur'
											: 'urami');
								case 'd':
									return t || i ? 'en dan' : 'enim dnem';
								case 'dd':
									return (r +=
										1 === e
											? t || i
												? 'dan'
												: 'dnem'
											: 2 === e
											? t || i
												? 'dni'
												: 'dnevoma'
											: t || i
											? 'dni'
											: 'dnevi');
								case 'M':
									return t || i ? 'en mesec' : 'enim mesecem';
								case 'MM':
									return (r +=
										1 === e
											? t || i
												? 'mesec'
												: 'mesecem'
											: 2 === e
											? t || i
												? 'meseca'
												: 'mesecema'
											: e < 5
											? t || i
												? 'mesece'
												: 'meseci'
											: t || i
											? 'mesecev'
											: 'meseci');
								case 'y':
									return t || i ? 'eno leto' : 'enim letom';
								case 'yy':
									return (r +=
										1 === e
											? t || i
												? 'leto'
												: 'letom'
											: 2 === e
											? t || i
												? 'leti'
												: 'letoma'
											: e < 5
											? t || i
												? 'leta'
												: 'leti'
											: t || i
											? 'let'
											: 'leti');
							}
						}
						n(0).defineLocale('sl', {
							months:
								'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(
									'_'
								),
							monthsShort:
								'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split(
									'_'
								),
							weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
							weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD. MM. YYYY',
								LL: 'D. MMMM YYYY',
								LLL: 'D. MMMM YYYY H:mm',
								LLLL: 'dddd, D. MMMM YYYY H:mm',
							},
							calendar: {
								sameDay: '[danes ob] LT',
								nextDay: '[jutri ob] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[v] [nedeljo] [ob] LT';
										case 3:
											return '[v] [sredo] [ob] LT';
										case 6:
											return '[v] [soboto] [ob] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[v] dddd [ob] LT';
									}
								},
								lastDay: '[včeraj ob] LT',
								lastWeek: function () {
									switch (this.day()) {
										case 0:
											return '[prejšnjo] [nedeljo] [ob] LT';
										case 3:
											return '[prejšnjo] [sredo] [ob] LT';
										case 6:
											return '[prejšnjo] [soboto] [ob] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[prejšnji] dddd [ob] LT';
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'čez %s',
								past: 'pred %s',
								s: e,
								ss: e,
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: e,
								dd: e,
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('sq', {
							months:
								'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(
									'_'
								),
							monthsShort:
								'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
							weekdays:
								'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(
									'_'
								),
							weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
							weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
							weekdaysParseExact: !0,
							meridiemParse: /PD|MD/,
							isPM: function (e) {
								return 'M' === e.charAt(0);
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'PD' : 'MD';
							},
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Sot në] LT',
								nextDay: '[Nesër në] LT',
								nextWeek: 'dddd [në] LT',
								lastDay: '[Dje në] LT',
								lastWeek: 'dddd [e kaluar në] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'në %s',
								past: '%s më parë',
								s: 'disa sekonda',
								ss: '%d sekonda',
								m: 'një minutë',
								mm: '%d minuta',
								h: 'një orë',
								hh: '%d orë',
								d: 'një ditë',
								dd: '%d ditë',
								M: 'një muaj',
								MM: '%d muaj',
								y: 'një vit',
								yy: '%d vite',
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var r = {
							words: {
								ss: ['sekunda', 'sekunde', 'sekundi'],
								m: ['jedan minut', 'jedne minute'],
								mm: ['minut', 'minute', 'minuta'],
								h: ['jedan sat', 'jednog sata'],
								hh: ['sat', 'sata', 'sati'],
								dd: ['dan', 'dana', 'dana'],
								MM: ['mesec', 'meseca', 'meseci'],
								yy: ['godina', 'godine', 'godina'],
							},
							correctGrammaticalCase: function (e, t) {
								return 1 === e ? t[0] : 2 <= e && e <= 4 ? t[1] : t[2];
							},
							translate: function (e, t, n) {
								var i = r.words[n];
								return 1 === n.length
									? t
										? i[0]
										: i[1]
									: e + ' ' + r.correctGrammaticalCase(e, i);
							},
						};
						e.defineLocale('sr', {
							months:
								'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
									'_'
								),
							monthsShort:
								'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(
									'_'
								),
							weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
							weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'D. M. YYYY.',
								LL: 'D. MMMM YYYY.',
								LLL: 'D. MMMM YYYY. H:mm',
								LLLL: 'dddd, D. MMMM YYYY. H:mm',
							},
							calendar: {
								sameDay: '[danas u] LT',
								nextDay: '[sutra u] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[u] [nedelju] [u] LT';
										case 3:
											return '[u] [sredu] [u] LT';
										case 6:
											return '[u] [subotu] [u] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[u] dddd [u] LT';
									}
								},
								lastDay: '[juče u] LT',
								lastWeek: function () {
									return [
										'[prošle] [nedelje] [u] LT',
										'[prošlog] [ponedeljka] [u] LT',
										'[prošlog] [utorka] [u] LT',
										'[prošle] [srede] [u] LT',
										'[prošlog] [četvrtka] [u] LT',
										'[prošlog] [petka] [u] LT',
										'[prošle] [subote] [u] LT',
									][this.day()];
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'za %s',
								past: 'pre %s',
								s: 'nekoliko sekundi',
								ss: r.translate,
								m: r.translate,
								mm: r.translate,
								h: r.translate,
								hh: r.translate,
								d: 'dan',
								dd: r.translate,
								M: 'mesec',
								MM: r.translate,
								y: 'godinu',
								yy: r.translate,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var r = {
							words: {
								ss: ['секунда', 'секунде', 'секунди'],
								m: ['један минут', 'једне минуте'],
								mm: ['минут', 'минуте', 'минута'],
								h: ['један сат', 'једног сата'],
								hh: ['сат', 'сата', 'сати'],
								dd: ['дан', 'дана', 'дана'],
								MM: ['месец', 'месеца', 'месеци'],
								yy: ['година', 'године', 'година'],
							},
							correctGrammaticalCase: function (e, t) {
								return 1 === e ? t[0] : 2 <= e && e <= 4 ? t[1] : t[2];
							},
							translate: function (e, t, n) {
								var i = r.words[n];
								return 1 === n.length
									? t
										? i[0]
										: i[1]
									: e + ' ' + r.correctGrammaticalCase(e, i);
							},
						};
						e.defineLocale('sr-cyrl', {
							months:
								'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(
									'_'
								),
							monthsShort:
								'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split(
									'_'
								),
							weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
							weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'D. M. YYYY.',
								LL: 'D. MMMM YYYY.',
								LLL: 'D. MMMM YYYY. H:mm',
								LLLL: 'dddd, D. MMMM YYYY. H:mm',
							},
							calendar: {
								sameDay: '[данас у] LT',
								nextDay: '[сутра у] LT',
								nextWeek: function () {
									switch (this.day()) {
										case 0:
											return '[у] [недељу] [у] LT';
										case 3:
											return '[у] [среду] [у] LT';
										case 6:
											return '[у] [суботу] [у] LT';
										case 1:
										case 2:
										case 4:
										case 5:
											return '[у] dddd [у] LT';
									}
								},
								lastDay: '[јуче у] LT',
								lastWeek: function () {
									return [
										'[прошле] [недеље] [у] LT',
										'[прошлог] [понедељка] [у] LT',
										'[прошлог] [уторка] [у] LT',
										'[прошле] [среде] [у] LT',
										'[прошлог] [четвртка] [у] LT',
										'[прошлог] [петка] [у] LT',
										'[прошле] [суботе] [у] LT',
									][this.day()];
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'за %s',
								past: 'пре %s',
								s: 'неколико секунди',
								ss: r.translate,
								m: r.translate,
								mm: r.translate,
								h: r.translate,
								hh: r.translate,
								d: 'дан',
								dd: r.translate,
								M: 'месец',
								MM: r.translate,
								y: 'годину',
								yy: r.translate,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ss', {
							months:
								"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
									'_'
								),
							monthsShort:
								'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
							weekdays:
								'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(
									'_'
								),
							weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
							weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY h:mm A',
								LLLL: 'dddd, D MMMM YYYY h:mm A',
							},
							calendar: {
								sameDay: '[Namuhla nga] LT',
								nextDay: '[Kusasa nga] LT',
								nextWeek: 'dddd [nga] LT',
								lastDay: '[Itolo nga] LT',
								lastWeek: 'dddd [leliphelile] [nga] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'nga %s',
								past: 'wenteka nga %s',
								s: 'emizuzwana lomcane',
								ss: '%d mzuzwana',
								m: 'umzuzu',
								mm: '%d emizuzu',
								h: 'lihora',
								hh: '%d emahora',
								d: 'lilanga',
								dd: '%d emalanga',
								M: 'inyanga',
								MM: '%d tinyanga',
								y: 'umnyaka',
								yy: '%d iminyaka',
							},
							meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
							meridiem: function (e, t, n) {
								return e < 11
									? 'ekuseni'
									: e < 15
									? 'emini'
									: e < 19
									? 'entsambama'
									: 'ebusuku';
							},
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'ekuseni' === t
										? e
										: 'emini' === t
										? 11 <= e
											? e
											: e + 12
										: 'entsambama' === t || 'ebusuku' === t
										? 0 === e
											? 0
											: e + 12
										: void 0
								);
							},
							dayOfMonthOrdinalParse: /\d{1,2}/,
							ordinal: '%d',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('sv', {
							months:
								'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(
									'_'
								),
							monthsShort:
								'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
							weekdays:
								'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
							weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
							weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY-MM-DD',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY [kl.] HH:mm',
								LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
								lll: 'D MMM YYYY HH:mm',
								llll: 'ddd D MMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Idag] LT',
								nextDay: '[Imorgon] LT',
								lastDay: '[Igår] LT',
								nextWeek: '[På] dddd LT',
								lastWeek: '[I] dddd[s] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'om %s',
								past: 'för %s sedan',
								s: 'några sekunder',
								ss: '%d sekunder',
								m: 'en minut',
								mm: '%d minuter',
								h: 'en timme',
								hh: '%d timmar',
								d: 'en dag',
								dd: '%d dagar',
								M: 'en månad',
								MM: '%d månader',
								y: 'ett år',
								yy: '%d år',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 != ~~((e % 100) / 10) && (1 == t || 2 == t) ? ':a' : ':e')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('sw', {
							months:
								'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(
									'_'
								),
							monthsShort:
								'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
							weekdays:
								'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(
									'_'
								),
							weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
							weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'hh:mm A',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[leo saa] LT',
								nextDay: '[kesho saa] LT',
								nextWeek: '[wiki ijayo] dddd [saat] LT',
								lastDay: '[jana] LT',
								lastWeek: '[wiki iliyopita] dddd [saat] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s baadaye',
								past: 'tokea %s',
								s: 'hivi punde',
								ss: 'sekunde %d',
								m: 'dakika moja',
								mm: 'dakika %d',
								h: 'saa limoja',
								hh: 'masaa %d',
								d: 'siku moja',
								dd: 'siku %d',
								M: 'mwezi mmoja',
								MM: 'miezi %d',
								y: 'mwaka mmoja',
								yy: 'miaka %d',
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
								1: '௧',
								2: '௨',
								3: '௩',
								4: '௪',
								5: '௫',
								6: '௬',
								7: '௭',
								8: '௮',
								9: '௯',
								0: '௦',
							},
							n = {
								'௧': '1',
								'௨': '2',
								'௩': '3',
								'௪': '4',
								'௫': '5',
								'௬': '6',
								'௭': '7',
								'௮': '8',
								'௯': '9',
								'௦': '0',
							};
						e.defineLocale('ta', {
							months:
								'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
									'_'
								),
							monthsShort:
								'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
									'_'
								),
							weekdays:
								'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(
									'_'
								),
							weekdaysShort:
								'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
							weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, HH:mm',
								LLLL: 'dddd, D MMMM YYYY, HH:mm',
							},
							calendar: {
								sameDay: '[இன்று] LT',
								nextDay: '[நாளை] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[நேற்று] LT',
								lastWeek: '[கடந்த வாரம்] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s இல்',
								past: '%s முன்',
								s: 'ஒரு சில விநாடிகள்',
								ss: '%d விநாடிகள்',
								m: 'ஒரு நிமிடம்',
								mm: '%d நிமிடங்கள்',
								h: 'ஒரு மணி நேரம்',
								hh: '%d மணி நேரம்',
								d: 'ஒரு நாள்',
								dd: '%d நாட்கள்',
								M: 'ஒரு மாதம்',
								MM: '%d மாதங்கள்',
								y: 'ஒரு வருடம்',
								yy: '%d ஆண்டுகள்',
							},
							dayOfMonthOrdinalParse: /\d{1,2}வது/,
							ordinal: function (e) {
								return e + 'வது';
							},
							preparse: function (e) {
								return e.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (e) {
									return n[e];
								});
							},
							postformat: function (e) {
								return e.replace(/\d/g, function (e) {
									return t[e];
								});
							},
							meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
							meridiem: function (e, t, n) {
								return e < 2
									? ' யாமம்'
									: e < 6
									? ' வைகறை'
									: e < 10
									? ' காலை'
									: e < 14
									? ' நண்பகல்'
									: e < 18
									? ' எற்பாடு'
									: e < 22
									? ' மாலை'
									: ' யாமம்';
							},
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'யாமம்' === t
										? e < 2
											? e
											: e + 12
										: 'வைகறை' === t ||
										  'காலை' === t ||
										  ('நண்பகல்' === t && 10 <= e)
										? e
										: e + 12
								);
							},
							week: { dow: 0, doy: 6 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('te', {
							months:
								'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(
									'_'
								),
							monthsShort:
								'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(
									'_'
								),
							weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
							weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
							longDateFormat: {
								LT: 'A h:mm',
								LTS: 'A h:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY, A h:mm',
								LLLL: 'dddd, D MMMM YYYY, A h:mm',
							},
							calendar: {
								sameDay: '[నేడు] LT',
								nextDay: '[రేపు] LT',
								nextWeek: 'dddd, LT',
								lastDay: '[నిన్న] LT',
								lastWeek: '[గత] dddd, LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s లో',
								past: '%s క్రితం',
								s: 'కొన్ని క్షణాలు',
								ss: '%d సెకన్లు',
								m: 'ఒక నిమిషం',
								mm: '%d నిమిషాలు',
								h: 'ఒక గంట',
								hh: '%d గంటలు',
								d: 'ఒక రోజు',
								dd: '%d రోజులు',
								M: 'ఒక నెల',
								MM: '%d నెలలు',
								y: 'ఒక సంవత్సరం',
								yy: '%d సంవత్సరాలు',
							},
							dayOfMonthOrdinalParse: /\d{1,2}వ/,
							ordinal: '%dవ',
							meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'రాత్రి' === t
										? e < 4
											? e
											: e + 12
										: 'ఉదయం' === t
										? e
										: 'మధ్యాహ్నం' === t
										? 10 <= e
											? e
											: e + 12
										: 'సాయంత్రం' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'రాత్రి'
									: e < 10
									? 'ఉదయం'
									: e < 17
									? 'మధ్యాహ్నం'
									: e < 20
									? 'సాయంత్రం'
									: 'రాత్రి';
							},
							week: { dow: 0, doy: 6 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('tet', {
							months:
								'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(
									'_'
								),
							monthsShort:
								'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
							weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split(
								'_'
							),
							weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
							weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Ohin iha] LT',
								nextDay: '[Aban iha] LT',
								nextWeek: 'dddd [iha] LT',
								lastDay: '[Horiseik iha] LT',
								lastWeek: 'dddd [semana kotuk] [iha] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'iha %s',
								past: '%s liuba',
								s: 'segundu balun',
								ss: 'segundu %d',
								m: 'minutu ida',
								mm: 'minutu %d',
								h: 'oras ida',
								hh: 'oras %d',
								d: 'loron ida',
								dd: 'loron %d',
								M: 'fulan ida',
								MM: 'fulan %d',
								y: 'tinan ida',
								yy: 'tinan %d',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = {
							0: '-ум',
							1: '-ум',
							2: '-юм',
							3: '-юм',
							4: '-ум',
							5: '-ум',
							6: '-ум',
							7: '-ум',
							8: '-ум',
							9: '-ум',
							10: '-ум',
							12: '-ум',
							13: '-ум',
							20: '-ум',
							30: '-юм',
							40: '-ум',
							50: '-ум',
							60: '-ум',
							70: '-ум',
							80: '-ум',
							90: '-ум',
							100: '-ум',
						};
						e.defineLocale('tg', {
							months: {
								format:
									'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(
										'_'
									),
								standalone:
									'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
										'_'
									),
							},
							monthsShort:
								'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
							weekdays:
								'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(
									'_'
								),
							weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
							weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Имрӯз соати] LT',
								nextDay: '[Фардо соати] LT',
								lastDay: '[Дирӯз соати] LT',
								nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
								lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'баъди %s',
								past: '%s пеш',
								s: 'якчанд сония',
								m: 'як дақиқа',
								mm: '%d дақиқа',
								h: 'як соат',
								hh: '%d соат',
								d: 'як рӯз',
								dd: '%d рӯз',
								M: 'як моҳ',
								MM: '%d моҳ',
								y: 'як сол',
								yy: '%d сол',
							},
							meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'шаб' === t
										? e < 4
											? e
											: e + 12
										: 'субҳ' === t
										? e
										: 'рӯз' === t
										? 11 <= e
											? e
											: e + 12
										: 'бегоҳ' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'шаб'
									: e < 11
									? 'субҳ'
									: e < 16
									? 'рӯз'
									: e < 19
									? 'бегоҳ'
									: 'шаб';
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
							ordinal: function (e) {
								return e + (t[e] || t[e % 10] || t[100 <= e ? 100 : null]);
							},
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('th', {
							months:
								'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(
									'_'
								),
							monthsShort:
								'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split(
								'_'
							),
							weekdaysShort:
								'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'),
							weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'H:mm',
								LTS: 'H:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY เวลา H:mm',
								LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',
							},
							meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
							isPM: function (e) {
								return 'หลังเที่ยง' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'ก่อนเที่ยง' : 'หลังเที่ยง';
							},
							calendar: {
								sameDay: '[วันนี้ เวลา] LT',
								nextDay: '[พรุ่งนี้ เวลา] LT',
								nextWeek: 'dddd[หน้า เวลา] LT',
								lastDay: '[เมื่อวานนี้ เวลา] LT',
								lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'อีก %s',
								past: '%sที่แล้ว',
								s: 'ไม่กี่วินาที',
								ss: '%d วินาที',
								m: '1 นาที',
								mm: '%d นาที',
								h: '1 ชั่วโมง',
								hh: '%d ชั่วโมง',
								d: '1 วัน',
								dd: '%d วัน',
								w: '1 สัปดาห์',
								ww: '%d สัปดาห์',
								M: '1 เดือน',
								MM: '%d เดือน',
								y: '1 ปี',
								yy: '%d ปี',
							},
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var i = {
							1: "'inji",
							5: "'inji",
							8: "'inji",
							70: "'inji",
							80: "'inji",
							2: "'nji",
							7: "'nji",
							20: "'nji",
							50: "'nji",
							3: "'ünji",
							4: "'ünji",
							100: "'ünji",
							6: "'njy",
							9: "'unjy",
							10: "'unjy",
							30: "'unjy",
							60: "'ynjy",
							90: "'ynjy",
						};
						e.defineLocale('tk', {
							months:
								'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(
									'_'
								),
							monthsShort:
								'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),
							weekdays:
								'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(
									'_'
								),
							weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),
							weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[bugün sagat] LT',
								nextDay: '[ertir sagat] LT',
								nextWeek: '[indiki] dddd [sagat] LT',
								lastDay: '[düýn] LT',
								lastWeek: '[geçen] dddd [sagat] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s soň',
								past: '%s öň',
								s: 'birnäçe sekunt',
								m: 'bir minut',
								mm: '%d minut',
								h: 'bir sagat',
								hh: '%d sagat',
								d: 'bir gün',
								dd: '%d gün',
								M: 'bir aý',
								MM: '%d aý',
								y: 'bir ýyl',
								yy: '%d ýyl',
							},
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'Do':
									case 'DD':
										return e;
									default:
										if (0 === e) return e + "'unjy";
										var n = e % 10;
										return (
											e + (i[n] || i[(e % 100) - n] || i[100 <= e ? 100 : null])
										);
								}
							},
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('tl-ph', {
							months:
								'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
									'_'
								),
							monthsShort:
								'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
							weekdays:
								'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
									'_'
								),
							weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
							weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'MM/D/YYYY',
								LL: 'MMMM D, YYYY',
								LLL: 'MMMM D, YYYY HH:mm',
								LLLL: 'dddd, MMMM DD, YYYY HH:mm',
							},
							calendar: {
								sameDay: 'LT [ngayong araw]',
								nextDay: '[Bukas ng] LT',
								nextWeek: 'LT [sa susunod na] dddd',
								lastDay: 'LT [kahapon]',
								lastWeek: 'LT [noong nakaraang] dddd',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'sa loob ng %s',
								past: '%s ang nakalipas',
								s: 'ilang segundo',
								ss: '%d segundo',
								m: 'isang minuto',
								mm: '%d minuto',
								h: 'isang oras',
								hh: '%d oras',
								d: 'isang araw',
								dd: '%d araw',
								M: 'isang buwan',
								MM: '%d buwan',
								y: 'isang taon',
								yy: '%d taon',
							},
							dayOfMonthOrdinalParse: /\d{1,2}/,
							ordinal: function (e) {
								return e;
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var o = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');
						function t(e, t, n, i) {
							var r = (function (e) {
								var t = Math.floor((e % 1e3) / 100),
									n = Math.floor((e % 100) / 10),
									i = e % 10,
									e = '';
								0 < t && (e += o[t] + 'vatlh');
								0 < n && (e += ('' !== e ? ' ' : '') + o[n] + 'maH');
								0 < i && (e += ('' !== e ? ' ' : '') + o[i]);
								return '' === e ? 'pagh' : e;
							})(e);
							switch (n) {
								case 'ss':
									return r + ' lup';
								case 'mm':
									return r + ' tup';
								case 'hh':
									return r + ' rep';
								case 'dd':
									return r + ' jaj';
								case 'MM':
									return r + ' jar';
								case 'yy':
									return r + ' DIS';
							}
						}
						e.defineLocale('tlh', {
							months:
								'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(
									'_'
								),
							monthsShort:
								'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
									'_'
								),
							weekdaysShort:
								'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
									'_'
								),
							weekdaysMin:
								'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
									'_'
								),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[DaHjaj] LT',
								nextDay: '[wa’leS] LT',
								nextWeek: 'LLL',
								lastDay: '[wa’Hu’] LT',
								lastWeek: 'LLL',
								sameElse: 'L',
							},
							relativeTime: {
								future: function (e) {
									var t = e;
									return (t =
										-1 !== e.indexOf('jaj')
											? t.slice(0, -3) + 'leS'
											: -1 !== e.indexOf('jar')
											? t.slice(0, -3) + 'waQ'
											: -1 !== e.indexOf('DIS')
											? t.slice(0, -3) + 'nem'
											: t + ' pIq');
								},
								past: function (e) {
									var t = e;
									return (t =
										-1 !== e.indexOf('jaj')
											? t.slice(0, -3) + 'Hu’'
											: -1 !== e.indexOf('jar')
											? t.slice(0, -3) + 'wen'
											: -1 !== e.indexOf('DIS')
											? t.slice(0, -3) + 'ben'
											: t + ' ret');
								},
								s: 'puS lup',
								ss: t,
								m: 'wa’ tup',
								mm: t,
								h: 'wa’ rep',
								hh: t,
								d: 'wa’ jaj',
								dd: t,
								M: 'wa’ jar',
								MM: t,
								y: 'wa’ DIS',
								yy: t,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var i = {
							1: "'inci",
							5: "'inci",
							8: "'inci",
							70: "'inci",
							80: "'inci",
							2: "'nci",
							7: "'nci",
							20: "'nci",
							50: "'nci",
							3: "'üncü",
							4: "'üncü",
							100: "'üncü",
							6: "'ncı",
							9: "'uncu",
							10: "'uncu",
							30: "'uncu",
							60: "'ıncı",
							90: "'ıncı",
						};
						e.defineLocale('tr', {
							months:
								'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(
									'_'
								),
							monthsShort:
								'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
							weekdays:
								'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(
									'_'
								),
							weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
							weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
							meridiem: function (e, t, n) {
								return e < 12 ? (n ? 'öö' : 'ÖÖ') : n ? 'ös' : 'ÖS';
							},
							meridiemParse: /öö|ÖÖ|ös|ÖS/,
							isPM: function (e) {
								return 'ös' === e || 'ÖS' === e;
							},
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[bugün saat] LT',
								nextDay: '[yarın saat] LT',
								nextWeek: '[gelecek] dddd [saat] LT',
								lastDay: '[dün] LT',
								lastWeek: '[geçen] dddd [saat] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s sonra',
								past: '%s önce',
								s: 'birkaç saniye',
								ss: '%d saniye',
								m: 'bir dakika',
								mm: '%d dakika',
								h: 'bir saat',
								hh: '%d saat',
								d: 'bir gün',
								dd: '%d gün',
								w: 'bir hafta',
								ww: '%d hafta',
								M: 'bir ay',
								MM: '%d ay',
								y: 'bir yıl',
								yy: '%d yıl',
							},
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'Do':
									case 'DD':
										return e;
									default:
										if (0 === e) return e + "'ıncı";
										var n = e % 10;
										return (
											e + (i[n] || i[(e % 100) - n] || i[100 <= e ? 100 : null])
										);
								}
							},
							week: { dow: 1, doy: 7 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n, i) {
							e = {
								s: ['viensas secunds', "'iensas secunds"],
								ss: [e + ' secunds', e + ' secunds'],
								m: ["'n míut", "'iens míut"],
								mm: [e + ' míuts', e + ' míuts'],
								h: ["'n þora", "'iensa þora"],
								hh: [e + ' þoras', e + ' þoras'],
								d: ["'n ziua", "'iensa ziua"],
								dd: [e + ' ziuas', e + ' ziuas'],
								M: ["'n mes", "'iens mes"],
								MM: [e + ' mesen', e + ' mesen'],
								y: ["'n ar", "'iens ar"],
								yy: [e + ' ars', e + ' ars'],
							};
							return i || t ? e[n][0] : e[n][1];
						}
						n(0).defineLocale('tzl', {
							months:
								'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(
									'_'
								),
							monthsShort:
								'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
							weekdays:
								'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split(
									'_'
								),
							weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
							weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
							longDateFormat: {
								LT: 'HH.mm',
								LTS: 'HH.mm.ss',
								L: 'DD.MM.YYYY',
								LL: 'D. MMMM [dallas] YYYY',
								LLL: 'D. MMMM [dallas] YYYY HH.mm',
								LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',
							},
							meridiemParse: /d\'o|d\'a/i,
							isPM: function (e) {
								return "d'o" === e.toLowerCase();
							},
							meridiem: function (e, t, n) {
								return 11 < e ? (n ? "d'o" : "D'O") : n ? "d'a" : "D'A";
							},
							calendar: {
								sameDay: '[oxhi à] LT',
								nextDay: '[demà à] LT',
								nextWeek: 'dddd [à] LT',
								lastDay: '[ieiri à] LT',
								lastWeek: '[sür el] dddd [lasteu à] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'osprei %s',
								past: 'ja%s',
								s: e,
								ss: e,
								m: e,
								mm: e,
								h: e,
								hh: e,
								d: e,
								dd: e,
								M: e,
								MM: e,
								y: e,
								yy: e,
							},
							dayOfMonthOrdinalParse: /\d{1,2}\./,
							ordinal: '%d.',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('tzm', {
							months:
								'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
									'_'
								),
							monthsShort:
								'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
									'_'
								),
							weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split(
								'_'
							),
							weekdaysShort:
								'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
							weekdaysMin:
								'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
								nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
								nextWeek: 'dddd [ⴴ] LT',
								lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
								lastWeek: 'dddd [ⴴ] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
								past: 'ⵢⴰⵏ %s',
								s: 'ⵉⵎⵉⴽ',
								ss: '%d ⵉⵎⵉⴽ',
								m: 'ⵎⵉⵏⵓⴺ',
								mm: '%d ⵎⵉⵏⵓⴺ',
								h: 'ⵙⴰⵄⴰ',
								hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
								d: 'ⴰⵙⵙ',
								dd: '%d oⵙⵙⴰⵏ',
								M: 'ⴰⵢoⵓⵔ',
								MM: '%d ⵉⵢⵢⵉⵔⵏ',
								y: 'ⴰⵙⴳⴰⵙ',
								yy: '%d ⵉⵙⴳⴰⵙⵏ',
							},
							week: { dow: 6, doy: 12 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('tzm-latn', {
							months:
								'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
									'_'
								),
							monthsShort:
								'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
									'_'
								),
							weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split(
								'_'
							),
							weekdaysShort:
								'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
							weekdaysMin:
								'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[asdkh g] LT',
								nextDay: '[aska g] LT',
								nextWeek: 'dddd [g] LT',
								lastDay: '[assant g] LT',
								lastWeek: 'dddd [g] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'dadkh s yan %s',
								past: 'yan %s',
								s: 'imik',
								ss: '%d imik',
								m: 'minuḍ',
								mm: '%d minuḍ',
								h: 'saɛa',
								hh: '%d tassaɛin',
								d: 'ass',
								dd: '%d ossan',
								M: 'ayowr',
								MM: '%d iyyirn',
								y: 'asgas',
								yy: '%d isgasn',
							},
							week: { dow: 6, doy: 12 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('ug-cn', {
							months:
								'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
									'_'
								),
							monthsShort:
								'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
									'_'
								),
							weekdays:
								'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
									'_'
								),
							weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
							weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY-MM-DD',
								LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
								LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
								LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
							},
							meridiemParse:
								/يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'يېرىم كېچە' === t ||
									'سەھەر' === t ||
									'چۈشتىن بۇرۇن' === t ||
									('چۈشتىن كېيىن' !== t && 'كەچ' !== t && 11 <= e)
										? e
										: e + 12
								);
							},
							meridiem: function (e, t, n) {
								t = 100 * e + t;
								return t < 600
									? 'يېرىم كېچە'
									: t < 900
									? 'سەھەر'
									: t < 1130
									? 'چۈشتىن بۇرۇن'
									: t < 1230
									? 'چۈش'
									: t < 1800
									? 'چۈشتىن كېيىن'
									: 'كەچ';
							},
							calendar: {
								sameDay: '[بۈگۈن سائەت] LT',
								nextDay: '[ئەتە سائەت] LT',
								nextWeek: '[كېلەركى] dddd [سائەت] LT',
								lastDay: '[تۆنۈگۈن] LT',
								lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s كېيىن',
								past: '%s بۇرۇن',
								s: 'نەچچە سېكونت',
								ss: '%d سېكونت',
								m: 'بىر مىنۇت',
								mm: '%d مىنۇت',
								h: 'بىر سائەت',
								hh: '%d سائەت',
								d: 'بىر كۈن',
								dd: '%d كۈن',
								M: 'بىر ئاي',
								MM: '%d ئاي',
								y: 'بىر يىل',
								yy: '%d يىل',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'DDD':
										return e + '-كۈنى';
									case 'w':
									case 'W':
										return e + '-ھەپتە';
									default:
										return e;
								}
							},
							preparse: function (e) {
								return e.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e.replace(/,/g, '،');
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						function e(e, t, n) {
							return 'm' === n
								? t
									? 'хвилина'
									: 'хвилину'
								: 'h' === n
								? t
									? 'година'
									: 'годину'
								: e +
								  ' ' +
								  ((e = +e),
								  (n = (n = {
										ss: t ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
										mm: t ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
										hh: t ? 'година_години_годин' : 'годину_години_годин',
										dd: 'день_дні_днів',
										MM: 'місяць_місяці_місяців',
										yy: 'рік_роки_років',
								  }[n]).split('_')),
								  e % 10 == 1 && e % 100 != 11
										? n[0]
										: 2 <= e % 10 &&
										  e % 10 <= 4 &&
										  (e % 100 < 10 || 20 <= e % 100)
										? n[1]
										: n[2]);
						}
						function t(e) {
							return function () {
								return e + 'о' + (11 === this.hours() ? 'б' : '') + '] LT';
							};
						}
						n(0).defineLocale('uk', {
							months: {
								format:
									'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(
										'_'
									),
								standalone:
									'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(
										'_'
									),
							},
							monthsShort:
								'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(
									'_'
								),
							weekdays: function (e, t) {
								var n = {
									nominative:
										'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(
											'_'
										),
									accusative:
										'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(
											'_'
										),
									genitive:
										'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(
											'_'
										),
								};
								return !0 === e
									? n.nominative.slice(1, 7).concat(n.nominative.slice(0, 1))
									: e
									? n[
											/(\[[ВвУу]\]) ?dddd/.test(t)
												? 'accusative'
												: /\[?(?:минулої|наступної)? ?\] ?dddd/.test(t)
												? 'genitive'
												: 'nominative'
									  ][e.day()]
									: n.nominative;
							},
							weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
							weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD.MM.YYYY',
								LL: 'D MMMM YYYY р.',
								LLL: 'D MMMM YYYY р., HH:mm',
								LLLL: 'dddd, D MMMM YYYY р., HH:mm',
							},
							calendar: {
								sameDay: t('[Сьогодні '),
								nextDay: t('[Завтра '),
								lastDay: t('[Вчора '),
								nextWeek: t('[У] dddd ['),
								lastWeek: function () {
									switch (this.day()) {
										case 0:
										case 3:
										case 5:
										case 6:
											return t('[Минулої] dddd [').call(this);
										case 1:
										case 2:
										case 4:
											return t('[Минулого] dddd [').call(this);
									}
								},
								sameElse: 'L',
							},
							relativeTime: {
								future: 'за %s',
								past: '%s тому',
								s: 'декілька секунд',
								ss: e,
								m: e,
								mm: e,
								h: 'годину',
								hh: e,
								d: 'день',
								dd: e,
								M: 'місяць',
								MM: e,
								y: 'рік',
								yy: e,
							},
							meridiemParse: /ночі|ранку|дня|вечора/,
							isPM: function (e) {
								return /^(дня|вечора)$/.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 4
									? 'ночі'
									: e < 12
									? 'ранку'
									: e < 17
									? 'дня'
									: 'вечора';
							},
							dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'M':
									case 'd':
									case 'DDD':
									case 'w':
									case 'W':
										return e + '-й';
									case 'D':
										return e + '-го';
									default:
										return e;
								}
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function (e) {
						'use strict';
						//! moment.js locale configuration
						var t = [
								'جنوری',
								'فروری',
								'مارچ',
								'اپریل',
								'مئی',
								'جون',
								'جولائی',
								'اگست',
								'ستمبر',
								'اکتوبر',
								'نومبر',
								'دسمبر',
							],
							n = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];
						e.defineLocale('ur', {
							months: t,
							monthsShort: t,
							weekdays: n,
							weekdaysShort: n,
							weekdaysMin: n,
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd، D MMMM YYYY HH:mm',
							},
							meridiemParse: /صبح|شام/,
							isPM: function (e) {
								return 'شام' === e;
							},
							meridiem: function (e, t, n) {
								return e < 12 ? 'صبح' : 'شام';
							},
							calendar: {
								sameDay: '[آج بوقت] LT',
								nextDay: '[کل بوقت] LT',
								nextWeek: 'dddd [بوقت] LT',
								lastDay: '[گذشتہ روز بوقت] LT',
								lastWeek: '[گذشتہ] dddd [بوقت] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s بعد',
								past: '%s قبل',
								s: 'چند سیکنڈ',
								ss: '%d سیکنڈ',
								m: 'ایک منٹ',
								mm: '%d منٹ',
								h: 'ایک گھنٹہ',
								hh: '%d گھنٹے',
								d: 'ایک دن',
								dd: '%d دن',
								M: 'ایک ماہ',
								MM: '%d ماہ',
								y: 'ایک سال',
								yy: '%d سال',
							},
							preparse: function (e) {
								return e.replace(/،/g, ',');
							},
							postformat: function (e) {
								return e.replace(/,/g, '،');
							},
							week: { dow: 1, doy: 4 },
						});
					})(n(0));
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('uz', {
							months:
								'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
									'_'
								),
							monthsShort:
								'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
							weekdays:
								'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split(
									'_'
								),
							weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
							weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'D MMMM YYYY, dddd HH:mm',
							},
							calendar: {
								sameDay: '[Бугун соат] LT [да]',
								nextDay: '[Эртага] LT [да]',
								nextWeek: 'dddd [куни соат] LT [да]',
								lastDay: '[Кеча соат] LT [да]',
								lastWeek: '[Утган] dddd [куни соат] LT [да]',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'Якин %s ичида',
								past: 'Бир неча %s олдин',
								s: 'фурсат',
								ss: '%d фурсат',
								m: 'бир дакика',
								mm: '%d дакика',
								h: 'бир соат',
								hh: '%d соат',
								d: 'бир кун',
								dd: '%d кун',
								M: 'бир ой',
								MM: '%d ой',
								y: 'бир йил',
								yy: '%d йил',
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('uz-latn', {
							months:
								'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(
									'_'
								),
							monthsShort:
								'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
							weekdays:
								'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(
									'_'
								),
							weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
							weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'D MMMM YYYY, dddd HH:mm',
							},
							calendar: {
								sameDay: '[Bugun soat] LT [da]',
								nextDay: '[Ertaga] LT [da]',
								nextWeek: 'dddd [kuni soat] LT [da]',
								lastDay: '[Kecha soat] LT [da]',
								lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
								sameElse: 'L',
							},
							relativeTime: {
								future: 'Yaqin %s ichida',
								past: 'Bir necha %s oldin',
								s: 'soniya',
								ss: '%d soniya',
								m: 'bir daqiqa',
								mm: '%d daqiqa',
								h: 'bir soat',
								hh: '%d soat',
								d: 'bir kun',
								dd: '%d kun',
								M: 'bir oy',
								MM: '%d oy',
								y: 'bir yil',
								yy: '%d yil',
							},
							week: { dow: 1, doy: 7 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('vi', {
							months:
								'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(
									'_'
								),
							monthsShort:
								'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(
									'_'
								),
							weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
							weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
							weekdaysParseExact: !0,
							meridiemParse: /sa|ch/i,
							isPM: function (e) {
								return /^ch$/i.test(e);
							},
							meridiem: function (e, t, n) {
								return e < 12 ? (n ? 'sa' : 'SA') : n ? 'ch' : 'CH';
							},
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM [năm] YYYY',
								LLL: 'D MMMM [năm] YYYY HH:mm',
								LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
								l: 'DD/M/YYYY',
								ll: 'D MMM YYYY',
								lll: 'D MMM YYYY HH:mm',
								llll: 'ddd, D MMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[Hôm nay lúc] LT',
								nextDay: '[Ngày mai lúc] LT',
								nextWeek: 'dddd [tuần tới lúc] LT',
								lastDay: '[Hôm qua lúc] LT',
								lastWeek: 'dddd [tuần trước lúc] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: '%s tới',
								past: '%s trước',
								s: 'vài giây',
								ss: '%d giây',
								m: 'một phút',
								mm: '%d phút',
								h: 'một giờ',
								hh: '%d giờ',
								d: 'một ngày',
								dd: '%d ngày',
								w: 'một tuần',
								ww: '%d tuần',
								M: 'một tháng',
								MM: '%d tháng',
								y: 'một năm',
								yy: '%d năm',
							},
							dayOfMonthOrdinalParse: /\d{1,2}/,
							ordinal: function (e) {
								return e;
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('x-pseudo', {
							months:
								'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(
									'_'
								),
							monthsShort:
								'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(
									'_'
								),
							monthsParseExact: !0,
							weekdays:
								'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(
									'_'
								),
							weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
							weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
							weekdaysParseExact: !0,
							longDateFormat: {
								LT: 'HH:mm',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY HH:mm',
								LLLL: 'dddd, D MMMM YYYY HH:mm',
							},
							calendar: {
								sameDay: '[T~ódá~ý át] LT',
								nextDay: '[T~ómó~rró~w át] LT',
								nextWeek: 'dddd [át] LT',
								lastDay: '[Ý~ést~érdá~ý át] LT',
								lastWeek: '[L~ást] dddd [át] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'í~ñ %s',
								past: '%s á~gó',
								s: 'á ~féw ~sécó~ñds',
								ss: '%d s~écóñ~ds',
								m: 'á ~míñ~úté',
								mm: '%d m~íñú~tés',
								h: 'á~ñ hó~úr',
								hh: '%d h~óúrs',
								d: 'á ~dáý',
								dd: '%d d~áýs',
								M: 'á ~móñ~th',
								MM: '%d m~óñt~hs',
								y: 'á ~ýéár',
								yy: '%d ý~éárs',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
							ordinal: function (e) {
								var t = e % 10;
								return (
									e +
									(1 == ~~((e % 100) / 10)
										? 'th'
										: 1 == t
										? 'st'
										: 2 == t
										? 'nd'
										: 3 == t
										? 'rd'
										: 'th')
								);
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('yo', {
							months:
								'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(
									'_'
								),
							monthsShort:
								'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
							weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
							weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
							weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
							longDateFormat: {
								LT: 'h:mm A',
								LTS: 'h:mm:ss A',
								L: 'DD/MM/YYYY',
								LL: 'D MMMM YYYY',
								LLL: 'D MMMM YYYY h:mm A',
								LLLL: 'dddd, D MMMM YYYY h:mm A',
							},
							calendar: {
								sameDay: '[Ònì ni] LT',
								nextDay: '[Ọ̀la ni] LT',
								nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
								lastDay: '[Àna ni] LT',
								lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
								sameElse: 'L',
							},
							relativeTime: {
								future: 'ní %s',
								past: '%s kọjá',
								s: 'ìsẹjú aayá die',
								ss: 'aayá %d',
								m: 'ìsẹjú kan',
								mm: 'ìsẹjú %d',
								h: 'wákati kan',
								hh: 'wákati %d',
								d: 'ọjọ́ kan',
								dd: 'ọjọ́ %d',
								M: 'osù kan',
								MM: 'osù %d',
								y: 'ọdún kan',
								yy: 'ọdún %d',
							},
							dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
							ordinal: 'ọjọ́ %d',
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('zh-cn', {
							months:
								'一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
									'_'
								),
							monthsShort:
								'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
							weekdays:
								'星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
							weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
							weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY/MM/DD',
								LL: 'YYYY年M月D日',
								LLL: 'YYYY年M月D日Ah点mm分',
								LLLL: 'YYYY年M月D日ddddAh点mm分',
								l: 'YYYY/M/D',
								ll: 'YYYY年M月D日',
								lll: 'YYYY年M月D日 HH:mm',
								llll: 'YYYY年M月D日dddd HH:mm',
							},
							meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'凌晨' === t ||
									'早上' === t ||
									'上午' === t ||
									('下午' !== t && '晚上' !== t && 11 <= e)
										? e
										: e + 12
								);
							},
							meridiem: function (e, t, n) {
								t = 100 * e + t;
								return t < 600
									? '凌晨'
									: t < 900
									? '早上'
									: t < 1130
									? '上午'
									: t < 1230
									? '中午'
									: t < 1800
									? '下午'
									: '晚上';
							},
							calendar: {
								sameDay: '[今天]LT',
								nextDay: '[明天]LT',
								nextWeek: function (e) {
									return e.week() !== this.week() ? '[下]dddLT' : '[本]dddLT';
								},
								lastDay: '[昨天]LT',
								lastWeek: function (e) {
									return this.week() !== e.week() ? '[上]dddLT' : '[本]dddLT';
								},
								sameElse: 'L',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'DDD':
										return e + '日';
									case 'M':
										return e + '月';
									case 'w':
									case 'W':
										return e + '周';
									default:
										return e;
								}
							},
							relativeTime: {
								future: '%s后',
								past: '%s前',
								s: '几秒',
								ss: '%d 秒',
								m: '1 分钟',
								mm: '%d 分钟',
								h: '1 小时',
								hh: '%d 小时',
								d: '1 天',
								dd: '%d 天',
								w: '1 周',
								ww: '%d 周',
								M: '1 个月',
								MM: '%d 个月',
								y: '1 年',
								yy: '%d 年',
							},
							week: { dow: 1, doy: 4 },
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('zh-hk', {
							months:
								'一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
									'_'
								),
							monthsShort:
								'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
							weekdays:
								'星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
							weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
							weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY/MM/DD',
								LL: 'YYYY年M月D日',
								LLL: 'YYYY年M月D日 HH:mm',
								LLLL: 'YYYY年M月D日dddd HH:mm',
								l: 'YYYY/M/D',
								ll: 'YYYY年M月D日',
								lll: 'YYYY年M月D日 HH:mm',
								llll: 'YYYY年M月D日dddd HH:mm',
							},
							meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'凌晨' === t || '早上' === t || '上午' === t
										? e
										: '中午' === t
										? 11 <= e
											? e
											: e + 12
										: '下午' === t || '晚上' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								t = 100 * e + t;
								return t < 600
									? '凌晨'
									: t < 900
									? '早上'
									: t < 1200
									? '上午'
									: 1200 === t
									? '中午'
									: t < 1800
									? '下午'
									: '晚上';
							},
							calendar: {
								sameDay: '[今天]LT',
								nextDay: '[明天]LT',
								nextWeek: '[下]ddddLT',
								lastDay: '[昨天]LT',
								lastWeek: '[上]ddddLT',
								sameElse: 'L',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'DDD':
										return e + '日';
									case 'M':
										return e + '月';
									case 'w':
									case 'W':
										return e + '週';
									default:
										return e;
								}
							},
							relativeTime: {
								future: '%s後',
								past: '%s前',
								s: '幾秒',
								ss: '%d 秒',
								m: '1 分鐘',
								mm: '%d 分鐘',
								h: '1 小時',
								hh: '%d 小時',
								d: '1 天',
								dd: '%d 天',
								M: '1 個月',
								MM: '%d 個月',
								y: '1 年',
								yy: '%d 年',
							},
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('zh-mo', {
							months:
								'一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
									'_'
								),
							monthsShort:
								'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
							weekdays:
								'星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
							weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
							weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'DD/MM/YYYY',
								LL: 'YYYY年M月D日',
								LLL: 'YYYY年M月D日 HH:mm',
								LLLL: 'YYYY年M月D日dddd HH:mm',
								l: 'D/M/YYYY',
								ll: 'YYYY年M月D日',
								lll: 'YYYY年M月D日 HH:mm',
								llll: 'YYYY年M月D日dddd HH:mm',
							},
							meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'凌晨' === t || '早上' === t || '上午' === t
										? e
										: '中午' === t
										? 11 <= e
											? e
											: e + 12
										: '下午' === t || '晚上' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								t = 100 * e + t;
								return t < 600
									? '凌晨'
									: t < 900
									? '早上'
									: t < 1130
									? '上午'
									: t < 1230
									? '中午'
									: t < 1800
									? '下午'
									: '晚上';
							},
							calendar: {
								sameDay: '[今天] LT',
								nextDay: '[明天] LT',
								nextWeek: '[下]dddd LT',
								lastDay: '[昨天] LT',
								lastWeek: '[上]dddd LT',
								sameElse: 'L',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'DDD':
										return e + '日';
									case 'M':
										return e + '月';
									case 'w':
									case 'W':
										return e + '週';
									default:
										return e;
								}
							},
							relativeTime: {
								future: '%s內',
								past: '%s前',
								s: '幾秒',
								ss: '%d 秒',
								m: '1 分鐘',
								mm: '%d 分鐘',
								h: '1 小時',
								hh: '%d 小時',
								d: '1 天',
								dd: '%d 天',
								M: '1 個月',
								MM: '%d 個月',
								y: '1 年',
								yy: '%d 年',
							},
						});
					})();
				},
				function (e, t, n) {
					!(function () {
						'use strict';
						//! moment.js locale configuration
						n(0).defineLocale('zh-tw', {
							months:
								'一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
									'_'
								),
							monthsShort:
								'1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
							weekdays:
								'星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
							weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
							weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
							longDateFormat: {
								LT: 'HH:mm',
								LTS: 'HH:mm:ss',
								L: 'YYYY/MM/DD',
								LL: 'YYYY年M月D日',
								LLL: 'YYYY年M月D日 HH:mm',
								LLLL: 'YYYY年M月D日dddd HH:mm',
								l: 'YYYY/M/D',
								ll: 'YYYY年M月D日',
								lll: 'YYYY年M月D日 HH:mm',
								llll: 'YYYY年M月D日dddd HH:mm',
							},
							meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
							meridiemHour: function (e, t) {
								return (
									12 === e && (e = 0),
									'凌晨' === t || '早上' === t || '上午' === t
										? e
										: '中午' === t
										? 11 <= e
											? e
											: e + 12
										: '下午' === t || '晚上' === t
										? e + 12
										: void 0
								);
							},
							meridiem: function (e, t, n) {
								t = 100 * e + t;
								return t < 600
									? '凌晨'
									: t < 900
									? '早上'
									: t < 1130
									? '上午'
									: t < 1230
									? '中午'
									: t < 1800
									? '下午'
									: '晚上';
							},
							calendar: {
								sameDay: '[今天] LT',
								nextDay: '[明天] LT',
								nextWeek: '[下]dddd LT',
								lastDay: '[昨天] LT',
								lastWeek: '[上]dddd LT',
								sameElse: 'L',
							},
							dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
							ordinal: function (e, t) {
								switch (t) {
									case 'd':
									case 'D':
									case 'DDD':
										return e + '日';
									case 'M':
										return e + '月';
									case 'w':
									case 'W':
										return e + '週';
									default:
										return e;
								}
							},
							relativeTime: {
								future: '%s後',
								past: '%s前',
								s: '幾秒',
								ss: '%d 秒',
								m: '1 分鐘',
								mm: '%d 分鐘',
								h: '1 小時',
								hh: '%d 小時',
								d: '1 天',
								dd: '%d 天',
								M: '1 個月',
								MM: '%d 個月',
								y: '1 年',
								yy: '%d 年',
							},
						});
					})();
				},
				function (e, t, n) {
					function i(e) {
						var t;
						k.hasOwnProperty(e) && ((t = k[e]), delete k[e], t());
					}
					function r(e) {
						return function () {
							i(e);
						};
					}
					function o(e) {
						i(e.data);
					}
					var a,
						s = n(14),
						l = n(10),
						u = n(57),
						c = n(126),
						d = n(87),
						f = n(285),
						h = n(85),
						p = s.location,
						m = s.setImmediate,
						_ = s.clearImmediate,
						v = s.process,
						y = s.MessageChannel,
						g = s.Dispatch,
						b = 0,
						k = {},
						w = 'onreadystatechange',
						n = function (e) {
							s.postMessage(e + '', p.protocol + '//' + p.host);
						};
					(m && _) ||
						((m = function (e) {
							for (var t = [], n = 1; n < arguments.length; )
								t.push(arguments[n++]);
							return (
								(k[++b] = function () {
									('function' == typeof e ? e : Function(e)).apply(void 0, t);
								}),
								a(b),
								b
							);
						}),
						(_ = function (e) {
							delete k[e];
						}),
						h
							? (a = function (e) {
									v.nextTick(r(e));
							  })
							: g && g.now
							? (a = function (e) {
									g.now(r(e));
							  })
							: y && !f
							? ((y = (f = new y()).port2),
							  (f.port1.onmessage = o),
							  (a = u(y.postMessage, y, 1)))
							: s.addEventListener &&
							  'function' == typeof postMessage &&
							  !s.importScripts &&
							  p &&
							  'file:' !== p.protocol &&
							  !l(n)
							? ((a = n), s.addEventListener('message', o, !1))
							: (a =
									w in d('script')
										? function (e) {
												c.appendChild(d('script'))[w] = function () {
													c.removeChild(this), i(e);
												};
										  }
										: function (e) {
												setTimeout(r(e), 0);
										  })),
						(e.exports = { set: m, clear: _ });
				},
				function (e, t, n) {
					n = n(130);
					e.exports = /(iphone|ipod|ipad).*applewebkit/i.test(n);
				},
				function (e, t, n) {
					'use strict';
					function i(e) {
						var n, i;
						(this.promise = new e(function (e, t) {
							if (void 0 !== n || void 0 !== i)
								throw TypeError('Bad Promise constructor');
							(n = e), (i = t);
						})),
							(this.resolve = r(n)),
							(this.reject = r(i));
					}
					var r = n(50);
					e.exports.f = function (e) {
						return new i(e);
					};
				},
				function (e, t, n) {
					var i = (function (a) {
						'use strict';
						var l,
							e = Object.prototype,
							u = e.hasOwnProperty,
							t = 'function' == typeof Symbol ? Symbol : {},
							i = t.iterator || '@@iterator',
							n = t.asyncIterator || '@@asyncIterator',
							r = t.toStringTag || '@@toStringTag';
						function o(e, t, n) {
							return (
								Object.defineProperty(e, t, {
									value: n,
									enumerable: !0,
									configurable: !0,
									writable: !0,
								}),
								e[t]
							);
						}
						try {
							o({}, '');
						} catch (e) {
							o = function (e, t, n) {
								return (e[t] = n);
							};
						}
						function s(e, t, n, i) {
							var r,
								o,
								a,
								s,
								t = t && t.prototype instanceof _ ? t : _,
								t = Object.create(t.prototype),
								i = new x(i || []);
							return (
								(t._invoke =
									((r = e),
									(o = n),
									(a = i),
									(s = d),
									function (e, t) {
										if (s === h)
											throw new Error('Generator is already running');
										if (s === p) {
											if ('throw' === e) throw t;
											return S();
										}
										for (a.method = e, a.arg = t; ; ) {
											var n = a.delegate;
											if (n) {
												var i = (function e(t, n) {
													var i = t.iterator[n.method];
													if (i === l) {
														if (((n.delegate = null), 'throw' === n.method)) {
															if (
																t.iterator.return &&
																((n.method = 'return'),
																(n.arg = l),
																e(t, n),
																'throw' === n.method)
															)
																return m;
															(n.method = 'throw'),
																(n.arg = new TypeError(
																	"The iterator does not provide a 'throw' method"
																));
														}
														return m;
													}
													i = c(i, t.iterator, n.arg);
													if ('throw' === i.type)
														return (
															(n.method = 'throw'),
															(n.arg = i.arg),
															(n.delegate = null),
															m
														);
													var i = i.arg;
													if (!i)
														return (
															(n.method = 'throw'),
															(n.arg = new TypeError(
																'iterator result is not an object'
															)),
															(n.delegate = null),
															m
														);
													{
														if (!i.done) return i;
														(n[t.resultName] = i.value),
															(n.next = t.nextLoc),
															'return' !== n.method &&
																((n.method = 'next'), (n.arg = l));
													}
													n.delegate = null;
													return m;
												})(n, a);
												if (i) {
													if (i === m) continue;
													return i;
												}
											}
											if ('next' === a.method) a.sent = a._sent = a.arg;
											else if ('throw' === a.method) {
												if (s === d) throw ((s = p), a.arg);
												a.dispatchException(a.arg);
											} else 'return' === a.method && a.abrupt('return', a.arg);
											s = h;
											i = c(r, o, a);
											if ('normal' === i.type) {
												if (((s = a.done ? p : f), i.arg !== m))
													return { value: i.arg, done: a.done };
											} else
												'throw' === i.type &&
													((s = p), (a.method = 'throw'), (a.arg = i.arg));
										}
									})),
								t
							);
						}
						function c(e, t, n) {
							try {
								return { type: 'normal', arg: e.call(t, n) };
							} catch (e) {
								return { type: 'throw', arg: e };
							}
						}
						a.wrap = s;
						var d = 'suspendedStart',
							f = 'suspendedYield',
							h = 'executing',
							p = 'completed',
							m = {};
						function _() {}
						function v() {}
						function y() {}
						var g = {};
						g[i] = function () {
							return this;
						};
						(t = Object.getPrototypeOf), (t = t && t(t(D([]))));
						t && t !== e && u.call(t, i) && (g = t);
						var b = (y.prototype = _.prototype = Object.create(g));
						function k(e) {
							['next', 'throw', 'return'].forEach(function (t) {
								o(e, t, function (e) {
									return this._invoke(t, e);
								});
							});
						}
						function w(a, s) {
							var t;
							this._invoke = function (n, i) {
								function e() {
									return new s(function (e, t) {
										!(function t(e, n, i, r) {
											e = c(a[e], a, n);
											if ('throw' !== e.type) {
												var o = e.arg,
													n = o.value;
												return n && 'object' == typeof n && u.call(n, '__await')
													? s.resolve(n.__await).then(
															function (e) {
																t('next', e, i, r);
															},
															function (e) {
																t('throw', e, i, r);
															}
													  )
													: s.resolve(n).then(
															function (e) {
																(o.value = e), i(o);
															},
															function (e) {
																return t('throw', e, i, r);
															}
													  );
											}
											r(e.arg);
										})(n, i, e, t);
									});
								}
								return (t = t ? t.then(e, e) : e());
							};
						}
						function M(e) {
							var t = { tryLoc: e[0] };
							1 in e && (t.catchLoc = e[1]),
								2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])),
								this.tryEntries.push(t);
						}
						function L(e) {
							var t = e.completion || {};
							(t.type = 'normal'), delete t.arg, (e.completion = t);
						}
						function x(e) {
							(this.tryEntries = [{ tryLoc: 'root' }]),
								e.forEach(M, this),
								this.reset(!0);
						}
						function D(t) {
							if (t) {
								var e = t[i];
								if (e) return e.call(t);
								if ('function' == typeof t.next) return t;
								if (!isNaN(t.length)) {
									var n = -1,
										e = function e() {
											for (; ++n < t.length; )
												if (u.call(t, n))
													return (e.value = t[n]), (e.done = !1), e;
											return (e.value = l), (e.done = !0), e;
										};
									return (e.next = e);
								}
							}
							return { next: S };
						}
						function S() {
							return { value: l, done: !0 };
						}
						return (
							(((v.prototype = b.constructor = y).constructor = v).displayName =
								o(y, r, 'GeneratorFunction')),
							(a.isGeneratorFunction = function (e) {
								e = 'function' == typeof e && e.constructor;
								return (
									!!e &&
									(e === v || 'GeneratorFunction' === (e.displayName || e.name))
								);
							}),
							(a.mark = function (e) {
								return (
									Object.setPrototypeOf
										? Object.setPrototypeOf(e, y)
										: ((e.__proto__ = y), o(e, r, 'GeneratorFunction')),
									(e.prototype = Object.create(b)),
									e
								);
							}),
							(a.awrap = function (e) {
								return { __await: e };
							}),
							k(w.prototype),
							(w.prototype[n] = function () {
								return this;
							}),
							(a.AsyncIterator = w),
							(a.async = function (e, t, n, i, r) {
								void 0 === r && (r = Promise);
								var o = new w(s(e, t, n, i), r);
								return a.isGeneratorFunction(t)
									? o
									: o.next().then(function (e) {
											return e.done ? e.value : o.next();
									  });
							}),
							k(b),
							o(b, r, 'Generator'),
							(b[i] = function () {
								return this;
							}),
							(b.toString = function () {
								return '[object Generator]';
							}),
							(a.keys = function (n) {
								var e,
									i = [];
								for (e in n) i.push(e);
								return (
									i.reverse(),
									function e() {
										for (; i.length; ) {
											var t = i.pop();
											if (t in n) return (e.value = t), (e.done = !1), e;
										}
										return (e.done = !0), e;
									}
								);
							}),
							(a.values = D),
							(x.prototype = {
								constructor: x,
								reset: function (e) {
									if (
										((this.prev = 0),
										(this.next = 0),
										(this.sent = this._sent = l),
										(this.done = !1),
										(this.delegate = null),
										(this.method = 'next'),
										(this.arg = l),
										this.tryEntries.forEach(L),
										!e)
									)
										for (var t in this)
											't' === t.charAt(0) &&
												u.call(this, t) &&
												!isNaN(+t.slice(1)) &&
												(this[t] = l);
								},
								stop: function () {
									this.done = !0;
									var e = this.tryEntries[0].completion;
									if ('throw' === e.type) throw e.arg;
									return this.rval;
								},
								dispatchException: function (n) {
									if (this.done) throw n;
									var i = this;
									function e(e, t) {
										return (
											(o.type = 'throw'),
											(o.arg = n),
											(i.next = e),
											t && ((i.method = 'next'), (i.arg = l)),
											!!t
										);
									}
									for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
										var r = this.tryEntries[t],
											o = r.completion;
										if ('root' === r.tryLoc) return e('end');
										if (r.tryLoc <= this.prev) {
											var a = u.call(r, 'catchLoc'),
												s = u.call(r, 'finallyLoc');
											if (a && s) {
												if (this.prev < r.catchLoc) return e(r.catchLoc, !0);
												if (this.prev < r.finallyLoc) return e(r.finallyLoc);
											} else if (a) {
												if (this.prev < r.catchLoc) return e(r.catchLoc, !0);
											} else {
												if (!s)
													throw new Error(
														'try statement without catch or finally'
													);
												if (this.prev < r.finallyLoc) return e(r.finallyLoc);
											}
										}
									}
								},
								abrupt: function (e, t) {
									for (var n = this.tryEntries.length - 1; 0 <= n; --n) {
										var i = this.tryEntries[n];
										if (
											i.tryLoc <= this.prev &&
											u.call(i, 'finallyLoc') &&
											this.prev < i.finallyLoc
										) {
											var r = i;
											break;
										}
									}
									r &&
										('break' === e || 'continue' === e) &&
										r.tryLoc <= t &&
										t <= r.finallyLoc &&
										(r = null);
									var o = r ? r.completion : {};
									return (
										(o.type = e),
										(o.arg = t),
										r
											? ((this.method = 'next'), (this.next = r.finallyLoc), m)
											: this.complete(o)
									);
								},
								complete: function (e, t) {
									if ('throw' === e.type) throw e.arg;
									return (
										'break' === e.type || 'continue' === e.type
											? (this.next = e.arg)
											: 'return' === e.type
											? ((this.rval = this.arg = e.arg),
											  (this.method = 'return'),
											  (this.next = 'end'))
											: 'normal' === e.type && t && (this.next = t),
										m
									);
								},
								finish: function (e) {
									for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
										var n = this.tryEntries[t];
										if (n.finallyLoc === e)
											return this.complete(n.completion, n.afterLoc), L(n), m;
									}
								},
								catch: function (e) {
									for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
										var n = this.tryEntries[t];
										if (n.tryLoc === e) {
											var i,
												r = n.completion;
											return 'throw' === r.type && ((i = r.arg), L(n)), i;
										}
									}
									throw new Error('illegal catch attempt');
								},
								delegateYield: function (e, t, n) {
									return (
										(this.delegate = {
											iterator: D(e),
											resultName: t,
											nextLoc: n,
										}),
										'next' === this.method && (this.arg = l),
										m
									);
								},
							}),
							a
						);
					})(e.exports);
					try {
						regeneratorRuntime = i;
					} catch (e) {
						Function('r', 'regeneratorRuntime = r')(i);
					}
				},
				function (e, t, n) {
					var i = n(10),
						r = n(15),
						o = n(48),
						a = r('iterator');
					e.exports = !i(function () {
						var e = new URL('b?a=1&b=2&c=3', 'http://a'),
							n = e.searchParams,
							i = '';
						return (
							(e.pathname = 'c%20d'),
							n.forEach(function (e, t) {
								n.delete('b'), (i += t + e);
							}),
							(o && !e.toJSON) ||
								!n.sort ||
								'http://a/c%20d?a=1&c=3' !== e.href ||
								'3' !== n.get('c') ||
								'a=1' !== String(new URLSearchParams('?a=1')) ||
								!n[a] ||
								'a' !== new URL('https://a@b').username ||
								'b' !==
									new URLSearchParams(new URLSearchParams('a=b')).get('a') ||
								'xn--e1aybc' !== new URL('http://тест').host ||
								'#%D0%B1' !== new URL('http://a#б').hash ||
								'a1c3' !== i ||
								'x' !== new URL('http://x', void 0).host
						);
					});
				},
				function (e, t, n) {
					var i = n(6),
						r = n(321).values;
					i(
						{ target: 'Object', stat: !0 },
						{
							values: function (e) {
								return r(e);
							},
						}
					);
				},
				function (e, t, n) {
					'use strict';
					var i = n(6),
						d = n(93),
						f = n(62),
						h = n(32),
						p = n(35),
						m = n(96),
						_ = n(66),
						r = n(67),
						n = n(36),
						r = r('splice'),
						n = n('splice', { ACCESSORS: !0, 0: 0, 1: 2 }),
						v = Math.max,
						y = Math.min;
					i(
						{ target: 'Array', proto: !0, forced: !r || !n },
						{
							splice: function (e, t) {
								var n,
									i,
									r,
									o,
									a,
									s,
									l = p(this),
									u = h(l.length),
									c = d(e, u),
									e = arguments.length;
								if (
									(0 === e
										? (n = i = 0)
										: (i =
												1 === e
													? ((n = 0), u - c)
													: ((n = e - 2), y(v(f(t), 0), u - c))),
									9007199254740991 < u + n - i)
								)
									throw TypeError('Maximum allowed length exceeded');
								for (r = m(l, i), o = 0; o < i; o++)
									(a = c + o) in l && _(r, o, l[a]);
								if (n < (r.length = i)) {
									for (o = c; o < u - i; o++)
										(s = o + n), (a = o + i) in l ? (l[s] = l[a]) : delete l[s];
									for (o = u; u - i + n < o; o--) delete l[o - 1];
								} else if (i < n)
									for (o = u - i; c < o; o--)
										(s = o + n - 1),
											(a = o + i - 1) in l ? (l[s] = l[a]) : delete l[s];
								for (o = 0; o < n; o++) l[o + c] = arguments[o + 2];
								return (l.length = u - i + n), r;
							},
						}
					);
				},
				function (e, t) {
					var n = (function () {
						return this;
					})();
					try {
						n = n || new Function('return this')();
					} catch (e) {
						'object' == typeof window && (n = window);
					}
					e.exports = n;
				},
				function (e, t, n) {
					var i = n(14),
						n = n(89),
						i = i.WeakMap;
					e.exports = 'function' == typeof i && /native code/.test(n(i));
				},
				function (e, t, n) {
					var i = n(17);
					e.exports = function (e) {
						if (!i(e) && null !== e)
							throw TypeError("Can't set " + String(e) + ' as a prototype');
						return e;
					};
				},
				function (e, t, n) {
					'use strict';
					var i = n(100),
						r = n(101);
					e.exports = i
						? {}.toString
						: function () {
								return '[object ' + r(this) + ']';
						  };
				},
				function (e, t, n) {
					'use strict';
					var o = n(50),
						a = n(17),
						s = [].slice,
						l = {};
					e.exports =
						Function.bind ||
						function (t) {
							var n = o(this),
								i = s.call(arguments, 1),
								r = function () {
									var e = i.concat(s.call(arguments));
									return this instanceof r
										? (function (e, t, n) {
												if (!(t in l)) {
													for (var i = [], r = 0; r < t; r++)
														i[r] = 'a[' + r + ']';
													l[t] = Function(
														'C,a',
														'return new C(' + i.join(',') + ')'
													);
												}
												return l[t](e, n);
										  })(n, e.length, e)
										: n.apply(t, e);
								};
							return a(n.prototype) && (r.prototype = n.prototype), r;
						};
				},
				function (e, t, n) {
					var r = n(18),
						o = n(132);
					e.exports = function (t, e, n, i) {
						try {
							return i ? e(r(n)[0], n[1]) : e(n);
						} catch (e) {
							throw (o(t), e);
						}
					};
				},
				function (e, t, n) {
					var i = n(14),
						r = n(79).trim,
						n = n(80),
						o = i.parseFloat,
						n = 1 / o(n + '-0') != -1 / 0;
					e.exports = n
						? function (e) {
								var t = r(String(e)),
									e = o(t);
								return 0 === e && '-' == t.charAt(0) ? -0 : e;
						  }
						: o;
				},
				function (e, t, n) {
					var i = n(10),
						r = n(80);
					e.exports = function (e) {
						return i(function () {
							return !!r[e]() || '​᠎' != '​᠎'[e]() || r[e].name !== e;
						});
					};
				},
				function (e, t, n) {
					var i = n(6),
						n = n(141);
					i(
						{ target: 'Object', stat: !0, forced: Object.assign !== n },
						{ assign: n }
					);
				},
				function (e, t, n) {
					'use strict';
					var i = n(146),
						n = n(148);
					e.exports = i(
						'Map',
						function (t) {
							return function (e) {
								return t(this, arguments.length ? e : void 0);
							};
						},
						n
					);
				},
				function (e, t, n) {
					n = n(10);
					e.exports = !n(function () {
						return Object.isExtensible(Object.preventExtensions({}));
					});
				},
				function (e, t, n) {
					var i = n(6),
						r = n(10),
						n = n(138).f;
					i(
						{
							target: 'Object',
							stat: !0,
							forced: r(function () {
								return !Object.getOwnPropertyNames(1);
							}),
						},
						{ getOwnPropertyNames: n }
					);
				},
				function (e, t, n) {
					var i = n(14),
						r = n(79).trim,
						n = n(80),
						o = i.parseInt,
						a = /^[+-]?0[Xx]/,
						n = 8 !== o(n + '08') || 22 !== o(n + '0x16');
					e.exports = n
						? function (e, t) {
								e = r(String(e));
								return o(e, t >>> 0 || (a.test(e) ? 16 : 10));
						  }
						: o;
				},
				function (e, t) {
					function r(e) {
						if (i[e]) return i[e].exports;
						var t = (i[e] = { i: e, l: !1, exports: {} });
						return n[e].call(t.exports, t, t.exports, r), (t.l = !0), t.exports;
					}
					var n, i;
					(i = {}),
						(r.m = n =
							[
								function (e, t, n) {
									'use strict';
									function i(e) {
										var t;
										e.hasAttribute('autocompleted') ||
											(e.setAttribute('autocompleted', ''),
											(t = new window.CustomEvent('onautocomplete', {
												bubbles: !0,
												cancelable: !0,
												detail: null,
											})),
											e.dispatchEvent(t) || (e.value = ''));
									}
									function r(e) {
										e.hasAttribute('autocompleted') &&
											(e.removeAttribute('autocompleted'),
											e.dispatchEvent(
												new window.CustomEvent('onautocomplete', {
													bubbles: !0,
													cancelable: !1,
													detail: null,
												})
											));
									}
									n.r(t),
										n(1),
										n(5),
										document.addEventListener(
											'animationstart',
											function (e) {
												('onautofillstart' === e.animationName ? i : r)(
													e.target
												);
											},
											!0
										),
										document.addEventListener(
											'input',
											function (e) {
												('insertReplacementText' !== e.inputType && 'data' in e
													? r
													: i)(e.target);
											},
											!0
										);
								},
								function (e, t, n) {
									var i = n(2),
										n = n(3);
									'string' == typeof (n = n.__esModule ? n.default : n) &&
										(n = [[e.i, n, '']]);
									i(n, { insert: 'head', singleton: !1 }), (n = n.locals || {});
									e.exports = n;
								},
								function (e, t, r) {
									'use strict';
									var n,
										i,
										o =
											((i = {}),
											function (e) {
												if (void 0 === i[e]) {
													var t = document.querySelector(e);
													if (
														window.HTMLIFrameElement &&
														t instanceof window.HTMLIFrameElement
													)
														try {
															t = t.contentDocument.head;
														} catch (e) {
															t = null;
														}
													i[e] = t;
												}
												return i[e];
											}),
										u = [];
									function c(e) {
										for (var t = -1, n = 0; n < u.length; n++)
											if (u[n].identifier === e) {
												t = n;
												break;
											}
										return t;
									}
									function s(e, t) {
										for (var n = {}, i = [], r = 0; r < e.length; r++) {
											var o = e[r],
												a = t.base ? o[0] + t.base : o[0],
												s = n[a] || 0,
												l = ''.concat(a, ' ').concat(s);
											n[a] = s + 1;
											(s = c(l)),
												(o = { css: o[1], media: o[2], sourceMap: o[3] });
											-1 !== s
												? (u[s].references++, u[s].updater(o))
												: u.push({
														identifier: l,
														updater: (function (t, e) {
															var n, i, r;
															{
																var o;
																r = e.singleton
																	? ((o = p++),
																	  (n = h = h || d(e)),
																	  (i = f.bind(null, n, o, !1)),
																	  f.bind(null, n, o, !0))
																	: ((n = d(e)),
																	  (i = function (e, t, n) {
																			var i = n.css,
																				r = n.media,
																				n = n.sourceMap;
																			if (
																				(r
																					? e.setAttribute('media', r)
																					: e.removeAttribute('media'),
																				n &&
																					btoa &&
																					(i +=
																						'\n/*# sourceMappingURL=data:application/json;base64,'.concat(
																							btoa(
																								unescape(
																									encodeURIComponent(
																										JSON.stringify(n)
																									)
																								)
																							),
																							' */'
																						)),
																				e.styleSheet)
																			)
																				e.styleSheet.cssText = i;
																			else {
																				for (; e.firstChild; )
																					e.removeChild(e.firstChild);
																				e.appendChild(
																					document.createTextNode(i)
																				);
																			}
																	  }.bind(null, n, e)),
																	  function () {
																			null !== n.parentNode &&
																				n.parentNode.removeChild(n);
																	  });
															}
															return (
																i(t),
																function (e) {
																	e
																		? (e.css === t.css &&
																				e.media === t.media &&
																				e.sourceMap === t.sourceMap) ||
																		  i((t = e))
																		: r();
																}
															);
														})(o, t),
														references: 1,
												  }),
												i.push(l);
										}
										return i;
									}
									function d(e) {
										var t,
											n = document.createElement('style'),
											i = e.attributes || {};
										if (
											(void 0 !== i.nonce || ((t = r.nc) && (i.nonce = t)),
											Object.keys(i).forEach(function (e) {
												n.setAttribute(e, i[e]);
											}),
											'function' == typeof e.insert)
										)
											e.insert(n);
										else {
											e = o(e.insert || 'head');
											if (!e)
												throw new Error(
													"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid."
												);
											e.appendChild(n);
										}
										return n;
									}
									var a,
										l =
											((a = []),
											function (e, t) {
												return (a[e] = t), a.filter(Boolean).join('\n');
											});
									function f(e, t, n, i) {
										n = n
											? ''
											: i.media
											? '@media '.concat(i.media, ' {').concat(i.css, '}')
											: i.css;
										e.styleSheet
											? (e.styleSheet.cssText = l(t, n))
											: ((i = document.createTextNode(n)),
											  (n = e.childNodes)[t] && e.removeChild(n[t]),
											  n.length ? e.insertBefore(i, n[t]) : e.appendChild(i));
									}
									var h = null,
										p = 0;
									e.exports = function (e, o) {
										(o = o || {}).singleton ||
											'boolean' == typeof o.singleton ||
											(o.singleton =
												(void 0 === n &&
													(n = Boolean(
														window && document && document.all && !window.atob
													)),
												n));
										var a = s((e = e || []), o);
										return function (e) {
											if (
												((e = e || []),
												'[object Array]' === Object.prototype.toString.call(e))
											) {
												for (var t = 0; t < a.length; t++) {
													var n = c(a[t]);
													u[n].references--;
												}
												for (var e = s(e, o), i = 0; i < a.length; i++) {
													var r = c(a[i]);
													0 === u[r].references &&
														(u[r].updater(), u.splice(r, 1));
												}
												a = e;
											}
										};
									};
								},
								function (e, t, n) {
									(t = n(4)(!1)).push([
										e.i,
										'INPUT:-webkit-autofill,SELECT:-webkit-autofill,TEXTAREA:-webkit-autofill{animation-name:onautofillstart}INPUT:not(:-webkit-autofill),SELECT:not(:-webkit-autofill),TEXTAREA:not(:-webkit-autofill){animation-name:onautofillcancel}@keyframes onautofillstart{from{}}@keyframes onautofillcancel{from{}}\n',
										'',
									]),
										(e.exports = t);
								},
								function (e, t, n) {
									'use strict';
									e.exports = function (o) {
										var l = [];
										return (
											(l.toString = function () {
												return this.map(function (r) {
													var e = (function () {
														var e = r[1] || '',
															t = r[3];
														if (!t) return e;
														if (o && 'function' == typeof btoa) {
															var n =
																	((n = btoa(
																		unescape(
																			encodeURIComponent(JSON.stringify(t))
																		)
																	)),
																	(i =
																		'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(
																			n
																		)),
																	'/*# '.concat(i, ' */')),
																i = t.sources.map(function (e) {
																	return '/*# sourceURL='
																		.concat(t.sourceRoot || '')
																		.concat(e, ' */');
																});
															return [e].concat(i).concat([n]).join('\n');
														}
														return [e].join('\n');
													})();
													return r[2]
														? '@media '.concat(r[2], ' {').concat(e, '}')
														: e;
												}).join('');
											}),
											(l.i = function (e, t, n) {
												'string' == typeof e && (e = [[null, e, '']]);
												var i = {};
												if (n)
													for (var r = 0; r < this.length; r++) {
														var o = this[r][0];
														null != o && (i[o] = !0);
													}
												for (var a = 0; a < e.length; a++) {
													var s = [].concat(e[a]);
													(n && i[s[0]]) ||
														(t &&
															(s[2]
																? (s[2] = ''.concat(t, ' and ').concat(s[2]))
																: (s[2] = t)),
														l.push(s));
												}
											}),
											l
										);
									};
								},
								function (e, t) {
									!(function () {
										if ('undefined' != typeof window)
											try {
												var e = new window.CustomEvent('test', {
													cancelable: !0,
												});
												if ((e.preventDefault(), !0 !== e.defaultPrevented))
													throw new Error('Could not prevent default');
											} catch (e) {
												function t(e, t) {
													var n, i;
													return (
														((t = t || {}).bubbles = !!t.bubbles),
														(t.cancelable = !!t.cancelable),
														(n =
															document.createEvent(
																'CustomEvent'
															)).initCustomEvent(
															e,
															t.bubbles,
															t.cancelable,
															t.detail
														),
														(i = n.preventDefault),
														(n.preventDefault = function () {
															i.call(this);
															try {
																Object.defineProperty(
																	this,
																	'defaultPrevented',
																	{
																		get: function () {
																			return !0;
																		},
																	}
																);
															} catch (e) {
																this.defaultPrevented = !0;
															}
														}),
														n
													);
												}
												(t.prototype = window.Event.prototype),
													(window.CustomEvent = t);
											}
									})();
								},
							]),
						(r.c = i),
						(r.d = function (e, t, n) {
							r.o(e, t) ||
								Object.defineProperty(e, t, { enumerable: !0, get: n });
						}),
						(r.r = function (e) {
							'undefined' != typeof Symbol &&
								Symbol.toStringTag &&
								Object.defineProperty(e, Symbol.toStringTag, {
									value: 'Module',
								}),
								Object.defineProperty(e, '__esModule', { value: !0 });
						}),
						(r.t = function (t, e) {
							if ((1 & e && (t = r(t)), 8 & e)) return t;
							if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
							var n = Object.create(null);
							if (
								(r.r(n),
								Object.defineProperty(n, 'default', {
									enumerable: !0,
									value: t,
								}),
								2 & e && 'string' != typeof t)
							)
								for (var i in t)
									r.d(
										n,
										i,
										function (e) {
											return t[e];
										}.bind(null, i)
									);
							return n;
						}),
						(r.n = function (e) {
							var t =
								e && e.__esModule
									? function () {
											return e.default;
									  }
									: function () {
											return e;
									  };
							return r.d(t, 'a', t), t;
						}),
						(r.o = function (e, t) {
							return Object.prototype.hasOwnProperty.call(e, t);
						}),
						(r.p = ''),
						r((r.s = 0));
				},
				function (e, t, n) {
					var i = n(22),
						r = n(29).f,
						n = Function.prototype,
						o = n.toString,
						a = /^\s*function ([^ (]*)/;
					!i ||
						'name' in n ||
						r(n, 'name', {
							configurable: !0,
							get: function () {
								try {
									return o.call(this).match(a)[1];
								} catch (e) {
									return '';
								}
							},
						});
				},
				function (e, t) {
					e.exports = function (e) {
						return (
							e.webpackPolyfill ||
								((e.deprecate = function () {}),
								(e.paths = []),
								e.children || (e.children = []),
								Object.defineProperty(e, 'loaded', {
									enumerable: !0,
									get: function () {
										return e.l;
									},
								}),
								Object.defineProperty(e, 'id', {
									enumerable: !0,
									get: function () {
										return e.i;
									},
								}),
								(e.webpackPolyfill = 1)),
							e
						);
					};
				},
				function (e, t, n) {
					var i = {
						'./af': 149,
						'./af.js': 149,
						'./ar': 150,
						'./ar-dz': 151,
						'./ar-dz.js': 151,
						'./ar-kw': 152,
						'./ar-kw.js': 152,
						'./ar-ly': 153,
						'./ar-ly.js': 153,
						'./ar-ma': 154,
						'./ar-ma.js': 154,
						'./ar-sa': 155,
						'./ar-sa.js': 155,
						'./ar-tn': 156,
						'./ar-tn.js': 156,
						'./ar.js': 150,
						'./az': 157,
						'./az.js': 157,
						'./be': 158,
						'./be.js': 158,
						'./bg': 159,
						'./bg.js': 159,
						'./bm': 160,
						'./bm.js': 160,
						'./bn': 161,
						'./bn-bd': 162,
						'./bn-bd.js': 162,
						'./bn.js': 161,
						'./bo': 163,
						'./bo.js': 163,
						'./br': 164,
						'./br.js': 164,
						'./bs': 165,
						'./bs.js': 165,
						'./ca': 166,
						'./ca.js': 166,
						'./cs': 167,
						'./cs.js': 167,
						'./cv': 168,
						'./cv.js': 168,
						'./cy': 169,
						'./cy.js': 169,
						'./da': 170,
						'./da.js': 170,
						'./de': 171,
						'./de-at': 172,
						'./de-at.js': 172,
						'./de-ch': 173,
						'./de-ch.js': 173,
						'./de.js': 171,
						'./dv': 174,
						'./dv.js': 174,
						'./el': 175,
						'./el.js': 175,
						'./en-au': 176,
						'./en-au.js': 176,
						'./en-ca': 177,
						'./en-ca.js': 177,
						'./en-gb': 178,
						'./en-gb.js': 178,
						'./en-ie': 179,
						'./en-ie.js': 179,
						'./en-il': 180,
						'./en-il.js': 180,
						'./en-in': 181,
						'./en-in.js': 181,
						'./en-nz': 182,
						'./en-nz.js': 182,
						'./en-sg': 183,
						'./en-sg.js': 183,
						'./eo': 184,
						'./eo.js': 184,
						'./es': 185,
						'./es-do': 186,
						'./es-do.js': 186,
						'./es-mx': 187,
						'./es-mx.js': 187,
						'./es-us': 188,
						'./es-us.js': 188,
						'./es.js': 185,
						'./et': 189,
						'./et.js': 189,
						'./eu': 190,
						'./eu.js': 190,
						'./fa': 191,
						'./fa.js': 191,
						'./fi': 192,
						'./fi.js': 192,
						'./fil': 193,
						'./fil.js': 193,
						'./fo': 194,
						'./fo.js': 194,
						'./fr': 195,
						'./fr-ca': 196,
						'./fr-ca.js': 196,
						'./fr-ch': 197,
						'./fr-ch.js': 197,
						'./fr.js': 195,
						'./fy': 198,
						'./fy.js': 198,
						'./ga': 199,
						'./ga.js': 199,
						'./gd': 200,
						'./gd.js': 200,
						'./gl': 201,
						'./gl.js': 201,
						'./gom-deva': 202,
						'./gom-deva.js': 202,
						'./gom-latn': 203,
						'./gom-latn.js': 203,
						'./gu': 204,
						'./gu.js': 204,
						'./he': 205,
						'./he.js': 205,
						'./hi': 206,
						'./hi.js': 206,
						'./hr': 207,
						'./hr.js': 207,
						'./hu': 208,
						'./hu.js': 208,
						'./hy-am': 209,
						'./hy-am.js': 209,
						'./id': 210,
						'./id.js': 210,
						'./is': 211,
						'./is.js': 211,
						'./it': 212,
						'./it-ch': 213,
						'./it-ch.js': 213,
						'./it.js': 212,
						'./ja': 214,
						'./ja.js': 214,
						'./jv': 215,
						'./jv.js': 215,
						'./ka': 216,
						'./ka.js': 216,
						'./kk': 217,
						'./kk.js': 217,
						'./km': 218,
						'./km.js': 218,
						'./kn': 219,
						'./kn.js': 219,
						'./ko': 220,
						'./ko.js': 220,
						'./ku': 221,
						'./ku.js': 221,
						'./ky': 222,
						'./ky.js': 222,
						'./lb': 223,
						'./lb.js': 223,
						'./lo': 224,
						'./lo.js': 224,
						'./lt': 225,
						'./lt.js': 225,
						'./lv': 226,
						'./lv.js': 226,
						'./me': 227,
						'./me.js': 227,
						'./mi': 228,
						'./mi.js': 228,
						'./mk': 229,
						'./mk.js': 229,
						'./ml': 230,
						'./ml.js': 230,
						'./mn': 231,
						'./mn.js': 231,
						'./mr': 232,
						'./mr.js': 232,
						'./ms': 233,
						'./ms-my': 234,
						'./ms-my.js': 234,
						'./ms.js': 233,
						'./mt': 235,
						'./mt.js': 235,
						'./my': 236,
						'./my.js': 236,
						'./nb': 237,
						'./nb.js': 237,
						'./ne': 238,
						'./ne.js': 238,
						'./nl': 239,
						'./nl-be': 240,
						'./nl-be.js': 240,
						'./nl.js': 239,
						'./nn': 241,
						'./nn.js': 241,
						'./oc-lnc': 242,
						'./oc-lnc.js': 242,
						'./pa-in': 243,
						'./pa-in.js': 243,
						'./pl': 244,
						'./pl.js': 244,
						'./pt': 245,
						'./pt-br': 246,
						'./pt-br.js': 246,
						'./pt.js': 245,
						'./ro': 247,
						'./ro.js': 247,
						'./ru': 248,
						'./ru.js': 248,
						'./sd': 249,
						'./sd.js': 249,
						'./se': 250,
						'./se.js': 250,
						'./si': 251,
						'./si.js': 251,
						'./sk': 252,
						'./sk.js': 252,
						'./sl': 253,
						'./sl.js': 253,
						'./sq': 254,
						'./sq.js': 254,
						'./sr': 255,
						'./sr-cyrl': 256,
						'./sr-cyrl.js': 256,
						'./sr.js': 255,
						'./ss': 257,
						'./ss.js': 257,
						'./sv': 258,
						'./sv.js': 258,
						'./sw': 259,
						'./sw.js': 259,
						'./ta': 260,
						'./ta.js': 260,
						'./te': 261,
						'./te.js': 261,
						'./tet': 262,
						'./tet.js': 262,
						'./tg': 263,
						'./tg.js': 263,
						'./th': 264,
						'./th.js': 264,
						'./tk': 265,
						'./tk.js': 265,
						'./tl-ph': 266,
						'./tl-ph.js': 266,
						'./tlh': 267,
						'./tlh.js': 267,
						'./tr': 268,
						'./tr.js': 268,
						'./tzl': 269,
						'./tzl.js': 269,
						'./tzm': 270,
						'./tzm-latn': 271,
						'./tzm-latn.js': 271,
						'./tzm.js': 270,
						'./ug-cn': 272,
						'./ug-cn.js': 272,
						'./uk': 273,
						'./uk.js': 273,
						'./ur': 274,
						'./ur.js': 274,
						'./uz': 275,
						'./uz-latn': 276,
						'./uz-latn.js': 276,
						'./uz.js': 275,
						'./vi': 277,
						'./vi.js': 277,
						'./x-pseudo': 278,
						'./x-pseudo.js': 278,
						'./yo': 279,
						'./yo.js': 279,
						'./zh-cn': 280,
						'./zh-cn.js': 280,
						'./zh-hk': 281,
						'./zh-hk.js': 281,
						'./zh-mo': 282,
						'./zh-mo.js': 282,
						'./zh-tw': 283,
						'./zh-tw.js': 283,
					};
					function r(e) {
						e = o(e);
						return n(e);
					}
					function o(e) {
						if (n.o(i, e)) return i[e];
						e = new Error("Cannot find module '" + e + "'");
						throw ((e.code = 'MODULE_NOT_FOUND'), e);
					}
					(r.keys = function () {
						return Object.keys(i);
					}),
						(r.resolve = o),
						((e.exports = r).id = 307);
				},
				function (e, t, n) {
					'use strict';
					var r = function (e) {
						return !(
							!(t = e) ||
							'object' != typeof t ||
							((t = e),
							'[object RegExp]' === (e = Object.prototype.toString.call(t)) ||
								'[object Date]' === e ||
								(function (e) {
									return e.$$typeof === i;
								})(t))
						);
						var t;
					};
					var i =
						'function' == typeof Symbol && Symbol.for
							? Symbol.for('react.element')
							: 60103;
					function s(e, t) {
						return !1 !== t.clone && t.isMergeableObject(e)
							? c(((n = e), Array.isArray(n) ? [] : {}), e, t)
							: e;
						var n;
					}
					function o(e, t, n) {
						return e.concat(t).map(function (e) {
							return s(e, n);
						});
					}
					function l(e) {
						return Object.keys(e).concat(
							((t = e),
							Object.getOwnPropertySymbols
								? Object.getOwnPropertySymbols(t).filter(function (e) {
										return t.propertyIsEnumerable(e);
								  })
								: [])
						);
						var t;
					}
					function u(e, t) {
						try {
							return t in e;
						} catch (e) {
							return !1;
						}
					}
					function a(i, r, o) {
						var a = {};
						return (
							o.isMergeableObject(i) &&
								l(i).forEach(function (e) {
									a[e] = s(i[e], o);
								}),
							l(r).forEach(function (e) {
								var t, n;
								(!u((t = i), (n = e)) ||
									(Object.hasOwnProperty.call(t, n) &&
										Object.propertyIsEnumerable.call(t, n))) &&
									(u(i, e) && o.isMergeableObject(r[e])
										? (a[e] =
												((t = e),
												((n = o).customMerge &&
													'function' == typeof (t = n.customMerge(t))
													? t
													: c)(i[e], r[e], o)))
										: (a[e] = s(r[e], o)));
							}),
							a
						);
					}
					function c(e, t, n) {
						((n = n || {}).arrayMerge = n.arrayMerge || o),
							(n.isMergeableObject = n.isMergeableObject || r),
							(n.cloneUnlessOtherwiseSpecified = s);
						var i = Array.isArray(t);
						return i === Array.isArray(e)
							? i
								? n.arrayMerge(e, t, n)
								: a(e, t, n)
							: s(t, n);
					}
					(c.all = function (e, n) {
						if (!Array.isArray(e))
							throw new Error('first argument should be an array');
						return e.reduce(function (e, t) {
							return c(e, t, n);
						}, {});
					}),
						(e.exports = c);
				},
				function (e, t, n) {
					'use strict';
					function p(e) {
						var t;
						return !(!k(e) || 'function' != typeof (t = e.then)) && t;
					}
					function r(d, f) {
						var h;
						d.notified ||
							((d.notified = !0),
							(h = d.reactions),
							O(function () {
								for (var e = d.value, t = 1 == d.state, n = 0; h.length > n; ) {
									var i,
										r,
										o,
										a = h[n++],
										s = t ? a.ok : a.fail,
										l = a.resolve,
										u = a.reject,
										c = a.domain;
									try {
										s
											? (t || (2 === d.rejection && ne(d), (d.rejection = 1)),
											  !0 === s
													? (i = e)
													: (c && c.enter(),
													  (i = s(e)),
													  c && (c.exit(), (o = !0))),
											  i === a.promise
													? u(U('Promise-chain cycle'))
													: (r = p(i))
													? r.call(i, l, u)
													: l(i))
											: u(e);
									} catch (e) {
										c && !o && c.exit(), u(e);
									}
								}
								(d.reactions = []),
									(d.notified = !1),
									f && !d.rejection && ee(d);
							}));
					}
					function o(e, t, n) {
						var i, r;
						Q
							? (((i = X.createEvent('Event')).promise = t),
							  (i.reason = n),
							  i.initEvent(e, !1, !0),
							  h.dispatchEvent(i))
							: (i = { promise: t, reason: n }),
							!$ && (r = h['on' + e])
								? r(i)
								: e === Z && C('Unhandled promise rejection', n);
					}
					function a(t, n, i) {
						return function (e) {
							t(n, e, i);
						};
					}
					function s(e, t, n) {
						e.done ||
							((e.done = !0),
							n && (e = n),
							(e.value = t),
							(e.state = 2),
							r(e, !0));
					}
					var i,
						l,
						u,
						c,
						d = n(6),
						f = n(48),
						h = n(14),
						m = n(46),
						_ = n(310),
						v = n(30),
						y = n(114),
						g = n(52),
						b = n(107),
						k = n(17),
						w = n(50),
						M = n(70),
						L = n(89),
						x = n(113),
						D = n(104),
						S = n(137),
						T = n(284).set,
						O = n(311),
						Y = n(312),
						C = n(313),
						j = n(286),
						E = n(314),
						P = n(42),
						A = n(63),
						H = n(15),
						I = n(85),
						R = n(77),
						N = H('species'),
						W = 'Promise',
						F = P.get,
						B = P.set,
						z = P.getterFor(W),
						V = _,
						U = h.TypeError,
						X = h.document,
						J = h.process,
						q = m('fetch'),
						K = j.f,
						G = K,
						Q = !!(X && X.createEvent && h.dispatchEvent),
						$ = 'function' == typeof PromiseRejectionEvent,
						Z = 'unhandledrejection',
						A = A(W, function () {
							if (!(L(V) !== String(V))) {
								if (66 === R) return !0;
								if (!I && !$) return !0;
							}
							if (f && !V.prototype.finally) return !0;
							if (51 <= R && /native code/.test(V)) return !1;
							function e(e) {
								e(
									function () {},
									function () {}
								);
							}
							var t = V.resolve(1);
							return (
								((t.constructor = {})[N] = e),
								!(t.then(function () {}) instanceof e)
							);
						}),
						D =
							A ||
							!D(function (e) {
								V.all(e).catch(function () {});
							}),
						ee = function (r) {
							T.call(h, function () {
								var e,
									t = r.facade,
									n = r.value,
									i = te(r);
								if (
									i &&
									((e = E(function () {
										I ? J.emit('unhandledRejection', n, t) : o(Z, t, n);
									})),
									(r.rejection = I || te(r) ? 2 : 1),
									e.error)
								)
									throw e.value;
							});
						},
						te = function (e) {
							return 1 !== e.rejection && !e.parent;
						},
						ne = function (t) {
							T.call(h, function () {
								var e = t.facade;
								I
									? J.emit('rejectionHandled', e)
									: o('rejectionhandled', e, t.value);
							});
						},
						ie = function (n, e, t) {
							if (!n.done) {
								(n.done = !0), t && (n = t);
								try {
									if (n.facade === e)
										throw U("Promise can't be resolved itself");
									var i = p(e);
									i
										? O(function () {
												var t = { done: !1 };
												try {
													i.call(e, a(ie, t, n), a(s, t, n));
												} catch (e) {
													s(t, e, n);
												}
										  })
										: ((n.value = e), (n.state = 1), r(n, !1));
								} catch (e) {
									s({ done: !1 }, e, n);
								}
							}
						};
					A &&
						((V = function (e) {
							M(this, V, W), w(e), i.call(this);
							var t = F(this);
							try {
								e(a(ie, t), a(s, t));
							} catch (e) {
								s(t, e);
							}
						}),
						((i = function () {
							B(this, {
								type: W,
								done: !1,
								notified: !1,
								parent: !1,
								reactions: [],
								rejection: !1,
								state: 0,
								value: void 0,
							});
						}).prototype = y(V.prototype, {
							then: function (e, t) {
								var n = z(this),
									i = K(S(this, V));
								return (
									(i.ok = 'function' != typeof e || e),
									(i.fail = 'function' == typeof t && t),
									(i.domain = I ? J.domain : void 0),
									(n.parent = !0),
									n.reactions.push(i),
									0 != n.state && r(n, !1),
									i.promise
								);
							},
							catch: function (e) {
								return this.then(void 0, e);
							},
						})),
						(l = function () {
							var e = new i(),
								t = F(e);
							(this.promise = e),
								(this.resolve = a(ie, t)),
								(this.reject = a(s, t));
						}),
						(j.f = K =
							function (e) {
								return e === V || e === u ? new l() : G(e);
							}),
						f ||
							'function' != typeof _ ||
							((c = _.prototype.then),
							v(
								_.prototype,
								'then',
								function (e, t) {
									var n = this;
									return new V(function (e, t) {
										c.call(n, e, t);
									}).then(e, t);
								},
								{ unsafe: !0 }
							),
							'function' == typeof q &&
								d(
									{ global: !0, enumerable: !0, forced: !0 },
									{
										fetch: function () {
											return Y(V, q.apply(h, arguments));
										},
									}
								))),
						d({ global: !0, wrap: !0, forced: A }, { Promise: V }),
						g(V, W, !1, !0),
						b(W),
						(u = m(W)),
						d(
							{ target: W, stat: !0, forced: A },
							{
								reject: function (e) {
									var t = K(this);
									return t.reject.call(void 0, e), t.promise;
								},
							}
						),
						d(
							{ target: W, stat: !0, forced: f || A },
							{
								resolve: function (e) {
									return Y(f && this === u ? V : this, e);
								},
							}
						),
						d(
							{ target: W, stat: !0, forced: D },
							{
								all: function (e) {
									var s = this,
										t = K(s),
										l = t.resolve,
										u = t.reject,
										n = E(function () {
											var i = w(s.resolve),
												r = [],
												o = 0,
												a = 1;
											x(e, function (e) {
												var t = o++,
													n = !1;
												r.push(void 0),
													a++,
													i.call(s, e).then(function (e) {
														n || ((n = !0), (r[t] = e), --a || l(r));
													}, u);
											}),
												--a || l(r);
										});
									return n.error && u(n.value), t.promise;
								},
								race: function (e) {
									var n = this,
										i = K(n),
										r = i.reject,
										t = E(function () {
											var t = w(n.resolve);
											x(e, function (e) {
												t.call(n, e).then(i.resolve, r);
											});
										});
									return t.error && r(t.value), i.promise;
								},
							}
						);
				},
				function (e, t, n) {
					n = n(14);
					e.exports = n.Promise;
				},
				function (e, t, n) {
					var i,
						r,
						o,
						a,
						s,
						l,
						u,
						c,
						d = n(14),
						f = n(45).f,
						h = n(284).set,
						p = n(285),
						m = n(85),
						_ = d.MutationObserver || d.WebKitMutationObserver,
						v = d.document,
						y = d.process,
						n = d.Promise,
						f = f(d, 'queueMicrotask'),
						f = f && f.value;
					f ||
						((i = function () {
							var e, t;
							for (m && (e = y.domain) && e.exit(); r; ) {
								(t = r.fn), (r = r.next);
								try {
									t();
								} catch (e) {
									throw (r ? a() : (o = void 0), e);
								}
							}
							(o = void 0), e && e.enter();
						}),
						(a =
							!p && !m && _ && v
								? ((s = !0),
								  (l = v.createTextNode('')),
								  new _(i).observe(l, { characterData: !0 }),
								  function () {
										l.data = s = !s;
								  })
								: n && n.resolve
								? ((u = n.resolve(void 0)),
								  (c = u.then),
								  function () {
										c.call(u, i);
								  })
								: m
								? function () {
										y.nextTick(i);
								  }
								: function () {
										h.call(d, i);
								  })),
						(e.exports =
							f ||
							function (e) {
								e = { fn: e, next: void 0 };
								o && (o.next = e), r || ((r = e), a()), (o = e);
							});
				},
				function (e, t, n) {
					var i = n(18),
						r = n(17),
						o = n(286);
					e.exports = function (e, t) {
						if ((i(e), r(t) && t.constructor === e)) return t;
						e = o.f(e);
						return (0, e.resolve)(t), e.promise;
					};
				},
				function (e, t, n) {
					var i = n(14);
					e.exports = function (e, t) {
						var n = i.console;
						n &&
							n.error &&
							(1 === arguments.length ? n.error(e) : n.error(e, t));
					};
				},
				function (e, t) {
					e.exports = function (e) {
						try {
							return { error: !1, value: e() };
						} catch (e) {
							return { error: !0, value: e };
						}
					};
				},
				function (e, t, n) {
					var c = n(50),
						d = n(35),
						f = n(58),
						h = n(32),
						n = function (u) {
							return function (e, t, n, i) {
								c(t);
								var r = d(e),
									o = f(r),
									a = h(r.length),
									s = u ? a - 1 : 0,
									l = u ? -1 : 1;
								if (n < 2)
									for (;;) {
										if (s in o) {
											(i = o[s]), (s += l);
											break;
										}
										if (((s += l), u ? s < 0 : a <= s))
											throw TypeError(
												'Reduce of empty array with no initial value'
											);
									}
								for (; u ? 0 <= s : s < a; s += l)
									s in o && (i = t(i, o[s], s, r));
								return i;
							};
						};
					e.exports = { left: n(!1), right: n(!0) };
				},
				function (e, t, n) {
					'use strict';
					n(27);
					function v(e, t) {
						var n, i, r;
						if ('[' == t.charAt(0))
							return ']' == t.charAt(t.length - 1) && (n = G(t.slice(1, -1)))
								? void (e.host = n)
								: H;
						if (ie(e))
							return (
								(t = x(t)),
								U.test(t) || null === (n = K(t)) ? H : void (e.host = n)
							);
						if (X.test(t)) return H;
						for (n = '', i = L(t), r = 0; r < i.length; r++) n += te(i[r], Q);
						e.host = n;
					}
					function c(e) {
						var t, n, i, r;
						if ('number' == typeof e) {
							for (t = [], n = 0; n < 4; n++)
								t.unshift(e % 256), (e = E(e / 256));
							return t.join('.');
						}
						if ('object' != typeof e) return e;
						for (
							t = '',
								i = (function (e) {
									for (var t = null, n = 1, i = null, r = 0, o = 0; o < 8; o++)
										0 !== e[o]
											? (n < r && ((t = i), (n = r)), (i = null), (r = 0))
											: (null === i && (i = o), ++r);
									return n < r && ((t = i), (n = r)), t;
								})(e),
								n = 0;
							n < 8;
							n++
						)
							(r && 0 === e[n]) ||
								((r = r && !1),
								i === n
									? ((t += n ? ':' : '::'), (r = !0))
									: ((t += e[n].toString(16)), n < 7 && (t += ':')));
						return '[' + t + ']';
					}
					function y(e) {
						return '' != e.username || '' != e.password;
					}
					function r(e) {
						return !e.host || e.cannotBeABaseURL || 'file' == e.scheme;
					}
					function g(e, t) {
						return (
							2 == e.length &&
							R.test(e.charAt(0)) &&
							(':' == (e = e.charAt(1)) || (!t && '|' == e))
						);
					}
					function b(e) {
						var t;
						return (
							1 < e.length &&
							g(e.slice(0, 2)) &&
							(2 == e.length ||
								'/' === (t = e.charAt(2)) ||
								'\\' === t ||
								'?' === t ||
								'#' === t)
						);
					}
					function k(e) {
						var t = e.path,
							n = t.length;
						!n || ('file' == e.scheme && 1 == n && g(t[0], !0)) || t.pop();
					}
					function s(e, t, n, i) {
						var r,
							o,
							a,
							s,
							l = n || re,
							u = 0,
							c = '',
							d = !1,
							f = !1,
							h = !1;
						for (
							n ||
								((e.scheme = ''),
								(e.username = ''),
								(e.password = ''),
								(e.host = null),
								(e.port = null),
								(e.path = []),
								(e.query = null),
								(e.fragment = null),
								(e.cannotBeABaseURL = !1),
								(t = t.replace(J, ''))),
								t = t.replace(q, ''),
								r = L(t);
							u <= r.length;

						) {
							switch (((o = r[u]), l)) {
								case re:
									if (!o || !R.test(o)) {
										if (n) return A;
										l = ae;
										continue;
									}
									(c += o.toLowerCase()), (l = oe);
									break;
								case oe:
									if (o && (N.test(o) || '+' == o || '-' == o || '.' == o))
										c += o.toLowerCase();
									else {
										if (':' != o) {
											if (n) return A;
											(c = ''), (l = ae), (u = 0);
											continue;
										}
										if (
											n &&
											(ie(e) != M(ne, c) ||
												('file' == c && (y(e) || null !== e.port)) ||
												('file' == e.scheme && !e.host))
										)
											return;
										if (((e.scheme = c), n))
											return void (
												ie(e) &&
												ne[e.scheme] == e.port &&
												(e.port = null)
											);
										(c = ''),
											'file' == e.scheme
												? (l = ve)
												: ie(e) && i && i.scheme == e.scheme
												? (l = se)
												: ie(e)
												? (l = de)
												: '/' == r[u + 1]
												? ((l = le), u++)
												: ((e.cannotBeABaseURL = !0),
												  e.path.push(''),
												  (l = we));
									}
									break;
								case ae:
									if (!i || (i.cannotBeABaseURL && '#' != o)) return A;
									if (i.cannotBeABaseURL && '#' == o) {
										(e.scheme = i.scheme),
											(e.path = i.path.slice()),
											(e.query = i.query),
											(e.fragment = ''),
											(e.cannotBeABaseURL = !0),
											(l = Le);
										break;
									}
									l = 'file' == i.scheme ? ve : ue;
									continue;
								case se:
									if ('/' != o || '/' != r[u + 1]) {
										l = ue;
										continue;
									}
									(l = fe), u++;
									break;
								case le:
									if ('/' == o) {
										l = he;
										break;
									}
									l = ke;
									continue;
								case ue:
									if (((e.scheme = i.scheme), o == w))
										(e.username = i.username),
											(e.password = i.password),
											(e.host = i.host),
											(e.port = i.port),
											(e.path = i.path.slice()),
											(e.query = i.query);
									else if ('/' == o || ('\\' == o && ie(e))) l = ce;
									else if ('?' == o)
										(e.username = i.username),
											(e.password = i.password),
											(e.host = i.host),
											(e.port = i.port),
											(e.path = i.path.slice()),
											(e.query = ''),
											(l = Me);
									else {
										if ('#' != o) {
											(e.username = i.username),
												(e.password = i.password),
												(e.host = i.host),
												(e.port = i.port),
												(e.path = i.path.slice()),
												e.path.pop(),
												(l = ke);
											continue;
										}
										(e.username = i.username),
											(e.password = i.password),
											(e.host = i.host),
											(e.port = i.port),
											(e.path = i.path.slice()),
											(e.query = i.query),
											(e.fragment = ''),
											(l = Le);
									}
									break;
								case ce:
									if (!ie(e) || ('/' != o && '\\' != o)) {
										if ('/' != o) {
											(e.username = i.username),
												(e.password = i.password),
												(e.host = i.host),
												(e.port = i.port),
												(l = ke);
											continue;
										}
										l = he;
									} else l = fe;
									break;
								case de:
									if (((l = fe), '/' != o || '/' != c.charAt(u + 1))) continue;
									u++;
									break;
								case fe:
									if ('/' == o || '\\' == o) break;
									l = he;
									continue;
								case he:
									if ('@' == o) {
										d && (c = '%40' + c), (d = !0), (a = L(c));
										for (var p = 0; p < a.length; p++) {
											var m = a[p];
											':' != m || h
												? ((m = te(m, ee)),
												  h ? (e.password += m) : (e.username += m))
												: (h = !0);
										}
										c = '';
									} else if (
										o == w ||
										'/' == o ||
										'?' == o ||
										'#' == o ||
										('\\' == o && ie(e))
									) {
										if (d && '' == c) return 'Invalid authority';
										(u -= L(c).length + 1), (c = ''), (l = pe);
									} else c += o;
									break;
								case pe:
								case me:
									if (n && 'file' == e.scheme) {
										l = ge;
										continue;
									}
									if (':' != o || f) {
										if (
											o == w ||
											'/' == o ||
											'?' == o ||
											'#' == o ||
											('\\' == o && ie(e))
										) {
											if (ie(e) && '' == c) return H;
											if (n && '' == c && (y(e) || null !== e.port)) return;
											if ((s = v(e, c))) return s;
											if (((c = ''), (l = be), n)) return;
											continue;
										}
										'[' == o ? (f = !0) : ']' == o && (f = !1), (c += o);
									} else {
										if ('' == c) return H;
										if ((s = v(e, c))) return s;
										if (((c = ''), (l = _e), n == me)) return;
									}
									break;
								case _e:
									if (!W.test(o)) {
										if (
											o == w ||
											'/' == o ||
											'?' == o ||
											'#' == o ||
											('\\' == o && ie(e)) ||
											n
										) {
											if ('' != c) {
												var _ = parseInt(c, 10);
												if (65535 < _) return I;
												(e.port = ie(e) && _ === ne[e.scheme] ? null : _),
													(c = '');
											}
											if (n) return;
											l = be;
											continue;
										}
										return I;
									}
									c += o;
									break;
								case ve:
									if (((e.scheme = 'file'), '/' == o || '\\' == o)) l = ye;
									else {
										if (!i || 'file' != i.scheme) {
											l = ke;
											continue;
										}
										if (o == w)
											(e.host = i.host),
												(e.path = i.path.slice()),
												(e.query = i.query);
										else if ('?' == o)
											(e.host = i.host),
												(e.path = i.path.slice()),
												(e.query = ''),
												(l = Me);
										else {
											if ('#' != o) {
												b(r.slice(u).join('')) ||
													((e.host = i.host), (e.path = i.path.slice()), k(e)),
													(l = ke);
												continue;
											}
											(e.host = i.host),
												(e.path = i.path.slice()),
												(e.query = i.query),
												(e.fragment = ''),
												(l = Le);
										}
									}
									break;
								case ye:
									if ('/' == o || '\\' == o) {
										l = ge;
										break;
									}
									i &&
										'file' == i.scheme &&
										!b(r.slice(u).join('')) &&
										(g(i.path[0], !0)
											? e.path.push(i.path[0])
											: (e.host = i.host)),
										(l = ke);
									continue;
								case ge:
									if (o == w || '/' == o || '\\' == o || '?' == o || '#' == o) {
										if (!n && g(c)) l = ke;
										else if ('' == c) {
											if (((e.host = ''), n)) return;
											l = be;
										} else {
											if ((s = v(e, c))) return s;
											if (('localhost' == e.host && (e.host = ''), n)) return;
											(c = ''), (l = be);
										}
										continue;
									}
									c += o;
									break;
								case be:
									if (ie(e)) {
										if (((l = ke), '/' != o && '\\' != o)) continue;
									} else if (n || '?' != o)
										if (n || '#' != o) {
											if (o != w && ((l = ke), '/' != o)) continue;
										} else (e.fragment = ''), (l = Le);
									else (e.query = ''), (l = Me);
									break;
								case ke:
									if (
										o == w ||
										'/' == o ||
										('\\' == o && ie(e)) ||
										(!n && ('?' == o || '#' == o))
									) {
										if (
											('..' === (_ = (_ = c).toLowerCase()) ||
											'%2e.' === _ ||
											'.%2e' === _ ||
											'%2e%2e' === _
												? (k(e),
												  '/' == o || ('\\' == o && ie(e)) || e.path.push(''))
												: '.' === (_ = c) || '%2e' === _.toLowerCase()
												? '/' == o || ('\\' == o && ie(e)) || e.path.push('')
												: ('file' == e.scheme &&
														!e.path.length &&
														g(c) &&
														(e.host && (e.host = ''), (c = c.charAt(0) + ':')),
												  e.path.push(c)),
											(c = ''),
											'file' == e.scheme && (o == w || '?' == o || '#' == o))
										)
											for (; 1 < e.path.length && '' === e.path[0]; )
												e.path.shift();
										'?' == o
											? ((e.query = ''), (l = Me))
											: '#' == o && ((e.fragment = ''), (l = Le));
									} else c += te(o, Z);
									break;
								case we:
									'?' == o
										? ((e.query = ''), (l = Me))
										: '#' == o
										? ((e.fragment = ''), (l = Le))
										: o != w && (e.path[0] += te(o, Q));
									break;
								case Me:
									n || '#' != o
										? o != w &&
										  ("'" == o && ie(e)
												? (e.query += '%27')
												: (e.query += '#' == o ? '%23' : te(o, Q)))
										: ((e.fragment = ''), (l = Le));
									break;
								case Le:
									o != w && (e.fragment += te(o, $));
							}
							u++;
						}
					}
					var w,
						i,
						o,
						a = n(6),
						l = n(22),
						u = n(288),
						d = n(14),
						f = n(125),
						h = n(30),
						p = n(70),
						M = n(24),
						m = n(141),
						L = n(131),
						_ = n(108).codeAt,
						x = n(317),
						D = n(52),
						S = n(318),
						n = n(42),
						T = d.URL,
						O = S.URLSearchParams,
						Y = S.getState,
						C = n.set,
						j = n.getterFor('URL'),
						E = Math.floor,
						P = Math.pow,
						A = 'Invalid scheme',
						H = 'Invalid host',
						I = 'Invalid port',
						R = /[A-Za-z]/,
						N = /[\d+-.A-Za-z]/,
						W = /\d/,
						F = /^(0x|0X)/,
						B = /^[0-7]+$/,
						z = /^\d+$/,
						V = /^[\dA-Fa-f]+$/,
						U = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,
						X = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/,
						J = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,
						q = /[\u0009\u000A\u000D]/g,
						K = function (e) {
							var t,
								n,
								i,
								r,
								o,
								a,
								s,
								l = e.split('.');
							if (
								(l.length && '' == l[l.length - 1] && l.pop(),
								4 < (t = l.length))
							)
								return e;
							for (n = [], i = 0; i < t; i++) {
								if ('' == (r = l[i])) return e;
								if (
									((o = 10),
									1 < r.length &&
										'0' == r.charAt(0) &&
										((o = F.test(r) ? 16 : 8), (r = r.slice(8 == o ? 1 : 2))),
									'' === r)
								)
									a = 0;
								else {
									if (!(10 == o ? z : 8 == o ? B : V).test(r)) return e;
									a = parseInt(r, o);
								}
								n.push(a);
							}
							for (i = 0; i < t; i++)
								if (((a = n[i]), i == t - 1)) {
									if (a >= P(256, 5 - t)) return null;
								} else if (255 < a) return null;
							for (s = n.pop(), i = 0; i < n.length; i++)
								s += n[i] * P(256, 3 - i);
							return s;
						},
						G = function (e) {
							function t() {
								return e.charAt(f);
							}
							var n,
								i,
								r,
								o,
								a,
								s,
								l,
								u = [0, 0, 0, 0, 0, 0, 0, 0],
								c = 0,
								d = null,
								f = 0;
							if (':' == t()) {
								if (':' != e.charAt(1)) return;
								(f += 2), (d = ++c);
							}
							for (; t(); ) {
								if (8 == c) return;
								if (':' != t()) {
									for (n = i = 0; i < 4 && V.test(t()); )
										(n = 16 * n + parseInt(t(), 16)), f++, i++;
									if ('.' == t()) {
										if (0 == i) return;
										if (((f -= i), 6 < c)) return;
										for (r = 0; t(); ) {
											if (((o = null), 0 < r)) {
												if (!('.' == t() && r < 4)) return;
												f++;
											}
											if (!W.test(t())) return;
											for (; W.test(t()); ) {
												if (((a = parseInt(t(), 10)), null === o)) o = a;
												else {
													if (0 == o) return;
													o = 10 * o + a;
												}
												if (255 < o) return;
												f++;
											}
											(u[c] = 256 * u[c] + o), (2 != ++r && 4 != r) || c++;
										}
										if (4 != r) return;
										break;
									}
									if (':' == t()) {
										if ((f++, !t())) return;
									} else if (t()) return;
									u[c++] = n;
								} else {
									if (null !== d) return;
									f++, (d = ++c);
								}
							}
							if (null !== d)
								for (s = c - d, c = 7; 0 != c && 0 < s; )
									(l = u[c]), (u[c--] = u[d + s - 1]), (u[d + --s] = l);
							else if (8 != c) return;
							return u;
						},
						Q = {},
						$ = m({}, Q, { ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1 }),
						Z = m({}, $, { '#': 1, '?': 1, '{': 1, '}': 1 }),
						ee = m({}, Z, {
							'/': 1,
							':': 1,
							';': 1,
							'=': 1,
							'@': 1,
							'[': 1,
							'\\': 1,
							']': 1,
							'^': 1,
							'|': 1,
						}),
						te = function (e, t) {
							var n = _(e, 0);
							return 32 < n && n < 127 && !M(t, e) ? e : encodeURIComponent(e);
						},
						ne = {
							ftp: 21,
							file: null,
							http: 80,
							https: 443,
							ws: 80,
							wss: 443,
						},
						ie = function (e) {
							return M(ne, e.scheme);
						},
						re = {},
						oe = {},
						ae = {},
						se = {},
						le = {},
						ue = {},
						ce = {},
						de = {},
						fe = {},
						he = {},
						pe = {},
						me = {},
						_e = {},
						ve = {},
						ye = {},
						ge = {},
						be = {},
						ke = {},
						we = {},
						Me = {},
						Le = {},
						xe = function (e, t) {
							var n,
								i = p(this, xe, 'URL'),
								t = 1 < arguments.length ? t : void 0,
								e = String(e),
								r = C(i, { type: 'URL' });
							if (void 0 !== t)
								if (t instanceof xe) n = j(t);
								else if ((a = s((n = {}), String(t)))) throw TypeError(a);
							if ((a = s(r, e, null, n))) throw TypeError(a);
							var o = (r.searchParams = new O()),
								a = Y(o);
							a.updateSearchParams(r.query),
								(a.updateURL = function () {
									r.query = String(o) || null;
								}),
								l ||
									((i.href = De.call(i)),
									(i.origin = Se.call(i)),
									(i.protocol = Te.call(i)),
									(i.username = Oe.call(i)),
									(i.password = Ye.call(i)),
									(i.host = Ce.call(i)),
									(i.hostname = je.call(i)),
									(i.port = Ee.call(i)),
									(i.pathname = Pe.call(i)),
									(i.search = Ae.call(i)),
									(i.searchParams = He.call(i)),
									(i.hash = Ie.call(i)));
						},
						n = xe.prototype,
						De = function () {
							var e = j(this),
								t = e.scheme,
								n = e.username,
								i = e.password,
								r = e.host,
								o = e.port,
								a = e.path,
								s = e.query,
								l = e.fragment,
								u = t + ':';
							return (
								null !== r
									? ((u += '//'),
									  y(e) && (u += n + (i ? ':' + i : '') + '@'),
									  (u += c(r)),
									  null !== o && (u += ':' + o))
									: 'file' == t && (u += '//'),
								(u += e.cannotBeABaseURL
									? a[0]
									: a.length
									? '/' + a.join('/')
									: ''),
								null !== s && (u += '?' + s),
								null !== l && (u += '#' + l),
								u
							);
						},
						Se = function () {
							var e = j(this),
								t = e.scheme,
								n = e.port;
							if ('blob' == t)
								try {
									return new URL(t.path[0]).origin;
								} catch (e) {
									return 'null';
								}
							return 'file' != t && ie(e)
								? t + '://' + c(e.host) + (null !== n ? ':' + n : '')
								: 'null';
						},
						Te = function () {
							return j(this).scheme + ':';
						},
						Oe = function () {
							return j(this).username;
						},
						Ye = function () {
							return j(this).password;
						},
						Ce = function () {
							var e = j(this),
								t = e.host,
								e = e.port;
							return null === t ? '' : null === e ? c(t) : c(t) + ':' + e;
						},
						je = function () {
							var e = j(this).host;
							return null === e ? '' : c(e);
						},
						Ee = function () {
							var e = j(this).port;
							return null === e ? '' : String(e);
						},
						Pe = function () {
							var e = j(this),
								t = e.path;
							return e.cannotBeABaseURL
								? t[0]
								: t.length
								? '/' + t.join('/')
								: '';
						},
						Ae = function () {
							var e = j(this).query;
							return e ? '?' + e : '';
						},
						He = function () {
							return j(this).searchParams;
						},
						Ie = function () {
							var e = j(this).fragment;
							return e ? '#' + e : '';
						},
						m = function (e, t) {
							return { get: e, set: t, configurable: !0, enumerable: !0 };
						};
					l &&
						f(n, {
							href: m(De, function (e) {
								var t = j(this),
									e = String(e),
									e = s(t, e);
								if (e) throw TypeError(e);
								Y(t.searchParams).updateSearchParams(t.query);
							}),
							origin: m(Se),
							protocol: m(Te, function (e) {
								var t = j(this);
								s(t, String(e) + ':', re);
							}),
							username: m(Oe, function (e) {
								var t = j(this),
									n = L(String(e));
								if (!r(t)) {
									t.username = '';
									for (var i = 0; i < n.length; i++) t.username += te(n[i], ee);
								}
							}),
							password: m(Ye, function (e) {
								var t = j(this),
									n = L(String(e));
								if (!r(t)) {
									t.password = '';
									for (var i = 0; i < n.length; i++) t.password += te(n[i], ee);
								}
							}),
							host: m(Ce, function (e) {
								var t = j(this);
								t.cannotBeABaseURL || s(t, String(e), pe);
							}),
							hostname: m(je, function (e) {
								var t = j(this);
								t.cannotBeABaseURL || s(t, String(e), me);
							}),
							port: m(Ee, function (e) {
								var t = j(this);
								r(t) || ('' == (e = String(e)) ? (t.port = null) : s(t, e, _e));
							}),
							pathname: m(Pe, function (e) {
								var t = j(this);
								t.cannotBeABaseURL || ((t.path = []), s(t, e + '', be));
							}),
							search: m(Ae, function (e) {
								var t = j(this);
								'' == (e = String(e))
									? (t.query = null)
									: ('?' == e.charAt(0) && (e = e.slice(1)),
									  (t.query = ''),
									  s(t, e, Me)),
									Y(t.searchParams).updateSearchParams(t.query);
							}),
							searchParams: m(He),
							hash: m(Ie, function (e) {
								var t = j(this);
								'' != (e = String(e))
									? ('#' == e.charAt(0) && (e = e.slice(1)),
									  (t.fragment = ''),
									  s(t, e, Le))
									: (t.fragment = null);
							}),
						}),
						h(
							n,
							'toJSON',
							function () {
								return De.call(this);
							},
							{ enumerable: !0 }
						),
						h(
							n,
							'toString',
							function () {
								return De.call(this);
							},
							{ enumerable: !0 }
						),
						T &&
							((i = T.createObjectURL),
							(o = T.revokeObjectURL),
							i &&
								h(xe, 'createObjectURL', function () {
									return i.apply(T, arguments);
								}),
							o &&
								h(xe, 'revokeObjectURL', function () {
									return o.apply(T, arguments);
								})),
						D(xe, 'URL'),
						a({ global: !0, forced: !u, sham: !l }, { URL: xe });
				},
				function (e, t, n) {
					'use strict';
					function v(e) {
						return e + 22 + 75 * (e < 26);
					}
					function o(e) {
						var t,
							n = [],
							i = (e = (function (e) {
								for (var t = [], n = 0, i = e.length; n < i; ) {
									var r,
										o = e.charCodeAt(n++);
									55296 <= o && o <= 56319 && n < i
										? 56320 == (64512 & (r = e.charCodeAt(n++)))
											? t.push(((1023 & o) << 10) + (1023 & r) + 65536)
											: (t.push(o), n--)
										: t.push(o);
								}
								return t;
							})(e)).length,
							r = 128,
							o = 0,
							a = 72;
						for (c = 0; c < e.length; c++) (t = e[c]) < 128 && n.push(k(t));
						var s = n.length,
							l = s;
						for (s && n.push('-'); l < i; ) {
							for (var u = y, c = 0; c < e.length; c++)
								r <= (t = e[c]) && t < u && (u = t);
							var d = l + 1;
							if (u - r > b((y - o) / d)) throw RangeError(g);
							for (o += (u - r) * d, r = u, c = 0; c < e.length; c++) {
								if ((t = e[c]) < r && ++o > y) throw RangeError(g);
								if (t == r) {
									for (var f = o, h = 36; ; h += 36) {
										var p = h <= a ? 1 : a + 26 <= h ? 26 : h - a;
										if (f < p) break;
										var m = f - p,
											_ = 36 - p;
										n.push(k(v(p + (m % _)))), (f = b(m / _));
									}
									n.push(k(v(f))),
										(a = (function (e, t, n) {
											var i = 0;
											for (
												e = n ? b(e / 700) : e >> 1, e += b(e / t);
												455 < e;
												i += 36
											)
												e = b(e / 35);
											return b(i + (36 * e) / (e + 38));
										})(o, d, l == s)),
										(o = 0),
										++l;
								}
							}
							++o, ++r;
						}
						return n.join('');
					}
					var y = 2147483647,
						a = /[^\0-\u007E]/,
						s = /[.\u3002\uFF0E\uFF61]/g,
						g = 'Overflow: input needs wider integers to process',
						b = Math.floor,
						k = String.fromCharCode;
					e.exports = function (e) {
						for (
							var t,
								n = [],
								i = e.toLowerCase().replace(s, '.').split('.'),
								r = 0;
							r < i.length;
							r++
						)
							(t = i[r]), n.push(a.test(t) ? 'xn--' + o(t) : t);
						return n.join('.');
					};
				},
				function (e, t, n) {
					'use strict';
					n(20);
					function r(t) {
						try {
							return decodeURIComponent(t);
						} catch (e) {
							return t;
						}
					}
					function o(e) {
						var t,
							n = e.replace(A, ' '),
							i = 4;
						try {
							return decodeURIComponent(n);
						} catch (e) {
							for (; i; )
								n = n.replace(
									((t = i--),
									H[t - 1] ||
										(H[t - 1] = RegExp('((?:%[\\da-f]{2}){' + t + '})', 'gi'))),
									r
								);
							return n;
						}
					}
					function i(e) {
						return R[e];
					}
					function a(e) {
						return encodeURIComponent(e).replace(I, i);
					}
					function c(e, t) {
						if (t)
							for (var n, i = t.split('&'), r = 0; r < i.length; )
								(n = i[r++]).length &&
									((n = n.split('=')),
									e.push({ key: o(n.shift()), value: o(n.join('=')) }));
					}
					function d(e) {
						(this.entries.length = 0), c(this.entries, e);
					}
					function u(e, t) {
						if (e < t) throw TypeError('Not enough arguments');
					}
					var s = n(6),
						l = n(46),
						f = n(288),
						h = n(30),
						p = n(114),
						m = n(52),
						_ = n(135),
						v = n(42),
						y = n(70),
						g = n(24),
						b = n(57),
						k = n(101),
						w = n(18),
						M = n(17),
						L = n(51),
						x = n(56),
						D = n(319),
						S = n(78),
						n = n(15),
						T = l('fetch'),
						O = l('Headers'),
						n = n('iterator'),
						Y = 'URLSearchParams',
						C = Y + 'Iterator',
						j = v.set,
						E = v.getterFor(Y),
						P = v.getterFor(C),
						A = /\+/g,
						H = Array(4),
						I = /[!'()~]|%20/g,
						R = {
							'!': '%21',
							"'": '%27',
							'(': '%28',
							')': '%29',
							'~': '%7E',
							'%20': '+',
						},
						N = _(
							function (e, t) {
								j(this, { type: C, iterator: D(E(e).entries), kind: t });
							},
							'Iterator',
							function () {
								var e = P(this),
									t = e.kind,
									n = e.iterator.next(),
									e = n.value;
								return (
									n.done ||
										(n.value =
											'keys' === t
												? e.key
												: 'values' === t
												? e.value
												: [e.key, e.value]),
									n
								);
							}
						),
						W = function (e) {
							y(this, W, Y);
							var t,
								n,
								i,
								r,
								o,
								a,
								s,
								l = 0 < arguments.length ? e : void 0,
								u = [];
							if (
								(j(this, {
									type: Y,
									entries: u,
									updateURL: function () {},
									updateSearchParams: d,
								}),
								void 0 !== l)
							)
								if (M(l))
									if ('function' == typeof (e = S(l)))
										for (n = (t = e.call(l)).next; !(o = n.call(t)).done; ) {
											if (
												(o = (r = (i = D(w(o.value))).next).call(i)).done ||
												(a = r.call(i)).done ||
												!r.call(i).done
											)
												throw TypeError('Expected sequence with length 2');
											u.push({ key: o.value + '', value: a.value + '' });
										}
									else
										for (s in l)
											g(l, s) && u.push({ key: s, value: l[s] + '' });
								else
									c(
										u,
										'string' == typeof l
											? '?' === l.charAt(0)
												? l.slice(1)
												: l
											: l + ''
									);
						},
						_ = W.prototype;
					p(
						_,
						{
							append: function (e, t) {
								u(arguments.length, 2);
								var n = E(this);
								n.entries.push({ key: e + '', value: t + '' }), n.updateURL();
							},
							delete: function (e) {
								u(arguments.length, 1);
								for (
									var t = E(this), n = t.entries, i = e + '', r = 0;
									r < n.length;

								)
									n[r].key === i ? n.splice(r, 1) : r++;
								t.updateURL();
							},
							get: function (e) {
								u(arguments.length, 1);
								for (
									var t = E(this).entries, n = e + '', i = 0;
									i < t.length;
									i++
								)
									if (t[i].key === n) return t[i].value;
								return null;
							},
							getAll: function (e) {
								u(arguments.length, 1);
								for (
									var t = E(this).entries, n = e + '', i = [], r = 0;
									r < t.length;
									r++
								)
									t[r].key === n && i.push(t[r].value);
								return i;
							},
							has: function (e) {
								u(arguments.length, 1);
								for (var t = E(this).entries, n = e + '', i = 0; i < t.length; )
									if (t[i++].key === n) return !0;
								return !1;
							},
							set: function (e, t) {
								u(arguments.length, 1);
								for (
									var n,
										i = E(this),
										r = i.entries,
										o = !1,
										a = e + '',
										s = t + '',
										l = 0;
									l < r.length;
									l++
								)
									(n = r[l]).key === a &&
										(o ? r.splice(l--, 1) : ((o = !0), (n.value = s)));
								o || r.push({ key: a, value: s }), i.updateURL();
							},
							sort: function () {
								for (
									var e,
										t,
										n = E(this),
										i = n.entries,
										r = i.slice(),
										o = (i.length = 0);
									o < r.length;
									o++
								) {
									for (e = r[o], t = 0; t < o; t++)
										if (i[t].key > e.key) {
											i.splice(t, 0, e);
											break;
										}
									t === o && i.push(e);
								}
								n.updateURL();
							},
							forEach: function (e, t) {
								for (
									var n,
										i = E(this).entries,
										r = b(e, 1 < arguments.length ? t : void 0, 3),
										o = 0;
									o < i.length;

								)
									r((n = i[o++]).value, n.key, this);
							},
							keys: function () {
								return new N(this, 'keys');
							},
							values: function () {
								return new N(this, 'values');
							},
							entries: function () {
								return new N(this, 'entries');
							},
						},
						{ enumerable: !0 }
					),
						h(_, n, _.entries),
						h(
							_,
							'toString',
							function () {
								for (var e, t = E(this).entries, n = [], i = 0; i < t.length; )
									(e = t[i++]), n.push(a(e.key) + '=' + a(e.value));
								return n.join('&');
							},
							{ enumerable: !0 }
						),
						m(W, Y),
						s({ global: !0, forced: !f }, { URLSearchParams: W }),
						f ||
							'function' != typeof T ||
							'function' != typeof O ||
							s(
								{ global: !0, enumerable: !0, forced: !0 },
								{
									fetch: function (e, t) {
										var n,
											i = [e];
										return (
											1 < arguments.length &&
												(M((n = t)) &&
													((e = n.body),
													k(e) === Y &&
														((t = n.headers ? new O(n.headers) : new O()).has(
															'content-type'
														) ||
															t.set(
																'content-type',
																'application/x-www-form-urlencoded;charset=UTF-8'
															),
														(n = L(n, {
															body: x(0, String(e)),
															headers: x(0, t),
														})))),
												i.push(n)),
											T.apply(this, i)
										);
									},
								}
							),
						(e.exports = { URLSearchParams: W, getState: E });
				},
				function (e, t, n) {
					var i = n(18),
						r = n(78);
					e.exports = function (e) {
						var t = r(e);
						if ('function' != typeof t)
							throw TypeError(String(e) + ' is not iterable');
						return i(t.call(e));
					};
				},
				function (e, t, n) {
					var n = n(6),
						i = Math.ceil,
						r = Math.floor;
					n(
						{ target: 'Math', stat: !0 },
						{
							trunc: function (e) {
								return (0 < e ? r : i)(e);
							},
						}
					);
				},
				function (e, t, n) {
					var l = n(22),
						u = n(64),
						c = n(34),
						d = n(72).f,
						n = function (s) {
							return function (e) {
								for (
									var t, n = c(e), i = u(n), r = i.length, o = 0, a = [];
									o < r;

								)
									(t = i[o++]),
										(l && !d.call(n, t)) || a.push(s ? [t, n[t]] : n[t]);
								return a;
							};
						};
					e.exports = { entries: n(!0), values: n(!1) };
				},
				function (e, t, n) {
					n(6)(
						{ target: 'Number', stat: !0 },
						{
							isNaN: function (e) {
								return e != e;
							},
						}
					);
				},
				function (e, t, n) {
					var o = n(38),
						a = /"/g;
					e.exports = function (e, t, n, i) {
						var r = String(o(e)),
							e = '<' + t;
						return (
							'' !== n &&
								(e += ' ' + n + '="' + String(i).replace(a, '&quot;') + '"'),
							e + '>' + r + '</' + t + '>'
						);
					};
				},
				function (e, t, n) {
					var i = n(10);
					e.exports = function (t) {
						return i(function () {
							var e = ''[t]('"');
							return e !== e.toLowerCase() || 3 < e.split('"').length;
						});
					};
				},
				function (e, t, n) {
					var i = n(6),
						n = Math.hypot,
						l = Math.abs,
						u = Math.sqrt;
					i(
						{
							target: 'Math',
							stat: !0,
							forced: !!n && n(1 / 0, NaN) !== 1 / 0,
						},
						{
							hypot: function (e, t) {
								for (
									var n, i, r = 0, o = 0, a = arguments.length, s = 0;
									o < a;

								)
									s < (n = l(arguments[o++]))
										? ((r = r * (i = s / n) * i + 1), (s = n))
										: (r += 0 < n ? (i = n / s) * i : n);
								return s === 1 / 0 ? 1 / 0 : s * u(r);
							},
						}
					);
				},
				,
				,
				function (e, t, n) {
					'use strict';
					n.r(t),
						n.d(t, 'Button', function () {
							return mt;
						}),
						n.d(t, 'Carousel', function () {
							return fi;
						}),
						n.d(t, 'Collapse', function () {
							return Bt;
						}),
						n.d(t, 'Offcanvas', function () {
							return Mn;
						}),
						n.d(t, 'Dropdown', function () {
							return Bl;
						}),
						n.d(t, 'Input', function () {
							return Rs;
						}),
						n.d(t, 'Modal', function () {
							return rw;
						}),
						n.d(t, 'Popover', function () {
							return Ko;
						}),
						n.d(t, 'ScrollSpy', function () {
							return Da;
						}),
						n.d(t, 'Ripple', function () {
							return nu;
						}),
						n.d(t, 'Tab', function () {
							return is;
						}),
						n.d(t, 'Tooltip', function () {
							return ws;
						}),
						n.d(t, 'Range', function () {
							return cu;
						}),
						n.d(t, 'Alert', function () {
							return ef;
						}),
						n.d(t, 'Animate', function () {
							return gu;
						}),
						n.d(t, 'Chart', function () {
							return Eu;
						}),
						n.d(t, 'Datepicker', function () {
							return nm;
						}),
						n.d(t, 'Datatable', function () {
							return sv;
						}),
						n.d(t, 'Lightbox', function () {
							return Ku;
						}),
						n.d(t, 'Navbar', function () {
							return Jh;
						}),
						n.d(t, 'Popconfirm', function () {
							return pm;
						}),
						n.d(t, 'Rating', function () {
							return dc;
						}),
						n.d(t, 'Sidenav', function () {
							return yd;
						}),
						n.d(t, 'SmoothScroll', function () {
							return Qg;
						}),
						n.d(t, 'Timepicker', function () {
							return zh;
						}),
						n.d(t, 'Toast', function () {
							return Bf;
						}),
						n.d(t, 'InfiniteScroll', function () {
							return ip;
						}),
						n.d(t, 'LazyLoad', function () {
							return _p;
						}),
						n.d(t, 'Stepper', function () {
							return ey;
						}),
						n.d(t, 'Sticky', function () {
							return fy;
						}),
						n.d(t, 'Select', function () {
							return R_;
						}),
						n.d(t, 'Touch', function () {
							return Rg;
						}),
						n.d(t, 'PerfectScrollbar', function () {
							return ub;
						}),
						n.d(t, 'Loading', function () {
							return kb;
						}),
						n.d(t, 'Autocomplete', function () {
							return Zb;
						}),
						n.d(t, 'Clipboard', function () {
							return mw;
						}),
						n.d(t, 'ChipsInput', function () {
							return eM;
						}),
						n.d(t, 'MultiRangeSlider', function () {
							return hM;
						}),
						n.d(t, 'Datetimepicker', function () {
							return FM;
						});
					var a = {};
					n.r(a),
						n.d(a, 'top', function () {
							return hi;
						}),
						n.d(a, 'bottom', function () {
							return pi;
						}),
						n.d(a, 'right', function () {
							return mi;
						}),
						n.d(a, 'left', function () {
							return _i;
						}),
						n.d(a, 'auto', function () {
							return vi;
						}),
						n.d(a, 'basePlacements', function () {
							return yi;
						}),
						n.d(a, 'start', function () {
							return gi;
						}),
						n.d(a, 'end', function () {
							return bi;
						}),
						n.d(a, 'clippingParents', function () {
							return ki;
						}),
						n.d(a, 'viewport', function () {
							return wi;
						}),
						n.d(a, 'popper', function () {
							return Mi;
						}),
						n.d(a, 'reference', function () {
							return Li;
						}),
						n.d(a, 'variationPlacements', function () {
							return xi;
						}),
						n.d(a, 'placements', function () {
							return Di;
						}),
						n.d(a, 'beforeRead', function () {
							return Si;
						}),
						n.d(a, 'read', function () {
							return Ti;
						}),
						n.d(a, 'afterRead', function () {
							return Oi;
						}),
						n.d(a, 'beforeMain', function () {
							return Yi;
						}),
						n.d(a, 'main', function () {
							return Ci;
						}),
						n.d(a, 'afterMain', function () {
							return ji;
						}),
						n.d(a, 'beforeWrite', function () {
							return Ei;
						}),
						n.d(a, 'write', function () {
							return Pi;
						}),
						n.d(a, 'afterWrite', function () {
							return Ai;
						}),
						n.d(a, 'modifierPhases', function () {
							return Hi;
						}),
						n.d(a, 'applyStyles', function () {
							return Bi;
						}),
						n.d(a, 'arrow', function () {
							return ar;
						}),
						n.d(a, 'computeStyles', function () {
							return ur;
						}),
						n.d(a, 'eventListeners', function () {
							return dr;
						}),
						n.d(a, 'flip', function () {
							return Dr;
						}),
						n.d(a, 'hide', function () {
							return Or;
						}),
						n.d(a, 'offset', function () {
							return Yr;
						}),
						n.d(a, 'popperOffsets', function () {
							return Cr;
						}),
						n.d(a, 'preventOverflow', function () {
							return jr;
						}),
						n.d(a, 'popperGenerator', function () {
							return Ir;
						}),
						n.d(a, 'detectOverflow', function () {
							return xr;
						}),
						n.d(a, 'createPopperBase', function () {
							return Rr;
						}),
						n.d(a, 'createPopper', function () {
							return Nr;
						}),
						n.d(a, 'createPopperLite', function () {
							return Wr;
						});
					n(4),
						n(1),
						n(11),
						n(12),
						n(3),
						n(13),
						n(5),
						n(2),
						n(7),
						n(103),
						n(19),
						n(81),
						n(25),
						n(40),
						n(9),
						n(27),
						n(31),
						n(23),
						n(53);
					function i(e) {
						var t = e.getAttribute('data-mdb-target');
						return (
							(t && '#' !== t) ||
								(t =
									(e = e.getAttribute('href')) && '#' !== e ? e.trim() : null),
							t
						);
					}
					function o(e) {
						return (e = i(e)) ? document.querySelector(e) : null;
					}
					function s(o, a, s) {
						Object.keys(s).forEach(function (e) {
							var t,
								n,
								i = s[e],
								r = a[e],
								t =
									r && ((n = r)[0] || n).nodeType
										? 'element'
										: null == (t = r)
										? ''.concat(t)
										: {}.toString
												.call(t)
												.match(/\s([a-z]+)/i)[1]
												.toLowerCase();
							if (!new RegExp(i).test(t))
								throw new Error(
									''.concat(o.toUpperCase(), ': ') +
										'Option "'.concat(e, '" provided type "').concat(t, '" ') +
										'but expected type "'.concat(i, '".')
								);
						});
					}
					function r() {
						var e = window.jQuery;
						return e && !document.body.hasAttribute('data-mdb-no-jquery')
							? e
							: null;
					}
					function l(e) {
						'loading' === document.readyState
							? document.addEventListener('DOMContentLoaded', e)
							: e();
					}
					var u,
						c,
						d = function (e) {
							for (
								;
								(e += Math.floor(1e6 * Math.random())),
									document.getElementById(e);

							);
							return e;
						},
						f = function (e) {
							if (!e) return !1;
							if (e.style && e.parentNode && e.parentNode.style) {
								var t = getComputedStyle(e),
									e = getComputedStyle(e.parentNode);
								return (
									'none' !== t.display &&
									'none' !== e.display &&
									'hidden' !== t.visibility
								);
							}
							return !1;
						},
						h = 'rtl' === document.documentElement.dir,
						x = function (e) {
							return document.createElement(e);
						},
						p =
							((u = {}),
							(c = 1),
							{
								set: function (e, t, n) {
									void 0 === e[t] && ((e[t] = { key: t, id: c }), c++),
										(u[e[t].id] = n);
								},
								get: function (e, t) {
									if (!e || void 0 === e[t]) return null;
									e = e[t];
									return e.key === t ? u[e.id] : null;
								},
								delete: function (e, t) {
									var n;
									void 0 === e[t] ||
										((n = e[t]).key === t && (delete u[n.id], delete e[t]));
								},
							}),
						m = {
							setData: function (e, t, n) {
								p.set(e, t, n);
							},
							getData: function (e, t) {
								return p.get(e, t);
							},
							removeData: function (e, t) {
								p.delete(e, t);
							},
						};
					n(43), n(54), n(55), n(28), n(20), n(37), n(44), n(26);
					function _(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return v(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return v(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function v(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					var y = r(),
						g = /[^.]*(?=\..*)\.|.*/,
						b = /\..*/,
						k = /::\d+$/,
						w = {},
						M = 1,
						L = { mouseenter: 'mouseover', mouseleave: 'mouseout' },
						D = [
							'click',
							'dblclick',
							'mouseup',
							'mousedown',
							'contextmenu',
							'mousewheel',
							'DOMMouseScroll',
							'mouseover',
							'mouseout',
							'mousemove',
							'selectstart',
							'selectend',
							'keydown',
							'keypress',
							'keyup',
							'orientationchange',
							'touchstart',
							'touchmove',
							'touchend',
							'touchcancel',
							'pointerdown',
							'pointermove',
							'pointerup',
							'pointerleave',
							'pointercancel',
							'gesturestart',
							'gesturechange',
							'gestureend',
							'focus',
							'blur',
							'change',
							'reset',
							'select',
							'submit',
							'focusin',
							'focusout',
							'load',
							'unload',
							'beforeunload',
							'resize',
							'move',
							'DOMContentLoaded',
							'readystatechange',
							'error',
							'abort',
							'scroll',
						];
					function S(e, t) {
						return (t && ''.concat(t, '::').concat(M++)) || e.uidEvent || M++;
					}
					function T(e) {
						var t = S(e);
						return (e.uidEvent = t), (w[t] = w[t] || {}), w[t];
					}
					function O(e, t, n) {
						for (
							var i = 2 < arguments.length && void 0 !== n ? n : null,
								r = Object.keys(e),
								o = 0,
								a = r.length;
							o < a;
							o++
						) {
							var s = e[r[o]];
							if (s.originalHandler === t && s.delegationSelector === i)
								return s;
						}
						return null;
					}
					function Y(e, t, n) {
						var i = 'string' == typeof t,
							r = i ? n : t,
							n = e.replace(b, ''),
							t = L[n];
						return t && (n = t), -1 < D.indexOf(n) || (n = e), [i, r, n];
					}
					function C(e, t, n, i, r) {
						var o, a, s, l, u, c, d, f, h, p;
						'string' == typeof t &&
							e &&
							(n || ((n = i), (i = null)),
							(o = (l = _(Y(t, n, i), 3))[0]),
							(a = l[1]),
							(s = l[2]),
							(u = O((l = (u = T(e))[s] || (u[s] = {})), a, o ? n : null))
								? (u.oneOff = u.oneOff && r)
								: ((t = S(a, t.replace(g, ''))),
								  ((i = o
										? ((f = e),
										  (h = n),
										  (p = i),
										  function e(t) {
												for (
													var n = f.querySelectorAll(h), i = t.target;
													i && i !== this;
													i = i.parentNode
												)
													for (var r = n.length; r--; )
														if (n[r] === i)
															return (
																(t.delegateTarget = i),
																e.oneOff && E.off(f, t.type, p),
																p.apply(i, [t])
															);
												return null;
										  })
										: ((c = e),
										  (d = n),
										  function e(t) {
												return (
													(t.delegateTarget = c),
													e.oneOff && E.off(c, t.type, d),
													d.apply(c, [t])
												);
										  })).delegationSelector = o ? n : null),
								  (i.originalHandler = a),
								  (i.oneOff = r),
								  (l[(i.uidEvent = t)] = i),
								  e.addEventListener(s, i, o)));
					}
					function j(e, t, n, i, r) {
						i = O(t[n], i, r);
						i &&
							(e.removeEventListener(n, i, Boolean(r)),
							delete t[n][i.uidEvent]);
					}
					var E = {
							on: function (e, t, n, i) {
								C(e, t, n, i, !1);
							},
							one: function (e, t, n, i) {
								C(e, t, n, i, !0);
							},
							off: function (a, s, e, t) {
								if ('string' == typeof s && a) {
									var n = _(Y(s, e, t), 3),
										i = n[0],
										t = n[1],
										r = n[2],
										o = r !== s,
										l = T(a),
										n = '.' === s.charAt(0);
									if (void 0 !== t)
										return l && l[r]
											? void j(a, l, r, t, i ? e : null)
											: void 0;
									n &&
										Object.keys(l).forEach(function (e) {
											var t, n, i, r, o;
											(t = a),
												(n = l),
												(i = e),
												(r = s.slice(1)),
												(o = n[i] || {}),
												Object.keys(o).forEach(function (e) {
													-1 < e.indexOf(r) &&
														j(
															t,
															n,
															i,
															(e = o[e]).originalHandler,
															e.delegationSelector
														);
												});
										});
									var u = l[r] || {};
									Object.keys(u).forEach(function (e) {
										var t = e.replace(k, '');
										(!o || -1 < s.indexOf(t)) &&
											j(
												a,
												l,
												r,
												(e = u[e]).originalHandler,
												e.delegationSelector
											);
									});
								}
							},
							trigger: function (e, t, n) {
								if ('string' != typeof t || !e) return null;
								var i,
									r = t.replace(b, ''),
									o = t !== r,
									a = -1 < D.indexOf(r),
									s = !0,
									l = !0,
									u = !1,
									c = null;
								return (
									o &&
										y &&
										((i = y.Event(t, n)),
										y(e).trigger(i),
										(s = !i.isPropagationStopped()),
										(l = !i.isImmediatePropagationStopped()),
										(u = i.isDefaultPrevented())),
									a
										? (c = document.createEvent('HTMLEvents')).initEvent(
												r,
												s,
												!0
										  )
										: (c = new CustomEvent(t, { bubbles: s, cancelable: !0 })),
									void 0 !== n &&
										Object.keys(n).forEach(function (e) {
											Object.defineProperty(c, e, {
												get: function () {
													return n[e];
												},
											});
										}),
									u && c.preventDefault(),
									l && e.dispatchEvent(c),
									c.defaultPrevented && void 0 !== i && i.preventDefault(),
									c
								);
							},
						},
						P = function (e, t, n, i) {
							for (var r = t.split(' '), o = 0; o < r.length; o++)
								E.on(e, r[o], n, i);
						},
						A = function (e, t, n, i) {
							for (var r = t.split(' '), o = 0; o < r.length; o++)
								E.off(e, r[o], n, i);
						},
						H = E;
					n(8), n(299), n(142), n(143), n(69);
					function I(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function R(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? I(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: I(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function N(e) {
						return (
							'true' === e ||
							('false' !== e &&
								(e === Number(e).toString()
									? Number(e)
									: '' === e || 'null' === e
									? null
									: e))
						);
					}
					function W(e) {
						return e.replace(/[A-Z]/g, function (e) {
							return '-'.concat(e.toLowerCase());
						});
					}
					var F = {
						setDataAttribute: function (e, t, n) {
							e.setAttribute('data-mdb-'.concat(W(t)), n);
						},
						removeDataAttribute: function (e, t) {
							e.removeAttribute('data-mdb-'.concat(W(t)));
						},
						getDataAttributes: function (e) {
							if (!e) return {};
							var n = R({}, e.dataset);
							return (
								Object.keys(n)
									.filter(function (e) {
										return e.startsWith('mdb');
									})
									.forEach(function (e) {
										var t =
											(t = e.replace(/^mdb/, '')).charAt(0).toLowerCase() +
											t.slice(1, t.length);
										n[t] = N(n[e]);
									}),
								n
							);
						},
						getDataAttribute: function (e, t) {
							return N(e.getAttribute('data-mdb-'.concat(W(t))));
						},
						offset: function (e) {
							e = e.getBoundingClientRect();
							return {
								top: e.top + document.body.scrollTop,
								left: e.left + document.body.scrollLeft,
							};
						},
						position: function (e) {
							return { top: e.offsetTop, left: e.offsetLeft };
						},
						style: function (e, t) {
							Object.assign(e.style, t);
						},
						toggleClass: function (e, t) {
							e &&
								(e.classList.contains(t)
									? e.classList.remove(t)
									: e.classList.add(t));
						},
						addClass: function (e, t) {
							e.classList.contains(t) || e.classList.add(t);
						},
						addStyle: function (t, n) {
							Object.keys(n).forEach(function (e) {
								t.style[e] = n[e];
							});
						},
						removeClass: function (e, t) {
							e.classList.contains(t) && e.classList.remove(t);
						},
						hasClass: function (e, t) {
							return e.classList.contains(t);
						},
					};
					function B(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return z(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return z(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return z(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function z(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					var V = {
						closest: function (e, t) {
							return e.closest(t);
						},
						matches: function (e, t) {
							return e.matches(t);
						},
						find: function (e, t) {
							var n =
								1 < arguments.length && void 0 !== t
									? t
									: document.documentElement;
							return (t = []).concat.apply(
								t,
								B(Element.prototype.querySelectorAll.call(n, e))
							);
						},
						findOne: function (e, t) {
							t =
								1 < arguments.length && void 0 !== t
									? t
									: document.documentElement;
							return Element.prototype.querySelector.call(t, e);
						},
						children: function (e, t) {
							var n,
								i = (n = []).concat.apply(n, B(e.children));
							return i.filter(function (e) {
								return e.matches(t);
							});
						},
						parents: function (e, t) {
							for (
								var n = [], i = e.parentNode;
								i && i.nodeType === Node.ELEMENT_NODE && 3 !== i.nodeType;

							)
								this.matches(i, t) && n.push(i), (i = i.parentNode);
							return n;
						},
						prev: function (e, t) {
							for (var n = e.previousElementSibling; n; ) {
								if (n.matches(t)) return [n];
								n = n.previousElementSibling;
							}
							return [];
						},
						next: function (e, t) {
							for (var n = e.nextElementSibling; n; ) {
								if (this.matches(n, t)) return [n];
								n = n.nextElementSibling;
							}
							return [];
						},
					};
					n(21), n(33);
					function U(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return X(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return X(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return X(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function X(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					var J = {
						find: function (e, t) {
							var n =
								1 < arguments.length && void 0 !== t
									? t
									: document.documentElement;
							return (t = []).concat.apply(
								t,
								U(Element.prototype.querySelectorAll.call(n, e))
							);
						},
						findOne: function (e, t) {
							t =
								1 < arguments.length && void 0 !== t
									? t
									: document.documentElement;
							return Element.prototype.querySelector.call(t, e);
						},
						children: function (e, t) {
							var n;
							return (n = []).concat
								.apply(n, U(e.children))
								.filter(function (e) {
									return e.matches(t);
								});
						},
						parents: function (e, t) {
							for (
								var n = [], i = e.parentNode;
								i && i.nodeType === Node.ELEMENT_NODE && 3 !== i.nodeType;

							)
								i.matches(t) && n.push(i), (i = i.parentNode);
							return n;
						},
						prev: function (e, t) {
							for (var n = e.previousElementSibling; n; ) {
								if (n.matches(t)) return [n];
								n = n.previousElementSibling;
							}
							return [];
						},
						next: function (e, t) {
							for (var n = e.nextElementSibling; n; ) {
								if (n.matches(t)) return [n];
								n = n.nextElementSibling;
							}
							return [];
						},
					};
					function q(e) {
						return (q =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function K(e) {
						for (
							;
							(e += Math.floor(1e6 * Math.random())),
								document.getElementById(e);

						);
						return e;
					}
					function G(e) {
						var t = e.getAttribute('data-mdb-target');
						if (!t || '#' === t) {
							e = e.getAttribute('href');
							if (!e || (!e.includes('#') && !e.startsWith('.'))) return null;
							e.includes('#') &&
								!e.startsWith('#') &&
								(e = '#'.concat(e.split('#')[1])),
								(t = e && '#' !== e ? e.trim() : null);
						}
						return t;
					}
					function Q(e) {
						return (e = G(e)) ? document.querySelector(e) : null;
					}
					function $(e) {
						if (!e) return 0;
						var t = (i = window.getComputedStyle(e)).transitionDuration,
							n = i.transitionDelay,
							e = Number.parseFloat(t),
							i = Number.parseFloat(n);
						return e || i
							? ((t = t.split(',')[0]),
							  (n = n.split(',')[0]),
							  1e3 * (Number.parseFloat(t) + Number.parseFloat(n)))
							: 0;
					}
					function Z(e) {
						e.dispatchEvent(new Event(de));
					}
					function ee(e) {
						return (
							!(!e || 'object' !== q(e)) &&
							(void 0 !== e.jquery && (e = e[0]), void 0 !== e.nodeType)
						);
					}
					function te(t, e) {
						var n = !1,
							e = e + 5;
						t.addEventListener(de, function e() {
							(n = !0), t.removeEventListener(de, e);
						}),
							setTimeout(function () {
								n || Z(t);
							}, e);
					}
					function ne(r, o, a) {
						Object.keys(a).forEach(function (e) {
							var t,
								n = a[e],
								i = o[e],
								t =
									i && ee(i)
										? 'element'
										: null == (t = i)
										? ''.concat(t)
										: {}.toString
												.call(t)
												.match(/\s([a-z]+)/i)[1]
												.toLowerCase();
							if (!new RegExp(n).test(t))
								throw new TypeError(
									''
										.concat(r.toUpperCase(), ': Option "')
										.concat(e, '" provided type "')
										.concat(t, '" but expected type "')
										.concat(n, '".')
								);
						});
					}
					function ie(e) {
						if (!e) return !1;
						if (e.style && e.parentNode && e.parentNode.style) {
							var t = getComputedStyle(e),
								e = getComputedStyle(e.parentNode);
							return (
								'none' !== t.display &&
								'none' !== e.display &&
								'hidden' !== t.visibility
							);
						}
						return !1;
					}
					function re(e) {
						return (
							!e ||
							e.nodeType !== Node.ELEMENT_NODE ||
							!!e.classList.contains('disabled') ||
							(void 0 !== e.disabled
								? e.disabled
								: e.hasAttribute('disabled') &&
								  'false' !== e.getAttribute('disabled'))
						);
					}
					function oe(e) {
						return document.documentElement.attachShadow
							? 'function' != typeof e.getRootNode
								? e instanceof ShadowRoot
									? e
									: e.parentNode
									? oe(e.parentNode)
									: null
								: (e = e.getRootNode()) instanceof ShadowRoot
								? e
								: null
							: null;
					}
					function ae() {}
					function se(e) {
						return e.offsetHeight;
					}
					function le() {
						var e = window.jQuery;
						return e && !document.body.hasAttribute('data-mdb-no-jquery')
							? e
							: null;
					}
					function ue() {
						return 'rtl' === document.documentElement.dir;
					}
					function ce(e) {
						'function' == typeof e && e();
					}
					var de = 'transitionend',
						fe = function (e) {
							e = G(e);
							return e && document.querySelector(e) ? e : null;
						},
						he = function (e) {
							return ee(e)
								? e.jquery
									? e[0]
									: e
								: 'string' == typeof e && 0 < e.length
								? J.findOne(e)
								: null;
						},
						pe = function (i) {
							var e;
							(e = function () {
								var e,
									t,
									n = le();
								n &&
									((e = i.NAME),
									(t = n.fn[e]),
									(n.fn[e] = i.jQueryInterface),
									(n.fn[e].Constructor = i),
									(n.fn[e].noConflict = function () {
										return (n.fn[e] = t), i.jQueryInterface;
									}));
							}),
								'loading' === document.readyState
									? document.addEventListener('DOMContentLoaded', e)
									: e();
						},
						me = (n(300), new Map()),
						_e = {
							set: function (e, t, n) {
								me.has(e) || me.set(e, new Map());
								e = me.get(e);
								e.has(t) || 0 === e.size
									? e.set(t, n)
									: console.error(
											"Bootstrap doesn't allow more than one instance per element. Bound instance: ".concat(
												Array.from(e.keys())[0],
												'.'
											)
									  );
							},
							get: function (e, t) {
								return (me.has(e) && me.get(e).get(t)) || null;
							},
							remove: function (e, t) {
								var n;
								me.has(e) &&
									((n = me.get(e)).delete(t), 0 === n.size && me.delete(e));
							},
						};
					n(83);
					function ve(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return ye(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return ye(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function ye(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					var ge = /[^.]*(?=\..*)\.|.*/,
						be = /\..*/,
						ke = /::\d+$/,
						we = {},
						Me = 1,
						Le = { mouseenter: 'mouseover', mouseleave: 'mouseout' },
						xe = /^(mouseenter|mouseleave)/i,
						De = new Set([
							'click',
							'dblclick',
							'mouseup',
							'mousedown',
							'contextmenu',
							'mousewheel',
							'DOMMouseScroll',
							'mouseover',
							'mouseout',
							'mousemove',
							'selectstart',
							'selectend',
							'keydown',
							'keypress',
							'keyup',
							'orientationchange',
							'touchstart',
							'touchmove',
							'touchend',
							'touchcancel',
							'pointerdown',
							'pointermove',
							'pointerup',
							'pointerleave',
							'pointercancel',
							'gesturestart',
							'gesturechange',
							'gestureend',
							'focus',
							'blur',
							'change',
							'reset',
							'select',
							'submit',
							'focusin',
							'focusout',
							'load',
							'unload',
							'beforeunload',
							'resize',
							'move',
							'DOMContentLoaded',
							'readystatechange',
							'error',
							'abort',
							'scroll',
						]);
					function Se(e, t) {
						return (t && ''.concat(t, '::').concat(Me++)) || e.uidEvent || Me++;
					}
					function Te(e) {
						var t = Se(e);
						return (e.uidEvent = t), (we[t] = we[t] || {}), we[t];
					}
					function Oe(e, t, n) {
						for (
							var i = 2 < arguments.length && void 0 !== n ? n : null,
								r = Object.keys(e),
								o = 0,
								a = r.length;
							o < a;
							o++
						) {
							var s = e[r[o]];
							if (s.originalHandler === t && s.delegationSelector === i)
								return s;
						}
						return null;
					}
					function Ye(e, t, n) {
						var i = 'string' == typeof t,
							n = i ? n : t,
							t = Ee(e);
						return De.has(t) || (t = e), [i, n, t];
					}
					function Ce(e, t, n, i, r) {
						var o, a, s, l, u, c, d, f, h, p;
						'string' == typeof t &&
							e &&
							(n || ((n = i), (i = null)),
							xe.test(t) &&
								((u = function (t) {
									return function (e) {
										if (
											!e.relatedTarget ||
											(e.relatedTarget !== e.delegateTarget &&
												!e.delegateTarget.contains(e.relatedTarget))
										)
											return t.call(this, e);
									};
								}),
								i ? (i = u(i)) : (n = u(n))),
							(o = (l = ve(Ye(t, n, i), 3))[0]),
							(a = l[1]),
							(s = l[2]),
							(u = Oe((l = (u = Te(e))[s] || (u[s] = {})), a, o ? n : null))
								? (u.oneOff = u.oneOff && r)
								: ((t = Se(a, t.replace(ge, ''))),
								  ((i = o
										? ((f = e),
										  (h = n),
										  (p = i),
										  function e(t) {
												for (
													var n = f.querySelectorAll(h), i = t.target;
													i && i !== this;
													i = i.parentNode
												)
													for (var r = n.length; r--; )
														if (n[r] === i)
															return (
																(t.delegateTarget = i),
																e.oneOff && Pe.off(f, t.type, h, p),
																p.apply(i, [t])
															);
												return null;
										  })
										: ((c = e),
										  (d = n),
										  function e(t) {
												return (
													(t.delegateTarget = c),
													e.oneOff && Pe.off(c, t.type, d),
													d.apply(c, [t])
												);
										  })).delegationSelector = o ? n : null),
								  (i.originalHandler = a),
								  (i.oneOff = r),
								  (l[(i.uidEvent = t)] = i),
								  e.addEventListener(s, i, o)));
					}
					function je(e, t, n, i, r) {
						i = Oe(t[n], i, r);
						i &&
							(e.removeEventListener(n, i, Boolean(r)),
							delete t[n][i.uidEvent]);
					}
					function Ee(e) {
						return (e = e.replace(be, '')), Le[e] || e;
					}
					var Pe = {
							on: function (e, t, n, i) {
								Ce(e, t, n, i, !1);
							},
							one: function (e, t, n, i) {
								Ce(e, t, n, i, !0);
							},
							off: function (a, s, e, t) {
								if ('string' == typeof s && a) {
									var n = ve(Ye(s, e, t), 3),
										i = n[0],
										t = n[1],
										r = n[2],
										o = r !== s,
										l = Te(a),
										n = s.startsWith('.');
									if (void 0 !== t)
										return l && l[r]
											? void je(a, l, r, t, i ? e : null)
											: void 0;
									n &&
										Object.keys(l).forEach(function (e) {
											var t, n, i, r, o;
											(t = a),
												(n = l),
												(i = e),
												(r = s.slice(1)),
												(o = n[i] || {}),
												Object.keys(o).forEach(function (e) {
													e.includes(r) &&
														je(
															t,
															n,
															i,
															(e = o[e]).originalHandler,
															e.delegationSelector
														);
												});
										});
									var u = l[r] || {};
									Object.keys(u).forEach(function (e) {
										var t = e.replace(ke, '');
										(o && !s.includes(t)) ||
											je(
												a,
												l,
												r,
												(e = u[e]).originalHandler,
												e.delegationSelector
											);
									});
								}
							},
							trigger: function (e, t, n) {
								if ('string' != typeof t || !e) return null;
								var i,
									r = le(),
									o = Ee(t),
									a = t !== o,
									s = De.has(o),
									l = !0,
									u = !0,
									c = !1,
									d = null;
								return (
									a &&
										r &&
										((i = r.Event(t, n)),
										r(e).trigger(i),
										(l = !i.isPropagationStopped()),
										(u = !i.isImmediatePropagationStopped()),
										(c = i.isDefaultPrevented())),
									s
										? (d = document.createEvent('HTMLEvents')).initEvent(
												o,
												l,
												!0
										  )
										: (d = new CustomEvent(t, { bubbles: l, cancelable: !0 })),
									void 0 !== n &&
										Object.keys(n).forEach(function (e) {
											Object.defineProperty(d, e, {
												get: function () {
													return n[e];
												},
											});
										}),
									c && d.preventDefault(),
									u && e.dispatchEvent(d),
									d.defaultPrevented && void 0 !== i && i.preventDefault(),
									d
								);
							},
						},
						Ae = Pe;
					n(302);
					function He(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Ie = (function () {
						function t(e) {
							!(function (e) {
								if (!(e instanceof t))
									throw new TypeError('Cannot call a class as a function');
							})(this),
								(e = he(e)) &&
									((this._element = e),
									_e.set(this._element, this.constructor.DATA_KEY, this));
						}
						var e, n, i;
						return (
							(e = t),
							(i = [
								{
									key: 'getInstance',
									value: function (e) {
										return _e.get(e, this.DATA_KEY);
									},
								},
								{
									key: 'VERSION',
									get: function () {
										return '5.0.1';
									},
								},
								{
									key: 'NAME',
									get: function () {
										throw new Error(
											'You have to implement the static method "NAME", for each component!'
										);
									},
								},
								{
									key: 'DATA_KEY',
									get: function () {
										return 'bs.'.concat(this.NAME);
									},
								},
								{
									key: 'EVENT_KEY',
									get: function () {
										return '.'.concat(this.DATA_KEY);
									},
								},
							]),
							(n = [
								{
									key: 'dispose',
									value: function () {
										var t = this;
										_e.remove(this._element, this.constructor.DATA_KEY),
											Ae.off(this._element, this.constructor.EVENT_KEY),
											Object.getOwnPropertyNames(this).forEach(function (e) {
												t[e] = null;
											});
									},
								},
								{
									key: '_queueCallback',
									value: function (e, t, n) {
										2 < arguments.length && void 0 !== n && !n
											? ce(e)
											: ((n = $(t)),
											  Ae.one(t, 'transitionend', function () {
													return ce(e);
											  }),
											  te(t, n));
									},
								},
							]) && He(e.prototype, n),
							i && He(e, i),
							t
						);
					})();
					function Re(e) {
						return (Re =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Ne(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function We(e, t) {
						return (We =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Fe(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Be(n);
							return (
								(e = i
									? ((e = Be(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Re(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Be(e) {
						return (Be = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var ze = 'bs.button',
						Ve = '.'.concat(ze),
						Ue = '[data-mdb-toggle="button"]',
						Xe = 'click'.concat(Ve).concat('.data-api'),
						Je = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && We(e, t);
							})(r, Ie);
							var e,
								t,
								n,
								i = Fe(r);
							function r() {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									i.apply(this, arguments)
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (t) {
											return this.each(function () {
												var e = (e = _e.get(this, ze)) || new r(this);
												'toggle' === t && e[t]();
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'button';
										},
									},
								]),
								(t = [
									{
										key: 'toggle',
										value: function () {
											this._element.setAttribute(
												'aria-pressed',
												this._element.classList.toggle('active')
											);
										},
									},
								]) && Ne(e.prototype, t),
								n && Ne(e, n),
								r
							);
						})();
					Ae.on(document, Xe, Ue, function (e) {
						e.preventDefault();
						e = e.target.closest(Ue);
						(_e.get(e, ze) || new Je(e)).toggle();
					}),
						pe(Je);
					var qe = Je;
					function Ke(e) {
						return (Ke =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Ge(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Qe(e, t, n) {
						return (Qe =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = tt(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function $e(e, t) {
						return ($e =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Ze(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = tt(n);
							return (
								(e = i
									? ((e = tt(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Ke(e) && 'function' != typeof e)
									? et(t)
									: e
							);
						};
					}
					function et(e) {
						if (void 0 === e)
							throw new ReferenceError(
								"this hasn't been initialised - super() hasn't been called"
							);
						return e;
					}
					function tt(e) {
						return (tt = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var nt = 'button',
						it = 'mdb.'.concat(nt),
						rt = '.'.concat(it),
						ot = 'click'.concat(rt),
						at = 'transitionend',
						st = 'mouseenter',
						lt = 'mouseleave',
						ut = 'hide'.concat(rt),
						ct = 'hidden'.concat(rt),
						dt = 'show'.concat(rt),
						ft = 'shown'.concat(rt),
						ht = 'fixed-action-btn',
						pt = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && $e(e, t);
							})(r, qe);
							var e,
								t,
								n,
								i = Ze(r);
							function r(e) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e))._fn = {}),
									e._element && (m.setData(e._element, it, et(e)), e._init()),
									e
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, it),
													t = 'object' === Ke(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return nt;
										},
									},
								]),
								(t = [
									{
										key: 'show',
										value: function () {
											F.hasClass(this._element, ht) &&
												(H.off(this._buttonList, at),
												H.trigger(this._element, dt),
												this._bindListOpenTransitionEnd(),
												F.addStyle(this._element, {
													height: ''.concat(this._fullContainerHeight, 'px'),
												}),
												this._toggleVisibility(!0));
										},
									},
									{
										key: 'hide',
										value: function () {
											F.hasClass(this._element, ht) &&
												(H.off(this._buttonList, at),
												H.trigger(this._element, ut),
												this._bindListHideTransitionEnd(),
												this._toggleVisibility(!1));
										},
									},
									{
										key: 'dispose',
										value: function () {
											F.hasClass(this._element, ht) &&
												(H.off(this._actionButton, ot),
												this._actionButton.removeEventListener(
													st,
													this._fn.mouseenter
												),
												this._element.removeEventListener(
													lt,
													this._fn.mouseleave
												)),
												Qe(tt(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_init',
										value: function () {
											F.hasClass(this._element, ht) &&
												(this._saveInitialHeights(),
												this._setInitialStyles(),
												this._bindInitialEvents());
										},
									},
									{
										key: '_bindMouseEnter',
										value: function () {
											var e = this;
											this._actionButton.addEventListener(
												st,
												(this._fn.mouseenter = function () {
													e._isTouchDevice || e.show();
												})
											);
										},
									},
									{
										key: '_bindMouseLeave',
										value: function () {
											var e = this;
											this._element.addEventListener(
												lt,
												(this._fn.mouseleave = function () {
													e.hide();
												})
											);
										},
									},
									{
										key: '_bindClick',
										value: function () {
											var e = this;
											H.on(this._actionButton, ot, function () {
												F.hasClass(e._element, 'active') ? e.hide() : e.show();
											});
										},
									},
									{
										key: '_bindListHideTransitionEnd',
										value: function () {
											var t = this;
											H.on(this._buttonList, at, function (e) {
												'transform' === e.propertyName &&
													(H.off(t._buttonList, at),
													(t._element.style.height = ''.concat(
														t._initialContainerHeight,
														'px'
													)),
													H.trigger(t._element, ct));
											});
										},
									},
									{
										key: '_bindListOpenTransitionEnd',
										value: function () {
											var t = this;
											H.on(this._buttonList, at, function (e) {
												'transform' === e.propertyName &&
													(H.off(t._buttonList, at), H.trigger(t._element, ft));
											});
										},
									},
									{
										key: '_toggleVisibility',
										value: function (e) {
											var t = e ? 'addClass' : 'removeClass',
												e = e
													? 'translate(0)'
													: 'translateY('.concat(
															this._fullContainerHeight,
															'px)'
													  );
											F.addStyle(this._buttonList, { transform: e }),
												this._buttonListElements &&
													this._buttonListElements.forEach(function (e) {
														return F[t](e, 'shown');
													}),
												F[t](this._element, 'active');
										},
									},
									{
										key: '_getHeight',
										value: function (e) {
											e = window.getComputedStyle(e);
											return parseFloat(e.getPropertyValue('height'));
										},
									},
									{
										key: '_saveInitialHeights',
										value: function () {
											(this._initialContainerHeight = this._getHeight(
												this._element
											)),
												(this._initialListHeight = this._getHeight(
													this._buttonList
												)),
												(this._fullContainerHeight =
													this._initialContainerHeight +
													this._initialListHeight);
										},
									},
									{
										key: '_bindInitialEvents',
										value: function () {
											this._bindClick(),
												this._bindMouseEnter(),
												this._bindMouseLeave();
										},
									},
									{
										key: '_setInitialStyles',
										value: function () {
											(this._buttonList.style.marginBottom = ''.concat(
												this._initialContainerHeight,
												'px'
											)),
												(this._buttonList.style.transform =
													'translateY('.concat(
														this._fullContainerHeight,
														'px)'
													)),
												(this._element.style.height = ''.concat(
													this._initialContainerHeight,
													'px'
												));
										},
									},
									{
										key: '_actionButton',
										get: function () {
											return V.findOne(
												'.fixed-action-btn:not(.smooth-scroll) > .btn-floating',
												this._element
											);
										},
									},
									{
										key: '_buttonListElements',
										get: function () {
											return V.find('ul .btn', this._element);
										},
									},
									{
										key: '_buttonList',
										get: function () {
											return V.findOne('ul', this._element);
										},
									},
									{
										key: '_isTouchDevice',
										get: function () {
											return 'ontouchstart' in document.documentElement;
										},
									},
								]) && Ge(e.prototype, t),
								n && Ge(e, n),
								r
							);
						})();
					V.find('.fixed-action-btn').forEach(function (e) {
						return pt.getInstance(e) || new pt(e);
					}),
						V.find('[data-mdb-toggle="button"]').forEach(function (e) {
							return pt.getInstance(e) || new pt(e);
						}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[nt]),
								(t.fn[nt] = pt.jQueryInterface),
								(t.fn[nt].Constructor = pt),
								(t.fn[nt].noConflict = function () {
									return (t.fn[nt] = e), pt.jQueryInterface;
								}));
						});
					var mt = pt;
					function _t(e) {
						return (
							'true' === e ||
							('false' !== e &&
								(e === Number(e).toString()
									? Number(e)
									: '' === e || 'null' === e
									? null
									: e))
						);
					}
					function vt(e) {
						return e.replace(/[A-Z]/g, function (e) {
							return '-'.concat(e.toLowerCase());
						});
					}
					var yt = {
						setDataAttribute: function (e, t, n) {
							e.setAttribute('data-mdb-'.concat(vt(t)), n);
						},
						removeDataAttribute: function (e, t) {
							e.removeAttribute('data-mdb-'.concat(vt(t)));
						},
						getDataAttributes: function (n) {
							if (!n) return {};
							var i = {};
							return (
								Object.keys(n.dataset)
									.filter(function (e) {
										return e.startsWith('mdb');
									})
									.forEach(function (e) {
										var t =
											(t = e.replace(/^mdb/, '')).charAt(0).toLowerCase() +
											t.slice(1, t.length);
										i[t] = _t(n.dataset[e]);
									}),
								i
							);
						},
						getDataAttribute: function (e, t) {
							return _t(e.getAttribute('data-mdb-'.concat(vt(t))));
						},
						offset: function (e) {
							e = e.getBoundingClientRect();
							return {
								top: e.top + document.body.scrollTop,
								left: e.left + document.body.scrollLeft,
							};
						},
						position: function (e) {
							return { top: e.offsetTop, left: e.offsetLeft };
						},
					};
					function gt(e) {
						return (gt =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function bt(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function kt(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? bt(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: bt(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function wt(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Mt(e, t) {
						return (Mt =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Lt(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = xt(n);
							return (
								(e = i
									? ((e = xt(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== gt(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function xt(e) {
						return (xt = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Dt = 'bs.collapse',
						t = '.'.concat(Dt),
						St = { toggle: !0, parent: '' },
						Tt = { toggle: 'boolean', parent: '(string|element)' },
						Ot = 'show'.concat(t),
						Yt = 'shown'.concat(t),
						Ct = 'hide'.concat(t),
						jt = 'hidden'.concat(t),
						Ve = 'click'.concat(t).concat('.data-api'),
						Et = 'show',
						Pt = 'collapse',
						At = 'collapsing',
						Ht = 'collapsed',
						It = '[data-mdb-toggle="collapse"]',
						Rt = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Mt(e, t);
							})(c, Ie);
							var e,
								t,
								n,
								u = Lt(c);
							function c(e, t) {
								var n;
								!(function (e) {
									if (!(e instanceof c))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									((n = u.call(this, e))._isTransitioning = !1),
									(n._config = n._getConfig(t)),
									(n._triggerArray = J.find(
										''.concat(It, '[href="#').concat(n._element.id, '"],') +
											''
												.concat(It, '[data-mdb-target="#')
												.concat(n._element.id, '"]')
									));
								for (var i = J.find(It), r = 0, o = i.length; r < o; r++) {
									var a = i[r],
										s = fe(a),
										l = J.find(s).filter(function (e) {
											return e === n._element;
										});
									null !== s &&
										l.length &&
										((n._selector = s), n._triggerArray.push(a));
								}
								return (
									(n._parent = n._config.parent ? n._getParent() : null),
									n._config.parent ||
										n._addAriaAndCollapsedClass(n._element, n._triggerArray),
									n._config.toggle && n.toggle(),
									n
								);
							}
							return (
								(e = c),
								(n = [
									{
										key: 'collapseInterface',
										value: function (e, t) {
											var n = _e.get(e, Dt),
												i = kt(
													kt(kt({}, St), yt.getDataAttributes(e)),
													'object' === gt(t) && t ? t : {}
												);
											if (
												(!n &&
													i.toggle &&
													'string' == typeof t &&
													/show|hide/.test(t) &&
													(i.toggle = !1),
												(n = n || new c(e, i)),
												'string' == typeof t)
											) {
												if (void 0 === n[t])
													throw new TypeError(
														'No method named "'.concat(t, '"')
													);
												n[t]();
											}
										},
									},
									{
										key: 'jQueryInterface',
										value: function (e) {
											return this.each(function () {
												c.collapseInterface(this, e);
											});
										},
									},
									{
										key: 'Default',
										get: function () {
											return St;
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'collapse';
										},
									},
								]),
								(t = [
									{
										key: 'toggle',
										value: function () {
											this._element.classList.contains(Et)
												? this.hide()
												: this.show();
										},
									},
									{
										key: 'show',
										value: function () {
											var t = this;
											if (
												!this._isTransitioning &&
												!this._element.classList.contains(Et)
											) {
												this._parent &&
													0 ===
														(n = J.find(
															'.show, .collapsing',
															this._parent
														).filter(function (e) {
															return 'string' == typeof t._config.parent
																? e.getAttribute('data-mdb-parent') ===
																		t._config.parent
																: e.classList.contains(Pt);
														})).length &&
													(n = null);
												var e,
													n,
													i = J.findOne(this._selector);
												if (n) {
													var r,
														o = n.find(function (e) {
															return i !== e;
														});
													if (
														(r = o ? _e.get(o, Dt) : null) &&
														r._isTransitioning
													)
														return;
												}
												Ae.trigger(this._element, Ot).defaultPrevented ||
													(n &&
														n.forEach(function (e) {
															i !== e && c.collapseInterface(e, 'hide'),
																r || _e.set(e, Dt, null);
														}),
													(e = this._getDimension()),
													this._element.classList.remove(Pt),
													this._element.classList.add(At),
													(this._element.style[e] = 0),
													this._triggerArray.length &&
														this._triggerArray.forEach(function (e) {
															e.classList.remove(Ht),
																e.setAttribute('aria-expanded', !0);
														}),
													this.setTransitioning(!0),
													(n = e[0].toUpperCase() + e.slice(1)),
													(n = 'scroll'.concat(n)),
													this._queueCallback(
														function () {
															t._element.classList.remove(At),
																t._element.classList.add(Pt, Et),
																(t._element.style[e] = ''),
																t.setTransitioning(!1),
																Ae.trigger(t._element, Yt);
														},
														this._element,
														!0
													),
													(this._element.style[e] = ''.concat(
														this._element[n],
														'px'
													)));
											}
										},
									},
									{
										key: 'hide',
										value: function () {
											var e = this;
											if (
												!this._isTransitioning &&
												this._element.classList.contains(Et) &&
												!Ae.trigger(this._element, Ct).defaultPrevented
											) {
												var t = this._getDimension();
												(this._element.style[t] = ''.concat(
													this._element.getBoundingClientRect()[t],
													'px'
												)),
													se(this._element),
													this._element.classList.add(At),
													this._element.classList.remove(Pt, Et);
												var n = this._triggerArray.length;
												if (0 < n)
													for (var i = 0; i < n; i++) {
														var r = this._triggerArray[i],
															o = Q(r);
														o &&
															!o.classList.contains(Et) &&
															(r.classList.add(Ht),
															r.setAttribute('aria-expanded', !1));
													}
												this.setTransitioning(!0);
												(this._element.style[t] = ''),
													this._queueCallback(
														function () {
															e.setTransitioning(!1),
																e._element.classList.remove(At),
																e._element.classList.add(Pt),
																Ae.trigger(e._element, jt);
														},
														this._element,
														!0
													);
											}
										},
									},
									{
										key: 'setTransitioning',
										value: function (e) {
											this._isTransitioning = e;
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											return (
												((e = kt(kt({}, St), e)).toggle = Boolean(e.toggle)),
												ne('collapse', e, Tt),
												e
											);
										},
									},
									{
										key: '_getDimension',
										value: function () {
											return this._element.classList.contains('width')
												? 'width'
												: 'height';
										},
									},
									{
										key: '_getParent',
										value: function () {
											var n = this,
												e = this._config.parent,
												e = he(e),
												t = ''.concat(It, '[data-mdb-parent="').concat(e, '"]');
											return (
												J.find(t, e).forEach(function (e) {
													var t = Q(e);
													n._addAriaAndCollapsedClass(t, [e]);
												}),
												e
											);
										},
									},
									{
										key: '_addAriaAndCollapsedClass',
										value: function (e, t) {
											var n;
											e &&
												t.length &&
												((n = e.classList.contains(Et)),
												t.forEach(function (e) {
													n ? e.classList.remove(Ht) : e.classList.add(Ht),
														e.setAttribute('aria-expanded', n);
												}));
										},
									},
								]) && wt(e.prototype, t),
								n && wt(e, n),
								c
							);
						})();
					Ae.on(document, Ve, It, function (e) {
						('A' === e.target.tagName ||
							(e.delegateTarget && 'A' === e.delegateTarget.tagName)) &&
							e.preventDefault();
						var n = yt.getDataAttributes(this),
							e = fe(this);
						J.find(e).forEach(function (e) {
							var t = _e.get(e, Dt),
								t = t
									? (null === t._parent &&
											'string' == typeof n.parent &&
											((t._config.parent = n.parent),
											(t._parent = t._getParent())),
									  'toggle')
									: n;
							Rt.collapseInterface(e, t);
						});
					}),
						pe(Rt);
					function Nt() {
						var e = document.documentElement.clientWidth;
						return Math.abs(window.innerWidth - e);
					}
					function Wt(e) {
						var t = 0 < arguments.length && void 0 !== e ? e : Nt();
						Ut(),
							Xt('body', 'paddingRight', function (e) {
								return e + t;
							}),
							Xt(zt, 'paddingRight', function (e) {
								return e + t;
							}),
							Xt(Vt, 'marginRight', function (e) {
								return e - t;
							});
					}
					function Ft() {
						Jt('body', 'overflow'),
							Jt('body', 'paddingRight'),
							Jt(zt, 'paddingRight'),
							Jt(Vt, 'marginRight');
					}
					var Bt = Rt,
						zt = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',
						Vt = '.sticky-top',
						Ut = function () {
							var e = document.body.style.overflow;
							e && yt.setDataAttribute(document.body, 'overflow', e),
								(document.body.style.overflow = 'hidden');
						},
						Xt = function (e, i, r) {
							var o = Nt();
							J.find(e).forEach(function (e) {
								var t, n;
								(e !== document.body &&
									window.innerWidth > e.clientWidth + o) ||
									((t = e.style[i]),
									(n = window.getComputedStyle(e)[i]),
									yt.setDataAttribute(e, i, t),
									(e.style[i] = ''.concat(r(Number.parseFloat(n)), 'px')));
							});
						},
						Jt = function (e, n) {
							J.find(e).forEach(function (e) {
								var t = yt.getDataAttribute(e, n);
								void 0 === t
									? e.style.removeProperty(n)
									: (yt.removeDataAttribute(e, n), (e.style[n] = t));
							});
						};
					function qt(e) {
						return (qt =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Kt(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Gt(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Kt(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Kt(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Qt(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var $t = {
							isVisible: !0,
							isAnimated: !1,
							rootElement: document.body,
							clickCallback: null,
						},
						Zt = {
							isVisible: 'boolean',
							isAnimated: 'boolean',
							rootElement: 'element',
							clickCallback: '(function|null)',
						},
						en = 'mousedown.bs.'.concat('backdrop'),
						tn = (function () {
							function t(e) {
								!(function (e) {
									if (!(e instanceof t))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._config = this._getConfig(e)),
									(this._isAppended = !1),
									(this._element = null);
							}
							var e, n, i;
							return (
								(e = t),
								(n = [
									{
										key: 'show',
										value: function (e) {
											this._config.isVisible
												? (this._append(),
												  this._config.isAnimated && se(this._getElement()),
												  this._getElement().classList.add('show'),
												  this._emulateAnimation(function () {
														ce(e);
												  }))
												: ce(e);
										},
									},
									{
										key: 'hide',
										value: function (e) {
											var t = this;
											this._config.isVisible
												? (this._getElement().classList.remove('show'),
												  this._emulateAnimation(function () {
														t.dispose(), ce(e);
												  }))
												: ce(e);
										},
									},
									{
										key: '_getElement',
										value: function () {
											var e;
											return (
												this._element ||
													(((e = document.createElement('div')).className =
														'modal-backdrop'),
													this._config.isAnimated && e.classList.add('fade'),
													(this._element = e)),
												this._element
											);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											return (
												((e = Gt(
													Gt({}, $t),
													'object' === qt(e) ? e : {}
												)).rootElement = e.rootElement || document.body),
												ne('backdrop', e, Zt),
												e
											);
										},
									},
									{
										key: '_append',
										value: function () {
											var e = this;
											this._isAppended ||
												(this._config.rootElement.appendChild(
													this._getElement()
												),
												Ae.on(this._getElement(), en, function () {
													ce(e._config.clickCallback);
												}),
												(this._isAppended = !0));
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._isAppended &&
												(Ae.off(this._element, en),
												this._getElement().parentNode.removeChild(
													this._element
												),
												(this._isAppended = !1));
										},
									},
									{
										key: '_emulateAnimation',
										value: function (e) {
											var t;
											this._config.isAnimated
												? ((t = $(this._getElement())),
												  Ae.one(
														this._getElement(),
														'transitionend',
														function () {
															return ce(e);
														}
												  ),
												  te(this._getElement(), t))
												: ce(e);
										},
									},
								]) && Qt(e.prototype, n),
								i && Qt(e, i),
								t
							);
						})();
					function nn(e) {
						return (nn =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function rn(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function on(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? rn(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: rn(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function an(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function sn(e, t, n) {
						return (sn =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = cn(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function ln(e, t) {
						return (ln =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function un(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = cn(n);
							return (
								(e = i
									? ((e = cn(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== nn(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function cn(e) {
						return (cn = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var dn = 'bs.offcanvas',
						Xe = '.'.concat(dn),
						rt = 'load'.concat(Xe).concat('.data-api'),
						fn = { backdrop: !0, keyboard: !0, scroll: !1 },
						hn = {
							backdrop: 'boolean',
							keyboard: 'boolean',
							scroll: 'boolean',
						},
						pn = '.offcanvas.show',
						mn = 'show'.concat(Xe),
						_n = 'shown'.concat(Xe),
						vn = 'hide'.concat(Xe),
						yn = 'hidden'.concat(Xe),
						gn = 'focusin'.concat(Xe),
						t = 'click'.concat(Xe).concat('.data-api'),
						bn = 'click.dismiss'.concat(Xe),
						kn = 'keydown.dismiss'.concat(Xe),
						wn = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && ln(e, t);
							})(r, Ie);
							var e,
								t,
								n,
								i = un(r);
							function r(e, t) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e))._config = e._getConfig(t)),
									(e._isShown = !1),
									(e._backdrop = e._initializeBackDrop()),
									e._addEventListeners(),
									e
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (t) {
											return this.each(function () {
												var e =
													_e.get(this, dn) ||
													new r(this, 'object' === nn(t) ? t : {});
												if ('string' == typeof t) {
													if (
														void 0 === e[t] ||
														t.startsWith('_') ||
														'constructor' === t
													)
														throw new TypeError(
															'No method named "'.concat(t, '"')
														);
													e[t](this);
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'offcanvas';
										},
									},
									{
										key: 'Default',
										get: function () {
											return fn;
										},
									},
								]),
								(t = [
									{
										key: 'toggle',
										value: function (e) {
											return this._isShown ? this.hide() : this.show(e);
										},
									},
									{
										key: 'show',
										value: function (e) {
											var t = this;
											this._isShown ||
												Ae.trigger(this._element, mn, { relatedTarget: e })
													.defaultPrevented ||
												((this._isShown = !0),
												(this._element.style.visibility = 'visible'),
												this._backdrop.show(),
												this._config.scroll ||
													(Wt(), this._enforceFocusOnElement(this._element)),
												this._element.removeAttribute('aria-hidden'),
												this._element.setAttribute('aria-modal', !0),
												this._element.setAttribute('role', 'dialog'),
												this._element.classList.add('show'),
												this._queueCallback(
													function () {
														Ae.trigger(t._element, _n, { relatedTarget: e });
													},
													this._element,
													!0
												));
										},
									},
									{
										key: 'hide',
										value: function () {
											var e = this;
											this._isShown &&
												(Ae.trigger(this._element, vn).defaultPrevented ||
													(Ae.off(document, gn),
													this._element.blur(),
													(this._isShown = !1),
													this._element.classList.remove('show'),
													this._backdrop.hide(),
													this._queueCallback(
														function () {
															e._element.setAttribute('aria-hidden', !0),
																e._element.removeAttribute('aria-modal'),
																e._element.removeAttribute('role'),
																(e._element.style.visibility = 'hidden'),
																e._config.scroll || Ft(),
																Ae.trigger(e._element, yn);
														},
														this._element,
														!0
													)));
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._backdrop.dispose(),
												sn(cn(r.prototype), 'dispose', this).call(this),
												Ae.off(document, gn);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											return (
												(e = on(
													on(on({}, fn), yt.getDataAttributes(this._element)),
													'object' === nn(e) ? e : {}
												)),
												ne('offcanvas', e, hn),
												e
											);
										},
									},
									{
										key: '_initializeBackDrop',
										value: function () {
											var e = this;
											return new tn({
												isVisible: this._config.backdrop,
												isAnimated: !0,
												rootElement: this._element.parentNode,
												clickCallback: function () {
													return e.hide();
												},
											});
										},
									},
									{
										key: '_enforceFocusOnElement',
										value: function (t) {
											Ae.off(document, gn),
												Ae.on(document, gn, function (e) {
													document === e.target ||
														t === e.target ||
														t.contains(e.target) ||
														t.focus();
												}),
												t.focus();
										},
									},
									{
										key: '_addEventListeners',
										value: function () {
											var t = this;
											Ae.on(
												this._element,
												bn,
												'[data-mdb-dismiss="offcanvas"]',
												function () {
													return t.hide();
												}
											),
												Ae.on(this._element, kn, function (e) {
													t._config.keyboard && 'Escape' === e.key && t.hide();
												});
										},
									},
								]) && an(e.prototype, t),
								n && an(e, n),
								r
							);
						})();
					Ae.on(document, t, '[data-mdb-toggle="offcanvas"]', function (e) {
						var t = this,
							n = Q(this);
						['A', 'AREA'].includes(this.tagName) && e.preventDefault(),
							re(this) ||
								(Ae.one(n, yn, function () {
									ie(t) && t.focus();
								}),
								(e = J.findOne(pn)) && e !== n && wn.getInstance(e).hide(),
								(_e.get(n, dn) || new wn(n)).toggle(this));
					}),
						Ae.on(window, rt, function () {
							J.find(pn).forEach(function (e) {
								return (_e.get(e, dn) || new wn(e)).show();
							});
						}),
						pe(wn);
					var Mn = wn;
					n(84);
					function Ln(e) {
						return (Ln =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function xn(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Dn(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? xn(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: xn(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Sn(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Tn(e, t) {
						return (Tn =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function On(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Yn(n);
							return (
								(e = i
									? ((e = Yn(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Ln(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Yn(e) {
						return (Yn = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Cn = 'bs.carousel',
						Ve = '.'.concat(Cn),
						jn = {
							interval: 5e3,
							keyboard: !0,
							slide: !1,
							pause: 'hover',
							wrap: !0,
							touch: !0,
						},
						En = {
							interval: '(number|boolean)',
							keyboard: 'boolean',
							slide: '(boolean|string)',
							pause: '(string|boolean)',
							wrap: 'boolean',
							touch: 'boolean',
						},
						Pn = 'next',
						An = 'prev',
						Hn = 'left',
						In = 'right',
						Rn = 'slide'.concat(Ve),
						Nn = 'slid'.concat(Ve),
						Wn = 'keydown'.concat(Ve),
						Fn = 'mouseenter'.concat(Ve),
						Bn = 'mouseleave'.concat(Ve),
						zn = 'touchstart'.concat(Ve),
						Vn = 'touchmove'.concat(Ve),
						Un = 'touchend'.concat(Ve),
						Xn = 'pointerdown'.concat(Ve),
						Jn = 'pointerup'.concat(Ve),
						qn = 'dragstart'.concat(Ve),
						Xe = 'load'.concat(Ve).concat('.data-api'),
						t = 'click'.concat(Ve).concat('.data-api'),
						Kn = 'active',
						Gn = '.active.carousel-item',
						Qn = '.carousel-indicators',
						$n = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Tn(e, t);
							})(o, Ie);
							var e,
								t,
								n,
								i = On(o);
							function o(e, t) {
								return (
									(function (e) {
										if (!(e instanceof o))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e))._items = null),
									(e._interval = null),
									(e._activeElement = null),
									(e._isPaused = !1),
									(e._isSliding = !1),
									(e.touchTimeout = null),
									(e.touchStartX = 0),
									(e.touchDeltaX = 0),
									(e._config = e._getConfig(t)),
									(e._indicatorsElement = J.findOne(Qn, e._element)),
									(e._touchSupported =
										'ontouchstart' in document.documentElement ||
										0 < navigator.maxTouchPoints),
									(e._pointerEvent = Boolean(window.PointerEvent)),
									e._addEventListeners(),
									e
								);
							}
							return (
								(e = o),
								(n = [
									{
										key: 'carouselInterface',
										value: function (e, t) {
											var n = _e.get(e, Cn),
												i = Dn(Dn({}, jn), yt.getDataAttributes(e));
											'object' === Ln(t) && (i = Dn(Dn({}, i), t));
											var r = 'string' == typeof t ? t : i.slide,
												n = n || new o(e, i);
											if ('number' == typeof t) n.to(t);
											else if ('string' == typeof r) {
												if (void 0 === n[r])
													throw new TypeError(
														'No method named "'.concat(r, '"')
													);
												n[r]();
											} else i.interval && i.ride && (n.pause(), n.cycle());
										},
									},
									{
										key: 'jQueryInterface',
										value: function (e) {
											return this.each(function () {
												o.carouselInterface(this, e);
											});
										},
									},
									{
										key: 'dataApiClickHandler',
										value: function (e) {
											var t,
												n,
												i = Q(this);
											i &&
												i.classList.contains('carousel') &&
												((t = Dn(
													Dn({}, yt.getDataAttributes(i)),
													yt.getDataAttributes(this)
												)),
												(n = this.getAttribute('data-mdb-slide-to')) &&
													(t.interval = !1),
												o.carouselInterface(i, t),
												n && _e.get(i, Cn).to(n),
												e.preventDefault());
										},
									},
									{
										key: 'Default',
										get: function () {
											return jn;
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'carousel';
										},
									},
								]),
								(t = [
									{
										key: 'next',
										value: function () {
											this._isSliding || this._slide(Pn);
										},
									},
									{
										key: 'nextWhenVisible',
										value: function () {
											!document.hidden && ie(this._element) && this.next();
										},
									},
									{
										key: 'prev',
										value: function () {
											this._isSliding || this._slide(An);
										},
									},
									{
										key: 'pause',
										value: function (e) {
											e || (this._isPaused = !0),
												J.findOne(
													'.carousel-item-next, .carousel-item-prev',
													this._element
												) && (Z(this._element), this.cycle(!0)),
												clearInterval(this._interval),
												(this._interval = null);
										},
									},
									{
										key: 'cycle',
										value: function (e) {
											e || (this._isPaused = !1),
												this._interval &&
													(clearInterval(this._interval),
													(this._interval = null)),
												this._config &&
													this._config.interval &&
													!this._isPaused &&
													(this._updateInterval(),
													(this._interval = setInterval(
														(document.visibilityState
															? this.nextWhenVisible
															: this.next
														).bind(this),
														this._config.interval
													)));
										},
									},
									{
										key: 'to',
										value: function (e) {
											var t = this;
											this._activeElement = J.findOne(Gn, this._element);
											var n = this._getItemIndex(this._activeElement);
											if (!(e > this._items.length - 1 || e < 0))
												if (this._isSliding)
													Ae.one(this._element, Nn, function () {
														return t.to(e);
													});
												else {
													if (n === e) return this.pause(), void this.cycle();
													n = n < e ? Pn : An;
													this._slide(n, this._items[e]);
												}
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											return (e = Dn(Dn({}, jn), e)), ne('carousel', e, En), e;
										},
									},
									{
										key: '_handleSwipe',
										value: function () {
											var e = Math.abs(this.touchDeltaX);
											e <= 40 ||
												((e = e / this.touchDeltaX),
												(this.touchDeltaX = 0),
												e && this._slide(0 < e ? In : Hn));
										},
									},
									{
										key: '_addEventListeners',
										value: function () {
											var t = this;
											this._config.keyboard &&
												Ae.on(this._element, Wn, function (e) {
													return t._keydown(e);
												}),
												'hover' === this._config.pause &&
													(Ae.on(this._element, Fn, function (e) {
														return t.pause(e);
													}),
													Ae.on(this._element, Bn, function (e) {
														return t.cycle(e);
													})),
												this._config.touch &&
													this._touchSupported &&
													this._addTouchEventListeners();
										},
									},
									{
										key: '_addTouchEventListeners',
										value: function () {
											function e(e) {
												!n._pointerEvent ||
												('pen' !== e.pointerType && 'touch' !== e.pointerType)
													? n._pointerEvent ||
													  (n.touchStartX = e.touches[0].clientX)
													: (n.touchStartX = e.clientX);
											}
											function t(e) {
												!n._pointerEvent ||
													('pen' !== e.pointerType &&
														'touch' !== e.pointerType) ||
													(n.touchDeltaX = e.clientX - n.touchStartX),
													n._handleSwipe(),
													'hover' === n._config.pause &&
														(n.pause(),
														n.touchTimeout && clearTimeout(n.touchTimeout),
														(n.touchTimeout = setTimeout(function (e) {
															return n.cycle(e);
														}, 500 + n._config.interval)));
											}
											var n = this;
											J.find('.carousel-item img', this._element).forEach(
												function (e) {
													Ae.on(e, qn, function (e) {
														return e.preventDefault();
													});
												}
											),
												this._pointerEvent
													? (Ae.on(this._element, Xn, e),
													  Ae.on(this._element, Jn, t),
													  this._element.classList.add('pointer-event'))
													: (Ae.on(this._element, zn, e),
													  Ae.on(this._element, Vn, function (e) {
															return (
																(e = e),
																void (n.touchDeltaX =
																	e.touches && 1 < e.touches.length
																		? 0
																		: e.touches[0].clientX - n.touchStartX)
															);
													  }),
													  Ae.on(this._element, Un, t));
										},
									},
									{
										key: '_keydown',
										value: function (e) {
											/input|textarea/i.test(e.target.tagName) ||
												('ArrowLeft' === e.key
													? (e.preventDefault(), this._slide(In))
													: 'ArrowRight' === e.key &&
													  (e.preventDefault(), this._slide(Hn)));
										},
									},
									{
										key: '_getItemIndex',
										value: function (e) {
											return (
												(this._items =
													e && e.parentNode
														? J.find('.carousel-item', e.parentNode)
														: []),
												this._items.indexOf(e)
											);
										},
									},
									{
										key: '_getItemByOrder',
										value: function (e, t) {
											var n = e === Pn,
												i = e === An,
												r = this._getItemIndex(t),
												e = this._items.length - 1;
											if (
												((i && 0 === r) || (n && r === e)) &&
												!this._config.wrap
											)
												return t;
											i = (r + (i ? -1 : 1)) % this._items.length;
											return -1 == i
												? this._items[this._items.length - 1]
												: this._items[i];
										},
									},
									{
										key: '_triggerSlideEvent',
										value: function (e, t) {
											var n = this._getItemIndex(e),
												i = this._getItemIndex(J.findOne(Gn, this._element));
											return Ae.trigger(this._element, Rn, {
												relatedTarget: e,
												direction: t,
												from: i,
												to: n,
											});
										},
									},
									{
										key: '_setActiveIndicatorElement',
										value: function (e) {
											if (this._indicatorsElement) {
												var t = J.findOne('.active', this._indicatorsElement);
												t.classList.remove(Kn),
													t.removeAttribute('aria-current');
												for (
													var n = J.find(
															'[data-mdb-target]',
															this._indicatorsElement
														),
														i = 0;
													i < n.length;
													i++
												)
													if (
														Number.parseInt(
															n[i].getAttribute('data-mdb-slide-to'),
															10
														) === this._getItemIndex(e)
													) {
														n[i].classList.add(Kn),
															n[i].setAttribute('aria-current', 'true');
														break;
													}
											}
										},
									},
									{
										key: '_updateInterval',
										value: function () {
											var e =
												this._activeElement || J.findOne(Gn, this._element);
											e &&
												((e = Number.parseInt(
													e.getAttribute('data-mdb-interval'),
													10
												))
													? ((this._config.defaultInterval =
															this._config.defaultInterval ||
															this._config.interval),
													  (this._config.interval = e))
													: (this._config.interval =
															this._config.defaultInterval ||
															this._config.interval));
										},
									},
									{
										key: '_slide',
										value: function (e, t) {
											var n,
												i = this,
												r = this._directionToOrder(e),
												o = J.findOne(Gn, this._element),
												a = this._getItemIndex(o),
												s = t || this._getItemByOrder(r, o),
												l = this._getItemIndex(s),
												e = Boolean(this._interval),
												t = r === Pn,
												u = t ? 'carousel-item-start' : 'carousel-item-end',
												c = t ? 'carousel-item-next' : 'carousel-item-prev',
												d = this._orderToDirection(r);
											s && s.classList.contains(Kn)
												? (this._isSliding = !1)
												: this._triggerSlideEvent(s, d).defaultPrevented ||
												  (o &&
														s &&
														((this._isSliding = !0),
														e && this.pause(),
														this._setActiveIndicatorElement(s),
														(this._activeElement = s),
														(n = function () {
															Ae.trigger(i._element, Nn, {
																relatedTarget: s,
																direction: d,
																from: a,
																to: l,
															});
														}),
														this._element.classList.contains('slide')
															? (s.classList.add(c),
															  se(s),
															  o.classList.add(u),
															  s.classList.add(u),
															  this._queueCallback(
																	function () {
																		s.classList.remove(u, c),
																			s.classList.add(Kn),
																			o.classList.remove(Kn, c, u),
																			(i._isSliding = !1),
																			setTimeout(n, 0);
																	},
																	o,
																	!0
															  ))
															: (o.classList.remove(Kn),
															  s.classList.add(Kn),
															  (this._isSliding = !1),
															  n()),
														e && this.cycle()));
										},
									},
									{
										key: '_directionToOrder',
										value: function (e) {
											return [In, Hn].includes(e)
												? ue()
													? e === Hn
														? An
														: Pn
													: e === Hn
													? Pn
													: An
												: e;
										},
									},
									{
										key: '_orderToDirection',
										value: function (e) {
											return [Pn, An].includes(e)
												? ue()
													? e === An
														? Hn
														: In
													: e === An
													? In
													: Hn
												: e;
										},
									},
								]) && Sn(e.prototype, t),
								n && Sn(e, n),
								o
							);
						})();
					Ae.on(
						document,
						t,
						'[data-mdb-slide], [data-mdb-slide-to]',
						$n.dataApiClickHandler
					),
						Ae.on(window, Xe, function () {
							for (
								var e = J.find('[data-mdb-ride="carousel"]'),
									t = 0,
									n = e.length;
								t < n;
								t++
							)
								$n.carouselInterface(e[t], _e.get(e[t], Cn));
						}),
						pe($n);
					var Zn = $n;
					function ei(e) {
						return (ei =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function ti(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function ni(e, t, n) {
						return (ni =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = oi(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function ii(e, t) {
						return (ii =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function ri(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = oi(n);
							return (
								(e = i
									? ((e = oi(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== ei(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function oi(e) {
						return (oi = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var ai = 'carousel',
						rt = 'mdb.'.concat(ai),
						Ve = '.'.concat(rt),
						si = 'slide.bs.carousel',
						li = 'slid.bs.carousel',
						ui = 'slide'.concat(Ve),
						ci = 'slid'.concat(Ve),
						di = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && ii(e, t);
							})(r, Zn);
							var e,
								t,
								n,
								i = ri(r);
							function r(e, t) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									(t = i.call(this, e, t))._init(),
									t
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return ai;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, si),
												H.off(this._element, li),
												ni(oi(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_init',
										value: function () {
											this._bindSlideEvent(), this._bindSlidEvent();
										},
									},
									{
										key: '_bindSlideEvent',
										value: function () {
											var t = this;
											H.on(this._element, si, function (e) {
												H.trigger(t._element, ui, {
													relatedTarget: e.relatedTarget,
													direction: e.direction,
													from: e.from,
													to: e.to,
												});
											});
										},
									},
									{
										key: '_bindSlidEvent',
										value: function () {
											var t = this;
											H.on(this._element, li, function (e) {
												H.trigger(t._element, ci, {
													relatedTarget: e.relatedTarget,
													direction: e.direction,
													from: e.from,
													to: e.to,
												});
											});
										},
									},
								]) && ti(e.prototype, t),
								n && ti(e, n),
								r
							);
						})();
					V.find('[data-mdb-ride="carousel"]').forEach(function (e) {
						di.getInstance(e) || new di(e, F.getDataAttributes(e));
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[ai]),
								(t.fn[ai] = di.jQueryInterface),
								(t.fn[ai].Constructor = di),
								(t.fn[ai].noConflict = function () {
									return (t.fn[ai] = e), di.jQueryInterface;
								}));
						});
					var fi = di,
						hi = (n(16), 'top'),
						pi = 'bottom',
						mi = 'right',
						_i = 'left',
						vi = 'auto',
						yi = [hi, pi, mi, _i],
						gi = 'start',
						bi = 'end',
						ki = 'clippingParents',
						wi = 'viewport',
						Mi = 'popper',
						Li = 'reference',
						xi = yi.reduce(function (e, t) {
							return e.concat([t + '-' + gi, t + '-' + bi]);
						}, []),
						Di = [].concat(yi, [vi]).reduce(function (e, t) {
							return e.concat([t, t + '-' + gi, t + '-' + bi]);
						}, []),
						Si = 'beforeRead',
						Ti = 'read',
						Oi = 'afterRead',
						Yi = 'beforeMain',
						Ci = 'main',
						ji = 'afterMain',
						Ei = 'beforeWrite',
						Pi = 'write',
						Ai = 'afterWrite',
						Hi = [Si, Ti, Oi, Yi, Ci, ji, Ei, Pi, Ai];
					function Ii(e) {
						return e ? (e.nodeName || '').toLowerCase() : null;
					}
					function Ri(e) {
						if (null == e) return window;
						if ('[object Window]' === e.toString()) return e;
						e = e.ownerDocument;
						return (e && e.defaultView) || window;
					}
					function Ni(e) {
						return e instanceof Ri(e).Element || e instanceof Element;
					}
					function Wi(e) {
						return e instanceof Ri(e).HTMLElement || e instanceof HTMLElement;
					}
					function Fi(e) {
						return (
							'undefined' != typeof ShadowRoot &&
							(e instanceof Ri(e).ShadowRoot || e instanceof ShadowRoot)
						);
					}
					var Bi = {
						name: 'applyStyles',
						enabled: !0,
						phase: 'write',
						fn: function (e) {
							var r = e.state;
							Object.keys(r.elements).forEach(function (e) {
								var t = r.styles[e] || {},
									n = r.attributes[e] || {},
									i = r.elements[e];
								Wi(i) &&
									Ii(i) &&
									(Object.assign(i.style, t),
									Object.keys(n).forEach(function (e) {
										var t = n[e];
										!1 === t
											? i.removeAttribute(e)
											: i.setAttribute(e, !0 === t ? '' : t);
									}));
							});
						},
						effect: function (e) {
							var i = e.state,
								r = {
									popper: {
										position: i.options.strategy,
										left: '0',
										top: '0',
										margin: '0',
									},
									arrow: { position: 'absolute' },
									reference: {},
								};
							return (
								Object.assign(i.elements.popper.style, r.popper),
								(i.styles = r),
								i.elements.arrow &&
									Object.assign(i.elements.arrow.style, r.arrow),
								function () {
									Object.keys(i.elements).forEach(function (e) {
										var t = i.elements[e],
											n = i.attributes[e] || {},
											e = Object.keys(
												(i.styles.hasOwnProperty(e) ? i.styles : r)[e]
											).reduce(function (e, t) {
												return (e[t] = ''), e;
											}, {});
										Wi(t) &&
											Ii(t) &&
											(Object.assign(t.style, e),
											Object.keys(n).forEach(function (e) {
												t.removeAttribute(e);
											}));
									});
								}
							);
						},
						requires: ['computeStyles'],
					};
					function zi(e) {
						return e.split('-')[0];
					}
					function Vi(e) {
						e = e.getBoundingClientRect();
						return {
							width: e.width,
							height: e.height,
							top: e.top,
							right: e.right,
							bottom: e.bottom,
							left: e.left,
							x: e.left,
							y: e.top,
						};
					}
					function Ui(e) {
						var t = Vi(e),
							n = e.offsetWidth,
							i = e.offsetHeight;
						return (
							Math.abs(t.width - n) <= 1 && (n = t.width),
							Math.abs(t.height - i) <= 1 && (i = t.height),
							{ x: e.offsetLeft, y: e.offsetTop, width: n, height: i }
						);
					}
					function Xi(e, t) {
						var n = t.getRootNode && t.getRootNode();
						if (e.contains(t)) return !0;
						if (n && Fi(n)) {
							var i = t;
							do {
								if (i && e.isSameNode(i)) return !0;
							} while ((i = i.parentNode || i.host));
						}
						return !1;
					}
					function Ji(e) {
						return Ri(e).getComputedStyle(e);
					}
					function qi(e) {
						return ((Ni(e) ? e.ownerDocument : e.document) || window.document)
							.documentElement;
					}
					function Ki(e) {
						return 'html' === Ii(e)
							? e
							: e.assignedSlot ||
									e.parentNode ||
									(Fi(e) ? e.host : null) ||
									qi(e);
					}
					function Gi(e) {
						return Wi(e) && 'fixed' !== Ji(e).position ? e.offsetParent : null;
					}
					function Qi(e) {
						for (
							var t = Ri(e), n = Gi(e);
							n &&
							0 <= ['table', 'td', 'th'].indexOf(Ii(n)) &&
							'static' === Ji(n).position;

						)
							n = Gi(n);
						return (
							((!n ||
								('html' !== Ii(n) &&
									('body' !== Ii(n) || 'static' !== Ji(n).position))) &&
								(n ||
									(function (e) {
										var t =
												-1 !==
												navigator.userAgent.toLowerCase().indexOf('firefox'),
											n = -1 !== navigator.userAgent.indexOf('Trident');
										if (n && Wi(e) && 'fixed' === Ji(e).position) return null;
										for (
											var i = Ki(e);
											Wi(i) && ['html', 'body'].indexOf(Ii(i)) < 0;

										) {
											var r = Ji(i);
											if (
												'none' !== r.transform ||
												'none' !== r.perspective ||
												'paint' === r.contain ||
												-1 !==
													['transform', 'perspective'].indexOf(r.willChange) ||
												(t && 'filter' === r.willChange) ||
												(t && r.filter && 'none' !== r.filter)
											)
												return i;
											i = i.parentNode;
										}
										return null;
									})(e))) ||
							t
						);
					}
					function $i(e) {
						return 0 <= ['top', 'bottom'].indexOf(e) ? 'x' : 'y';
					}
					var Zi = Math.max,
						er = Math.min,
						tr = Math.round;
					function nr(e, t, n) {
						return Zi(e, er(t, n));
					}
					function ir() {
						return { top: 0, right: 0, bottom: 0, left: 0 };
					}
					function rr(e) {
						return Object.assign({}, ir(), e);
					}
					function or(n, e) {
						return e.reduce(function (e, t) {
							return (e[t] = n), e;
						}, {});
					}
					var ar = {
							name: 'arrow',
							enabled: !0,
							phase: 'main',
							fn: function (e) {
								var t,
									n,
									i = e.state,
									r = e.name,
									o = e.options,
									a = i.elements.arrow,
									s = i.modifiersData.popperOffsets,
									l = zi(i.placement),
									u = $i(l),
									c = 0 <= [_i, mi].indexOf(l) ? 'height' : 'width';
								a &&
									s &&
									((t = o.padding),
									(n = i),
									(e = rr(
										'number' !=
											typeof (t =
												'function' == typeof t
													? t(
															Object.assign({}, n.rects, {
																placement: n.placement,
															})
													  )
													: t)
											? t
											: or(t, yi)
									)),
									(l = Ui(a)),
									(o = 'y' === u ? hi : _i),
									(n = 'y' === u ? pi : mi),
									(t =
										i.rects.reference[c] +
										i.rects.reference[u] -
										s[u] -
										i.rects.popper[c]),
									(s = s[u] - i.rects.reference[u]),
									(a = (a = Qi(a))
										? 'y' === u
											? a.clientHeight || 0
											: a.clientWidth || 0
										: 0),
									(s = t / 2 - s / 2),
									(o = e[o]),
									(n = a - l[c] - e[n]),
									(n = nr(o, (s = a / 2 - l[c] / 2 + s), n)),
									(i.modifiersData[r] =
										(((r = {})[u] = n), (r.centerOffset = n - s), r)));
							},
							effect: function (e) {
								var t = e.state;
								null !=
									(e =
										void 0 === (e = e.options.element)
											? '[data-popper-arrow]'
											: e) &&
									('string' != typeof e ||
										(e = t.elements.popper.querySelector(e))) &&
									Xi(t.elements.popper, e) &&
									(t.elements.arrow = e);
							},
							requires: ['popperOffsets'],
							requiresIfExists: ['preventOverflow'],
						},
						sr = { top: 'auto', right: 'auto', bottom: 'auto', left: 'auto' };
					function lr(e) {
						var t = e.popper,
							n = e.popperRect,
							i = e.placement,
							r = e.offsets,
							o = e.position,
							a = e.gpuAcceleration,
							s = e.adaptive,
							l = e.roundOffsets,
							u =
								!0 === l
									? ((h = (m = r).x),
									  (p = m.y),
									  (m = window.devicePixelRatio || 1),
									  { x: tr(tr(h * m) / m) || 0, y: tr(tr(p * m) / m) || 0 })
									: 'function' == typeof l
									? l(r)
									: r,
							c = u.x,
							d = void 0 === c ? 0 : c,
							f = u.y,
							e = void 0 === f ? 0 : f,
							h = r.hasOwnProperty('x'),
							p = r.hasOwnProperty('y'),
							m = _i,
							l = hi,
							c = window;
						s &&
							((u = 'clientHeight'),
							(f = 'clientWidth'),
							(r = Qi(t)) === Ri(t) &&
								'static' !== Ji((r = qi(t))).position &&
								((u = 'scrollHeight'), (f = 'scrollWidth')),
							i === hi && ((l = pi), (e -= r[u] - n.height), (e *= a ? 1 : -1)),
							i === _i && ((m = mi), (d -= r[f] - n.width), (d *= a ? 1 : -1)));
						var s = Object.assign({ position: o }, s && sr);
						return a
							? Object.assign(
									{},
									s,
									(((a = {})[l] = p ? '0' : ''),
									(a[m] = h ? '0' : ''),
									(a.transform =
										(c.devicePixelRatio || 1) < 2
											? 'translate(' + d + 'px, ' + e + 'px)'
											: 'translate3d(' + d + 'px, ' + e + 'px, 0)'),
									a)
							  )
							: Object.assign(
									{},
									s,
									(((s = {})[l] = p ? e + 'px' : ''),
									(s[m] = h ? d + 'px' : ''),
									(s.transform = ''),
									s)
							  );
					}
					var ur = {
							name: 'computeStyles',
							enabled: !0,
							phase: 'beforeWrite',
							fn: function (e) {
								var t = e.state,
									n = e.options,
									e = void 0 === (i = n.gpuAcceleration) || i,
									i = void 0 === (i = n.adaptive) || i,
									n = void 0 === (n = n.roundOffsets) || n,
									e = {
										placement: zi(t.placement),
										popper: t.elements.popper,
										popperRect: t.rects.popper,
										gpuAcceleration: e,
									};
								null != t.modifiersData.popperOffsets &&
									(t.styles.popper = Object.assign(
										{},
										t.styles.popper,
										lr(
											Object.assign({}, e, {
												offsets: t.modifiersData.popperOffsets,
												position: t.options.strategy,
												adaptive: i,
												roundOffsets: n,
											})
										)
									)),
									null != t.modifiersData.arrow &&
										(t.styles.arrow = Object.assign(
											{},
											t.styles.arrow,
											lr(
												Object.assign({}, e, {
													offsets: t.modifiersData.arrow,
													position: 'absolute',
													adaptive: !1,
													roundOffsets: n,
												})
											)
										)),
									(t.attributes.popper = Object.assign(
										{},
										t.attributes.popper,
										{ 'data-popper-placement': t.placement }
									));
							},
							data: {},
						},
						cr = { passive: !0 };
					var dr = {
							name: 'eventListeners',
							enabled: !0,
							phase: 'write',
							fn: function () {},
							effect: function (e) {
								var t = e.state,
									n = e.instance,
									i = e.options,
									r = void 0 === (e = i.scroll) || e,
									o = void 0 === (i = i.resize) || i,
									a = Ri(t.elements.popper),
									s = [].concat(
										t.scrollParents.reference,
										t.scrollParents.popper
									);
								return (
									r &&
										s.forEach(function (e) {
											e.addEventListener('scroll', n.update, cr);
										}),
									o && a.addEventListener('resize', n.update, cr),
									function () {
										r &&
											s.forEach(function (e) {
												e.removeEventListener('scroll', n.update, cr);
											}),
											o && a.removeEventListener('resize', n.update, cr);
									}
								);
							},
							data: {},
						},
						fr = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
					function hr(e) {
						return e.replace(/left|right|bottom|top/g, function (e) {
							return fr[e];
						});
					}
					var pr = { start: 'end', end: 'start' };
					function mr(e) {
						return e.replace(/start|end/g, function (e) {
							return pr[e];
						});
					}
					function _r(e) {
						e = Ri(e);
						return { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset };
					}
					function vr(e) {
						return Vi(qi(e)).left + _r(e).scrollLeft;
					}
					function yr(e) {
						var t = Ji(e),
							n = t.overflow,
							e = t.overflowX,
							t = t.overflowY;
						return /auto|scroll|overlay|hidden/.test(n + t + e);
					}
					function gr(e, t) {
						void 0 === t && (t = []);
						var n = (function e(t) {
								return 0 <= ['html', 'body', '#document'].indexOf(Ii(t))
									? t.ownerDocument.body
									: Wi(t) && yr(t)
									? t
									: e(Ki(t));
							})(e),
							e = n === (null == (i = e.ownerDocument) ? void 0 : i.body),
							i = Ri(n),
							n = e ? [i].concat(i.visualViewport || [], yr(n) ? n : []) : n,
							t = t.concat(n);
						return e ? t : t.concat(gr(Ki(n)));
					}
					function br(e) {
						return Object.assign({}, e, {
							left: e.x,
							top: e.y,
							right: e.x + e.width,
							bottom: e.y + e.height,
						});
					}
					function kr(e, t) {
						return t === wi
							? br(
									((o = Ri((r = e))),
									(a = qi(r)),
									(s = o.visualViewport),
									(l = a.clientWidth),
									(u = a.clientHeight),
									(a = o = 0),
									s &&
										((l = s.width),
										(u = s.height),
										/^((?!chrome|android).)*safari/i.test(
											navigator.userAgent
										) || ((o = s.offsetLeft), (a = s.offsetTop))),
									{ width: l, height: u, x: o + vr(r), y: a })
							  )
							: Wi(t)
							? (((i = Vi((n = t))).top = i.top + n.clientTop),
							  (i.left = i.left + n.clientLeft),
							  (i.bottom = i.top + n.clientHeight),
							  (i.right = i.left + n.clientWidth),
							  (i.width = n.clientWidth),
							  (i.height = n.clientHeight),
							  (i.x = i.left),
							  (i.y = i.top),
							  i)
							: br(
									((r = qi(e)),
									(a = qi(r)),
									(t = _r(r)),
									(i = null == (n = r.ownerDocument) ? void 0 : n.body),
									(e = Zi(
										a.scrollWidth,
										a.clientWidth,
										i ? i.scrollWidth : 0,
										i ? i.clientWidth : 0
									)),
									(n = Zi(
										a.scrollHeight,
										a.clientHeight,
										i ? i.scrollHeight : 0,
										i ? i.clientHeight : 0
									)),
									(r = -t.scrollLeft + vr(r)),
									(t = -t.scrollTop),
									'rtl' === Ji(i || a).direction &&
										(r += Zi(a.clientWidth, i ? i.clientWidth : 0) - e),
									{ width: e, height: n, x: r, y: t })
							  );
						var n, i, r, o, a, s, l, u;
					}
					function wr(n, e, t) {
						var i,
							r,
							o,
							e =
								'clippingParents' === e
									? ((r = gr(Ki((i = n)))),
									  Ni(
											(o =
												0 <= ['absolute', 'fixed'].indexOf(Ji(i).position) &&
												Wi(i)
													? Qi(i)
													: i)
									  )
											? r.filter(function (e) {
													return Ni(e) && Xi(e, o) && 'body' !== Ii(e);
											  })
											: [])
									: [].concat(e),
							e = [].concat(e, [t]),
							t = e[0],
							t = e.reduce(function (e, t) {
								t = kr(n, t);
								return (
									(e.top = Zi(t.top, e.top)),
									(e.right = er(t.right, e.right)),
									(e.bottom = er(t.bottom, e.bottom)),
									(e.left = Zi(t.left, e.left)),
									e
								);
							}, kr(n, t));
						return (
							(t.width = t.right - t.left),
							(t.height = t.bottom - t.top),
							(t.x = t.left),
							(t.y = t.top),
							t
						);
					}
					function Mr(e) {
						return e.split('-')[1];
					}
					function Lr(e) {
						var t,
							n = e.reference,
							i = e.element,
							r = e.placement,
							e = r ? zi(r) : null,
							r = r ? Mr(r) : null,
							o = n.x + n.width / 2 - i.width / 2,
							a = n.y + n.height / 2 - i.height / 2;
						switch (e) {
							case hi:
								t = { x: o, y: n.y - i.height };
								break;
							case pi:
								t = { x: o, y: n.y + n.height };
								break;
							case mi:
								t = { x: n.x + n.width, y: a };
								break;
							case _i:
								t = { x: n.x - i.width, y: a };
								break;
							default:
								t = { x: n.x, y: n.y };
						}
						var s = e ? $i(e) : null;
						if (null != s) {
							var l = 'y' === s ? 'height' : 'width';
							switch (r) {
								case gi:
									t[s] = t[s] - (n[l] / 2 - i[l] / 2);
									break;
								case bi:
									t[s] = t[s] + (n[l] / 2 - i[l] / 2);
							}
						}
						return t;
					}
					function xr(e, t) {
						void 0 === t && (t = {});
						var i,
							n = t.placement,
							r = void 0 === n ? e.placement : n,
							o = t.boundary,
							a = void 0 === o ? ki : o,
							s = t.rootBoundary,
							l = void 0 === s ? wi : s,
							u = t.elementContext,
							c = void 0 === u ? Mi : u,
							n = t.altBoundary,
							o = void 0 !== n && n,
							s = t.padding,
							u = void 0 === s ? 0 : s,
							n = rr('number' != typeof u ? u : or(u, yi)),
							t = c === Mi ? Li : Mi,
							s = e.elements.reference,
							u = e.rects.popper,
							t = e.elements[o ? t : c],
							a = wr(
								Ni(t) ? t : t.contextElement || qi(e.elements.popper),
								a,
								l
							),
							l = Vi(s),
							s = Lr({
								reference: l,
								element: u,
								strategy: 'absolute',
								placement: r,
							}),
							s = br(Object.assign({}, u, s)),
							l = c === Mi ? s : l,
							d = {
								top: a.top - l.top + n.top,
								bottom: l.bottom - a.bottom + n.bottom,
								left: a.left - l.left + n.left,
								right: l.right - a.right + n.right,
							},
							e = e.modifiersData.offset;
						return (
							c === Mi &&
								e &&
								((i = e[r]),
								Object.keys(d).forEach(function (e) {
									var t = 0 <= [mi, pi].indexOf(e) ? 1 : -1,
										n = 0 <= [hi, pi].indexOf(e) ? 'y' : 'x';
									d[e] += i[n] * t;
								})),
							d
						);
					}
					var Dr = {
						name: 'flip',
						enabled: !0,
						phase: 'main',
						fn: function (e) {
							var n = e.state,
								t = e.options,
								i = e.name;
							if (!n.modifiersData[i]._skip) {
								for (
									var r = t.mainAxis,
										o = void 0 === r || r,
										e = t.altAxis,
										a = void 0 === e || e,
										r = t.fallbackPlacements,
										s = t.padding,
										l = t.boundary,
										u = t.rootBoundary,
										c = t.altBoundary,
										e = t.flipVariations,
										d = void 0 === e || e,
										f = t.allowedAutoPlacements,
										e = n.options.placement,
										t = zi(e),
										t =
											r ||
											(t === e || !d
												? [hr(e)]
												: (function (e) {
														if (zi(e) === vi) return [];
														var t = hr(e);
														return [mr(e), t, mr(t)];
												  })(e)),
										h = [e].concat(t).reduce(function (e, t) {
											return e.concat(
												zi(t) === vi
													? (function (n, e) {
															void 0 === e && (e = {});
															var t = e.placement,
																i = e.boundary,
																r = e.rootBoundary,
																o = e.padding,
																a = e.flipVariations,
																s =
																	void 0 === (e = e.allowedAutoPlacements)
																		? Di
																		: e,
																l = Mr(t),
																t = l
																	? a
																		? xi
																		: xi.filter(function (e) {
																				return Mr(e) === l;
																		  })
																	: yi;
															0 ===
																(a = t.filter(function (e) {
																	return 0 <= s.indexOf(e);
																})).length && (a = t);
															var u = a.reduce(function (e, t) {
																return (
																	(e[t] = xr(n, {
																		placement: t,
																		boundary: i,
																		rootBoundary: r,
																		padding: o,
																	})[zi(t)]),
																	e
																);
															}, {});
															return Object.keys(u).sort(function (e, t) {
																return u[e] - u[t];
															});
													  })(n, {
															placement: t,
															boundary: l,
															rootBoundary: u,
															padding: s,
															flipVariations: d,
															allowedAutoPlacements: f,
													  })
													: t
											);
										}, []),
										p = n.rects.reference,
										m = n.rects.popper,
										_ = new Map(),
										v = !0,
										y = h[0],
										g = 0;
									g < h.length;
									g++
								) {
									var b = h[g],
										k = zi(b),
										w = Mr(b) === gi,
										M = 0 <= [hi, pi].indexOf(k),
										L = M ? 'width' : 'height',
										x = xr(n, {
											placement: b,
											boundary: l,
											rootBoundary: u,
											altBoundary: c,
											padding: s,
										}),
										M = M ? (w ? mi : _i) : w ? pi : hi;
									p[L] > m[L] && (M = hr(M));
									(w = hr(M)), (L = []);
									if (
										(o && L.push(x[k] <= 0),
										a && L.push(x[M] <= 0, x[w] <= 0),
										L.every(function (e) {
											return e;
										}))
									) {
										(y = b), (v = !1);
										break;
									}
									_.set(b, L);
								}
								if (v)
									for (var D = d ? 3 : 1; 0 < D; D--)
										if (
											'break' ===
											(function (t) {
												var e = h.find(function (e) {
													e = _.get(e);
													if (e)
														return e.slice(0, t).every(function (e) {
															return e;
														});
												});
												if (e) return (y = e), 'break';
											})(D)
										)
											break;
								n.placement !== y &&
									((n.modifiersData[i]._skip = !0),
									(n.placement = y),
									(n.reset = !0));
							}
						},
						requiresIfExists: ['offset'],
						data: { _skip: !1 },
					};
					function Sr(e, t, n) {
						return (
							void 0 === n && (n = { x: 0, y: 0 }),
							{
								top: e.top - t.height - n.y,
								right: e.right - t.width + n.x,
								bottom: e.bottom - t.height + n.y,
								left: e.left - t.width - n.x,
							}
						);
					}
					function Tr(t) {
						return [hi, mi, pi, _i].some(function (e) {
							return 0 <= t[e];
						});
					}
					var Or = {
						name: 'hide',
						enabled: !0,
						phase: 'main',
						requiresIfExists: ['preventOverflow'],
						fn: function (e) {
							var t = e.state,
								n = e.name,
								i = t.rects.reference,
								r = t.rects.popper,
								o = t.modifiersData.preventOverflow,
								a = xr(t, { elementContext: 'reference' }),
								e = xr(t, { altBoundary: !0 }),
								i = Sr(a, i),
								e = Sr(e, r, o),
								r = Tr(i),
								o = Tr(e);
							(t.modifiersData[n] = {
								referenceClippingOffsets: i,
								popperEscapeOffsets: e,
								isReferenceHidden: r,
								hasPopperEscaped: o,
							}),
								(t.attributes.popper = Object.assign({}, t.attributes.popper, {
									'data-popper-reference-hidden': r,
									'data-popper-escaped': o,
								}));
						},
					};
					var Yr = {
						name: 'offset',
						enabled: !0,
						phase: 'main',
						requires: ['popperOffsets'],
						fn: function (e) {
							var a = e.state,
								t = e.options,
								n = e.name,
								s = void 0 === (i = t.offset) ? [0, 0] : i,
								e = Di.reduce(function (e, t) {
									var n, i, r, o;
									return (
										(e[t] =
											((n = t),
											(i = a.rects),
											(r = s),
											(o = zi(n)),
											(t = 0 <= [_i, hi].indexOf(o) ? -1 : 1),
											(r =
												(r = (n =
													'function' == typeof r
														? r(Object.assign({}, i, { placement: n }))
														: r)[0]) || 0),
											(n = ((n = n[1]) || 0) * t),
											0 <= [_i, mi].indexOf(o)
												? { x: n, y: r }
												: { x: r, y: n })),
										e
									);
								}, {}),
								i = (t = e[a.placement]).x,
								t = t.y;
							null != a.modifiersData.popperOffsets &&
								((a.modifiersData.popperOffsets.x += i),
								(a.modifiersData.popperOffsets.y += t)),
								(a.modifiersData[n] = e);
						},
					};
					var Cr = {
						name: 'popperOffsets',
						enabled: !0,
						phase: 'read',
						fn: function (e) {
							var t = e.state,
								e = e.name;
							t.modifiersData[e] = Lr({
								reference: t.rects.reference,
								element: t.rects.popper,
								strategy: 'absolute',
								placement: t.placement,
							});
						},
						data: {},
					};
					var jr = {
						name: 'preventOverflow',
						enabled: !0,
						phase: 'main',
						fn: function (e) {
							var t = e.state,
								n = e.options,
								i = e.name,
								r = void 0 === (w = n.mainAxis) || w,
								o = void 0 !== (M = n.altAxis) && M,
								a = n.boundary,
								s = n.rootBoundary,
								l = n.altBoundary,
								u = n.padding,
								c = n.tether,
								d = void 0 === c || c,
								f = n.tetherOffset,
								h = void 0 === f ? 0 : f,
								p = xr(t, {
									boundary: a,
									rootBoundary: s,
									padding: u,
									altBoundary: l,
								}),
								m = zi(t.placement),
								_ = Mr(t.placement),
								v = !_,
								y = $i(m),
								g = 'x' === y ? 'y' : 'x',
								b = t.modifiersData.popperOffsets,
								k = t.rects.reference,
								e = t.rects.popper,
								w =
									'function' == typeof h
										? h(Object.assign({}, t.rects, { placement: t.placement }))
										: h,
								M = { x: 0, y: 0 };
							b &&
								((r || o) &&
									((c = 'y' === y ? hi : _i),
									(n = 'y' === y ? pi : mi),
									(f = 'y' === y ? 'height' : 'width'),
									(a = b[y]),
									(s = b[y] + p[c]),
									(u = b[y] - p[n]),
									(l = d ? -e[f] / 2 : 0),
									(m = (_ === gi ? k : e)[f]),
									(h = _ === gi ? -e[f] : -k[f]),
									(_ = t.elements.arrow),
									(e = d && _ ? Ui(_) : { width: 0, height: 0 }),
									(c = (_ = t.modifiersData['arrow#persistent']
										? t.modifiersData['arrow#persistent'].padding
										: ir())[c]),
									(n = _[n]),
									(e = nr(0, k[f], e[f])),
									(c = v ? k[f] / 2 - l - e - c - w : m - e - c - w),
									(e = v ? -k[f] / 2 + l + e + n + w : h + e + n + w),
									(w = (n = t.elements.arrow && Qi(t.elements.arrow))
										? 'y' === y
											? n.clientTop || 0
											: n.clientLeft || 0
										: 0),
									(n = t.modifiersData.offset
										? t.modifiersData.offset[t.placement][y]
										: 0),
									(w = b[y] + c - n - w),
									(n = b[y] + e - n),
									r &&
										((u = nr(d ? er(s, w) : s, a, d ? Zi(u, n) : u)),
										(b[y] = u),
										(M[y] = u - a)),
									o &&
										((a = 'x' === y ? hi : _i),
										(o = 'x' === y ? pi : mi),
										(a = (y = b[g]) + p[a]),
										(o = y - p[o]),
										(o = nr(d ? er(a, w) : a, y, d ? Zi(o, n) : o)),
										(b[g] = o),
										(M[g] = o - y))),
								(t.modifiersData[i] = M));
						},
						requiresIfExists: ['offset'],
					};
					function Er(e, t, n) {
						void 0 === n && (n = !1);
						var i = qi(t),
							r = Vi(e),
							o = Wi(t),
							a = { scrollLeft: 0, scrollTop: 0 },
							e = { x: 0, y: 0 };
						return (
							(!o && (o || n)) ||
								(('body' === Ii(t) && !yr(i)) ||
									(a =
										(o = t) !== Ri(o) && Wi(o)
											? {
													scrollLeft: (n = o).scrollLeft,
													scrollTop: n.scrollTop,
											  }
											: _r(o)),
								Wi(t)
									? (((e = Vi(t)).x += t.clientLeft), (e.y += t.clientTop))
									: i && (e.x = vr(i))),
							{
								x: r.left + a.scrollLeft - e.x,
								y: r.top + a.scrollTop - e.y,
								width: r.width,
								height: r.height,
							}
						);
					}
					function Pr(e) {
						var n = new Map(),
							i = new Set(),
							r = [];
						return (
							e.forEach(function (e) {
								n.set(e.name, e);
							}),
							e.forEach(function (e) {
								i.has(e.name) ||
									!(function t(e) {
										i.add(e.name),
											[]
												.concat(e.requires || [], e.requiresIfExists || [])
												.forEach(function (e) {
													i.has(e) || ((e = n.get(e)) && t(e));
												}),
											r.push(e);
									})(e);
							}),
							r
						);
					}
					var Ar = { placement: 'bottom', modifiers: [], strategy: 'absolute' };
					function Hr() {
						for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
							t[n] = arguments[n];
						return !t.some(function (e) {
							return !(e && 'function' == typeof e.getBoundingClientRect);
						});
					}
					function Ir(e) {
						void 0 === e && (e = {});
						var t = e.defaultModifiers,
							d = void 0 === t ? [] : t,
							e = e.defaultOptions,
							f = void 0 === e ? Ar : e;
						return function (i, r, t) {
							void 0 === t && (t = f);
							var n,
								o,
								a = {
									placement: 'bottom',
									orderedModifiers: [],
									options: Object.assign({}, Ar, f),
									modifiersData: {},
									elements: { reference: i, popper: r },
									attributes: {},
									styles: {},
								},
								s = [],
								l = !1,
								u = {
									state: a,
									setOptions: function (e) {
										c(),
											(a.options = Object.assign({}, f, a.options, e)),
											(a.scrollParents = {
												reference: Ni(i)
													? gr(i)
													: i.contextElement
													? gr(i.contextElement)
													: [],
												popper: gr(r),
											});
										var n,
											t,
											e =
												((e = [].concat(d, a.options.modifiers)),
												(t = e.reduce(function (e, t) {
													var n = e[t.name];
													return (
														(e[t.name] = n
															? Object.assign({}, n, t, {
																	options: Object.assign(
																		{},
																		n.options,
																		t.options
																	),
																	data: Object.assign({}, n.data, t.data),
															  })
															: t),
														e
													);
												}, {})),
												(e = Object.keys(t).map(function (e) {
													return t[e];
												})),
												(n = Pr(e)),
												Hi.reduce(function (e, t) {
													return e.concat(
														n.filter(function (e) {
															return e.phase === t;
														})
													);
												}, []));
										return (
											(a.orderedModifiers = e.filter(function (e) {
												return e.enabled;
											})),
											a.orderedModifiers.forEach(function (e) {
												var t = e.name,
													n = e.options,
													n = void 0 === n ? {} : n,
													e = e.effect;
												'function' == typeof e &&
													((n = e({
														state: a,
														name: t,
														instance: u,
														options: n,
													})),
													s.push(n || function () {}));
											}),
											u.update()
										);
									},
									forceUpdate: function () {
										if (!l) {
											var e = a.elements,
												t = e.reference,
												e = e.popper;
											if (Hr(t, e)) {
												(a.rects = {
													reference: Er(
														t,
														Qi(e),
														'fixed' === a.options.strategy
													),
													popper: Ui(e),
												}),
													(a.reset = !1),
													(a.placement = a.options.placement),
													a.orderedModifiers.forEach(function (e) {
														return (a.modifiersData[e.name] = Object.assign(
															{},
															e.data
														));
													});
												for (
													var n, i, r, o = 0;
													o < a.orderedModifiers.length;
													o++
												)
													0,
														!0 !== a.reset
															? ((n = (r = a.orderedModifiers[o]).fn),
															  (i = void 0 === (i = r.options) ? {} : i),
															  (r = r.name),
															  'function' == typeof n &&
																	(a =
																		n({
																			state: a,
																			options: i,
																			name: r,
																			instance: u,
																		}) || a))
															: ((a.reset = !1), (o = -1));
											}
										}
									},
									update:
										((n = function () {
											return new Promise(function (e) {
												u.forceUpdate(), e(a);
											});
										}),
										function () {
											return (o =
												o ||
												new Promise(function (e) {
													Promise.resolve().then(function () {
														(o = void 0), e(n());
													});
												}));
										}),
									destroy: function () {
										c(), (l = !0);
									},
								};
							return (
								Hr(i, r) &&
									u.setOptions(t).then(function (e) {
										!l && t.onFirstUpdate && t.onFirstUpdate(e);
									}),
								u
							);
							function c() {
								s.forEach(function (e) {
									return e();
								}),
									(s = []);
							}
						};
					}
					var Rr = Ir(),
						Nr = Ir({ defaultModifiers: [dr, Cr, ur, Bi, Yr, Dr, jr, ar, Or] }),
						Wr = Ir({ defaultModifiers: [dr, Cr, ur, Bi] });
					function Fr(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return Br(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Br(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Br(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Br(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					var zr = new Set([
							'background',
							'cite',
							'href',
							'itemtype',
							'longdesc',
							'poster',
							'src',
							'xlink:href',
						]),
						Vr = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/i,
						Ur =
							/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,
						t = {
							'*': ['class', 'dir', 'id', 'lang', 'role', /^aria-[\w-]*$/i],
							a: ['target', 'href', 'title', 'rel'],
							area: [],
							b: [],
							br: [],
							col: [],
							code: [],
							div: [],
							em: [],
							hr: [],
							h1: [],
							h2: [],
							h3: [],
							h4: [],
							h5: [],
							h6: [],
							i: [],
							img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
							li: [],
							ol: [],
							p: [],
							pre: [],
							s: [],
							small: [],
							span: [],
							sub: [],
							sup: [],
							strong: [],
							u: [],
							ul: [],
						};
					function Xr(e, r, t) {
						if (!e.length) return e;
						if (t && 'function' == typeof t) return t(e);
						for (
							var t = new window.DOMParser().parseFromString(e, 'text/html'),
								o = Object.keys(r),
								a = (e = []).concat.apply(e, Fr(t.body.querySelectorAll('*'))),
								n = function (e) {
									var t = a[e],
										n = t.nodeName.toLowerCase();
									if (!o.includes(n))
										return t.parentNode.removeChild(t), 'continue';
									var e = (e = []).concat.apply(e, Fr(t.attributes)),
										i = [].concat(r['*'] || [], r[n] || []);
									e.forEach(function (e) {
										!(function (e, t) {
											var n = e.nodeName.toLowerCase();
											if (t.includes(n))
												return (
													!zr.has(n) ||
													Boolean(Vr.test(e.nodeValue) || Ur.test(e.nodeValue))
												);
											for (
												var i = t.filter(function (e) {
														return e instanceof RegExp;
													}),
													r = 0,
													o = i.length;
												r < o;
												r++
											)
												if (i[r].test(n)) return !0;
											return !1;
										})(e, i) && t.removeAttribute(e.nodeName);
									});
								},
								i = 0,
								s = a.length;
							i < s;
							i++
						)
							n(i);
						return t.body.innerHTML;
					}
					function Jr(e) {
						return (Jr =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function qr(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Kr(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? qr(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: qr(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Gr(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return Qr(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Qr(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Qr(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Qr(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function $r(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Zr(e, t, n) {
						return (Zr =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = no(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function eo(e, t) {
						return (eo =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function to(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = no(n);
							return (
								(e = i
									? ((e = no(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Jr(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function no(e) {
						return (no = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var io = 'bs.tooltip',
						Xe = '.'.concat(io),
						ro = 'bs-tooltip',
						oo = new RegExp('(^|\\s)'.concat(ro, '\\S+'), 'g'),
						ao = new Set(['sanitize', 'allowList', 'sanitizeFn']),
						so = {
							animation: 'boolean',
							template: 'string',
							title: '(string|element|function)',
							trigger: 'string',
							delay: '(number|object)',
							html: 'boolean',
							selector: '(string|boolean)',
							placement: '(string|function)',
							offset: '(array|string|function)',
							container: '(string|element|boolean)',
							fallbackPlacements: 'array',
							boundary: '(string|element)',
							customClass: '(string|function)',
							sanitize: 'boolean',
							sanitizeFn: '(null|function)',
							allowList: 'object',
							popperConfig: '(null|object|function)',
						},
						lo = {
							AUTO: 'auto',
							TOP: 'top',
							RIGHT: ue() ? 'left' : 'right',
							BOTTOM: 'bottom',
							LEFT: ue() ? 'right' : 'left',
						},
						uo = {
							animation: !0,
							template:
								'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
							trigger: 'hover focus',
							title: '',
							delay: 0,
							html: !1,
							selector: !1,
							placement: 'top',
							offset: [0, 0],
							container: !1,
							fallbackPlacements: ['top', 'right', 'bottom', 'left'],
							boundary: 'clippingParents',
							customClass: '',
							sanitize: !0,
							sanitizeFn: null,
							allowList: t,
							popperConfig: null,
						},
						co = {
							HIDE: 'hide'.concat(Xe),
							HIDDEN: 'hidden'.concat(Xe),
							SHOW: 'show'.concat(Xe),
							SHOWN: 'shown'.concat(Xe),
							INSERTED: 'inserted'.concat(Xe),
							CLICK: 'click'.concat(Xe),
							FOCUSIN: 'focusin'.concat(Xe),
							FOCUSOUT: 'focusout'.concat(Xe),
							MOUSEENTER: 'mouseenter'.concat(Xe),
							MOUSELEAVE: 'mouseleave'.concat(Xe),
						},
						fo = 'fade',
						ho = 'show',
						po = 'show',
						mo = 'hover',
						rt = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && eo(e, t);
							})(r, Ie);
							var e,
								t,
								n,
								i = to(r);
							function r(e, t) {
								if (
									(!(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									void 0 === a)
								)
									throw new TypeError(
										"Bootstrap's tooltips require Popper (https://popper.js.org)"
									);
								return (
									((e = i.call(this, e))._isEnabled = !0),
									(e._timeout = 0),
									(e._hoverState = ''),
									(e._activeTrigger = {}),
									(e._popper = null),
									(e._config = e._getConfig(t)),
									(e.tip = null),
									e._setListeners(),
									e
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = _e.get(this, io),
													t = 'object' === Jr(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n]();
												}
											});
										},
									},
									{
										key: 'Default',
										get: function () {
											return uo;
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'tooltip';
										},
									},
									{
										key: 'Event',
										get: function () {
											return co;
										},
									},
									{
										key: 'DefaultType',
										get: function () {
											return so;
										},
									},
								]),
								(t = [
									{
										key: 'enable',
										value: function () {
											this._isEnabled = !0;
										},
									},
									{
										key: 'disable',
										value: function () {
											this._isEnabled = !1;
										},
									},
									{
										key: 'toggleEnabled',
										value: function () {
											this._isEnabled = !this._isEnabled;
										},
									},
									{
										key: 'toggle',
										value: function (e) {
											this._isEnabled &&
												(e
													? (((e =
															this._initializeOnDelegatedTarget(
																e
															))._activeTrigger.click =
															!e._activeTrigger.click),
													  e._isWithActiveTrigger()
															? e._enter(null, e)
															: e._leave(null, e))
													: this.getTipElement().classList.contains(ho)
													? this._leave(null, this)
													: this._enter(null, this));
										},
									},
									{
										key: 'dispose',
										value: function () {
											clearTimeout(this._timeout),
												Ae.off(
													this._element.closest('.'.concat('modal')),
													'hide.bs.modal',
													this._hideModalHandler
												),
												this.tip &&
													this.tip.parentNode &&
													this.tip.parentNode.removeChild(this.tip),
												this._popper && this._popper.destroy(),
												Zr(no(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: 'show',
										value: function () {
											var e,
												t,
												n,
												i,
												r = this;
											if ('none' === this._element.style.display)
												throw new Error('Please use show on visible elements');
											this.isWithContent() &&
												this._isEnabled &&
												((t = Ae.trigger(
													this._element,
													this.constructor.Event.SHOW
												)),
												(e = (
													null === (n = oe(this._element))
														? this._element.ownerDocument.documentElement
														: n
												).contains(this._element)),
												!t.defaultPrevented &&
													e &&
													((n = this.getTipElement()),
													(t = K(this.constructor.NAME)),
													n.setAttribute('id', t),
													this._element.setAttribute('aria-describedby', t),
													this.setContent(),
													this._config.animation && n.classList.add(fo),
													(e =
														'function' == typeof this._config.placement
															? this._config.placement.call(
																	this,
																	n,
																	this._element
															  )
															: this._config.placement),
													(t = this._getAttachment(e)),
													this._addAttachmentClass(t),
													(e = this._config.container),
													_e.set(n, this.constructor.DATA_KEY, this),
													this._element.ownerDocument.documentElement.contains(
														this.tip
													) ||
														(e.appendChild(n),
														Ae.trigger(
															this._element,
															this.constructor.Event.INSERTED
														)),
													this._popper
														? this._popper.update()
														: (this._popper = Nr(
																this._element,
																n,
																this._getPopperConfig(t)
														  )),
													n.classList.add(ho),
													(t =
														'function' == typeof this._config.customClass
															? this._config.customClass()
															: this._config.customClass) &&
														(n = n.classList).add.apply(n, Gr(t.split(' '))),
													'ontouchstart' in document.documentElement &&
														(i = []).concat
															.apply(i, Gr(document.body.children))
															.forEach(function (e) {
																Ae.on(e, 'mouseover', ae);
															}),
													(i = this.tip.classList.contains(fo)),
													this._queueCallback(
														function () {
															var e = r._hoverState;
															(r._hoverState = null),
																Ae.trigger(
																	r._element,
																	r.constructor.Event.SHOWN
																),
																'out' === e && r._leave(null, r);
														},
														this.tip,
														i
													)));
										},
									},
									{
										key: 'hide',
										value: function () {
											var e,
												t,
												n = this;
											this._popper &&
												((e = this.getTipElement()),
												Ae.trigger(this._element, this.constructor.Event.HIDE)
													.defaultPrevented ||
													(e.classList.remove(ho),
													'ontouchstart' in document.documentElement &&
														(t = []).concat
															.apply(t, Gr(document.body.children))
															.forEach(function (e) {
																return Ae.off(e, 'mouseover', ae);
															}),
													(this._activeTrigger.click = !1),
													(this._activeTrigger.focus = !1),
													(this._activeTrigger[mo] = !1),
													(t = this.tip.classList.contains(fo)),
													this._queueCallback(
														function () {
															n._isWithActiveTrigger() ||
																(n._hoverState !== po &&
																	e.parentNode &&
																	e.parentNode.removeChild(e),
																n._cleanTipClass(),
																n._element.removeAttribute('aria-describedby'),
																Ae.trigger(
																	n._element,
																	n.constructor.Event.HIDDEN
																),
																n._popper &&
																	(n._popper.destroy(), (n._popper = null)));
														},
														this.tip,
														t
													),
													(this._hoverState = '')));
										},
									},
									{
										key: 'update',
										value: function () {
											null !== this._popper && this._popper.update();
										},
									},
									{
										key: 'isWithContent',
										value: function () {
											return Boolean(this.getTitle());
										},
									},
									{
										key: 'getTipElement',
										value: function () {
											if (this.tip) return this.tip;
											var e = document.createElement('div');
											return (
												(e.innerHTML = this._config.template),
												(this.tip = e.children[0]),
												this.tip
											);
										},
									},
									{
										key: 'setContent',
										value: function () {
											var e = this.getTipElement();
											this.setElementContent(
												J.findOne('.tooltip-inner', e),
												this.getTitle()
											),
												e.classList.remove(fo, ho);
										},
									},
									{
										key: 'setElementContent',
										value: function (e, t) {
											if (null !== e)
												return ee(t)
													? ((t = he(t)),
													  void (this._config.html
															? t.parentNode !== e &&
															  ((e.innerHTML = ''), e.appendChild(t))
															: (e.textContent = t.textContent)))
													: void (this._config.html
															? (this._config.sanitize &&
																	(t = Xr(
																		t,
																		this._config.allowList,
																		this._config.sanitizeFn
																	)),
															  (e.innerHTML = t))
															: (e.textContent = t));
										},
									},
									{
										key: 'getTitle',
										value: function () {
											return (
												this._element.getAttribute('data-mdb-original-title') ||
												('function' == typeof this._config.title
													? this._config.title.call(this._element)
													: this._config.title)
											);
										},
									},
									{
										key: 'updateAttachment',
										value: function (e) {
											return 'right' === e ? 'end' : 'left' === e ? 'start' : e;
										},
									},
									{
										key: '_initializeOnDelegatedTarget',
										value: function (e, t) {
											var n = this.constructor.DATA_KEY;
											return (
												(t = t || _e.get(e.delegateTarget, n)) ||
													((t = new this.constructor(
														e.delegateTarget,
														this._getDelegateConfig()
													)),
													_e.set(e.delegateTarget, n, t)),
												t
											);
										},
									},
									{
										key: '_getOffset',
										value: function () {
											var t = this,
												n = this._config.offset;
											return 'string' == typeof n
												? n.split(',').map(function (e) {
														return Number.parseInt(e, 10);
												  })
												: 'function' == typeof n
												? function (e) {
														return n(e, t._element);
												  }
												: n;
										},
									},
									{
										key: '_getPopperConfig',
										value: function (e) {
											var t = this,
												e = {
													placement: e,
													modifiers: [
														{
															name: 'flip',
															options: {
																fallbackPlacements:
																	this._config.fallbackPlacements,
															},
														},
														{
															name: 'offset',
															options: { offset: this._getOffset() },
														},
														{
															name: 'preventOverflow',
															options: { boundary: this._config.boundary },
														},
														{
															name: 'arrow',
															options: {
																element: '.'.concat(
																	this.constructor.NAME,
																	'-arrow'
																),
															},
														},
														{
															name: 'onChange',
															enabled: !0,
															phase: 'afterWrite',
															fn: function (e) {
																return t._handlePopperPlacementChange(e);
															},
														},
													],
													onFirstUpdate: function (e) {
														e.options.placement !== e.placement &&
															t._handlePopperPlacementChange(e);
													},
												};
											return Kr(
												Kr({}, e),
												'function' == typeof this._config.popperConfig
													? this._config.popperConfig(e)
													: this._config.popperConfig
											);
										},
									},
									{
										key: '_addAttachmentClass',
										value: function (e) {
											this.getTipElement().classList.add(
												''.concat(ro, '-').concat(this.updateAttachment(e))
											);
										},
									},
									{
										key: '_getAttachment',
										value: function (e) {
											return lo[e.toUpperCase()];
										},
									},
									{
										key: '_setListeners',
										value: function () {
											var n = this;
											this._config.trigger.split(' ').forEach(function (e) {
												var t;
												'click' === e
													? Ae.on(
															n._element,
															n.constructor.Event.CLICK,
															n._config.selector,
															function (e) {
																return n.toggle(e);
															}
													  )
													: 'manual' !== e &&
													  ((t =
															e === mo
																? n.constructor.Event.MOUSEENTER
																: n.constructor.Event.FOCUSIN),
													  (e =
															e === mo
																? n.constructor.Event.MOUSELEAVE
																: n.constructor.Event.FOCUSOUT),
													  Ae.on(
															n._element,
															t,
															n._config.selector,
															function (e) {
																return n._enter(e);
															}
													  ),
													  Ae.on(
															n._element,
															e,
															n._config.selector,
															function (e) {
																return n._leave(e);
															}
													  ));
											}),
												(this._hideModalHandler = function () {
													n._element && n.hide();
												}),
												Ae.on(
													this._element.closest('.'.concat('modal')),
													'hide.bs.modal',
													this._hideModalHandler
												),
												this._config.selector
													? (this._config = Kr(
															Kr({}, this._config),
															{},
															{ trigger: 'manual', selector: '' }
													  ))
													: this._fixTitle();
										},
									},
									{
										key: '_fixTitle',
										value: function () {
											var e = this._element.getAttribute('title'),
												t = Jr(
													this._element.getAttribute('data-mdb-original-title')
												);
											(!e && 'string' === t) ||
												(this._element.setAttribute(
													'data-mdb-original-title',
													e || ''
												),
												!e ||
													this._element.getAttribute('aria-label') ||
													this._element.textContent ||
													this._element.setAttribute('aria-label', e),
												this._element.setAttribute('title', ''));
										},
									},
									{
										key: '_enter',
										value: function (e, t) {
											(t = this._initializeOnDelegatedTarget(e, t)),
												e &&
													(t._activeTrigger[
														'focusin' === e.type ? 'focus' : mo
													] = !0),
												t.getTipElement().classList.contains(ho) ||
												t._hoverState === po
													? (t._hoverState = po)
													: (clearTimeout(t._timeout),
													  (t._hoverState = po),
													  t._config.delay && t._config.delay.show
															? (t._timeout = setTimeout(function () {
																	t._hoverState === po && t.show();
															  }, t._config.delay.show))
															: t.show());
										},
									},
									{
										key: '_leave',
										value: function (e, t) {
											(t = this._initializeOnDelegatedTarget(e, t)),
												e &&
													(t._activeTrigger[
														'focusout' === e.type ? 'focus' : mo
													] = t._element.contains(e.relatedTarget)),
												t._isWithActiveTrigger() ||
													(clearTimeout(t._timeout),
													(t._hoverState = 'out'),
													t._config.delay && t._config.delay.hide
														? (t._timeout = setTimeout(function () {
																'out' === t._hoverState && t.hide();
														  }, t._config.delay.hide))
														: t.hide());
										},
									},
									{
										key: '_isWithActiveTrigger',
										value: function () {
											for (var e in this._activeTrigger)
												if (this._activeTrigger[e]) return !0;
											return !1;
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = yt.getDataAttributes(this._element);
											return (
												Object.keys(t).forEach(function (e) {
													ao.has(e) && delete t[e];
												}),
												((e = Kr(
													Kr(Kr({}, this.constructor.Default), t),
													'object' === Jr(e) && e ? e : {}
												)).container =
													!1 === e.container ? document.body : he(e.container)),
												'number' == typeof e.delay &&
													(e.delay = { show: e.delay, hide: e.delay }),
												'number' == typeof e.title &&
													(e.title = e.title.toString()),
												'number' == typeof e.content &&
													(e.content = e.content.toString()),
												ne('tooltip', e, this.constructor.DefaultType),
												e.sanitize &&
													(e.template = Xr(
														e.template,
														e.allowList,
														e.sanitizeFn
													)),
												e
											);
										},
									},
									{
										key: '_getDelegateConfig',
										value: function () {
											var e = {};
											if (this._config)
												for (var t in this._config)
													this.constructor.Default[t] !== this._config[t] &&
														(e[t] = this._config[t]);
											return e;
										},
									},
									{
										key: '_cleanTipClass',
										value: function () {
											var t = this.getTipElement(),
												e = t.getAttribute('class').match(oo);
											null !== e &&
												0 < e.length &&
												e
													.map(function (e) {
														return e.trim();
													})
													.forEach(function (e) {
														return t.classList.remove(e);
													});
										},
									},
									{
										key: '_handlePopperPlacementChange',
										value: function (e) {
											e = e.state;
											e &&
												((this.tip = e.elements.popper),
												this._cleanTipClass(),
												this._addAttachmentClass(
													this._getAttachment(e.placement)
												));
										},
									},
								]) && $r(e.prototype, t),
								n && $r(e, n),
								r
							);
						})();
					pe(rt);
					var _o = rt;
					function vo(e) {
						return (vo =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function yo(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function go(e, t) {
						return (go =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function bo(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = ko(n);
							return (
								(e = i
									? ((e = ko(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== vo(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function ko(e) {
						return (ko = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					function wo(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Mo(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? wo(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: wo(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					var Lo = 'bs.popover',
						Ve = '.'.concat(Lo),
						xo = 'bs-popover',
						Do = new RegExp('(^|\\s)'.concat(xo, '\\S+'), 'g'),
						So = Mo(
							Mo({}, _o.Default),
							{},
							{
								placement: 'right',
								offset: [0, 8],
								trigger: 'click',
								content: '',
								template:
									'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
							}
						),
						To = Mo(
							Mo({}, _o.DefaultType),
							{},
							{ content: '(string|element|function)' }
						),
						Oo = {
							HIDE: 'hide'.concat(Ve),
							HIDDEN: 'hidden'.concat(Ve),
							SHOW: 'show'.concat(Ve),
							SHOWN: 'shown'.concat(Ve),
							INSERTED: 'inserted'.concat(Ve),
							CLICK: 'click'.concat(Ve),
							FOCUSIN: 'focusin'.concat(Ve),
							FOCUSOUT: 'focusout'.concat(Ve),
							MOUSEENTER: 'mouseenter'.concat(Ve),
							MOUSELEAVE: 'mouseleave'.concat(Ve),
						},
						t = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && go(e, t);
							})(r, _o);
							var e,
								t,
								n,
								i = bo(r);
							function r() {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									i.apply(this, arguments)
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = _e.get(this, Lo),
													t = 'object' === vo(n) ? n : null;
												if (
													(e || !/dispose|hide/.test(n)) &&
													(e || ((e = new r(this, t)), _e.set(this, Lo, e)),
													'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n]();
												}
											});
										},
									},
									{
										key: 'Default',
										get: function () {
											return So;
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'popover';
										},
									},
									{
										key: 'Event',
										get: function () {
											return Oo;
										},
									},
									{
										key: 'DefaultType',
										get: function () {
											return To;
										},
									},
								]),
								(t = [
									{
										key: 'isWithContent',
										value: function () {
											return this.getTitle() || this._getContent();
										},
									},
									{
										key: 'setContent',
										value: function () {
											var e = this.getTipElement();
											this.setElementContent(
												J.findOne('.popover-header', e),
												this.getTitle()
											);
											var t = this._getContent();
											'function' == typeof t && (t = t.call(this._element)),
												this.setElementContent(
													J.findOne('.popover-body', e),
													t
												),
												e.classList.remove('fade', 'show');
										},
									},
									{
										key: '_addAttachmentClass',
										value: function (e) {
											this.getTipElement().classList.add(
												''.concat(xo, '-').concat(this.updateAttachment(e))
											);
										},
									},
									{
										key: '_getContent',
										value: function () {
											return (
												this._element.getAttribute('data-mdb-content') ||
												this._config.content
											);
										},
									},
									{
										key: '_cleanTipClass',
										value: function () {
											var t = this.getTipElement(),
												e = t.getAttribute('class').match(Do);
											null !== e &&
												0 < e.length &&
												e
													.map(function (e) {
														return e.trim();
													})
													.forEach(function (e) {
														return t.classList.remove(e);
													});
										},
									},
								]) && yo(e.prototype, t),
								n && yo(e, n),
								r
							);
						})();
					pe(t);
					var Yo = t;
					function Co(e) {
						return (Co =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function jo(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Eo(e, t, n) {
						return (Eo =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = Ho(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function Po(e, t) {
						return (Po =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Ao(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Ho(n);
							return (
								(e = i
									? ((e = Ho(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Co(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Ho(e) {
						return (Ho = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Io = 'popover',
						Xe = 'mdb.'.concat(Io),
						rt = '.'.concat(Xe),
						Ro = 'show.bs.popover',
						No = 'shown.bs.popover',
						Wo = 'hide.bs.popover',
						Fo = 'hidden.bs.popover',
						Bo = 'inserted.bs.popover',
						zo = 'show'.concat(rt),
						Vo = 'shown'.concat(rt),
						Uo = 'hide'.concat(rt),
						Xo = 'hidden'.concat(rt),
						Jo = 'inserted'.concat(rt),
						qo = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Po(e, t);
							})(r, Yo);
							var e,
								t,
								n,
								i = Ao(r);
							function r(e, t) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									(t = i.call(this, e, t))._init(),
									t
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return Io;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this.element, Ro),
												H.off(this.element, No),
												H.off(this.element, Wo),
												H.off(this.element, Fo),
												H.off(this.element, Bo),
												Eo(Ho(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_init',
										value: function () {
											this._bindShowEvent(),
												this._bindShownEvent(),
												this._bindHideEvent(),
												this._bindHiddenEvent(),
												this._bindInsertedEvent();
										},
									},
									{
										key: '_bindShowEvent',
										value: function () {
											var e = this;
											H.on(this.element, Ro, function () {
												H.trigger(e.element, zo);
											});
										},
									},
									{
										key: '_bindShownEvent',
										value: function () {
											var e = this;
											H.on(this.element, No, function () {
												H.trigger(e.element, Vo);
											});
										},
									},
									{
										key: '_bindHideEvent',
										value: function () {
											var e = this;
											H.on(this.element, Wo, function () {
												H.trigger(e.element, Uo);
											});
										},
									},
									{
										key: '_bindHiddenEvent',
										value: function () {
											var e = this;
											H.on(this.element, Fo, function () {
												H.trigger(e.element, Xo);
											});
										},
									},
									{
										key: '_bindInsertedEvent',
										value: function () {
											var e = this;
											H.on(this.element, Bo, function () {
												H.trigger(e.element, Jo);
											});
										},
									},
								]) && jo(e.prototype, t),
								n && jo(e, n),
								r
							);
						})();
					V.find('[data-mdb-toggle="popover"]').forEach(function (e) {
						qo.getInstance(e) || new qo(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Io]),
								(t.fn[Io] = qo.jQueryInterface),
								(t.fn[Io].Constructor = qo),
								(t.fn[Io].noConflict = function () {
									return (t.fn[Io] = e), qo.jQueryInterface;
								}));
						});
					var Ko = qo;
					n(41);
					function Go(e) {
						return (Go =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Qo(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function $o(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Qo(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Qo(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Zo(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function ea(e, t, n) {
						return (ea =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = ia(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function ta(e, t) {
						return (ta =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function na(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = ia(n);
							return (
								(e = i
									? ((e = ia(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Go(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function ia(e) {
						return (ia = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var ra = 'scrollspy',
						oa = '.'.concat('bs.scrollspy'),
						aa = { offset: 10, method: 'auto', target: '' },
						sa = {
							offset: 'number',
							method: 'string',
							target: '(string|element)',
						},
						la = 'activate'.concat(oa),
						ua = 'scroll'.concat(oa),
						Ve = 'load'.concat(oa).concat('.data-api'),
						ca = 'dropdown-item',
						da = 'active',
						fa = '.nav-link',
						ha = '.list-group-item',
						pa = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && ta(e, t);
							})(r, Ie);
							var e,
								t,
								n,
								i = na(r);
							function r(e, t) {
								var n;
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((n = i.call(this, e))._scrollElement =
										'BODY' === n._element.tagName ? window : n._element),
									(n._config = n._getConfig(t)),
									(n._selector = ''
										.concat(n._config.target, ' ')
										.concat(fa, ', ')
										.concat(n._config.target, ' ')
										.concat(ha, ', ')
										.concat(n._config.target, ' .')
										.concat(ca)),
									(n._offsets = []),
									(n._targets = []),
									(n._activeTarget = null),
									(n._scrollHeight = 0),
									Ae.on(n._scrollElement, ua, function () {
										return n._process();
									}),
									n.refresh(),
									n._process(),
									n
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (t) {
											return this.each(function () {
												var e =
													r.getInstance(this) ||
													new r(this, 'object' === Go(t) ? t : {});
												if ('string' == typeof t) {
													if (void 0 === e[t])
														throw new TypeError(
															'No method named "'.concat(t, '"')
														);
													e[t]();
												}
											});
										},
									},
									{
										key: 'Default',
										get: function () {
											return aa;
										},
									},
									{
										key: 'NAME',
										get: function () {
											return ra;
										},
									},
								]),
								(t = [
									{
										key: 'refresh',
										value: function () {
											var t = this,
												e =
													this._scrollElement === this._scrollElement.window
														? 'offset'
														: 'position',
												i =
													'auto' === this._config.method
														? e
														: this._config.method,
												r = 'position' === i ? this._getScrollTop() : 0;
											(this._offsets = []),
												(this._targets = []),
												(this._scrollHeight = this._getScrollHeight()),
												J.find(this._selector)
													.map(function (e) {
														var t = fe(e),
															n = t ? J.findOne(t) : null;
														if (n) {
															e = n.getBoundingClientRect();
															if (e.width || e.height)
																return [yt[i](n).top + r, t];
														}
														return null;
													})
													.filter(function (e) {
														return e;
													})
													.sort(function (e, t) {
														return e[0] - t[0];
													})
													.forEach(function (e) {
														t._offsets.push(e[0]), t._targets.push(e[1]);
													});
										},
									},
									{
										key: 'dispose',
										value: function () {
											Ae.off(this._scrollElement, oa),
												ea(ia(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t;
											return (
												'string' !=
													typeof (e = $o(
														$o($o({}, aa), yt.getDataAttributes(this._element)),
														'object' === Go(e) && e ? e : {}
													)).target &&
													ee(e.target) &&
													((t = e.target.id) ||
														((t = K(ra)), (e.target.id = t)),
													(e.target = '#'.concat(t))),
												ne(ra, e, sa),
												e
											);
										},
									},
									{
										key: '_getScrollTop',
										value: function () {
											return this._scrollElement === window
												? this._scrollElement.pageYOffset
												: this._scrollElement.scrollTop;
										},
									},
									{
										key: '_getScrollHeight',
										value: function () {
											return (
												this._scrollElement.scrollHeight ||
												Math.max(
													document.body.scrollHeight,
													document.documentElement.scrollHeight
												)
											);
										},
									},
									{
										key: '_getOffsetHeight',
										value: function () {
											return this._scrollElement === window
												? window.innerHeight
												: this._scrollElement.getBoundingClientRect().height;
										},
									},
									{
										key: '_process',
										value: function () {
											var e = this._getScrollTop() + this._config.offset,
												t = this._getScrollHeight(),
												n = this._config.offset + t - this._getOffsetHeight();
											if (
												(this._scrollHeight !== t && this.refresh(), n <= e)
											) {
												n = this._targets[this._targets.length - 1];
												this._activeTarget !== n && this._activate(n);
											} else {
												if (
													this._activeTarget &&
													e < this._offsets[0] &&
													0 < this._offsets[0]
												)
													return (
														(this._activeTarget = null), void this._clear()
													);
												for (var i = this._offsets.length; i--; )
													this._activeTarget !== this._targets[i] &&
														e >= this._offsets[i] &&
														(void 0 === this._offsets[i + 1] ||
															e < this._offsets[i + 1]) &&
														this._activate(this._targets[i]);
											}
										},
									},
									{
										key: '_activate',
										value: function (t) {
											(this._activeTarget = t), this._clear();
											var e = this._selector.split(',').map(function (e) {
													return ''
														.concat(e, '[data-mdb-target="')
														.concat(t, '"],')
														.concat(e, '[href="')
														.concat(t, '"]');
												}),
												e = J.findOne(e.join(','));
											e.classList.contains(ca)
												? (J.findOne(
														'.dropdown-toggle',
														e.closest('.dropdown')
												  ).classList.add(da),
												  e.classList.add(da))
												: (e.classList.add(da),
												  J.parents(e, '.nav, .list-group').forEach(function (
														e
												  ) {
														J.prev(e, ''.concat(fa, ', ').concat(ha)).forEach(
															function (e) {
																return e.classList.add(da);
															}
														),
															J.prev(e, '.nav-item').forEach(function (e) {
																J.children(e, fa).forEach(function (e) {
																	return e.classList.add(da);
																});
															});
												  })),
												Ae.trigger(this._scrollElement, la, {
													relatedTarget: t,
												});
										},
									},
									{
										key: '_clear',
										value: function () {
											J.find(this._selector)
												.filter(function (e) {
													return e.classList.contains(da);
												})
												.forEach(function (e) {
													return e.classList.remove(da);
												});
										},
									},
								]) && Zo(e.prototype, t),
								n && Zo(e, n),
								r
							);
						})();
					Ae.on(window, Ve, function () {
						J.find('[data-mdb-spy="scroll"]').forEach(function (e) {
							return new pa(e);
						});
					}),
						pe(pa);
					var ma = pa;
					function _a(e) {
						return (_a =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function va(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function ya(e, t, n) {
						return (ya =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = ka(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function ga(e, t) {
						return (ga =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function ba(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = ka(n);
							return (
								(e = i
									? ((e = ka(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== _a(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function ka(e) {
						return (ka = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var wa = 'scrollspy',
						t = 'mdb.'.concat(wa),
						Xe = '.'.concat(t),
						Ma = 'activate.bs.scrollspy',
						La = 'activate'.concat(Xe),
						rt = 'load'.concat(Xe).concat('.data-api'),
						xa = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && ga(e, t);
							})(r, ma);
							var e,
								t,
								n,
								i = ba(r);
							function r(e, t) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((t = i.call(this, e, t))._scrollElement =
										'BODY' === e.tagName ? window : e),
									t._init(),
									t
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return wa;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._scrollElement, Ma),
												(this._scrollElement = null),
												ya(ka(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_init',
										value: function () {
											this._bindActivateEvent();
										},
									},
									{
										key: '_bindActivateEvent',
										value: function () {
											var t = this;
											H.on(this._scrollElement, Ma, function (e) {
												H.trigger(t._scrollElement, La, {
													relatedTarget: e.relatedTarget,
												});
											});
										},
									},
								]) && va(e.prototype, t),
								n && va(e, n),
								r
							);
						})();
					H.on(window, rt, function () {
						V.find('[data-mdb-spy="scroll"]').forEach(function (e) {
							xa.getInstance(e) || new xa(e, F.getDataAttributes(e));
						});
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[wa]),
								(t.fn[wa] = xa.jQueryInterface),
								(t.fn[wa].Constructor = xa),
								(t.fn[wa].noConflict = function () {
									return (t.fn[wa] = e), xa.jQueryInterface;
								}));
						});
					var Da = xa;
					function Sa(e) {
						return (Sa =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Ta(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Oa(e, t) {
						return (Oa =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Ya(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Ca(n);
							return (
								(e = i
									? ((e = Ca(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Sa(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Ca(e) {
						return (Ca = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var ja = 'bs.tab',
						Ve = '.'.concat(ja),
						Ea = 'hide'.concat(Ve),
						Pa = 'hidden'.concat(Ve),
						Aa = 'show'.concat(Ve),
						Ha = 'shown'.concat(Ve),
						t = 'click'.concat(Ve).concat('.data-api'),
						Ia = 'active',
						Ra = ':scope > li > .active',
						Na = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Oa(e, t);
							})(r, Ie);
							var e,
								t,
								n,
								i = Ya(r);
							function r() {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									i.apply(this, arguments)
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (t) {
											return this.each(function () {
												var e = _e.get(this, ja) || new r(this);
												if ('string' == typeof t) {
													if (void 0 === e[t])
														throw new TypeError(
															'No method named "'.concat(t, '"')
														);
													e[t]();
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'tab';
										},
									},
								]),
								(t = [
									{
										key: 'show',
										value: function () {
											var e,
												t,
												n,
												i,
												r = this;
											(this._element.parentNode &&
												this._element.parentNode.nodeType ===
													Node.ELEMENT_NODE &&
												this._element.classList.contains(Ia)) ||
												((e = Q(this._element)),
												(i = this._element.closest('.nav, .list-group')) &&
													((n =
														'UL' === i.nodeName || 'OL' === i.nodeName
															? Ra
															: '.active'),
													(t = (t = J.find(n, i))[t.length - 1])),
												(n = t
													? Ae.trigger(t, Ea, { relatedTarget: this._element })
													: null),
												Ae.trigger(this._element, Aa, { relatedTarget: t })
													.defaultPrevented ||
													(null !== n && n.defaultPrevented) ||
													(this._activate(this._element, i),
													(i = function () {
														Ae.trigger(t, Pa, { relatedTarget: r._element }),
															Ae.trigger(r._element, Ha, { relatedTarget: t });
													}),
													e ? this._activate(e, e.parentNode, i) : i()));
										},
									},
									{
										key: '_activate',
										value: function (e, t, n) {
											var i = this,
												r = (
													!t || ('UL' !== t.nodeName && 'OL' !== t.nodeName)
														? J.children(t, '.active')
														: J.find(Ra, t)
												)[0],
												o = n && r && r.classList.contains('fade'),
												t = function () {
													return i._transitionComplete(e, r, n);
												};
											r && o
												? (r.classList.remove('show'),
												  this._queueCallback(t, e, !0))
												: t();
										},
									},
									{
										key: '_transitionComplete',
										value: function (e, t, n) {
											var i;
											t &&
												(t.classList.remove(Ia),
												(i = J.findOne(
													':scope > .dropdown-menu .active',
													t.parentNode
												)) && i.classList.remove(Ia),
												'tab' === t.getAttribute('role') &&
													t.setAttribute('aria-selected', !1)),
												e.classList.add(Ia),
												'tab' === e.getAttribute('role') &&
													e.setAttribute('aria-selected', !0),
												se(e),
												e.classList.contains('fade') && e.classList.add('show');
											t = e.parentNode;
											t && 'LI' === t.nodeName && (t = t.parentNode),
												t &&
													t.classList.contains('dropdown-menu') &&
													((t = e.closest('.dropdown')) &&
														J.find('.dropdown-toggle', t).forEach(function (e) {
															return e.classList.add(Ia);
														}),
													e.setAttribute('aria-expanded', !0)),
												n && n();
										},
									},
								]) && Ta(e.prototype, t),
								n && Ta(e, n),
								r
							);
						})();
					Ae.on(
						document,
						t,
						'[data-mdb-toggle="tab"], [data-mdb-toggle="pill"], [data-mdb-toggle="list"]',
						function (e) {
							['A', 'AREA'].includes(this.tagName) && e.preventDefault(),
								re(this) || (_e.get(this, ja) || new Na(this)).show();
						}
					),
						pe(Na);
					var Wa = Na;
					function Fa(e) {
						return (Fa =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Ba(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function za(e, t, n) {
						return (za =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = Xa(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function Va(e, t) {
						return (Va =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Ua(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Xa(n);
							return (
								(e = i
									? ((e = Xa(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Fa(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Xa(e) {
						return (Xa = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Ja = 'tab',
						Xe = 'mdb.'.concat(Ja),
						rt = '.'.concat(Xe),
						qa = 'show.bs.tab',
						Ka = 'shown.bs.tab',
						Ga = 'hide.bs.tab',
						Qa = 'hidden.bs.tab',
						$a = 'show'.concat(rt),
						Za = 'shown'.concat(rt),
						es = 'hide'.concat(rt),
						ts = 'hidden'.concat(rt),
						ns = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Va(e, t);
							})(r, Wa);
							var e,
								t,
								n,
								i = Ua(r);
							function r(e) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e))._previous = null),
									e._init(),
									e
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return Ja;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, qa),
												H.off(this._element, Ka),
												za(Xa(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: 'show',
										value: function () {
											var e,
												t,
												n,
												i,
												r = this;
											(this._element.parentNode &&
												this._element.parentNode.nodeType ===
													Node.ELEMENT_NODE &&
												this._element.classList.contains('active')) ||
												this._element.classList.contains('disabled') ||
												((e = o(this._element)),
												(i = this._element.closest('.nav, .list-group')) &&
													((n =
														'UL' === i.nodeName || 'OL' === i.nodeName
															? ':scope > li > .active'
															: '.active'),
													(this._previous = V.find(n, i)),
													(this._previous =
														this._previous[this._previous.length - 1])),
												(n = t = null),
												this._previous &&
													((t = H.trigger(this._previous, Ga, {
														relatedTarget: this._element,
													})),
													(n = H.trigger(this._previous, es, {
														relatedTarget: this._element,
													}))),
												H.trigger(this._element, qa, {
													relatedTarget: this._previous,
												}).defaultPrevented ||
													(null !== t && t.defaultPrevented) ||
													(null !== n && n.defaultPrevented) ||
													(this._activate(this._element, i),
													(i = function () {
														H.trigger(r._previous, Qa, {
															relatedTarget: r._element,
														}),
															H.trigger(r._previous, ts, {
																relatedTarget: r._element,
															}),
															H.trigger(r._element, Ka, {
																relatedTarget: r._previous,
															});
													}),
													e ? this._activate(e, e.parentNode, i) : i()));
										},
									},
									{
										key: '_init',
										value: function () {
											this._bindShowEvent(),
												this._bindShownEvent(),
												this._bindHideEvent(),
												this._bindHiddenEvent();
										},
									},
									{
										key: '_bindShowEvent',
										value: function () {
											var t = this;
											H.on(this._element, qa, function (e) {
												H.trigger(t._element, $a, {
													relatedTarget: e.relatedTarget,
												});
											});
										},
									},
									{
										key: '_bindShownEvent',
										value: function () {
											var t = this;
											H.on(this._element, Ka, function (e) {
												H.trigger(t._element, Za, {
													relatedTarget: e.relatedTarget,
												});
											});
										},
									},
									{
										key: '_bindHideEvent',
										value: function () {
											var e = this;
											H.on(this._previous, Ga, function () {
												H.trigger(e._previous, es);
											});
										},
									},
									{
										key: '_bindHiddenEvent',
										value: function () {
											var e = this;
											H.on(this._previous, Qa, function () {
												H.trigger(e._previous, ts);
											});
										},
									},
								]) && Ba(e.prototype, t),
								n && Ba(e, n),
								r
							);
						})();
					V.find(
						'[data-mdb-toggle="tab"], [data-mdb-toggle="pill"], [data-mdb-toggle="list"]'
					).forEach(function (e) {
						ns.getInstance(e) || new ns(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn.tab),
								(t.fn.tab = ns.jQueryInterface),
								(t.fn.tab.Constructor = ns),
								(t.fn.tab.noConflict = function () {
									return (t.fn.tab = e), ns.jQueryInterface;
								}));
						});
					var is = ns;
					function rs(e) {
						return (rs =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function os(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function as(e, t, n) {
						return (as =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = us(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function ss(e, t) {
						return (ss =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function ls(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = us(n);
							return (
								(e = i
									? ((e = us(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== rs(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function us(e) {
						return (us = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var cs = 'tooltip',
						Ve = 'mdb.'.concat(cs),
						t = '.'.concat(Ve),
						ds = 'hide.bs.tooltip',
						fs = 'hidden.bs.tooltip',
						hs = 'show.bs.tooltip',
						ps = 'shown.bs.tooltip',
						ms = 'inserted.bs.tooltip',
						_s = 'hide'.concat(t),
						vs = 'hidden'.concat(t),
						ys = 'show'.concat(t),
						gs = 'shown'.concat(t),
						bs = 'inserted'.concat(t),
						ks = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && ss(e, t);
							})(r, _o);
							var e,
								t,
								n,
								i = ls(r);
							function r(e, t) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									(t = i.call(this, e, t))._init(),
									t
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return cs;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, hs),
												H.off(this._element, ps),
												H.off(this._element, ds),
												H.off(this._element, fs),
												H.off(this._element, ms),
												as(us(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_init',
										value: function () {
											this._bindShowEvent(),
												this._bindShownEvent(),
												this._bindHideEvent(),
												this._bindHiddenEvent(),
												this._bindHidePreventedEvent();
										},
									},
									{
										key: '_bindShowEvent',
										value: function () {
											var e = this;
											H.on(this.element, hs, function () {
												H.trigger(e.element, ys);
											});
										},
									},
									{
										key: '_bindShownEvent',
										value: function () {
											var e = this;
											H.on(this.element, ps, function () {
												H.trigger(e.element, gs);
											});
										},
									},
									{
										key: '_bindHideEvent',
										value: function () {
											var e = this;
											H.on(this.element, ds, function () {
												H.trigger(e.element, _s);
											});
										},
									},
									{
										key: '_bindHiddenEvent',
										value: function () {
											var e = this;
											H.on(this.element, fs, function () {
												H.trigger(e.element, vs);
											});
										},
									},
									{
										key: '_bindHidePreventedEvent',
										value: function () {
											var e = this;
											H.on(this.element, ms, function () {
												H.trigger(e.element, bs);
											});
										},
									},
								]) && os(e.prototype, t),
								n && os(e, n),
								r
							);
						})();
					V.find('[data-mdb-toggle="tooltip"]').forEach(function (e) {
						ks.getInstance(e) || new ks(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[cs]),
								(t.fn[cs] = ks.jQueryInterface),
								(t.fn[cs].Constructor = ks),
								(t.fn[cs].noConflict = function () {
									return (t.fn[cs] = e), ks.jQueryInterface;
								}));
						});
					var ws = ks;
					n(304);
					function Ms(e) {
						return (Ms =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Ls(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var xs = 'input',
						Ds = 'mdb.input',
						Xe = 'form-outline',
						Ss = 'active',
						Ts = 'form-notch',
						Os = 'form-notch-leading',
						Ys = 'form-notch-middle',
						Cs = '.'.concat(Xe, ' input'),
						js = '.'.concat(Xe, ' textarea'),
						Es = '.'.concat(Ts),
						Ps = '.'.concat(Os),
						As = '.'.concat(Ys),
						Hs = '.'.concat('form-helper'),
						Is = (function () {
							function r(e) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._label = null),
									(this._labelWidth = 0),
									(this._labelMarginLeft = 0),
									(this._notchLeading = null),
									(this._notchMiddle = null),
									(this._notchTrailing = null),
									(this._initiated = !1),
									(this._helper = null),
									(this._counter = !1),
									(this._counterElement = null),
									(this._maxLength = 0),
									(this._leadingIcon = null),
									this._element && (m.setData(e, Ds, this), this.init());
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'activate',
										value: function (t) {
											return function (e) {
												t._activate(e);
											};
										},
									},
									{
										key: 'deactivate',
										value: function (t) {
											return function (e) {
												t._deactivate(e);
											};
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, Ds),
													t = 'object' === Ms(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Ds);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return xs;
										},
									},
								]),
								(t = [
									{
										key: 'init',
										value: function () {
											this._initiated ||
												(this._getLabelData(),
												this._applyDivs(),
												this._applyNotch(),
												this._activate(),
												this._getHelper(),
												this._getCounter(),
												(this._initiated = !0));
										},
									},
									{
										key: 'update',
										value: function () {
											this._getLabelData(),
												this._getNotchData(),
												this._applyNotch(),
												this._activate(),
												this._getHelper(),
												this._getCounter();
										},
									},
									{
										key: 'forceActive',
										value: function () {
											F.addClass(this.input, Ss);
										},
									},
									{
										key: 'forceInactive',
										value: function () {
											F.removeClass(this.input, Ss);
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._removeBorder(),
												m.removeData(this._element, Ds),
												(this._element = null);
										},
									},
									{
										key: '_getLabelData',
										value: function () {
											(this._label = V.findOne('label', this._element)),
												null === this._label
													? this._showPlaceholder()
													: (this._getLabelWidth(),
													  this._getLabelPositionInInputGroup());
										},
									},
									{
										key: '_getHelper',
										value: function () {
											this._helper = V.findOne(Hs, this._element);
										},
									},
									{
										key: '_getCounter',
										value: function () {
											(this._counter = F.getDataAttribute(
												this.input,
												'showcounter'
											)),
												this._counter &&
													((this._maxLength = this.input.maxLength),
													this._showCounter());
										},
									},
									{
										key: '_showCounter',
										value: function () {
											var e;
											0 < V.find('.form-counter', this._element).length ||
												((this._counterElement = document.createElement('div')),
												F.addClass(this._counterElement, 'form-counter'),
												(e = this.input.value.length),
												(this._counterElement.innerHTML = ''
													.concat(e, ' / ')
													.concat(this._maxLength)),
												this._helper.appendChild(this._counterElement),
												this._bindCounter());
										},
									},
									{
										key: '_bindCounter',
										value: function () {
											var t = this;
											H.on(this.input, 'input', function () {
												var e = t.input.value.length;
												t._counterElement.innerHTML = ''
													.concat(e, ' / ')
													.concat(t._maxLength);
											});
										},
									},
									{
										key: '_showPlaceholder',
										value: function () {
											F.addClass(this.input, 'placeholder-active');
										},
									},
									{
										key: '_getNotchData',
										value: function () {
											(this._notchMiddle = V.findOne(As, this._element)),
												(this._notchLeading = V.findOne(Ps, this._element));
										},
									},
									{
										key: '_getLabelWidth',
										value: function () {
											this._labelWidth = 0.8 * this._label.clientWidth + 8;
										},
									},
									{
										key: '_getLabelPositionInInputGroup',
										value: function () {
											var e;
											(this._labelMarginLeft = 0),
												this._element.classList.contains('input-group') &&
													((e = this.input),
													(e = V.prev(e, '.input-group-text')[0]),
													(this._labelMarginLeft =
														void 0 === e ? 0 : e.offsetWidth - 1));
										},
									},
									{
										key: '_applyDivs',
										value: function () {
											var e = V.find(Es, this._element),
												t = x('div');
											F.addClass(t, Ts),
												(this._notchLeading = x('div')),
												F.addClass(this._notchLeading, Os),
												(this._notchMiddle = x('div')),
												F.addClass(this._notchMiddle, Ys),
												(this._notchTrailing = x('div')),
												F.addClass(this._notchTrailing, 'form-notch-trailing'),
												1 <= e.length ||
													(t.append(this._notchLeading),
													t.append(this._notchMiddle),
													t.append(this._notchTrailing),
													this._element.append(t));
										},
									},
									{
										key: '_applyNotch',
										value: function () {
											(this._notchMiddle.style.width = ''.concat(
												this._labelWidth,
												'px'
											)),
												(this._notchLeading.style.width = ''.concat(
													this._labelMarginLeft + 9,
													'px'
												)),
												null !== this._label &&
													(this._label.style.marginLeft = ''.concat(
														this._labelMarginLeft,
														'px'
													));
										},
									},
									{
										key: '_removeBorder',
										value: function () {
											var e = V.findOne(Es, this._element);
											e && e.remove();
										},
									},
									{
										key: '_activate',
										value: function (t) {
											var n = this;
											l(function () {
												n._getElements(t);
												var e = t ? t.target : n.input;
												'' !== e.value && F.addClass(e, Ss);
											});
										},
									},
									{
										key: '_getElements',
										value: function (e) {
											var t;
											e &&
												((this._element = e.target.parentNode),
												(this._label = V.findOne('label', this._element))),
												e &&
													this._label &&
													((t = this._labelWidth),
													this._getLabelData(),
													t !== this._labelWidth &&
														((this._notchMiddle = V.findOne(
															'.form-notch-middle',
															e.target.parentNode
														)),
														(this._notchLeading = V.findOne(
															Ps,
															e.target.parentNode
														)),
														this._applyNotch()));
										},
									},
									{
										key: '_deactivate',
										value: function (e) {
											e = e ? e.target : this.input;
											'' === e.value && e.classList.remove(Ss);
										},
									},
									{
										key: 'input',
										get: function () {
											return (
												V.findOne('input', this._element) ||
												V.findOne('textarea', this._element)
											);
										},
									},
								]) && Ls(e.prototype, t),
								n && Ls(e, n),
								r
							);
						})();
					H.on(document, 'focus', Cs, Is.activate(new Is())),
						H.on(document, 'input', Cs, Is.activate(new Is())),
						H.on(document, 'blur', Cs, Is.deactivate(new Is())),
						H.on(document, 'focus', js, Is.activate(new Is())),
						H.on(document, 'input', js, Is.activate(new Is())),
						H.on(document, 'blur', js, Is.deactivate(new Is())),
						H.on(window, 'shown.bs.modal', function (e) {
							V.find(Cs, e.target).forEach(function (e) {
								e = Is.getInstance(e.parentNode);
								e && e.update();
							}),
								V.find(js, e.target).forEach(function (e) {
									e = Is.getInstance(e.parentNode);
									e && e.update();
								});
						}),
						H.on(window, 'shown.bs.dropdown', function (e) {
							e = e.target.parentNode.querySelector('.dropdown-menu');
							e &&
								(V.find(Cs, e).forEach(function (e) {
									e = Is.getInstance(e.parentNode);
									e && e.update();
								}),
								V.find(js, e).forEach(function (e) {
									e = Is.getInstance(e.parentNode);
									e && e.update();
								}));
						}),
						H.on(window, 'shown.bs.tab', function (e) {
							(e = e.target.href.split('#')[1]), (e = V.findOne('#'.concat(e)));
							V.find(Cs, e).forEach(function (e) {
								e = Is.getInstance(e.parentNode);
								e && e.update();
							}),
								V.find(js, e).forEach(function (e) {
									e = Is.getInstance(e.parentNode);
									e && e.update();
								});
						}),
						V.find('.'.concat(Xe)).map(function (e) {
							return new Is(e);
						}),
						H.on(window, 'reset', function (e) {
							V.find(Cs, e.target).forEach(function (e) {
								e = Is.getInstance(e.parentNode);
								e && e.forceInactive();
							}),
								V.find(js, e.target).forEach(function (e) {
									e = Is.getInstance(e.parentNode);
									e && e.forceInactive();
								});
						}),
						H.on(window, 'onautocomplete', function (e) {
							var t = Is.getInstance(e.target.parentNode);
							t && e.cancelable && t.forceActive();
						}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[xs]),
								(t.fn[xs] = Is.jQueryInterface),
								(t.fn[xs].Constructor = Is),
								(t.fn[xs].noConflict = function () {
									return (t.fn[xs] = e), Is.jQueryInterface;
								}));
						});
					var Rs = Is;
					n(305);
					function Ns(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Ws(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Ns(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Ns(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Fs(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return Bs(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Bs(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Bs(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Bs(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function zs(e) {
						return (zs =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Vs(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Us(e, t, n) {
						return (Us =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = qs(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function Xs(e, t) {
						return (Xs =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Js(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = qs(n);
							return (
								(e = i
									? ((e = qs(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== zs(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function qs(e) {
						return (qs = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Ks = 'dropdown',
						Gs = 'bs.dropdown',
						rt = '.'.concat(Gs),
						Ve = '.data-api',
						Qs = 'Escape',
						$s = 'ArrowUp',
						Zs = 'ArrowDown',
						el = new RegExp(''.concat($s, '|').concat(Zs, '|').concat(Qs)),
						tl = 'hide'.concat(rt),
						nl = 'hidden'.concat(rt),
						il = 'show'.concat(rt),
						rl = 'shown'.concat(rt),
						ol = 'click'.concat(rt),
						t = 'click'.concat(rt).concat(Ve),
						Xe = 'keydown'.concat(rt).concat(Ve),
						Ve = 'keyup'.concat(rt).concat(Ve),
						al = 'show',
						sl = '[data-mdb-toggle="dropdown"]',
						ll = '.dropdown-menu',
						ul = ue() ? 'top-end' : 'top-start',
						cl = ue() ? 'top-start' : 'top-end',
						dl = ue() ? 'bottom-end' : 'bottom-start',
						fl = ue() ? 'bottom-start' : 'bottom-end',
						hl = ue() ? 'left-start' : 'right-start',
						pl = ue() ? 'right-start' : 'left-start',
						ml = {
							offset: [0, 2],
							boundary: 'clippingParents',
							reference: 'toggle',
							display: 'dynamic',
							popperConfig: null,
							autoClose: !0,
						},
						_l = {
							offset: '(array|string|function)',
							boundary: '(string|element)',
							reference: '(string|element|object)',
							display: 'string',
							popperConfig: '(null|object|function)',
							autoClose: '(boolean|string)',
						},
						vl = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Xs(e, t);
							})(o, Ie);
							var e,
								t,
								n,
								i = Js(o);
							function o(e, t) {
								return (
									(function (e) {
										if (!(e instanceof o))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e))._popper = null),
									(e._config = e._getConfig(t)),
									(e._menu = e._getMenuElement()),
									(e._inNavbar = e._detectNavbar()),
									e._addEventListeners(),
									e
								);
							}
							return (
								(e = o),
								(n = [
									{
										key: 'dropdownInterface',
										value: function (e, t) {
											var n = _e.get(e, Gs),
												i = 'object' === zs(t) ? t : null,
												n = n || new o(e, i);
											if ('string' == typeof t) {
												if (void 0 === n[t])
													throw new TypeError(
														'No method named "'.concat(t, '"')
													);
												n[t]();
											}
										},
									},
									{
										key: 'jQueryInterface',
										value: function (e) {
											return this.each(function () {
												o.dropdownInterface(this, e);
											});
										},
									},
									{
										key: 'clearMenus',
										value: function (e) {
											if (
												!e ||
												(2 !== e.button &&
													('keyup' !== e.type || 'Tab' === e.key))
											)
												for (
													var t = J.find(sl), n = 0, i = t.length;
													n < i;
													n++
												) {
													var r = _e.get(t[n], Gs);
													if (
														r &&
														!1 !== r._config.autoClose &&
														r._element.classList.contains(al)
													) {
														var o = { relatedTarget: r._element };
														if (e) {
															var a = e.composedPath(),
																s = a.includes(r._menu);
															if (
																a.includes(r._element) ||
																('inside' === r._config.autoClose && !s) ||
																('outside' === r._config.autoClose && s)
															)
																continue;
															if (
																r._menu.contains(e.target) &&
																(('keyup' === e.type && 'Tab' === e.key) ||
																	/input|select|option|textarea|form/i.test(
																		e.target.tagName
																	))
															)
																continue;
															'click' === e.type && (o.clickEvent = e);
														}
														r._completeHide(o);
													}
												}
										},
									},
									{
										key: 'getParentFromElement',
										value: function (e) {
											return Q(e) || e.parentNode;
										},
									},
									{
										key: 'dataApiKeydownHandler',
										value: function (e) {
											var t = this;
											if (
												/input|textarea/i.test(e.target.tagName)
													? !(
															'Space' === e.key ||
															(e.key !== Qs &&
																((e.key !== Zs && e.key !== $s) ||
																	e.target.closest(ll)))
													  )
													: el.test(e.key)
											) {
												var n = this.classList.contains(al);
												if (
													(n || e.key !== Qs) &&
													(e.preventDefault(), e.stopPropagation(), !re(this))
												) {
													var i = function () {
														return t.matches(sl) ? t : J.prev(t, sl)[0];
													};
													if (e.key === Qs)
														return i().focus(), void o.clearMenus();
													n || (e.key !== $s && e.key !== Zs)
														? n && 'Space' !== e.key
															? o.getInstance(i())._selectMenuItem(e)
															: o.clearMenus()
														: i().click();
												}
											}
										},
									},
									{
										key: 'Default',
										get: function () {
											return ml;
										},
									},
									{
										key: 'DefaultType',
										get: function () {
											return _l;
										},
									},
									{
										key: 'NAME',
										get: function () {
											return Ks;
										},
									},
								]),
								(t = [
									{
										key: 'toggle',
										value: function () {
											re(this._element) ||
												(this._element.classList.contains(al)
													? this.hide()
													: this.show());
										},
									},
									{
										key: 'show',
										value: function () {
											if (
												!re(this._element) &&
												!this._menu.classList.contains(al)
											) {
												var e = o.getParentFromElement(this._element),
													t = { relatedTarget: this._element };
												if (
													!Ae.trigger(this._element, il, t).defaultPrevented
												) {
													if (this._inNavbar)
														yt.setDataAttribute(this._menu, 'popper', 'none');
													else {
														if (void 0 === a)
															throw new TypeError(
																"Bootstrap's dropdowns require Popper (https://popper.js.org)"
															);
														var n = this._element;
														'parent' === this._config.reference
															? (n = e)
															: ee(this._config.reference)
															? (n = he(this._config.reference))
															: 'object' === zs(this._config.reference) &&
															  (n = this._config.reference);
														var i = this._getPopperConfig(),
															r = i.modifiers.find(function (e) {
																return (
																	'applyStyles' === e.name && !1 === e.enabled
																);
															});
														(this._popper = Nr(n, this._menu, i)),
															r &&
																yt.setDataAttribute(
																	this._menu,
																	'popper',
																	'static'
																);
													}
													'ontouchstart' in document.documentElement &&
														!e.closest('.navbar-nav') &&
														(e = []).concat
															.apply(e, Fs(document.body.children))
															.forEach(function (e) {
																return Ae.on(e, 'mouseover', ae);
															}),
														this._element.focus(),
														this._element.setAttribute('aria-expanded', !0),
														this._menu.classList.toggle(al),
														this._element.classList.toggle(al),
														Ae.trigger(this._element, rl, t);
												}
											}
										},
									},
									{
										key: 'hide',
										value: function () {
											var e;
											!re(this._element) &&
												this._menu.classList.contains(al) &&
												((e = { relatedTarget: this._element }),
												this._completeHide(e));
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._popper && this._popper.destroy(),
												Us(qs(o.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: 'update',
										value: function () {
											(this._inNavbar = this._detectNavbar()),
												this._popper && this._popper.update();
										},
									},
									{
										key: '_addEventListeners',
										value: function () {
											var t = this;
											Ae.on(this._element, ol, function (e) {
												e.preventDefault(), t.toggle();
											});
										},
									},
									{
										key: '_completeHide',
										value: function (e) {
											var t;
											Ae.trigger(this._element, tl, e).defaultPrevented ||
												('ontouchstart' in document.documentElement &&
													(t = []).concat
														.apply(t, Fs(document.body.children))
														.forEach(function (e) {
															return Ae.off(e, 'mouseover', ae);
														}),
												this._popper && this._popper.destroy(),
												this._menu.classList.remove(al),
												this._element.classList.remove(al),
												this._element.setAttribute('aria-expanded', 'false'),
												yt.removeDataAttribute(this._menu, 'popper'),
												Ae.trigger(this._element, nl, e));
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											if (
												((e = Ws(
													Ws(
														Ws({}, this.constructor.Default),
														yt.getDataAttributes(this._element)
													),
													e
												)),
												ne(Ks, e, this.constructor.DefaultType),
												'object' === zs(e.reference) &&
													!ee(e.reference) &&
													'function' !=
														typeof e.reference.getBoundingClientRect)
											)
												throw new TypeError(
													''.concat(
														Ks.toUpperCase(),
														': Option "reference" provided type "object" without a required "getBoundingClientRect" method.'
													)
												);
											return e;
										},
									},
									{
										key: '_getMenuElement',
										value: function () {
											return J.next(this._element, ll)[0];
										},
									},
									{
										key: '_getPlacement',
										value: function () {
											var e = this._element.parentNode;
											if (e.classList.contains('dropend')) return hl;
											if (e.classList.contains('dropstart')) return pl;
											var t =
												'end' ===
												getComputedStyle(this._menu)
													.getPropertyValue('--bs-position')
													.trim();
											return e.classList.contains('dropup')
												? t
													? cl
													: ul
												: t
												? fl
												: dl;
										},
									},
									{
										key: '_detectNavbar',
										value: function () {
											return (
												null !== this._element.closest('.'.concat('navbar'))
											);
										},
									},
									{
										key: '_getOffset',
										value: function () {
											var t = this,
												n = this._config.offset;
											return 'string' == typeof n
												? n.split(',').map(function (e) {
														return Number.parseInt(e, 10);
												  })
												: 'function' == typeof n
												? function (e) {
														return n(e, t._element);
												  }
												: n;
										},
									},
									{
										key: '_getPopperConfig',
										value: function () {
											var e = {
												placement: this._getPlacement(),
												modifiers: [
													{
														name: 'preventOverflow',
														options: { boundary: this._config.boundary },
													},
													{
														name: 'offset',
														options: { offset: this._getOffset() },
													},
												],
											};
											return (
												'static' === this._config.display &&
													(e.modifiers = [
														{ name: 'applyStyles', enabled: !1 },
													]),
												Ws(
													Ws({}, e),
													'function' == typeof this._config.popperConfig
														? this._config.popperConfig(e)
														: this._config.popperConfig
												)
											);
										},
									},
									{
										key: '_selectMenuItem',
										value: function (e) {
											var t,
												n = J.find(
													'.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)',
													this._menu
												).filter(ie);
											n.length &&
												((t = n.indexOf(e.target)),
												e.key === $s && 0 < t && t--,
												e.key === Zs && t < n.length - 1 && t++,
												n[(t = -1 === t ? 0 : t)].focus());
										},
									},
								]) && Vs(e.prototype, t),
								n && Vs(e, n),
								o
							);
						})();
					Ae.on(document, Xe, sl, vl.dataApiKeydownHandler),
						Ae.on(document, Xe, ll, vl.dataApiKeydownHandler),
						Ae.on(document, t, vl.clearMenus),
						Ae.on(document, Ve, vl.clearMenus),
						Ae.on(document, t, sl, function (e) {
							e.preventDefault(), vl.dropdownInterface(this);
						}),
						pe(vl);
					var yl = vl;
					function gl(e) {
						return (gl =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function bl(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function kl(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? bl(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: bl(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function wl(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Ml(e, t, n) {
						return (Ml =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = Dl(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function Ll(e, t) {
						return (Ll =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function xl(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Dl(n);
							return (
								(e = i
									? ((e = Dl(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== gl(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Dl(e) {
						return (Dl = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Sl = 'dropdown',
						Ve = 'mdb.'.concat(Sl),
						t = '.'.concat(Ve),
						Tl = {
							offset: [0, 2],
							flip: !0,
							boundary: 'clippingParents',
							reference: 'toggle',
							display: 'dynamic',
							popperConfig: null,
							dropdownAnimation: 'on',
						},
						Ol = {
							offset: '(array|string|function)',
							flip: 'boolean',
							boundary: '(string|element)',
							reference: '(string|element|object)',
							display: 'string',
							popperConfig: '(null|object|function)',
							dropdownAnimation: 'string',
						},
						Yl = 'hide.bs.dropdown',
						Cl = 'hidden.bs.dropdown',
						jl = 'show.bs.dropdown',
						El = 'shown.bs.dropdown',
						Pl = 'hide'.concat(t),
						Al = 'hidden'.concat(t),
						Hl = 'show'.concat(t),
						Il = 'shown'.concat(t),
						Rl = 'animation',
						Nl = 'fade-in',
						Wl = 'fade-out',
						Fl = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Ll(e, t);
							})(r, yl);
							var e,
								t,
								n,
								i = xl(r);
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									((e = i.call(this, e, t))._config = e._getConfig(t)),
									(e._parent = r.getParentFromElement(e._element)),
									(e._menuStyle = ''),
									(e._popperPlacement = ''),
									(e._mdbPopperConfig = '');
								t = window.matchMedia(
									'(prefers-reduced-motion: reduce)'
								).matches;
								return (
									'on' !== e._config.dropdownAnimation || t || e._init(), e
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return Sl;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, jl),
												H.off(this._parent, El),
												H.off(this._parent, Yl),
												H.off(this._parent, Cl),
												Ml(Dl(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_init',
										value: function () {
											this._bindShowEvent(),
												this._bindShownEvent(),
												this._bindHideEvent(),
												this._bindHiddenEvent();
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = kl(
												kl(kl({}, Tl), F.getDataAttributes(this._element)),
												e
											);
											return s(Sl, e, Ol), e;
										},
									},
									{
										key: '_getOffset',
										value: function () {
											var t = this,
												n = this._config.offset;
											return 'string' == typeof n
												? n.split(',').map(function (e) {
														return Number.parseInt(e, 10);
												  })
												: 'function' == typeof n
												? function (e) {
														return n(e, t._element);
												  }
												: n;
										},
									},
									{
										key: '_getPopperConfig',
										value: function () {
											var e = {
												placement: this._getPlacement(),
												modifiers: [
													{
														name: 'preventOverflow',
														options: {
															altBoundary: this._config.flip,
															boundary: this._config.boundary,
														},
													},
													{
														name: 'offset',
														options: { offset: this._getOffset() },
													},
												],
											};
											return (
												'static' === this._config.display &&
													(e.modifiers = [
														{ name: 'applyStyles', enabled: !1 },
													]),
												kl(
													kl({}, e),
													'function' == typeof this._config.popperConfig
														? this._config.popperConfig(e)
														: this._config.popperConfig
												)
											);
										},
									},
									{
										key: '_bindShowEvent',
										value: function () {
											var t = this;
											H.on(this._element, jl, function (e) {
												H.trigger(t._element, Hl, {
													relatedTarget: e.relatedTarget,
												}).defaultPrevented
													? e.preventDefault()
													: t._dropdownAnimationStart('show');
											});
										},
									},
									{
										key: '_bindShownEvent',
										value: function () {
											var t = this;
											H.on(this._parent, El, function (e) {
												H.trigger(t._parent, Il, {
													relatedTarget: e.relatedTarget,
												}).defaultPrevented && e.preventDefault();
											});
										},
									},
									{
										key: '_bindHideEvent',
										value: function () {
											var t = this;
											H.on(this._parent, Yl, function (e) {
												H.trigger(t._parent, Pl, {
													relatedTarget: e.relatedTarget,
												}).defaultPrevented
													? e.preventDefault()
													: ((t._menuStyle = t._menu.style.cssText),
													  (t._popperPlacement = t._menu.getAttribute(
															'data-popper-placement'
													  )),
													  (t._mdbPopperConfig =
															t._menu.getAttribute('data-mdb-popper')));
											});
										},
									},
									{
										key: '_bindHiddenEvent',
										value: function () {
											var t = this;
											H.on(this._parent, Cl, function (e) {
												H.trigger(t._parent, Al, {
													relatedTarget: e.relatedTarget,
												}).defaultPrevented
													? e.preventDefault()
													: ('static' !== t._config.display &&
															'' !== t._menuStyle &&
															(t._menu.style.cssText = t._menuStyle),
													  t._menu.setAttribute(
															'data-popper-placement',
															t._popperPlacement
													  ),
													  t._menu.setAttribute(
															'data-mdb-popper',
															t._mdbPopperConfig
													  ),
													  t._dropdownAnimationStart('hide'));
											});
										},
									},
									{
										key: '_dropdownAnimationStart',
										value: function (e) {
											'show' === e
												? (this._menu.classList.add(Rl, Nl),
												  this._menu.classList.remove(Wl))
												: (this._menu.classList.add(Rl, Wl),
												  this._menu.classList.remove(Nl)),
												this._bindAnimationEnd();
										},
									},
									{
										key: '_bindAnimationEnd',
										value: function () {
											var e = this;
											H.one(this._menu, 'animationend', function () {
												e._menu.classList.remove(Rl, Wl, Nl);
											});
										},
									},
								]) && wl(e.prototype, t),
								n && wl(e, n),
								r
							);
						})();
					V.find('[data-mdb-toggle="dropdown"]').forEach(function (e) {
						Fl.getInstance(e) || new Fl(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Sl]),
								(t.fn[Sl] = Fl.jQueryInterface),
								(t.fn[Sl].Constructor = Fl),
								(t.fn[Sl].noConflict = function () {
									return (t.fn[Sl] = e), Fl.jQueryInterface;
								}));
						});
					var Bl = Fl;
					function zl(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Vl(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? zl(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: zl(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Ul(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Xl = 'ripple',
						Jl = 'mdb.ripple',
						ql = 'ripple-surface',
						Kl = ['.btn', '.ripple'],
						Gl = 'ripple-surface-unbound',
						Ql = [0, 0, 0],
						$l = [
							'primary',
							'secondary',
							'success',
							'danger',
							'warning',
							'info',
							'light',
							'dark',
						],
						Zl = {
							rippleCentered: !1,
							rippleColor: '',
							rippleDuration: '500ms',
							rippleRadius: 0,
							rippleUnbound: !1,
						},
						eu = {
							rippleCentered: 'boolean',
							rippleColor: 'string',
							rippleDuration: 'string',
							rippleRadius: 'number',
							rippleUnbound: 'boolean',
						},
						tu = (function () {
							function n(e, t) {
								!(function (e) {
									if (!(e instanceof n))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t)),
									this._element &&
										(m.setData(e, Jl, this), F.addClass(this._element, ql)),
									(this._clickHandler = this._createRipple.bind(this)),
									this.init();
							}
							var e, t, i;
							return (
								(e = n),
								(i = [
									{
										key: 'autoInitial',
										value: function (t) {
											return function (e) {
												t._autoInit(e);
											};
										},
									},
									{
										key: 'jQueryInterface',
										value: function (e) {
											return this.each(function () {
												return m.getData(this, Jl) ? null : new n(this, e);
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Jl);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return Xl;
										},
									},
								]),
								(t = [
									{
										key: 'init',
										value: function () {
											this._addClickEvent(this._element);
										},
									},
									{
										key: 'dispose',
										value: function () {
											m.removeData(this._element, Jl),
												H.off(this._element, 'click', this._clickHandler),
												(this._element = null),
												(this._options = null);
										},
									},
									{
										key: '_autoInit',
										value: function (t) {
											var n = this;
											Kl.forEach(function (e) {
												V.closest(t.target, e) &&
													(n._element = V.closest(t.target, e));
											}),
												F.addClass(this._element, ql),
												(this._options = this._getConfig()),
												this._createRipple(t);
										},
									},
									{
										key: '_addClickEvent',
										value: function (e) {
											H.on(e, 'mousedown', this._clickHandler);
										},
									},
									{
										key: '_createRipple',
										value: function (e) {
											var t = e.layerX,
												n = e.layerY,
												i = this._element.offsetHeight,
												r = this._element.offsetWidth,
												o = this._durationToMsNumber(
													this._options.rippleDuration
												),
												a = {
													offsetX: this._options.rippleCentered ? i / 2 : t,
													offsetY: this._options.rippleCentered ? r / 2 : n,
													height: i,
													width: r,
												},
												s = this._getDiameter(a),
												e = this._options.rippleRadius || s / 2,
												a = { delay: 0.5 * o, duration: o - 0.5 * o },
												s = {
													left: this._options.rippleCentered
														? ''.concat(r / 2 - e, 'px')
														: ''.concat(t - e, 'px'),
													top: this._options.rippleCentered
														? ''.concat(i / 2 - e, 'px')
														: ''.concat(n - e, 'px'),
													height: ''.concat(
														2 * this._options.rippleRadius || s,
														'px'
													),
													width: ''.concat(
														2 * this._options.rippleRadius || s,
														'px'
													),
													transitionDelay: '0s, '.concat(a.delay, 'ms'),
													transitionDuration: ''
														.concat(o, 'ms, ')
														.concat(a.duration, 'ms'),
												},
												a = x('div');
											this._createHTMLRipple({
												wrapper: this._element,
												ripple: a,
												styles: s,
											}),
												this._removeHTMLRipple({ ripple: a, duration: o });
										},
									},
									{
										key: '_createHTMLRipple',
										value: function (e) {
											var t = e.wrapper,
												n = e.ripple,
												i = e.styles;
											Object.keys(i).forEach(function (e) {
												return (n.style[e] = i[e]);
											}),
												n.classList.add('ripple-wave'),
												'' !== this._options.rippleColor &&
													(this._removeOldColorClasses(t),
													this._addColor(n, t)),
												this._toggleUnbound(t),
												this._appendRipple(n, t);
										},
									},
									{
										key: '_removeHTMLRipple',
										value: function (e) {
											var t = e.ripple,
												e = e.duration;
											setTimeout(function () {
												t && t.remove();
											}, e);
										},
									},
									{
										key: '_durationToMsNumber',
										value: function (e) {
											return Number(e.replace('ms', '').replace('s', '000'));
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = 0 < arguments.length && void 0 !== e ? e : {},
												e = F.getDataAttributes(this._element),
												t = Vl(Vl(Vl({}, Zl), e), t);
											return s(Xl, t, eu), t;
										},
									},
									{
										key: '_getDiameter',
										value: function (e) {
											function t(e, t) {
												return Math.sqrt(Math.pow(e, 2) + Math.pow(t, 2));
											}
											var n = e.offsetX,
												i = e.offsetY,
												r = e.height,
												o = e.width,
												a = i <= r / 2,
												s = n <= o / 2,
												l = i === r / 2 && n === o / 2,
												u = !0 == a && !1 == s,
												c = !0 == a && !0 == s,
												e = !1 == a && !0 == s,
												s = !1 == a && !1 == s,
												r = {
													topLeft: t(n, i),
													topRight: t(o - n, i),
													bottomLeft: t(n, r - i),
													bottomRight: t(o - n, r - i),
												},
												i = 0;
											return (
												l || s
													? (i = r.topLeft)
													: e
													? (i = r.topRight)
													: c
													? (i = r.bottomRight)
													: u && (i = r.bottomLeft),
												2 * i
											);
										},
									},
									{
										key: '_appendRipple',
										value: function (e, t) {
											t.appendChild(e),
												setTimeout(function () {
													F.addClass(e, 'active');
												}, 50);
										},
									},
									{
										key: '_toggleUnbound',
										value: function (e) {
											!0 === this._options.rippleUnbound
												? F.addClass(e, Gl)
												: e.classList.remove(Gl);
										},
									},
									{
										key: '_addColor',
										value: function (e, t) {
											var n = this;
											$l.find(function (e) {
												return e === n._options.rippleColor.toLowerCase();
											})
												? F.addClass(
														t,
														''
															.concat(ql, '-')
															.concat(this._options.rippleColor.toLowerCase())
												  )
												: ((t = this._colorToRGB(
														this._options.rippleColor
												  ).join(',')),
												  (t =
														'rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%'
															.split('{{color}}')
															.join(''.concat(t))),
												  (e.style.backgroundImage =
														'radial-gradient(circle, '.concat(t, ')')));
										},
									},
									{
										key: '_removeOldColorClasses',
										value: function (t) {
											var e = new RegExp(''.concat(ql, '-[a-z]+'), 'gi');
											(t.classList.value.match(e) || []).forEach(function (e) {
												t.classList.remove(e);
											});
										},
									},
									{
										key: '_colorToRGB',
										value: function (e) {
											return 'transparent' === e.toLowerCase()
												? Ql
												: '#' === e[0]
												? ((t = e).length < 7 &&
														(t = '#'
															.concat(t[1])
															.concat(t[1])
															.concat(t[2])
															.concat(t[2])
															.concat(t[3])
															.concat(t[3])),
												  [
														parseInt(t.substr(1, 2), 16),
														parseInt(t.substr(3, 2), 16),
														parseInt(t.substr(5, 2), 16),
												  ])
												: (-1 === e.indexOf('rgb') &&
														((n = e),
														(i = document.body.appendChild(
															document.createElement('fictum')
														)),
														(r = 'rgb(1, 2, 3)'),
														(i.style.color = r),
														(e =
															i.style.color !== r
																? Ql
																: ((i.style.color = n),
																  i.style.color === r || '' === i.style.color
																		? Ql
																		: ((n = getComputedStyle(i).color),
																		  document.body.removeChild(i),
																		  n)))),
												  0 === e.indexOf('rgb')
														? (((o = (o = e).match(/[.\d]+/g).map(function (e) {
																return +Number(e);
														  })).length = 3),
														  o)
														: Ql);
											var t, n, i, r, o;
										},
									},
								]) && Ul(e.prototype, t),
								i && Ul(e, i),
								n
							);
						})();
					Kl.forEach(function (e) {
						H.one(document, 'mousedown', e, tu.autoInitial(new tu()));
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Xl]),
								(t.fn[Xl] = tu.jQueryInterface),
								(t.fn[Xl].Constructor = tu),
								(t.fn[Xl].noConflict = function () {
									return (t.fn[Xl] = e), tu.jQueryInterface;
								}));
						});
					var nu = tu;
					function iu(e) {
						return (iu =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function ru(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var ou = 'range',
						au = 'mdb.range',
						su = 'thumb-active',
						lu = '.'.concat('thumb-value'),
						Ve = '.'.concat('range'),
						uu = (function () {
							function r(e) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._initiated = !1),
									this._element && (m.setData(e, au, this), this.init());
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, au);
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, au),
													t = 'object' === iu(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return ou;
										},
									},
								]),
								(t = [
									{
										key: 'init',
										value: function () {
											this._initiated ||
												(this._addThumb(),
												this._updateValue(),
												this._thumbPositionUpdate(),
												this._handleEvents(),
												(this._initiated = !0));
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._disposeEvents(),
												m.removeData(this._element, au),
												(this._element = null);
										},
									},
									{
										key: '_addThumb',
										value: function () {
											var e = x('span');
											F.addClass(e, 'thumb'),
												(e.innerHTML = '<span class="thumb-value"></span>'),
												this._element.append(e);
										},
									},
									{
										key: '_updateValue',
										value: function () {
											var e = this,
												t = V.findOne(lu, this._element);
											(t.textContent = this.rangeInput.value),
												(this.rangeInput.oninput = function () {
													return (t.textContent = e.rangeInput.value);
												});
										},
									},
									{
										key: '_handleEvents',
										value: function () {
											var e = this;
											H.on(this.rangeInput, 'mousedown', function () {
												return e._showThumb();
											}),
												H.on(this.rangeInput, 'mouseup', function () {
													return e._hideThumb();
												}),
												H.on(this.rangeInput, 'touchstart', function () {
													return e._showThumb();
												}),
												H.on(this.rangeInput, 'touchend', function () {
													return e._hideThumb();
												}),
												H.on(this.rangeInput, 'input', function () {
													return e._thumbPositionUpdate();
												});
										},
									},
									{
										key: '_disposeEvents',
										value: function () {
											H.off(this.rangeInput, 'mousedown', this._showThumb),
												H.off(this.rangeInput, 'mouseup', this._hideThumb),
												H.off(this.rangeInput, 'touchstart', this._showThumb),
												H.off(this.rangeInput, 'touchend', this._hideThumb),
												H.off(
													this.rangeInput,
													'input',
													this._thumbPositionUpdate
												);
										},
									},
									{
										key: '_showThumb',
										value: function () {
											F.addClass(this._element.lastElementChild, su);
										},
									},
									{
										key: '_hideThumb',
										value: function () {
											F.removeClass(this._element.lastElementChild, su);
										},
									},
									{
										key: '_thumbPositionUpdate',
										value: function () {
											var e = this.rangeInput,
												t = e.value,
												n = e.min || 0,
												i = e.max || 100,
												e = this._element.lastElementChild,
												n = Number((100 * (t - n)) / (i - n));
											(e.firstElementChild.textContent = t),
												F.style(e, {
													left: 'calc('
														.concat(n, '% + (')
														.concat(8 - 0.15 * n, 'px))'),
												});
										},
									},
									{
										key: 'rangeInput',
										get: function () {
											return V.findOne('input[type=range]', this._element);
										},
									},
								]) && ru(e.prototype, t),
								n && ru(e, n),
								r
							);
						})();
					V.find(Ve).map(function (e) {
						return new uu(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[ou]),
								(t.fn[ou] = uu.jQueryInterface),
								(t.fn[ou].Constructor = uu),
								(t.fn[ou].noConflict = function () {
									return (t.fn[ou] = e), uu.jQueryInterface;
								}));
						});
					var cu = uu;
					function du(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function fu(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? du(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: du(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function hu(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var pu = 'animation',
						mu = 'mdb.animation',
						_u = {
							animation: 'string',
							animationStart: 'string',
							animationShowOnLoad: 'boolean',
							onStart: '(null|function)',
							onEnd: '(null|function)',
							onHide: '(null|function)',
							onShow: '(null|function)',
							animationOnScroll: '(string)',
							animationWindowHeight: 'number',
							animationOffset: '(number|string)',
							animationDelay: '(number|string)',
							animationDuration: '(number|string)',
							animationReverse: 'boolean',
							animationInterval: '(number|string)',
							animationRepeat: '(number|boolean)',
							animationReset: 'boolean',
						},
						vu = {
							animation: 'fade',
							animationStart: 'onClick',
							animationShowOnLoad: !0,
							onStart: null,
							onEnd: null,
							onHide: null,
							onShow: null,
							animationOnScroll: 'once',
							animationWindowHeight: 0,
							animationOffset: 0,
							animationDelay: 0,
							animationDuration: 500,
							animationReverse: !1,
							animationInterval: 0,
							animationRepeat: !1,
							animationReset: !1,
						},
						yu = (function () {
							function n(e, t) {
								!(function (e) {
									if (!(e instanceof n))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._animateElement = this._getAnimateElement()),
									(this._isFirstScroll = !0),
									(this._repeatAnimateOnScroll = !0),
									(this._options = this._getConfig(t)),
									this._element && m.setData(e, mu, this);
							}
							var e, t, i;
							return (
								(e = n),
								(i = [
									{
										key: 'autoInit',
										value: function (e) {
											e._init();
										},
									},
									{
										key: 'jQueryInterface',
										value: function (e) {
											new n(this[0], e).init();
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, mu);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return pu;
										},
									},
								]),
								(t = [
									{
										key: 'init',
										value: function () {
											this._init();
										},
									},
									{
										key: 'startAnimation',
										value: function () {
											this._startAnimation();
										},
									},
									{
										key: 'stopAnimation',
										value: function () {
											this._clearAnimationClass();
										},
									},
									{
										key: 'changeAnimationType',
										value: function (e) {
											this._options.animation = e;
										},
									},
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, 'mousedown'),
												H.off(this._animateElement, 'animationend'),
												H.off(window, 'scroll'),
												H.off(this._element, 'mouseover'),
												m.removeData(this._element, mu),
												(this._element = null),
												(this._animateElement = null),
												(this._isFirstScroll = null),
												(this._repeatAnimateOnScroll = null),
												(this._options = null);
										},
									},
									{
										key: '_init',
										value: function () {
											switch (this._options.animationStart) {
												case 'onHover':
													this._bindHoverEvents();
													break;
												case 'onLoad':
													this._startAnimation();
													break;
												case 'onScroll':
													this._bindScrollEvents();
													break;
												case 'onClick':
													this._bindClickEvents();
											}
											this._bindTriggerOnEndCallback(),
												this._options.animationReset &&
													this._bindResetAnimationAfterFinish();
										},
									},
									{
										key: '_getAnimateElement',
										value: function () {
											var e = F.getDataAttribute(
												this._element,
												'animation-target'
											);
											return e ? V.find(e)[0] : this._element;
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._animateElement);
											return (e = fu(fu(fu({}, vu), t), e)), s(pu, e, _u), e;
										},
									},
									{
										key: '_animateOnScroll',
										value: function () {
											var e = F.offset(this._animateElement).top,
												t = this._animateElement.offsetHeight,
												n = window.innerHeight,
												e =
													e + this._options.animationOffset <= n &&
													0 <= e + this._options.animationOffset + t,
												t = 'visible' === this._animateElement.style.visibility;
											switch (!0) {
												case e && this._isFirstScroll:
													(this._isFirstScroll = !1), this._startAnimation();
													break;
												case !e && this._isFirstScroll:
													(this._isFirstScroll = !1),
														this._hideAnimateElement();
													break;
												case e && !t && this._repeatAnimateOnScroll:
													'repeat' !== this._options.animationOnScroll &&
														(this._repeatAnimateOnScroll = !1),
														this._callback(this._options.onShow),
														this._showAnimateElement(),
														this._startAnimation();
													break;
												case !e && t && this._repeatAnimateOnScroll:
													this._hideAnimateElement(),
														this._clearAnimationClass(),
														this._callback(this._options.onHide);
											}
										},
									},
									{
										key: '_addAnimatedClass',
										value: function () {
											F.addClass(this._animateElement, 'animation'),
												F.addClass(
													this._animateElement,
													this._options.animation
												);
										},
									},
									{
										key: '_clearAnimationClass',
										value: function () {
											this._animateElement.classList.remove(
												this._options.animation,
												'animation'
											);
										},
									},
									{
										key: '_startAnimation',
										value: function () {
											this._callback(this._options.onStart),
												this._addAnimatedClass(),
												this._options.animationRepeat &&
													!this._options.animationInterval &&
													this._setAnimationRepeat(),
												this._options.animationReverse &&
													this._setAnimationReverse(),
												this._options.animationDelay &&
													this._setAnimationDelay(),
												this._options.animationDuration &&
													this._setAnimationDuration(),
												this._options.animationInterval &&
													this._setAnimationInterval();
										},
									},
									{
										key: '_setAnimationReverse',
										value: function () {
											F.style(this._animateElement, {
												animationIterationCount:
													!0 === this._options.animationRepeat
														? 'infinite'
														: '2',
												animationDirection: 'alternate',
											});
										},
									},
									{
										key: '_setAnimationDuration',
										value: function () {
											F.style(this._animateElement, {
												animationDuration: ''.concat(
													this._options.animationDuration,
													'ms'
												),
											});
										},
									},
									{
										key: '_setAnimationDelay',
										value: function () {
											F.style(this._animateElement, {
												animationDelay: ''.concat(
													this._options.animationDelay,
													'ms'
												),
											});
										},
									},
									{
										key: '_setAnimationRepeat',
										value: function () {
											F.style(this._animateElement, {
												animationIterationCount:
													!0 === this._options.animationRepeat
														? 'infinite'
														: this._options.animationRepeat,
											});
										},
									},
									{
										key: '_setAnimationInterval',
										value: function () {
											var e = this;
											H.on(this._animateElement, 'animationend', function () {
												e._clearAnimationClass(),
													setTimeout(function () {
														e._addAnimatedClass();
													}, e._options.animationInterval);
											});
										},
									},
									{
										key: '_hideAnimateElement',
										value: function () {
											F.style(this._animateElement, { visibility: 'hidden' });
										},
									},
									{
										key: '_showAnimateElement',
										value: function () {
											F.style(this._animateElement, { visibility: 'visible' });
										},
									},
									{
										key: '_bindResetAnimationAfterFinish',
										value: function () {
											var e = this;
											H.on(this._animateElement, 'animationend', function () {
												e._clearAnimationClass();
											});
										},
									},
									{
										key: '_bindTriggerOnEndCallback',
										value: function () {
											var e = this;
											H.on(this._animateElement, 'animationend', function () {
												e._callback(e._options.onEnd);
											});
										},
									},
									{
										key: '_bindScrollEvents',
										value: function () {
											var e = this;
											this._options.animationShowOnLoad ||
												this._animateOnScroll(),
												H.on(window, 'scroll', function () {
													e._animateOnScroll();
												});
										},
									},
									{
										key: '_bindClickEvents',
										value: function () {
											var e = this;
											H.on(this._element, 'mousedown', function () {
												e._startAnimation();
											});
										},
									},
									{
										key: '_bindHoverEvents',
										value: function () {
											var e = this;
											H.one(this._element, 'mouseover', function () {
												e._startAnimation();
											}),
												H.one(
													this._animateElement,
													'animationend',
													function () {
														setTimeout(function () {
															e._bindHoverEvents();
														}, 100);
													}
												);
										},
									},
									{
										key: '_callback',
										value: function (e) {
											e instanceof Function && e();
										},
									},
								]) && hu(e.prototype, t),
								i && hu(e, i),
								n
							);
						})();
					V.find('[data-mdb-toggle="animation"]').forEach(function (e) {
						yu.autoInit(new yu(e));
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[pu]),
								(t.fn[pu] = yu.jQueryInterface),
								(t.fn[pu].Constructor = yu),
								(t.fn[pu].noConflict = function () {
									return (t.fn[pu] = e), yu.jQueryInterface;
								}));
						});
					var gu = yu,
						bu = n(86),
						t = n(118),
						ku = n.n(t);
					function wu(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Mu(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? wu(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: wu(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Lu(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					bu.Chart.plugins.unregister(ku.a);
					function xu(e, t, n) {
						return Su(n[t], e, {
							arrayMerge: function (n, e, i) {
								var r = n.slice();
								return (
									e.forEach(function (e, t) {
										void 0 === r[t]
											? (r[t] = i.cloneUnlessOtherwiseSpecified(e, i))
											: i.isMergeableObject(e)
											? (r[t] = Su(n[t], e, i))
											: -1 === n.indexOf(e) && r.push(e);
									}),
									r
								);
							},
						});
					}
					function Du(n) {
						var i = {};
						return (
							Object.keys(n).forEach(function (e) {
								var t;
								e.match(/dataset.*/) &&
									((t = e.slice(7, 8).toLowerCase().concat(e.slice(8))),
									(i[t] =
										'string' == typeof (t = n[e]) &&
										(('{' === (e = t)[0] && '}' === e[e.length - 1]) ||
											('[' === e[0] && ']' === e[e.length - 1]))
											? JSON.parse(t.replace(/'/g, '"'))
											: t));
							}),
							i
						);
					}
					var Su = n(308),
						Tu = 'chart',
						Ou = 'mdb.chart',
						Yu = 'chart',
						Cu = {
							line: {
								options: {
									elements: {
										line: {
											backgroundColor: 'rgba(66, 133, 244, 0.0)',
											borderColor: 'rgb(66, 133, 244)',
											borderWidth: 2,
											tension: 0,
										},
										point: {
											borderColor: 'rgb(66, 133, 244)',
											backgroundColor: 'rgb(66, 133, 244)',
										},
									},
									responsive: !0,
									legend: { display: !0 },
									tooltips: { intersect: !1, mode: 'index' },
									datasets: { borderColor: 'red' },
									scales: {
										xAxes: [
											{
												stacked: !0,
												gridLines: { display: !1 },
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
										yAxes: [
											{
												stacked: !1,
												gridLines: {
													borderDash: [2],
													drawBorder: !1,
													zeroLineColor: 'rgba(0,0,0,0)',
													zeroLineBorderDash: [2],
													zeroLineBorderDashOffset: [2],
												},
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
									},
								},
							},
							bar: {
								options: {
									elements: {
										line: {
											backgroundColor: 'rgb(66, 133, 244)',
											borderWidth: 0,
										},
										rectangle: {
											backgroundColor: 'rgb(66, 133, 244)',
											borderWidth: 0,
										},
									},
									responsive: !0,
									legend: { display: !0 },
									tooltips: { intersect: !1, mode: 'index' },
									scales: {
										xAxes: [
											{
												stacked: !0,
												gridLines: { display: !1 },
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
										yAxes: [
											{
												stacked: !0,
												gridLines: {
													borderDash: [2],
													drawBorder: !1,
													zeroLineColor: 'rgba(0,0,0,0)',
													zeroLineBorderDash: [2],
													zeroLineBorderDashOffset: [2],
												},
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
									},
								},
							},
							horizontalBar: {
								options: {
									elements: {
										rectangle: {
											backgroundColor: 'rgb(66, 133, 244)',
											borderWidth: 0,
										},
									},
									responsive: !0,
									legend: { display: !0 },
									tooltips: { intersect: !1, mode: 'index' },
									scales: {
										xAxes: [
											{
												stacked: !0,
												gridLines: { display: !0 },
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
										yAxes: [
											{
												stacked: !0,
												gridLines: {
													display: !1,
													borderDash: [2],
													drawBorder: !1,
													zeroLineColor: 'rgba(0,0,0,0)',
													zeroLineBorderDash: [2],
													zeroLineBorderDashOffset: [2],
												},
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
									},
								},
							},
							pie: {
								options: {
									elements: { arc: { backgroundColor: 'rgb(66, 133, 244)' } },
									responsive: !0,
									legend: { display: !0 },
								},
							},
							doughnut: {
								options: {
									elements: { arc: { backgroundColor: 'rgb(66, 133, 244)' } },
									responsive: !0,
									legend: { display: !0 },
								},
							},
							polarArea: {
								options: {
									elements: {
										arc: { backgroundColor: 'rgba(66, 133, 244, 0.5)' },
									},
									responsive: !0,
									legend: { display: !0 },
								},
							},
							radar: {
								options: {
									elements: {
										line: {
											backgroundColor: 'rgba(66, 133, 244, 0.5)',
											borderColor: 'rgb(66, 133, 244)',
											borderWidth: 2,
										},
										point: {
											borderColor: 'rgb(66, 133, 244)',
											backgroundColor: 'rgb(66, 133, 244)',
										},
									},
									responsive: !0,
									legend: { display: !0 },
								},
							},
							scatter: {
								options: {
									elements: {
										line: {
											backgroundColor: 'rgba(66, 133, 244, 0.5)',
											borderColor: 'rgb(66, 133, 244)',
											borderWidth: 2,
											tension: 0,
										},
										point: {
											borderColor: 'rgb(66, 133, 244)',
											backgroundColor: 'rgba(66, 133, 244, 0.5)',
										},
									},
									responsive: !0,
									legend: { display: !0 },
									tooltips: { intersect: !1, mode: 'index' },
									datasets: { borderColor: 'red' },
									scales: {
										xAxes: [
											{
												stacked: !0,
												gridLines: { display: !1 },
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
										yAxes: [
											{
												stacked: !1,
												gridLines: {
													borderDash: [2],
													drawBorder: !1,
													zeroLineColor: 'rgba(0,0,0,0)',
													zeroLineBorderDash: [2],
													zeroLineBorderDashOffset: [2],
												},
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
									},
								},
							},
							bubble: {
								options: {
									elements: {
										point: {
											borderColor: 'rgb(66, 133, 244)',
											backgroundColor: 'rgba(66, 133, 244, 0.5)',
										},
									},
									responsive: !0,
									legend: { display: !0 },
									scales: {
										xAxes: [
											{
												gridLines: { display: !1 },
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
										yAxes: [
											{
												gridLines: {
													borderDash: [2],
													drawBorder: !1,
													zeroLineColor: 'rgba(0,0,0,0)',
													zeroLineBorderDash: [2],
													zeroLineBorderDashOffset: [2],
												},
												ticks: { fontColor: 'rgba(0,0,0, 0.5)' },
											},
										],
									},
								},
							},
						},
						ju = (function () {
							function o(e, t) {
								var n =
									2 < arguments.length && void 0 !== arguments[2]
										? arguments[2]
										: {};
								!(function (e) {
									if (!(e instanceof o))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._data = t),
									(this._options = n),
									(this._type = t.type),
									(this._canvas = null),
									(this._chart = null),
									this._element &&
										(m.setData(e, Ou, this),
										F.addClass(this._element, Yu),
										this._chartConstructor());
							}
							var e, t, n;
							return (
								(e = o),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i, r) {
											return this.each(function () {
												var e,
													t = m.getData(this, Ou);
												if (
													(t || !/dispose/.test(n)) &&
													(t ||
														((e = i ? xu(i, r, Cu) : Cu[r]),
														(t = new o(this, Mu(Mu({}, n), e)))),
													'string' == typeof n)
												) {
													if (void 0 === t[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													t[n](i, r);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Ou);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return Tu;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											m.removeData(this._element, Ou), (this._element = null);
										},
									},
									{
										key: 'update',
										value: function (e, t) {
											(this._data = Mu(Mu({}, this._data), e)),
												(this._chart.data = this._data),
												this._chart.update(t);
										},
									},
									{
										key: '_chartConstructor',
										value: function () {
											var e;
											this._data &&
												(this._createCanvas(),
												(e = xu(this._options, this._type, Cu))
													.dataLabelsPlugin && (e.plugins = ku.a),
												(this._chart = new bu.Chart(
													this._canvas,
													Mu(Mu({}, this._data), e)
												)));
										},
									},
									{
										key: '_createCanvas',
										value: function () {
											this._canvas ||
												('CANVAS' === this._element.nodeName
													? (this._canvas = this._element)
													: ((this._canvas = x('canvas')),
													  this._element.appendChild(this._canvas)));
										},
									},
								]) && Lu(e.prototype, t),
								n && Lu(e, n),
								o
							);
						})();
					V.find('[data-mdb-chart]').forEach(function (e) {
						if (
							'bubble' === F.getDataAttribute(e, 'chart') ||
							'scatter' === F.getDataAttribute(e, 'chart')
						)
							return null;
						var t = F.getDataAttributes(e),
							n = { data: { datasets: [Du(t)] } };
						return (
							t.chart && (n.type = t.chart),
							t.labels &&
								(n.data.labels = JSON.parse(t.labels.replace(/'/g, '"'))),
							new ju(e, Mu(Mu({}, n), Cu[n.type]))
						);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Tu]),
								(t.fn[Tu] = ju.jQueryInterface),
								(t.fn[Tu].Constructor = ju),
								(t.fn[Tu].noConflict = function () {
									return (t.fn[Tu] = e), ju.jQueryInterface;
								}));
						});
					var Eu = ju;
					n(309), n(287);
					function Pu(e) {
						return (Pu =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Au(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Hu(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Au(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Au(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Iu(e, t, n, i, r, o, a) {
						try {
							var s = e[o](a),
								l = s.value;
						} catch (e) {
							return void n(e);
						}
						s.done ? t(l) : Promise.resolve(l).then(i, r);
					}
					function Ru(s) {
						return function () {
							var e = this,
								a = arguments;
							return new Promise(function (t, n) {
								var i = s.apply(e, a);
								function r(e) {
									Iu(i, t, n, r, o, 'next', e);
								}
								function o(e) {
									Iu(i, t, n, r, o, 'throw', e);
								}
								r(void 0);
							});
						};
					}
					function Nu(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Wu = 'lightbox',
						Fu = 'mdb.lightbox',
						Bu = 'lightbox',
						zu = 'lightbox-gallery-caption',
						Vu = 'fontawesome-pro',
						Uu = '.'.concat(Bu, ' img:not(.lightbox-disabled)'),
						Xu = { zoomLevel: '(number|string)', fontAwesome: 'string' },
						Ju = { zoomLevel: 1, fontAwesome: 'free' },
						qu = (function () {
							function r(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = t),
									(this._id = 'lightbox-'.concat(
										Math.random().toString(36).substr(2, 9)
									)),
									(this._activeImg = 0),
									(this._images = []),
									(this._zoom = 1),
									(this._gallery = null),
									(this._galleryToolbar = null),
									(this._galleryContent = null),
									(this._loader = null),
									(this._imgCounter = null),
									(this._animating = !1),
									(this._fullscreen = !1),
									(this._zoomBtn = null),
									(this._fullscreenBtn = null),
									(this._toolsToggleTimer = 0),
									(this._mousedown = !1),
									(this._mousedownPositionX = 0),
									(this._mousedownPositionY = 0),
									(this._originalPositionX = 0),
									(this._originalPositionY = 0),
									(this._positionX = 0),
									(this._positionY = 0),
									(this._zoomTimer = 0),
									(this._tapCounter = 0),
									(this._tapTime = 0),
									(this._rightArrow = null),
									(this._leftArrowWrapper = null),
									(this._rightArrowWrapper = null),
									(this._initiated = !1),
									this._element && (m.setData(e, Fu, this), this.init());
							}
							var e, t, n, i, o;
							return (
								(e = r),
								(t = [
									{
										key: 'init',
										value: function () {
											this._initiated ||
												(this._appendTemplate(), (this._initiated = !0));
										},
									},
									{
										key: 'open',
										value: function (e) {
											var t = this,
												e = 0 < arguments.length && void 0 !== e ? e : 0;
											this._getImages(),
												this._setActiveImg(e),
												this._sortImages(),
												this._triggerEvents('open', 'opened'),
												this._loadImages().then(function (e) {
													t._resizeImages(e),
														t._toggleTemplate(),
														t._addEvents(),
														t._focusFullscreenBtn();
												});
										},
									},
									{
										key: 'close',
										value: function () {
											this.reset(),
												this._removeEvents(),
												this._toggleTemplate(),
												this._triggerEvents('close', 'closed');
										},
									},
									{
										key: 'slide',
										value: function (e) {
											e = 0 < arguments.length && void 0 !== e ? e : 'right';
											!0 === this._animating ||
												this._images.length <= 1 ||
												(this._triggerEvents('slide', 'slided'),
												this._beforeSlideEvents(),
												'right' === e && this._slideHorizontally(e),
												'left' === e && this._slideHorizontally(e),
												'first' === e && this._slideToTarget(e),
												'last' === e && this._slideToTarget(e),
												this._afterSlideEvents());
										},
									},
									{
										key: 'zoomIn',
										value: function () {
											3 <= this._zoom ||
												(this._triggerEvents('zoomIn', 'zoomedIn'),
												(this._zoom += parseFloat(this.options.zoomLevel)),
												F.style(this.currentImg.parentNode, {
													transform: 'scale('.concat(this._zoom, ')'),
												}),
												this._updateZoomBtn());
										},
									},
									{
										key: 'zoomOut',
										value: function () {
											this._zoom <= 1 ||
												(this._triggerEvents('zoomOut', 'zoomedOut'),
												(this._zoom -= parseFloat(this.options.zoomLevel)),
												F.style(this.currentImg.parentNode, {
													transform: 'scale('.concat(this._zoom, ')'),
												}),
												this._updateZoomBtn(),
												this._updateImgPosition());
										},
									},
									{
										key: 'toggleFullscreen',
										value: function () {
											!1 === this._fullscreen
												? (F.addClass(this._fullscreenBtn, 'active'),
												  this._gallery.requestFullscreen &&
														this._gallery.requestFullscreen(),
												  (this._fullscreen = !0))
												: (F.removeClass(this._fullscreenBtn, 'active'),
												  document.exitFullscreen && document.exitFullscreen(),
												  (this._fullscreen = !1));
										},
									},
									{
										key: 'reset',
										value: function () {
											this._restoreDefaultFullscreen(),
												this._restoreDefaultPosition(),
												this._restoreDefaultZoom(),
												clearTimeout(this._toolsToggleTimer),
												clearTimeout(this._doubleTapTimer);
										},
									},
									{
										key: 'dispose',
										value: function () {
											H.off(document, 'click', Uu, this.toggle),
												this._galleryContent && this._removeEvents(),
												this._gallery && this._gallery.remove(),
												m.removeData(this._element, Fu),
												(this._element = null);
										},
									},
									{
										key: '_getImages',
										value: function () {
											var e = V.find('img', this._element).filter(function (e) {
												return !e.classList.contains('lightbox-disabled');
											});
											this._images = e;
										},
									},
									{
										key: '_setActiveImg',
										value: function (e) {
											this._activeImg =
												'number' == typeof e
													? e
													: this._images.indexOf(e.target);
										},
									},
									{
										key: '_appendTemplate',
										value: function () {
											(this._gallery = x('div')),
												F.addClass(this._gallery, 'lightbox-gallery'),
												(this._element.dataset.id = this._id),
												(this._gallery.id = this._id),
												this._appendLoader(),
												this._appendToolbar(),
												this._appendContent(),
												this._appendArrows(),
												this._appendCaption(),
												document.body.append(this._gallery);
										},
									},
									{
										key: '_appendToolbar',
										value: function () {
											var e = this;
											(this._galleryToolbar = x('div')),
												(this._imgCounter = x('p')),
												(this._fullscreenBtn = x('button')),
												(this._zoomBtn = x('button'));
											var t = x('div'),
												n = x('div'),
												i = x('button');
											F.addClass(
												this._galleryToolbar,
												'lightbox-gallery-toolbar'
											),
												F.addClass(
													this._imgCounter,
													'lightbox-gallery-counter'
												),
												F.addClass(
													this._fullscreenBtn,
													'lightbox-gallery-fullscreen-btn'
												),
												F.addClass(this._zoomBtn, 'lightbox-gallery-zoom-btn'),
												F.addClass(t, 'lightbox-gallery-left-tools'),
												F.addClass(n, 'lightbox-gallery-right-tools'),
												F.addClass(i, 'lightbox-gallery-close-btn'),
												'pro' === this.options.fontAwesome &&
													(F.addClass(this._fullscreenBtn, Vu),
													F.addClass(this._zoomBtn, Vu),
													F.addClass(i, Vu)),
												this._fullscreenBtn.setAttribute(
													'aria-label',
													'Toggle fullscreen'
												),
												this._zoomBtn.setAttribute('aria-label', 'Zoom in'),
												i.setAttribute('aria-label', 'Close'),
												H.on(this._fullscreenBtn, 'click', function () {
													return e.toggleFullscreen();
												}),
												H.on(this._zoomBtn, 'click', function () {
													return e._toggleZoom();
												}),
												H.on(i, 'click', function () {
													return e.close();
												}),
												t.append(this._imgCounter),
												n.append(this._fullscreenBtn),
												n.append(this._zoomBtn),
												n.append(i),
												this._galleryToolbar.append(t),
												this._galleryToolbar.append(n),
												this._gallery.append(this._galleryToolbar);
										},
									},
									{
										key: '_appendContent',
										value: function () {
											(this._galleryContent = x('div')),
												F.addClass(
													this._galleryContent,
													'lightbox-gallery-content'
												),
												this._gallery.append(this._galleryContent);
										},
									},
									{
										key: '_appendLoader',
										value: function () {
											this._loader = x('div');
											var e = x('div'),
												t = x('span');
											F.addClass(this._loader, 'lightbox-gallery-loader'),
												F.addClass(e, 'spinner-grow'),
												F.addClass(e, 'text-light'),
												F.addClass(t, 'sr-only'),
												e.setAttribute('role', 'status'),
												(t.innerHTML = 'Loading...'),
												e.append(t),
												this._loader.append(e),
												this._gallery.append(this._loader);
										},
									},
									{
										key: '_appendArrows',
										value: function () {
											var e = this;
											(this._leftArrowWrapper = x('div')),
												F.addClass(
													this._leftArrowWrapper,
													'lightbox-gallery-arrow-left'
												);
											var t = x('button');
											t.setAttribute('aria-label', 'Previous'),
												H.on(t, 'click', function () {
													return e.slide('left');
												}),
												this._leftArrowWrapper.append(t),
												(this._rightArrowWrapper = x('div')),
												F.addClass(
													this._rightArrowWrapper,
													'lightbox-gallery-arrow-right'
												),
												(this._rightArrow = x('button')),
												this._rightArrow.setAttribute('aria-label', 'Next'),
												H.on(this._rightArrow, 'click', function () {
													return e.slide();
												}),
												this._rightArrowWrapper.append(this._rightArrow),
												'pro' === this.options.fontAwesome &&
													(F.addClass(t, Vu), F.addClass(this._rightArrow, Vu)),
												this._getImages(),
												this._images.length <= 1 ||
													(this._gallery.append(this._leftArrowWrapper),
													this._gallery.append(this._rightArrowWrapper));
										},
									},
									{
										key: '_appendCaption',
										value: function () {
											var e = x('div'),
												t = x('p');
											F.addClass(e, 'lightbox-gallery-caption-wrapper'),
												F.addClass(t, zu),
												e.append(t),
												this._gallery.append(e);
										},
									},
									{
										key: '_sortImages',
										value: function () {
											for (var e = 0; e < this._activeImg; e++)
												this._images.push(this._images.shift());
										},
									},
									{
										key: '_loadImages',
										value:
											((o = Ru(
												regeneratorRuntime.mark(function e() {
													var t,
														o,
														a,
														s = this;
													return regeneratorRuntime.wrap(
														function (e) {
															for (;;)
																switch ((e.prev = e.next)) {
																	case 0:
																		return (
																			(t = []),
																			(o = []),
																			(this._galleryContent.innerHTML = ''),
																			(a = 0),
																			this._images.forEach(function (i, r) {
																				t.push(
																					new Promise(function (e) {
																						var t = new Image(),
																							n = x('div');
																						F.addClass(
																							n,
																							'lightbox-gallery-image'
																						),
																							s._addImgStyles(t, n, a, r, i),
																							n.append(t),
																							s._galleryContent.append(n),
																							(t.onload = e),
																							(t.src =
																								i.dataset.mdbImg || i.src),
																							o.push(t),
																							(a += 100);
																					})
																				);
																			}),
																			(e.next = 7),
																			Promise.all(t)
																		);
																	case 7:
																		return e.abrupt('return', o);
																	case 8:
																	case 'end':
																		return e.stop();
																}
														},
														e,
														this
													);
												})
											)),
											function () {
												return o.apply(this, arguments);
											}),
									},
									{
										key: '_addImgStyles',
										value: function (e, t, n, i, r) {
											(e.alt = r.alt),
												(e.draggable = !1),
												F.style(t, {
													position: 'absolute',
													left: ''.concat(n, '%'),
													top: 0,
												}),
												r.dataset.caption &&
													(e.dataset.caption = r.dataset.caption),
												0 === n
													? (e.width < e.height && F.addClass(e, 'vertical'),
													  F.style(t, { opacity: 1 }),
													  F.addClass(e, 'active'))
													: F.removeClass(e, 'active'),
												i === this._images.length - 1 &&
													1 < this._images.length &&
													F.style(t, { left: '-100%' });
										},
									},
									{
										key: '_resizeImages',
										value: function (e) {
											var t = this;
											e.forEach(function (e) {
												t._calculateImgSize(e);
											});
										},
									},
									{
										key: '_calculateImgSize',
										value: function (e) {
											e.width >= e.height
												? ((e.style.width = '100%'),
												  (e.style.maxWidth = '100%'),
												  (e.style.height = 'auto'),
												  (e.style.top = ''.concat(
														(e.parentNode.offsetHeight - e.height) / 2,
														'px'
												  )),
												  (e.style.left = 0))
												: ((e.style.height = '100%'),
												  (e.style.maxHeight = '100%'),
												  (e.style.width = 'auto'),
												  (e.style.left = ''.concat(
														(e.parentNode.offsetWidth - e.width) / 2,
														'px'
												  )),
												  (e.style.top = 0)),
												e.width >= e.parentNode.offsetWidth &&
													((e.style.width = ''.concat(
														e.parentNode.offsetWidth,
														'px'
													)),
													(e.style.height = 'auto'),
													(e.style.left = 0),
													(e.style.top = ''.concat(
														(e.parentNode.offsetHeight - e.height) / 2,
														'px'
													))),
												e.height >= e.parentNode.offsetHeight &&
													((e.style.height = ''.concat(
														e.parentNode.offsetHeight,
														'px'
													)),
													(e.style.width = 'auto'),
													(e.style.top = 0),
													(e.style.left = ''.concat(
														(e.parentNode.offsetWidth - e.width) / 2,
														'px'
													))),
												(this._positionX = parseFloat(e.style.left) || 0),
												(this._positionY = parseFloat(e.style.top) || 0);
										},
									},
									{
										key: '_onResize',
										value: function () {
											var t = this;
											(this._images = V.find('img', this._galleryContent)),
												this._images.forEach(function (e) {
													t._calculateImgSize(e);
												});
										},
									},
									{
										key: '_onFullscreenChange',
										value: function () {
											void 0 ===
												(document.webkitIsFullScreen ||
													document.mozFullScreen ||
													document.msFullscreenElement) &&
												((this._fullscreen = !1),
												F.removeClass(this._fullscreenBtn, 'active'));
										},
									},
									{
										key: '_beforeSlideEvents',
										value: function () {
											this._animationStart(),
												this._restoreDefaultZoom(),
												this._restoreDefaultPosition(),
												this._resetDoubleTap();
										},
									},
									{
										key: '_slideHorizontally',
										value: function (n) {
											var i = this;
											(this._images = V.find('img', this._galleryContent)),
												this._images.forEach(function (e) {
													var t;
													'right' === n
														? (t =
																parseInt(e.parentNode.style.left, 10) - 100) <
																-100 && (t = 100 * (i._images.length - 2))
														: (t =
																parseInt(e.parentNode.style.left, 10) + 100) ===
																100 * (i._images.length - 1) && (t = -100),
														i._slideImg(e, t);
												}),
												this._updateActiveImg(n);
										},
									},
									{
										key: '_slideImg',
										value: function (e, t) {
											0 === t
												? (F.addClass(e, 'active'),
												  F.style(e.parentNode, {
														opacity: 1,
														transform: 'scale(1)',
												  }))
												: (F.removeClass(e, 'active'),
												  F.style(e.parentNode, {
														opacity: 0,
														transform: 'scale(0.25)',
												  })),
												(e.parentNode.style.left = ''.concat(t, '%'));
										},
									},
									{
										key: '_slideToTarget',
										value: function (e) {
											var t = this;
											('first' === e && 0 === this._activeImg) ||
												('last' === e &&
													this._activeImg === this._images.length - 1) ||
												(this.reset(),
												this._removeEvents(),
												this._showLoader(),
												this._getImages(),
												(this._activeImg =
													'first' === e ? 0 : this._images.length - 1),
												this._sortImages(),
												F.style(this.currentImg.parentNode, {
													transform: 'scale(0.25)',
													opacity: 0,
												}),
												setTimeout(function () {
													t._loadImages().then(function (e) {
														t._resizeImages(e),
															t._addEvents(),
															t._updateCaption(),
															t._hideLoader(),
															setTimeout(function () {
																F.style(t.currentImg.parentNode, {
																	transform: 'scale(1)',
																	opacity: 1,
																});
															}, 10);
													});
												}, 400));
										},
									},
									{
										key: '_updateActiveImg',
										value: function (e) {
											'right' === e &&
												(this._activeImg === this._images.length - 1
													? (this._activeImg = 0)
													: this._activeImg++),
												'left' === e &&
													(0 === this._activeImg
														? (this._activeImg = this._images.length - 1)
														: this._activeImg--);
										},
									},
									{
										key: '_afterSlideEvents',
										value: function () {
											this._updateCounter(), this._updateCaption();
										},
									},
									{
										key: '_updateCounter',
										value: function () {
											var e = this;
											this._images.length <= 1 ||
												setTimeout(function () {
													e._imgCounter.innerHTML = ''
														.concat(e._activeImg + 1, ' / ')
														.concat(e._images.length);
												}, 200);
										},
									},
									{
										key: '_updateCaption',
										value: function () {
											var t = this;
											setTimeout(function () {
												var e =
													t.currentImg.dataset.caption || t.currentImg.alt;
												V.findOne('.'.concat(zu), t._gallery).innerHTML = e;
											}, 200);
										},
									},
									{
										key: '_toggleTemplate',
										value: function () {
											var e = this;
											'visible' === this._gallery.style.visibility
												? (F.style(this.currentImg.parentNode, {
														transform: 'scale(0.25)',
												  }),
												  setTimeout(function () {
														e._hideGallery(),
															e._enableScroll(),
															e._showLoader();
												  }, 100))
												: (this._showGallery(),
												  this._disableScroll(),
												  this._updateCounter(),
												  this._updateCaption(),
												  this._setToolsToggleTimout(),
												  this._hideLoader());
										},
									},
									{
										key: '_showLoader',
										value: function () {
											F.style(this._loader, { opacity: 1 });
										},
									},
									{
										key: '_hideLoader',
										value: function () {
											F.style(this._loader, { opacity: 0 });
										},
									},
									{
										key: '_hideGallery',
										value: function () {
											F.style(this._gallery, {
												opacity: 0,
												pointerEvents: 'none',
												visibility: 'hidden',
											});
										},
									},
									{
										key: '_showGallery',
										value: function () {
											var e = this;
											F.style(this._gallery, {
												opacity: 1,
												pointerEvents: 'initial',
												visibility: 'visible',
											}),
												setTimeout(function () {
													F.style(e.currentImg.parentNode, {
														transform: 'scale(1)',
													});
												}, 50);
										},
									},
									{
										key: '_toggleZoom',
										value: function () {
											1 !== this._zoom
												? this._restoreDefaultZoom()
												: this.zoomIn();
										},
									},
									{
										key: '_updateZoomBtn',
										value: function () {
											1 < this._zoom
												? (F.addClass(this._zoomBtn, 'active'),
												  this._zoomBtn.setAttribute('aria-label', 'Zoom out'))
												: (F.removeClass(this._zoomBtn, 'active'),
												  this._zoomBtn.setAttribute('aria-label', 'Zoom in'));
										},
									},
									{
										key: '_updateImgPosition',
										value: function () {
											1 === this._zoom && this._restoreDefaultPosition();
										},
									},
									{
										key: '_addEvents',
										value: function () {
											var t = this,
												e = V.find('img', this._galleryContent);
											(this._onImgMousedown = this._onMousedown.bind(this)),
												(this._onImgMousemove = this._onMousemove.bind(this)),
												(this._onImgWheel = this._onZoom.bind(this)),
												(this._onImgMouseup = this._onMouseup.bind(this)),
												(this._onImgTouchend = this._onTouchend.bind(this)),
												(this._onImgDoubleClick =
													this._onDoubleClick.bind(this)),
												(this._onWindowResize = this._onResize.bind(this)),
												(this._onWindowFullscreenChange =
													this._onFullscreenChange.bind(this)),
												(this._onAnyImgAction =
													this._resetToolsToggler.bind(this)),
												(this._onGalleryClick =
													this._onBackdropClick.bind(this)),
												(this._onKeyupEvent = this._onKeyup.bind(this)),
												(this._onRightArrowKeydownEvent =
													this._onRightArrowKeydown.bind(this)),
												(this._onFullscreenBtnKeydownEvent =
													this._onFullscreenBtnKeydown.bind(this)),
												e.forEach(function (e) {
													H.on(e, 'mousedown', t._onImgMousedown, {
														passive: !0,
													}),
														H.on(e, 'touchstart', t._onImgMousedown, {
															passive: !0,
														}),
														H.on(e, 'mousemove', t._onImgMousemove, {
															passive: !0,
														}),
														H.on(e, 'touchmove', t._onImgMousemove, {
															passive: !0,
														}),
														H.on(e, 'wheel', t._onImgWheel, { passive: !0 }),
														H.on(e, 'dblclick', t._onImgDoubleClick, {
															passive: !0,
														});
												}),
												H.on(window, 'mouseup', this._onImgMouseup),
												H.on(window, 'touchend', this._onImgTouchend),
												H.on(window, 'resize', this._onWindowResize),
												H.on(window, 'orientationchange', this._onWindowResize),
												H.on(window, 'keyup', this._onKeyupEvent),
												H.on(
													window,
													'fullscreenchange',
													this._onWindowFullscreenChange
												),
												H.on(this._gallery, 'mousemove', this._onAnyImgAction),
												H.on(this._gallery, 'click', this._onGalleryClick),
												H.on(
													this._rightArrow,
													'keydown',
													this._onRightArrowKeydownEvent
												),
												H.on(
													this._fullscreenBtn,
													'keydown',
													this._onFullscreenBtnKeydownEvent
												);
										},
									},
									{
										key: '_removeEvents',
										value: function () {
											var t = this;
											V.find('img', this._galleryContent).forEach(function (e) {
												H.off(e, 'mousedown', t._onImgMousedown),
													H.off(e, 'touchstart', t._onImgMousedown),
													H.off(e, 'mousemove', t._onImgMousemove),
													H.off(e, 'touchmove', t._onImgMousemove),
													H.off(e, 'wheel', t._onImgWheel),
													H.off(e, 'dblclick', t._onImgDoubleClick);
											}),
												H.off(window, 'mouseup', this._onImgMouseup),
												H.off(window, 'touchend', this._onImgTouchend),
												H.off(window, 'resize', this._onWindowResize),
												H.off(
													window,
													'orientationchange',
													this._onWindowResize
												),
												H.off(window, 'keyup', this._onKeyupEvent),
												H.off(
													window,
													'fullscreenchange',
													this._onWindowFullscreenChange
												),
												H.off(this._gallery, 'mousemove', this._onAnyImgAction),
												H.off(this._gallery, 'click', this._onGalleryClick),
												H.off(
													this._rightArrow,
													'keydown',
													this._onRightArrowKeydownEvent
												),
												H.off(
													this._fullscreenBtn,
													'keydown',
													this._onFullscreenBtnKeydownEvent
												);
										},
									},
									{
										key: '_onMousedown',
										value: function (e) {
											var t = e.touches,
												n = (t ? t[0] : e).clientX,
												e = (t ? t[0] : e).clientY;
											(this._originalPositionX =
												parseFloat(this.currentImg.style.left) || 0),
												(this._originalPositionY =
													parseFloat(this.currentImg.style.top) || 0),
												(this._positionX = this._originalPositionX),
												(this._positionY = this._originalPositionY),
												(this._mousedownPositionX =
													n * (1 / this._zoom) - this._positionX),
												(this._mousedownPositionY =
													e * (1 / this._zoom) - this._positionY),
												(this._mousedown = !0);
										},
									},
									{
										key: '_onMousemove',
										value: function (e) {
											var t, n;
											this._mousedown &&
												((n = ((t = e.touches) ? t[0] : e).clientX),
												(e = (t ? t[0] : e).clientY),
												t && this._resetToolsToggler(),
												1 !== this._zoom
													? ((this._positionX =
															n * (1 / this._zoom) - this._mousedownPositionX),
													  (this._positionY =
															e * (1 / this._zoom) - this._mousedownPositionY),
													  F.style(this.currentImg, {
															left: ''.concat(this._positionX, 'px'),
															top: ''.concat(this._positionY, 'px'),
													  }))
													: this._images.length <= 1 ||
													  ((this._positionX =
															n * (1 / this._zoom) - this._mousedownPositionX),
													  F.style(this.currentImg, {
															left: ''.concat(this._positionX, 'px'),
													  })));
										},
									},
									{
										key: '_onMouseup',
										value: function (e) {
											(this._mousedown = !1), this._moveImg(e.target);
										},
									},
									{
										key: '_onTouchend',
										value: function (e) {
											(this._mousedown = !1),
												this._moveImg(e.target),
												this._checkDoubleTap(e);
										},
									},
									{
										key: '_onRightArrowKeydown',
										value: function (e) {
											switch (e.keyCode) {
												case 9:
													if (e.shiftKey) break;
													e.preventDefault(), this._focusFullscreenBtn();
											}
										},
									},
									{
										key: '_onFullscreenBtnKeydown',
										value: function (e) {
											switch (e.keyCode) {
												case 9:
													if (!e.shiftKey) break;
													e.preventDefault(), this._focusRightArrow();
											}
										},
									},
									{
										key: '_onKeyup',
										value: function (e) {
											switch ((this._resetToolsToggler(), e.keyCode)) {
												case 39:
													h ? this.slide('left') : this.slide();
													break;
												case 37:
													h ? this.slide() : this.slide('left');
													break;
												case 27:
													this.close();
													break;
												case 36:
													this.slide('first');
													break;
												case 35:
													this.slide('last');
													break;
												case 38:
													this.zoomIn();
													break;
												case 40:
													this.zoomOut();
											}
										},
									},
									{
										key: '_focusFullscreenBtn',
										value: function () {
											var e = this;
											setTimeout(function () {
												e._fullscreenBtn.focus();
											}, 100);
										},
									},
									{
										key: '_focusRightArrow',
										value: function () {
											this._rightArrow.focus();
										},
									},
									{
										key: '_moveImg',
										value: function (e) {
											1 !== this._zoom ||
												e !== this.currentImg ||
												this._images.length <= 1 ||
												(0 < (e = this._positionX - this._originalPositionX)
													? h
														? this.slide()
														: this.slide('left')
													: e < 0 && (h ? this.slide('left') : this.slide()));
										},
									},
									{
										key: '_checkDoubleTap',
										value: function (e) {
											var t = this;
											clearTimeout(this._doubleTapTimer);
											var n = new Date().getTime() - this._tapTime;
											0 < this._tapCounter && n < 500
												? (this._onDoubleClick(e),
												  (this._doubleTapTimer = setTimeout(function () {
														(t._tapTime = new Date().getTime()),
															(t._tapCounter = 0);
												  }, 300)))
												: (this._tapCounter++,
												  (this._tapTime = new Date().getTime()));
										},
									},
									{
										key: '_resetDoubleTap',
										value: function () {
											(this._tapTime = 0),
												(this._tapCounter = 0),
												clearTimeout(this._doubleTapTimer);
										},
									},
									{
										key: '_onDoubleClick',
										value: function (e) {
											e.touches || this._setNewPositionOnZoomIn(e),
												1 !== this._zoom
													? this._restoreDefaultZoom()
													: this.zoomIn();
										},
									},
									{
										key: '_onZoom',
										value: function (e) {
											0 < e.deltaY
												? this.zoomOut()
												: 3 <= this._zoom ||
												  (this._setNewPositionOnZoomIn(e), this.zoomIn());
										},
									},
									{
										key: '_onBackdropClick',
										value: function (e) {
											this._resetToolsToggler(),
												'DIV' === e.target.tagName && this.close();
										},
									},
									{
										key: '_setNewPositionOnZoomIn',
										value: function (e) {
											var t = this;
											clearTimeout(this._zoomTimer),
												(this._positionX =
													window.innerWidth / 2 - e.offsetX - 50),
												(this._positionY =
													window.innerHeight / 2 - e.offsetY - 50),
												(this.currentImg.style.transition =
													'all 0.5s ease-out'),
												(this.currentImg.style.left = ''.concat(
													this._positionX,
													'px'
												)),
												(this.currentImg.style.top = ''.concat(
													this._positionY,
													'px'
												)),
												(this._zoomTimer = setTimeout(function () {
													t.currentImg.style.transition = 'none';
												}, 500));
										},
									},
									{
										key: '_resetToolsToggler',
										value: function () {
											this._showTools(),
												clearTimeout(this._toolsToggleTimer),
												this._setToolsToggleTimout();
										},
									},
									{
										key: '_setToolsToggleTimout',
										value: function () {
											var e = this;
											this._toolsToggleTimer = setTimeout(function () {
												e._hideTools(), clearTimeout(e._toolsToggleTimer);
											}, 4e3);
										},
									},
									{
										key: '_hideTools',
										value: function () {
											F.style(this._galleryToolbar, { opacity: 0 }),
												F.style(this._leftArrowWrapper, { opacity: 0 }),
												F.style(this._rightArrowWrapper, { opacity: 0 });
										},
									},
									{
										key: '_showTools',
										value: function () {
											F.style(this._galleryToolbar, { opacity: 1 }),
												F.style(this._leftArrowWrapper, { opacity: 1 }),
												F.style(this._rightArrowWrapper, { opacity: 1 });
										},
									},
									{
										key: '_disableScroll',
										value: function () {
											F.addClass(document.body, 'disabled-scroll'),
												document.documentElement.scrollHeight >
													document.documentElement.clientHeight &&
													F.addClass(document.body, 'replace-scrollbar');
										},
									},
									{
										key: '_enableScroll',
										value: function () {
											setTimeout(function () {
												F.removeClass(document.body, 'disabled-scroll'),
													F.removeClass(document.body, 'replace-scrollbar');
											}, 300);
										},
									},
									{
										key: '_animationStart',
										value: function () {
											var e = this;
											(this._animating = !0),
												setTimeout(function () {
													e._animating = !1;
												}, 400);
										},
									},
									{
										key: '_restoreDefaultZoom',
										value: function () {
											1 !== this._zoom &&
												((this._zoom = 1),
												F.style(this.currentImg.parentNode, {
													transform: 'scale('.concat(this._zoom, ')'),
												}),
												this._updateZoomBtn(),
												this._updateImgPosition());
										},
									},
									{
										key: '_restoreDefaultFullscreen',
										value: function () {
											this._fullscreen && this.toggleFullscreen();
										},
									},
									{
										key: '_restoreDefaultPosition',
										value: function () {
											var e = this;
											clearTimeout(this._zoomTimer);
											var t = this.currentImg;
											F.style(this.currentImg.parentNode, { left: 0, top: 0 }),
												F.style(this.currentImg, {
													transition: 'all 0.5s ease-out',
													left: 0,
													top: 0,
												}),
												this._calculateImgSize(t),
												setTimeout(function () {
													F.style(e.currentImg, { transition: 'none' });
												}, 500);
										},
									},
									{
										key: '_triggerEvents',
										value:
											((i = Ru(
												regeneratorRuntime.mark(function e(t, n) {
													var i = this;
													return regeneratorRuntime.wrap(
														function (e) {
															for (;;)
																switch ((e.prev = e.next)) {
																	case 0:
																		if (
																			(H.trigger(
																				this._element,
																				''.concat(t, '.mdb.lightbox')
																			),
																			n)
																		)
																			return (
																				(e.next = 4),
																				setTimeout(function () {
																					H.trigger(
																						i._element,
																						''.concat(n, '.mdb.lightbox')
																					);
																				}, 505)
																			);
																		e.next = 4;
																		break;
																	case 4:
																	case 'end':
																		return e.stop();
																}
														},
														e,
														this
													);
												})
											)),
											function (e, t) {
												return i.apply(this, arguments);
											}),
									},
									{
										key: 'activeImg',
										get: function () {
											return this._activeImg;
										},
									},
									{
										key: 'currentImg',
										get: function () {
											return V.findOne('.active', this._galleryContent);
										},
									},
									{
										key: 'options',
										get: function () {
											var e = Hu(
												Hu(Hu({}, Ju), F.getDataAttributes(this._element)),
												this._options
											);
											return s(Wu, e, Xu), e;
										},
									},
								]),
								(n = [
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Fu);
										},
									},
									{
										key: 'toggle',
										value: function () {
											return function (e) {
												var t = V.closest(e.target, '.'.concat(Bu));
												(r.getInstance(t) || new r(t)).open(e);
											};
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, Fu),
													t = 'object' === Pu(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return Wu;
										},
									},
								]),
								t && Nu(e.prototype, t),
								n && Nu(e, n),
								r
							);
						})();
					V.find('.'.concat(Bu)).forEach(function (e) {
						return new qu(e);
					}),
						H.on(document, 'click', Uu, qu.toggle()),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Wu]),
								(t.fn[Wu] = qu.jQueryInterface),
								(t.fn[Wu].Constructor = qu),
								(t.fn[Wu].noConflict = function () {
									return (t.fn[Wu] = e), qu.jQueryInterface;
								}));
						});
					var Ku = qu;
					function Gu(e) {
						return (Gu =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Qu(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function $u(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Qu(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Qu(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Zu(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var ec = 'rating',
						tc = 'mdb.rating',
						Ve = '.'.concat(tc),
						nc = {
							tooltip: 'string',
							value: '(string|number)',
							readonly: 'boolean',
							after: 'string',
							before: 'string',
							dynamic: 'boolean',
						},
						ic = {
							tooltip: 'top',
							value: '',
							readonly: !1,
							after: '',
							before: '',
							dynamic: !1,
						},
						rc = 'onSelect'.concat(Ve),
						oc = 'onHover'.concat(Ve),
						ac = 'keyup'.concat(Ve),
						sc = 'focusout'.concat(Ve),
						lc = 'keydown'.concat(Ve),
						uc = 'mousedown'.concat(Ve),
						cc = (function () {
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._icons = V.find('i', this._element)),
									(this._options = this._getConfig(t)),
									(this._index = -1),
									(this._savedIndex = null),
									(this._originalClassList = []),
									(this._fn = {}),
									(this._tooltips = []),
									this._element && (m.setData(e, tc, this), this._init());
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'autoInit',
										value: function (e) {
											return new r(e);
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, tc),
													t = 'object' === Gu(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, tc);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return ec;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											var n = this;
											m.removeData(this._element, tc),
												this._options.readonly ||
													(H.off(this._element, ac),
													H.off(this._element, sc),
													H.off(this._element, lc),
													this._element.removeEventListener(
														'mouseleave',
														this._fn.mouseleave
													),
													this._icons.forEach(function (e, t) {
														H.off(e, uc),
															e.removeEventListener(
																'mouseenter',
																n._fn.mouseenter[t]
															);
													}),
													this._tooltips.forEach(function (e) {
														e.dispose();
													}),
													this._element.removeAttribute('tabIndex')),
												(this._element = null);
										},
									},
									{
										key: '_init',
										value: function () {
											this._options.readonly ||
												(this._bindMouseEnter(),
												this._bindMouseLeave(),
												this._bindMouseDown(),
												this._bindKeyDown(),
												this._bindKeyUp(),
												this._bindFocusLost()),
												this._options.dynamic && this._saveOriginalClassList(),
												this._setCustomText(),
												this._setCustomColor(),
												this._setToolTips(),
												this._options.value &&
													((this._index = this._options.value - 1),
													this._updateRating(this._index));
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._element);
											return (e = $u($u($u({}, ic), t), e)), s(ec, e, nc), e;
										},
									},
									{
										key: '_bindMouseEnter',
										value: function () {
											var n = this;
											(this._fn.mouseenter = []),
												this._icons.forEach(function (t, e) {
													t.addEventListener(
														'mouseenter',
														(n._fn.mouseenter[e] = function (e) {
															(n._index = n._icons.indexOf(e.target)),
																n._updateRating(n._index),
																n._triggerEvents(t, oc);
														})
													);
												});
										},
									},
									{
										key: '_bindMouseLeave',
										value: function () {
											var e = this;
											this._element.addEventListener(
												'mouseleave',
												(this._fn.mouseleave = function () {
													null !== e._savedIndex
														? (e._updateRating(e._savedIndex),
														  (e._index = e._savedIndex))
														: ((e._index = -1), e._clearRating());
												})
											);
										},
									},
									{
										key: '_bindMouseDown',
										value: function () {
											var t = this;
											this._icons.forEach(function (e) {
												H.on(e, uc, function () {
													t._setElementOutline('none'),
														(t._savedIndex = t._index),
														t._triggerEvents(e, rc);
												});
											});
										},
									},
									{
										key: '_bindKeyDown',
										value: function () {
											var t = this;
											(this._element.tabIndex = 0),
												H.on(this._element, lc, function (e) {
													return t._updateAfterKeyDown(e);
												});
										},
									},
									{
										key: '_bindKeyUp',
										value: function () {
											var e = this;
											H.on(this._element, ac, function () {
												return e._setElementOutline('auto');
											});
										},
									},
									{
										key: '_bindFocusLost',
										value: function () {
											var e = this;
											H.on(this._element, sc, function () {
												return e._setElementOutline('none');
											});
										},
									},
									{
										key: '_setElementOutline',
										value: function (e) {
											this._element.style.outline = e;
										},
									},
									{
										key: '_triggerEvents',
										value: function (e, t) {
											H.trigger(e, t, { value: this._index + 1 });
										},
									},
									{
										key: '_updateAfterKeyDown',
										value: function (e) {
											var t = this._icons.length - 1,
												n = this._index;
											'ArrowRight' === e.key &&
												this._index < t &&
												(this._index += 1),
												'ArrowLeft' === e.key &&
													-1 < this._index &&
													--this._index,
												n !== this._index &&
													((this._savedIndex = this._index),
													this._updateRating(this._savedIndex),
													this._triggerEvents(
														this._icons[this._savedIndex],
														rc
													));
										},
									},
									{
										key: '_updateRating',
										value: function (n) {
											this._clearRating(),
												this._options.dynamic && this._restoreOriginalIcon(n),
												this._icons.forEach(function (e, t) {
													t <= n &&
														(e.classList.add('fas', 'active'),
														e.classList.remove('far'));
												});
										},
									},
									{
										key: '_clearRating',
										value: function () {
											var n = this;
											this._icons.forEach(function (e, t) {
												n._options.dynamic
													? (e.classList = n._originalClassList[t])
													: (e.classList.remove('fas', 'active'),
													  e.classList.add('far'));
											});
										},
									},
									{
										key: '_setToolTips',
										value: function () {
											var i = this;
											this._icons.forEach(function (e, t) {
												var n = F.getDataAttribute(e, 'toggle');
												e.title &&
													!n &&
													(F.setDataAttribute(e, 'toggle', 'tooltip'),
													(i._tooltips[t] = new _o(e, {
														placement: i._options.tooltip,
													})));
											});
										},
									},
									{
										key: '_setCustomText',
										value: function () {
											this._icons.forEach(function (e) {
												var t = F.getDataAttribute(e, 'after'),
													n = F.getDataAttribute(e, 'before');
												t && e.insertAdjacentHTML('afterEnd', t),
													n && e.insertAdjacentHTML('beforeBegin', n);
											});
										},
									},
									{
										key: '_setCustomColor',
										value: function () {
											this._icons.forEach(function (e) {
												var t = F.getDataAttribute(e, 'color');
												t && (e.style.color = t);
											});
										},
									},
									{
										key: '_saveOriginalClassList',
										value: function () {
											var t = this;
											this._icons.forEach(function (e) {
												e = e.classList.value;
												t._originalClassList.push(e);
											});
										},
									},
									{
										key: '_restoreOriginalIcon',
										value: function (n) {
											var i = this._originalClassList[n],
												r = F.getDataAttribute(this._icons[n], 'color');
											this._icons.forEach(function (e, t) {
												t <= n && ((e.classList = i), (e.style.color = r));
											});
										},
									},
								]) && Zu(e.prototype, t),
								n && Zu(e, n),
								r
							);
						})();
					V.find('[data-mdb-toggle="rating"]').forEach(function (e) {
						cc.autoInit(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[ec]),
								(t.fn[ec] = cc.jQueryInterface),
								(t.fn[ec].Constructor = cc),
								(t.fn[ec].noConflict = function () {
									return (t.fn[ec] = e), cc.jQueryInterface;
								}));
						});
					var dc = cc;
					n(115), n(316);
					/*!
					 * perfect-scrollbar v1.5.0
					 * Copyright 2020 Hyunje Jun, MDBootstrap and Contributors
					 * Licensed under MIT
					 */
					function fc(e) {
						return getComputedStyle(e);
					}
					function hc(e, t) {
						for (var n in t) {
							var i = t[n];
							'number' == typeof i && (i += 'px'), (e.style[n] = i);
						}
						return e;
					}
					function pc(e) {
						var t = document.createElement('div');
						return (t.className = e), t;
					}
					var mc =
						'undefined' != typeof Element &&
						(Element.prototype.matches ||
							Element.prototype.webkitMatchesSelector ||
							Element.prototype.mozMatchesSelector ||
							Element.prototype.msMatchesSelector);
					function _c(e, t) {
						if (!mc) throw new Error('No element matching method supported');
						return mc.call(e, t);
					}
					function vc(e) {
						e.remove ? e.remove() : e.parentNode && e.parentNode.removeChild(e);
					}
					function yc(e, t) {
						return Array.prototype.filter.call(e.children, function (e) {
							return _c(e, t);
						});
					}
					var gc = {
							main: 'ps',
							rtl: 'ps__rtl',
							element: {
								thumb: function (e) {
									return 'ps__thumb-' + e;
								},
								rail: function (e) {
									return 'ps__rail-' + e;
								},
								consuming: 'ps__child--consume',
							},
							state: {
								focus: 'ps--focus',
								clicking: 'ps--clicking',
								active: function (e) {
									return 'ps--active-' + e;
								},
								scrolling: function (e) {
									return 'ps--scrolling-' + e;
								},
							},
						},
						bc = { x: null, y: null };
					function kc(e, t) {
						var n = e.element.classList,
							e = gc.state.scrolling(t);
						n.contains(e) ? clearTimeout(bc[t]) : n.add(e);
					}
					function wc(e, t) {
						bc[t] = setTimeout(function () {
							return (
								e.isAlive && e.element.classList.remove(gc.state.scrolling(t))
							);
						}, e.settings.scrollingThreshold);
					}
					function Mc(e) {
						(this.element = e), (this.handlers = {});
					}
					t = { isEmpty: { configurable: !0 } };
					(Mc.prototype.bind = function (e, t) {
						void 0 === this.handlers[e] && (this.handlers[e] = []),
							this.handlers[e].push(t),
							this.element.addEventListener(e, t, !1);
					}),
						(Mc.prototype.unbind = function (t, n) {
							var i = this;
							this.handlers[t] = this.handlers[t].filter(function (e) {
								return (
									!(!n || e === n) ||
									(i.element.removeEventListener(t, e, !1), !1)
								);
							});
						}),
						(Mc.prototype.unbindAll = function () {
							for (var e in this.handlers) this.unbind(e);
						}),
						(t.isEmpty.get = function () {
							var t = this;
							return Object.keys(this.handlers).every(function (e) {
								return 0 === t.handlers[e].length;
							});
						}),
						Object.defineProperties(Mc.prototype, t);
					function Lc() {
						this.eventElements = [];
					}
					function xc(e) {
						if ('function' == typeof window.CustomEvent)
							return new CustomEvent(e);
						var t = document.createEvent('CustomEvent');
						return t.initCustomEvent(e, !1, !1, void 0), t;
					}
					function Dc(e, t, n, i, r) {
						var o, a, s, l, u, c;
						if (
							(void 0 === i && (i = !0), void 0 === r && (r = !1), 'top' === t)
						)
							c = [
								'contentHeight',
								'containerHeight',
								'scrollTop',
								'y',
								'up',
								'down',
							];
						else {
							if ('left' !== t)
								throw new Error('A proper axis should be provided');
							c = [
								'contentWidth',
								'containerWidth',
								'scrollLeft',
								'x',
								'left',
								'right',
							];
						}
						(o = e),
							(a = n),
							(l = i),
							(u = r),
							(t = (s = c)[0]),
							(e = s[1]),
							(n = s[2]),
							(i = s[3]),
							(r = s[4]),
							(c = s[5]),
							void 0 === l && (l = !0),
							void 0 === u && (u = !1),
							(s = o.element),
							(o.reach[i] = null),
							s[n] < 1 && (o.reach[i] = 'start'),
							s[n] > o[t] - o[e] - 1 && (o.reach[i] = 'end'),
							a &&
								(s.dispatchEvent(xc('ps-scroll-' + i)),
								a < 0
									? s.dispatchEvent(xc('ps-scroll-' + r))
									: 0 < a && s.dispatchEvent(xc('ps-scroll-' + c)),
								l &&
									(function (e, t) {
										kc(e, t), wc(e, t);
									})(o, i)),
							o.reach[i] &&
								(a || u) &&
								s.dispatchEvent(xc('ps-' + i + '-reach-' + o.reach[i]));
					}
					function Sc(e) {
						return parseInt(e, 10) || 0;
					}
					(Lc.prototype.eventElement = function (t) {
						var e = this.eventElements.filter(function (e) {
							return e.element === t;
						})[0];
						return e || ((e = new Mc(t)), this.eventElements.push(e)), e;
					}),
						(Lc.prototype.bind = function (e, t, n) {
							this.eventElement(e).bind(t, n);
						}),
						(Lc.prototype.unbind = function (e, t, n) {
							e = this.eventElement(e);
							e.unbind(t, n),
								e.isEmpty &&
									this.eventElements.splice(this.eventElements.indexOf(e), 1);
						}),
						(Lc.prototype.unbindAll = function () {
							this.eventElements.forEach(function (e) {
								return e.unbindAll();
							}),
								(this.eventElements = []);
						}),
						(Lc.prototype.once = function (e, t, n) {
							var i = this.eventElement(e),
								r = function (e) {
									i.unbind(t, r), n(e);
								};
							i.bind(t, r);
						});
					var Tc = {
						isWebKit:
							'undefined' != typeof document &&
							'WebkitAppearance' in document.documentElement.style,
						supportsTouch:
							'undefined' != typeof window &&
							('ontouchstart' in window ||
								('maxTouchPoints' in window.navigator &&
									0 < window.navigator.maxTouchPoints) ||
								(window.DocumentTouch &&
									document instanceof window.DocumentTouch)),
						supportsIePointer:
							'undefined' != typeof navigator && navigator.msMaxTouchPoints,
						isChrome:
							'undefined' != typeof navigator &&
							/Chrome/i.test(navigator && navigator.userAgent),
					};
					function Oc(e) {
						var t,
							n,
							i = e.element,
							r = Math.floor(i.scrollTop),
							o = i.getBoundingClientRect();
						(e.containerWidth = Math.ceil(o.width)),
							(e.containerHeight = Math.ceil(o.height)),
							(e.contentWidth = i.scrollWidth),
							(e.contentHeight = i.scrollHeight),
							i.contains(e.scrollbarXRail) ||
								(yc(i, gc.element.rail('x')).forEach(vc),
								i.appendChild(e.scrollbarXRail)),
							i.contains(e.scrollbarYRail) ||
								(yc(i, gc.element.rail('y')).forEach(vc),
								i.appendChild(e.scrollbarYRail)),
							!e.settings.suppressScrollX &&
							e.containerWidth + e.settings.scrollXMarginOffset < e.contentWidth
								? ((e.scrollbarXActive = !0),
								  (e.railXWidth = e.containerWidth - e.railXMarginWidth),
								  (e.railXRatio = e.containerWidth / e.railXWidth),
								  (e.scrollbarXWidth = Yc(
										e,
										Sc((e.railXWidth * e.containerWidth) / e.contentWidth)
								  )),
								  (e.scrollbarXLeft = Sc(
										((e.negativeScrollAdjustment + i.scrollLeft) *
											(e.railXWidth - e.scrollbarXWidth)) /
											(e.contentWidth - e.containerWidth)
								  )))
								: (e.scrollbarXActive = !1),
							!e.settings.suppressScrollY &&
							e.containerHeight + e.settings.scrollYMarginOffset <
								e.contentHeight
								? ((e.scrollbarYActive = !0),
								  (e.railYHeight = e.containerHeight - e.railYMarginHeight),
								  (e.railYRatio = e.containerHeight / e.railYHeight),
								  (e.scrollbarYHeight = Yc(
										e,
										Sc((e.railYHeight * e.containerHeight) / e.contentHeight)
								  )),
								  (e.scrollbarYTop = Sc(
										(r * (e.railYHeight - e.scrollbarYHeight)) /
											(e.contentHeight - e.containerHeight)
								  )))
								: (e.scrollbarYActive = !1),
							e.scrollbarXLeft >= e.railXWidth - e.scrollbarXWidth &&
								(e.scrollbarXLeft = e.railXWidth - e.scrollbarXWidth),
							e.scrollbarYTop >= e.railYHeight - e.scrollbarYHeight &&
								(e.scrollbarYTop = e.railYHeight - e.scrollbarYHeight),
							(t = i),
							(o = { width: (n = e).railXWidth }),
							(r = Math.floor(t.scrollTop)),
							n.isRtl
								? (o.left =
										n.negativeScrollAdjustment +
										t.scrollLeft +
										n.containerWidth -
										n.contentWidth)
								: (o.left = t.scrollLeft),
							n.isScrollbarXUsingBottom
								? (o.bottom = n.scrollbarXBottom - r)
								: (o.top = n.scrollbarXTop + r),
							hc(n.scrollbarXRail, o),
							(r = { top: r, height: n.railYHeight }),
							n.isScrollbarYUsingRight
								? n.isRtl
									? (r.right =
											n.contentWidth -
											(n.negativeScrollAdjustment + t.scrollLeft) -
											n.scrollbarYRight -
											n.scrollbarYOuterWidth -
											9)
									: (r.right = n.scrollbarYRight - t.scrollLeft)
								: n.isRtl
								? (r.left =
										n.negativeScrollAdjustment +
										t.scrollLeft +
										2 * n.containerWidth -
										n.contentWidth -
										n.scrollbarYLeft -
										n.scrollbarYOuterWidth)
								: (r.left = n.scrollbarYLeft + t.scrollLeft),
							hc(n.scrollbarYRail, r),
							hc(n.scrollbarX, {
								left: n.scrollbarXLeft,
								width: n.scrollbarXWidth - n.railBorderXWidth,
							}),
							hc(n.scrollbarY, {
								top: n.scrollbarYTop,
								height: n.scrollbarYHeight - n.railBorderYWidth,
							}),
							e.scrollbarXActive
								? i.classList.add(gc.state.active('x'))
								: (i.classList.remove(gc.state.active('x')),
								  (e.scrollbarXWidth = 0),
								  (e.scrollbarXLeft = 0),
								  (i.scrollLeft = !0 === e.isRtl ? e.contentWidth : 0)),
							e.scrollbarYActive
								? i.classList.add(gc.state.active('y'))
								: (i.classList.remove(gc.state.active('y')),
								  (e.scrollbarYHeight = 0),
								  (e.scrollbarYTop = 0),
								  (i.scrollTop = 0));
					}
					function Yc(e, t) {
						return (
							e.settings.minScrollbarLength &&
								(t = Math.max(t, e.settings.minScrollbarLength)),
							e.settings.maxScrollbarLength &&
								(t = Math.min(t, e.settings.maxScrollbarLength)),
							t
						);
					}
					function Cc(n, e) {
						var i = e[0],
							r = e[1],
							o = e[2],
							a = e[3],
							t = e[4],
							s = e[5],
							l = e[6],
							u = e[7],
							c = e[8],
							d = n.element,
							f = null,
							h = null,
							p = null;
						function m(e) {
							e.touches && e.touches[0] && (e[o] = e.touches[0].pageY),
								(d[l] = f + p * (e[o] - h)),
								kc(n, u),
								Oc(n),
								e.stopPropagation(),
								e.preventDefault();
						}
						function _() {
							wc(n, u),
								n[c].classList.remove(gc.state.clicking),
								n.event.unbind(n.ownerDocument, 'mousemove', m);
						}
						function v(e, t) {
							(f = d[l]),
								t && e.touches && (e[o] = e.touches[0].pageY),
								(h = e[o]),
								(p = (n[r] - n[i]) / (n[a] - n[s])),
								t
									? n.event.bind(n.ownerDocument, 'touchmove', m)
									: (n.event.bind(n.ownerDocument, 'mousemove', m),
									  n.event.once(n.ownerDocument, 'mouseup', _),
									  e.preventDefault()),
								n[c].classList.add(gc.state.clicking),
								e.stopPropagation();
						}
						n.event.bind(n[t], 'mousedown', function (e) {
							v(e);
						}),
							n.event.bind(n[t], 'touchstart', function (e) {
								v(e, !0);
							});
					}
					var jc = {
							'click-rail': function (n) {
								n.element,
									n.event.bind(n.scrollbarY, 'mousedown', function (e) {
										return e.stopPropagation();
									}),
									n.event.bind(n.scrollbarYRail, 'mousedown', function (e) {
										var t =
											e.pageY -
												window.pageYOffset -
												n.scrollbarYRail.getBoundingClientRect().top >
											n.scrollbarYTop
												? 1
												: -1;
										(n.element.scrollTop += t * n.containerHeight),
											Oc(n),
											e.stopPropagation();
									}),
									n.event.bind(n.scrollbarX, 'mousedown', function (e) {
										return e.stopPropagation();
									}),
									n.event.bind(n.scrollbarXRail, 'mousedown', function (e) {
										var t =
											e.pageX -
												window.pageXOffset -
												n.scrollbarXRail.getBoundingClientRect().left >
											n.scrollbarXLeft
												? 1
												: -1;
										(n.element.scrollLeft += t * n.containerWidth),
											Oc(n),
											e.stopPropagation();
									});
							},
							'drag-thumb': function (e) {
								Cc(e, [
									'containerWidth',
									'contentWidth',
									'pageX',
									'railXWidth',
									'scrollbarX',
									'scrollbarXWidth',
									'scrollLeft',
									'x',
									'scrollbarXRail',
								]),
									Cc(e, [
										'containerHeight',
										'contentHeight',
										'pageY',
										'railYHeight',
										'scrollbarY',
										'scrollbarYHeight',
										'scrollTop',
										'y',
										'scrollbarYRail',
									]);
							},
							keyboard: function (o) {
								var a = o.element;
								o.event.bind(o.ownerDocument, 'keydown', function (e) {
									if (
										!(
											(e.isDefaultPrevented && e.isDefaultPrevented()) ||
											e.defaultPrevented
										) &&
										(_c(a, ':hover') ||
											_c(o.scrollbarX, ':focus') ||
											_c(o.scrollbarY, ':focus'))
									) {
										var t,
											n =
												document.activeElement || o.ownerDocument.activeElement;
										if (n) {
											if ('IFRAME' === n.tagName)
												n = n.contentDocument.activeElement;
											else
												for (; n.shadowRoot; ) n = n.shadowRoot.activeElement;
											if (
												_c((t = n), 'input,[contenteditable]') ||
												_c(t, 'select,[contenteditable]') ||
												_c(t, 'textarea,[contenteditable]') ||
												_c(t, 'button,[contenteditable]')
											)
												return;
										}
										var i = 0,
											r = 0;
										switch (e.which) {
											case 37:
												i = e.metaKey
													? -o.contentWidth
													: e.altKey
													? -o.containerWidth
													: -30;
												break;
											case 38:
												r = e.metaKey
													? o.contentHeight
													: e.altKey
													? o.containerHeight
													: 30;
												break;
											case 39:
												i = e.metaKey
													? o.contentWidth
													: e.altKey
													? o.containerWidth
													: 30;
												break;
											case 40:
												r = e.metaKey
													? -o.contentHeight
													: e.altKey
													? -o.containerHeight
													: -30;
												break;
											case 32:
												r = e.shiftKey ? o.containerHeight : -o.containerHeight;
												break;
											case 33:
												r = o.containerHeight;
												break;
											case 34:
												r = -o.containerHeight;
												break;
											case 36:
												r = o.contentHeight;
												break;
											case 35:
												r = -o.contentHeight;
												break;
											default:
												return;
										}
										(o.settings.suppressScrollX && 0 !== i) ||
											(o.settings.suppressScrollY && 0 !== r) ||
											((a.scrollTop -= r),
											(a.scrollLeft += i),
											Oc(o),
											(function (e, t) {
												var n = Math.floor(a.scrollTop);
												if (0 === e) {
													if (!o.scrollbarYActive) return;
													if (
														(0 === n && 0 < t) ||
														(n >= o.contentHeight - o.containerHeight && t < 0)
													)
														return !o.settings.wheelPropagation;
												}
												if (((n = a.scrollLeft), 0 === t)) {
													if (!o.scrollbarXActive) return;
													if (
														(0 === n && e < 0) ||
														(n >= o.contentWidth - o.containerWidth && 0 < e)
													)
														return !o.settings.wheelPropagation;
												}
												return 1;
											})(i, r) && e.preventDefault());
									}
								});
							},
							wheel: function (l) {
								var u = l.element;
								function e(e) {
									var t,
										n,
										i,
										r,
										o =
											((i = (n = e).deltaX),
											(r = -1 * n.deltaY),
											(void 0 !== i && void 0 !== r) ||
												((i = (-1 * n.wheelDeltaX) / 6),
												(r = n.wheelDeltaY / 6)),
											n.deltaMode &&
												1 === n.deltaMode &&
												((i *= 10), (r *= 10)),
											i != i && r != r && ((i = 0), (r = n.wheelDelta)),
											n.shiftKey ? [-r, -i] : [i, r]),
										a = o[0],
										s = o[1];
									!(function (e, t, n) {
										if (!Tc.isWebKit && u.querySelector('select:focus'))
											return 1;
										if (u.contains(e))
											for (var i = e; i && i !== u; ) {
												if (i.classList.contains(gc.element.consuming))
													return 1;
												var r = fc(i);
												if (n && r.overflowY.match(/(scroll|auto)/)) {
													var o = i.scrollHeight - i.clientHeight;
													if (
														0 < o &&
														((0 < i.scrollTop && n < 0) ||
															(i.scrollTop < o && 0 < n))
													)
														return 1;
												}
												if (t && r.overflowX.match(/(scroll|auto)/)) {
													r = i.scrollWidth - i.clientWidth;
													if (
														0 < r &&
														((0 < i.scrollLeft && t < 0) ||
															(i.scrollLeft < r && 0 < t))
													)
														return 1;
												}
												i = i.parentNode;
											}
									})(e.target, a, s) &&
										((t = !1),
										l.settings.useBothWheelAxes
											? l.scrollbarYActive && !l.scrollbarXActive
												? (s
														? (u.scrollTop -= s * l.settings.wheelSpeed)
														: (u.scrollTop += a * l.settings.wheelSpeed),
												  (t = !0))
												: l.scrollbarXActive &&
												  !l.scrollbarYActive &&
												  (a
														? (u.scrollLeft += a * l.settings.wheelSpeed)
														: (u.scrollLeft -= s * l.settings.wheelSpeed),
												  (t = !0))
											: ((u.scrollTop -= s * l.settings.wheelSpeed),
											  (u.scrollLeft += a * l.settings.wheelSpeed)),
										Oc(l),
										(t =
											t ||
											((n = a),
											(i = s),
											(r = Math.floor(u.scrollTop)),
											(o = 0 === u.scrollTop),
											(a = r + u.offsetHeight === u.scrollHeight),
											(s = 0 === u.scrollLeft),
											(r = u.scrollLeft + u.offsetWidth === u.scrollWidth),
											!(r = Math.abs(i) > Math.abs(n) ? o || a : s || r) ||
												!l.settings.wheelPropagation)) &&
											!e.ctrlKey &&
											(e.stopPropagation(), e.preventDefault()));
								}
								void 0 !== window.onwheel
									? l.event.bind(u, 'wheel', e)
									: void 0 !== window.onmousewheel &&
									  l.event.bind(u, 'mousewheel', e);
							},
							touch: function (a) {
								var s, o, l, u, t;
								function c(e, t) {
									(s.scrollTop -= t), (s.scrollLeft -= e), Oc(a);
								}
								function d(e) {
									return e.targetTouches ? e.targetTouches[0] : e;
								}
								function f(e) {
									return (
										(!e.pointerType ||
											'pen' !== e.pointerType ||
											0 !== e.buttons) &&
										((e.targetTouches && 1 === e.targetTouches.length) ||
											!(
												!e.pointerType ||
												'mouse' === e.pointerType ||
												e.pointerType === e.MSPOINTER_TYPE_MOUSE
											))
									);
								}
								function e(e) {
									f(e) &&
										((e = d(e)),
										(o.pageX = e.pageX),
										(o.pageY = e.pageY),
										(l = new Date().getTime()),
										null !== t && clearInterval(t));
								}
								function n(e) {
									var t, n, i, r;
									f(e) &&
										((t =
											(r = { pageX: (i = d(e)).pageX, pageY: i.pageY }).pageX -
											o.pageX),
										(n = r.pageY - o.pageY),
										(function (e, t, n) {
											if (s.contains(e))
												for (var i = e; i && i !== s; ) {
													if (i.classList.contains(gc.element.consuming))
														return 1;
													var r = fc(i);
													if (n && r.overflowY.match(/(scroll|auto)/)) {
														var o = i.scrollHeight - i.clientHeight;
														if (
															0 < o &&
															((0 < i.scrollTop && n < 0) ||
																(i.scrollTop < o && 0 < n))
														)
															return 1;
													}
													if (t && r.overflowX.match(/(scroll|auto)/)) {
														r = i.scrollWidth - i.clientWidth;
														if (
															0 < r &&
															((0 < i.scrollLeft && t < 0) ||
																(i.scrollLeft < r && 0 < t))
														)
															return 1;
													}
													i = i.parentNode;
												}
										})(e.target, t, n) ||
											(c(t, n),
											(o = r),
											0 < (r = (i = new Date().getTime()) - l) &&
												((u.x = t / r), (u.y = n / r), (l = i)),
											(function (e, t) {
												var n = Math.floor(s.scrollTop),
													i = s.scrollLeft,
													r = Math.abs(e),
													o = Math.abs(t);
												if (r < o) {
													if (
														(t < 0 &&
															n === a.contentHeight - a.containerHeight) ||
														(0 < t && 0 === n)
													)
														return 0 === window.scrollY && 0 < t && Tc.isChrome;
												} else if (
													o < r &&
													((e < 0 && i === a.contentWidth - a.containerWidth) ||
														(0 < e && 0 === i))
												)
													return 1;
												return 1;
											})(t, n) && e.preventDefault()));
								}
								function i() {
									a.settings.swipeEasing &&
										(clearInterval(t),
										(t = setInterval(function () {
											a.isInitialized ||
											(!u.x && !u.y) ||
											(Math.abs(u.x) < 0.01 && Math.abs(u.y) < 0.01)
												? clearInterval(t)
												: (c(30 * u.x, 30 * u.y), (u.x *= 0.8), (u.y *= 0.8));
										}, 10)));
								}
								(Tc.supportsTouch || Tc.supportsIePointer) &&
									((s = a.element),
									(o = {}),
									(l = 0),
									(u = {}),
									(t = null),
									Tc.supportsTouch
										? (a.event.bind(s, 'touchstart', e),
										  a.event.bind(s, 'touchmove', n),
										  a.event.bind(s, 'touchend', i))
										: Tc.supportsIePointer &&
										  (window.PointerEvent
												? (a.event.bind(s, 'pointerdown', e),
												  a.event.bind(s, 'pointermove', n),
												  a.event.bind(s, 'pointerup', i))
												: window.MSPointerEvent &&
												  (a.event.bind(s, 'MSPointerDown', e),
												  a.event.bind(s, 'MSPointerMove', n),
												  a.event.bind(s, 'MSPointerUp', i))));
							},
						},
						Ve = function (e, t) {
							var n,
								i = this;
							if (
								(void 0 === t && (t = {}),
								'string' == typeof e && (e = document.querySelector(e)),
								!e || !e.nodeName)
							)
								throw new Error(
									'no element is specified to initialize PerfectScrollbar'
								);
							for (n in ((this.element = e).classList.add(gc.main),
							(this.settings = {
								handlers: [
									'click-rail',
									'drag-thumb',
									'keyboard',
									'wheel',
									'touch',
								],
								maxScrollbarLength: null,
								minScrollbarLength: null,
								scrollingThreshold: 1e3,
								scrollXMarginOffset: 0,
								scrollYMarginOffset: 0,
								suppressScrollX: !1,
								suppressScrollY: !1,
								swipeEasing: !0,
								useBothWheelAxes: !1,
								wheelPropagation: !0,
								wheelSpeed: 1,
							}),
							t))
								this.settings[n] = t[n];
							(this.containerWidth = null),
								(this.containerHeight = null),
								(this.contentWidth = null),
								(this.contentHeight = null);
							var r,
								o = function () {
									return e.classList.add(gc.state.focus);
								},
								a = function () {
									return e.classList.remove(gc.state.focus);
								};
							(this.isRtl = 'rtl' === fc(e).direction),
								!0 === this.isRtl && e.classList.add(gc.rtl),
								(this.isNegativeScroll =
									((r = e.scrollLeft),
									(e.scrollLeft = -1),
									(s = e.scrollLeft < 0),
									(e.scrollLeft = r),
									s)),
								(this.negativeScrollAdjustment = this.isNegativeScroll
									? e.scrollWidth - e.clientWidth
									: 0),
								(this.event = new Lc()),
								(this.ownerDocument = e.ownerDocument || document),
								(this.scrollbarXRail = pc(gc.element.rail('x'))),
								e.appendChild(this.scrollbarXRail),
								(this.scrollbarX = pc(gc.element.thumb('x'))),
								this.scrollbarXRail.appendChild(this.scrollbarX),
								this.scrollbarX.setAttribute('tabindex', 0),
								this.event.bind(this.scrollbarX, 'focus', o),
								this.event.bind(this.scrollbarX, 'blur', a),
								(this.scrollbarXActive = null),
								(this.scrollbarXWidth = null),
								(this.scrollbarXLeft = null);
							var s = fc(this.scrollbarXRail);
							(this.scrollbarXBottom = parseInt(s.bottom, 10)),
								isNaN(this.scrollbarXBottom)
									? ((this.isScrollbarXUsingBottom = !1),
									  (this.scrollbarXTop = Sc(s.top)))
									: (this.isScrollbarXUsingBottom = !0),
								(this.railBorderXWidth =
									Sc(s.borderLeftWidth) + Sc(s.borderRightWidth)),
								hc(this.scrollbarXRail, { display: 'block' }),
								(this.railXMarginWidth = Sc(s.marginLeft) + Sc(s.marginRight)),
								hc(this.scrollbarXRail, { display: '' }),
								(this.railXWidth = null),
								(this.railXRatio = null),
								(this.scrollbarYRail = pc(gc.element.rail('y'))),
								e.appendChild(this.scrollbarYRail),
								(this.scrollbarY = pc(gc.element.thumb('y'))),
								this.scrollbarYRail.appendChild(this.scrollbarY),
								this.scrollbarY.setAttribute('tabindex', 0),
								this.event.bind(this.scrollbarY, 'focus', o),
								this.event.bind(this.scrollbarY, 'blur', a),
								(this.scrollbarYActive = null),
								(this.scrollbarYHeight = null),
								(this.scrollbarYTop = null);
							o = fc(this.scrollbarYRail);
							(this.scrollbarYRight = parseInt(o.right, 10)),
								isNaN(this.scrollbarYRight)
									? ((this.isScrollbarYUsingRight = !1),
									  (this.scrollbarYLeft = Sc(o.left)))
									: (this.isScrollbarYUsingRight = !0),
								(this.scrollbarYOuterWidth = this.isRtl
									? Sc((a = fc((a = this.scrollbarY))).width) +
									  Sc(a.paddingLeft) +
									  Sc(a.paddingRight) +
									  Sc(a.borderLeftWidth) +
									  Sc(a.borderRightWidth)
									: null),
								(this.railBorderYWidth =
									Sc(o.borderTopWidth) + Sc(o.borderBottomWidth)),
								hc(this.scrollbarYRail, { display: 'block' }),
								(this.railYMarginHeight = Sc(o.marginTop) + Sc(o.marginBottom)),
								hc(this.scrollbarYRail, { display: '' }),
								(this.railYHeight = null),
								(this.railYRatio = null),
								(this.reach = {
									x:
										e.scrollLeft <= 0
											? 'start'
											: e.scrollLeft >= this.contentWidth - this.containerWidth
											? 'end'
											: null,
									y:
										e.scrollTop <= 0
											? 'start'
											: e.scrollTop >= this.contentHeight - this.containerHeight
											? 'end'
											: null,
								}),
								(this.isAlive = !0),
								this.settings.handlers.forEach(function (e) {
									return jc[e](i);
								}),
								(this.lastScrollTop = Math.floor(e.scrollTop)),
								(this.lastScrollLeft = e.scrollLeft),
								this.event.bind(this.element, 'scroll', function (e) {
									return i.onScroll(e);
								}),
								Oc(this);
						};
					(Ve.prototype.update = function () {
						this.isAlive &&
							((this.negativeScrollAdjustment = this.isNegativeScroll
								? this.element.scrollWidth - this.element.clientWidth
								: 0),
							hc(this.scrollbarXRail, { display: 'block' }),
							hc(this.scrollbarYRail, { display: 'block' }),
							(this.railXMarginWidth =
								Sc(fc(this.scrollbarXRail).marginLeft) +
								Sc(fc(this.scrollbarXRail).marginRight)),
							(this.railYMarginHeight =
								Sc(fc(this.scrollbarYRail).marginTop) +
								Sc(fc(this.scrollbarYRail).marginBottom)),
							hc(this.scrollbarXRail, { display: 'none' }),
							hc(this.scrollbarYRail, { display: 'none' }),
							Oc(this),
							Dc(this, 'top', 0, !1, !0),
							Dc(this, 'left', 0, !1, !0),
							hc(this.scrollbarXRail, { display: '' }),
							hc(this.scrollbarYRail, { display: '' }));
					}),
						(Ve.prototype.onScroll = function () {
							this.isAlive &&
								(Oc(this),
								Dc(this, 'top', this.element.scrollTop - this.lastScrollTop),
								Dc(this, 'left', this.element.scrollLeft - this.lastScrollLeft),
								(this.lastScrollTop = Math.floor(this.element.scrollTop)),
								(this.lastScrollLeft = this.element.scrollLeft));
						}),
						(Ve.prototype.destroy = function () {
							this.isAlive &&
								(this.event.unbindAll(),
								vc(this.scrollbarX),
								vc(this.scrollbarY),
								vc(this.scrollbarXRail),
								vc(this.scrollbarYRail),
								this.removePsClasses(),
								(this.element = null),
								(this.scrollbarX = null),
								(this.scrollbarY = null),
								(this.scrollbarXRail = null),
								(this.scrollbarYRail = null),
								(this.isAlive = !1));
						}),
						(Ve.prototype.removePsClasses = function () {
							this.element.className = this.element.className
								.split(' ')
								.filter(function (e) {
									return !e.match(/^ps([-_].+|)$/);
								})
								.join(' ');
						});
					var Ec = Ve;
					function Pc(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Ac = (function () {
							function r(e) {
								var t = this,
									n =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {},
									i = 2 < arguments.length ? arguments[2] : void 0;
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._toggler = i),
									(this._event = n.event || 'blur'),
									(this._condition =
										n.condition ||
										function () {
											return !0;
										}),
									(this._selector =
										n.selector ||
										'button, a, input, select, textarea, [tabindex]:not([tabindex="-1"])'),
									(this._onlyVisible = n.onlyVisible || !1),
									(this._focusableElements = []),
									(this._firstElement = null),
									(this._lastElement = null),
									(this.handler = function (e) {
										t._condition(e) &&
											e.target === t._lastElement &&
											(e.preventDefault(), t._firstElement.focus());
									});
							}
							var e, t, n;
							return (
								(e = r),
								(t = [
									{
										key: 'trap',
										value: function () {
											this._setElements(), this._init(), this._setFocusTrap();
										},
									},
									{
										key: 'disable',
										value: function () {
											var t = this;
											this._focusableElements.forEach(function (e) {
												e.removeEventListener(t._event, t.handler);
											}),
												this._toggler && this._toggler.focus();
										},
									},
									{
										key: 'update',
										value: function () {
											this._setElements(), this._setFocusTrap();
										},
									},
									{
										key: '_init',
										value: function () {
											function t(e) {
												n._firstElement &&
													'Tab' === e.key &&
													!n._focusableElements.includes(e.target) &&
													(e.preventDefault(),
													n._firstElement.focus(),
													window.removeEventListener('keydown', t));
											}
											var n = this;
											window.addEventListener('keydown', t);
										},
									},
									{
										key: '_filterVisible',
										value: function (e) {
											return e.filter(function (e) {
												if (!f(e)) return !1;
												for (
													var t = V.parents(e, '*'), n = 0;
													n < t.length;
													n++
												) {
													var i = window.getComputedStyle(t[n]);
													if (
														i &&
														('none' === i.display || 'hidden' === i.visibility)
													)
														return !1;
												}
												return !0;
											});
										},
									},
									{
										key: '_setElements',
										value: function () {
											(this._focusableElements = V.find(
												this._selector,
												this._element
											)),
												this._onlyVisible &&
													(this._focusableElements = this._filterVisible(
														this._focusableElements
													)),
												(this._firstElement = this._focusableElements[0]),
												(this._lastElement =
													this._focusableElements[
														this._focusableElements.length - 1
													]);
										},
									},
									{
										key: '_setFocusTrap',
										value: function () {
											var n = this;
											this._focusableElements.forEach(function (e, t) {
												t === n._focusableElements.length - 1
													? e.addEventListener(n._event, n.handler)
													: e.removeEventListener(n._event, n.handler);
											});
										},
									},
								]) && Pc(e.prototype, t),
								n && Pc(e, n),
								r
							);
						})(),
						Hc = 27;
					function Ic(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Rc(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Rc(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Rc(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function Nc(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Wc = (function () {
						function t() {
							!(function (e) {
								if (!(e instanceof t))
									throw new TypeError('Cannot call a class as a function');
							})(this);
						}
						var e, n, i;
						return (
							(e = t),
							(n = [
								{
									key: '_getCoordinates',
									value: function (e) {
										e = Ic(e.touches, 1)[0];
										return { x: e.clientX, y: e.clientY };
									},
								},
								{
									key: '_getDirection',
									value: function (e) {
										return {
											x: {
												direction: e.x < 0 ? 'left' : 'right',
												value: Math.abs(e.x),
											},
											y: {
												direction: e.y < 0 ? 'up' : 'down',
												value: Math.abs(e.y),
											},
										};
									},
								},
							]) && Nc(e.prototype, n),
							i && Nc(e, i),
							t
						);
					})();
					function Fc(e) {
						return (Fc =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Bc(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function zc(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Bc(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Bc(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Vc(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Uc(e, t) {
						return (Uc =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Xc(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Jc(n);
							return (
								(e = i
									? ((e = Jc(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Fc(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Jc(e) {
						return (Jc = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var qc = { threshold: 10, direction: 'all' },
						Kc = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Uc(e, t);
							})(r, Wc);
							var e,
								t,
								n,
								i = Xc(r);
							function r(e, t) {
								var n;
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((n = i.call(this))._element = e),
									(n._startPosition = null),
									(n._options = zc(zc({}, qc), t)),
									n
								);
							}
							return (
								(e = r),
								(t = [
									{
										key: 'handleTouchStart',
										value: function (e) {
											this._startPosition = this._getCoordinates(e);
										},
									},
									{
										key: 'handleTouchMove',
										value: function (e) {
											if (this._startPosition) {
												(e = this._getCoordinates(e)),
													(e = {
														x: e.x - this._startPosition.x,
														y: e.y - this._startPosition.y,
													}),
													(e = this._getDirection(e));
												if ('all' === this._options.direction) {
													if (
														e.y.value < this._options.threshold &&
														e.x.value < this._options.threshold
													)
														return;
													var t = (e.y.value > e.x.value ? e.y : e.x).direction;
													return (
														H.trigger(this._element, 'swipe'.concat(t)),
														H.trigger(this._element, 'swipe', { direction: t }),
														void (this._startPosition = null)
													);
												}
												t =
													'left' === this._options.direction ||
													'right' === this._options
														? 'x'
														: 'y';
												e[t].direction === this._options.direction &&
													e[t].value > this._options.threshold &&
													(H.trigger(
														this._element,
														'swipe'.concat(e[t].direction)
													),
													(this._startPosition = null));
											}
										},
									},
									{
										key: 'handleTouchEnd',
										value: function () {
											this._startPosition = null;
										},
									},
								]) && Vc(e.prototype, t),
								n && Vc(e, n),
								r
							);
						})();
					function Gc(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Qc = (function () {
						function i(e) {
							var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: 'swipe',
								n =
									2 < arguments.length && void 0 !== arguments[2]
										? arguments[2]
										: {};
							!(function (e) {
								if (!(e instanceof i))
									throw new TypeError('Cannot call a class as a function');
							})(this),
								(this._element = e),
								(this._event = t),
								(this.swipe = new Kc(e, n)),
								(this._touchStartHandler = this._handleTouchStart.bind(this)),
								(this._touchMoveHandler = this._handleTouchMove.bind(this)),
								(this._touchEndHandler = this._handleTouchEnd.bind(this));
						}
						var e, t, n;
						return (
							(e = i),
							(t = [
								{
									key: 'dispose',
									value: function () {
										this._element.removeEventListener(
											'touchstart',
											this._touchStartHandler
										),
											this._element.removeEventListener(
												'touchmove',
												this._touchMoveHandler
											),
											window.removeEventListener(
												'touchend',
												this._touchEndHandler
											);
									},
								},
								{
									key: 'init',
									value: function () {
										var t = this;
										this._element.addEventListener('touchstart', function (e) {
											return t._handleTouchStart(e);
										}),
											this._element.addEventListener('touchmove', function (e) {
												return t._handleTouchMove(e);
											}),
											window.addEventListener('touchend', function (e) {
												return t._handleTouchEnd(e);
											});
									},
								},
								{
									key: '_handleTouchStart',
									value: function (e) {
										this[this._event].handleTouchStart(e);
									},
								},
								{
									key: '_handleTouchMove',
									value: function (e) {
										this[this._event].handleTouchMove(e);
									},
								},
								{
									key: '_handleTouchEnd',
									value: function (e) {
										this[this._event].handleTouchEnd(e);
									},
								},
							]) && Gc(e.prototype, t),
							n && Gc(e, n),
							i
						);
					})();
					function $c(e) {
						return ($c =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Zc(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function ed(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Zc(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Zc(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function td(e, t, n, i, r, o, a) {
						try {
							var s = e[o](a),
								l = s.value;
						} catch (e) {
							return void n(e);
						}
						s.done ? t(l) : Promise.resolve(l).then(i, r);
					}
					function nd(s) {
						return function () {
							var e = this,
								a = arguments;
							return new Promise(function (t, n) {
								var i = s.apply(e, a);
								function r(e) {
									td(i, t, n, r, o, 'next', e);
								}
								function o(e) {
									td(i, t, n, r, o, 'throw', e);
								}
								r(void 0);
							});
						};
					}
					function id(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return rd(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return rd(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function rd(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function od(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var ad = 'sidenav',
						sd = 'mdb.sidenav',
						ld = 'rotate-icon',
						ud = '[data-mdb-toggle="sidenav"]',
						cd = '.sidenav-collapse',
						dd = '.sidenav-link',
						fd = h ? 100 : -100,
						hd = h ? -100 : 100,
						pd = 0,
						md = {
							accordion: '(boolean)',
							backdrop: '(boolean)',
							backdropClass: '(null|string)',
							closeOnEsc: '(boolean)',
							color: '(string)',
							content: '(null|string)',
							expandable: '(boolean)',
							expandOnHover: '(boolean)',
							focusTrap: '(boolean)',
							hidden: '(boolean)',
							mode: '(string)',
							scrollContainer: '(null|string)',
							slim: '(boolean)',
							slimCollapsed: '(boolean)',
							slimWidth: '(number)',
							position: '(string)',
							right: '(boolean)',
							transitionDuration: '(number)',
							width: '(number)',
						},
						_d = {
							accordion: !1,
							backdrop: !0,
							backdropClass: null,
							closeOnEsc: !0,
							color: 'primary',
							content: null,
							expandable: !0,
							expandOnHover: !1,
							focusTrap: !0,
							hidden: !0,
							mode: 'over',
							scrollContainer: null,
							slim: !1,
							slimCollapsed: !1,
							slimWidth: 70,
							position: 'fixed',
							right: !1,
							transitionDuration: 300,
							width: 240,
						},
						vd = (function () {
							function r(e) {
								var t = this,
									n =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {};
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = n),
									pd++,
									(this._ID = pd),
									(this._backdrop = null),
									(this._content = null),
									(this._initialContentStyle = null),
									(this._slimCollapsed = !1),
									(this._activeNode = null),
									(this._tempSlim = !1),
									(this._focusTrap = null),
									(this._perfectScrollbar = null),
									(this._touch = null),
									(this.escHandler = function (e) {
										e.keyCode === Hc &&
											t.toggler &&
											f(t.toggler) &&
											(t._update(!1), H.off(window, 'keydown', t.escHandler));
									}),
									(this.hashHandler = function () {
										t._setActiveElements();
									}),
									e && (m.setData(e, sd, this), this._setup());
							}
							var e, t, n, i, o;
							return (
								(e = r),
								(t = [
									{
										key: 'changeMode',
										value: function (e) {
											this._setMode(e);
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._backdrop && this._removeBackdrop(),
												H.off(window, 'keydown', this.escHandler),
												H.off(window, 'hashchange', this.hashHandler),
												this._touch.dispose(),
												m.removeData(this._element, sd),
												(this._element = null);
										},
									},
									{
										key: 'hide',
										value: function () {
											this._setVisibility(!1), this._update(!1);
										},
									},
									{
										key: 'show',
										value: function () {
											this._setVisibility(!0), this._update(!0);
										},
									},
									{
										key: 'toggle',
										value: function () {
											this._setVisibility(!this.isVisible),
												this._update(!this.isVisible);
										},
									},
									{
										key: 'toggleSlim',
										value: function () {
											this._setSlim(!this._slimCollapsed);
										},
									},
									{
										key: 'update',
										value: function (e) {
											(this._options = e), this._setup();
										},
									},
									{
										key: '_appendArrow',
										value: function (e) {
											var t = x('i');
											['fas', 'fa-angle-down', ld].forEach(function (e) {
												F.addClass(t, e);
											}),
												0 === V.find('.'.concat(ld), e).length &&
													e.appendChild(t);
										},
									},
									{
										key: '_collapseItems',
										value: function () {
											this.navigation.forEach(function (e) {
												V.find(cd, e).forEach(function (e) {
													Bt.getInstance(e).hide();
												});
											});
										},
									},
									{
										key: '_setupBackdrop',
										value: function () {
											var e = this,
												t = [];
											this.options.backdropClass &&
												t.push(this.options.backdropClass);
											var n,
												i = {
													transition: 'opacity '.concat(
														this.transitionDuration,
														' ease-out'
													),
													position: this.options.position,
													width:
														'fixed' === this.options.position
															? '100vw'
															: '100%',
													height:
														'fixed' === this.options.position
															? '100vh'
															: '100%',
												};
											this._backdrop ||
												((n = x('div')),
												t.push('sidenav-backdrop'),
												(i.opacity = 0),
												H.on(n, 'click', function () {
													e._setVisibility(!1), e._update(!1);
												}),
												(this._backdrop = n)),
												(n = this._backdrop.classList).add.apply(n, t),
												F.style(this._backdrop, i);
										},
									},
									{
										key: '_getOffsetValue',
										value: function (e, t) {
											var n = t.index,
												i = t.property,
												t = t.offsets;
											return (
												this._getPxValue(
													this._initialContentStyle[n][t[i].property]
												) + (e ? t[i].value : 0)
											);
										},
									},
									{
										key: '_getProperty',
										value: function () {
											for (
												var e = arguments.length, t = new Array(e), n = 0;
												n < e;
												n++
											)
												t[n] = arguments[n];
											return t
												.map(function (e, t) {
													return 0 === t
														? e
														: e[0].toUpperCase().concat(e.slice(1));
												})
												.join('');
										},
									},
									{
										key: '_getPxValue',
										value: function (e) {
											return e ? parseFloat(e) : 0;
										},
									},
									{
										key: '_handleSwipe',
										value: function (e, t) {
											t &&
											this._slimCollapsed &&
											this.options.slim &&
											this.options.expandable
												? this.toggleSlim()
												: t ||
												  (!this._slimCollapsed &&
												  this.options.slim &&
												  this.options.expandable
														? this.toggleSlim()
														: this.toggler && f(this.toggler) && this.toggle());
										},
									},
									{
										key: '_isActive',
										value: function (e, t) {
											return t
												? t === e
												: !!e.attributes.href &&
														new URL(e, window.location.href).href ===
															window.location.href;
										},
									},
									{
										key: '_isAllCollapsed',
										value: function () {
											return (
												0 ===
												V.find(cd, this._element).filter(function (e) {
													return f(e);
												}).length
											);
										},
									},
									{
										key: '_setup',
										value: function () {
											this._setupTouch(),
												this.options.focusTrap && this._setupFocusTrap(),
												this.options.backdrop &&
													(this._setupBackdrop(),
													this.options.hidden ||
														'over' !== this.options.mode ||
														this._appendBackdrop()),
												this._setupCollapse(),
												this.options.slim && this._setupSlim(),
												this._setupInitialStyling(),
												this._setupScrolling(),
												this.options.content && this._setupContent(),
												this._setupActiveState(),
												this._setupRippleEffect(),
												this.options.hidden || this._updateOffsets(!0, !0);
										},
									},
									{
										key: '_setupActiveState',
										value: function () {
											var n = this;
											this._setActiveElements(),
												this.links.forEach(function (t) {
													H.on(t, 'click', function () {
														return n._setActiveElements(t);
													}),
														H.on(t, 'keydown', function (e) {
															13 === e.keyCode && n._setActiveElements(t);
														});
												}),
												H.on(window, 'hashchange', this.hashHandler);
										},
									},
									{
										key: '_setupCollapse',
										value: function () {
											var r = this;
											this.navigation.forEach(function (n, i) {
												V.find(cd, n).forEach(function (e, t) {
													return r._setupCollapseList({
														list: e,
														index: t,
														menu: n,
														menuIndex: i,
													});
												});
											});
										},
									},
									{
										key: '_generateCollpaseID',
										value: function (e, t) {
											return 'sidenav-collapse-'
												.concat(this._ID, '-')
												.concat(t, '-')
												.concat(e);
										},
									},
									{
										key: '_setupCollapseList',
										value: function (e) {
											var t = this,
												n = e.list,
												i = e.index,
												r = e.menu,
												e = e.menuIndex,
												e = this._generateCollpaseID(i, e);
											n.classList.add('collapse'), n.setAttribute('id', e);
											var o = id(V.prev(n, dd), 1)[0];
											F.setDataAttribute(o, 'toggle', 'collapse'),
												o.setAttribute('href', '#'.concat(e)),
												o.setAttribute('role', 'button');
											var a =
												Bt.getInstance(n) ||
												new Bt(n, {
													toggle: !1,
													parent: this.options.accordion ? r : n,
												});
											this._appendArrow(o),
												F.hasClass(n, 'show') && this._rotateArrow(o, 180),
												H.on(o, 'click', function (e) {
													return t._toggleCategory(e, a, n);
												}),
												H.on(n, 'show.bs.collapse', function () {
													return t._rotateArrow(o, 180);
												}),
												H.on(n, 'hide.bs.collapse', function () {
													return t._rotateArrow(o, 0);
												}),
												H.on(n, 'shown.bs.collapse', function () {
													'over' === t.options.mode &&
														t._focusTrap &&
														t._focusTrap.update();
												}),
												H.on(n, 'hidden.bs.collapse', function () {
													t._tempSlim &&
														t._isAllCollapsed() &&
														(t._setSlim(!0), (t._tempSlim = !1)),
														'over' === t.options.mode &&
															t._focusTrap &&
															t._focusTrap.update();
												});
										},
									},
									{
										key: '_setupContent',
										value: function () {
											(this._content = V.find(this.options.content)),
												(this._initialContentStyle = this._content.map(
													function (e) {
														e = window.getComputedStyle(e);
														return {
															paddingLeft: e.paddingLeft,
															paddingRight: e.paddingRight,
															marginLeft: e.marginLeft,
															marginRight: e.marginRight,
															transition: e.transition,
														};
													}
												));
										},
									},
									{
										key: '_setupFocusTrap',
										value: function () {
											this._focusTrap = new Ac(
												this._element,
												{
													event: 'keydown',
													condition: function (e) {
														return 9 === e.keyCode;
													},
													onlyVisible: !0,
												},
												this.toggler
											);
										},
									},
									{
										key: '_setupInitialStyling',
										value: function () {
											this._setColor(),
												F.style(this._element, this.sidenavStyle);
										},
									},
									{
										key: '_setupScrolling',
										value: function () {
											var e,
												t = this._element;
											this.options.scrollContainer &&
												((t = V.findOne(
													this.options.scrollContainer,
													this._element
												)),
												(e = ((e = t.parentNode.children),
												Array.from(e).filter(function (e) {
													return e !== t;
												})).reduce(function (e, t) {
													return e + t.clientHeight;
												}, 0)),
												F.style(t, {
													maxHeight: 'calc(100% - '.concat(e, 'px)'),
													position: 'relative',
												})),
												(this._perfectScrollbar = new Ec(t, {
													suppressScrollX: !0,
												}));
										},
									},
									{
										key: '_setupSlim',
										value: function () {
											var e = this;
											(this._slimCollapsed = this.options.slimCollapsed),
												this._toggleSlimDisplay(this._slimCollapsed),
												this.options.expandOnHover &&
													(this._element.addEventListener(
														'mouseenter',
														function () {
															e._slimCollapsed && e._setSlim(!1);
														}
													),
													this._element.addEventListener(
														'mouseleave',
														function () {
															e._slimCollapsed || e._setSlim(!0);
														}
													));
										},
									},
									{
										key: '_setupRippleEffect',
										value: function () {
											var n = this;
											this.links.forEach(function (e) {
												var t = nu.getInstance(e);
												if (t && t._options.color !== n.options.color)
													t.dispose();
												else if (t) return;
												t = new nu(e, { rippleColor: n.options.color });
											});
										},
									},
									{
										key: '_setupTouch',
										value: function () {
											var t = this;
											(this._touch = new Qc(this._element, 'swipe', {
												threshold: 20,
											})),
												this._touch.init(),
												H.on(this._element, 'swipeleft', function (e) {
													return t._handleSwipe(e, t.options.right);
												}),
												H.on(this._element, 'swiperight', function (e) {
													return t._handleSwipe(e, !t.options.right);
												});
										},
									},
									{
										key: '_setActive',
										value: function (e, t) {
											F.addClass(e, 'active'),
												this._activeNode &&
													this._activeNode.classList.remove('active'),
												(this._activeNode = e);
											var n = id(V.parents(this._activeNode, cd), 1)[0];
											n
												? ((e = id(V.prev(n, dd), 1)[0]),
												  this._setActiveCategory(e),
												  t || this._slimCollapsed || Bt.getInstance(n).show())
												: this._setActiveCategory();
										},
									},
									{
										key: '_setActiveCategory',
										value: function (t) {
											this.navigation.forEach(function (e) {
												V.find(cd, e).forEach(function (e) {
													e = id(V.prev(e, dd), 1)[0];
													e !== t
														? e.classList.remove('active')
														: F.addClass(e, 'active');
												});
											});
										},
									},
									{
										key: '_setActiveElements',
										value: function (t) {
											var n = this;
											this.navigation.forEach(function (e) {
												V.find(dd, e)
													.filter(function (e) {
														return 0 === V.next(e, cd).length;
													})
													.forEach(function (e) {
														n._isActive(e, t) &&
															e !== n._activeNode &&
															n._setActive(e, t);
													});
											});
										},
									},
									{
										key: '_setColor',
										value: function () {
											var t = this,
												e = [
													'primary',
													'secondary',
													'success',
													'info',
													'warning',
													'danger',
													'light',
													'dark',
												],
												n = this.options.color,
												n = e.includes(n) ? n : 'primary';
											e.forEach(function (e) {
												t._element.classList.remove('sidenav-'.concat(e));
											}),
												F.addClass(this._element, 'sidenav-'.concat(n));
										},
									},
									{
										key: '_setContentOffsets',
										value: function (o, a, s) {
											var l = this;
											this._content.forEach(function (e, t) {
												var n = l._getOffsetValue(o, {
														index: t,
														property: 'padding',
														offsets: a,
													}),
													i = l._getOffsetValue(o, {
														index: t,
														property: 'margin',
														offsets: a,
													}),
													r = {};
												s ||
													(r.transition = 'all '.concat(
														l.transitionDuration,
														' linear'
													)),
													(r[a.padding.property] = ''.concat(n, 'px')),
													(r[a.margin.property] = ''.concat(i, 'px')),
													F.style(e, r),
													o &&
														(s
															? F.style(e, {
																	transition:
																		l._initialContentStyle[t].transition,
															  })
															: H.on(e, 'transitionend', function () {
																	F.style(e, {
																		transition:
																			l._initialContentStyle[t].transition,
																	});
															  }));
											});
										},
									},
									{
										key: '_setMode',
										value: function (e) {
											this.options.mode !== e &&
												((this._options.mode = e),
												this._update(this.isVisible));
										},
									},
									{
										key: '_setSlim',
										value: function (e) {
											var t = e
												? ['collapse', 'collapsed']
												: ['expand', 'expanded'];
											this._triggerEvents.apply(this, t),
												e && this._collapseItems(),
												(this._slimCollapsed = e),
												this._toggleSlimDisplay(e),
												F.style(this._element, {
													width: ''.concat(this.width, 'px'),
												}),
												this._updateOffsets(this.isVisible);
										},
									},
									{
										key: '_setTabindex',
										value: function (t) {
											this.links.forEach(function (e) {
												e.tabIndex = t ? 1 : -1;
											});
										},
									},
									{
										key: '_setVisibility',
										value: function (e) {
											e = e ? ['show', 'shown'] : ['hide', 'hidden'];
											this._triggerEvents.apply(this, e);
										},
									},
									{
										key: '_rotateArrow',
										value: function (e, t) {
											e = id(V.children(e, '.'.concat(ld)), 1)[0];
											e &&
												F.style(e, { transform: 'rotate('.concat(t, 'deg)') });
										},
									},
									{
										key: '_toggleBackdrop',
										value:
											((o = nd(
												regeneratorRuntime.mark(function e(t) {
													var n = this;
													return regeneratorRuntime.wrap(
														function (e) {
															for (;;)
																switch ((e.prev = e.next)) {
																	case 0:
																		if (!t || 'over' !== this.options.mode) {
																			e.next = 4;
																			break;
																		}
																		this._appendBackdrop(), (e.next = 7);
																		break;
																	case 4:
																		return (
																			F.style(this._backdrop, { opacity: 0 }),
																			(e.next = 7),
																			setTimeout(function () {
																				n._removeBackdrop();
																			}, this.options.transitionDuration)
																		);
																	case 7:
																	case 'end':
																		return e.stop();
																}
														},
														e,
														this
													);
												})
											)),
											function (e) {
												return o.apply(this, arguments);
											}),
									},
									{
										key: '_removeBackdrop',
										value: function () {
											this._backdrop.parentNode === this.container &&
												this.container.removeChild(this._backdrop);
										},
									},
									{
										key: '_appendBackdrop',
										value: function () {
											var e = this;
											this.container.appendChild(this._backdrop),
												setTimeout(function () {
													return F.style(e._backdrop, { opacity: 1 });
												}, 0);
										},
									},
									{
										key: '_toggleCategory',
										value: function (e, t) {
											e.preventDefault(),
												t.toggle(),
												this._slimCollapsed &&
													this.options.expandable &&
													((this._tempSlim = !0), this._setSlim(!1));
										},
									},
									{
										key: '_toggleSlimDisplay',
										value: function (e) {
											function t() {
												i.forEach(function (e) {
													F.style(e, {
														display: n._slimCollapsed ? 'unset' : 'none',
													});
												}),
													r.forEach(function (e) {
														F.style(e, {
															display: n._slimCollapsed ? 'none' : 'unset',
														});
													});
											}
											var n = this,
												i = V.find('[data-mdb-slim="true"]', this._element),
												r = V.find('[data-mdb-slim="false"]', this._element);
											e ? setTimeout(t, this.options.transitionDuration) : t();
										},
									},
									{
										key: '_triggerEvents',
										value:
											((i = nd(
												regeneratorRuntime.mark(function e(t, n) {
													var i = this;
													return regeneratorRuntime.wrap(
														function (e) {
															for (;;)
																switch ((e.prev = e.next)) {
																	case 0:
																		if (
																			(H.trigger(
																				this._element,
																				''.concat(t, '.mdb.sidenav')
																			),
																			n)
																		)
																			return (
																				(e.next = 4),
																				setTimeout(function () {
																					H.trigger(
																						i._element,
																						''.concat(n, '.mdb.sidenav')
																					);
																				}, this.options.transitionDuration + 5)
																			);
																		e.next = 4;
																		break;
																	case 4:
																	case 'end':
																		return e.stop();
																}
														},
														e,
														this
													);
												})
											)),
											function (e, t) {
												return i.apply(this, arguments);
											}),
									},
									{
										key: '_update',
										value: function (e) {
											this.toggler && this._updateTogglerAria(e),
												this._updateDisplay(e),
												this.options.backdrop && this._toggleBackdrop(e),
												this._updateOffsets(e),
												e &&
													this.options.closeOnEsc &&
													'side' !== this.options.mode &&
													H.on(window, 'keydown', this.escHandler),
												this.options.focusTrap && this._updateFocus(e);
										},
									},
									{
										key: '_updateDisplay',
										value: function (e) {
											e = e ? 0 : this.translation;
											F.style(this._element, {
												transform: 'translateX('.concat(e, '%)'),
											});
										},
									},
									{
										key: '_updateFocus',
										value: function (e) {
											if (
												(this._setTabindex(e),
												'over' === this.options.mode && this.options.focusTrap)
											) {
												if (e) return void this._focusTrap.trap();
												this._focusTrap.disable();
											}
											this._focusTrap.disable();
										},
									},
									{
										key: '_updateOffsets',
										value: function (e, t) {
											var n = 1 < arguments.length && void 0 !== t && t,
												i = id(
													this.options.right
														? ['right', 'left']
														: ['left', 'right'],
													2
												),
												t = i[0],
												i = i[1],
												t = {
													property: this._getProperty('padding', t),
													value: 'over' === this.options.mode ? 0 : this.width,
												},
												i = {
													property: this._getProperty('margin', i),
													value:
														'push' === this.options.mode ? -1 * this.width : 0,
												};
											H.trigger(this._element, 'update.mdb.sidenav', {
												margin: i,
												padding: t,
											}),
												this._content &&
													this._setContentOffsets(
														e,
														{ padding: t, margin: i },
														n
													);
										},
									},
									{
										key: '_updateTogglerAria',
										value: function (e) {
											this.toggler.setAttribute('aria-expanded', e);
										},
									},
									{
										key: 'container',
										get: function () {
											return 'fixed' === this.options.position
												? V.findOne('body')
												: (function e(t) {
														return t.parentNode && t.parentNode !== document
															? 'relative' === t.parentNode.style.position
																? t.parentNode
																: e(t.parentNode)
															: t;
												  })(this._element);
										},
									},
									{
										key: 'isVisible',
										get: function () {
											var e = 0,
												t = window.innerWidth;
											'fixed' !== this.options.position &&
												((e = (n = this.container.getBoundingClientRect()).x),
												(t = n.x + n.width));
											var n = this._element.getBoundingClientRect().x;
											return this.options.right
												? 10 < Math.abs(n - t)
												: Math.abs(n - e) < 10;
										},
									},
									{
										key: 'links',
										get: function () {
											return V.find(dd, this._element);
										},
									},
									{
										key: 'navigation',
										get: function () {
											return V.find('.sidenav-menu', this._element);
										},
									},
									{
										key: 'options',
										get: function () {
											var e = ed(
												ed(ed({}, _d), F.getDataAttributes(this._element)),
												this._options
											);
											return s(ad, e, md), e;
										},
									},
									{
										key: 'sidenavStyle',
										get: function () {
											return {
												width: ''.concat(this.width, 'px'),
												height:
													'fixed' === this.options.position ? '100vh' : '100%',
												position: this.options.position,
												transition: 'all '.concat(
													this.transitionDuration,
													' linear'
												),
											};
										},
									},
									{
										key: 'toggler',
										get: function () {
											var t = this;
											return V.find(ud).find(function (e) {
												e = F.getDataAttribute(e, 'target');
												return V.findOne(e) === t._element;
											});
										},
									},
									{
										key: 'transitionDuration',
										get: function () {
											return ''.concat(
												this.options.transitionDuration / 1e3,
												's'
											);
										},
									},
									{
										key: 'translation',
										get: function () {
											return this.options.right ? hd : fd;
										},
									},
									{
										key: 'width',
										get: function () {
											return this._slimCollapsed
												? this.options.slimWidth
												: this.options.width;
										},
									},
								]),
								(n = [
									{
										key: 'toggleSidenav',
										value: function () {
											return function (e) {
												(e = V.closest(e.target, ud)),
													(e = F.getDataAttributes(e).target);
												V.find(e).forEach(function (e) {
													(r.getInstance(e) || new r(e)).toggle();
												});
											};
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, sd),
													t = 'object' === $c(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, sd);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return ad;
										},
									},
								]),
								t && od(e.prototype, t),
								n && od(e, n),
								r
							);
						})();
					H.on(document, 'click', ud, vd.toggleSidenav()),
						V.find('.sidenav').forEach(function (e) {
							return vd.getInstance(e) || new vd(e);
						}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[ad]),
								(t.fn[ad] = vd.jQueryInterface),
								(t.fn[ad].Constructor = vd),
								(t.fn[ad].noConflict = function () {
									return (t.fn[ad] = e), vd.jQueryInterface;
								}));
						});
					var yd = vd;
					function gd(e) {
						return (gd =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function bd(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function kd(e, t) {
						return (kd =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function wd(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Md(n);
							return (
								(e = i
									? ((e = Md(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== gd(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Md(e) {
						return (Md = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var t = '.'.concat('bs.alert'),
						Ld = 'close'.concat(t),
						xd = 'closed'.concat(t),
						Ve = 'click'.concat(t).concat('.data-api'),
						t = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && kd(e, t);
							})(r, Ie);
							var e,
								t,
								n,
								i = wd(r);
							function r() {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									i.apply(this, arguments)
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (t) {
											return this.each(function () {
												var e = (e = _e.get(this, 'bs.alert')) || new r(this);
												'close' === t && e[t](this);
											});
										},
									},
									{
										key: 'handleDismiss',
										value: function (t) {
											return function (e) {
												e && e.preventDefault(), t.close(this);
											};
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'alert';
										},
									},
								]),
								(t = [
									{
										key: 'close',
										value: function (e) {
											var t = e ? this._getRootElement(e) : this._element,
												e = this._triggerCloseEvent(t);
											null === e ||
												e.defaultPrevented ||
												this._removeElement(t);
										},
									},
									{
										key: '_getRootElement',
										value: function (e) {
											return Q(e) || e.closest('.'.concat('alert'));
										},
									},
									{
										key: '_triggerCloseEvent',
										value: function (e) {
											return Ae.trigger(e, Ld);
										},
									},
									{
										key: '_removeElement',
										value: function (e) {
											var t = this;
											e.classList.remove('show');
											var n = e.classList.contains('fade');
											this._queueCallback(
												function () {
													return t._destroyElement(e);
												},
												e,
												n
											);
										},
									},
									{
										key: '_destroyElement',
										value: function (e) {
											e.parentNode && e.parentNode.removeChild(e),
												Ae.trigger(e, xd);
										},
									},
								]) && bd(e.prototype, t),
								n && bd(e, n),
								r
							);
						})();
					Ae.on(
						document,
						Ve,
						'[data-mdb-dismiss="alert"]',
						t.handleDismiss(new t())
					),
						pe(t);
					var Dd = t;
					function Sd(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Td(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Td(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Td(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function Od(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Yd(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Od(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Od(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Cd(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var jd = {
							position: 'top',
							container: null,
							refresh: 1e3,
							filter: function (e) {
								return e;
							},
						},
						Ed = {
							position: 'string',
							container: '(undefined|null|string)',
							refresh: 'number',
							filter: 'function',
						},
						Pd = (function () {
							function i(e, t, n) {
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._selector = t),
									(this._options = this._getConfig(n)),
									(this._offset = null),
									this._options.container &&
										(this._parent = V.findOne(this._options.container));
							}
							var e, t, n;
							return (
								(e = i),
								(t = [
									{
										key: '_getConfig',
										value: function (e) {
											e = Yd(Yd({}, jd), e);
											return s('Stack', e, Ed), e;
										},
									},
									{
										key: '_getBoundryOffset',
										value: function (e) {
											var t,
												n = this._options.position,
												i = 0,
												r = window.innerHeight;
											return (
												this._parent &&
													((i = (t = this._parent.getBoundingClientRect()).top),
													(r = t.bottom)),
												'top' === n ? e.top - i : r - e.bottom
											);
										},
									},
									{
										key: 'calculateOffset',
										value: function () {
											var e = Sd(this.stackableElements, 1)[0];
											return (
												(this._offset = e
													? this._getBoundryOffset(e.rect) + e.rect.height
													: 0),
												this._offset
											);
										},
									},
									{
										key: 'stackableElements',
										get: function () {
											var n = this;
											return V.find(this._selector)
												.filter(function (e, t) {
													return n._options.filter(e, t);
												})
												.map(function (e) {
													return { el: e, rect: e.getBoundingClientRect() };
												})
												.filter(function (e) {
													var t = e.el,
														e = e.rect,
														t = t !== n._element && f(t);
													return null === n._offset
														? t
														: t && n._getBoundryOffset(e) < n._offset;
												})
												.sort(function (e, t) {
													return (
														n._getBoundryOffset(t.rect) -
														n._getBoundryOffset(e.rect)
													);
												});
										},
									},
									{
										key: 'nextElements',
										get: function () {
											var n = this;
											return V.find(this._selector)
												.filter(function (e) {
													return e !== n._element;
												})
												.filter(function (e, t) {
													return n._options.filter(e, t);
												})
												.filter(function (e) {
													return (
														(n._offset = null),
														n._getBoundryOffset(e.getBoundingClientRect()) >
															n._offset
													);
												});
										},
									},
								]) && Cd(e.prototype, t),
								n && Cd(e, n),
								i
							);
						})();
					function Ad(e) {
						return (Ad =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Hd(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Id(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Id(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Id(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function Rd(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Nd(t) {
						for (var e = 1; e < arguments.length; e++) {
							var n = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Rd(Object(n), !0).forEach(function (e) {
										Wd(t, e, n[e]);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										t,
										Object.getOwnPropertyDescriptors(n)
								  )
								: Rd(Object(n)).forEach(function (e) {
										Object.defineProperty(
											t,
											e,
											Object.getOwnPropertyDescriptor(n, e)
										);
								  });
						}
						return t;
					}
					function Wd(e, t, n) {
						return (
							t in e
								? Object.defineProperty(e, t, {
										value: n,
										enumerable: !0,
										configurable: !0,
										writable: !0,
								  })
								: (e[t] = n),
							e
						);
					}
					function Fd(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Bd(e, t, n) {
						return (Bd =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = Ud(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function zd(e, t) {
						return (zd =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Vd(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Ud(n);
							return (
								(e = i
									? ((e = Ud(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Ad(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Ud(e) {
						return (Ud = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Xd = 'alert',
						Ve = 'mdb.'.concat(Xd),
						t = '.'.concat(Ve),
						Jd = {
							position: '(string || null)',
							delay: 'number',
							autohide: 'boolean',
							width: '(string || null)',
							offset: 'number',
							stacking: 'boolean',
							hidden: 'boolean',
							appendToBody: 'boolean',
							color: '(string || null)',
							container: '(string|null)',
						},
						qd = {
							position: null,
							delay: 1e3,
							autohide: !1,
							width: null,
							offset: 10,
							stacking: !1,
							hidden: !1,
							appendToBody: !1,
							color: null,
							container: null,
						},
						Kd = 'close.bs.alert',
						Gd = 'closed.bs.alert',
						Qd = 'close'.concat(t),
						$d = 'closed'.concat(t),
						Zd = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && zd(e, t);
							})(r, Dd);
							var e,
								t,
								n,
								i = Vd(r);
							function r(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e, t))._options = e._getConfig(t)),
									e._init(),
									e
								);
							}
							return (
								(e = r),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, Kd),
												H.off(this._element, Gd),
												Bd(Ud(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: 'update',
										value: function (e) {
											e = 0 < arguments.length && void 0 !== e ? e : {};
											null !== this._timeout &&
												(clearTimeout(this._timeout), (this._timeout = null)),
												(this._options = this._getConfig(e)),
												this._setup();
										},
									},
									{
										key: 'hide',
										value: function () {
											var e,
												n = this;
											this._element.classList.contains('show') &&
												(F.toggleClass(this._element, 'show'),
												(e = function e(t) {
													F.style(t.target, { display: 'none' }),
														null !== n._timeout &&
															(clearTimeout(n._timeout), (n._timeout = null)),
														n._options.stacking && n._updateAlertStack(),
														H.off(t.target, 'transitionend', e);
												}),
												H.on(this._element, 'transitionend', e));
										},
									},
									{
										key: 'show',
										value: function () {
											var e;
											this._options.autohide && this._setupAutohide(),
												this._element.classList.contains('show') ||
													(F.style(this._element, { display: 'block' }),
													f(this._element) &&
														((e = function e(t) {
															F.style(t.target, { display: 'block' }),
																H.off(t.target, 'transitionend', e);
														}),
														F.toggleClass(this._element, 'show'),
														this._options.position && this._setupAlignment(),
														H.on(this._element, 'transitionend', e)));
										},
									},
									{
										key: '_init',
										value: function () {
											this._options.hidden &&
												F.style(this._element, { display: 'none' }),
												this._bindCloseEvent(),
												this._bindClosedEvent(),
												this._setup();
										},
									},
									{
										key: '_setup',
										value: function () {
											this._options.color && this._setColor(),
												this._options.stacking && this._setupStacking(),
												this._options.autohide && this._setupAutohide(),
												this._options.width && this._setupWidth(),
												this._options.appendToBody && this._appendToBody(),
												this._options.position &&
													(this._setupAlignment(), this._setupPosition());
										},
									},
									{
										key: '_setupStacking',
										value: function () {
											var t = this;
											(this.stackUtil = new Pd(this._element, '.alert', {
												position: this.position.y,
												offset: this._options.offset,
												container: this._options.container,
												filter: function (e) {
													e = r.getInstance(e);
													return (
														!!e &&
														e._options.container === t._options.container &&
														e._options.position === t._options.position
													);
												},
											})),
												H.on(this._element, 'closed.bs.alert', function () {
													t._updateAlertStack();
												});
										},
									},
									{
										key: '_setColor',
										value: function () {
											var t = this,
												e = [
													'primary',
													'secondary',
													'success',
													'info',
													'warning',
													'danger',
													'light',
													'dark',
												],
												n = e.includes(this._options.color)
													? this._options.color
													: 'primary';
											e.forEach(function (e) {
												t._element.classList.remove('alert-'.concat(e));
											}),
												F.addClass(this._element, 'alert-'.concat(n));
										},
									},
									{
										key: '_setupWidth',
										value: function () {
											F.style(this._element, { width: this._options.width });
										},
									},
									{
										key: '_setupAutohide',
										value: function () {
											var e = this;
											this._timeout = setTimeout(function () {
												e.hide();
											}, this._options.delay);
										},
									},
									{
										key: '_setupAlignment',
										value: function () {
											var e,
												t = 'top' === this.position.y ? 'bottom' : 'top',
												n = 'left' === this.position.x ? 'right' : 'left';
											'center' === this.position.x
												? F.style(
														this._element,
														(Wd(
															(e = {}),
															this.position.y,
															''.concat(
																this.verticalOffset + this._options.offset,
																'px'
															)
														),
														Wd(e, t, 'unset'),
														Wd(e, 'left', '50%'),
														Wd(e, 'transform', 'translate(-50%)'),
														e)
												  )
												: F.style(
														this._element,
														(Wd(
															(e = {}),
															this.position.y,
															''.concat(
																this.verticalOffset + this._options.offset,
																'px'
															)
														),
														Wd(
															e,
															this.position.x,
															''.concat(this._options.offset, 'px')
														),
														Wd(e, t, 'unset'),
														Wd(e, n, 'unset'),
														Wd(e, 'transform', 'unset'),
														e)
												  );
										},
									},
									{
										key: '_setupPosition',
										value: function () {
											this._options.container
												? (F.addClass(this.parent, 'parent-alert-relative'),
												  F.addClass(this._element, 'alert-absolute'))
												: F.addClass(this._element, 'alert-fixed');
										},
									},
									{
										key: '_appendToBody',
										value: function () {
											this._element.parentNode.removeChild(this._element),
												document.body.appendChild(this._element);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = Nd(
												Nd(Nd({}, qd), F.getDataAttributes(this._element)),
												e
											);
											return s(Xd, e, Jd), e;
										},
									},
									{
										key: '_bindCloseEvent',
										value: function () {
											var e = this;
											H.on(this._element, Kd, function () {
												H.trigger(e._element, Qd);
											});
										},
									},
									{
										key: '_bindClosedEvent',
										value: function () {
											var e = this;
											H.on(this._element, Gd, function () {
												H.trigger(e._element, $d);
											});
										},
									},
									{
										key: '_updatePosition',
										value: function () {
											F.style(
												this._element,
												Wd(
													{},
													this.position.y,
													''.concat(
														this.verticalOffset + this._options.offset,
														'px'
													)
												)
											);
										},
									},
									{
										key: '_updateAlertStack',
										value: function () {
											this.stackUtil.nextElements.forEach(function (e) {
												e = r.getInstance(e);
												e && e._updatePosition();
											});
										},
									},
									{
										key: 'verticalOffset',
										get: function () {
											return this._options.stacking
												? this.stackUtil.calculateOffset()
												: 0;
										},
									},
									{
										key: 'parent',
										get: function () {
											return Hd(
												V.parents(this._element, this._options.container),
												1
											)[0];
										},
									},
									{
										key: 'position',
										get: function () {
											var e = Hd(this._options.position.split('-'), 2);
											return { y: e[0], x: e[1] };
										},
									},
								]) && Fd(e.prototype, t),
								n && Fd(e, n),
								r
							);
						})();
					V.find('.alert').forEach(function (e) {
						return Zd.getInstance(e) || new Zd(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Xd]),
								(t.fn[Xd] = Zd.jQueryInterface),
								(t.fn[Xd].Constructor = Zd),
								(t.fn[Xd].noConflict = function () {
									return (t.fn[Xd] = e), Zd.jQueryInterface;
								}));
						});
					var ef = Zd;
					function tf(e) {
						return (tf =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function nf(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function rf(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? nf(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: nf(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function of(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function af(e, t, n) {
						return (af =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = uf(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function sf(e, t) {
						return (sf =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function lf(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = uf(n);
							return (
								(e = i
									? ((e = uf(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== tf(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function uf(e) {
						return (uf = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Ve = '.'.concat('bs.toast'),
						cf = 'click.dismiss'.concat(Ve),
						df = 'mouseover'.concat(Ve),
						ff = 'mouseout'.concat(Ve),
						hf = 'focusin'.concat(Ve),
						pf = 'focusout'.concat(Ve),
						mf = 'hide'.concat(Ve),
						_f = 'hidden'.concat(Ve),
						vf = 'show'.concat(Ve),
						yf = 'shown'.concat(Ve),
						gf = 'show',
						bf = { animation: 'boolean', autohide: 'boolean', delay: 'number' },
						kf = { animation: !0, autohide: !0, delay: 5e3 },
						t = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && sf(e, t);
							})(r, Ie);
							var e,
								t,
								n,
								i = lf(r);
							function r(e, t) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e))._config = e._getConfig(t)),
									(e._timeout = null),
									(e._hasMouseInteraction = !1),
									(e._hasKeyboardInteraction = !1),
									e._setListeners(),
									e
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = _e.get(this, 'bs.toast'),
													t = 'object' === tf(n) && n,
													e = e || new r(this, t);
												if ('string' == typeof n) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](this);
												}
											});
										},
									},
									{
										key: 'DefaultType',
										get: function () {
											return bf;
										},
									},
									{
										key: 'Default',
										get: function () {
											return kf;
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'toast';
										},
									},
								]),
								(t = [
									{
										key: 'show',
										value: function () {
											var e = this;
											Ae.trigger(this._element, vf).defaultPrevented ||
												(this._clearTimeout(),
												this._config.animation &&
													this._element.classList.add('fade'),
												this._element.classList.remove('hide'),
												se(this._element),
												this._element.classList.add('showing'),
												this._queueCallback(
													function () {
														e._element.classList.remove('showing'),
															e._element.classList.add(gf),
															Ae.trigger(e._element, yf),
															e._maybeScheduleHide();
													},
													this._element,
													this._config.animation
												));
										},
									},
									{
										key: 'hide',
										value: function () {
											var e = this;
											this._element.classList.contains(gf) &&
												(Ae.trigger(this._element, mf).defaultPrevented ||
													(this._element.classList.remove(gf),
													this._queueCallback(
														function () {
															e._element.classList.add('hide'),
																Ae.trigger(e._element, _f);
														},
														this._element,
														this._config.animation
													)));
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._clearTimeout(),
												this._element.classList.contains(gf) &&
													this._element.classList.remove(gf),
												af(uf(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											return (
												(e = rf(
													rf(rf({}, kf), yt.getDataAttributes(this._element)),
													'object' === tf(e) && e ? e : {}
												)),
												ne('toast', e, this.constructor.DefaultType),
												e
											);
										},
									},
									{
										key: '_maybeScheduleHide',
										value: function () {
											var e = this;
											this._config.autohide &&
												(this._hasMouseInteraction ||
													this._hasKeyboardInteraction ||
													(this._timeout = setTimeout(function () {
														e.hide();
													}, this._config.delay)));
										},
									},
									{
										key: '_onInteraction',
										value: function (e, t) {
											switch (e.type) {
												case 'mouseover':
												case 'mouseout':
													this._hasMouseInteraction = t;
													break;
												case 'focusin':
												case 'focusout':
													this._hasKeyboardInteraction = t;
											}
											t
												? this._clearTimeout()
												: ((e = e.relatedTarget),
												  this._element === e ||
														this._element.contains(e) ||
														this._maybeScheduleHide());
										},
									},
									{
										key: '_setListeners',
										value: function () {
											var t = this;
											Ae.on(
												this._element,
												cf,
												'[data-mdb-dismiss="toast"]',
												function () {
													return t.hide();
												}
											),
												Ae.on(this._element, df, function (e) {
													return t._onInteraction(e, !0);
												}),
												Ae.on(this._element, ff, function (e) {
													return t._onInteraction(e, !1);
												}),
												Ae.on(this._element, hf, function (e) {
													return t._onInteraction(e, !0);
												}),
												Ae.on(this._element, pf, function (e) {
													return t._onInteraction(e, !1);
												});
										},
									},
									{
										key: '_clearTimeout',
										value: function () {
											clearTimeout(this._timeout), (this._timeout = null);
										},
									},
								]) && of(e.prototype, t),
								n && of(e, n),
								r
							);
						})();
					pe(t);
					var wf = t;
					function Mf(e) {
						return (Mf =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Lf(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return xf(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return xf(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function xf(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function Df(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Sf(t) {
						for (var e = 1; e < arguments.length; e++) {
							var n = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Df(Object(n), !0).forEach(function (e) {
										Tf(t, e, n[e]);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										t,
										Object.getOwnPropertyDescriptors(n)
								  )
								: Df(Object(n)).forEach(function (e) {
										Object.defineProperty(
											t,
											e,
											Object.getOwnPropertyDescriptor(n, e)
										);
								  });
						}
						return t;
					}
					function Tf(e, t, n) {
						return (
							t in e
								? Object.defineProperty(e, t, {
										value: n,
										enumerable: !0,
										configurable: !0,
										writable: !0,
								  })
								: (e[t] = n),
							e
						);
					}
					function Of(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Yf(e, t, n) {
						return (Yf =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = Ef(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function Cf(e, t) {
						return (Cf =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function jf(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Ef(n);
							return (
								(e = i
									? ((e = Ef(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Mf(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Ef(e) {
						return (Ef = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Pf = 'toast',
						Af = 'show.bs.toast',
						Hf = 'shown.bs.toast',
						If = 'hide.bs.toast',
						Rf = 'hidden.bs.toast',
						Nf = {
							position: '(string|null)',
							animation: 'boolean',
							autohide: 'boolean',
							width: '(string || null)',
							color: '(string|null)',
							delay: '(boolean|number)',
							offset: 'number',
							appendToBody: 'boolean',
							stacking: 'boolean',
						},
						Wf = {
							position: null,
							animation: !0,
							autohide: !0,
							width: null,
							color: null,
							delay: 500,
							offset: 10,
							appendToBody: !1,
							stacking: !0,
						},
						Ff = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Cf(e, t);
							})(r, wf);
							var e,
								t,
								n,
								i = jf(r);
							function r(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e, t))._options = e._getConfig(t)),
									e._setup(),
									e
								);
							}
							return (
								(e = r),
								(t = [
									{
										key: 'update',
										value: function (e) {
											var t = this,
												e = 0 < arguments.length && void 0 !== e ? e : {};
											(this._options = this._getConfig(e)),
												this._setupColor(),
												this._options.position &&
													(this._options.stacking &&
														(this._setupStacking(),
														H.on(this._element, 'hidden.bs.toast', function () {
															setTimeout(function () {
																return t._updateToastStack();
															}, 150);
														})),
													this._setupPosition(),
													this._setupAlignment());
										},
									},
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, Af),
												H.off(this._element, Hf),
												H.off(this._element, If),
												H.off(this._element, Rf),
												Yf(Ef(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_setup',
										value: function () {
											var e = this;
											this._setupColor(),
												this._options.width && this._setupWidth(),
												this._options.position &&
													(this._options.stacking &&
														(this._setupStacking(),
														H.on(this._element, 'hidden.bs.toast', function () {
															setTimeout(function () {
																return e._updateToastStack();
															}, 150);
														})),
													this._setupPosition(),
													this._setupDisplay(),
													!this._options.container &&
														this._options.appendToBody &&
														this._appendToBody(),
													this._bindShownEvent(),
													this._bindHideEvent());
										},
									},
									{
										key: '_setupStacking',
										value: function () {
											var t = this;
											(this.stackUtil = new Pd(this._element, '.toast', {
												position: this.position.y,
												offset: this._options.offset,
												container: this._options.container,
												filter: function (e) {
													e = r.getInstance(e);
													return (
														!!e &&
														e._options.container === t._options.container &&
														e._options.position === t._options.position
													);
												},
											})),
												H.on(this._element, 'closed.bs.alert', function () {
													t._updateAlertStack();
												});
										},
									},
									{
										key: '_setupColor',
										value: function () {
											var t,
												e,
												n,
												i = this;
											this._options.color &&
												((t = V.findOne('.toast-header', this._element)),
												(n = (e = [
													'primary',
													'secondary',
													'success',
													'info',
													'warning',
													'danger',
													'light',
													'dark',
												]).includes(this._options.color)
													? this._options.color
													: 'primary'),
												e.forEach(function (e) {
													i._element.classList.remove('bg-'.concat(e)),
														t && t.classList.remove('bg-'.concat(e));
												}),
												F.addClass(this._element, 'bg-'.concat(n)),
												t && F.addClass(t, 'bg-'.concat(n)));
										},
									},
									{
										key: '_setupWidth',
										value: function () {
											F.style(this._element, { width: this._options.width });
										},
									},
									{
										key: '_setupPosition',
										value: function () {
											this._options.container
												? (F.addClass(this.parent, 'parent-toast-relative'),
												  F.addClass(this._element, 'toast-absolute'))
												: F.addClass(this._element, 'toast-fixed');
										},
									},
									{
										key: '_setupAlignment',
										value: function () {
											var e,
												t = 'top' === this.position.y ? 'bottom' : 'top',
												n = 'left' === this.position.x ? 'right' : 'left';
											'center' === this.position.x
												? F.style(
														this._element,
														(Tf(
															(e = {}),
															this.position.y,
															''.concat(
																this.verticalOffset + this._options.offset,
																'px'
															)
														),
														Tf(e, t, 'unset'),
														Tf(e, 'left', '50%'),
														Tf(e, 'transform', 'translate(-50%)'),
														e)
												  )
												: F.style(
														this._element,
														(Tf(
															(e = {}),
															this.position.y,
															''.concat(
																this.verticalOffset + this._options.offset,
																'px'
															)
														),
														Tf(
															e,
															this.position.x,
															''.concat(this._options.offset, 'px')
														),
														Tf(e, t, 'unset'),
														Tf(e, n, 'unset'),
														Tf(e, 'transform', 'unset'),
														e)
												  );
										},
									},
									{
										key: '_setupDisplay',
										value: function () {
											var e = this;
											this._element.classList.contains('show') ||
												F.style(this._element, { display: 'none' }),
												H.on(this._element, Rf, function () {
													H.trigger(e._element, 'hidden.mdb.toast'),
														F.style(e._element, { display: 'none' });
												}),
												H.on(this._element, Af, function () {
													H.trigger(e._element, 'show.mdb.toast'),
														e._setupAlignment(),
														F.style(e._element, { display: 'block' });
												});
										},
									},
									{
										key: '_bindShownEvent',
										value: function () {
											var e = this;
											H.on(this._element, Hf, function () {
												H.trigger(e._element, 'shown.mdb.toast');
											});
										},
									},
									{
										key: '_bindHideEvent',
										value: function () {
											var e = this;
											H.on(this._element, If, function () {
												H.trigger(e._element, 'hide.mdb.toast');
											});
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = Sf(
												Sf(Sf({}, Wf), F.getDataAttributes(this._element)),
												e
											);
											return s(Pf, e, Nf), e;
										},
									},
									{
										key: '_appendToBody',
										value: function () {
											this._element.parentNode.removeChild(this._element),
												document.body.appendChild(this._element);
										},
									},
									{
										key: '_updatePosition',
										value: function () {
											F.style(
												this._element,
												Tf(
													{},
													this.position.y,
													''.concat(
														this.verticalOffset + this._options.offset,
														'px'
													)
												)
											);
										},
									},
									{
										key: '_updateToastStack',
										value: function () {
											this.stackUtil.nextElements.forEach(function (e) {
												e = r.getInstance(e);
												e && e._updatePosition();
											});
										},
									},
									{
										key: 'parent',
										get: function () {
											return Lf(
												V.parents(this._element, this._options.container),
												1
											)[0];
										},
									},
									{
										key: 'position',
										get: function () {
											if (!this._options.position) return null;
											var e = Lf(this._options.position.split('-'), 2);
											return { y: e[0], x: e[1] };
										},
									},
									{
										key: 'verticalOffset',
										get: function () {
											return this._options.stacking && this.position
												? this.stackUtil.calculateOffset()
												: 0;
										},
									},
								]) && Of(e.prototype, t),
								n && Of(e, n),
								r
							);
						})();
					V.find('.toast').forEach(function (e) {
						return Ff.getInstance(e) || new Ff(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Pf]),
								(t.fn[Pf] = Ff.jQueryInterface),
								(t.fn[Pf].Constructor = Ff),
								(t.fn[Pf].noConflict = function () {
									return (t.fn[Pf] = e), Ff.jQueryInterface;
								}));
						});
					var Bf = Ff;
					n(320), n(289);
					function zf(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Vf(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Vf(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Vf(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function Uf(e, t, n) {
						var i = e.clientX,
							r = e.clientY,
							o = e.touches,
							a = 2 < arguments.length && void 0 !== n && n,
							n = (e = t.getBoundingClientRect()).left,
							t = e.top,
							e = {};
						return (
							a
								? a &&
								  0 < Object.keys(o).length &&
								  (e = { x: o[0].clientX - n, y: o[0].clientY - t })
								: (e = { x: i - n, y: r - t }),
							e
						);
					}
					function Xf() {
						return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
							navigator.userAgent
						);
					}
					var Jf = function (e) {
							var t, n, i;
							if ('' !== e)
								return (
									qf(e)
										? ((t = e.getHours()),
										  (i = 12 <= (t = (t %= 12) || 12) ? 'PM' : 'AM'),
										  (n = (n = e.getMinutes()) < 10 ? '0'.concat(n) : n))
										: ((t = (e = zf(Gf(e, !1), 3))[0]),
										  (n = e[1]),
										  (t = (t %= 12) || 12),
										  void 0 === (i = e[2]) && (i = 12 <= t ? 'PM' : 'AM')),
									{ hours: t, minutes: n, amOrPm: i }
								);
						},
						qf = function (e) {
							return (
								e &&
								'[object Date]' === Object.prototype.toString.call(e) &&
								!isNaN(e)
							);
						},
						Kf = function (e) {
							var t, n;
							if ('' !== e)
								return (
									(n = qf(e)
										? ((t = e.getHours()), e.getMinutes())
										: ((t = (n = zf(Gf(e, !1), 2))[0]), n[1])),
									{
										hours: t,
										minutes: (n = Number(n) < 10 ? '0'.concat(Number(n)) : n),
									}
								);
						},
						Gf = function (e, t) {
							e = (
								!(1 < arguments.length && void 0 !== t) || t ? e.value : e
							).replace(/:/gi, ' ');
							return e.split(' ');
						};
					function Qf(e) {
						return (Qf =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function $f(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Zf(t) {
						for (var e = 1; e < arguments.length; e++) {
							var n = null != arguments[e] ? arguments[e] : {};
							e % 2
								? $f(Object(n), !0).forEach(function (e) {
										oh(t, e, n[e]);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										t,
										Object.getOwnPropertyDescriptors(n)
								  )
								: $f(Object(n)).forEach(function (e) {
										Object.defineProperty(
											t,
											e,
											Object.getOwnPropertyDescriptor(n, e)
										);
								  });
						}
						return t;
					}
					function eh(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							nh(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function th(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return ih(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							nh(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function nh(e, t) {
						if (e) {
							if ('string' == typeof e) return ih(e, t);
							var n = Object.prototype.toString.call(e).slice(8, -1);
							return (
								'Object' === n && e.constructor && (n = e.constructor.name),
								'Map' === n || 'Set' === n
									? Array.from(e)
									: 'Arguments' === n ||
									  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
									? ih(e, t)
									: void 0
							);
						}
					}
					function ih(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function rh(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function oh(e, t, n) {
						return (
							t in e
								? Object.defineProperty(e, t, {
										value: n,
										enumerable: !0,
										configurable: !0,
										writable: !0,
								  })
								: (e[t] = n),
							e
						);
					}
					var ah = 'timepicker',
						sh = 'mdb.'.concat(ah),
						lh = 'active',
						uh = ''.concat(ah, '-am'),
						ch = ''.concat(ah, '-cancel'),
						dh = ''.concat(ah, '-clear'),
						fh = ''.concat(ah, '-submit'),
						hh = ''.concat(ah, '-circle'),
						ph = ''.concat(ah, '-clock-animation'),
						mh = ''.concat(ah, '-clock'),
						_h = ''.concat(ah, '-clock-inner'),
						vh = ''.concat(ah, '-clock-wrapper'),
						yh = '.'.concat(ah, '-current'),
						gh = ''.concat(ah, '-current-inline'),
						bh = ''.concat(ah, '-hand-pointer'),
						kh = ''.concat(ah, '-hour'),
						wh = ''.concat(ah, '-hour-mode'),
						Mh = ''.concat(ah, '-icon-down'),
						Lh = ''.concat(ah, '-icon-inline-hour'),
						xh = ''.concat(ah, '-icon-inline-minute'),
						Dh = ''.concat(ah, '-icon-up'),
						Sh = ''.concat(ah, '-inline-hour-icons'),
						Th = ''.concat(ah, '-middle-dot'),
						Oh = ''.concat(ah, '-minute'),
						Yh = ''.concat(ah, '-modal'),
						Ch = ''.concat(ah, '-pm'),
						jh = ''.concat(ah, '-tips-element'),
						Eh = ''.concat(ah, '-time-tips-hours'),
						Ph = ''.concat(ah, '-tips-inner-element'),
						Ah = ''.concat(ah, '-time-tips-inner'),
						Hh = ''.concat(ah, '-time-tips-minutes'),
						Ih = ''.concat(ah, '-transform'),
						Rh = ''.concat(ah, '-wrapper'),
						Nh = ''.concat(ah, '-input'),
						Wh = {
							appendValidationInfo: !0,
							bodyID: '',
							cancelLabel: 'Cancel',
							clearLabel: 'Clear',
							closeModalOnBackdropClick: !0,
							closeModalOnMinutesClick: !1,
							defaultTime: '',
							disabled: !1,
							enableValidation: !0,
							focusInputAfterApprove: !1,
							footerID: '',
							format12: !0,
							format24: !1,
							headID: '',
							increment: !1,
							inline: !1,
							invalidLabel: 'Invalid Time Format',
							maxHour: '',
							minHour: '',
							maxTime: '',
							minTime: '',
							modalID: '',
							okLabel: 'Ok',
							overflowHidden: !0,
							pickerID: '',
							readOnly: !1,
							showClearBtn: !0,
							switchHoursToMinutesOnClick: !0,
							iconClass: 'far fa-clock fa-sm timepicker-icon',
							withIcon: !0,
							pmLabel: 'PM',
							amLabel: 'AM',
						},
						Fh = {
							appendValidationInfo: 'boolean',
							bodyID: 'string',
							cancelLabel: 'string',
							clearLabel: 'string',
							closeModalOnBackdropClick: 'boolean',
							closeModalOnMinutesClick: 'boolean',
							disabled: 'boolean',
							enableValidation: 'boolean',
							footerID: 'string',
							format12: 'boolean',
							format24: 'boolean',
							headID: 'string',
							increment: 'boolean',
							inline: 'boolean',
							invalidLabel: 'string',
							maxHour: '(string|number)',
							minHour: '(string|number)',
							modalID: 'string',
							okLabel: 'string',
							overflowHidden: 'boolean',
							pickerID: 'string',
							readOnly: 'boolean',
							showClearBtn: 'boolean',
							switchHoursToMinutesOnClick: 'boolean',
							defaultTime: '(string|date|number)',
							iconClass: 'string',
							withIcon: 'boolean',
							pmLabel: 'string',
							amLabel: 'string',
						},
						Bh = (function () {
							function i(e) {
								var L = this,
									t =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {};
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									oh(this, '_toggleBackgroundColorCircle', function (e) {
										null !==
										L._modal.querySelector('.'.concat(e, '.').concat(lh))
											? F.addStyle(L._circle, { backgroundColor: '#1976d2' })
											: F.addStyle(L._circle, {
													backgroundColor: 'transparent',
											  });
									}),
									oh(this, '_toggleClassActive', function (e, t, n) {
										var i = t.textContent,
											r = th(e).find(function (e) {
												return Number(e) === Number(i);
											});
										return n.forEach(function (e) {
											F.hasClass(e, 'disabled') ||
												(e.textContent === r
													? F.addClass(e, lh)
													: F.removeClass(e, lh));
										});
									}),
									oh(this, '_makeMinutesDegrees', function (e, t) {
										var n = L._options.increment;
										return (
											(e =
												e < 0
													? ((t = Math.round(360 + e / 6) % 60),
													  360 + 6 * Math.round(e / 6))
													: ((t = Math.round(e / 6) % 60),
													  6 * Math.round(e / 6))),
											n &&
												((e = 30 * Math.round(e / 30)),
												60 === (t = (6 * Math.round(e / 6)) / 6) && (t = '00')),
											360 <= e && (e = 0),
											{ degrees: e, minute: t, addDegrees: n ? 30 : 6 }
										);
									}),
									oh(this, '_makeHourDegrees', function (e, t, n) {
										var i = L._options,
											r = i.maxHour,
											i = i.minHour;
										if (
											(F.hasClass(e, _h) ||
											F.hasClass(e, Ah) ||
											F.hasClass(e, Ph)
												? t < 0
													? ((n = Math.round(360 + t / 30) % 24), (t = 360 + t))
													: 12 === (n = Math.round(t / 30) + 12) && (n = '00')
												: t < 0
												? ((n = Math.round(360 + t / 30) % 12), (t = 360 + t))
												: (0 === (n = Math.round(t / 30) % 12) || 12 < n) &&
												  (n = 12),
											360 <= t && (t = 0),
											!(
												('' !== r && n > Number(r)) ||
												('' !== i && n < Number(i))
											))
										)
											return { degrees: t, hour: n, addDegrees: 30 };
									}),
									oh(this, '_makeInnerHoursDegrees', function (e, t) {
										return (
											e < 0
												? ((t = Math.round(360 + e / 30) % 24), (e = 360 + e))
												: 12 === (t = Math.round(e / 30) + 12) && (t = '00'),
											{ degrees: e, hour: t, addDegrees: 30 }
										);
									}),
									oh(this, '_getAppendClock', function () {
										var a =
												0 < arguments.length && void 0 !== arguments[0]
													? arguments[0]
													: [],
											e =
												1 < arguments.length && void 0 !== arguments[1]
													? arguments[1]
													: '.'.concat(mh),
											s = 2 < arguments.length ? arguments[2] : void 0,
											t = L._options,
											l = t.maxHour,
											u = t.minHour,
											c = t.minTime,
											d = t.maxTime,
											n = t.inline,
											i = t.format12,
											t = eh(Gf(d, !1), 3),
											f = t[0],
											h = t[1],
											p = t[2],
											t = eh(Gf(c, !1), 3),
											m = t[0],
											_ = t[1],
											v = t[2];
										n ||
											(i &&
												L._isInvalidTimeFormat &&
												!F.hasClass(L._AM, 'active') &&
												F.addClass(L._PM, 'active'));
										var y,
											g,
											b,
											k = V.findOne('.'.concat(wh, '.').concat(lh)),
											w = V.findOne(e),
											M = 360 / a.length;
										null !== w &&
											((y = (w.offsetWidth - 32) / 2),
											(g = (w.offsetHeight - 32) / 2),
											(b = y - 4),
											th(a).forEach(function (e, t) {
												var n = t * M * (Math.PI / 180),
													i = x('span'),
													r = x('span');
												(r.innerHTML = e), F.addClass(i, s);
												var o = i.offsetWidth,
													t = i.offsetHeight;
												return (
													F.addStyle(i, {
														left: ''.concat(y + Math.sin(n) * b - o, 'px'),
														bottom: ''.concat(g + Math.cos(n) * b - t, 'px'),
													}),
													a.includes('05') && F.addClass(i, ''.concat(Hh)),
													a.includes('13')
														? r.classList.add(Ph)
														: r.classList.add(jh),
													F.hasClass(i, ''.concat(Hh))
														? F.hasClass(i, ''.concat(Hh)) &&
														  ('' !== d &&
																Number(e) > Number(h) &&
																Number(L._hour.textContent) >= Number(f) &&
																F.addClass(i, 'disabled'),
														  '' !== c &&
																Number(e) < Number(_) &&
																Number(L._hour.textContent) <= Number(m) &&
																F.addClass(i, 'disabled'),
														  '' !== d &&
																(void 0 !== p
																	? ('PM' === p && 'PM' === k.textContent
																			? Number(e) > Number(h) &&
																			  Number(L._hour.textContent) >=
																					Number(f) &&
																			  F.addClass(i, 'disabled')
																			: 'PM' === p &&
																			  'AM' === k.textContent &&
																			  F.removeClass(i, 'disabled'),
																	  (('AM' === p && 'PM' === k.textContent) ||
																			('AM' === p &&
																				'AM' === k.textContent &&
																				Number(L._hour.textContent) >=
																					Number(f) &&
																				Number(e) > Number(h))) &&
																			F.addClass(i, 'disabled'))
																	: void 0 !== p &&
																	  Number(e) > Number(f) &&
																	  F.addClass(i, 'disabled')),
														  '' !== c &&
																void 0 !== v &&
																('PM' === v && 'PM' === k.textContent
																	? ((Number(e) < Number(_) &&
																			Number(L._hour.textContent) ===
																				Number(m)) ||
																			Number(L._hour.textContent) <
																				Number(m)) &&
																	  F.addClass(i, 'disabled')
																	: 'PM' === v &&
																	  'AM' === k.textContent &&
																	  F.addClass(i, 'disabled'),
																'AM' === v && 'PM' === k.textContent
																	? F.removeClass(i, 'disabled')
																	: 'AM' === v &&
																	  'AM' === k.textContent &&
																	  ((Number(L._hour.textContent) ===
																			Number(m) &&
																			Number(e) < Number(_)) ||
																			Number(L._hour.textContent) <
																				Number(m)) &&
																	  F.addClass(i, 'disabled')))
														: ('' !== l &&
																Number(e) > Number(l) &&
																F.addClass(i, 'disabled'),
														  '' !== u &&
																Number(e) < Number(u) &&
																F.addClass(i, 'disabled'),
														  '' !== d &&
																(void 0 !== p
																	? ('PM' === p &&
																			'PM' === k.textContent &&
																			((L._isAmEnabled = !1),
																			(L._isPmEnabled = !0),
																			Number(e) > Number(f) &&
																				F.addClass(i, 'disabled')),
																	  'AM' === p && 'PM' === k.textContent
																			? ((L._isAmEnabled = !1),
																			  (L._isPmEnabled = !0),
																			  F.addClass(i, 'disabled'))
																			: 'AM' === p &&
																			  'AM' === k.textContent &&
																			  ((L._isAmEnabled = !0),
																			  (L._isPmEnabled = !1),
																			  Number(e) > Number(f) &&
																					F.addClass(i, 'disabled')))
																	: Number(e) > Number(f) &&
																	  F.addClass(i, 'disabled')),
														  '' !== c &&
																Number(e) < Number(m) &&
																F.addClass(i, 'disabled'),
														  '' !== c &&
																void 0 !== v &&
																('PM' === v && 'PM' === k.textContent
																	? ((L._isAmEnabled = !1),
																	  (L._isPmEnabled = !0),
																	  Number(e) < Number(m) &&
																			F.addClass(i, 'disabled'))
																	: 'PM' === v &&
																	  'AM' === k.textContent &&
																	  ((L._isAmEnabled = !0),
																	  (L._isPmEnabled = !1),
																	  F.addClass(i, 'disabled')),
																'AM' === v && 'PM' === k.textContent
																	? ((L._isAmEnabled = !1),
																	  (L._isPmEnabled = !0),
																	  F.removeClass(i, 'disabled'))
																	: 'AM' === v &&
																	  'AM' === k.textContent &&
																	  ((L._isAmEnabled = !0),
																	  (L._isPmEnabled = !1),
																	  Number(e) < Number(m) &&
																			F.addClass(i, 'disabled')))),
													i.appendChild(r),
													w.appendChild(i)
												);
											}));
									}),
									(this._element = e),
									this._element && m.setData(e, sh, this),
									(this._document = document),
									(this._options = this._getConfig(t)),
									(this._currentTime = null),
									(this._toggleButtonId = d('timepicker-toggle-')),
									(this.hoursArray = [
										'12',
										'1',
										'2',
										'3',
										'4',
										'5',
										'6',
										'7',
										'8',
										'9',
										'10',
										'11',
									]),
									(this.innerHours = [
										'00',
										'13',
										'14',
										'15',
										'16',
										'17',
										'18',
										'19',
										'20',
										'21',
										'22',
										'23',
									]),
									(this.minutesArray = [
										'00',
										'05',
										'10',
										'15',
										'20',
										'25',
										'30',
										'35',
										'40',
										'45',
										'50',
										'55',
									]),
									(this.input = V.findOne('input', this._element)),
									(this.dataWithIcon = e.dataset.withIcon),
									(this.dataToggle = e.dataset.toggle),
									(this.customIcon = V.findOne(
										'.timepicker-toggle-button',
										this._element
									)),
									this._checkToggleButton(),
									(this.inputFormatShow = V.findOne(
										'[data-mdb-timepicker-format24]',
										this._element
									)),
									(this.inputFormat =
										null === this.inputFormatShow
											? ''
											: Object.values(this.inputFormatShow.dataset)[0]),
									(this.elementToggle = V.findOne(
										'[data-mdb-toggle]',
										this._element
									)),
									(this.toggleElement = Object.values(
										e.querySelector('[data-mdb-toggle]').dataset
									)[0]),
									(this._hour = null),
									(this._minutes = null),
									(this._AM = null),
									(this._PM = null),
									(this._wrapper = null),
									(this._modal = null),
									(this._hand = null),
									(this._circle = null),
									(this._focusTrap = null),
									(this._popper = null),
									(this._interval = null),
									(this._inputValue =
										'' !== this._options.defaultTime
											? this._options.defaultTime
											: this.input.value),
									this._options.format24 &&
										((this._options.format12 = !1),
										(this._currentTime = Kf(this._inputValue))),
									this._options.format12 &&
										((this._options.format24 = !1),
										(this._currentTime = Jf(this._inputValue))),
									this._options.readOnly &&
										this.input.setAttribute('readonly', !0),
									'true' === this.inputFormat &&
										'' !== this.inputFormat &&
										((this._options.format12 = !1),
										(this._options.format24 = !0),
										(this._currentTime = Kf(this._inputValue))),
									this.init(),
									(this._isHours = !0),
									(this._isMinutes = !1),
									(this._isInvalidTimeFormat = !1),
									(this._isMouseMove = !1),
									(this._isInner = !1),
									(this._isAmEnabled = !1),
									(this._isPmEnabled = !1),
									(this._objWithDataOnChange = { degrees: null });
							}
							var e, t, n;
							return (
								(e = i),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, sh),
													t = 'object' === Qf(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new i(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n]();
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, sh);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return ah;
										},
									},
								]),
								(t = [
									{
										key: 'init',
										value: function () {
											var e,
												t,
												n,
												i = this._options,
												r = i.format12,
												o = i.format24,
												a = i.enableValidation;
											F.addClass(this.input, Nh),
												void 0 !== this._currentTime
													? ((i = (e = this._currentTime).hours),
													  (t = e.minutes),
													  (n = e.amOrPm),
													  (e = Number(i) < 10 ? 0 : ''),
													  (t = ''.concat(e).concat(Number(i), ':').concat(t)),
													  (n = n),
													  r
															? (this.input.value = ''.concat(t, ' ').concat(n))
															: o && (this.input.value = ''.concat(t)))
													: ((n = t = e = ''), (this.input.value = '')),
												0 < this.input.value.length &&
													'' !== this.input.value &&
													F.addClass(this.input, 'active'),
												(null === this._options && null === this._element) ||
													(a && this._getValidate('keydown change blur focus'),
													this._handleOpen(),
													this._listenToToggleKeydown());
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._removeModal(),
												null !== this._element &&
													m.removeData(this._element, sh),
												(this._element = null),
												(this._options = null),
												(this.input = null),
												(this._focusTrap = null),
												H.off(
													this._document,
													'click',
													"[data-mdb-toggle='".concat(this.toggleElement, "']")
												),
												H.off(
													this._element,
													'keydown',
													"[data-mdb-toggle='".concat(this.toggleElement, "']")
												);
										},
									},
									{
										key: '_checkToggleButton',
										value: function () {
											null === this.customIcon &&
												(void 0 !== this.dataWithIcon &&
													((this._options.withIcon = null),
													'true' === this.dataWithIcon &&
														this._appendToggleButton(this._options)),
												this._options.withIcon &&
													this._appendToggleButton(this._options));
										},
									},
									{
										key: '_appendToggleButton',
										value: function () {
											var e = (function (e, t) {
												e = e.iconClass;
												return '\n  <button id="'
													.concat(
														t,
														'" tabindex="0" type="button" class="timepicker-toggle-button" data-mdb-toggle="timepicker"  >\n    <i class="'
													)
													.concat(e, '"></i>\n  </button>\n');
											})(this._options, this._toggleButtonId);
											this.input.insertAdjacentHTML('afterend', e);
										},
									},
									{
										key: '_getDomElements',
										value: function () {
											(this._hour = V.findOne('.'.concat(kh))),
												(this._minutes = V.findOne('.'.concat(Oh))),
												(this._AM = V.findOne('.'.concat(uh))),
												(this._PM = V.findOne('.'.concat(Ch))),
												(this._wrapper = V.findOne('.'.concat(Rh))),
												(this._modal = V.findOne('.'.concat(Yh))),
												(this._hand = V.findOne('.'.concat(bh))),
												(this._circle = V.findOne('.'.concat(hh))),
												(this._clock = V.findOne('.'.concat(mh))),
												(this._clockInner = V.findOne('.'.concat(_h)));
										},
									},
									{
										key: '_handlerMaxMinHoursOptions',
										value: function (e, t, n, i, r, o) {
											var a = '' !== n ? 30 * n : '',
												s = '' !== i ? 30 * i : '';
											if ('' !== n && '' !== i) {
												if ((e <= 0 && (e = 360 + e), e <= a && s <= e))
													return t();
											} else if ('' !== i) {
												if (
													(e <= 0 && (e = 360 + e),
													12 < Number(i) && (s = 30 * i - s),
													s <= e && void 0 === o)
												)
													return t();
												if (void 0 !== o) {
													if ('PM' === o && this._isAmEnabled) return;
													if ('PM' === o && this._isPmEnabled && s <= e)
														return t();
													if ('AM' === o && this._isPmEnabled) return t();
													if ('AM' === o && this._isAmEnabled && s <= e)
														return t();
												}
											} else {
												if ('' === n) return t();
												if ((e <= 0 && (e = 360 + e), e <= a && void 0 === r))
													return t();
												if (void 0 !== r) {
													if ('AM' === r && this._isPmEnabled) return;
													if ('AM' === r && this._isAmEnabled && e <= a)
														return t();
													if ('PM' === r && this._isPmEnabled) {
														if (e <= a) return t();
													} else if ('PM' === r && this._isAmEnabled)
														return t();
												}
											}
											return t;
										},
									},
									{
										key: '_handleKeyboard',
										value: function () {
											var g = this;
											H.on(this._document, 'keydown', '', function (e) {
												var t = g._options,
													n = t.maxHour,
													i = t.minHour,
													r = t.increment,
													o = null !== V.findOne('.'.concat(Hh)),
													a = null !== V.findOne('.'.concat(Ah)),
													s = Number(
														g._hand.style.transform.replace(/[^\d-]/g, '')
													),
													l = V.find('.'.concat(Hh), g._modal),
													u = V.find('.'.concat(Eh), g._modal),
													c = V.find('.'.concat(Ah), g._modal),
													d = '' !== n ? Number(n) : '',
													f = '' !== i ? Number(i) : '',
													h = g._makeHourDegrees(e.target, s, void 0).hour,
													p = g._makeHourDegrees(e.target, s, void 0),
													m = p.degrees,
													_ = p.addDegrees,
													v = g._makeMinutesDegrees(s, void 0),
													y = v.minute,
													t = v.degrees,
													p = g._makeMinutesDegrees(s, void 0).addDegrees,
													v = g._makeInnerHoursDegrees(s, void 0).hour;
												e.keyCode === Hc &&
													((s = V.findOne('.'.concat(ch), g._modal)),
													H.trigger(s, 'click')),
													o
														? (38 === e.keyCode &&
																((t += p),
																F.addStyle(g._hand, {
																	transform: 'rotateZ('.concat(t, 'deg)'),
																}),
																(y += 1),
																r && '0014' === (y += 4) && (y = 5),
																(g._minutes.textContent = g._setHourOrMinute(
																	59 < y ? 0 : y
																)),
																g._toggleClassActive(
																	g.minutesArray,
																	g._minutes,
																	l
																),
																g._toggleBackgroundColorCircle(''.concat(Hh))),
														  40 === e.keyCode &&
																((t -= p),
																F.addStyle(g._hand, {
																	transform: 'rotateZ('.concat(t, 'deg)'),
																}),
																r ? (y -= 5) : --y,
																-1 === y ? (y = 59) : -5 === y && (y = 55),
																(g._minutes.textContent =
																	g._setHourOrMinute(y)),
																g._toggleClassActive(
																	g.minutesArray,
																	g._minutes,
																	l
																),
																g._toggleBackgroundColorCircle(''.concat(Hh))))
														: (a &&
																(39 === e.keyCode &&
																	((g._isInner = !1),
																	F.addStyle(g._hand, {
																		height: 'calc(40% + 1px)',
																	}),
																	(g._hour.textContent = g._setHourOrMinute(
																		12 < h ? 1 : h
																	)),
																	g._toggleClassActive(
																		g.hoursArray,
																		g._hour,
																		u
																	),
																	g._toggleClassActive(
																		g.innerHours,
																		g._hour,
																		c
																	)),
																37 === e.keyCode &&
																	((g._isInner = !0),
																	F.addStyle(g._hand, { height: '21.5%' }),
																	(g._hour.textContent = g._setHourOrMinute(
																		24 <= v || '00' === v ? 0 : v
																	)),
																	g._toggleClassActive(
																		g.innerHours,
																		g._hour,
																		c
																	),
																	g._toggleClassActive(
																		g.hoursArray,
																		g._hour - 1,
																		u
																	))),
														  38 === e.keyCode &&
																(g._handlerMaxMinHoursOptions(
																	m + 30,
																	function () {
																		return F.addStyle(g._hand, {
																			transform: 'rotateZ('.concat(
																				m + _,
																				'deg)'
																			),
																		});
																	},
																	n,
																	i
																),
																g._isInner
																	? (24 === (v += 1)
																			? (v = 0)
																			: (25 !== v && '001' !== v) || (v = 13),
																	  (g._hour.textContent =
																			g._setHourOrMinute(v)),
																	  g._toggleClassActive(
																			g.innerHours,
																			g._hour,
																			c
																	  ))
																	: ((h += 1),
																	  '' !== n && '' !== i
																			? n < h
																				? (h = d)
																				: h < i && (h = f)
																			: '' !== n && '' === i
																			? n < h && (h = d)
																			: '' === n &&
																			  '' !== i &&
																			  12 <= h &&
																			  (h = 12),
																	  (g._hour.textContent = g._setHourOrMinute(
																			12 < h ? 1 : h
																	  )),
																	  g._toggleClassActive(
																			g.hoursArray,
																			g._hour,
																			u
																	  ))),
														  40 === e.keyCode &&
																(g._handlerMaxMinHoursOptions(
																	m - 30,
																	function () {
																		return F.addStyle(g._hand, {
																			transform: 'rotateZ('.concat(
																				m - _,
																				'deg)'
																			),
																		});
																	},
																	n,
																	i
																),
																g._isInner
																	? (12 === --v
																			? (v = 0)
																			: -1 === v && (v = 23),
																	  (g._hour.textContent =
																			g._setHourOrMinute(v)),
																	  g._toggleClassActive(
																			g.innerHours,
																			g._hour,
																			c
																	  ))
																	: (--h,
																	  '' !== n && '' !== i
																			? d < h
																				? (h = d)
																				: h < f && (h = f)
																			: '' === n && '' !== i
																			? h <= f && (h = f)
																			: '' === n ||
																			  '' !== i ||
																			  (h <= 1 && (h = 1)),
																	  (g._hour.textContent = g._setHourOrMinute(
																			0 === h ? 12 : h
																	  )),
																	  g._toggleClassActive(
																			g.hoursArray,
																			g._hour,
																			u
																	  ))));
											});
										},
									},
									{
										key: '_setActiveClassToTipsOnOpen',
										value: function (e) {
											var t = this;
											if (!this._isInvalidTimeFormat)
												if (this._options.format24) {
													var n = V.find('.'.concat(Eh), this._modal),
														i = V.find('.'.concat(Ah), this._modal);
													this._addActiveClassToTip(n, e),
														this._addActiveClassToTip(i, e);
												} else {
													for (
														var r = arguments.length,
															o = new Array(1 < r ? r - 1 : 0),
															a = 1;
														a < r;
														a++
													)
														o[a - 1] = arguments[a];
													[].concat(o).filter(function (e) {
														return (
															'PM' === e
																? F.addClass(t._PM, lh)
																: 'AM' === e
																? F.addClass(t._AM, lh)
																: (F.removeClass(t._AM, lh),
																  F.removeClass(t._PM, lh)),
															e
														);
													});
													i = V.find('.'.concat(Eh), this._modal);
													this._addActiveClassToTip(i, e);
												}
										},
									},
									{
										key: '_setTipsAndTimesDependOnInputValue',
										value: function (e, t) {
											var n = this._options,
												i = n.inline,
												n = n.format12;
											this._isInvalidTimeFormat
												? ((this._hour.textContent = '12'),
												  (this._minutes.textContent = '00'),
												  i ||
														F.addStyle(this._hand, {
															transform: 'rotateZ(0deg)',
														}),
												  n && F.addClass(this._PM, lh))
												: ((n = 12 < e ? 30 * e - 360 : 30 * e),
												  (this._hour.textContent = e),
												  (this._minutes.textContent = t),
												  i ||
														(F.addStyle(this._hand, {
															transform: 'rotateZ('.concat(n, 'deg)'),
														}),
														F.addStyle(this._circle, {
															backgroundColor: '#1976d2',
														}),
														(12 < Number(e) || '00' === e) &&
															F.addStyle(this._hand, { height: '21.5%' })));
										},
									},
									{
										key: '_getScrollbarWidth',
										value: function () {
											var e = document.createElement('div');
											(e.className = 'modal-scrollbar-measure'),
												document.body.appendChild(e);
											var t = e.getBoundingClientRect().width - e.clientWidth;
											return document.body.removeChild(e), t;
										},
									},
									{
										key: '_listenToToggleKeydown',
										value: function () {
											var t = this;
											H.on(
												this._element,
												'keydown',
												"[data-mdb-toggle='".concat(this.toggleElement, "']"),
												function (e) {
													13 === e.keyCode &&
														(e.preventDefault(),
														H.trigger(t.elementToggle, 'click'));
												}
											);
										},
									},
									{
										key: '_handleOpen',
										value: function () {
											var k = this;
											P(
												this._element,
												'click',
												"[data-mdb-toggle='".concat(this.toggleElement, "']"),
												function (b) {
													var e;
													null !== k._options &&
														((e =
															null !== F.getDataAttribute(k.input, 'toggle')
																? 200
																: 0),
														setTimeout(function () {
															F.addStyle(k.elementToggle, {
																pointerEvents: 'none',
															}),
																k.elementToggle.blur(),
																(u =
																	'' === Gf(k.input)[0]
																		? ['12', '00', 'PM']
																		: Gf(k.input));
															var e,
																t,
																n,
																i,
																r,
																o,
																a,
																s,
																l,
																u,
																c = k._options,
																d = c.modalID,
																f = c.inline,
																h = c.format12,
																p = c.overflowHidden,
																m = eh(u, 3),
																_ = m[0],
																v = m[1],
																y = m[2],
																g = x('div');
															(12 < Number(_) || '00' === _) &&
																(k._isInner = !0),
																k.input.blur(),
																b.target.blur(),
																(g.innerHTML =
																	((e = k._options),
																	(t = e.format24),
																	(n = e.okLabel),
																	(i = e.cancelLabel),
																	(r = e.headID),
																	(o = e.footerID),
																	(a = e.bodyID),
																	(s = e.pickerID),
																	(l = e.clearLabel),
																	(c = e.inline),
																	(u = e.showClearBtn),
																	(m = e.amLabel),
																	(e = e.pmLabel),
																	(i = "<div id='"
																		.concat(
																			s,
																			'\' class=\'timepicker-wrapper h-100 d-flex align-items-center justify-content-center flex-column position-fixed\'>\n               <div class="d-flex align-items-center justify-content-center flex-column timepicker-container">\n                  <div class="d-flex flex-column timepicker-elements justify-content-around">\n                  <div id=\''
																		)
																		.concat(
																			r,
																			"' class='timepicker-head d-flex flex-row align-items-center justify-content-center'\n                  style='padding-right:"
																		)
																		.concat(
																			t ? 50 : 0,
																			"px'>\n                  <div class='timepicker-head-content d-flex w-100 justify-content-evenly'>\n                      <div class=\"timepicker-current-wrapper\">\n                        <span class=\"position-relative h-100\">\n                          <button type='button' class='timepicker-current timepicker-hour active ripple' tabindex=\"0\">21</button>\n                        </span>\n                        <button type='button' class='timepicker-dot' disabled>:</button>\n                      <span class=\"position-relative h-100\">\n                        <button type='button' class='timepicker-current timepicker-minute ripple' tabindex=\"0\">21</button>\n                      </span>\n                      </div>\n                      "
																		)
																		.concat(
																			t
																				? ''
																				: '<div class="d-flex flex-column justify-content-center timepicker-mode-wrapper">\n                              <button type=\'button\' class="timepicker-hour-mode timepicker-am ripple" tabindex="0">'
																						.concat(
																							m,
																							'</button>\n                              <button class="timepicker-hour-mode timepicker-pm ripple" tabindex="0">'
																						)
																						.concat(
																							e,
																							'</button>\n                            </div>'
																						),
																			'\n                  </div>\n                </div>\n                '
																		)
																		.concat(
																			c
																				? ''
																				: "<div id='"
																						.concat(
																							a,
																							"' class='timepicker-clock-wrapper d-flex justify-content-center flex-column align-items-center'>\n                        <div class='timepicker-clock'>\n                          <span class='timepicker-middle-dot position-absolute'></span>\n                          <div class='timepicker-hand-pointer position-absolute'>\n                            <div class='timepicker-circle position-absolute'></div>\n                          </div>\n                          "
																						)
																						.concat(
																							t
																								? '<div class="timepicker-clock-inner"></div>'
																								: '',
																							'\n                         </div>\n                      </div>'
																						),
																			"\n\n              </div>\n                <div id='"
																		)
																		.concat(
																			o,
																			"' class='timepicker-footer'>\n                  <div class=\"w-100 d-flex justify-content-between\">\n                    "
																		)
																		.concat(
																			u
																				? "<button type='button' class='timepicker-button timepicker-clear ripple' tabindex=\"0\">".concat(
																						l,
																						'</button>'
																				  )
																				: '',
																			"\n                    <button type='button' class='timepicker-button timepicker-cancel ripple' tabindex=\"0\">"
																		)
																		.concat(
																			i,
																			"</button>\n                    <button type='button' class='timepicker-button timepicker-submit ripple' tabindex=\"0\">"
																		)
																		.concat(
																			n,
																			'</button>\n                  </div>\n                </div>\n              </div>\n        </div>'
																		)),
																	(n = "<div id='"
																		.concat(
																			s,
																			'\' class=\'timepicker-wrapper h-100 d-flex align-items-center justify-content-center flex-column timepicker-wrapper-inline\'>\n               <div class="d-flex align-items-center justify-content-center flex-column timepicker-container">\n                  <div class="d-flex flex-column timepicker-elements justify-content-around timepicker-elements-inline">\n                  <div id=\''
																		)
																		.concat(
																			r,
																			"' class='timepicker-head d-flex flex-row align-items-center justify-content-center timepicker-head-inline'\n                  style='padding-right:0px'>\n                  <div class='timepicker-head-content d-flex w-100 justify-content-evenly align-items-center'>\n                      <div class=\"timepicker-current-wrapper\">\n                        <span class=\"position-relative h-100 timepicker-inline-hour-icons\">\n                          <i class=\"fas fa-chevron-up position-absolute text-white timepicker-icon-up timepicker-icon-inline-hour\"></i>\n                          <button type='button' class='timepicker-current timepicker-hour active ripple timepicker-current-inline' tabindex=\"0\">21</button>\n                          <i class=\"fas fa-chevron-down position-absolute text-white timepicker-icon-down timepicker-icon-inline-hour\"></i>\n                        </span>\n                        <button type='button' class='timepicker-dot timepicker-current-inline' disabled>:</button>\n                      <span class=\"position-relative h-100  timepicker-inline-minutes-icons\">\n                        <i class=\"fas fa-chevron-up position-absolute text-white timepicker-icon-up timepicker-icon-inline-minute\"></i>\n                        <button type='button' class='timepicker-current timepicker-minute ripple timepicker-current-inline' tabindex=\"0\">21</button>\n                        <i class=\"fas fa-chevron-down position-absolute text-white timepicker-icon-down timepicker-icon-inline-minute\"></i>\n                      </span>\n                      </div>\n                      "
																		)
																		.concat(
																			t
																				? ''
																				: '<div class="d-flex justify-content-center timepicker-mode-wrapper">\n                              <button type=\'button\' class="timepicker-hour-mode timepicker-am ripple me-2 ms-4" tabindex="0">'
																						.concat(
																							m,
																							'</button>\n                              <button class="timepicker-hour-mode timepicker-pm ripple" tabindex="0">'
																						)
																						.concat(
																							e,
																							"</button>\n                              <button type='button' class='timepicker-button timepicker-submit timepicker-submit-inline ripple py-1 px-2 mb-0' tabindex=\"0\">"
																						)
																						.concat(
																							n,
																							'</button>\n                            </div>'
																						),
																			'\n                      '
																		)
																		.concat(
																			t
																				? '<button class=\'timepicker-button timepicker-submit timepicker-submit-inline ripple py-1 px-2 mb-0\' tabindex="0">'.concat(
																						n,
																						'</button>'
																				  )
																				: '',
																			'\n                  </div>\n                </div>\n              </div>\n           </div>\n        </div>\n  '
																		)),
																	c ? n : i)),
																F.addClass(g, Yh),
																g.setAttribute('role', 'dialog'),
																g.setAttribute('tabIndex', '-1'),
																g.setAttribute('id', d),
																f &&
																	(k._popper = Nr(k.input, g, {
																		placement: 'bottom-start',
																	})),
																k._document.body.appendChild(g),
																k._getDomElements(),
																k._toggleBackdropAnimation(),
																k._setActiveClassToTipsOnOpen(_, v, y),
																k._appendTimes(),
																k._setActiveClassToTipsOnOpen(_, v, y),
																k._setTipsAndTimesDependOnInputValue(_, v),
																'' === k.input.value &&
																	((v = V.find('.'.concat(Eh), k._modal)),
																	h && F.addClass(k._PM, lh),
																	(k._hour.textContent = '12'),
																	(k._minutes.textContent = '00'),
																	k._addActiveClassToTip(
																		v,
																		Number(k._hour.textContent)
																	)),
																k._handleSwitchTimeMode(),
																k._handleOkButton(),
																k._handleClose(),
																f
																	? (k._handleHoverInlineBtn(),
																	  k._handleDocumentClickInline(),
																	  k._handleInlineClicks())
																	: (k._handleSwitchHourMinute(),
																	  k._handleClockClick(),
																	  k._handleKeyboard(),
																	  F.addStyle(k._hour, {
																			pointerEvents: 'none',
																	  }),
																	  F.addStyle(k._minutes, {
																			pointerEvents: '',
																	  })),
																p &&
																	((p =
																		window.innerWidth >
																		document.documentElement.clientWidth),
																	F.addStyle(k._document.body, {
																		overflow: 'hidden',
																	}),
																	!Xf() &&
																		p &&
																		F.addStyle(k._document.body, {
																			paddingRight: ''.concat(
																				k._getScrollbarWidth(),
																				'px'
																			),
																		})),
																(k._focusTrap = new Ac(k._wrapper, {
																	event: 'keydown',
																	condition: function (e) {
																		return 'Tab' === e.key;
																	},
																})),
																k._focusTrap.trap();
														}, e));
												}
											);
										},
									},
									{
										key: '_handleInlineClicks',
										value: function () {
											var c = this;
											P(
												this._modal,
												'click mousedown mouseup touchstart touchend',
												'.'.concat(Dh, ', .').concat(Mh),
												function (e) {
													function t(e) {
														(e = e),
															c._options.format24
																? (24 < e ? (e = 1) : e < 0 && (e = 23),
																  23 < e && (e = 0))
																: (12 < e ? (e = 1) : e < 1 && (e = 12),
																  12 < e && (e = 1)),
															(c._hour.textContent = c._setHourOrMinute(e));
													}
													function n(e) {
														59 < (e = e) ? (e = 1) : e < 0 && (e = 59),
															(c._minutes.textContent = c._setHourOrMinute(e));
													}
													function i() {
														t((l += 1));
													}
													function r() {
														n((u += 1));
													}
													function o() {
														t(--l);
													}
													var a = e.target,
														s = e.type,
														l = Number(c._hour.textContent),
														u = Number(c._minutes.textContent),
														e = function () {
															n(--u);
														};
													F.hasClass(a, Dh)
														? F.hasClass(a.parentNode, Sh)
															? 'mousedown' === s || 'touchstart' === s
																? (c._interval = setInterval(i, 100))
																: 'mouseup' === s || 'touchend' === s
																? clearInterval(c._interval)
																: i()
															: 'mousedown' === s || 'touchstart' === s
															? (c._interval = setInterval(r, 100))
															: 'mouseup' === s || 'touchend' === s
															? clearInterval(c._interval)
															: r()
														: F.hasClass(a, Mh) &&
														  (F.hasClass(a.parentNode, Sh)
																? 'mousedown' === s || 'touchstart' === s
																	? (c._interval = setInterval(o, 100))
																	: 'mouseup' === s || 'touchend' === s
																	? clearInterval(c._interval)
																	: o()
																: 'mousedown' === s || 'touchstart' === s
																? (c._interval = setInterval(e, 100))
																: 'mouseup' === s || 'touchend' === s
																? clearInterval(c._interval)
																: e());
												}
											);
										},
									},
									{
										key: '_handleClose',
										value: function () {
											var a = this;
											H.on(
												this._modal,
												'click',
												'.'.concat(Rh, ', .').concat(ch, ', .').concat(dh),
												function (e) {
													function t() {
														F.addStyle(a.elementToggle, {
															pointerEvents: 'auto',
														}),
															a._toggleBackdropAnimation(!0),
															a._removeModal(),
															a._focusTrap.disable(),
															(a._focusTrap = null),
															a.elementToggle
																? a.elementToggle.focus()
																: a.input && a.input.focus();
													}
													var n,
														i,
														r = e.target,
														o = a._options.closeModalOnBackdropClick;
													F.hasClass(r, dh)
														? ((a.input.value = ''),
														  F.removeClass(a.input, 'active'),
														  (n = (i = eh(
																'' === Gf(a.input)[0]
																	? ['12', '00', 'PM']
																	: Gf(a.input),
																3
														  ))[0]),
														  (e = i[1]),
														  (i = i[2]),
														  a._setTipsAndTimesDependOnInputValue('12', '00'),
														  a._setActiveClassToTipsOnOpen(n, e, i),
														  a._hour.click())
														: (F.hasClass(r, ch) || (F.hasClass(r, Rh) && o)) &&
														  t();
												}
											);
										},
									},
									{
										key: 'showValueInput',
										value: function () {
											return this.input.value;
										},
									},
									{
										key: '_handleOkButton',
										value: function () {
											var p = this;
											P(this._modal, 'click', '.'.concat(fh), function () {
												var e = p._options,
													t = e.format24,
													n = e.readOnly,
													i = e.focusInputAfterApprove,
													r = e.maxTime,
													o = e.minTime,
													a = p._document.querySelector(
														'.'.concat(wh, '.').concat(lh)
													),
													s = ''
														.concat(p._hour.textContent, ':')
														.concat(p._minutes.textContent),
													l = eh(Gf(r, !1), 3),
													u = l[0],
													c = l[1],
													d = l[2],
													f = eh(Gf(o, !1), 3),
													h = f[0],
													e = f[1],
													l = f[2],
													f = null !== V.findOne('.'.concat(Hh));
												if (
													(F.addClass(p.input, 'active'),
													F.addStyle(p.elementToggle, {
														pointerEvents: 'auto',
													}),
													f)
												) {
													if ('' !== r)
														if (void 0 !== d) {
															if ('PM' === d && 'PM' === a.textContent) {
																if (Number(p._hour.textContent) > Number(u))
																	return;
																if (
																	Number(p._minutes.textContent) > Number(c) &&
																	Number(p._hour.textContent) === Number(u)
																)
																	return;
															}
															if ('AM' === d && 'PM' === a.textContent) return;
															if ('AM' === d && 'AM' === a.textContent) {
																if (Number(p._hour.textContent) > Number(u))
																	return;
																if (
																	Number(p._hour.textContent) === Number(u) &&
																	Number(p._minutes.textContent) > Number(c)
																)
																	return;
															}
														} else if (
															void 0 !== d &&
															Number(p._minutes.textContent) > Number(u)
														)
															return;
													if ('' !== o && void 0 !== l) {
														if ('PM' === l && 'PM' === a.textContent) {
															if (Number(p._hour.textContent) < Number(h))
																return;
															if (
																Number(p._minutes.textContent) < Number(e) &&
																Number(p._hour.textContent) === Number(h)
															)
																return;
														} else if ('PM' === l && 'AM' === a.textContent)
															return;
														if ('AM' === l && 'AM' === a.textContent) {
															if (Number(p._minutes.textContent) < Number(e))
																return;
															if (
																Number(p._hour.textContent) < Number(h) &&
																Number(p._minutes.textContent) === Number(e)
															)
																return;
														}
													}
												} else {
													if ('' !== r)
														if (void 0 !== d) {
															if (
																'PM' === d &&
																'PM' === a.textContent &&
																Number(p._hour.textContent) > Number(u)
															)
																return;
															if ('AM' === d && 'PM' === a.textContent) return;
															if (
																'AM' === d &&
																'AM' === a.textContent &&
																Number(p._hour.textContent) > Number(u)
															)
																return;
														} else if (Number(p._hour.textContent) > Number(u))
															return;
													if ('' !== o && void 0 !== l) {
														if ('PM' === l && 'PM' === a.textContent) {
															if (Number(p._hour.textContent) < Number(h))
																return;
														} else if ('PM' === l && 'AM' === a.textContent)
															return;
														if (
															'AM' === l &&
															'AM' === a.textContent &&
															Number(p._hour.textContent) < Number(h)
														)
															return;
													}
												}
												void 0 !==
													(function (e, t, n, i) {
														var r = e.maxHour,
															o = e.minHour,
															a = e.maxTime,
															s = e.minTime,
															l = Gf(t)[1],
															u = zf(Gf(a, !1), 3),
															c = u[0],
															e = u[1],
															t = u[2],
															a = zf(Gf(s, !1), 3),
															u = a[0],
															s = a[1],
															a = a[2];
														if ('' !== r && '' !== o) {
															if (
																Number(n) > Number(r) ||
																Number(n) < Number(o)
															)
																return;
														} else if ('' === r && '' !== o) {
															if (Number(n) < Number(o)) return;
														} else if (
															'' !== r &&
															'' === o &&
															Number(n) > Number(r)
														)
															return;
														if (void 0 === t && void 0 === a)
															if (void 0 === t) {
																if ('' !== c && '' === u) {
																	if (Number(n) > Number(c)) return;
																	if (
																		'' !== e &&
																		void 0 === s &&
																		Number(n) > Number(c)
																	)
																		return;
																} else if (
																	'' === c &&
																	'' !== u &&
																	void 0 === e &&
																	'' !== s &&
																	(Number(n) < Number(u) || i < Number(s))
																)
																	return;
															} else if (void 0 === a)
																if ('' !== c && '' === u) {
																	if (Number(n) > Number(c)) return;
																	if (
																		'' !== e &&
																		void 0 === s &&
																		(Number(n) > Number(c) || i > Number(e))
																	)
																		return;
																} else if (
																	'' === c &&
																	'' !== u &&
																	void 0 === e &&
																	'' !== s &&
																	(Number(n) < Number(u) || i < Number(s))
																)
																	return;
														return [n, l];
													})(
														p._options,
														p.input,
														p._hour.textContent,
														p._minutes.textContent
													) &&
													(p._isInvalidTimeFormat &&
														F.removeClass(p.input, 'is-invalid'),
													!n && i && p.input.focus(),
													F.addStyle(p.elementToggle, {
														pointerEvents: 'auto',
													}),
													(p.input.value = t
														? s
														: null === a
														? ''.concat(s, ' PM')
														: ''.concat(s, ' ').concat(a.textContent)),
													p._toggleBackdropAnimation(!0),
													p._removeModal(),
													H.trigger(p.input, 'input.mdb.timepicker'));
											});
										},
									},
									{
										key: '_handleHoverInlineBtn',
										value: function () {
											var r = this;
											P(
												this._modal,
												'mouseover mouseleave',
												'.'.concat(gh),
												function (e) {
													var t = e.type,
														n = e.target,
														i = V.find('.'.concat(Lh), r._modal),
														e = V.find('.'.concat(xh), r._modal);
													'mouseover' === t
														? F.hasClass(n, kh)
															? i.forEach(function (e) {
																	return F.addClass(e, lh);
															  })
															: e.forEach(function (e) {
																	return F.addClass(e, lh);
															  })
														: F.hasClass(n, kh)
														? i.forEach(function (e) {
																return F.removeClass(e, lh);
														  })
														: e.forEach(function (e) {
																return F.removeClass(e, lh);
														  });
												}
											);
										},
									},
									{
										key: '_handleDocumentClickInline',
										value: function () {
											var t = this;
											H.on(document, 'click', function (e) {
												e = e.target;
												!t._modal ||
													t._modal.contains(e) ||
													F.hasClass(e, 'timepicker-icon') ||
													(clearInterval(t._interval),
													F.addStyle(t.elementToggle, {
														pointerEvents: 'auto',
													}),
													t._removeModal());
											});
										},
									},
									{
										key: '_handleSwitchHourMinute',
										value: function () {
											var e,
												t,
												u = this;
											(e = 'click'),
												(t = yh),
												H.on(document, e, t, function (e) {
													e = e.target;
													F.hasClass(e, 'active') ||
														(document.querySelectorAll(t).forEach(function (e) {
															F.hasClass(e, 'active') &&
																F.removeClass(e, 'active');
														}),
														F.addClass(e, 'active'));
												}),
												H.on(this._modal, 'click', yh, function () {
													function t(e, t) {
														function n() {
															var e = V.find('.'.concat(Eh), u._modal),
																t = V.find('.'.concat(Hh), u._modal);
															u._addActiveClassToTip(e, s),
																u._addActiveClassToTip(t, l);
														}
														var i;
														a.forEach(function (e) {
															return e.remove();
														}),
															o.forEach(function (e) {
																return e.remove();
															}),
															F.addClass(u._hand, Ih),
															setTimeout(function () {
																F.removeClass(u._hand, Ih);
															}, 401),
															u._getAppendClock(e, '.'.concat(mh), t),
															r
																? ((i = V.find('.'.concat(Ah), u._modal)),
																  setTimeout(function () {
																		u._addActiveClassToTip(i, s), n();
																  }, 401))
																: setTimeout(function () {
																		n();
																  }, 401);
													}
													var r = u._options.format24,
														e = V.find(yh, u._modal),
														o = V.find('.'.concat(Hh), u._modal),
														a = V.find('.'.concat(Eh), u._modal),
														n = V.find('.'.concat(Ah), u._modal),
														s = Number(u._hour.textContent),
														l = Number(u._minutes.textContent);
													e.forEach(function (e) {
														F.hasClass(e, lh) &&
															(F.hasClass(e, Oh)
																? (F.addClass(u._hand, Ih),
																  F.addStyle(u._hand, {
																		transform: 'rotateZ('.concat(
																			6 * u._minutes.textContent,
																			'deg)'
																		),
																		height: 'calc(40% + 1px)',
																  }),
																  r &&
																		0 < n.length &&
																		n.forEach(function (e) {
																			return e.remove();
																		}),
																  t(u.minutesArray, ''.concat(Hh)),
																  (u._hour.style.pointerEvents = ''),
																  (u._minutes.style.pointerEvents = 'none'))
																: F.hasClass(e, kh) &&
																  (F.addStyle(u._hand, {
																		transform: 'rotateZ('.concat(
																			30 * u._hour.textContent,
																			'deg)'
																		),
																  }),
																  12 < Number(u._hour.textContent)
																		? (F.addStyle(u._hand, {
																				transform: 'rotateZ('.concat(
																					30 * u._hour.textContent - 360,
																					'deg)'
																				),
																				height: '21.5%',
																		  }),
																		  12 < Number(u._hour.textContent) &&
																				F.addStyle(u._hand, {
																					height: '21.5%',
																				}))
																		: F.addStyle(u._hand, {
																				height: 'calc(40% + 1px)',
																		  }),
																  r &&
																		u._getAppendClock(
																			u.innerHours,
																			'.'.concat(_h),
																			Ah
																		),
																  0 < n.length &&
																		n.forEach(function (e) {
																			return e.remove();
																		}),
																  t(u.hoursArray, ''.concat(Eh)),
																  F.addStyle(u._hour, {
																		pointerEvents: 'none',
																  }),
																  F.addStyle(u._minutes, {
																		pointerEvents: '',
																  })));
													});
												});
										},
									},
									{
										key: '_handleSwitchTimeMode',
										value: function () {
											var d = this;
											H.on(document, 'click', '.'.concat(wh), function (e) {
												var t = e.target,
													n = d._options,
													i = n.maxTime,
													r = n.minTime,
													o = eh(Gf(i, !1), 3),
													a = o[0],
													s = o[1],
													l = o[2],
													e = eh(Gf(r, !1), 3),
													u = e[0],
													c = e[1],
													n = e[2],
													o = V.find('.'.concat(Eh)),
													e = V.find('.'.concat(Hh));
												'' !== i &&
													void 0 !== l &&
													('PM' === l && 'PM' === t.textContent
														? ((d._isAmEnabled = !1),
														  (d._isPmEnabled = !0),
														  o.forEach(function (e) {
																Number(e.textContent) > Number(a)
																	? F.addClass(e, 'disabled')
																	: F.removeClass(e, 'disabled');
														  }),
														  e.forEach(function (e) {
																Number(e.textContent) > Number(s) &&
																Number(d._hour.textContent) >= Number(a)
																	? F.addClass(e, 'disabled')
																	: F.removeClass(e, 'disabled');
														  }))
														: 'PM' === l &&
														  'AM' === t.textContent &&
														  ((d._isAmEnabled = !0),
														  (d._isPmEnabled = !1),
														  o.forEach(function (e) {
																return F.removeClass(e, 'disabled');
														  }),
														  e.forEach(function (e) {
																return F.removeClass(e, 'disabled');
														  })),
													'AM' === l && 'PM' === t.textContent
														? ((d._isAmEnabled = !1),
														  (d._isPmEnabled = !0),
														  o.forEach(function (e) {
																return F.addClass(e, 'disabled');
														  }),
														  e.forEach(function (e) {
																return F.addClass(e, 'disabled');
														  }))
														: 'AM' === l &&
														  'AM' === t.textContent &&
														  ((d._isAmEnabled = !0),
														  (d._isPmEnabled = !1),
														  o.forEach(function (e) {
																Number(e.textContent) > Number(a)
																	? F.addClass(e, 'disabled')
																	: F.removeClass(e, 'disabled');
														  }),
														  e.forEach(function (e) {
																Number(d._hour.textContent) >= a &&
																Number(e.textContent) > Number(s)
																	? F.addClass(e, 'disabled')
																	: F.removeClass(e, 'disabled');
														  }))),
													'' !== r &&
														void 0 !== n &&
														('PM' === n && 'PM' === t.textContent
															? ((d._isAmEnabled = !1),
															  (d._isPmEnabled = !0),
															  o.forEach(function (e) {
																	Number(e.textContent) < Number(u)
																		? F.addClass(e, 'disabled')
																		: F.removeClass(e, 'disabled');
															  }),
															  e.forEach(function (e) {
																	Number(e.textContent) < Number(c) &&
																	Number(d._hour.textContent) <= Number(u)
																		? F.addClass(e, 'disabled')
																		: F.removeClass(e, 'disabled');
															  }))
															: 'PM' === n &&
															  'AM' === t.textContent &&
															  ((d._isAmEnabled = !0),
															  (d._isPmEnabled = !1),
															  o.forEach(function (e) {
																	return F.addClass(e, 'disabled');
															  }),
															  e.forEach(function (e) {
																	return F.addClass(e, 'disabled');
															  })),
														'AM' === n && 'PM' === t.textContent
															? ((d._isAmEnabled = !1),
															  (d._isPmEnabled = !0),
															  o.forEach(function (e) {
																	return F.removeClass(e, 'disabled');
															  }),
															  e.forEach(function (e) {
																	return F.removeClass(e, 'disabled');
															  }))
															: 'AM' === n &&
															  'AM' === t.textContent &&
															  ((d._isAmEnabled = !0),
															  (d._isPmEnabled = !1),
															  o.forEach(function (e) {
																	Number(e.textContent) < Number(u)
																		? F.addClass(e, 'disabled')
																		: F.removeClass(e, 'disabled');
															  }),
															  e.forEach(function (e) {
																	Number(e.textContent) < Number(c) &&
																	Number(d._hour.textContent) === Number(u)
																		? F.addClass(e, 'disabled')
																		: F.removeClass(e, 'disabled');
															  }))),
													F.hasClass(t, lh) ||
														(V.find('.'.concat(wh)).forEach(function (e) {
															F.hasClass(e, lh) && F.removeClass(e, lh);
														}),
														F.addClass(t, lh));
											});
										},
									},
									{
										key: '_handleClockClick',
										value: function () {
											var b = this,
												k = V.findOne('.'.concat(vh));
											P(
												document,
												'mousedown mouseup mousemove mouseleave mouseover touchstart touchmove touchend',
												'',
												function (e) {
													Xf() || e.preventDefault();
													var t = b._options,
														n = t.maxHour,
														i = t.minHour,
														r = t.maxTime,
														o = t.minTime,
														a = e.type,
														s = e.target,
														l = b._options,
														u = l.closeModalOnMinutesClick,
														c = l.switchHoursToMinutesOnClick,
														d = null !== V.findOne('.'.concat(Hh), b._modal),
														f = null !== V.findOne('.'.concat(Eh), b._modal),
														h = null !== V.findOne('.'.concat(Ah), b._modal),
														p = V.find('.'.concat(Hh), b._modal),
														t = Uf(e, k),
														l = k.offsetWidth / 2,
														t = Math.atan2(t.y - l, t.x - l);
													Xf() &&
														((m = Uf(e, k, !0)),
														(t = Math.atan2(m.y - l, m.x - l)));
													var m = null,
														_ = null;
													if (
														('mousedown' === a ||
														'mousemove' === a ||
														'touchmove' === a ||
														'touchstart' === a
															? ('mousedown' !== a &&
																	'touchstart' !== a &&
																	'touchmove' !== a) ||
															  ((F.hasClass(s, vh) ||
																	F.hasClass(s, mh) ||
																	F.hasClass(s, Hh) ||
																	F.hasClass(s, _h) ||
																	F.hasClass(s, Ah) ||
																	F.hasClass(s, Eh) ||
																	F.hasClass(s, hh) ||
																	F.hasClass(s, bh) ||
																	F.hasClass(s, Th) ||
																	F.hasClass(s, jh) ||
																	F.hasClass(s, Ph)) &&
																	((b._isMouseMove = !0),
																	Xf() &&
																		((m = e.touches[0].clientX),
																		(l = e.touches[0].clientY),
																		(_ = document.elementFromPoint(m, l)))))
															: ('mouseup' !== a && 'touchend' !== a) ||
															  ((b._isMouseMove = !1),
															  (F.hasClass(s, mh) ||
																	F.hasClass(s, _h) ||
																	F.hasClass(s, Ah) ||
																	F.hasClass(s, Eh) ||
																	F.hasClass(s, hh) ||
																	F.hasClass(s, bh) ||
																	F.hasClass(s, Th) ||
																	F.hasClass(s, jh) ||
																	F.hasClass(s, Ph)) &&
																	(f || h) &&
																	c &&
																	H.trigger(b._minutes, 'click'),
															  d &&
																	u &&
																	((v = V.findOne('.'.concat(fh), b._modal)),
																	H.trigger(v, 'click'))),
														d)
													) {
														var v = Math.trunc((180 * t) / Math.PI) + 90,
															d = b._makeMinutesDegrees(v, void 0),
															v = d.degrees,
															d = d.minute;
														if (void 0 === b._handlerMaxMinMinutesOptions(v, d))
															return;
														var v = b._handlerMaxMinMinutesOptions(v, d),
															d = v.degrees,
															y = v.minute;
														if (b._isMouseMove) {
															if (
																(F.addStyle(b._hand, {
																	transform: 'rotateZ('.concat(d, 'deg)'),
																}),
																void 0 === y)
															)
																return;
															(b._minutes.textContent =
																10 <= y || '00' === y ? y : '0'.concat(y)),
																b._toggleClassActive(
																	b.minutesArray,
																	b._minutes,
																	p
																),
																b._toggleBackgroundColorCircle(''.concat(Hh)),
																(b._objWithDataOnChange.degreesMinutes = d),
																(b._objWithDataOnChange.minutes = y);
														}
													}
													if (f || h) {
														var g = Math.trunc((180 * t) / Math.PI) + 90,
															g = 30 * Math.round(g / 30);
														if (
															(F.addStyle(b._circle, {
																backgroundColor: '#1976d2',
															}),
															void 0 === b._makeHourDegrees(s, g, void 0))
														)
															return;
														t = function () {
															if (Xf()) {
																var e = b._makeHourDegrees(_, g, void 0),
																	t = e.degrees,
																	e = e.hour;
																return b._handleMoveHand(_, e, t);
															}
															(e = b._makeHourDegrees(s, g, void 0)),
																(t = e.degrees),
																(e = e.hour);
															return b._handleMoveHand(s, e, t);
														};
														(b._objWithDataOnChange.degreesHours = g),
															'' !== o || '' !== r
																? b._handlerMaxMinHoursOptions(
																		g,
																		t,
																		Gf(r, !1)[0],
																		Gf(o, !1)[0],
																		Gf(r, !1)[2],
																		Gf(o, !1)[2]
																  )
																: b._handlerMaxMinHoursOptions(g, t, n, i);
													}
													e.stopPropagation();
												}
											);
										},
									},
									{
										key: '_handleMoveHand',
										value: function (e, t, n) {
											var i = V.find('.'.concat(Eh), this._modal),
												r = V.find('.'.concat(Ah), this._modal);
											this._isMouseMove &&
												(F.hasClass(e, _h) ||
												F.hasClass(e, Ah) ||
												F.hasClass(e, Ph)
													? F.addStyle(this._hand, { height: '21.5%' })
													: F.addStyle(this._hand, {
															height: 'calc(40% + 1px)',
													  }),
												F.addStyle(this._hand, {
													transform: 'rotateZ('.concat(n, 'deg)'),
												}),
												(this._hour.textContent =
													10 <= t || '00' === t ? t : '0'.concat(t)),
												this._toggleClassActive(this.hoursArray, this._hour, i),
												this._toggleClassActive(this.innerHours, this._hour, r),
												(this._objWithDataOnChange.hour =
													10 <= t || '00' === t ? t : '0'.concat(t)));
										},
									},
									{
										key: '_handlerMaxMinMinutesOptions',
										value: function (e, t) {
											var n = this._options,
												i = n.increment,
												r = n.maxTime,
												o = n.minTime,
												a = Gf(r, !1)[1],
												s = Gf(o, !1)[1],
												l = Gf(r, !1)[0],
												u = Gf(o, !1)[0],
												c = Gf(r, !1)[2],
												n = Gf(o, !1)[2],
												a = '' !== a ? 6 * a : '',
												s = '' !== s ? 6 * s : '';
											if (void 0 === c && void 0 === n) {
												if ('' !== r && '' !== o) {
													if (e <= a && s <= e) return e;
												} else if (
													'' !== o &&
													Number(this._hour.textContent) <= Number(u)
												) {
													if (e <= s - 6) return e;
												} else if (
													'' !== r &&
													Number(this._hour.textContent) >= Number(l) &&
													a + 6 <= e
												)
													return e;
											} else if ('' !== o) {
												if ('PM' === n && this._isAmEnabled) return;
												if ('PM' === n && this._isPmEnabled) {
													if (Number(this._hour.textContent) < Number(u))
														return;
													if (
														Number(this._hour.textContent) <= Number(u) &&
														e <= s - 6
													)
														return e;
												} else if ('AM' === n && this._isAmEnabled) {
													if (Number(this._hour.textContent) < Number(u))
														return;
													if (
														Number(this._hour.textContent) <= Number(u) &&
														e <= s - 6
													)
														return e;
												}
											} else if ('' !== r) {
												if ('AM' === c && this._isPmEnabled) return;
												if ('PM' === c && this._isPmEnabled) {
													if (
														Number(this._hour.textContent) >= Number(l) &&
														a + 6 <= e
													)
														return e;
												} else if (
													'AM' === c &&
													this._isAmEnabled &&
													Number(this._hour.textContent) >= Number(l) &&
													a + 6 <= e
												)
													return e;
											}
											return (
												i && (e = 30 * Math.round(e / 30)),
												e <= 0 ? (e = 360 + e) : 360 <= e && (e = 0),
												{ degrees: e, minute: t }
											);
										},
									},
									{
										key: '_removeModal',
										value: function () {
											var e = this;
											setTimeout(function () {
												e._modal.remove(),
													F.addStyle(e._document.body, { overflow: '' }),
													Xf() ||
														F.addStyle(e._document.body, { paddingRight: '' });
											}, 300),
												A(
													this._document,
													'click keydown mousedown mouseup mousemove mouseleave mouseover touchmove touchend'
												);
										},
									},
									{
										key: '_toggleBackdropAnimation',
										value: function (e) {
											0 < arguments.length && void 0 !== e && e
												? (F.addClass(this._wrapper, 'animation'),
												  F.addClass(this._wrapper, 'fade-out'))
												: (F.addClass(this._wrapper, 'animation'),
												  F.addClass(this._wrapper, 'fade-in'),
												  this._options.inline || F.addClass(this._clock, ph));
										},
									},
									{
										key: '_addActiveClassToTip',
										value: function (e, t) {
											e.forEach(function (e) {
												Number(e.textContent) === Number(t) &&
													F.addClass(e, lh);
											});
										},
									},
									{
										key: '_setHourOrMinute',
										value: function (e) {
											return e < 10 ? '0'.concat(e) : e;
										},
									},
									{
										key: '_appendTimes',
										value: function () {
											this._options.format24
												? (this._getAppendClock(
														this.hoursArray,
														'.'.concat(mh),
														''.concat(Eh)
												  ),
												  this._getAppendClock(
														this.innerHours,
														'.'.concat(_h),
														Ah
												  ))
												: this._getAppendClock(
														this.hoursArray,
														'.'.concat(mh),
														''.concat(Eh)
												  );
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._element);
											return (e = Zf(Zf(Zf({}, Wh), t), e)), s(ah, e, Fh), e;
										},
									},
									{
										key: '_getValidate',
										value: function (e) {
											var n,
												i = this,
												t = this._options,
												r = t.invalidLabel,
												o = t.format24,
												a = t.format12,
												s = t.appendValidationInfo;
											s &&
												((n = x('div')),
												F.addClass(n, 'invalid-feedback'),
												(n.innerHTML = r)),
												P(this.input, e, function (e) {
													var t = e.target;
													null !== i._options &&
														'' !== i.input.value &&
														((e =
															/^(0?[1-9]|1[012])(:[0-5]\d) [APap][mM]$/.test(
																t.value
															)),
														(!0 !==
															/^([01]\d|2[0-3])(:[0-5]\d)$/.test(t.value) &&
															o) ||
														(!0 !== e && a)
															? (s &&
																	(F.addClass(i.input, 'is-invalid'),
																	i.input.parentNode.insertBefore(
																		n,
																		i.input.nextSibling
																	)),
															  F.addStyle(t, { marginBottom: 0 }),
															  F.addStyle(n, { bottom: '-23px' }),
															  (i._isInvalidTimeFormat = !0))
															: (F.removeClass(i.input, 'is-invalid'),
															  (i._isInvalidTimeFormat = !1),
															  null !== (t = V.findOne('.invalid-feedback')) &&
																	t.remove()));
												});
										},
									},
								]) && rh(e.prototype, t),
								n && rh(e, n),
								i
							);
						})(),
						zh = Bh;
					function Vh(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					H.on(window, 'DOMContentLoaded', function () {
						V.find('.'.concat(ah)).forEach(function (e) {
							var t = Bh.getInstance(e),
								n = e.dataset.timepickerFormat24,
								t =
									t || ('true' === n ? new Bh(e, { format24: !0 }) : new Bh(e));
						});
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[ah]),
								(t.fn[ah] = Bh.jQueryInterface),
								(t.fn[ah].Constructor = Bh),
								(t.fn[ah].noConflict = function () {
									return (t.fn[ah] = e), Bh.jQueryInterface;
								}));
						});
					var Uh = 'mdb.navbar',
						Xh = (function () {
							function t(e) {
								!(function (e) {
									if (!(e instanceof t))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									this._element && m.setData(e, Uh, this);
							}
							var e, n, i;
							return (
								(e = t),
								(i = [
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Uh);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'navbar';
										},
									},
								]),
								(n = [
									{
										key: 'init',
										value: function () {
											this._onScroll(), this._addEvent();
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._removeEvent(),
												m.removeData(this._element, Uh),
												(this._element = null);
										},
									},
									{
										key: '_addEvent',
										value: function () {
											var e = this;
											H.on(window, 'scroll', function () {
												return e._onScroll();
											});
										},
									},
									{
										key: '_removeEvent',
										value: function () {
											H.off(window, 'scroll', this._onScroll);
										},
									},
									{
										key: '_onScroll',
										value: function () {
											0 < window.scrollY
												? F.addClass(this._element, 'navbar-scrolled')
												: F.removeClass(this._element, 'navbar-scrolled');
										},
									},
								]) && Vh(e.prototype, n),
								i && Vh(e, i),
								t
							);
						})();
					V.find('.'.concat('navbar-scroll')).forEach(function (e) {
						new Xh(e).init();
					});
					var Jh = Xh;
					function qh(e) {
						return (qh =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Kh(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Gh(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Kh(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Kh(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Qh(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var $h = 'infiniteScroll',
						Zh = 'mdb.infiniteScroll',
						ep = { infiniteDirection: 'y' },
						tp = { infiniteDirection: 'string' },
						np = (function () {
							function i(e, t) {
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									this._element && m.setData(e, Zh, this),
									(this._options = this._getConfig(t)),
									(this.scrollHandler = this._scrollHandler.bind(this)),
									this._init();
							}
							var e, t, n;
							return (
								(e = i),
								(n = [
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Zh);
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, Zh),
													t = 'object' === qh(n) && n,
													e = e || new i(this, t);
												if ('string' == typeof n) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](this);
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return $h;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, 'scroll', this.scrollHandler),
												m.removeData(this._element, Zh),
												(this._element = null);
										},
									},
									{
										key: '_init',
										value: function () {
											var e = this;
											H.on(this._element, 'scroll', function () {
												return e._scrollHandler();
											});
										},
									},
									{
										key: '_scrollHandler',
										value: function () {
											this.condition &&
												H.trigger(this._element, 'complete.mdb.infiniteScroll'),
												H.off(this._element, 'scroll', this.scrollHandler);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = Gh(
												Gh(Gh({}, ep), F.getDataAttributes(this._element)),
												e
											);
											return s($h, e, tp), e;
										},
									},
									{
										key: 'rect',
										get: function () {
											return this._element.getBoundingClientRect();
										},
									},
									{
										key: 'condition',
										get: function () {
											return this._element === window
												? window.scrollY + window.innerHeight ===
														document.documentElement.scrollHeight
												: 'x' === this._options.infiniteDirection
												? this.rect.width + this._element.scrollLeft + 10 >=
												  this._element.scrollWidth
												: this.rect.height + this._element.scrollTop >=
												  this._element.scrollHeight;
										},
									},
								]) && Qh(e.prototype, t),
								n && Qh(e, n),
								i
							);
						})();
					V.find('.infinite-scroll').forEach(function (e) {
						return np.getInstance(e) || new np(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[$h]),
								(t.fn[$h] = np.jQueryInterface),
								(t.fn[$h].Constructor = np),
								(t.fn[$h].noConflict = function () {
									return (t.fn[$h] = e), np.jQueryInterface;
								}));
						});
					var ip = np;
					function rp(e) {
						return (rp =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function op(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return ap(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return ap(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function ap(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function sp(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function lp(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? sp(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: sp(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function up(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var cp = 'lazyLoad',
						dp = 'mdb.lazyLoad',
						fp = ['img', 'video'],
						hp = {
							lazySrc: '(string || null)',
							lazyDelay: 'number',
							lazyAnimation: 'string',
							lazyOffset: 'number',
							lazyPlaceholder: '(string || undefined)',
							lazyError: '(string || undefined)',
						},
						pp = {
							lazySrc: null,
							lazyDelay: 500,
							lazyAnimation: 'fade-in',
							lazyOffset: 0,
						},
						mp = (function () {
							function i(e, t) {
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									this._element && m.setData(e, dp, this),
									(this._options = this._getConfig(t)),
									(this.scrollHandler = this._scrollHandler.bind(this)),
									(this.errorHandler = this._setElementError.bind(this)),
									(this._childrenInstances = null),
									this._init();
							}
							var e, t, n;
							return (
								(e = i),
								(n = [
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, dp);
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, dp),
													t = 'object' === rp(n) && n,
													e = e || new i(this, t);
												if ('string' == typeof n) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](this);
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return cp;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											m.removeData(this._element, dp),
												this._animation &&
													(this._animation.dispose(), (this._animation = null)),
												(this._element = null),
												this._childrenInstances &&
													this._childrenInstances.forEach(function (e) {
														return e.dispose();
													});
										},
									},
									{
										key: '_init',
										value: function () {
											F.addClass(this._element, 'lazy'),
												this.isContainer
													? this._setupContainer()
													: this._setupElement();
										},
									},
									{
										key: '_setupElement',
										value: function () {
											var e = this;
											H.on(this._element, 'error', this.errorHandler),
												this._options.lazyPlaceholder && this._setPlaceholder(),
												(this._animation = new gu(this._element, {
													animation: this._options.lazyAnimation,
													start: 'onLoad',
												})),
												H.one(this._element, 'load', function () {
													return e._scrollHandler();
												}),
												this.parent &&
													H.on(this.parent, 'scroll', this.scrollHandler),
												H.on(window, 'scroll', this.scrollHandler);
										},
									},
									{
										key: '_scrollHandler',
										value: function () {
											var e = this;
											this.inViewport &&
												((this._timeout = setTimeout(function () {
													e._setSrc(),
														e._element.classList.remove('lazy'),
														e._removeAttrs(),
														e._animation.init();
												}, this._options.lazyDelay)),
												this.parent &&
													H.off(this.parent, 'scroll', this.scrollHandler),
												H.off(window, 'scroll', this.scrollHandler));
										},
									},
									{
										key: '_setElementError',
										value: function () {
											this._element.setAttribute(
												'src',
												this._options.lazyError
											),
												H.trigger(this._element, 'onError.mdb.lazy');
										},
									},
									{
										key: '_setSrc',
										value: function () {
											this._element.setAttribute('src', this._options.lazySrc),
												H.trigger(this._element, 'onLoad.mdb.lazy');
										},
									},
									{
										key: '_setPlaceholder',
										value: function () {
											'IMG' === this.node
												? this._element.setAttribute(
														'src',
														this._options.lazyPlaceholder
												  )
												: 'VIDEO' === this.node &&
												  this._element.setAttribute(
														'poster',
														this._options.lazyPlaceholder
												  );
										},
									},
									{
										key: '_removeAttrs',
										value: function () {
											var t = this;
											[
												'src',
												'delay',
												'animation',
												'placeholder',
												'offset',
												'error',
											].forEach(function (e) {
												F.removeDataAttribute(t._element, 'lazy-'.concat(e));
											});
										},
									},
									{
										key: '_setupContainer',
										value: function () {
											var t = this;
											this._childrenInstances = V.children(
												this._element,
												fp
											).map(function (e) {
												return new i(e, t._options);
											});
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = lp(
												lp(lp({}, pp), e),
												F.getDataAttributes(this._element)
											);
											return s(cp, e, hp), e;
										},
									},
									{
										key: 'offsetValues',
										get: function () {
											return this._element.getBoundingClientRect();
										},
									},
									{
										key: 'inViewport',
										get: function () {
											if (this.parent) {
												var e = this.parent.getBoundingClientRect();
												return (
													0 < e.y &&
													e.y < window.innerHeight &&
													this.offsetValues.y >= e.y &&
													this.offsetValues.y <= e.y + e.height &&
													this.offsetValues.y <= window.innerHeight
												);
											}
											return (
												this.offsetValues.top + this._options.lazyOffset <=
													window.innerHeight && 0 <= this.offsetValues.bottom
											);
										},
									},
									{
										key: 'parent',
										get: function () {
											return op(V.parents(this._element, '.lazy'), 1)[0];
										},
									},
									{
										key: 'node',
										get: function () {
											return this._element.nodeName;
										},
									},
									{
										key: 'isContainer',
										get: function () {
											return !V.matches(this._element, fp);
										},
									},
								]) && up(e.prototype, t),
								n && up(e, n),
								i
							);
						})();
					V.find('.lazy').forEach(function (e) {
						return mp.getInstance(e) || new mp(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[cp]),
								(t.fn[cp] = mp.jQueryInterface),
								(t.fn[cp].Constructor = mp),
								(t.fn[cp].noConflict = function () {
									return (t.fn[cp] = e), mp.jQueryInterface;
								}));
						});
					var _p = mp;
					n(71), n(322);
					function vp(e) {
						return e.getDate();
					}
					function yp(e) {
						return e.getDay();
					}
					function gp(e) {
						return e.getMonth();
					}
					function bp(e) {
						return e.getFullYear();
					}
					function kp(e) {
						return Dp((e = e).getFullYear(), e.getMonth() + 1, 0).getDate();
					}
					function wp() {
						return new Date();
					}
					function Mp(e, t) {
						return Lp(e, 12 * t);
					}
					function Lp(e, t) {
						t = Dp(e.getFullYear(), e.getMonth() + t, e.getDate());
						return vp(e) !== vp(t) && t.setDate(0), t;
					}
					function xp(e, t) {
						return Dp(e.getFullYear(), e.getMonth(), e.getDate() + t);
					}
					function Dp(e, t, n) {
						n = new Date(e, t, n);
						return (
							0 <= e && e < 100 && n.setFullYear(n.getFullYear() - 1900), n
						);
					}
					function Sp(e) {
						e = e.split('-');
						return Dp(e[0], e[1], e[2]);
					}
					function Tp(e, t) {
						return bp(e) - bp(t) || gp(e) - gp(t) || vp(e) - vp(t);
					}
					function Op(e, t) {
						return (
							e.setHours(0, 0, 0, 0),
							t.setHours(0, 0, 0, 0),
							e.getTime() === t.getTime()
						);
					}
					function Yp(e, t) {
						e = bp(e) - Cp();
						return ((e % (t = t)) + t) % t;
					}
					function Cp(e, t, n) {
						var i = 0;
						return n ? (i = bp(n) - e + 1) : t && (i = bp(t)), i;
					}
					function jp(e, t, n, i) {
						(t = t && Tp(e, t) <= -1),
							(n = n && 1 <= Tp(e, n)),
							(e = i && !1 === i(e));
						return t || n || e;
					}
					function Ep(e, t, n, i) {
						var r = i && bp(i),
							o = i && gp(i),
							i = n && bp(n),
							n = n && gp(n);
						return (
							(o && r && (r < t || (t === r && o < e))) ||
							(n && i && (t < i || (t === i && e < n)))
						);
					}
					function Pp(e, t, n) {
						(t = t && bp(t)), (n = n && bp(n));
						return (n && n < e) || (t && e < t);
					}
					function Ap(e, t, n, i, r, o) {
						if ('days' === n) return bp(e) === bp(t) && gp(e) === gp(t);
						if ('months' === n) return bp(e) === bp(t);
						if ('years' !== n) return !1;
						o = Cp(i, r, o);
						return Math.floor((bp(e) - o) / i) === Math.floor((bp(t) - o) / i);
					}
					function Hp(e, t, n, i, r, o, a, s, l, u) {
						var c = a.inline
							? '\n    <div class="datepicker-main">\n      '
									.concat(
										Rp(t, n, a),
										'\n      <div class="datepicker-view" tabindex="0">\n        '
									)
									.concat(
										Ip(e, n, i, r, o, a, s, l, u),
										'\n      </div>\n    </div>\n  '
									)
							: '\n      <div class="datepicker-main">\n        '
									.concat(
										Rp(t, n, a),
										'\n        <div class="datepicker-view" tabindex="0">\n          '
									)
									.concat(
										Ip(e, n, i, r, o, a, s, l, u),
										'\n        </div>\n        '
									)
									.concat(
										'\n        <div class="datepicker-footer">\n          <button class="datepicker-footer-btn datepicker-clear-btn" aria-label="'
											.concat((c = a).clearBtnLabel, '">')
											.concat(
												c.clearBtnText,
												'</button>\n          <button class="datepicker-footer-btn datepicker-cancel-btn" aria-label="'
											)
											.concat(c.cancelBtnLabel, '">')
											.concat(
												c.cancelBtnText,
												'</button>\n          <button class="datepicker-footer-btn datepicker-ok-btn" aria-label="'
											)
											.concat(c.okBtnLabel, '">')
											.concat(c.okBtnText, '</button>\n        </div>\n      '),
										'\n      </div>\n    '
									);
						return c;
					}
					function Ip(e, t, n, i, r, o, a, s, l) {
						l =
							'days' === o.view
								? Np(e, n, o)
								: 'months' === o.view
								? Wp(t, i, r, o, a)
								: Fp(e, i, o, s, l);
						return l;
					}
					function Rp(e, t, n) {
						return '\n    <div class="datepicker-date-controls">\n      <button class="datepicker-view-change-button" aria-label="'
							.concat(n.switchToMultiYearViewLabel, '">\n        ')
							.concat(n.monthsFull[e], ' ')
							.concat(
								t,
								'\n      </button>\n      <div class="datepicker-arrow-controls">\n        <button class="datepicker-previous-button" aria-label="'
							)
							.concat(
								n.prevMonthLabel,
								'"></button>\n        <button class="datepicker-next-button" aria-label="'
							)
							.concat(
								n.nextMonthLabel,
								'"></button>\n      </div>\n    </div>\n    '
							);
					}
					function Np(e, t, n) {
						(e = (function (e, t, n) {
							for (
								var i = [],
									r = gp(e),
									o = gp(Lp(e, -1)),
									a = gp(Lp(e, 1)),
									s = bp(e),
									l = (function (e, t, n) {
										return (
											(n = 0 < (n = n.startDay) ? 7 - n : 0),
											7 <= (n = new Date(e, t).getDay() + n) ? n - 7 : n
										);
									})(s, r, n),
									u = kp(e),
									c = kp(Lp(e, -1)),
									d = 1,
									f = !1,
									h = 1;
								h < 7;
								h++
							) {
								var p = [];
								if (1 === h) {
									for (var m = c - l + 1; m <= c; m++) {
										var _ = Dp(s, o, m);
										p.push({
											date: _,
											currentMonth: f,
											isSelected: t && Op(_, t),
											isToday: Op(_, wp()),
											dayNumber: vp(_),
											disabled: jp(_, n.min, n.max, n.filter),
										});
									}
									f = !0;
									for (var v = 7 - p.length, y = 0; y < v; y++) {
										var g = Dp(s, r, d);
										p.push({
											date: g,
											currentMonth: f,
											isSelected: t && Op(g, t),
											isToday: Op(g, wp()),
											dayNumber: vp(g),
											disabled: jp(g, n.min, n.max, n.filter),
										}),
											d++;
									}
								} else
									for (var b = 1; b < 8; b++) {
										u < d && (f = !(d = 1));
										var k = Dp(s, f ? r : a, d);
										p.push({
											date: k,
											currentMonth: f,
											isSelected: t && Op(k, t),
											isToday: Op(k, wp()),
											dayNumber: vp(k),
											disabled: jp(k, n.min, n.max, n.filter),
										}),
											d++;
									}
								i.push(p);
							}
							return i;
						})(e, t, n)),
							(t = n.weekdaysNarrow),
							(t = '\n      <tr>\n        '.concat(
								t
									.map(function (e, t) {
										return '<th class="datepicker-day-heading" scope="col" aria-label="'
											.concat(n.weekdaysFull[t], '">')
											.concat(e, '</th>');
									})
									.join(''),
								'\n      </tr>\n    '
							)),
							(e = e
								.map(function (e) {
									return '\n        <tr>\n          '.concat(
										e
											.map(function (e) {
												return '\n              <td\n              class="datepicker-cell datepicker-small-cell datepicker-day-cell\n              '
													.concat(e.currentMonth ? '' : 'disabled', ' ')
													.concat(
														e.disabled ? 'disabled' : '',
														'\n              '
													)
													.concat(e.isToday && 'current', ' ')
													.concat(
														e.isSelected && 'selected',
														'"\n              data-mdb-date="'
													)
													.concat(bp(e.date), '-')
													.concat(gp(e.date), '-')
													.concat(vp(e.date), '"\n              aria-label="')
													.concat(e.date, '"\n              aria-selected="')
													.concat(
														e.isSelected,
														'">\n                <div\n                  class="datepicker-cell-content datepicker-small-cell-content"\n                  style="'
													)
													.concat(
														e.currentMonth ? 'display: block' : 'display: none',
														'">\n                  '
													)
													.concat(
														e.dayNumber,
														'\n                  </div>\n              </td>\n            '
													);
											})
											.join(''),
										'\n        </tr>\n      '
									);
								})
								.join(''));
						return '\n      <table class="datepicker-table">\n        <thead>\n          '
							.concat(
								t,
								'\n        </thead>\n        <tbody class="datepicker-table-body">\n         '
							)
							.concat(e, '\n        </tbody>\n      </table>\n    ');
					}
					function Wp(n, i, r, o, e) {
						var e = (function (e, t) {
								for (var n = [], i = [], r = 0; r < e.monthsShort.length; r++)
									i.push(e.monthsShort[r]),
										i.length === t && (n.push(i), (i = []));
								return n;
							})(o, e),
							a = gp(wp()),
							e = '\n      '.concat(
								e
									.map(function (e) {
										return '\n          <tr>\n            '.concat(
											e
												.map(function (e) {
													var t = o.monthsShort.indexOf(e);
													return '\n                <td class="datepicker-cell datepicker-large-cell datepicker-month-cell '
														.concat(
															Ep(t, n, o.min, o.max) ? 'disabled' : '',
															' '
														)
														.concat(t === r && n === i ? 'selected' : '', ' ')
														.concat(
															t === a ? 'current' : '',
															'" data-mdb-month="'
														)
														.concat(t, '" data-mdb-year="')
														.concat(n, '" aria-label="')
														.concat(e, ', ')
														.concat(
															n,
															'">\n                  <div class="datepicker-cell-content datepicker-large-cell-content">'
														)
														.concat(
															e,
															'</div>\n                </td>\n              '
														);
												})
												.join(''),
											'\n          </tr>\n        '
										);
									})
									.join(''),
								'\n    '
							);
						return '\n      <table class="datepicker-table">\n        <tbody class="datepicker-table-body">\n         '.concat(
							e,
							'\n        </tbody>\n      </table>\n    '
						);
					}
					function Fp(e, t, n, i, r) {
						var r = (function (e, t, n) {
								for (
									var i = [], r = bp(e), e = Yp(e, t), o = r - e, a = [], s = 0;
									s < t;
									s++
								)
									a.push(o + s), a.length === n && (i.push(a), (a = []));
								return i;
							})(e, i, r),
							o = bp(wp()),
							r = '\n    '.concat(
								r
									.map(function (e) {
										return '\n        <tr>\n          '.concat(
											e
												.map(function (e) {
													return '\n              <td class="datepicker-cell datepicker-large-cell datepicker-year-cell '
														.concat(Pp(e, n.min, n.max) ? 'disabled' : '', ' ')
														.concat(e === t ? 'selected' : '', ' ')
														.concat(e === o ? 'current' : '', '" aria-label="')
														.concat(e, '" data-mdb-year="')
														.concat(
															e,
															'">\n                <div class="datepicker-cell-content datepicker-large-cell-content">'
														)
														.concat(
															e,
															'</div>\n              </td>\n            '
														);
												})
												.join(''),
											'\n        </tr>\n      '
										);
									})
									.join(''),
								'\n  '
							);
						return '\n      <table class="datepicker-table">\n        <tbody class="datepicker-table-body">\n        '.concat(
							r,
							'\n        </tbody>\n      </table>\n    '
						);
					}
					function Bp(e) {
						return (Bp =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function zp(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Vp(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? zp(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: zp(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Up(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Xp = 'datepicker',
						Jp = 'mdb.datepicker',
						Ve = '.'.concat(Jp),
						qp = 'close'.concat(Ve),
						Kp = 'open'.concat(Ve),
						Gp = 'dateChange'.concat(Ve),
						Qp = 'click'.concat(Ve).concat('.data-api'),
						$p = '[data-mdb-toggle="datepicker"]',
						Zp = {
							title: 'Select date',
							monthsFull: [
								'January',
								'February',
								'March',
								'April',
								'May',
								'June',
								'July',
								'August',
								'September',
								'October',
								'November',
								'December',
							],
							monthsShort: [
								'Jan',
								'Feb',
								'Mar',
								'Apr',
								'May',
								'Jun',
								'Jul',
								'Aug',
								'Sep',
								'Oct',
								'Nov',
								'Dec',
							],
							weekdaysFull: [
								'Sunday',
								'Monday',
								'Tuesday',
								'Wednesday',
								'Thursday',
								'Friday',
								'Saturday',
							],
							weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
							weekdaysNarrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
							okBtnText: 'Ok',
							clearBtnText: 'Clear',
							cancelBtnText: 'Cancel',
							okBtnLabel: 'Confirm selection',
							clearBtnLabel: 'Clear selection',
							cancelBtnLabel: 'Cancel selection',
							nextMonthLabel: 'Next month',
							prevMonthLabel: 'Previous month',
							nextYearLabel: 'Next year',
							prevYearLabel: 'Previous year',
							nextMultiYearLabel: 'Next 24 years',
							prevMultiYearLabel: 'Previous 24 years',
							switchToMultiYearViewLabel: 'Choose year and month',
							switchToMonthViewLabel: 'Choose date',
							switchToDayViewLabel: 'Choose date',
							startDate: null,
							startDay: 0,
							format: 'dd/mm/yyyy',
							view: 'days',
							min: null,
							max: null,
							filter: null,
							inline: !1,
							toggleButton: !0,
							disableToggleButton: !1,
							disableInput: !1,
						},
						em = {
							title: 'string',
							monthsFull: 'array',
							monthsShort: 'array',
							weekdaysFull: 'array',
							weekdaysShort: 'array',
							weekdaysNarrow: 'array',
							okBtnText: 'string',
							clearBtnText: 'string',
							cancelBtnText: 'string',
							okBtnLabel: 'string',
							clearBtnLabel: 'string',
							cancelBtnLabel: 'string',
							nextMonthLabel: 'string',
							prevMonthLabel: 'string',
							nextYearLabel: 'string',
							prevYearLabel: 'string',
							nextMultiYearLabel: 'string',
							prevMultiYearLabel: 'string',
							switchToMultiYearViewLabel: 'string',
							switchToMonthViewLabel: 'string',
							switchToDayViewLabel: 'string',
							startDate: '(null|date)',
							startDay: 'number',
							format: 'string',
							view: 'string',
							min: '(null|date|string)',
							max: '(null|date|string)',
							filter: '(null|function)',
							inline: 'boolean',
							toggleButton: 'boolean',
							disableToggleButton: 'boolean',
							disableInput: 'boolean',
						},
						tm = (function () {
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._input = V.findOne('input', this._element)),
									(this._options = this._getConfig(t)),
									(this._activeDate = new Date()),
									(this._selectedDate = null),
									(this._selectedYear = null),
									(this._selectedMonth = null),
									(this._view = this._options.view),
									(this._popper = null),
									(this._focusTrap = null),
									(this._isOpen = !1),
									(this._toggleButtonId = d('datepicker-toggle-')),
									this._element && m.setData(e, Jp, this),
									this._init(),
									this.toggleButton &&
										this._options.disableToggle &&
										(this.toggleButton.disabled = 'true'),
									this._options.disableInput && (this._input.disabled = 'true');
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, Jp),
													t = 'object' === Bp(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Jp);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return Xp;
										},
									},
								]),
								(t = [
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._element);
											return (
												(e = Vp(Vp(Vp({}, Zp), t), e)),
												s(Xp, e, em),
												e.max &&
													'string' == typeof e.max &&
													(e.max = Sp(e.max)),
												e.min &&
													'string' == typeof e.min &&
													(e.min = Sp(e.min)),
												e.startDay &&
													0 !== e.startDay &&
													((t = this._getNewDaysOrderArray(e)),
													(e.weekdaysNarrow = t)),
												e
											);
										},
									},
									{
										key: '_getNewDaysOrderArray',
										value: function (e) {
											var t = e.startDay,
												e = e.weekdaysNarrow;
											return e.slice(t).concat(e.slice(0, t));
										},
									},
									{
										key: '_init',
										value: function () {
											!this.toggleButton &&
												this._options.toggleButton &&
												(this._appendToggleButton(),
												(this._input.readOnly || this._input.disabled) &&
													(this.toggleButton.style.pointerEvents = 'none')),
												this._listenToUserInput(),
												this._listenToToggleClick(),
												this._listenToToggleKeydown();
										},
									},
									{
										key: '_appendToggleButton',
										value: function () {
											var e = '\n    <button id="'.concat(
												this._toggleButtonId,
												'" type="button" class="datepicker-toggle-button" data-mdb-toggle="datepicker">\n      <i class="far fa-calendar datepicker-toggle-icon"></i>\n    </button>\n  '
											);
											this._element.insertAdjacentHTML('beforeend', e);
										},
									},
									{
										key: 'open',
										value: function () {
											var e,
												t,
												n,
												i,
												r,
												o,
												a,
												s,
												l,
												u,
												c,
												d,
												f,
												h,
												p,
												m,
												_,
												v = this;
											this._input.readOnly ||
												this._input.disabled ||
												((u = H.trigger(this._element, Kp)),
												this._isOpen ||
													u.defaultPrevented ||
													(this._setInitialDate(),
													(c = x('div')),
													F.addClass(c, 'datepicker-backdrop'),
													(e = c),
													(t = this._activeDate),
													(n = this._selectedDate),
													(i = this._selectedYear),
													(r = this._selectedMonth),
													(o = this._options),
													(a = 4),
													(l = s = 24),
													(d = gp(t)),
													(f = bp(t)),
													(h = vp(t)),
													(p = yp(t)),
													(m = x('div')),
													(_ = '\n        '.concat(
														Hp(t, d, f, n, i, r, o, a, s, l),
														'\n    '
													)),
													(l = '\n      '
														.concat(
															((u = h),
															(c = p),
															(h = d),
															'\n      <div class="datepicker-header">\n        <div class="datepicker-title">\n          <span class="datepicker-title-text">'
																.concat(
																	(p = o).title,
																	'</span>\n        </div>\n        <div class="datepicker-date">\n          <span class="datepicker-date-text">'
																)
																.concat(p.weekdaysShort[c], ', ')
																.concat(p.monthsShort[h], ' ')
																.concat(
																	u,
																	'</span>\n        </div>\n      </div>\n    '
																)),
															'\n      '
														)
														.concat(
															Hp(t, d, f, n, i, r, o, a, s, l),
															'\n    '
														)),
													o.inline
														? (F.addClass(m, 'datepicker-dropdown-container'),
														  (m.innerHTML = _))
														: (F.addClass(m, 'datepicker-modal-container'),
														  (m.innerHTML = l)),
													(m = m),
													this._options.inline
														? this._openDropdown(m)
														: this._openModal(e, m),
													F.addClass(this.container, 'animation'),
													F.addClass(this.container, 'fade-in'),
													F.addClass(e, 'animation'),
													F.addClass(e, 'fade-in'),
													this._setFocusTrap(this.container),
													this._listenToDateSelection(),
													this._addControlsListeners(),
													this._listenToEscapeClick(),
													this._listenToKeyboardNavigation(),
													this._listenToDatesContainerFocus(),
													this._listenToDatesContainerBlur(),
													this._asyncFocusDatesContainer(),
													this._updateViewControlsAndAttributes(this._view),
													(this._isOpen = !0),
													setTimeout(function () {
														v._listenToOutsideClick();
													}, 0)));
										},
									},
									{
										key: '_openDropdown',
										value: function (e) {
											(this._popper = Nr(this._input, e, {
												placement: 'bottom-start',
											})),
												document.body.appendChild(e);
										},
									},
									{
										key: '_openModal',
										value: function (e, t) {
											document.body.appendChild(e),
												document.body.appendChild(t);
											window.innerWidth >
												document.documentElement.clientWidth &&
												((document.body.style.overflow = 'hidden'),
												(document.body.style.paddingRight = '15px'));
										},
									},
									{
										key: '_setFocusTrap',
										value: function (e) {
											(this._focusTrap = new Ac(e, {
												event: 'keydown',
												condition: function (e) {
													return 'Tab' === e.key;
												},
											})),
												this._focusTrap.trap();
										},
									},
									{
										key: '_listenToUserInput',
										value: function () {
											var t = this;
											H.on(this._input, 'input', function (e) {
												t._handleUserInput(e.target.value);
											});
										},
									},
									{
										key: '_listenToToggleClick',
										value: function () {
											var t = this;
											H.on(this._element, Qp, $p, function (e) {
												e.preventDefault(), t.open();
											});
										},
									},
									{
										key: '_listenToToggleKeydown',
										value: function () {
											var t = this;
											H.on(this._element, 'keydown', $p, function (e) {
												13 !== e.keyCode || t._isOpen || t.open();
											});
										},
									},
									{
										key: '_listenToDateSelection',
										value: function () {
											var i = this;
											H.on(this.datesContainer, 'click', function (e) {
												var t = (
														'DIV' === e.target.nodeName
															? e.target.parentNode
															: e.target
													).dataset,
													n =
														'DIV' === e.target.nodeName
															? e.target.parentNode
															: e.target;
												t.mdbDate && i._pickDay(t.mdbDate, n),
													t.mdbMonth &&
														t.mdbYear &&
														((e = parseInt(t.mdbMonth, 10)),
														(n = parseInt(t.mdbYear, 10)),
														i._pickMonth(e, n)),
													t.mdbYear &&
														!t.mdbMonth &&
														((t = parseInt(t.mdbYear, 10)), i._pickYear(t)),
													i._options.inline ||
														i._updateHeaderDate(
															i._activeDate,
															i._options.monthsShort,
															i._options.weekdaysShort
														);
											});
										},
									},
									{
										key: '_updateHeaderDate',
										value: function (e, t, n) {
											var i = V.findOne('.datepicker-date-text'),
												r = gp(e),
												o = vp(e),
												e = yp(e);
											i.innerHTML = ''
												.concat(n[e], ', ')
												.concat(t[r], ' ')
												.concat(o);
										},
									},
									{
										key: '_addControlsListeners',
										value: function () {
											var e = this;
											H.on(this.nextButton, 'click', function () {
												'days' === e._view
													? e.nextMonth()
													: 'years' === e._view
													? e.nextYears()
													: e.nextYear(),
													e._updateControlsDisabledState();
											}),
												H.on(this.previousButton, 'click', function () {
													'days' === e._view
														? e.previousMonth()
														: 'years' === e._view
														? e.previousYears()
														: e.previousYear(),
														e._updateControlsDisabledState();
												}),
												H.on(this.viewChangeButton, 'click', function () {
													'days' === e._view
														? e._changeView('years')
														: ('years' !== e._view && 'months' !== e._view) ||
														  e._changeView('days');
												}),
												this._options.inline ||
													this._listenToFooterButtonsClick();
										},
									},
									{
										key: '_listenToFooterButtonsClick',
										value: function () {
											var e = this;
											H.on(this.okButton, 'click', function () {
												return e.handleOk();
											}),
												H.on(this.cancelButton, 'click', function () {
													return e.handleCancel();
												}),
												H.on(this.clearButton, 'click', function () {
													return e.handleClear();
												});
										},
									},
									{
										key: '_listenToOutsideClick',
										value: function () {
											var n = this;
											H.on(document, Qp, function (e) {
												var t = e.target === n.container,
													e = n.container && n.container.contains(e.target);
												t || e || n.close();
											});
										},
									},
									{
										key: '_listenToEscapeClick',
										value: function () {
											var t = this;
											H.on(document, 'keydown', function (e) {
												e.keyCode === Hc && t._isOpen && t.close();
											});
										},
									},
									{
										key: '_listenToKeyboardNavigation',
										value: function () {
											var t = this;
											H.on(this.datesContainer, 'keydown', function (e) {
												t._handleKeydown(e);
											});
										},
									},
									{
										key: '_listenToDatesContainerFocus',
										value: function () {
											var e = this;
											H.on(this.datesContainer, 'focus', function () {
												e._focusActiveCell(e.activeCell);
											});
										},
									},
									{
										key: '_listenToDatesContainerBlur',
										value: function () {
											var e = this;
											H.on(this.datesContainer, 'blur', function () {
												e._removeCurrentFocusStyles();
											});
										},
									},
									{
										key: '_handleKeydown',
										value: function (e) {
											'days' === this._view && this._handleDaysViewKeydown(e),
												'months' === this._view &&
													this._handleMonthsViewKeydown(e),
												'years' === this._view &&
													this._handleYearsViewKeydown(e);
										},
									},
									{
										key: '_handleDaysViewKeydown',
										value: function (e) {
											var t = this._activeDate,
												n = this.activeCell;
											switch (e.keyCode) {
												case 37:
													this._activeDate = xp(this._activeDate, h ? 1 : -1);
													break;
												case 39:
													this._activeDate = xp(this._activeDate, h ? -1 : 1);
													break;
												case 38:
													this._activeDate = xp(this._activeDate, -7);
													break;
												case 40:
													this._activeDate = xp(this._activeDate, 7);
													break;
												case 36:
													this._activeDate = xp(
														this._activeDate,
														1 - vp(this._activeDate)
													);
													break;
												case 35:
													this._activeDate = xp(
														this._activeDate,
														kp(this._activeDate) - vp(this._activeDate)
													);
													break;
												case 33:
													this._activeDate = Lp(this._activeDate, -1);
													break;
												case 34:
													this._activeDate = Lp(this._activeDate, 1);
													break;
												case 13:
												case 32:
													return void (
														(this._options.filter &&
															!this._options.filter(this._activeDate)) ||
														(this._selectDate(this._activeDate),
														e.preventDefault())
													);
												default:
													return;
											}
											Ap(
												t,
												this._activeDate,
												this._view,
												24,
												this._options.min,
												this._options.max
											) || this._changeView('days'),
												this._removeHighlightFromCell(n),
												this._focusActiveCell(this.activeCell),
												e.preventDefault();
										},
									},
									{
										key: '_asyncFocusDatesContainer',
										value: function () {
											var e = this;
											setTimeout(function () {
												e.datesContainer.focus();
											}, 0);
										},
									},
									{
										key: '_focusActiveCell',
										value: function (e) {
											e && F.addClass(e, 'focused');
										},
									},
									{
										key: '_removeHighlightFromCell',
										value: function (e) {
											e && e.classList.remove('focused');
										},
									},
									{
										key: '_getActiveDayCell',
										value: function () {
											var t = this,
												e = V.find('td', this.datesContainer);
											return Array.from(e).find(function (e) {
												return Op(Sp(e.dataset.mdbDate), t._activeDate);
											});
										},
									},
									{
										key: '_handleMonthsViewKeydown',
										value: function (e) {
											var t = this._activeDate,
												n = this.activeCell;
											switch (e.keyCode) {
												case 37:
													this._activeDate = Lp(this._activeDate, h ? 1 : -1);
													break;
												case 39:
													this._activeDate = Lp(this._activeDate, h ? -1 : 1);
													break;
												case 38:
													this._activeDate = Lp(this._activeDate, -4);
													break;
												case 40:
													this._activeDate = Lp(this._activeDate, 4);
													break;
												case 36:
													this._activeDate = Lp(
														this._activeDate,
														-this.activeMonth
													);
													break;
												case 35:
													this._activeDate = Lp(
														this._activeDate,
														11 - this.activeMonth
													);
													break;
												case 33:
													this._activeDate = Mp(this._activeDate, -1);
													break;
												case 34:
													this._activeDate = Mp(this._activeDate, 1);
													break;
												case 13:
												case 32:
													return void this._selectMonth(this.activeMonth);
												default:
													return;
											}
											Ap(
												t,
												this._activeDate,
												this._view,
												24,
												this._options.min,
												this._options.max
											) || this._changeView('months'),
												this._removeHighlightFromCell(n),
												this._focusActiveCell(this.activeCell),
												e.preventDefault();
										},
									},
									{
										key: '_getActiveMonthCell',
										value: function () {
											var n = this,
												e = V.find('td', this.datesContainer);
											return Array.from(e).find(function (e) {
												var t = parseInt(e.dataset.mdbYear, 10),
													e = parseInt(e.dataset.mdbMonth, 10);
												return t === n.activeYear && e === n.activeMonth;
											});
										},
									},
									{
										key: '_handleYearsViewKeydown',
										value: function (e) {
											var t = this._activeDate,
												n = this.activeCell;
											switch (e.keyCode) {
												case 37:
													this._activeDate = Mp(this._activeDate, h ? 1 : -1);
													break;
												case 39:
													this._activeDate = Mp(this._activeDate, h ? -1 : 1);
													break;
												case 38:
													this._activeDate = Mp(this._activeDate, -4);
													break;
												case 40:
													this._activeDate = Mp(this._activeDate, 4);
													break;
												case 36:
													this._activeDate = Mp(
														this._activeDate,
														-Yp(this._activeDate, 24)
													);
													break;
												case 35:
													this._activeDate = Mp(
														this._activeDate,
														24 - Yp(this._activeDate, 24) - 1
													);
													break;
												case 33:
													this._activeDate = Mp(this._activeDate, -24);
													break;
												case 34:
													this._activeDate = Mp(this._activeDate, 24);
													break;
												case 13:
												case 32:
													return void this._selectYear(this.activeYear);
												default:
													return;
											}
											Ap(
												t,
												this._activeDate,
												this._view,
												24,
												this._options.min,
												this._options.max
											) || this._changeView('years'),
												this._removeHighlightFromCell(n),
												this._focusActiveCell(this.activeCell),
												e.preventDefault();
										},
									},
									{
										key: '_getActiveYearCell',
										value: function () {
											var t = this,
												e = V.find('td', this.datesContainer);
											return Array.from(e).find(function (e) {
												return parseInt(e.dataset.mdbYear, 10) === t.activeYear;
											});
										},
									},
									{
										key: '_setInitialDate',
										value: function () {
											this._input.value
												? this._handleUserInput(this._input.value)
												: this._options.startDate
												? (this._activeDate = this._options.startDate)
												: (this._activeDate = new Date());
										},
									},
									{
										key: 'close',
										value: function () {
											var e = H.trigger(this._element, qp);
											this._isOpen &&
												!e.defaultPrevented &&
												(this._removeDatepickerListeners(),
												F.addClass(this.container, 'animation'),
												F.addClass(this.container, 'fade-out'),
												this._options.inline
													? this._closeDropdown()
													: this._closeModal(),
												(this._isOpen = !1),
												(this._view = this._options.view),
												(this.toggleButton || this._input).focus());
										},
									},
									{
										key: '_closeDropdown',
										value: function () {
											var e = this,
												t = V.findOne('.datepicker-dropdown-container');
											setTimeout(function () {
												t && document.body.removeChild(t),
													e._popper && e._popper.destroy();
											}, 150),
												this._removeFocusTrap();
										},
									},
									{
										key: '_closeModal',
										value: function () {
											var e = V.findOne('.datepicker-backdrop'),
												t = V.findOne('.datepicker-modal-container');
											F.addClass(e, 'animation'),
												F.addClass(e, 'fade-out'),
												t &&
													e &&
													setTimeout(function () {
														document.body.removeChild(e),
															document.body.removeChild(t),
															(document.body.style.overflow = ''),
															(document.body.style.paddingRight = '');
													}, 150);
										},
									},
									{
										key: '_removeFocusTrap',
										value: function () {
											this._focusTrap &&
												(this._focusTrap.disable(), (this._focusTrap = null));
										},
									},
									{
										key: '_removeDatepickerListeners',
										value: function () {
											H.off(this.nextButton, 'click'),
												H.off(this.previousButton, 'click'),
												H.off(this.viewChangeButton, 'click'),
												H.off(this.okButton, 'click'),
												H.off(this.cancelButton, 'click'),
												H.off(this.clearButton, 'click'),
												H.off(this.datesContainer, 'click'),
												H.off(this.datesContainer, 'keydown'),
												H.off(this.datesContainer, 'focus'),
												H.off(this.datesContainer, 'blur'),
												H.off(document, Qp);
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._isOpen && this.close(),
												this._removeInputAndToggleListeners();
											var e = V.findOne('#'.concat(this._toggleButtonId));
											e && this._element.removeChild(e),
												m.removeData(this._element, Jp),
												(this._element = null),
												(this._input = null),
												(this._options = null),
												(this._activeDate = null),
												(this._selectedDate = null),
												(this._selectedYear = null),
												(this._selectedMonth = null),
												(this._view = null),
												(this._popper = null),
												(this._focusTrap = null);
										},
									},
									{
										key: '_removeInputAndToggleListeners',
										value: function () {
											H.off(this._input, 'input'),
												H.off(this._element, Qp, $p),
												H.off(this._element, 'keydown', $p);
										},
									},
									{
										key: 'handleOk',
										value: function () {
											this._confirmSelection(this._selectedDate), this.close();
										},
									},
									{
										key: '_selectDate',
										value: function (e, t) {
											t =
												1 < arguments.length && void 0 !== t
													? t
													: this.activeCell;
											this._removeCurrentSelectionStyles(),
												this._removeCurrentFocusStyles(),
												this._addSelectedStyles(t),
												(this._selectedDate = e),
												this._options.inline &&
													(this._confirmSelection(e), this.close());
										},
									},
									{
										key: '_selectYear',
										value: function (e, t) {
											t =
												1 < arguments.length && void 0 !== t
													? t
													: this.activeCell;
											this._removeCurrentSelectionStyles(),
												this._removeCurrentFocusStyles(),
												this._addSelectedStyles(t),
												(this._selectedYear = e),
												this._asyncChangeView('months');
										},
									},
									{
										key: '_selectMonth',
										value: function (e, t) {
											t =
												1 < arguments.length && void 0 !== t
													? t
													: this.activeCell;
											this._removeCurrentSelectionStyles(),
												this._removeCurrentFocusStyles(),
												this._addSelectedStyles(t),
												(this._selectedMonth = e),
												this._asyncChangeView('days');
										},
									},
									{
										key: '_removeSelectedStyles',
										value: function (e) {
											e && e.classList.remove('selected');
										},
									},
									{
										key: '_addSelectedStyles',
										value: function (e) {
											e && F.addClass(e, 'selected');
										},
									},
									{
										key: '_confirmSelection',
										value: function (e) {
											var t;
											e &&
												((t = this.formatDate(e)),
												(this._input.value = t),
												F.addClass(this._input, 'active'),
												H.trigger(this._element, Gp, { date: e }));
										},
									},
									{
										key: 'handleCancel',
										value: function () {
											(this._selectedDate = null),
												(this._selectedYear = null),
												(this._selectedMonth = null),
												this.close();
										},
									},
									{
										key: 'handleClear',
										value: function () {
											(this._selectedDate = null),
												(this._selectedMonth = null),
												(this._selectedYear = null),
												this._removeCurrentSelectionStyles(),
												(this._input.value = ''),
												this._input.classList.remove('active'),
												this._setInitialDate(),
												this._changeView('days');
										},
									},
									{
										key: '_removeCurrentSelectionStyles',
										value: function () {
											var e = V.findOne('.selected', this.container);
											e && e.classList.remove('selected');
										},
									},
									{
										key: '_removeCurrentFocusStyles',
										value: function () {
											var e = V.findOne('.focused', this.container);
											e && e.classList.remove('focused');
										},
									},
									{
										key: 'formatDate',
										value: function (e) {
											var t = vp(e),
												n = this._addLeadingZero(vp(e)),
												i = this._options.weekdaysShort[yp(e)],
												r = this._options.weekdaysFull[yp(e)],
												o = gp(e),
												a = this._addLeadingZero(gp(e) + 1),
												s = this._options.monthsShort[gp(e)],
												l = this._options.monthsFull[gp(e)],
												u =
													2 === bp(e).toString().length
														? bp(e)
														: bp(e).toString().slice(2, 4),
												c = bp(e),
												e = this._options.format.split(
													/(d{1,4}|m{1,4}|y{4}|yy|!.)/g
												),
												d = '';
											return (
												e.forEach(function (e) {
													switch (e) {
														case 'dddd':
															e = e.replace(e, r);
															break;
														case 'ddd':
															e = e.replace(e, i);
															break;
														case 'dd':
															e = e.replace(e, n);
															break;
														case 'd':
															e = e.replace(e, t);
															break;
														case 'mmmm':
															e = e.replace(e, l);
															break;
														case 'mmm':
															e = e.replace(e, s);
															break;
														case 'mm':
															e = e.replace(e, a);
															break;
														case 'm':
															e = e.replace(e, o);
															break;
														case 'yyyy':
															e = e.replace(e, c);
															break;
														case 'yy':
															e = e.replace(e, u);
													}
													d += e;
												}),
												d
											);
										},
									},
									{
										key: '_addLeadingZero',
										value: function (e) {
											return parseInt(e, 10) < 10 ? '0'.concat(e) : e;
										},
									},
									{
										key: '_pickDay',
										value: function (e, t) {
											var n = Sp(e),
												e = this._options;
											jp(n, e.min, e.max, e.filter) ||
												((this._activeDate = n), this._selectDate(n, t));
										},
									},
									{
										key: '_pickYear',
										value: function (e) {
											var t = this._options;
											Pp(e, t.min, t.max) ||
												((t = Dp(e, this.activeMonth, this.activeDay)),
												(this._activeDate = t),
												(this._selectedDate = t),
												this._selectYear(e));
										},
									},
									{
										key: '_pickMonth',
										value: function (e, t) {
											var n = this._options,
												i = n.min,
												n = n.max;
											Ep(e, t, i, n) ||
												Pp(t, i, n) ||
												((t = Dp(t, e, this.activeDay)),
												(this._activeDate = t),
												this._selectMonth(e));
										},
									},
									{
										key: 'nextMonth',
										value: function () {
											var e = Lp(this._activeDate, 1),
												t = Np(e, this._selectedDate, this._options);
											(this._activeDate = e),
												(this.viewChangeButton.textContent = ''
													.concat(
														this._options.monthsFull[this.activeMonth],
														' '
													)
													.concat(this.activeYear)),
												(this.datesContainer.innerHTML = t);
										},
									},
									{
										key: 'previousMonth',
										value: function () {
											var e = Lp(this._activeDate, -1),
												t = Np(
													(this._activeDate = e),
													this._selectedDate,
													this._options
												);
											(this.viewChangeButton.textContent = ''
												.concat(this._options.monthsFull[this.activeMonth], ' ')
												.concat(this.activeYear)),
												(this.datesContainer.innerHTML = t);
										},
									},
									{
										key: 'nextYear',
										value: function () {
											var e = Mp(this._activeDate, 1);
											(this._activeDate = e),
												(this.viewChangeButton.textContent = ''.concat(
													this.activeYear
												));
											var t = Wp(
												this.activeYear,
												this._selectedYear,
												this._selectedMonth,
												this._options,
												4
											);
											this.datesContainer.innerHTML = t;
										},
									},
									{
										key: 'previousYear',
										value: function () {
											var e = Mp(this._activeDate, -1);
											(this._activeDate = e),
												(this.viewChangeButton.textContent = ''.concat(
													this.activeYear
												));
											var t = Wp(
												this.activeYear,
												this._selectedYear,
												this._selectedMonth,
												this._options,
												4
											);
											this.datesContainer.innerHTML = t;
										},
									},
									{
										key: 'nextYears',
										value: function () {
											var e = Mp(this._activeDate, 24),
												e = Fp(
													(this._activeDate = e),
													this._selectedYear,
													this._options,
													24,
													4
												);
											(this.viewChangeButton.textContent = ''
												.concat(this.firstYearInView, ' - ')
												.concat(this.lastYearInView)),
												(this.datesContainer.innerHTML = e);
										},
									},
									{
										key: 'previousYears',
										value: function () {
											var e = Mp(this._activeDate, -24),
												e = Fp(
													(this._activeDate = e),
													this._selectedYear,
													this._options,
													24,
													4
												);
											(this.viewChangeButton.textContent = ''
												.concat(this.firstYearInView, ' - ')
												.concat(this.lastYearInView)),
												(this.datesContainer.innerHTML = e);
										},
									},
									{
										key: '_asyncChangeView',
										value: function (e) {
											var t = this;
											setTimeout(function () {
												t._changeView(e);
											}, 0);
										},
									},
									{
										key: '_changeView',
										value: function (e) {
											(this._view = e),
												this.datesContainer.blur(),
												'days' === e &&
													(this.datesContainer.innerHTML = Np(
														this._activeDate,
														this._selectedDate,
														this._options
													)),
												'months' === e &&
													(this.datesContainer.innerHTML = Wp(
														this.activeYear,
														this._selectedYear,
														this._selectedMonth,
														this._options,
														4
													)),
												'years' === e &&
													(this.datesContainer.innerHTML = Fp(
														this._activeDate,
														this._selectedYear,
														this._options,
														24,
														4
													)),
												this.datesContainer.focus(),
												this._updateViewControlsAndAttributes(e),
												this._updateControlsDisabledState();
										},
									},
									{
										key: '_updateViewControlsAndAttributes',
										value: function (e) {
											'days' === e &&
												((this.viewChangeButton.textContent = ''
													.concat(
														this._options.monthsFull[this.activeMonth],
														' '
													)
													.concat(this.activeYear)),
												this.viewChangeButton.setAttribute(
													'aria-label',
													this._options.switchToMultiYearViewLabel
												),
												this.previousButton.setAttribute(
													'aria-label',
													this._options.prevMonthLabel
												),
												this.nextButton.setAttribute(
													'aria-label',
													this._options.nextMonthLabel
												)),
												'months' === e &&
													((this.viewChangeButton.textContent = ''.concat(
														this.activeYear
													)),
													this.viewChangeButton.setAttribute(
														'aria-label',
														this._options.switchToDayViewLabel
													),
													this.previousButton.setAttribute(
														'aria-label',
														this._options.prevYearLabel
													),
													this.nextButton.setAttribute(
														'aria-label',
														this._options.nextYearLabel
													)),
												'years' === e &&
													((this.viewChangeButton.textContent = ''
														.concat(this.firstYearInView, ' - ')
														.concat(this.lastYearInView)),
													this.viewChangeButton.setAttribute(
														'aria-label',
														this._options.switchToMonthViewLabel
													),
													this.previousButton.setAttribute(
														'aria-label',
														this._options.prevMultiYearLabel
													),
													this.nextButton.setAttribute(
														'aria-label',
														this._options.nextMultiYearLabel
													));
										},
									},
									{
										key: '_updateControlsDisabledState',
										value: function () {
											var e, t, n, i, r;
											(e = this._activeDate),
												(t = this._view),
												(n = 24),
												(i = this._options.min),
												(r = this._options.max) && Ap(e, r, t, n, i, r)
													? (this.nextButton.disabled = !0)
													: (this.nextButton.disabled = !1),
												(e = this._activeDate),
												(t = this._view),
												(n = 24),
												(i = this._options.min),
												(r = this._options.max),
												i && Ap(e, i, t, n, i, r)
													? (this.previousButton.disabled = !0)
													: (this.previousButton.disabled = !1);
										},
									},
									{
										key: '_handleUserInput',
										value: function (e) {
											var t = this._getDelimeters(this._options.format),
												e = this._parseDate(e, this._options.format, t);
											(t = e),
												Number.isNaN(t.getTime())
													? ((this._activeDate = new Date()),
													  (this._selectedDate = null),
													  (this._selectedMonth = null),
													  (this._selectedYear = null))
													: ((this._activeDate = e), (this._selectedDate = e));
										},
									},
									{
										key: '_getDelimeters',
										value: function (e) {
											return e.match(/[^(dmy)]{1,}/g);
										},
									},
									{
										key: '_parseDate',
										value: function (e, t, n) {
											for (
												var n = n[0] !== n[1] ? n[0] + n[1] : n[0],
													n = new RegExp('['.concat(n, ']')),
													i = e.split(n),
													r = t.split(n),
													n = -1 !== t.indexOf('mmm'),
													o = [],
													a = 0;
												a < r.length;
												a++
											)
												-1 !== r[a].indexOf('yy') &&
													(o[0] = { value: i[a], format: r[a] }),
													-1 !== r[a].indexOf('m') &&
														(o[1] = { value: i[a], format: r[a] }),
													-1 !== r[a].indexOf('d') &&
														r[a].length <= 2 &&
														(o[2] = { value: i[a], format: r[a] });
											return (
												(t =
													-1 !== t.indexOf('mmmm')
														? this._options.monthsFull
														: this._options.monthsShort),
												Dp(
													Number(o[0].value),
													n
														? this.getMonthNumberByMonthName(o[1].value, t)
														: Number(o[1].value) - 1,
													Number(o[2].value)
												)
											);
										},
									},
									{
										key: 'getMonthNumberByMonthName',
										value: function (t, e) {
											return e.findIndex(function (e) {
												return e === t;
											});
										},
									},
									{
										key: 'container',
										get: function () {
											return (
												V.findOne('.datepicker-modal-container') ||
												V.findOne('.datepicker-dropdown-container')
											);
										},
									},
									{
										key: 'options',
										get: function () {
											return this._options;
										},
									},
									{
										key: 'activeCell',
										get: function () {
											var e;
											return (
												'days' === this._view && (e = this._getActiveDayCell()),
												'months' === this._view &&
													(e = this._getActiveMonthCell()),
												'years' === this._view &&
													(e = this._getActiveYearCell()),
												e
											);
										},
									},
									{
										key: 'activeDay',
										get: function () {
											return vp(this._activeDate);
										},
									},
									{
										key: 'activeMonth',
										get: function () {
											return gp(this._activeDate);
										},
									},
									{
										key: 'activeYear',
										get: function () {
											return bp(this._activeDate);
										},
									},
									{
										key: 'firstYearInView',
										get: function () {
											return this.activeYear - Yp(this._activeDate, 24);
										},
									},
									{
										key: 'lastYearInView',
										get: function () {
											return this.firstYearInView + 24 - 1;
										},
									},
									{
										key: 'viewChangeButton',
										get: function () {
											return V.findOne('.datepicker-view-change-button');
										},
									},
									{
										key: 'previousButton',
										get: function () {
											return V.findOne('.datepicker-previous-button');
										},
									},
									{
										key: 'nextButton',
										get: function () {
											return V.findOne('.datepicker-next-button');
										},
									},
									{
										key: 'okButton',
										get: function () {
											return V.findOne('.datepicker-ok-btn');
										},
									},
									{
										key: 'cancelButton',
										get: function () {
											return V.findOne('.datepicker-cancel-btn');
										},
									},
									{
										key: 'clearButton',
										get: function () {
											return V.findOne('.datepicker-clear-btn');
										},
									},
									{
										key: 'datesContainer',
										get: function () {
											return V.findOne('.datepicker-view', this.container);
										},
									},
									{
										key: 'toggleButton',
										get: function () {
											return V.findOne(
												'.datepicker-toggle-button',
												this._element
											);
										},
									},
								]) && Up(e.prototype, t),
								n && Up(e, n),
								r
							);
						})(),
						nm = tm;
					function im(e) {
						return (im =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function rm(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function om(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? rm(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: rm(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function am(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					V.find('.datepicker').forEach(function (e) {
						tm.getInstance(e) || new tm(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Xp]),
								(t.fn[Xp] = tm.jQueryInterface),
								(t.fn[Xp].Constructor = tm),
								(t.fn[Xp].noConflict = function () {
									return (t.fn[Xp] = e), tm.jQueryInterface;
								}));
						});
					var sm = 'popconfirm',
						lm = 'mdb.popconfirm',
						t = '.'.concat(lm),
						um = 'cancel'.concat(t),
						cm = 'confirm'.concat(t),
						dm = {
							popconfirmMode: 'string',
							message: 'string',
							cancelText: 'string',
							okText: 'string',
							okClass: 'string',
							popconfirmIcon: 'string',
							cancelLabel: 'string',
							confirmLabel: 'string',
						},
						fm = {
							popconfirmMode: 'inline',
							message: 'Are you sure?',
							cancelText: 'Cancel',
							okText: 'OK',
							okClass: 'btn-primary',
							popconfirmIcon: '',
							cancelLabel: 'Cancel',
							confirmLabel: 'Confirm',
						},
						hm = (function () {
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t)),
									(this._cancelButtonTemplate =
										this._getCancelButtonTemplate()),
									(this._popper = null),
									(this._cancelButton = ''),
									(this._confirmButton = ''),
									(this._isOpen = !1),
									(this._uid = d('popconfirm-')),
									e && m.setData(e, lm, this),
									(this._clickHandler = this.open.bind(this)),
									H.on(this._element, 'click', this._clickHandler);
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, lm),
													t = 'object' === im(n) && n;
												if (e || !/dispose/.test(n)) {
													if (!e) return new r(this, t);
													if ('string' == typeof n) {
														if (void 0 === e[n])
															throw new TypeError(
																'No method named "'.concat(n, '"')
															);
														e[n](i);
													}
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, lm);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return sm;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											(!this._isOpen && null === this.container) ||
												this.close(),
												m.removeData(this._element, lm),
												H.on(this._element, 'click', this._clickHandler),
												(this._element = null);
										},
									},
									{
										key: 'open',
										value: function () {
											this._isOpen ||
												('inline' === this._options.popconfirmMode
													? this._openPopover(this._getPopoverTemplate())
													: this._openModal(this._getModalTemplate()),
												this._handleCancelButtonClick(),
												this._handleConfirmButtonClick(),
												this._listenToEscapeKey(),
												this._listenToOutsideClick());
										},
									},
									{
										key: 'close',
										value: function () {
											var e;
											this._isOpen &&
												(null !== this._popper ||
												null !== V.findOne('.popconfirm-popover')
													? (H.on(
															this.popconfirmBody,
															'transitionend',
															this._handlePopconfirmTransitionEnd.bind(this)
													  ),
													  F.removeClass(this.popconfirmBody, 'show'))
													: ((e = V.findOne('.popconfirm-backdrop')),
													  F.removeClass(this.popconfirmBody, 'show'),
													  document.body.removeChild(e),
													  (this._isOpen = !1)),
												H.off(
													document,
													'click',
													this._handleOutsideClick.bind(this)
												),
												H.off(
													document,
													'keydown',
													this._handleEscapeKey.bind(this)
												));
										},
									},
									{
										key: '_handlePopconfirmTransitionEnd',
										value: function (e) {
											var t;
											e.target === this.popconfirmBody &&
												((t = V.findOne('.popconfirm-popover')),
												H.off(this.popconfirmBody, 'transitionend'),
												this._isOpen &&
													e &&
													'opacity' === e.propertyName &&
													(this._popper.destroy(),
													t && document.body.removeChild(t),
													(this._isOpen = !1)));
										},
									},
									{
										key: '_getPopoverTemplate',
										value: function () {
											var e = x('div'),
												t = this._getPopconfirmTemplate();
											return (
												F.addClass(e, 'popconfirm-popover'),
												F.addClass(e, 'shadow-4'),
												(e.id = this._uid),
												(e.innerHTML = t),
												e
											);
										},
									},
									{
										key: '_getModalTemplate',
										value: function () {
											var e = x('div'),
												t = this._getPopconfirmTemplate();
											return (
												F.addClass(e, 'popconfirm-modal'),
												F.addClass(e, 'shadow-4'),
												(e.id = this._uid),
												(e.innerHTML = t),
												e
											);
										},
									},
									{
										key: '_getPopconfirmTemplate',
										value: function () {
											return '<div class="popconfirm">\n      <p class="popconfirm-message">\n      '
												.concat(
													this._getMessageIcon(),
													'\n      <span class="popconfirm-message-text">'
												)
												.concat(
													this._options.message,
													'</span>\n      </p>\n      <div class="popconfirm-buttons-container">\n      '
												)
												.concat(
													this._cancelButtonTemplate,
													'\n      <button type="button" id="popconfirm-button-confirm"\n      aria-label="'
												)
												.concat(
													this._options.confirmLabel,
													'"\n      class="btn '
												)
												.concat(this._options.okClass, ' btn-sm">')
												.concat(
													this._options.okText,
													'</button>\n      </div>\n    </div>'
												);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											return (
												(e = om(
													om(om({}, fm), F.getDataAttributes(this._element)),
													e
												)),
												s(sm, e, dm),
												e
											);
										},
									},
									{
										key: '_getCancelButtonTemplate',
										value: function () {
											return '' === this._options.cancelText ||
												' ' === this._options.cancelText
												? ''
												: '<button type="button" id="popconfirm-button-cancel" aria-label="'
														.concat(
															this._options.cancelLabel,
															'"\n    class="btn btn-flat btn-sm">'
														)
														.concat(this._options.cancelText, '</button>');
										},
									},
									{
										key: '_getMessageIcon',
										value: function () {
											return '' === this._options.popconfirmIcon
												? ''
												: '<span class="popconfirm-icon-container"><i class="'.concat(
														this._options.popconfirmIcon,
														'"></i></span>'
												  );
										},
									},
									{
										key: '_openPopover',
										value: function (e) {
											var t = this;
											(this._popper = Nr(this._element, e, {
												placement: this._translatePositionValue(),
												modifiers: [
													{ name: 'offset', options: { offset: [0, 5] } },
												],
											})),
												document.body.appendChild(e),
												setTimeout(function () {
													F.addClass(t.popconfirmBody, 'fade'),
														F.addClass(t.popconfirmBody, 'show'),
														(t._isOpen = !0);
												}, 0);
										},
									},
									{
										key: '_openModal',
										value: function (e) {
											var t = x('div');
											F.addClass(t, 'popconfirm-backdrop'),
												document.body.appendChild(t),
												t.appendChild(e),
												F.addClass(this.popconfirmBody, 'show'),
												(this._isOpen = !0);
										},
									},
									{
										key: '_handleCancelButtonClick',
										value: function () {
											var e = this,
												t = this.container;
											(this._cancelButton = V.findOne(
												'#popconfirm-button-cancel',
												t
											)),
												null !== this._cancelButton &&
													H.on(this._cancelButton, 'click', function () {
														e.close(), H.trigger(e._element, um);
													});
										},
									},
									{
										key: '_handleConfirmButtonClick',
										value: function () {
											var e = this,
												t = this.container;
											(this._confirmButton = V.findOne(
												'#popconfirm-button-confirm',
												t
											)),
												H.on(this._confirmButton, 'click', function () {
													e.close(), H.trigger(e._element, cm);
												});
										},
									},
									{
										key: '_listenToEscapeKey',
										value: function () {
											H.on(
												document,
												'keydown',
												this._handleEscapeKey.bind(this)
											);
										},
									},
									{
										key: '_handleEscapeKey',
										value: function (e) {
											e.keyCode === Hc && this.close();
										},
									},
									{
										key: '_listenToOutsideClick',
										value: function () {
											H.on(
												document,
												'click',
												this._handleOutsideClick.bind(this)
											);
										},
									},
									{
										key: '_handleOutsideClick',
										value: function (e) {
											var t = this.container,
												n = e.target === t,
												i = t && t.contains(e.target),
												t = e.target === this._element,
												e = this._element && this._element.contains(e.target);
											n || i || t || e || this.close();
										},
									},
									{
										key: '_translatePositionValue',
										value: function () {
											switch (this._options.position) {
												case 'top left':
													return h ? 'top-start' : 'top-end';
												case 'top':
													return 'top';
												case 'top right':
													return h ? 'top-end' : 'top-start';
												case 'bottom left':
													return h ? 'bottom-start' : 'bottom-end';
												case 'bottom':
													return 'bottom';
												case 'bottom right':
													return h ? 'bottom-end' : 'bottom-start';
												case 'left':
													return h ? 'right' : 'left';
												case 'left top':
													return h ? 'right-end' : 'left-end';
												case 'left bottom':
													return h ? 'right-start' : 'left-start';
												case 'right':
													return h ? 'left' : 'right';
												case 'right top':
													return h ? 'left-end' : 'right-end';
												case 'right bottom':
													return h ? 'left-start' : 'right-start';
												case void 0:
													return 'bottom';
												default:
													return this._options.position;
											}
										},
									},
									{
										key: 'container',
										get: function () {
											return V.findOne('#'.concat(this._uid));
										},
									},
									{
										key: 'popconfirmBody',
										get: function () {
											return V.findOne('.popconfirm', this.container);
										},
									},
								]) && am(e.prototype, t),
								n && am(e, n),
								r
							);
						})();
					V.find('.popconfirm-toggle').forEach(function (e) {
						return hm.getInstance(e) || new hm(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[sm]),
								(t.fn[sm] = hm.jQueryInterface),
								(t.fn[sm].Constructor = hm),
								(t.fn[sm].noConflict = function () {
									return (t.fn[sm] = e), hm.jQueryInterface;
								}));
						});
					var pm = hm;
					n(116);
					function mm(e) {
						return getComputedStyle(e);
					}
					function _m(e, t) {
						for (var n in t) {
							var i = t[n];
							'number' == typeof i && (i = ''.concat(i, 'px')),
								(e.style[n] = i);
						}
						return e;
					}
					function vm(e) {
						var t = document.createElement('div');
						return (t.className = e), t;
					}
					var ym =
						'undefined' != typeof Element &&
						(Element.prototype.matches ||
							Element.prototype.webkitMatchesSelector ||
							Element.prototype.mozMatchesSelector ||
							Element.prototype.msMatchesSelector);
					function gm(e, t) {
						if (!ym) throw new Error('No element matching method supported');
						return ym.call(e, t);
					}
					function bm(e) {
						e.remove ? e.remove() : e.parentNode && e.parentNode.removeChild(e);
					}
					function km(e, t) {
						return Array.prototype.filter.call(e.children, function (e) {
							return gm(e, t);
						});
					}
					var wm = {
							main: 'ps',
							rtl: 'ps__rtl',
							element: {
								thumb: function (e) {
									return 'ps__thumb-'.concat(e);
								},
								rail: function (e) {
									return 'ps__rail-'.concat(e);
								},
								consuming: 'ps__child--consume',
							},
							state: {
								focus: 'ps--focus',
								clicking: 'ps--clicking',
								active: function (e) {
									return 'ps--active-'.concat(e);
								},
								scrolling: function (e) {
									return 'ps--scrolling-'.concat(e);
								},
							},
						},
						Mm = wm,
						Lm = { x: null, y: null };
					function xm(e, t) {
						var n = e.element.classList,
							e = wm.state.scrolling(t);
						n.contains(e) ? clearTimeout(Lm[t]) : n.add(e);
					}
					function Dm(e, t) {
						Lm[t] = setTimeout(function () {
							return (
								e.isAlive && e.element.classList.remove(wm.state.scrolling(t))
							);
						}, e.settings.scrollingThreshold);
					}
					n(117), n(290);
					function Sm(e, t) {
						if (!(e instanceof t))
							throw new TypeError('Cannot call a class as a function');
					}
					function Tm(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Om(e, t, n) {
						return t && Tm(e.prototype, t), n && Tm(e, n), e;
					}
					var Ym = (function () {
							function t(e) {
								Sm(this, t), (this.element = e), (this.handlers = {});
							}
							return (
								Om(t, [
									{
										key: 'bind',
										value: function (e, t) {
											void 0 === this.handlers[e] && (this.handlers[e] = []),
												this.handlers[e].push(t),
												this.element.addEventListener(e, t, !1);
										},
									},
									{
										key: 'unbind',
										value: function (t, n) {
											var i = this;
											this.handlers[t] = this.handlers[t].filter(function (e) {
												return (
													!(!n || e === n) ||
													(i.element.removeEventListener(t, e, !1), !1)
												);
											});
										},
									},
									{
										key: 'unbindAll',
										value: function () {
											for (var e in this.handlers) this.unbind(e);
										},
									},
									{
										key: 'isEmpty',
										get: function () {
											var t = this;
											return Object.keys(this.handlers).every(function (e) {
												return 0 === t.handlers[e].length;
											});
										},
									},
								]),
								t
							);
						})(),
						Cm = (function () {
							function e() {
								Sm(this, e), (this.eventElements = []);
							}
							return (
								Om(e, [
									{
										key: 'eventElement',
										value: function (t) {
											var e = this.eventElements.filter(function (e) {
												return e.element === t;
											})[0];
											return (
												e || ((e = new Ym(t)), this.eventElements.push(e)), e
											);
										},
									},
									{
										key: 'bind',
										value: function (e, t, n) {
											this.eventElement(e).bind(t, n);
										},
									},
									{
										key: 'unbind',
										value: function (e, t, n) {
											e = this.eventElement(e);
											e.unbind(t, n),
												e.isEmpty &&
													this.eventElements.splice(
														this.eventElements.indexOf(e),
														1
													);
										},
									},
									{
										key: 'unbindAll',
										value: function () {
											this.eventElements.forEach(function (e) {
												return e.unbindAll();
											}),
												(this.eventElements = []);
										},
									},
									{
										key: 'once',
										value: function (e, n, i) {
											var r = this.eventElement(e),
												e = function e(t) {
													r.unbind(n, e), i(t);
												};
											r.bind(n, e);
										},
									},
								]),
								e
							);
						})();
					function jm(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Em(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Em(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Em(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function Pm(e) {
						if ('function' == typeof window.CustomEvent)
							return new CustomEvent(e);
						var t = document.createEvent('CustomEvent');
						return t.initCustomEvent(e, !1, !1, void 0), t;
					}
					function Am(e, t, n) {
						var i,
							r =
								!(3 < arguments.length && void 0 !== arguments[3]) ||
								arguments[3],
							o =
								4 < arguments.length && void 0 !== arguments[4] && arguments[4];
						if ('top' === t)
							i = [
								'contentHeight',
								'containerHeight',
								'scrollTop',
								'y',
								'up',
								'down',
							];
						else {
							if ('left' !== t)
								throw new Error('A proper axis should be provided');
							i = [
								'contentWidth',
								'containerWidth',
								'scrollLeft',
								'x',
								'left',
								'right',
							];
						}
						!(function (e, t, n) {
							var i = (c = jm(n, 6))[0],
								r = c[1],
								o = c[2],
								a = c[3],
								s = c[4],
								l = c[5],
								u =
									!(3 < arguments.length && void 0 !== arguments[3]) ||
									arguments[3],
								n =
									4 < arguments.length &&
									void 0 !== arguments[4] &&
									arguments[4],
								c = e.element;
							(e.reach[a] = null),
								c[o] < 1 && (e.reach[a] = 'start'),
								c[o] > e[i] - e[r] - 1 && (e.reach[a] = 'end'),
								t &&
									(c.dispatchEvent(Pm('ps-scroll-'.concat(a))),
									t < 0
										? c.dispatchEvent(Pm('ps-scroll-'.concat(s)))
										: 0 < t && c.dispatchEvent(Pm('ps-scroll-'.concat(l))),
									u &&
										(function (e, t) {
											xm(e, t), Dm(e, t);
										})(e, a)),
								e.reach[a] &&
									(t || n) &&
									c.dispatchEvent(
										Pm('ps-'.concat(a, '-reach-').concat(e.reach[a]))
									);
						})(e, n, i, r, o);
					}
					function Hm(e) {
						return parseInt(e, 10) || 0;
					}
					var Im = {
							isWebKit:
								'undefined' != typeof document &&
								'WebkitAppearance' in document.documentElement.style,
							supportsTouch:
								'undefined' != typeof window &&
								('ontouchstart' in window ||
									('maxTouchPoints' in window.navigator &&
										0 < window.navigator.maxTouchPoints) ||
									(window.DocumentTouch &&
										document instanceof window.DocumentTouch)),
							supportsIePointer:
								'undefined' != typeof navigator && navigator.msMaxTouchPoints,
							isChrome:
								'undefined' != typeof navigator &&
								/Chrome/i.test(navigator && navigator.userAgent),
						},
						Rm = function (e) {
							var t,
								n,
								i = e.element,
								r = Math.floor(i.scrollTop),
								o = i.getBoundingClientRect();
							(e.containerWidth = Math.floor(o.width)),
								(e.containerHeight = Math.floor(o.height)),
								(e.contentWidth = i.scrollWidth),
								(e.contentHeight = i.scrollHeight),
								i.contains(e.scrollbarXRail) ||
									(km(i, Mm.element.rail('x')).forEach(bm),
									i.appendChild(e.scrollbarXRail)),
								i.contains(e.scrollbarYRail) ||
									(km(i, Mm.element.rail('y')).forEach(bm),
									i.appendChild(e.scrollbarYRail)),
								!e.settings.suppressScrollX &&
								e.containerWidth + e.settings.scrollXMarginOffset <
									e.contentWidth
									? ((e.scrollbarXActive = !0),
									  (e.railXWidth = e.containerWidth - e.railXMarginWidth),
									  (e.railXRatio = e.containerWidth / e.railXWidth),
									  (e.scrollbarXWidth = Nm(
											e,
											Hm((e.railXWidth * e.containerWidth) / e.contentWidth)
									  )),
									  (e.scrollbarXLeft = Hm(
											((e.negativeScrollAdjustment + i.scrollLeft) *
												(e.railXWidth - e.scrollbarXWidth)) /
												(e.contentWidth - e.containerWidth)
									  )))
									: (e.scrollbarXActive = !1),
								!e.settings.suppressScrollY &&
								e.containerHeight + e.settings.scrollYMarginOffset <
									e.contentHeight
									? ((e.scrollbarYActive = !0),
									  (e.railYHeight = e.containerHeight - e.railYMarginHeight),
									  (e.railYRatio = e.containerHeight / e.railYHeight),
									  (e.scrollbarYHeight = Nm(
											e,
											Hm((e.railYHeight * e.containerHeight) / e.contentHeight)
									  )),
									  (e.scrollbarYTop = Hm(
											(r * (e.railYHeight - e.scrollbarYHeight)) /
												(e.contentHeight - e.containerHeight)
									  )))
									: (e.scrollbarYActive = !1),
								e.scrollbarXLeft >= e.railXWidth - e.scrollbarXWidth &&
									(e.scrollbarXLeft = e.railXWidth - e.scrollbarXWidth),
								e.scrollbarYTop >= e.railYHeight - e.scrollbarYHeight &&
									(e.scrollbarYTop = e.railYHeight - e.scrollbarYHeight),
								(t = i),
								(o = { width: (n = e).railXWidth }),
								(r = Math.floor(t.scrollTop)),
								n.isRtl
									? (o.left =
											n.negativeScrollAdjustment +
											t.scrollLeft +
											n.containerWidth -
											n.contentWidth)
									: (o.left = t.scrollLeft),
								n.isScrollbarXUsingBottom
									? (o.bottom = n.scrollbarXBottom - r)
									: (o.top = n.scrollbarXTop + r),
								_m(n.scrollbarXRail, o),
								(r = { top: r, height: n.railYHeight }),
								n.isScrollbarYUsingRight
									? n.isRtl
										? (r.right =
												n.contentWidth -
												(n.negativeScrollAdjustment + t.scrollLeft) -
												n.scrollbarYRight -
												n.scrollbarYOuterWidth -
												9)
										: (r.right = n.scrollbarYRight - t.scrollLeft)
									: n.isRtl
									? (r.left =
											n.negativeScrollAdjustment +
											t.scrollLeft +
											2 * n.containerWidth -
											n.contentWidth -
											n.scrollbarYLeft -
											n.scrollbarYOuterWidth)
									: (r.left = n.scrollbarYLeft + t.scrollLeft),
								_m(n.scrollbarYRail, r),
								_m(n.scrollbarX, {
									left: n.scrollbarXLeft,
									width: n.scrollbarXWidth - n.railBorderXWidth,
								}),
								_m(n.scrollbarY, {
									top: n.scrollbarYTop,
									height: n.scrollbarYHeight - n.railBorderYWidth,
								}),
								e.scrollbarXActive
									? i.classList.add(Mm.state.active('x'))
									: (i.classList.remove(Mm.state.active('x')),
									  (e.scrollbarXWidth = 0),
									  (e.scrollbarXLeft = 0),
									  (i.scrollLeft = !0 === e.isRtl ? e.contentWidth : 0)),
								e.scrollbarYActive
									? i.classList.add(Mm.state.active('y'))
									: (i.classList.remove(Mm.state.active('y')),
									  (e.scrollbarYHeight = 0),
									  (e.scrollbarYTop = 0),
									  (i.scrollTop = 0));
						};
					function Nm(e, t) {
						return (
							e.settings.minScrollbarLength &&
								(t = Math.max(t, e.settings.minScrollbarLength)),
							e.settings.maxScrollbarLength &&
								(t = Math.min(t, e.settings.maxScrollbarLength)),
							t
						);
					}
					function Wm(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Fm(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Fm(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Fm(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function Bm(n, e) {
						var t = Wm(e, 9),
							i = t[0],
							r = t[1],
							o = t[2],
							a = t[3],
							e = t[4],
							s = t[5],
							l = t[6],
							u = t[7],
							c = t[8],
							d = n.element,
							f = null,
							h = null,
							p = null;
						function m(e) {
							e.touches && e.touches[0] && (e[o] = e.touches[0].pageY),
								(d[l] = f + p * (e[o] - h)),
								xm(n, u),
								Rm(n),
								e.stopPropagation(),
								e.preventDefault();
						}
						function _() {
							Dm(n, u),
								n[c].classList.remove(Mm.state.clicking),
								n.event.unbind(n.ownerDocument, 'mousemove', m);
						}
						function v(e, t) {
							(f = d[l]),
								t && e.touches && (e[o] = e.touches[0].pageY),
								(h = e[o]),
								(p = (n[r] - n[i]) / (n[a] - n[s])),
								t
									? n.event.bind(n.ownerDocument, 'touchmove', m)
									: (n.event.bind(n.ownerDocument, 'mousemove', m),
									  n.event.once(n.ownerDocument, 'mouseup', _),
									  e.preventDefault()),
								n[c].classList.add(Mm.state.clicking),
								e.stopPropagation();
						}
						n.event.bind(n[e], 'mousedown', function (e) {
							v(e);
						}),
							n.event.bind(n[e], 'touchstart', function (e) {
								v(e, !0);
							});
					}
					function zm(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Vm(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Vm(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Vm(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function Um(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Xm = function () {
							return {
								handlers: [
									'click-rail',
									'drag-thumb',
									'keyboard',
									'wheel',
									'touch',
								],
								maxScrollbarLength: null,
								minScrollbarLength: null,
								scrollingThreshold: 1e3,
								scrollXMarginOffset: 0,
								scrollYMarginOffset: 0,
								suppressScrollX: !1,
								suppressScrollY: !1,
								swipeEasing: !0,
								useBothWheelAxes: !1,
								wheelPropagation: !0,
								wheelSpeed: 1,
							};
						},
						Jm = {
							'click-rail': function (n) {
								n.event.bind(n.scrollbarY, 'mousedown', function (e) {
									return e.stopPropagation();
								}),
									n.event.bind(n.scrollbarYRail, 'mousedown', function (e) {
										var t =
											e.pageY -
												window.pageYOffset -
												n.scrollbarYRail.getBoundingClientRect().top >
											n.scrollbarYTop
												? 1
												: -1;
										(n.element.scrollTop += t * n.containerHeight),
											Rm(n),
											e.stopPropagation();
									}),
									n.event.bind(n.scrollbarX, 'mousedown', function (e) {
										return e.stopPropagation();
									}),
									n.event.bind(n.scrollbarXRail, 'mousedown', function (e) {
										var t =
											e.pageX -
												window.pageXOffset -
												n.scrollbarXRail.getBoundingClientRect().left >
											n.scrollbarXLeft
												? 1
												: -1;
										(n.element.scrollLeft += t * n.containerWidth),
											Rm(n),
											e.stopPropagation();
									});
							},
							'drag-thumb': function (e) {
								Bm(e, [
									'containerWidth',
									'contentWidth',
									'pageX',
									'railXWidth',
									'scrollbarX',
									'scrollbarXWidth',
									'scrollLeft',
									'x',
									'scrollbarXRail',
								]),
									Bm(e, [
										'containerHeight',
										'contentHeight',
										'pageY',
										'railYHeight',
										'scrollbarY',
										'scrollbarYHeight',
										'scrollTop',
										'y',
										'scrollbarYRail',
									]);
							},
							keyboard: function (o) {
								var a = o.element;
								o.event.bind(o.ownerDocument, 'keydown', function (e) {
									if (
										!(
											(e.isDefaultPrevented && e.isDefaultPrevented()) ||
											e.defaultPrevented
										) &&
										(gm(a, ':hover') ||
											gm(o.scrollbarX, ':focus') ||
											gm(o.scrollbarY, ':focus'))
									) {
										var t,
											n =
												document.activeElement || o.ownerDocument.activeElement;
										if (n) {
											if ('IFRAME' === n.tagName)
												n = n.contentDocument.activeElement;
											else
												for (; n.shadowRoot; ) n = n.shadowRoot.activeElement;
											if (
												gm((t = n), 'input,[contenteditable]') ||
												gm(t, 'select,[contenteditable]') ||
												gm(t, 'textarea,[contenteditable]') ||
												gm(t, 'button,[contenteditable]')
											)
												return;
										}
										var i = 0,
											r = 0;
										switch (e.which) {
											case 37:
												i = e.metaKey
													? -o.contentWidth
													: e.altKey
													? -o.containerWidth
													: -30;
												break;
											case 38:
												r = e.metaKey
													? o.contentHeight
													: e.altKey
													? o.containerHeight
													: 30;
												break;
											case 39:
												i = e.metaKey
													? o.contentWidth
													: e.altKey
													? o.containerWidth
													: 30;
												break;
											case 40:
												r = e.metaKey
													? -o.contentHeight
													: e.altKey
													? -o.containerHeight
													: -30;
												break;
											case 32:
												r = e.shiftKey ? o.containerHeight : -o.containerHeight;
												break;
											case 33:
												r = o.containerHeight;
												break;
											case 34:
												r = -o.containerHeight;
												break;
											case 36:
												r = o.contentHeight;
												break;
											case 35:
												r = -o.contentHeight;
												break;
											default:
												return;
										}
										(o.settings.suppressScrollX && 0 !== i) ||
											(o.settings.suppressScrollY && 0 !== r) ||
											((a.scrollTop -= r),
											(a.scrollLeft += i),
											Rm(o),
											(function (e, t) {
												var n = Math.floor(a.scrollTop);
												if (0 === e) {
													if (!o.scrollbarYActive) return;
													if (
														(0 === n && 0 < t) ||
														(n >= o.contentHeight - o.containerHeight && t < 0)
													)
														return !o.settings.wheelPropagation;
												}
												if (((n = a.scrollLeft), 0 === t)) {
													if (!o.scrollbarXActive) return;
													if (
														(0 === n && e < 0) ||
														(n >= o.contentWidth - o.containerWidth && 0 < e)
													)
														return !o.settings.wheelPropagation;
												}
												return 1;
											})(i, r) && e.preventDefault());
									}
								});
							},
							wheel: function (l) {
								var u = l.element;
								function e(e) {
									var t,
										n,
										i,
										r,
										o = zm(
											((i = (n = e).deltaX),
											(r = -1 * n.deltaY),
											(void 0 !== i && void 0 !== r) ||
												((i = (-1 * n.wheelDeltaX) / 6),
												(r = n.wheelDeltaY / 6)),
											n.deltaMode &&
												1 === n.deltaMode &&
												((i *= 10), (r *= 10)),
											i != i && r != r && ((i = 0), (r = n.wheelDelta)),
											n.shiftKey ? [-r, -i] : [i, r]),
											2
										),
										a = o[0],
										s = o[1];
									!(function (e, t, n) {
										if (!Im.isWebKit && u.querySelector('select:focus'))
											return 1;
										if (u.contains(e))
											for (var i = e; i && i !== u; ) {
												if (i.classList.contains(Mm.element.consuming))
													return 1;
												var r = mm(i);
												if (n && r.overflowY.match(/(scroll|auto)/)) {
													var o = i.scrollHeight - i.clientHeight;
													if (
														0 < o &&
														((0 < i.scrollTop && n < 0) ||
															(i.scrollTop < o && 0 < n))
													)
														return 1;
												}
												if (t && r.overflowX.match(/(scroll|auto)/)) {
													r = i.scrollWidth - i.clientWidth;
													if (
														0 < r &&
														((0 < i.scrollLeft && t < 0) ||
															(i.scrollLeft < r && 0 < t))
													)
														return 1;
												}
												i = i.parentNode;
											}
									})(e.target, a, s) &&
										((t = !1),
										l.settings.useBothWheelAxes
											? l.scrollbarYActive && !l.scrollbarXActive
												? (s
														? (u.scrollTop -= s * l.settings.wheelSpeed)
														: (u.scrollTop += a * l.settings.wheelSpeed),
												  (t = !0))
												: l.scrollbarXActive &&
												  !l.scrollbarYActive &&
												  (a
														? (u.scrollLeft += a * l.settings.wheelSpeed)
														: (u.scrollLeft -= s * l.settings.wheelSpeed),
												  (t = !0))
											: ((u.scrollTop -= s * l.settings.wheelSpeed),
											  (u.scrollLeft += a * l.settings.wheelSpeed)),
										Rm(l),
										(t =
											t ||
											((n = a),
											(i = s),
											(r = Math.floor(u.scrollTop)),
											(o = 0 === u.scrollTop),
											(a = r + u.offsetHeight === u.scrollHeight),
											(s = 0 === u.scrollLeft),
											(r = u.scrollLeft + u.offsetWidth === u.scrollWidth),
											!(r = Math.abs(i) > Math.abs(n) ? o || a : s || r) ||
												!l.settings.wheelPropagation)) &&
											!e.ctrlKey &&
											(e.stopPropagation(), e.preventDefault()));
								}
								void 0 !== window.onwheel
									? l.event.bind(u, 'wheel', e)
									: void 0 !== window.onmousewheel &&
									  l.event.bind(u, 'mousewheel', e);
							},
							touch: function (a) {
								var s, o, l, u, t;
								function c(e, t) {
									(s.scrollTop -= t), (s.scrollLeft -= e), Rm(a);
								}
								function d(e) {
									return e.targetTouches ? e.targetTouches[0] : e;
								}
								function f(e) {
									return (
										(!e.pointerType ||
											'pen' !== e.pointerType ||
											0 !== e.buttons) &&
										((e.targetTouches && 1 === e.targetTouches.length) ||
											!(
												!e.pointerType ||
												'mouse' === e.pointerType ||
												e.pointerType === e.MSPOINTER_TYPE_MOUSE
											))
									);
								}
								function e(e) {
									f(e) &&
										((e = d(e)),
										(o.pageX = e.pageX),
										(o.pageY = e.pageY),
										(l = new Date().getTime()),
										null !== t && clearInterval(t));
								}
								function n(e) {
									var t, n, i, r;
									f(e) &&
										((t =
											(r = { pageX: (i = d(e)).pageX, pageY: i.pageY }).pageX -
											o.pageX),
										(n = r.pageY - o.pageY),
										(function (e, t, n) {
											if (s.contains(e))
												for (var i = e; i && i !== s; ) {
													if (i.classList.contains(Mm.element.consuming))
														return 1;
													var r = mm(i);
													if (n && r.overflowY.match(/(scroll|auto)/)) {
														var o = i.scrollHeight - i.clientHeight;
														if (
															0 < o &&
															((0 < i.scrollTop && n < 0) ||
																(i.scrollTop < o && 0 < n))
														)
															return 1;
													}
													if (t && r.overflowX.match(/(scroll|auto)/)) {
														r = i.scrollWidth - i.clientWidth;
														if (
															0 < r &&
															((0 < i.scrollLeft && t < 0) ||
																(i.scrollLeft < r && 0 < t))
														)
															return 1;
													}
													i = i.parentNode;
												}
										})(e.target, t, n) ||
											(c(t, n),
											(o = r),
											0 < (r = (i = new Date().getTime()) - l) &&
												((u.x = t / r), (u.y = n / r), (l = i)),
											(function (e, t) {
												var n = Math.floor(s.scrollTop),
													i = s.scrollLeft,
													r = Math.abs(e),
													o = Math.abs(t);
												if (r < o) {
													if (
														(t < 0 &&
															n === a.contentHeight - a.containerHeight) ||
														(0 < t && 0 === n)
													)
														return 0 === window.scrollY && 0 < t && Im.isChrome;
												} else if (
													o < r &&
													((e < 0 && i === a.contentWidth - a.containerWidth) ||
														(0 < e && 0 === i))
												)
													return 1;
												return 1;
											})(t, n) && e.preventDefault()));
								}
								function i() {
									a.settings.swipeEasing &&
										(clearInterval(t),
										(t = setInterval(function () {
											a.isInitialized ||
											(!u.x && !u.y) ||
											(Math.abs(u.x) < 0.01 && Math.abs(u.y) < 0.01)
												? clearInterval(t)
												: (c(30 * u.x, 30 * u.y), (u.x *= 0.8), (u.y *= 0.8));
										}, 10)));
								}
								(Im.supportsTouch || Im.supportsIePointer) &&
									((s = a.element),
									(o = {}),
									(l = 0),
									(u = {}),
									(t = null),
									Im.supportsTouch
										? (a.event.bind(s, 'touchstart', e),
										  a.event.bind(s, 'touchmove', n),
										  a.event.bind(s, 'touchend', i))
										: Im.supportsIePointer &&
										  (window.PointerEvent
												? (a.event.bind(s, 'pointerdown', e),
												  a.event.bind(s, 'pointermove', n),
												  a.event.bind(s, 'pointerup', i))
												: window.MSPointerEvent &&
												  (a.event.bind(s, 'MSPointerDown', e),
												  a.event.bind(s, 'MSPointerMove', n),
												  a.event.bind(s, 'MSPointerUp', i))));
							},
						},
						qm = (function () {
							function l(e) {
								var t,
									n = this,
									i =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {};
								if (
									(!(function (e) {
										if (!(e instanceof l))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									'string' == typeof e && (e = document.querySelector(e)),
									!e || !e.nodeName)
								)
									throw new Error(
										'no element is specified to initialize PerfectScrollbar'
									);
								for (t in ((this.element = e).classList.add(Mm.main),
								(this.settings = Xm()),
								i))
									this.settings[t] = i[t];
								(this.containerWidth = null),
									(this.containerHeight = null),
									(this.contentWidth = null),
									(this.contentHeight = null);
								var r,
									o = function () {
										return e.classList.add(Mm.state.focus);
									},
									a = function () {
										return e.classList.remove(Mm.state.focus);
									};
								(this.isRtl = 'rtl' === mm(e).direction),
									!0 === this.isRtl && e.classList.add(Mm.rtl),
									(this.isNegativeScroll =
										((r = e.scrollLeft),
										(e.scrollLeft = -1),
										(s = e.scrollLeft < 0),
										(e.scrollLeft = r),
										s)),
									(this.negativeScrollAdjustment = this.isNegativeScroll
										? e.scrollWidth - e.clientWidth
										: 0),
									(this.event = new Cm()),
									(this.ownerDocument = e.ownerDocument || document),
									(this.scrollbarXRail = vm(Mm.element.rail('x'))),
									e.appendChild(this.scrollbarXRail),
									(this.scrollbarX = vm(Mm.element.thumb('x'))),
									this.scrollbarXRail.appendChild(this.scrollbarX),
									this.scrollbarX.setAttribute('tabindex', 0),
									this.event.bind(this.scrollbarX, 'focus', o),
									this.event.bind(this.scrollbarX, 'blur', a),
									(this.scrollbarXActive = null),
									(this.scrollbarXWidth = null),
									(this.scrollbarXLeft = null);
								var s = mm(this.scrollbarXRail);
								(this.scrollbarXBottom = parseInt(s.bottom, 10)),
									isNaN(this.scrollbarXBottom)
										? ((this.isScrollbarXUsingBottom = !1),
										  (this.scrollbarXTop = Hm(s.top)))
										: (this.isScrollbarXUsingBottom = !0),
									(this.railBorderXWidth =
										Hm(s.borderLeftWidth) + Hm(s.borderRightWidth)),
									_m(this.scrollbarXRail, { display: 'block' }),
									(this.railXMarginWidth =
										Hm(s.marginLeft) + Hm(s.marginRight)),
									_m(this.scrollbarXRail, { display: '' }),
									(this.railXWidth = null),
									(this.railXRatio = null),
									(this.scrollbarYRail = vm(Mm.element.rail('y'))),
									e.appendChild(this.scrollbarYRail),
									(this.scrollbarY = vm(Mm.element.thumb('y'))),
									this.scrollbarYRail.appendChild(this.scrollbarY),
									this.scrollbarY.setAttribute('tabindex', 0),
									this.event.bind(this.scrollbarY, 'focus', o),
									this.event.bind(this.scrollbarY, 'blur', a),
									(this.scrollbarYActive = null),
									(this.scrollbarYHeight = null),
									(this.scrollbarYTop = null);
								o = mm(this.scrollbarYRail);
								(this.scrollbarYRight = parseInt(o.right, 10)),
									isNaN(this.scrollbarYRight)
										? ((this.isScrollbarYUsingRight = !1),
										  (this.scrollbarYLeft = Hm(o.left)))
										: (this.isScrollbarYUsingRight = !0),
									(this.scrollbarYOuterWidth = this.isRtl
										? Hm((a = mm((a = this.scrollbarY))).width) +
										  Hm(a.paddingLeft) +
										  Hm(a.paddingRight) +
										  Hm(a.borderLeftWidth) +
										  Hm(a.borderRightWidth)
										: null),
									(this.railBorderYWidth =
										Hm(o.borderTopWidth) + Hm(o.borderBottomWidth)),
									_m(this.scrollbarYRail, { display: 'block' }),
									(this.railYMarginHeight =
										Hm(o.marginTop) + Hm(o.marginBottom)),
									_m(this.scrollbarYRail, { display: '' }),
									(this.railYHeight = null),
									(this.railYRatio = null),
									(this.reach = {
										x:
											e.scrollLeft <= 0
												? 'start'
												: e.scrollLeft >=
												  this.contentWidth - this.containerWidth
												? 'end'
												: null,
										y:
											e.scrollTop <= 0
												? 'start'
												: e.scrollTop >=
												  this.contentHeight - this.containerHeight
												? 'end'
												: null,
									}),
									(this.isAlive = !0),
									this.settings.handlers.forEach(function (e) {
										return Jm[e](n);
									}),
									(this.lastScrollTop = Math.floor(e.scrollTop)),
									(this.lastScrollLeft = e.scrollLeft),
									this.event.bind(this.element, 'scroll', function (e) {
										return n.onScroll(e);
									}),
									Rm(this);
							}
							var e, t, n;
							return (
								(e = l),
								(t = [
									{
										key: 'update',
										value: function () {
											this.isAlive &&
												((this.negativeScrollAdjustment = this.isNegativeScroll
													? this.element.scrollWidth - this.element.clientWidth
													: 0),
												_m(this.scrollbarXRail, { display: 'block' }),
												_m(this.scrollbarYRail, { display: 'block' }),
												(this.railXMarginWidth =
													Hm(mm(this.scrollbarXRail).marginLeft) +
													Hm(mm(this.scrollbarXRail).marginRight)),
												(this.railYMarginHeight =
													Hm(mm(this.scrollbarYRail).marginTop) +
													Hm(mm(this.scrollbarYRail).marginBottom)),
												_m(this.scrollbarXRail, { display: 'none' }),
												_m(this.scrollbarYRail, { display: 'none' }),
												Rm(this),
												Am(this, 'top', 0, !1, !0),
												Am(this, 'left', 0, !1, !0),
												_m(this.scrollbarXRail, { display: '' }),
												_m(this.scrollbarYRail, { display: '' }));
										},
									},
									{
										key: 'onScroll',
										value: function () {
											this.isAlive &&
												(Rm(this),
												Am(
													this,
													'top',
													this.element.scrollTop - this.lastScrollTop
												),
												Am(
													this,
													'left',
													this.element.scrollLeft - this.lastScrollLeft
												),
												(this.lastScrollTop = Math.floor(
													this.element.scrollTop
												)),
												(this.lastScrollLeft = this.element.scrollLeft));
										},
									},
									{
										key: 'destroy',
										value: function () {
											this.isAlive &&
												(this.event.unbindAll(),
												bm(this.scrollbarX),
												bm(this.scrollbarY),
												bm(this.scrollbarXRail),
												bm(this.scrollbarYRail),
												this.removePsClasses(),
												(this.element = null),
												(this.scrollbarX = null),
												(this.scrollbarY = null),
												(this.scrollbarXRail = null),
												(this.scrollbarYRail = null),
												(this.isAlive = !1));
										},
									},
									{
										key: 'removePsClasses',
										value: function () {
											this.element.className = this.element.className
												.split(' ')
												.filter(function (e) {
													return !e.match(/^ps([-_].+|)$/);
												})
												.join(' ');
										},
									},
								]) && Um(e.prototype, t),
								n && Um(e, n),
								l
							);
						})(),
						Km = function (e, t) {
							var n = e.text,
								i = e.entries,
								r = e.entriesOptions,
								o = e.fullPagination,
								e = e.rowsText,
								r = r
									.map(function (e) {
										return '<option value="'
											.concat(e, '" ')
											.concat(e === i ? 'selected' : '', '>')
											.concat(e, '</option>');
									})
									.join('\n');
							return '\n<div class="datatable-pagination">\n  <div class="datatable-select-wrapper">\n    <p class="datatable-select-text">'
								.concat(e, '</p>\n    <select name="entries"\n      ')
								.concat(
									t ? 'data-mdb-disabled="true"' : '',
									' class="datatable-select select">\n      '
								)
								.concat(
									r,
									'\n    </select>\n  </div>\n  <div class="datatable-pagination-nav">\n  '
								)
								.concat(
									n,
									'\n  </div>\n  <div class="datatable-pagination-buttons">\n    '
								)
								.concat(
									o
										? '<button data-mdb-ripple-color="dark" class="btn btn-link datatable-pagination-button datatable-pagination-start"><i class="fa fa-angle-double-left"></i></button>'
										: '',
									'\n    <button data-mdb-ripple-color="dark" class="btn btn-link datatable-pagination-button datatable-pagination-left"><i class="fa fa-chevron-'
								)
								.concat(
									h ? 'right' : 'left',
									'"></i></button>\n    <button data-mdb-ripple-color="dark" class="btn btn-link datatable-pagination-button datatable-pagination-right"><i class="fa fa-chevron-'
								)
								.concat(h ? 'left' : 'right', '"></i></button>\n    ')
								.concat(
									o
										? '<button data-mdb-ripple-color="dark" class="btn btn-link datatable-pagination-button datatable-pagination-end"><i class="fa fa-angle-double-right"></i></button>'
										: '',
									'\n  </div>\n</div>\n'
								);
						};
					function Gm(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return Qm(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Qm(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Qm(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Qm(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function $m(e, t, n) {
						return t
							? e.filter(function (t) {
									if (n && 'string' == typeof n) return i(t[n]);
									var e = Object.values(t);
									return (
										n &&
											Array.isArray(n) &&
											(e = Object.keys(t)
												.filter(function (e) {
													return n.includes(e);
												})
												.map(function (e) {
													return t[e];
												})),
										0 < e.filter(i).length
									);
							  })
							: e;
						function i(e) {
							return e.toString().toLowerCase().match(t.toLowerCase());
						}
					}
					var Zm = function (t, e, n) {
							var i = n
									? '\n<th scope="col">\n  <div class="form-check d-flex align-items-center mb-0">\n    <input class="datatable-header-checkbox form-check-input" type="checkbox">\n  </div>\n</th>\n'
									: '<th scope="col"></th>',
								n = t.map(function (n, i) {
									var e = n.fixed
										? t
												.filter(function (e, t) {
													return e.fixed === n.fixed && t < i;
												})
												.reduce(function (e, t) {
													return e + t.width;
												}, 0)
										: null;
									return '<th style="'
										.concat(
											n.fixed
												? ''
														.concat(
															'right' === n.fixed ? 'right' : 'left',
															': '
														)
														.concat(e, 'px;')
												: '',
											'" '
										)
										.concat(
											n.fixed ? 'class="fixed-cell"' : '',
											' scope="col">'
										)
										.concat(
											n.sort
												? '<i data-mdb-sort="'.concat(
														n.field,
														'" class="datatable-sort-icon fas fa-arrow-up"></i>'
												  )
												: '',
											' '
										)
										.concat(n.label, '</th>');
								});
							return [e ? i : ''].concat(Gm(n)).join('\n');
						},
						e_ = function (e) {
							var t = e.rows,
								o = e.columns,
								n = e.noFoundMessage,
								a = e.edit,
								i = e.selectable,
								r = e.loading,
								e = t.map(function (r) {
									var e =
											'\n    <td data-mdb-field="checkbox">\n      <div class="form-check">\n        <input data-mdb-row-index="'.concat(
												r.rowIndex,
												'" class="datatable-row-checkbox form-check-input" type="checkbox">\n      </div>\n    </td>\n    '
											),
										t = o
											.map(function (n, i) {
												var t = {};
												n.width &&
													((t['min-width'] = ''.concat(n.width - 1, 'px')),
													(t['max-width'] = ''.concat(n.width, 'px')),
													(t.width = ''.concat(n.width, 'px'))),
													n.fixed &&
														((e = o
															.filter(function (e, t) {
																return e.fixed === n.fixed && t < i;
															})
															.reduce(function (e, t) {
																return e + t.width;
															}, 0)),
														(t['right' === n.fixed ? 'right' : 'left'] =
															''.concat(e, 'px')));
												var e = Object.keys(t)
													.map(function (e) {
														return ''.concat(e, ': ').concat(t[e]);
													})
													.join('; ');
												return '<td style="'
													.concat(e, '" class="')
													.concat(
														n.fixed ? 'fixed-cell' : '',
														'" data-mdb-field="'
													)
													.concat(n.field, '" ')
													.concat(a && 'contenteditable="true"', '>')
													.concat(r[n.field], '</td>');
											})
											.join('');
									return '<tr scope="row" data-mdb-index="'
										.concat(r.rowIndex, '">')
										.concat(i ? e : '')
										.concat(t, '</tr>');
								});
							return 0 < t.length || r
								? e.join('\n')
								: '<tr><td>'.concat(n, '</td></tr>');
						},
						t_ = function (e) {
							var t = e.columns,
								n = e.rows,
								i = e.noFoundMessage,
								r = e.edit,
								o = e.multi,
								a = e.selectable,
								s = e.loading,
								l = e.loadingMessage,
								u = e.loaderClass,
								e = e.pagination,
								r = e_({
									rows: n,
									columns: t,
									noFoundMessage: i,
									edit: r,
									loading: s,
									selectable: a,
								}),
								o = Zm(t, a, o);
							return {
								table:
									'\n<div class="datatable-inner table-responsive">\n  <table class="table datatable-table">\n    <thead class="datatable-header">\n      <tr>\n        '
										.concat(
											o,
											'\n      </tr>\n    </thead>\n    <tbody class="datatable-body">\n      '
										)
										.concat(
											s ? '' : r,
											'\n    </tbody>\n  </table>\n</div>\n  '
										)
										.concat(
											s
												? '\n  <div class="datatable-loader bg-light}">\n    <span class="datatable-loader-inner"><span class="datatable-progress '
														.concat(
															u,
															'"></span></span>\n  </div>\n  <p class="text-center text-muted my-4">'
														)
														.concat(l, '</p>\n')
												: '',
											'\n  '
										)
										.concat(e.enable ? Km(e, s) : '', '\n  '),
								rows: r,
								column: o,
							};
						};
					function n_(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var i_ = '.form-check-input',
						r_ = 'selected',
						o_ = (function () {
							function d(e, t, n, i, r, o, a, s, l, u, c) {
								!(function (e) {
									if (!(e instanceof d))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this.id = e),
									(this.nativeOption = t),
									(this.multiple = n),
									(this.value = i),
									(this.label = r),
									(this.selected = o),
									(this.disabled = a),
									(this.hidden = s),
									(this.secondaryText = l),
									(this.groupId = u),
									(this.icon = c),
									(this.node = null),
									(this.active = !1);
							}
							var e, t, n;
							return (
								(e = d),
								(t = [
									{
										key: 'select',
										value: function () {
											this.multiple
												? this._selectMultiple()
												: this._selectSingle();
										},
									},
									{
										key: '_selectSingle',
										value: function () {
											this.selected ||
												(F.addClass(this.node, r_),
												this.node.setAttribute('aria-selected', !0),
												(this.selected = !0),
												this.nativeOption && (this.nativeOption.selected = !0));
										},
									},
									{
										key: '_selectMultiple',
										value: function () {
											this.selected ||
												((V.findOne(i_, this.node).checked = !0),
												F.addClass(this.node, r_),
												this.node.setAttribute('aria-selected', !0),
												(this.selected = !0),
												this.nativeOption && (this.nativeOption.selected = !0));
										},
									},
									{
										key: 'deselect',
										value: function () {
											this.multiple
												? this._deselectMultiple()
												: this._deselectSingle();
										},
									},
									{
										key: '_deselectSingle',
										value: function () {
											this.selected &&
												(F.removeClass(this.node, r_),
												this.node.setAttribute('aria-selected', !1),
												(this.selected = !1),
												this.nativeOption && (this.nativeOption.selected = !1));
										},
									},
									{
										key: '_deselectMultiple',
										value: function () {
											this.selected &&
												((V.findOne(i_, this.node).checked = !1),
												F.removeClass(this.node, r_),
												this.node.setAttribute('aria-selected', !1),
												(this.selected = !1),
												this.nativeOption && (this.nativeOption.selected = !1));
										},
									},
									{
										key: 'setNode',
										value: function (e) {
											this.node = e;
										},
									},
									{
										key: 'setActiveStyles',
										value: function () {
											this.active ||
												((this.active = !0), F.addClass(this.node, 'active'));
										},
									},
									{
										key: 'removeActiveStyles',
										value: function () {
											this.active &&
												((this.active = !1),
												F.removeClass(this.node, 'active'));
										},
									},
								]) && n_(e.prototype, t),
								n && n_(e, n),
								d
							);
						})();
					function a_(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var s_ = (function () {
						function t() {
							var e =
								0 < arguments.length && void 0 !== arguments[0] && arguments[0];
							!(function (e) {
								if (!(e instanceof t))
									throw new TypeError('Cannot call a class as a function');
							})(this),
								(this._multiple = e),
								(this._selections = []);
						}
						var e, n, i;
						return (
							(e = t),
							(n = [
								{
									key: 'select',
									value: function (e) {
										this._multiple
											? this._selections.push(e)
											: (this._selections = [e]);
									},
								},
								{
									key: 'deselect',
									value: function (t) {
										var e;
										this._multiple
											? ((e = this._selections.findIndex(function (e) {
													return t === e;
											  })),
											  this._selections.splice(e, 1))
											: (this._selections = []);
									},
								},
								{
									key: 'clear',
									value: function () {
										this._selections = [];
									},
								},
								{
									key: 'selection',
									get: function () {
										return this._selections[0];
									},
								},
								{
									key: 'selections',
									get: function () {
										return this._selections;
									},
								},
								{
									key: 'label',
									get: function () {
										return this._selections[0] && this.selection.label;
									},
								},
								{
									key: 'labels',
									get: function () {
										return this._selections
											.map(function (e) {
												return e.label;
											})
											.join(', ');
									},
								},
								{
									key: 'value',
									get: function () {
										return this.selections[0] && this.selection.value;
									},
								},
								{
									key: 'values',
									get: function () {
										return this._selections.map(function (e) {
											return e.value;
										});
									},
								},
							]) && a_(e.prototype, n),
							i && a_(e, i),
							t
						);
					})();
					function l_(e) {
						return e
							.filter(function (e) {
								return !e.disabled;
							})
							.every(function (e) {
								return e.selected;
							});
					}
					function u_(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return c_(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return c_(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return c_(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function c_(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function d_(e, t, n, i, r, o, a) {
						var s = document.createElement('div');
						s.classList.add('select-dropdown-container'),
							s.setAttribute('id', ''.concat(e)),
							(s.style.width = ''.concat(n, 'px'));
						e = document.createElement('div');
						e.setAttribute('tabindex', 0), e.classList.add('select-dropdown');
						n = x('div');
						F.addClass(n, 'select-options-wrapper'),
							(n.style.maxHeight = ''.concat(i, 'px'));
						r = f_(o, r, t);
						return (
							n.appendChild(r),
							t.filter &&
								e.appendChild(
									(function (e) {
										var t = x('div');
										F.addClass(t, 'input-group');
										var n = x('input');
										return (
											F.addClass(n, 'form-control'),
											F.addClass(n, 'select-filter-input'),
											(n.placeholder = e),
											n.setAttribute('role', 'searchbox'),
											n.setAttribute('type', 'text'),
											t.appendChild(n),
											t
										);
									})(t.searchPlaceholder)
								),
							e.appendChild(n),
							a && e.appendChild(a),
							s.appendChild(e),
							s
						);
					}
					function f_(e, t, n) {
						var i = x('div');
						return (
							F.addClass(i, 'select-options-list'),
							(n.multiple
								? (function (e, t, n) {
										var i = null;
										n.selectAll &&
											(i = (function (e, t, n) {
												var i = l_(t),
													t = x('div');
												F.addClass(t, 'select-option'),
													F.addClass(t, 'select-all-option'),
													F.addStyle(t, {
														height: ''.concat(n.optionHeight, 'px'),
													}),
													t.setAttribute('role', 'option'),
													t.setAttribute('aria-selected', i),
													i && F.addClass(t, 'selected');
												return t.appendChild(m_(e, n)), e.setNode(t), t;
											})(t, e, n));
										n = h_(e, n);
										return i ? [i].concat(u_(n)) : n;
								  })(e, t, n)
								: h_(e, n)
							).forEach(function (e) {
								i.appendChild(e);
							}),
							i
						);
					}
					function h_(e, n) {
						var i = [];
						return (
							e.forEach(function (e) {
								var t;
								e.hasOwnProperty('options')
									? ((t = (function (e, t) {
											var n = x('div');
											F.addClass(n, 'select-option-group'),
												n.setAttribute('role', 'group'),
												n.setAttribute('id', e.id),
												e.hidden && F.addClass(n, 'd-none');
											var i = x('label');
											return (
												F.addClass(i, 'select-option-group-label'),
												F.addStyle(i, {
													height: ''.concat(t.optionHeight, 'px'),
												}),
												i.setAttribute('for', e.id),
												(i.textContent = e.label),
												n.appendChild(i),
												e.options.forEach(function (e) {
													n.appendChild(p_(e, t));
												}),
												n
											);
									  })(e, n)),
									  i.push(t))
									: i.push(p_(e, n));
							}),
							i
						);
					}
					function p_(e, t) {
						if (e.node) return e.node;
						var n = x('div');
						return (
							F.addClass(n, 'select-option'),
							F.addStyle(n, { height: ''.concat(t.optionHeight, 'px') }),
							F.setDataAttribute(n, 'id', e.id),
							n.setAttribute('role', 'option'),
							n.setAttribute('aria-selected', e.selected),
							n.setAttribute('aria-disabled', e.disabled),
							e.selected && F.addClass(n, 'selected'),
							e.disabled && F.addClass(n, 'disabled'),
							e.hidden && F.addClass(n, 'd-none'),
							n.appendChild(m_(e, t)),
							e.icon &&
								n.appendChild(
									(function (e) {
										var t = x('span');
										F.addClass(t, 'select-option-icon-container');
										var n = x('img');
										return (
											F.addClass(n, 'select-option-icon'),
											F.addClass(n, 'rounded-circle'),
											(n.src = e.icon),
											t.appendChild(n),
											t
										);
									})(e)
								),
							e.setNode(n),
							n
						);
					}
					function m_(e, t) {
						var n = x('span');
						F.addClass(n, 'select-option-text');
						var i = document.createTextNode(e.label);
						return (
							t.multiple &&
								n.appendChild(
									(function (e) {
										var t = x('input');
										t.setAttribute('type', 'checkbox'),
											F.addClass(t, 'form-check-input');
										var n = x('label');
										e.selected && t.setAttribute('checked', !0);
										e.disabled && t.setAttribute('disabled', !0);
										return t.appendChild(n), t;
									})(e)
								),
							n.appendChild(i),
							e.secondaryText &&
								n.appendChild(
									(function (e) {
										var t = x('span');
										F.addClass(t, 'select-option-secondary-text');
										e = document.createTextNode(e);
										return t.appendChild(e), t;
									})(e.secondaryText)
								),
							n
						);
					}
					function __(e) {
						return (__ =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function v_(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return y_(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return y_(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return y_(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function y_(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function g_(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function b_(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? g_(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: g_(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function k_(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var w_ = {
							container: 'body',
							clearButton: !1,
							disabled: !1,
							displayedLabels: 5,
							formWhite: !1,
							multiple: !1,
							optionsSelectedLabel: 'options selected',
							optionHeight: 38,
							selectAll: !0,
							selectAllLabel: 'Select all',
							searchPlaceholder: 'Search...',
							size: 'default',
							visibleOptions: 5,
							filter: !1,
							filterDebounce: 300,
							noResultText: 'No results',
							validation: !1,
							validFeedback: 'Valid',
							invalidFeedback: 'Invalid',
							placeholder: '',
						},
						M_ = {
							container: 'string',
							clearButton: 'boolean',
							disabled: 'boolean',
							displayedLabels: 'number',
							formWhite: 'boolean',
							multiple: 'boolean',
							optionsSelectedLabel: 'string',
							optionHeight: 'number',
							selectAll: 'boolean',
							selectAllLabel: 'string',
							searchPlaceholder: 'string',
							size: 'string',
							visibleOptions: 'number',
							filter: 'boolean',
							filterDebounce: 'number',
							noResultText: 'string',
							validation: 'boolean',
							validFeedback: 'string',
							invalidFeedback: 'string',
							placeholder: '',
						},
						L_ = 'select',
						x_ = 'mdb.select',
						Ve = '.'.concat(x_),
						D_ = 'close'.concat(Ve),
						S_ = 'open'.concat(Ve),
						T_ = 'optionSelect'.concat(Ve),
						O_ = 'optionDeselect'.concat(Ve),
						Y_ = 'valueChange'.concat(Ve),
						C_ = '.select-label',
						j_ = '.select-input',
						E_ = '.select-options-list',
						P_ = '.select-custom-content',
						A_ = 'select-initialized',
						H_ = 'active',
						I_ = (function () {
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._config = this._getConfig(t)),
									(this._optionsToRender = this._getOptionsToRender(e)),
									(this._plainOptions = this._getPlainOptions(
										this._optionsToRender
									)),
									(this._filteredOptionsList = null),
									(this._selectionModel = new s_(this.multiple)),
									(this._activeOptionIndex = -1),
									(this._activeOption = null),
									(this._wrapperId = d('select-wrapper-')),
									(this._dropdownContainerId = d('select-dropdown-container-')),
									(this._selectAllId = d('select-all-')),
									(this._debounceTimeoutId = null),
									(this._dropdownHeight =
										this._config.optionHeight * this._config.visibleOptions),
									(this._popper = null),
									(this._input = null),
									(this._label = V.next(this._element, C_)[0]),
									(this._customContent = V.next(e, P_)[0]),
									(this._wrapper = null),
									(this._inputEl = null),
									(this._dropdownContainer = null),
									(this._container = null),
									(this._selectAllOption = null),
									this._init(),
									(this._mutationObserver = null),
									(this._isOpen = !1),
									this._addMutationObserver(),
									this._element && m.setData(e, x_, this);
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, x_),
													t = 'object' === __(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, x_);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return L_;
										},
									},
								]),
								(t = [
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._element);
											return (
												(e = b_(b_(b_({}, w_), t), e)),
												this._element.hasAttribute('multiple') &&
													(e.multiple = !0),
												this._element.hasAttribute('disabled') &&
													(e.disabled = !0),
												s(L_, e, M_),
												e
											);
										},
									},
									{
										key: '_getOptionsToRender',
										value: function (e) {
											var n = this,
												i = [];
											return (
												e.childNodes.forEach(function (e) {
													var t;
													'OPTGROUP' === e.nodeName
														? ((t = {
																id: d('group-'),
																label: e.label,
																disabled: e.hasAttribute('disabled'),
																hidden: e.hasAttribute('hidden'),
																options: [],
														  }),
														  e.childNodes.forEach(function (e) {
																'OPTION' === e.nodeName &&
																	t.options.push(n._createOptionObject(e, t));
														  }),
														  i.push(t))
														: 'OPTION' === e.nodeName &&
														  i.push(n._createOptionObject(e));
												}),
												i
											);
										},
									},
									{
										key: '_getPlainOptions',
										value: function (e) {
											if (!V.findOne('optgroup', this._element)) return e;
											var t = [];
											return (
												e.forEach(function (e) {
													e.hasOwnProperty('options')
														? e.options.forEach(function (e) {
																t.push(e);
														  })
														: t.push(e);
												}),
												t
											);
										},
									},
									{
										key: '_createOptionObject',
										value: function (e, t) {
											var n = 1 < arguments.length && void 0 !== t ? t : {},
												i = d('option-'),
												r = n.id || null,
												o = n.disabled || !1,
												a = e.selected || e.hasAttribute('selected'),
												s = e.hasAttribute('disabled') || o,
												l = e.hasAttribute('hidden') || (n && n.hidden),
												u = this.multiple,
												c = e.value,
												t = e.label,
												o = F.getDataAttribute(e, 'secondaryText'),
												n = F.getDataAttribute(e, 'icon');
											return new o_(i, e, u, c, t, a, s, l, o, r, n);
										},
									},
									{
										key: '_getNavigationOptions',
										value: function () {
											var e = this.options.filter(function (e) {
												return !e.hidden;
											});
											return this.hasSelectAll
												? [this._selectAllOption].concat(v_(e))
												: e;
										},
									},
									{
										key: '_init',
										value: function () {
											this._renderMaterialWrapper(),
												(this._wrapper = V.findOne(
													'#'.concat(this._wrapperId)
												)),
												(this._input = V.findOne(j_, this._wrapper));
											var e = this._config.container;
											(this._container =
												'body' === e ? document.body : V.findOne(e)),
												this._initOutlineInput(),
												this._setDefaultSelections(),
												this._updateInputValue(),
												this._updateLabelPosition(),
												this._updateClearButtonVisibility(),
												this._bindComponentEvents(),
												this.hasSelectAll &&
													(this._selectAllOption =
														this._createSelectAllOption()),
												(this._dropdownContainer = d_(
													this._dropdownContainerId,
													this._config,
													this._input.offsetWidth,
													this._dropdownHeight,
													this._selectAllOption,
													this._optionsToRender,
													this._customContent
												)),
												this._setFirstActiveOption();
										},
									},
									{
										key: '_renderMaterialWrapper',
										value: function () {
											var e = (function (e, t, n) {
												var i = document.createElement('div');
												i.setAttribute('id', e),
													i.classList.add('select-wrapper');
												var r = x('div');
												F.addClass(r, 'form-outline'),
													t.formWhite && F.addClass(r, 'form-white');
												var o = x('input'),
													a = t.filter ? 'combobox' : 'listbox',
													s = t.multiple ? 'true' : 'false',
													l = t.disabled ? 'true' : 'false';
												return (
													F.addClass(o, 'form-control'),
													F.addClass(o, 'select-input'),
													'sm' === t.size && F.addClass(o, 'form-control-sm'),
													'lg' === t.size && F.addClass(o, 'form-control-lg'),
													o.setAttribute('type', 'text'),
													o.setAttribute('role', a),
													o.setAttribute('aria-multiselectable', s),
													o.setAttribute('aria-disabled', l),
													o.setAttribute('aria-haspopup', 'true'),
													o.setAttribute('aria-expanded', !1),
													t.disabled && o.setAttribute('disabled', ''),
													'' !== t.placeholder &&
														o.setAttribute('placeholder', t.placeholder),
													t.validation || o.setAttribute('readonly', ''),
													t.validation &&
														(o.setAttribute('required', 'true'),
														o.setAttribute('aria-required', 'true'),
														o.addEventListener('keypress', function (e) {
															return e.preventDefault();
														})),
													(e = x('div')),
													F.addClass(e, 'valid-feedback'),
													(a = document.createTextNode(
														''.concat(t.validFeedback)
													)),
													e.appendChild(a),
													(s = x('div')),
													F.addClass(s, 'invalid-feedback'),
													(l = document.createTextNode(
														''.concat(t.invalidFeedback)
													)),
													s.appendChild(l),
													(a = x('span')),
													F.addClass(a, 'select-clear-btn'),
													(l = document.createTextNode('✕')),
													a.appendChild(l),
													a.setAttribute('tabindex', '0'),
													(l = x('span')),
													F.addClass(l, 'select-arrow'),
													r.appendChild(o),
													n && r.appendChild(n),
													t.validation && (r.appendChild(e), r.appendChild(s)),
													t.clearButton && r.appendChild(a),
													r.appendChild(l),
													i.appendChild(r),
													i
												);
											})(this._wrapperId, this._config, this._label);
											this._element.parentNode.insertBefore(e, this._element),
												F.addClass(this._element, A_),
												e.appendChild(this._element);
										},
									},
									{
										key: '_initOutlineInput',
										value: function () {
											var e = V.findOne('.form-outline', this._wrapper);
											new Rs(e).init();
										},
									},
									{
										key: '_bindComponentEvents',
										value: function () {
											this._listenToComponentKeydown(),
												this._listenToWrapperClick(),
												this._listenToClearBtnClick(),
												this._listenToClearBtnKeydown();
										},
									},
									{
										key: '_setDefaultSelections',
										value: function () {
											var t = this;
											this.options.forEach(function (e) {
												e.selected && t._selectionModel.select(e);
											});
										},
									},
									{
										key: '_listenToComponentKeydown',
										value: function () {
											H.on(
												this._wrapper,
												'keydown',
												this._handleKeydown.bind(this)
											);
										},
									},
									{
										key: '_handleKeydown',
										value: function (e) {
											this._isOpen && !this._config.filter
												? this._handleOpenKeydown(e)
												: this._handleClosedKeydown(e);
										},
									},
									{
										key: '_handleOpenKeydown',
										value: function (e) {
											var t = e.keyCode;
											if (t === Hc || (38 === t && e.altKey))
												return this.close(), void this._input.focus();
											switch (t) {
												case 40:
													this._setNextOptionActive(),
														this._scrollToOption(this._activeOption);
													break;
												case 38:
													this._setPreviousOptionActive(),
														this._scrollToOption(this._activeOption);
													break;
												case 36:
													this._setFirstOptionActive(),
														this._scrollToOption(this._activeOption);
													break;
												case 35:
													this._setLastOptionActive(),
														this._scrollToOption(this._activeOption);
													break;
												case 13:
													return void (
														this._activeOption &&
														(this.hasSelectAll && 0 === this._activeOptionIndex
															? this._handleSelectAll()
															: this._handleSelection(this._activeOption))
													);
												default:
													return;
											}
											e.preventDefault();
										},
									},
									{
										key: '_handleClosedKeydown',
										value: function (e) {
											var t = e.keyCode;
											if (
												((13 === t ||
													(40 === t && e.altKey) ||
													(40 === t && this.multiple)) &&
													this.open(),
												this.multiple)
											)
												switch (t) {
													case 40:
													case 38:
														this.open();
														break;
													default:
														return;
												}
											else
												switch (t) {
													case 40:
														this._setNextOptionActive(),
															this._handleSelection(this._activeOption);
														break;
													case 38:
														this._setPreviousOptionActive(),
															this._handleSelection(this._activeOption);
														break;
													case 36:
														this._setFirstOptionActive(),
															this._handleSelection(this._activeOption);
														break;
													case 35:
														this._setLastOptionActive(),
															this._handleSelection(this._activeOption);
														break;
													default:
														return;
												}
											e.preventDefault();
										},
									},
									{
										key: '_scrollToOption',
										value: function (e) {
											var t, n, i, r, o, a;
											e &&
												((r = this.options.filter(function (e) {
													return !e.hidden;
												})),
												(a =
													(o = this.hasSelectAll
														? r.indexOf(e) + 1
														: r.indexOf(e)) +
													this._getNumberOfGroupsBeforeOption(o)),
												(n = (t = this.optionsWrapper).offsetHeight),
												(i = this._config.optionHeight),
												(r = t.scrollTop),
												-1 < o &&
													((o = r + n < (e = a * i) + i),
													(a = e < r),
													(t.scrollTop = a ? e : o ? e - n + i : r)));
										},
									},
									{
										key: '_getNumberOfGroupsBeforeOption',
										value: function (e) {
											for (
												var t = this.options.filter(function (e) {
														return !e.hidden;
													}),
													n = this._optionsToRender.filter(function (e) {
														return !e.hidden;
													}),
													i = this.hasSelectAll ? e - 1 : e,
													r = 0,
													o = 0;
												o <= i;
												o++
											)
												t[o].groupId &&
													n[r] &&
													n[r].id &&
													t[o].groupId === n[r].id &&
													r++;
											return r;
										},
									},
									{
										key: '_setNextOptionActive',
										value: function () {
											var e = this._activeOptionIndex + 1,
												t = this._getNavigationOptions();
											if (t[e]) {
												for (; t[e].disabled; ) if (!t[(e += 1)]) return;
												this._updateActiveOption(t[e], e);
											}
										},
									},
									{
										key: '_setPreviousOptionActive',
										value: function () {
											var e = this._activeOptionIndex - 1,
												t = this._getNavigationOptions();
											if (t[e]) {
												for (; t[e].disabled; ) if (!t[--e]) return;
												this._updateActiveOption(t[e], e);
											}
										},
									},
									{
										key: '_setFirstOptionActive',
										value: function () {
											var e = this._getNavigationOptions();
											this._updateActiveOption(e[0], 0);
										},
									},
									{
										key: '_setLastOptionActive',
										value: function () {
											var e = this._getNavigationOptions(),
												t = e.length - 1;
											this._updateActiveOption(e[t], t);
										},
									},
									{
										key: '_updateActiveOption',
										value: function (e, t) {
											var n = this._activeOption;
											n && n.removeActiveStyles(),
												e.setActiveStyles(),
												(this._activeOptionIndex = t),
												(this._activeOption = e);
										},
									},
									{
										key: '_listenToWrapperClick',
										value: function () {
											var e = this;
											H.on(this._wrapper, 'click', function () {
												e.toggle();
											});
										},
									},
									{
										key: '_listenToClearBtnClick',
										value: function () {
											var t = this;
											H.on(this.clearButton, 'click', function (e) {
												e.preventDefault(),
													e.stopPropagation(),
													t._handleClear();
											});
										},
									},
									{
										key: '_listenToClearBtnKeydown',
										value: function () {
											var t = this;
											H.on(this.clearButton, 'keydown', function (e) {
												13 === e.keyCode &&
													(t._handleClear(),
													e.preventDefault(),
													e.stopPropagation());
											});
										},
									},
									{
										key: '_handleClear',
										value: function () {
											var e;
											this.multiple
												? (this._selectionModel.clear(),
												  this._deselectAllOptions(this.options),
												  this.hasSelectAll && this._updateSelectAllState())
												: ((e = this._selectionModel.selection),
												  this._selectionModel.clear(),
												  e.deselect()),
												this._updateInputValue(),
												this._updateLabelPosition(),
												this._updateClearButtonVisibility(),
												this._emitValueChangeEvent(null),
												this._emitNativeChangeEvent();
										},
									},
									{
										key: '_listenToOptionsClick',
										value: function () {
											var n = this;
											H.on(this.optionsWrapper, 'click', function (e) {
												var t;
												e.target.classList.contains(
													'select-option-group-label'
												) ||
													((e =
														'DIV' === e.target.nodeName
															? e.target
															: V.closest(
																	e.target,
																	'.select-option'
															  )).classList.contains('select-all-option')
														? n._handleSelectAll()
														: ((t = e.dataset.mdbId),
														  (e = n.options.find(function (e) {
																return e.id === t;
														  })) &&
																!e.disabled &&
																n._handleSelection(e)));
											});
										},
									},
									{
										key: '_handleSelectAll',
										value: function () {
											this._selectAllOption.selected
												? (this._deselectAllOptions(this.options),
												  this._selectAllOption.deselect())
												: (this._selectAllOptions(this.options),
												  this._selectAllOption.select()),
												this._updateInputValue(),
												this._updateLabelPosition(),
												this._updateClearButtonVisibility(),
												this._emitValueChangeEvent(this.value),
												this._emitNativeChangeEvent();
										},
									},
									{
										key: '_selectAllOptions',
										value: function (e) {
											var t = this;
											e.forEach(function (e) {
												e.selected ||
													e.disabled ||
													(t._selectionModel.select(e), e.select());
											});
										},
									},
									{
										key: '_deselectAllOptions',
										value: function (e) {
											var t = this;
											e.forEach(function (e) {
												e.selected &&
													!e.disabled &&
													(t._selectionModel.deselect(e), e.deselect());
											});
										},
									},
									{
										key: '_handleSelection',
										value: function (e) {
											this.multiple
												? (this._handleMultiSelection(e),
												  this.hasSelectAll && this._updateSelectAllState())
												: this._handleSingleSelection(e),
												this._updateInputValue(),
												this._updateLabelPosition(),
												this._updateClearButtonVisibility();
										},
									},
									{
										key: '_handleSingleSelection',
										value: function (e) {
											var t = this._selectionModel.selections[0];
											t &&
												t !== e &&
												(this._selectionModel.deselect(t),
												t.deselect(),
												t.node.setAttribute('selected', !1),
												H.trigger(this._element, O_, { value: t.value })),
												(!t || (t && e !== t)) &&
													(this._selectionModel.select(e),
													e.select(),
													e.node.setAttribute('selected', !0),
													H.trigger(this._element, T_, { value: e.value }),
													this._emitValueChangeEvent(this.value),
													this._emitNativeChangeEvent()),
												this.close(),
												this._input.focus();
										},
									},
									{
										key: '_handleMultiSelection',
										value: function (e) {
											e.selected
												? (this._selectionModel.deselect(e),
												  e.deselect(),
												  e.node.setAttribute('selected', !1),
												  H.trigger(this._element, O_, { value: e.value }))
												: (this._selectionModel.select(e),
												  e.select(),
												  e.node.setAttribute('selected', !0),
												  H.trigger(this._element, T_, { value: e.value })),
												this._emitValueChangeEvent(this.value),
												this._emitNativeChangeEvent();
										},
									},
									{
										key: '_emitValueChangeEvent',
										value: function (e) {
											H.trigger(this._element, Y_, { value: e });
										},
									},
									{
										key: '_emitNativeChangeEvent',
										value: function () {
											H.trigger(this._element, 'change');
										},
									},
									{
										key: '_updateInputValue',
										value: function () {
											var e = this.multiple
													? this._selectionModel.labels
													: this._selectionModel.label,
												e =
													this.multiple &&
													-1 !== this._config.displayedLabels &&
													this._selectionModel.selections.length >
														this._config.displayedLabels
														? ''
																.concat(
																	this._selectionModel.selections.length,
																	' '
																)
																.concat(this._config.optionsSelectedLabel)
														: e;
											this._input.value = e || '';
										},
									},
									{
										key: '_updateLabelPosition',
										value: function () {
											this._label &&
												('' !== this._input.value || this._isOpen
													? F.addClass(this._label, H_)
													: F.removeClass(this._label, H_));
										},
									},
									{
										key: '_updateClearButtonVisibility',
										value: function () {
											this.clearButton &&
												(this._selectionModel.selection ||
												0 < this._selectionModel.selections.length
													? F.addStyle(this.clearButton, { display: 'block' })
													: F.addStyle(this.clearButton, { display: 'none' }));
										},
									},
									{
										key: '_updateSelectAllState',
										value: function () {
											var e = this._selectAllOption.selected,
												t = l_(this.options);
											!t && e
												? this._selectAllOption.deselect()
												: t && !e && this._selectAllOption.select();
										},
									},
									{
										key: 'toggle',
										value: function () {
											this._isOpen ? this.close() : this.open();
										},
									},
									{
										key: 'open',
										value: function () {
											var e = this,
												t = this._config.disabled,
												n = H.trigger(this._element, S_);
											this._isOpen ||
												t ||
												n.defaultPrevented ||
												(this._openDropdown(),
												this._updateDropdownWidth(),
												this._setFirstActiveOption(),
												this._scrollToOption(this._activeOption),
												this._config.filter &&
													(setTimeout(function () {
														e.filterInput.focus();
													}, 0),
													this._listenToSelectSearch(),
													this._listenToDropdownKeydown()),
												this._listenToOptionsClick(),
												this._listenToOutsideClick(),
												this._listenToWindowResize(),
												(this._isOpen = !0),
												this._updateLabelPosition(),
												this._setInputActiveStyles());
										},
									},
									{
										key: '_openDropdown',
										value: function () {
											var e = this;
											(this._popper = Nr(this._input, this._dropdownContainer, {
												placement: 'bottom-start',
											})),
												this._container.appendChild(this._dropdownContainer),
												setTimeout(function () {
													F.addClass(e.dropdown, 'open');
												}, 0);
										},
									},
									{
										key: '_updateDropdownWidth',
										value: function () {
											var e = this._input.offsetWidth;
											F.addStyle(this._dropdownContainer, {
												width: ''.concat(e, 'px'),
											});
										},
									},
									{
										key: '_setFirstActiveOption',
										value: function () {
											var e = this._getNavigationOptions(),
												t = this._activeOption;
											t && t.removeActiveStyles();
											var n = this.multiple
												? this._selectionModel.selections[0]
												: this._selectionModel.selection;
											n
												? ((this._activeOption = n).setActiveStyles(),
												  (this._activeOptionIndex = e.findIndex(function (e) {
														return e === n;
												  })))
												: ((this._activeOption = null),
												  (this._activeOptionIndex = -1));
										},
									},
									{
										key: '_setInputActiveStyles',
										value: function () {
											F.addClass(this._input, 'focused');
										},
									},
									{
										key: '_listenToWindowResize',
										value: function () {
											H.on(
												window,
												'resize',
												this._handleWindowResize.bind(this)
											);
										},
									},
									{
										key: '_handleWindowResize',
										value: function () {
											this._dropdownContainer && this._updateDropdownWidth();
										},
									},
									{
										key: '_listenToSelectSearch',
										value: function () {
											var n = this;
											this.filterInput.addEventListener('input', function (e) {
												var t = e.target.value,
													e = n._config.filterDebounce;
												n._debounceFilter(t, e);
											});
										},
									},
									{
										key: '_debounceFilter',
										value: function (e, t) {
											var n = this;
											this._debounceTimeoutId &&
												clearTimeout(this._debounceTimeoutId),
												(this._debounceTimeoutId = setTimeout(function () {
													n._filterOptions(e);
												}, t));
										},
									},
									{
										key: '_filterOptions',
										value: function (r) {
											var o = this,
												a = [];
											this._optionsToRender.forEach(function (e) {
												var t = e.hasOwnProperty('options'),
													n =
														!t &&
														e.label.toLowerCase().includes(r.toLowerCase()),
													i = {};
												t &&
													((i.label = e.label),
													(i.options = o._filter(r, e.options)),
													0 < i.options.length && a.push(i)),
													n && a.push(e);
											});
											var e = '' !== this._config.noResultText,
												t = 0 !== a.length;
											t
												? (this._updateOptionsListTemplate(a),
												  this._popper.forceUpdate(),
												  (this._filteredOptionsList =
														this._getPlainOptions(a)),
												  this.hasSelectAll && this._updateSelectAllState(),
												  this._setFirstActiveOption())
												: !t &&
												  e &&
												  ((e = this._getNoResultTemplate()),
												  (this.optionsWrapper.innerHTML = e));
										},
									},
									{
										key: '_updateOptionsListTemplate',
										value: function (e) {
											var t =
													V.findOne(E_, this._dropdownContainer) ||
													V.findOne(
														'.select-no-results',
														this._dropdownContainer
													),
												e = f_(e, this._selectAllOption, this._config);
											this.optionsWrapper.removeChild(t),
												this.optionsWrapper.appendChild(e);
										},
									},
									{
										key: '_getNoResultTemplate',
										value: function () {
											return '<div class="select-no-results" style="height: '
												.concat(this._config.optionHeight, 'px">')
												.concat(this._config.noResultText, '</div>');
										},
									},
									{
										key: '_filter',
										value: function (e, t) {
											var n = e.toLowerCase();
											return t.filter(function (e) {
												return e.label.toLowerCase().includes(n);
											});
										},
									},
									{
										key: '_listenToDropdownKeydown',
										value: function () {
											H.on(
												this.dropdown,
												'keydown',
												this._handleOpenKeydown.bind(this)
											);
										},
									},
									{
										key: '_listenToOutsideClick',
										value: function () {
											H.on(
												document,
												'click',
												this._handleOutSideClick.bind(this)
											);
										},
									},
									{
										key: '_handleOutSideClick',
										value: function (e) {
											var t = this._wrapper && this._wrapper.contains(e.target),
												n = e.target === this._dropdownContainer,
												e =
													this._dropdownContainer &&
													this._dropdownContainer.contains(e.target);
											t || n || e || this.close();
										},
									},
									{
										key: 'close',
										value: function () {
											var e = this,
												t = H.trigger(this._element, D_);
											this._isOpen &&
												!t.defaultPrevented &&
												(this._config.filter &&
													(this._resetFilterState(),
													this._updateOptionsListTemplate(
														this._optionsToRender
													)),
												this._removeDropdownEvents(),
												F.removeClass(this.dropdown, 'open'),
												setTimeout(function () {
													F.removeClass(e._input, 'focused'),
														e._label &&
															!e.hasSelection &&
															(F.removeClass(e._label, H_),
															F.removeClass(e._input, H_));
												}, 0),
												setTimeout(function () {
													e._container &&
														e._dropdownContainer.parentNode === e._container &&
														e._container.removeChild(e._dropdownContainer),
														e._popper.destroy(),
														(e._isOpen = !1),
														H.off(e.dropdown, 'transitionend');
												}, 200));
										},
									},
									{
										key: '_resetFilterState',
										value: function () {
											(this.filterInput.value = ''),
												(this._filteredOptionsList = null);
										},
									},
									{
										key: '_removeDropdownEvents',
										value: function () {
											H.off(
												document,
												'click',
												this._handleOutSideClick.bind(this)
											),
												this._config.filter && H.off(this.dropdown, 'keydown'),
												H.off(this.optionsWrapper, 'click');
										},
									},
									{
										key: '_addMutationObserver',
										value: function () {
											var e = this;
											(this._mutationObserver = new MutationObserver(
												function () {
													e._wrapper &&
														(e._updateSelections(), e._updateDisabledState());
												}
											)),
												this._observeMutationObserver();
										},
									},
									{
										key: '_updateSelections',
										value: function () {
											(this._optionsToRender = this._getOptionsToRender(
												this._element
											)),
												(this._plainOptions = this._getPlainOptions(
													this._optionsToRender
												)),
												this._selectionModel.clear(),
												this._setDefaultSelections(),
												this._updateInputValue(),
												this._updateLabelPosition(),
												this._updateClearButtonVisibility(),
												this.hasSelectAll && this._updateSelectAllState();
											var e =
												this._config.filter &&
												this.filterInput &&
												this.filterInput.value;
											this._isOpen && !e
												? (this._updateOptionsListTemplate(
														this._optionsToRender
												  ),
												  this._setFirstActiveOption())
												: this._isOpen && e
												? (this._filterOptions(this.filterInput.value),
												  this._setFirstActiveOption())
												: (this._dropdownContainer = d_(
														this._dropdownContainerId,
														this._config,
														this._input.offsetWidth,
														this._dropdownHeight,
														this._selectAllOption,
														this._optionsToRender,
														this._customContent
												  ));
										},
									},
									{
										key: '_updateDisabledState',
										value: function () {
											var e = V.findOne(j_, this._wrapper);
											this._element.hasAttribute('disabled')
												? ((this._config.disabled = !0),
												  e.setAttribute('disabled', ''))
												: ((this._config.disabled = !1),
												  e.removeAttribute('disabled'));
										},
									},
									{
										key: '_observeMutationObserver',
										value: function () {
											this._mutationObserver &&
												this._mutationObserver.observe(this._element, {
													attributes: !0,
													childList: !0,
													characterData: !0,
													subtree: !0,
												});
										},
									},
									{
										key: '_disconnectMutationObserver',
										value: function () {
											this.mutationObserver &&
												(this._mutationObserver.disconnect(),
												(this._mutationObserver = null));
										},
									},
									{
										key: '_createSelectAllOption',
										value: function () {
											var e = this._selectAllId,
												t = this._config.selectAllLabel,
												n = l_(this.options);
											return new o_(
												e,
												null,
												!0,
												'select-all',
												t,
												n,
												!1,
												!1,
												null,
												null,
												null
											);
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._removeComponentEvents(),
												this._destroyMaterialSelect(),
												m.removeData(this._element, x_);
										},
									},
									{
										key: '_removeComponentEvents',
										value: function () {
											H.off(this.input, 'click'),
												H.off(this.wrapper, this._handleKeydown.bind(this)),
												H.off(this.clearButton, 'click'),
												H.off(this.clearButton, 'keydown'),
												H.off(
													window,
													'resize',
													this._handleWindowResize.bind(this)
												);
										},
									},
									{
										key: '_destroyMaterialSelect',
										value: function () {
											this._isOpen && this.close(),
												this._destroyMaterialTemplate();
										},
									},
									{
										key: '_destroyMaterialTemplate',
										value: function () {
											var e = this._wrapper.parentNode;
											e.appendChild(this._element),
												F.removeClass(this._element, A_),
												e.removeChild(this._wrapper);
										},
									},
									{
										key: 'setValue',
										value: function (e) {
											var t = this;
											this.options
												.filter(function (e) {
													return e.selected;
												})
												.forEach(function (e) {
													return (e.nativeOption.selected = !1);
												}),
												Array.isArray(e)
													? e.forEach(function (e) {
															return t._selectByValue(e);
													  })
													: this._selectByValue(e),
												this._updateSelections();
										},
									},
									{
										key: '_selectByValue',
										value: function (t) {
											this.options.find(function (e) {
												return e.value === t;
											}).nativeOption.selected = !0;
										},
									},
									{
										key: 'filterInput',
										get: function () {
											return V.findOne(
												'.select-filter-input',
												this._dropdownContainer
											);
										},
									},
									{
										key: 'dropdown',
										get: function () {
											return V.findOne(
												'.select-dropdown',
												this._dropdownContainer
											);
										},
									},
									{
										key: 'optionsList',
										get: function () {
											return V.findOne(E_, this._dropdownContainer);
										},
									},
									{
										key: 'optionsWrapper',
										get: function () {
											return V.findOne(
												'.select-options-wrapper',
												this._dropdownContainer
											);
										},
									},
									{
										key: 'clearButton',
										get: function () {
											return V.findOne('.select-clear-btn', this._wrapper);
										},
									},
									{
										key: 'options',
										get: function () {
											return this._filteredOptionsList || this._plainOptions;
										},
									},
									{
										key: 'value',
										get: function () {
											return this.multiple
												? this._selectionModel.values
												: this._selectionModel.value;
										},
									},
									{
										key: 'multiple',
										get: function () {
											return this._config.multiple;
										},
									},
									{
										key: 'hasSelectAll',
										get: function () {
											return this.multiple && this._config.selectAll;
										},
									},
									{
										key: 'hasSelection',
										get: function () {
											return (
												this._selectionModel.selection ||
												0 < this._selectionModel.selections.length
											);
										},
									},
								]) && k_(e.prototype, t),
								n && k_(e, n),
								r
							);
						})(),
						R_ = I_,
						N_ = r();
					function W_(e) {
						return (W_ =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function F_(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							z_(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function B_(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return V_(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							z_(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function z_(e, t) {
						if (e) {
							if ('string' == typeof e) return V_(e, t);
							var n = Object.prototype.toString.call(e).slice(8, -1);
							return (
								'Object' === n && e.constructor && (n = e.constructor.name),
								'Map' === n || 'Set' === n
									? Array.from(e)
									: 'Arguments' === n ||
									  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
									? V_(e, t)
									: void 0
							);
						}
					}
					function V_(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function U_(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function X_(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? U_(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: U_(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function J_(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					V.find('.select').forEach(function (e) {
						I_.getInstance(e) || new I_(e);
					}),
						l(function () {
							var e;
							N_ &&
								((e = N_.fn[L_]),
								(N_.fn[L_] = I_.jQueryInterface),
								(N_.fn[L_].Constructor = I_),
								(N_.fn[L_].noConflict = function () {
									return (N_.fn[L_] = e), I_.jQueryInterface;
								}));
						});
					var q_ = 'datatable',
						K_ = 'mdb.datatable',
						G_ = 'datatable',
						Q_ = 'fixed-cell',
						$_ = '.datatable-sort-icon',
						Z_ = '.datatable-body tr',
						ev = '.datatable-row-checkbox',
						tv = 'render.mdb.datatable',
						nv = {
							bordered: 'boolean',
							borderless: 'boolean',
							borderColor: '(string|null)',
							clickableRows: 'boolean',
							color: '(string|null)',
							defaultValue: 'string',
							edit: 'boolean',
							entries: 'number',
							entriesOptions: 'array',
							fullPagination: 'boolean',
							hover: 'boolean',
							loading: 'boolean',
							loadingMessage: 'string',
							maxWidth: '(null|number|string)',
							maxHeight: '(null|number|string)',
							multi: 'boolean',
							noFoundMessage: 'string',
							pagination: 'boolean',
							selectable: 'boolean',
							sm: 'boolean',
							sortField: '(null|string)',
							sortOrder: 'string',
							loaderClass: 'string',
							fixedHeader: 'boolean',
							striped: 'boolean',
							rowsText: 'string',
						},
						iv = {
							label: 'string',
							field: 'string',
							fixed: '(boolean|string)',
							format: '(function|null)',
							width: '(number|null)',
							sort: 'boolean',
							columnIndex: 'number',
						},
						rv = {
							bordered: !1,
							borderless: !1,
							borderColor: null,
							clickableRows: !1,
							color: null,
							dark: !1,
							defaultValue: '-',
							edit: !1,
							entries: 10,
							entriesOptions: [10, 25, 50, 200],
							fixedHeader: !1,
							fullPagination: !1,
							hover: !1,
							loaderClass: 'bg-primary',
							loading: !1,
							loadingMessage: 'Loading results...',
							maxWidth: null,
							maxHeight: null,
							multi: !1,
							noFoundMessage: 'No matching results found',
							pagination: !0,
							selectable: !1,
							sm: !1,
							sortField: null,
							sortOrder: 'asc',
							striped: !1,
							rowsText: 'Rows per page:',
						},
						ov = {
							label: '',
							field: '',
							fixed: !1,
							format: null,
							width: null,
							sort: !0,
							columnIndex: 0,
						},
						av = (function () {
							function o(e) {
								var t =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {},
									n =
										2 < arguments.length && void 0 !== arguments[2]
											? arguments[2]
											: {};
								!(function (e) {
									if (!(e instanceof o))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getOptions(n)),
									(this._sortField = this._options.sortField),
									(this._sortOrder = this._options.sortOrder),
									(this._sortReverse = !1),
									(this._activePage = 0),
									(this._search = ''),
									(this._searchColumn = null),
									(this._paginationLeft = null),
									(this._paginationRight = null),
									(this._paginationStart = null),
									(this._paginationEnd = null),
									(this._select = null),
									(this._selectInstance = null),
									(this._selected = []),
									(this._checkboxes = null),
									(this._headerCheckbox = null),
									(this._rows = this._getRows(t.rows)),
									(this._columns = this._getColumns(t.columns)),
									this._element &&
										(m.setData(e, K_, this),
										(this._perfectScrollbar = null),
										this._setup());
							}
							var e, t, n;
							return (
								(e = o),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i, r) {
											return this.each(function () {
												var e = m.getData(this, K_),
													t = 'object' === W_(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new o(this, t, i)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i, r);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, K_);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return q_;
										},
									},
								]),
								(t = [
									{
										key: 'update',
										value: function (e, t) {
											t = 1 < arguments.length && void 0 !== t ? t : {};
											e && e.rows && (this._rows = e.rows),
												e && e.columns && (this._columns = e.columns),
												this._clearClassList(t),
												(this._options = this._getOptions(
													X_(X_({}, this._options), t)
												)),
												this._setup();
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._selectInstance && this._selectInstance.dispose(),
												m.removeData(this._element, K_),
												this._removeEventListeners(),
												this._perfectScrollbar.destroy(),
												(this._element = null);
										},
									},
									{
										key: 'search',
										value: function (e, t) {
											(this._search = e),
												(this._searchColumn = t),
												(this._activePage = 0),
												this._toggleDisableState(),
												this._renderRows();
										},
									},
									{
										key: 'sort',
										value: function (t, e) {
											e = 1 < arguments.length && void 0 !== e ? e : 'asc';
											(this._sortOrder = e),
												(this._sortField = (
													'string' == typeof t
														? this.columns.find(function (e) {
																return e.label === t;
														  })
														: t
												).field);
											e = V.findOne(
												'i[data-mdb-sort="'.concat(this._sortField, '"]'),
												this._element
											);
											(this._activePage = 0),
												this._toggleDisableState(),
												this._renderRows(),
												this._setActiveSortIcon(e);
										},
									},
									{
										key: '_changeActivePage',
										value: function (e) {
											(this._activePage = e),
												this._toggleDisableState(),
												this._renderRows();
										},
									},
									{
										key: '_clearClassList',
										value: function (t) {
											var n = this;
											this._options.color &&
												t.color &&
												F.removeClass(this._element, this._options.color),
												this._options.borderColor &&
													t.borderColor &&
													F.removeClass(
														this._element,
														'border-'.concat(this._options.borderColor)
													),
												[
													'dark',
													'hover',
													'bordered',
													'borderless',
													'sm',
													'striped',
													'loading',
												].forEach(function (e) {
													n._options[e] &&
														!t[e] &&
														F.removeClass(n._element, 'datatable-'.concat(e));
												});
										},
									},
									{
										key: '_emitSelectEvent',
										value: function () {
											var t = this;
											H.trigger(this._element, 'selectRows.mdb.datatable', {
												selectedRows: this.rows.filter(function (e) {
													return -1 !== t._selected.indexOf(e.rowIndex);
												}),
												selectedIndexes: this._selected,
												allSelected: this._selected.length === this.rows.length,
											});
										},
									},
									{
										key: '_getRows',
										value: function (e) {
											var t = 0 < arguments.length && void 0 !== e ? e : [],
												e = V.findOne('tbody', this._element);
											if (!e) return t;
											e = V.find('tr', e).map(function (e) {
												return V.find('td', e).map(function (e) {
													return e.innerHTML;
												});
											});
											return [].concat(B_(e), B_(t));
										},
									},
									{
										key: '_getColumns',
										value: function (e) {
											var t = 0 < arguments.length && void 0 !== e ? e : [],
												e = V.findOne('thead', this._element);
											if (!e) return t;
											(e = V.findOne('tr', e)),
												(e = V.find('th', e).map(function (e) {
													return X_(
														{ label: e.innerHTML },
														F.getDataAttributes(e)
													);
												}));
											return [].concat(B_(e), B_(t));
										},
									},
									{
										key: '_getCSSValue',
										value: function (e) {
											return 'string' == typeof e ? e : ''.concat(e, 'px');
										},
									},
									{
										key: '_getOptions',
										value: function (e) {
											e = X_(
												X_(X_({}, rv), F.getDataAttributes(this._element)),
												e
											);
											return s(q_, e, nv), e;
										},
									},
									{
										key: '_setActiveRows',
										value: function () {
											var t = this;
											V.find(Z_, this._element).forEach(function (e) {
												t._selected.includes(F.getDataAttribute(e, 'index'))
													? F.addClass(e, 'active')
													: F.removeClass(e, 'active');
											});
										},
									},
									{
										key: '_setEntries',
										value: function (e) {
											(this._options = this._getOptions(
												X_(
													X_({}, this._options),
													{},
													{ entries: Number(e.target.value) }
												)
											)),
												this._activePage > this.pages - 1 &&
													(this._activePage = this.pages - 1),
												this._toggleDisableState(),
												this._renderRows();
										},
									},
									{
										key: '_setSelected',
										value: function () {
											var n = this;
											V.find(ev, this._element).forEach(function (e) {
												var t = F.getDataAttribute(e, 'rowIndex');
												e.checked = n._selected.includes(t);
											}),
												this._setActiveRows();
										},
									},
									{
										key: '_setActiveSortIcon',
										value: function (n) {
											var i = this;
											V.find($_, this._element).forEach(function (e) {
												var t = 'desc' === i._sortOrder && e === n ? 180 : 0;
												F.style(e, { transform: 'rotate('.concat(t, 'deg)') }),
													e === n && i._sortOrder
														? F.addClass(e, 'active')
														: F.removeClass(e, 'active');
											});
										},
									},
									{
										key: '_setClassNames',
										value: function () {
											var t = this;
											this.classNames.forEach(function (e) {
												F.addClass(t._element, e);
											});
										},
									},
									{
										key: '_setup',
										value: function () {
											this._setClassNames(),
												this._renderTable(),
												this._options.pagination && this._setupPagination(),
												this._options.edit && this._setupEditable(),
												this._options.clickableRows &&
													this._setupClickableRows(),
												this._options.selectable && this._setupSelectable(),
												this._setupScroll(),
												this._setupSort();
										},
									},
									{
										key: '_setupClickableRows',
										value: function () {
											var n = this;
											V.find(Z_, this._element).forEach(function (e) {
												var t = F.getDataAttribute(e, 'index');
												H.on(e, 'click', function (e) {
													V.matches(e.target, ev) ||
														H.trigger(n._element, 'rowClick.mdb.datatable', {
															index: t,
															row: n.rows[t],
														});
												});
											});
										},
									},
									{
										key: '_setupEditable',
										value: function () {
											var n = this;
											V.find(Z_, this._element).forEach(function (e) {
												var t = F.getDataAttribute(e, 'index');
												V.find('td', e).forEach(function (e) {
													H.on(e, 'input', function (e) {
														return n._updateRow(e, t);
													});
												});
											});
										},
									},
									{
										key: '_setupScroll',
										value: function () {
											var e,
												n = this,
												t = V.findOne('.datatable-inner', this._element),
												i = { overflow: 'auto', position: 'relative' };
											this._options.maxHeight &&
												(i.maxHeight = this._getCSSValue(
													this._options.maxHeight
												)),
												this._options.maxWidth &&
													((e = this._getCSSValue(this._options.maxWidth)),
													(i.maxWidth = e),
													F.style(this._element, { maxWidth: e })),
												F.style(t, i),
												this._options.fixedHeader &&
													((i = V.find('.datatable-header th', this._element)),
													this._options.selectable &&
														(i = i.filter(function (e, t) {
															return (
																F.addClass(e, Q_),
																n._options.color &&
																	F.addClass(e, n._options.color),
																0 !== t
															);
														})),
													i.forEach(function (e, t) {
														F.addClass(e, Q_),
															n.columns[t].fixed &&
																F.addStyle(e, { zIndex: 4 }),
															n._options.color &&
																F.addClass(e, n._options.color);
													})),
												(this._perfectScrollbar = new qm(t));
										},
									},
									{
										key: '_setupSort',
										value: function () {
											var i = this;
											V.find($_, this._element).forEach(function (e) {
												var t = F.getDataAttribute(e, 'sort'),
													n = F_(V.parents(e, 'th'), 1)[0];
												F.style(n, { cursor: 'pointer' }),
													t === i._options.sortField && i._setActiveSortIcon(e),
													H.on(n, 'click', function () {
														i._sortField === t && 'asc' === i._sortOrder
															? (i._sortOrder = 'desc')
															: i._sortField === t && 'desc' === i._sortOrder
															? (i._sortOrder = null)
															: (i._sortOrder = 'asc'),
															(i._sortField = t),
															(i._activePage = 0),
															i._toggleDisableState(),
															i._renderRows(),
															i._setActiveSortIcon(e);
													});
											});
										},
									},
									{
										key: '_setupSelectable',
										value: function () {
											var n = this;
											(this._checkboxes = V.find(ev, this._element)),
												(this._headerCheckbox = V.findOne(
													'.datatable-header-checkbox',
													this._element
												)),
												H.on(this._headerCheckbox, 'input', function (e) {
													return n._toggleSelectAll(e);
												}),
												this._checkboxes.forEach(function (e) {
													var t = F.getDataAttribute(e, 'rowIndex');
													H.on(e, 'input', function (e) {
														return n._toggleSelectRow(e, t);
													});
												});
										},
									},
									{
										key: '_setupPagination',
										value: function () {
											var e = this;
											(this._paginationRight = V.findOne(
												'.datatable-pagination-right',
												this._element
											)),
												(this._paginationLeft = V.findOne(
													'.datatable-pagination-left',
													this._element
												)),
												H.on(this._paginationRight, 'click', function () {
													return e._changeActivePage(e._activePage + 1);
												}),
												H.on(this._paginationLeft, 'click', function () {
													return e._changeActivePage(e._activePage - 1);
												}),
												this._options.fullPagination &&
													((this._paginationStart = V.findOne(
														'.datatable-pagination-start',
														this._element
													)),
													(this._paginationEnd = V.findOne(
														'.datatable-pagination-end',
														this._element
													)),
													H.on(this._paginationStart, 'click', function () {
														return e._changeActivePage(0);
													}),
													H.on(this._paginationEnd, 'click', function () {
														return e._changeActivePage(e.pages - 1);
													})),
												this._toggleDisableState(),
												this._setupPaginationSelect();
										},
									},
									{
										key: '_setupPaginationSelect',
										value: function () {
											var t = this;
											(this._select = V.findOne(
												'.datatable-select',
												this._element
											)),
												this._selectInstance && this._selectInstance.dispose(),
												(this._selectInstance = new R_(this._select)),
												H.on(
													this._select,
													'valueChange.mdb.select',
													function (e) {
														return t._setEntries(e);
													}
												);
										},
									},
									{
										key: '_removeEventListeners',
										value: function () {
											this._options.pagination &&
												(H.off(this._paginationRight, 'click'),
												H.off(this._paginationLeft, 'click'),
												H.off(this._select, 'valueChange.mdb.select'),
												this._options.fullPagination &&
													(H.off(this._paginationStart, 'click'),
													H.off(this._paginationEnd, 'click'))),
												this._options.editable &&
													V.find('td', this._element).forEach(function (e) {
														H.off(e, 'input');
													}),
												this._options.clickableRows &&
													V.find(Z_, this._element).forEach(function (e) {
														H.off(e, 'click');
													}),
												V.find($_, this._element).forEach(function (e) {
													e = F_(V.parents(e, 'th'), 1)[0];
													H.off(e, 'click');
												}),
												this._options.selectable &&
													(H.off(this._headerCheckbox, 'input'),
													this._checkboxes.forEach(function (e) {
														H.off(e, 'input');
													}));
										},
									},
									{
										key: '_renderTable',
										value: function () {
											(this._element.innerHTML = t_(this.tableOptions).table),
												this._formatCells(),
												H.trigger(this._element, tv);
										},
									},
									{
										key: '_renderRows',
										value: function () {
											var e = V.findOne('tbody', this._element);
											this._options.pagination &&
												(V.findOne(
													'.datatable-pagination-nav',
													this._element
												).innerText = this.navigationText),
												(e.innerHTML = t_(this.tableOptions).rows),
												this._formatCells(),
												this._options.edit && this._setupEditable(),
												this._options.selectable &&
													(this._setupSelectable(), this._setSelected()),
												this._options.clickableRows &&
													this._setupClickableRows(),
												H.trigger(this._element, tv);
										},
									},
									{
										key: '_formatCells',
										value: function () {
											var r = this;
											V.find(Z_, this._element).forEach(function (e) {
												var i = F.getDataAttribute(e, 'index');
												V.find('td', e).forEach(function (e) {
													var t = F.getDataAttribute(e, 'field'),
														n = r.columns.find(function (e) {
															return e.field === t;
														});
													n && null !== n.format && n.format(e, r.rows[i][t]);
												});
											});
										},
									},
									{
										key: '_toggleDisableState',
										value: function () {
											!1 !== this._options.pagination &&
												(0 === this._activePage || this._options.loading
													? (this._paginationLeft.setAttribute('disabled', !0),
													  this._options.fullPagination &&
															this._paginationStart.setAttribute(
																'disabled',
																!0
															))
													: (this._paginationLeft.removeAttribute('disabled'),
													  this._options.fullPagination &&
															this._paginationStart.removeAttribute(
																'disabled'
															)),
												this._activePage === this.pages - 1 ||
												this._options.loading
													? (this._paginationRight.setAttribute('disabled', !0),
													  this._options.fullPagination &&
															this._paginationEnd.setAttribute('disabled', !0))
													: (this._paginationRight.removeAttribute('disabled'),
													  this._options.fullPagination &&
															this._paginationEnd.removeAttribute('disabled')));
										},
									},
									{
										key: '_toggleSelectAll',
										value: function (e) {
											e.target.checked
												? (this._selected = this.rows.map(function (e) {
														return e.rowIndex;
												  }))
												: (this._selected = []),
												this._setSelected(),
												this._emitSelectEvent();
										},
									},
									{
										key: '_toggleSelectRow',
										value: function (t, n) {
											t.target.checked
												? this._options.multi && !this._selected.includes(n)
													? (this._selected = [].concat(B_(this._selected), [
															n,
													  ]))
													: ((this._selected = [n]),
													  this._checkboxes.forEach(function (e) {
															e !== t.target && (e.checked = !1);
													  }))
												: (this._selected = this._selected.filter(function (e) {
														return e !== n;
												  })),
												this._setActiveRows(),
												this._emitSelectEvent();
										},
									},
									{
										key: '_updateRow',
										value: function (e, t) {
											var n = F.getDataAttribute(e.target, 'field'),
												e = e.target.textContent,
												t = this._rows[t];
											Array.isArray(t)
												? (t[
														this.columns.find(function (e) {
															return e.field === n;
														}).columnIndex
												  ] = e)
												: (t[n] = e),
												H.trigger(this._element, 'update.mdb.datatable', {
													rows: this._rows,
													columns: this._columns,
												});
										},
									},
									{
										key: 'columns',
										get: function () {
											return this._columns.map(function (e, t) {
												t = X_(
													X_({}, ov),
													{},
													{ field: 'field_'.concat(t), columnIndex: t }
												);
												return (
													'string' == typeof e
														? (t.label = e)
														: 'object' === W_(e) && (t = X_(X_({}, t), e)),
													s('column', t, iv),
													t
												);
											});
										},
									},
									{
										key: 'rows',
										get: function () {
											var r = this;
											return this._rows.map(function (n, e) {
												var i = { rowIndex: e };
												return (
													Array.isArray(n)
														? r.columns.forEach(function (e, t) {
																i[e.field] = n[t] || r._options.defaultValue;
														  })
														: 'object' === W_(n) &&
														  r.columns.forEach(function (e) {
																i[e.field] =
																	n[e.field] || r._options.defaultValue;
														  }),
													i
												);
											});
										},
									},
									{
										key: 'searchResult',
										get: function () {
											return $m(this.rows, this._search, this._searchColumn);
										},
									},
									{
										key: 'computedRows',
										get: function () {
											var n,
												i,
												e,
												t,
												r,
												o = B_(this.searchResult);
											return (
												this._sortOrder &&
													((t = {
														rows: o,
														field: this._sortField,
														order: this._sortOrder,
													}),
													(r = t.rows),
													(n = t.field),
													(i = t.order),
													(o = r.sort(function (e, t) {
														(e = e[n]), (t = t[n]);
														return e < t
															? 'desc' === i
																? 1
																: -1
															: t < e
															? 'desc' === i
																? -1
																: 1
															: 0;
													}))),
												this._options.pagination &&
													((e = {
														rows: o,
														entries: this._options.entries,
														activePage: this._activePage,
													}),
													(t = e.rows),
													(r = e.entries),
													(e = e.activePage * r),
													(o = t.slice(e, e + r))),
												o
											);
										},
									},
									{
										key: 'pages',
										get: function () {
											return Math.ceil(
												this.rows.length / this._options.entries
											);
										},
									},
									{
										key: 'navigationText',
										get: function () {
											var e = this._activePage * this._options.entries;
											return ''
												.concat(1 + e, ' - ')
												.concat(this.computedRows.length + e, ' of ')
												.concat(this.searchResult.length);
										},
									},
									{
										key: 'classNames',
										get: function () {
											return [
												G_,
												this._options.color,
												this._options.borderColor &&
													'border-'.concat(this._options.borderColor),
												this._options.dark && 'datatable-dark',
												this._options.hover && 'datatable-hover',
												this._options.bordered && 'datatable-bordered',
												this._options.borderless && 'datatable-borderless',
												this._options.sm && 'datatable-sm',
												this._options.striped && 'datatable-striped',
												this._options.loading && 'datatable-loading',
												this._options.clickableRows &&
													'datatable-clickable-rows',
											].filter(function (e) {
												return e;
											});
										},
									},
									{
										key: 'tableOptions',
										get: function () {
											return {
												columns: this.columns,
												rows: this.computedRows,
												noFoundMessage: this._options.noFoundMessage,
												edit: this._options.edit,
												loading: this._options.loading,
												loaderClass: this._options.loaderClass,
												loadingMessage: this._options.loadingMessage,
												selectable: this._options.selectable,
												multi: this._options.multi,
												pagination: {
													enable: this._options.pagination,
													text: this.navigationText,
													entries: this._options.entries,
													entriesOptions: this._options.entriesOptions,
													fullPagination: this._options.fullPagination,
													rowsText: this._options.rowsText,
												},
											};
										},
									},
								]) && J_(e.prototype, t),
								n && J_(e, n),
								o
							);
						})();
					V.find('.datatable').forEach(function (e) {
						return av.getInstance(e) || new av(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[q_]),
								(t.fn[q_] = av.jQueryInterface),
								(t.fn[q_].Constructor = av),
								(t.fn[q_].noConflict = function () {
									return (t.fn[q_] = e), av.jQueryInterface;
								}));
						});
					var sv = av;
					function lv(e) {
						return (lv =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function uv(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function cv(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? uv(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: uv(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function dv(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var fv = 'stepper',
						hv = 'mdb.stepper',
						t = '.'.concat(hv),
						pv = 'horizontal',
						mv = 'vertical',
						_v = 'mobile',
						vv = {
							stepperType: 'string',
							stepperLinear: 'boolean',
							stepperNoEditable: 'boolean',
							stepperActive: 'string',
							stepperCompleted: 'string',
							stepperInvalid: 'string',
							stepperDisabled: 'string',
							stepperVerticalBreakpoint: 'number',
							stepperMobileBreakpoint: 'number',
							stepperMobileBarBreakpoint: 'number',
						},
						yv = {
							stepperType: pv,
							stepperLinear: !1,
							stepperNoEditable: !1,
							stepperActive: '',
							stepperCompleted: '',
							stepperInvalid: '',
							stepperDisabled: '',
							stepperVerticalBreakpoint: 0,
							stepperMobileBreakpoint: 0,
							stepperMobileBarBreakpoint: 4,
						},
						gv = 'mousedown'.concat(t),
						bv = 'submit'.concat(t),
						kv = 'keydown'.concat(t),
						wv = 'keyup'.concat(t),
						Mv = 'resize'.concat(t),
						Lv = 'click'.concat(t),
						xv = 'animationend',
						Dv = 'onChangeStep'.concat(t),
						Sv = 'onInvalid'.concat(t),
						Tv = 'onValid'.concat(t),
						Ov = ''.concat(fv, '-step'),
						Yv = ''.concat(fv, '-head'),
						Cv = ''.concat(fv, '-head-text'),
						jv = ''.concat(fv, '-content'),
						Ev = ''.concat(fv, '-active'),
						Pv = ''.concat(fv, '-completed'),
						Av = ''.concat(fv, '-invalid'),
						Hv = ''.concat(fv, '-disabled'),
						Iv = ''.concat(fv, '-').concat(mv),
						Rv = ''.concat(fv, '-content-hide'),
						Nv = ''.concat(fv, '-').concat(pv),
						Wv = ''.concat(fv, '-').concat(_v),
						Fv = ''.concat(fv, '-').concat(_v, '-head'),
						Bv = ''.concat(fv, '-').concat(_v, '-footer'),
						zv = ''.concat(fv, '-').concat(_v, '-progress-bar'),
						Ve = ''.concat(fv, '-').concat(_v, '-progress'),
						Vv = ''.concat(fv, '-next-btn'),
						Uv = ''.concat(fv, '-back-btn'),
						Xv = ''.concat(fv, '-active-step'),
						Jv = ''.concat(fv, '-all-steps'),
						qv = '\n  <div class="'.concat(
							Vv,
							'">\n    <button class="btn btn-link">\n      NEXT\n      <i class="fas fa-chevron-right"></i>\n    </button>\n  </div>\n'
						),
						Kv = '\n  <div class="'.concat(
							Uv,
							'">\n    <button class="btn btn-link">\n      <i class="fas fa-chevron-left"></i>\n      BACK\n    </button>\n  </div>\n'
						),
						Gv = '\n  <div class ="'
							.concat(Fv, ' bg-light">\n    step <span id="')
							.concat(Xv, '"></span> of <span id="')
							.concat(Jv, '"></span>\n  </div>\n'),
						Qv = '\n  <div class="'
							.concat(Ve, ' gray-500">\n    <div class="')
							.concat(zv, ' bg-primary"></div>\n  </div>\n'),
						$v = '\n  <div class="'.concat(Bv, ' bg-light"></div>\n'),
						Zv = (function () {
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t)),
									(this._elementHeight = 0),
									(this._steps = V.find('.'.concat(Ov), this._element)),
									(this._currentView = ''),
									(this._activeStepIndex = 0),
									(this._verticalStepperStyles = []),
									this._element && (m.setData(e, hv, this), this._init());
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, hv),
													t = 'object' === lv(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, hv);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return fv;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											this._steps.forEach(function (e) {
												H.off(e, gv), H.off(e, kv);
											}),
												H.off(window, Mv),
												m.removeData(this._element, hv),
												(this._element = null);
										},
									},
									{
										key: 'changeStep',
										value: function (e) {
											this._toggleStep(e);
										},
									},
									{
										key: 'nextStep',
										value: function () {
											this._toggleStep(this._activeStepIndex + 1);
										},
									},
									{
										key: 'previousStep',
										value: function () {
											this._toggleStep(this._activeStepIndex - 1);
										},
									},
									{
										key: '_init',
										value: function () {
											var e = V.findOne('.'.concat(Ev), this._element);
											switch (
												(e
													? (this._activeStepIndex = this._steps.indexOf(e))
													: this._toggleStepClass(
															this._activeStepIndex,
															'add',
															Ev
													  ),
												this._toggleStepClass(
													this._activeStepIndex,
													'add',
													this._options.stepperActive
												),
												this._setOptional(),
												this._bindMouseDown(),
												this._bindKeysNavigation(),
												this._options.stepperType)
											) {
												case mv:
													this._toggleVertical();
													break;
												case _v:
													this._toggleMobile();
													break;
												default:
													this._toggleHorizontal();
											}
											(this._options.stepperVerticalBreakpoint ||
												this._options.stepperMobileBreakpoint) &&
												this._toggleStepperView(),
												this._options.stepperLinear && this._setValidation(),
												this._bindResize();
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._element);
											return (e = cv(cv(cv({}, yv), t), e)), s(fv, e, vv), e;
										},
									},
									{
										key: '_bindMouseDown',
										value: function () {
											var n = this;
											this._steps.forEach(function (e) {
												e = V.findOne('.'.concat(Yv), e);
												H.on(e, gv, function (e) {
													var t = V.parents(e.target, '.'.concat(Ov))[0],
														t = n._steps.indexOf(t);
													e.preventDefault(), n._toggleStep(t);
												});
											});
										},
									},
									{
										key: '_bindResize',
										value: function () {
											var e = this;
											H.on(window, Mv, function () {
												e._currentView === mv &&
													e._setSingleStepHeight(e.activeStep),
													e._currentView === pv && e._setHeight(e.activeStep),
													(e._options.stepperVerticalBreakpoint ||
														e._options.stepperMobileBreakpoint) &&
														e._toggleStepperView();
											});
										},
									},
									{
										key: '_toggleStepperView',
										value: function () {
											var t = this,
												e =
													this._options.stepperVerticalBreakpoint <
													window.innerWidth,
												n =
													this._options.stepperVerticalBreakpoint >
													window.innerWidth,
												i =
													this._options.stepperMobileBreakpoint >
													window.innerWidth;
											e && this._currentView !== pv && this._toggleHorizontal(),
												n &&
													!i &&
													this._currentView !== mv &&
													(this._steps.forEach(function (e) {
														e = V.findOne('.'.concat(jv), e);
														t._resetStepperHeight(), t._showElement(e);
													}),
													this._toggleVertical()),
												i && this._currentView !== _v && this._toggleMobile();
										},
									},
									{
										key: '_toggleStep',
										value: function (e) {
											var t = this._steps.length;
											this._validateStep(e) &&
												(this._options.stepperLinear &&
													H.trigger(this.activeStep, Tv),
												this._options.stepperNoEditable &&
													this._toggleDisabled(),
												this._showElement(
													V.findOne('.'.concat(jv), this._steps[e])
												),
												this._toggleActive(e),
												(!this._options.stepperLinear ||
													e > this._activeStepIndex) &&
													this._toggleCompleted(this._activeStepIndex),
												this._currentView === pv || this._currentView === _v
													? this._animateHorizontalStep(e)
													: (this._animateVerticalStep(e),
													  this._setSingleStepHeight(this._steps[e])),
												this._toggleStepTabIndex(
													V.findOne('.'.concat(Yv), this.activeStep),
													V.findOne('.'.concat(Yv), this._steps[e])
												),
												(this._activeStepIndex = e),
												this._currentView === _v &&
													((V.findOne(
														'#'.concat(Xv),
														this._element
													).textContent = this._activeStepIndex + 1),
													t > this._options.stepperMobileBarBreakpoint &&
														this._updateProgressBar()),
												(e = this.activeStep.querySelectorAll('.form-outline')),
												(t = V.find('.form-notch', e[0])),
												e.length &&
													t.length < 1 &&
													e.forEach(function (e) {
														new mdb.Input(e).init();
													}));
										},
									},
									{
										key: '_resetStepperHeight',
										value: function () {
											this._element.style.height = '';
										},
									},
									{
										key: '_setStepsHeight',
										value: function () {
											var n = this;
											this._steps.forEach(function (e) {
												var t = V.findOne('.'.concat(jv), e),
													e = window.getComputedStyle(t);
												n._verticalStepperStyles.push({
													paddingTop: parseFloat(e.paddingTop),
													paddingBottom: parseFloat(e.paddingBottom),
												});
												e = t.scrollHeight;
												t.style.height = ''.concat(e, 'px');
											});
										},
									},
									{
										key: '_setSingleStepHeight',
										value: function (e) {
											var t = V.findOne('.'.concat(jv), e),
												n = this.activeStep === e,
												e = this._steps.indexOf(e),
												e = n
													? ((t.style.height = ''), t.scrollHeight)
													: t.scrollHeight +
													  this._verticalStepperStyles[e].paddingTop +
													  this._verticalStepperStyles[e].paddingBottom;
											t.style.height = ''.concat(e, 'px');
										},
									},
									{
										key: '_createMobileElements',
										value: function () {
											this._element.insertAdjacentHTML('beforeend', $v);
											var e = V.findOne('.'.concat(Bv), this._element);
											this._steps.length >
												this._options.stepperMobileBarBreakpoint &&
												(this._element.classList.add('stepper-progress-bar'),
												e.insertAdjacentHTML('afterbegin', Qv),
												this._updateProgressBar()),
												e.insertAdjacentHTML('afterbegin', Kv),
												e.insertAdjacentHTML('beforeend', qv),
												this._element.insertAdjacentHTML('afterbegin', Gv),
												(V.findOne('#'.concat(Jv), this._element).textContent =
													this._steps.length),
												(V.findOne('#'.concat(Xv), this._element).textContent =
													this._activeStepIndex + 1);
										},
									},
									{
										key: '_toggleMobile',
										value: function () {
											(this._currentView = _v),
												this._toggleStepperClass(Wv),
												this._createMobileElements(),
												this._bindMobileButtons(),
												this._setHeight(this.activeStep),
												this._hideInactiveSteps();
										},
									},
									{
										key: '_toggleVertical',
										value: function () {
											this._currentView === _v &&
												(this._deleteMobileElements(),
												this._unbindMobileButtons()),
												(this._currentView = mv),
												this._toggleStepperClass(Iv),
												this._setStepsHeight(),
												this._hideInactiveSteps();
										},
									},
									{
										key: '_toggleHorizontal',
										value: function () {
											this._currentView === _v &&
												(this._deleteMobileElements(),
												this._unbindMobileButtons()),
												(this._currentView = pv),
												this._toggleStepperClass(Nv),
												this._setHeight(this.activeStep),
												this._hideInactiveSteps();
										},
									},
									{
										key: '_toggleStepperClass',
										value: function (e) {
											this._element.classList.remove(Nv, Wv, Iv),
												this._element.classList.add(e),
												e !== Iv &&
													this._steps.forEach(function (e) {
														V.findOne('.'.concat(jv), e).classList.remove(Rv);
													});
										},
									},
									{
										key: '_toggleStepClass',
										value: function (e, t, n) {
											n && this._steps[e].classList[t](n);
										},
									},
									{
										key: '_deleteMobileElements',
										value: function () {
											var e = V.findOne('.'.concat(Bv), this._element),
												t = V.findOne('.'.concat(Fv), this._element);
											e.remove(), t.remove();
										},
									},
									{
										key: '_bindKeysNavigation',
										value: function () {
											var u = this;
											this._toggleStepTabIndex(
												!1,
												V.findOne('.'.concat(Yv), this.activeStep)
											),
												this._steps.forEach(function (e) {
													e = V.findOne('.'.concat(Yv), e);
													H.on(e, kv, function (e) {
														var t,
															n = V.parents(e.currentTarget, '.'.concat(Ov))[0],
															i = V.next(n, '.'.concat(Ov))[0],
															r = V.prev(n, '.'.concat(Ov))[0],
															o = V.findOne('.'.concat(Yv), n),
															a = V.findOne('.'.concat(Yv), u.activeStep),
															s = null,
															l = null;
														i && (s = V.findOne('.'.concat(Yv), i)),
															r && (l = V.findOne('.'.concat(Yv), r)),
															37 === e.keyCode &&
																u._currentView !== mv &&
																(!h && l
																	? (u._toggleStepTabIndex(o, l),
																	  u._toggleOutlineStyles(o, l),
																	  l.focus())
																	: h &&
																	  s &&
																	  (u._toggleStepTabIndex(o, s),
																	  u._toggleOutlineStyles(o, s),
																	  s.focus())),
															39 === e.keyCode &&
																u._currentView !== mv &&
																(!h && s
																	? (u._toggleStepTabIndex(o, s),
																	  u._toggleOutlineStyles(o, s),
																	  s.focus())
																	: h &&
																	  l &&
																	  (u._toggleStepTabIndex(o, l),
																	  u._toggleOutlineStyles(o, l),
																	  l.focus())),
															40 === e.keyCode &&
																u._currentView === mv &&
																(e.preventDefault(),
																s &&
																	(u._toggleStepTabIndex(o, s),
																	u._toggleOutlineStyles(o, s),
																	s.focus())),
															38 === e.keyCode &&
																u._currentView === mv &&
																(e.preventDefault(),
																l &&
																	(u._toggleStepTabIndex(o, l),
																	u._toggleOutlineStyles(o, l),
																	l.focus())),
															36 === e.keyCode &&
																((t = V.findOne('.'.concat(Yv), u._steps[0])),
																u._toggleStepTabIndex(o, t),
																u._toggleOutlineStyles(o, t),
																t.focus()),
															35 === e.keyCode &&
																((t = u._steps[u._steps.length - 1]),
																(t = V.findOne('.'.concat(Yv), t)),
																u._toggleStepTabIndex(o, t),
																u._toggleOutlineStyles(o, t),
																t.focus()),
															(13 !== e.keyCode && 32 !== e.keyCode) ||
																(e.preventDefault(),
																u.changeStep(u._steps.indexOf(n))),
															9 === e.keyCode &&
																(u._toggleStepTabIndex(o, a),
																u._toggleOutlineStyles(o, !1),
																a.focus());
													}),
														H.on(e, wv, function (e) {
															var t = V.parents(
																	e.currentTarget,
																	'.'.concat(Ov)
																)[0],
																n = V.findOne('.'.concat(Yv), t),
																t = V.findOne('.'.concat(Yv), u.activeStep);
															9 === e.keyCode &&
																(u._toggleStepTabIndex(n, t),
																u._toggleOutlineStyles(!1, t),
																t.focus());
														});
												});
										},
									},
									{
										key: '_bindMobileButtons',
										value: function () {
											var e = this,
												t = V.findOne('.'.concat(Uv), this._element),
												n = V.findOne('.'.concat(Vv), this._element);
											H.on(t, Lv, function () {
												return e.previousStep();
											}),
												H.on(n, Lv, function () {
													return e.nextStep();
												});
										},
									},
									{
										key: '_unbindMobileButtons',
										value: function () {
											var e = this,
												t = V.findOne('.'.concat(Uv), this._element),
												n = V.findOne('.'.concat(Vv), this._element);
											H.off(t, Lv, function () {
												return e.previousStep();
											}),
												H.off(n, Lv, function () {
													return e.nextStep();
												});
										},
									},
									{
										key: '_toggleStepTabIndex',
										value: function (e, t) {
											e && e.setAttribute('tabIndex', -1),
												t && t.setAttribute('tabIndex', 0);
										},
									},
									{
										key: '_validateStep',
										value: function (e) {
											var t = this,
												n = this._steps.length,
												i = !0;
											e === this._activeStepIndex && (i = !1),
												(n <= e || e < 0) && (i = !1);
											var r = H.trigger(this.activeStep, Dv);
											return (
												this._options.stepperLinear &&
													(e > this._activeStepIndex + 1 && (i = !1),
													(e > this._activeStepIndex || e === n - 1) &&
														((n = V.find('[required]', this.activeStep).every(
															function (e) {
																return !0 === e.checkValidity();
															}
														)),
														this.activeStep.classList.add('was-validated'),
														n ||
															(this._toggleInvalid(this._activeStepIndex),
															H.trigger(this.activeStep, Sv),
															this._currentView !== mv
																? setTimeout(function () {
																		t._setHeight(t.activeStep);
																  }, 210)
																: setTimeout(function () {
																		t._setSingleStepHeight(t.activeStep);
																  }, 210),
															(i = !1)))),
												e > this._activeStepIndex &&
													r.defaultPrevented &&
													(i = !1),
												this._options.stepperNoEditable &&
													this._steps[e].classList.contains(Hv) &&
													(i = !1),
												i
											);
										},
									},
									{
										key: '_updateProgressBar',
										value: function () {
											var e = this._steps.length;
											V.findOne('.'.concat(zv), this._element).style.width =
												''.concat(((this._activeStepIndex + 1) / e) * 100, '%');
										},
									},
									{
										key: '_toggleOutlineStyles',
										value: function (e, t) {
											e && (e.style.outline = ''),
												t && (t.style.outline = 'revert');
										},
									},
									{
										key: '_toggleDisabled',
										value: function () {
											this._toggleStepClass(this._activeStepIndex, 'add', Hv),
												this._toggleStepClass(
													this._activeStepIndex,
													'add',
													this._options.stepperDisabled
												);
										},
									},
									{
										key: '_toggleActive',
										value: function (e) {
											this._toggleStepClass(e, 'add', Ev),
												this._toggleStepClass(
													this._activeStepIndex,
													'remove',
													Ev
												),
												this._toggleStepClass(
													e,
													'add',
													this._options.stepperActive
												),
												this._toggleStepClass(
													this._activeStepIndex,
													'remove',
													this._options.stepperActive
												);
										},
									},
									{
										key: '_toggleCompleted',
										value: function (e) {
											this._toggleStepClass(e, 'add', Pv),
												this._toggleStepClass(e, 'remove', Av),
												this._toggleStepClass(
													e,
													'add',
													this._options.stepperCompleted
												),
												this._toggleStepClass(
													e,
													'remove',
													this._options.stepperInvalid
												);
										},
									},
									{
										key: '_toggleInvalid',
										value: function (e) {
											this._toggleStepClass(e, 'add', Av),
												this._toggleStepClass(e, 'remove', Pv),
												this._toggleStepClass(
													e,
													'add',
													this._options.stepperInvalid
												),
												this._toggleStepClass(
													e,
													'remove',
													this._options.stepperCompleted
												);
										},
									},
									{
										key: '_setOptional',
										value: function () {
											this._steps.forEach(function (e) {
												F.getDataAttribute(e, 'stepper-optional') &&
													V.findOne('.'.concat(Cv), e).setAttribute(
														'data-mdb-content',
														'Optional'
													);
											});
										},
									},
									{
										key: '_hideInactiveSteps',
										value: function () {
											var t = this;
											this._steps.forEach(function (e) {
												e.classList.contains(Ev) ||
													t._hideElement(V.findOne('.'.concat(jv), e));
											});
										},
									},
									{
										key: '_setValidation',
										value: function () {
											var n = this,
												t = V.findOne(
													'.needs-validation.stepper-form',
													this._element
												);
											H.on(
												t,
												bv,
												function (e) {
													t.checkValidity() ||
														(e.preventDefault(), e.stopPropagation()),
														n._steps.forEach(function (e, t) {
															n._validateStep(t) ||
																(n._toggleInvalid(t),
																H.trigger(n.activeStep, Sv));
														});
												},
												!1
											);
										},
									},
									{
										key: '_setHeight',
										value: function (e) {
											var t = V.findOne('.'.concat(jv), e),
												n = V.findOne('.'.concat(Bv), this._element),
												i = getComputedStyle(t),
												r = n ? getComputedStyle(n) : '',
												o =
													this._currentView === _v
														? V.findOne('.'.concat(Fv), this._element)
														: V.findOne('.'.concat(Yv), e),
												e = getComputedStyle(o),
												i =
													t.offsetHeight +
													parseFloat(i.marginTop) +
													parseFloat(i.marginBottom),
												e =
													o.offsetHeight +
													parseFloat(e.marginTop) +
													parseFloat(e.marginBottom),
												r = r
													? n.offsetHeight +
													  parseFloat(r.marginTop) +
													  parseFloat(r.marginBottom)
													: 0;
											this._element.style.height = ''.concat(e + i + r, 'px');
										},
									},
									{
										key: '_hideElement',
										value: function (e) {
											V.parents(e, '.'.concat(Ov))[0].classList.contains(Ev) ||
											this._currentView === mv
												? e.classList.add(Rv)
												: (e.style.display = 'none');
										},
									},
									{
										key: '_showElement',
										value: function (e) {
											this._currentView === mv
												? e.classList.remove(Rv)
												: (e.style.display = 'block');
										},
									},
									{
										key: '_animateHorizontalStep',
										value: function (n) {
											var e,
												i = this,
												t = n > this._activeStepIndex,
												r = V.findOne('.'.concat(jv), this._steps[n]),
												o = V.findOne('.'.concat(jv), this.activeStep);
											this._steps.forEach(function (e, t) {
												e = V.findOne('.'.concat(jv), e);
												i._clearStepAnimation(e),
													t !== n &&
														t !== i._activeStepIndex &&
														i._hideElement(e);
											}),
												(t = t
													? ((e = 'slide-out-left'), 'slide-in-right')
													: ((e = 'slide-out-right'), 'slide-in-left')),
												o.classList.add(e, 'animation', 'fast'),
												r.classList.add(t, 'animation', 'fast'),
												this._setHeight(this._steps[n]),
												H.one(o, xv, function (e) {
													i._clearStepAnimation(e.target),
														i._hideElement(e.target);
												}),
												H.one(r, xv, function (e) {
													i._clearStepAnimation(e.target);
												});
										},
									},
									{
										key: '_animateVerticalStep',
										value: function (e) {
											var t = V.findOne('.'.concat(jv), this._steps[e]),
												e = V.findOne('.'.concat(jv), this.activeStep);
											this._hideElement(e), this._showElement(t);
										},
									},
									{
										key: '_clearStepAnimation',
										value: function (e) {
											e.classList.remove(
												'slide-out-left',
												'slide-in-right',
												'slide-out-right',
												'slide-in-left',
												'animation',
												'fast'
											);
										},
									},
									{
										key: 'activeStep',
										get: function () {
											return this._steps[this._activeStepIndex];
										},
									},
									{
										key: 'activeStepIndex',
										get: function () {
											return this._activeStepIndex;
										},
									},
								]) && dv(e.prototype, t),
								n && dv(e, n),
								r
							);
						})();
					V.find('[data-mdb-stepper="stepper"]').forEach(function (e) {
						return Zv.getInstance(e) || new Zv(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[fv]),
								(t.fn[fv] = Zv.jQueryInterface),
								(t.fn[fv].Constructor = Zv),
								(t.fn[fv].noConflict = function () {
									return (t.fn[fv] = e), Zv.jQueryInterface;
								}));
						});
					var ey = Zv;
					function ty(e) {
						return (ty =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function ny(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function iy(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? ny(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: ny(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function ry(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var oy = 'sticky',
						ay = 'mdb.sticky',
						t = '.'.concat('sticky'),
						Ve = '.'.concat(ay),
						sy = 'active'.concat(Ve),
						ly = 'inactive'.concat(Ve),
						uy = {
							stickyActiveClass: '',
							stickyAnimationSticky: '',
							stickyAnimationUnsticky: '',
							stickyBoundary: !1,
							stickyDelay: 0,
							stickyDirection: 'down',
							stickyMedia: 0,
							stickyOffset: 0,
							stickyPosition: 'top',
						},
						cy = {
							stickyActiveClass: 'string',
							stickyAnimationSticky: 'string',
							stickyAnimationUnsticky: 'string',
							stickyBoundary: '(boolean|string)',
							stickyDelay: 'number',
							stickyDirection: 'string',
							stickyMedia: 'number',
							stickyOffset: 'number',
							stickyPosition: 'string',
						},
						dy = (function () {
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._hiddenElement = null),
									(this._elementPositionStyles = {}),
									(this._scrollDirection = ''),
									(this._isSticked = !1),
									(this._elementOffsetTop = null),
									(this._scrollTop = 0),
									(this._pushPoint = ''),
									(this._manuallyDeactivated = !1),
									this._element &&
										((this._options = this._getConfig(t)),
										m.setData(e, ay, this),
										this._init());
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, ay),
													t = 'object' === ty(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, ay);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return oy;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											var e = this,
												t = this._options.stickyAnimationUnsticky,
												n = getComputedStyle(this._element).animationDuration,
												n = '' !== t ? 1e3 * parseFloat(n) : 0;
											this._disableSticky(),
												setTimeout(function () {
													m.removeData(e._element, ay),
														(e._element = null),
														(e._options = null),
														(e._hiddenElement = null),
														(e._elementPositionStyles = null),
														(e._scrollDirection = null),
														(e._isSticked = null),
														(e._elementOffsetTop = null),
														(e._scrollTop = null),
														(e._pushPoint = null),
														(e._manuallyDeactivated = null);
												}, n);
										},
									},
									{
										key: 'active',
										value: function () {
											this._isSticked ||
												(this._createHiddenElement(),
												this._enableSticky(),
												this._changeBoundaryPosition(),
												(this._isSticked = !0),
												(this._manuallyDeactivated = !1));
										},
									},
									{
										key: 'inactive',
										value: function () {
											this._isSticked &&
												(this._disableSticky(),
												(this._isSticked = !1),
												(this._manuallyDeactivated = !0));
										},
									},
									{
										key: '_init',
										value: function () {
											this._userActivityListener();
										},
									},
									{
										key: '_userActivityListener',
										value: function () {
											var r = this;
											H.on(window, 'resize', function () {
												r._updateElementPosition(), r._updateElementOffset();
											}),
												H.on(window, 'scroll', function () {
													var e, t, n, i;
													r._element &&
														(window.innerWidth <= r._options.stickyMedia ||
															r._manuallyDeactivated ||
															((t = document.documentElement),
															(n = r._options.stickyDirection),
															(e = window.pageYOffset || t.scrollTop),
															r._updateElementOffset(),
															r._updatePushPoint(),
															r._updateScrollDirection(e),
															r._clearInProgressAnimations(),
															(i = [r._scrollDirection, 'both'].includes(n)),
															(n =
																(t = r._pushPoint <= e) && !r._isSticked && i),
															(i = (!t || !i) && r._isSticked),
															n &&
																(r._createHiddenElement(),
																r._enableSticky(),
																r._changeBoundaryPosition(),
																(r._isSticked = !0)),
															i && (r._disableSticky(), (r._isSticked = !1)),
															r._isSticked &&
																(r._updatePosition({
																	styles: r._elementPositionStyles,
																}),
																r._changeBoundaryPosition()),
															(r._scrollTop = e <= 0 ? 0 : e)));
												});
										},
									},
									{
										key: '_updatePushPoint',
										value: function () {
											'top' === this._options.stickyPosition
												? (this._pushPoint =
														this._elementOffsetTop - this._options.stickyDelay)
												: (this._pushPoint =
														this._elementOffsetTop +
														this._element.height -
														document.body.scrollHeight +
														this._options.stickyDelay);
										},
									},
									{
										key: '_updateElementOffset',
										value: function () {
											this._hiddenElement
												? (this._elementOffsetTop =
														this._hiddenElement.offsetTop)
												: (this._elementOffsetTop = this._element.offsetTop),
												this._options.stickyAnimationUnsticky &&
													(this._elementOffsetTop += this._element.height);
										},
									},
									{
										key: '_updateElementPosition',
										value: function () {
											var e;
											this._hiddenElement
												? ((e =
														this._hiddenElement.getBoundingClientRect().left),
												  (this._elementPositionStyles = {
														left: ''.concat(e, 'px'),
												  }))
												: (this._elementPositionStyles = {}),
												this._setStyle(
													this._element,
													this._elementPositionStyles
												);
										},
									},
									{
										key: '_updateScrollDirection',
										value: function (e) {
											e > this._scrollTop
												? (this._scrollDirection = 'down')
												: (this._scrollDirection = 'up');
										},
									},
									{
										key: '_clearInProgressAnimations',
										value: function () {
											var e = 'up' === this._scrollDirection,
												t = this._element.classList.contains(
													this._options.stickyAnimationUnsticky
												),
												n =
													window.scrollY <=
													this._elementOffsetTop - this._element.height;
											e &&
												t &&
												n &&
												(this._removeUnstickyAnimation(),
												this._resetStyles(),
												this._removeHiddenElement());
										},
									},
									{
										key: '_enableSticky',
										value: function () {
											var e = this._options,
												t = e.stickyActiveClass,
												n = e.stickyAnimationSticky,
												i = e.stickyAnimationUnsticky,
												r = e.stickyOffset,
												o = e.stickyPosition,
												a = this._element.getBoundingClientRect(),
												s = a.height,
												e = a.left,
												a = a.width;
											'' !== n &&
												(F.addClass(this._element, 'animation'),
												this._toggleClass(n, i, this._element)),
												this._toggleClass(t, '', this._element),
												this._setStyle(this._element, {
													top: 'top' === o && ''.concat(0 + r, 'px'),
													bottom: 'bottom' === o && ''.concat(0 + r, 'px'),
													height: ''.concat(s, 'px'),
													width: ''.concat(a, 'px'),
													left: ''.concat(e, 'px'),
													zIndex: '100',
													position: 'fixed',
												}),
												(this._hiddenElement.hidden = !1),
												H.trigger(this._element, sy);
										},
									},
									{
										key: '_changeBoundaryPosition',
										value: function () {
											var e,
												t = this._options,
												n = t.stickyPosition,
												i = t.stickyBoundary,
												r = t.stickyOffset,
												o = this._element.getBoundingClientRect().height,
												a = iy(
													{
														height:
															this._element.parentElement.getBoundingClientRect()
																.height,
													},
													this._getOffset(this._element.parentElement)
												),
												s = V.findOne(i),
												l = s
													? this._getOffset(s).top - o - r
													: a.height + a[n] - o - r,
												t = 'top' === n,
												s = 'bottom' === n,
												n = i,
												i = l < 0,
												o = l > a.height - o;
											t &&
												(e =
													i && n
														? { top: ''.concat(r + l, 'px') }
														: { top: ''.concat(r + 0, 'px') }),
												s &&
													(e =
														i && n
															? { bottom: ''.concat(r + l, 'px') }
															: o && n
															? { bottom: ''.concat(r + a.bottom, 'px') }
															: { bottom: ''.concat(r + 0, 'px') }),
												this._setStyle(this._element, e);
										},
									},
									{
										key: '_disableSticky',
										value: function () {
											var e = this,
												t = this._options,
												n = t.stickyActiveClass,
												i = t.stickyAnimationUnsticky,
												r = t.stickyAnimationSticky,
												t = getComputedStyle(this._element).animationDuration,
												t = '' !== i ? 1e3 * parseFloat(t) : 0;
											'' !== this._options.stickyAnimationUnsticky &&
												(F.addClass(this._element, 'animation'),
												this._toggleClass(i, r, this._element)),
												setTimeout(function () {
													e._element.classList.contains(r) ||
														(e._removeUnstickyAnimation(),
														e._resetStyles(),
														e._removeHiddenElement(),
														e._toggleClass('', n, e._element),
														H.trigger(e._element, ly));
												}, t);
										},
									},
									{
										key: '_createHiddenElement',
										value: function () {
											this._hiddenElement ||
												(this._hiddenElement = this._copyElement(
													this._element
												));
										},
									},
									{
										key: '_removeHiddenElement',
										value: function () {
											this._hiddenElement &&
												(this._hiddenElement.remove(),
												(this._hiddenElement = null));
										},
									},
									{
										key: '_removeUnstickyAnimation',
										value: function () {
											this._toggleClass(
												'',
												this._options.stickyAnimationUnsticky,
												this._element
											);
										},
									},
									{
										key: '_resetStyles',
										value: function () {
											this._setStyle(this._element, {
												top: null,
												bottom: null,
												position: null,
												left: null,
												zIndex: null,
												width: null,
												height: null,
											});
										},
									},
									{
										key: '_updatePosition',
										value: function (e) {
											e = e.styles;
											this._setStyle(this._element, e);
										},
									},
									{
										key: '_toggleClass',
										value: function (e, t, n) {
											e && F.addClass(n, e), t && F.removeClass(n, t);
										},
									},
									{
										key: '_getOffset',
										value: function (e) {
											var t = F.offset(e),
												e = e.getBoundingClientRect(),
												e =
													0 === t.left && 0 === t.top
														? 0
														: window.innerHeight - e.bottom;
											return iy(iy({}, t), {}, { bottom: e });
										},
									},
									{
										key: '_copyElement',
										value: function (e) {
											var t = e.getBoundingClientRect(),
												n = t.height,
												i = t.width,
												t = e.cloneNode(!1);
											return (
												(t.hidden = !0),
												this._setStyle(t, {
													height: ''.concat(n, 'px'),
													width: ''.concat(i, 'px'),
													opacity: '0',
												}),
												e.parentElement.insertBefore(t, e),
												t
											);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = 0 < arguments.length && void 0 !== e ? e : {},
												e = F.getDataAttributes(this._element),
												t = iy(iy(iy({}, uy), e), t);
											return s(oy, t, cy), t;
										},
									},
									{
										key: '_setStyle',
										value: function (t, n) {
											Object.keys(n).forEach(function (e) {
												t.style[e] = n[e];
											});
										},
									},
								]) && ry(e.prototype, t),
								n && ry(e, n),
								r
							);
						})();
					V.find(t).forEach(function (e) {
						return dy.getInstance(e) || new dy(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[oy]),
								(t.fn[oy] = dy.jQueryInterface),
								(t.fn[oy].Constructor = dy),
								(t.fn[oy].noConflict = function () {
									return (t.fn[oy] = e), dy.jQueryInterface;
								}));
						});
					var fy = dy;
					n(325);
					function hy(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return py(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return py(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function py(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function my(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var _y = (function () {
						function t() {
							!(function (e) {
								if (!(e instanceof t))
									throw new TypeError('Cannot call a class as a function');
							})(this);
						}
						var e, n, i;
						return (
							(e = t),
							(n = [
								{
									key: '_getCoordinates',
									value: function (e) {
										e = hy(e.touches, 1)[0];
										return { x: e.clientX, y: e.clientY };
									},
								},
								{
									key: '_getDirection',
									value: function (e) {
										var t = e.x,
											e = e.y;
										return {
											x: {
												direction: t < 0 ? 'left' : 'right',
												value: Math.abs(t),
											},
											y: {
												direction: e < 0 ? 'up' : 'down',
												value: Math.abs(e),
											},
										};
									},
								},
								{
									key: '_getOrigin',
									value: function (e, t) {
										var n = e.x,
											e = e.y;
										return { x: n - t.x, y: e - t.y };
									},
								},
								{
									key: '_getDistanceBetweenTwoPoints',
									value: function (e, t, n, i) {
										return Math.hypot(t - e, i - n);
									},
								},
								{
									key: '_getMidPoint',
									value: function (e) {
										return { x: (e.x1 + e.x2) / 2, y: (e.y1 + e.y2) / 2 };
									},
								},
								{
									key: '_getVectorLength',
									value: function (e) {
										var t = e.x1,
											n = e.x2,
											i = e.y1,
											e = e.y2;
										return Math.sqrt(Math.pow(n - t, 2) + Math.pow(e - i, 2));
									},
								},
								{
									key: '_getRightMostTouch',
									value: function (e) {
										var t = null,
											n = Number.MIN_VALUE;
										return (
											e.forEach(function (e) {
												e.clientX > n && (t = e);
											}),
											t
										);
									},
								},
								{
									key: '_getAngle',
									value: function (e, t, n, i) {
										return Math.atan2(i - t, n - e);
									},
								},
								{
									key: '_getAngularDistance',
									value: function (e, t) {
										return t - e;
									},
								},
								{
									key: '_getCenterXY',
									value: function (e) {
										var t = e.x1,
											n = e.x2,
											i = e.y1;
										return { x: t + (n - t) / 2, y: i + (e.y2 - i) / 2 };
									},
								},
								{
									key: '_getPinchTouchOrigin',
									value: function (e) {
										var t = hy(e, 2),
											e = t[0],
											t = t[1],
											t = {
												x1: e.clientX,
												x2: t.clientX,
												y1: e.clientY,
												y2: t.clientY,
											};
										return [this._getVectorLength(t), this._getCenterXY(t)];
									},
								},
								{
									key: '_getPosition',
									value: function (e) {
										return { x1: e.x1, x2: e.x2, y1: e.y1, y2: e.y2 };
									},
								},
							]) && my(e.prototype, n),
							i && my(e, i),
							t
						);
					})();
					function vy(e) {
						return (vy =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function yy(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function gy(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? yy(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: yy(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function by(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function ky(e, t) {
						return (ky =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function wy(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = My(n);
							return (
								(e = i
									? ((e = My(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== vy(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function My(e) {
						return (My = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Ly = { time: 250, pointers: 1 },
						xy = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && ky(e, t);
							})(r, _y);
							var e,
								t,
								n,
								i = wy(r);
							function r(e) {
								var t,
									n =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {};
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((t = i.call(this))._element = e),
									(t._options = gy(gy({}, Ly), n)),
									(t._timer = null),
									t
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return 'press';
										},
									},
								]),
								(t = [
									{
										key: 'handleTouchStart',
										value: function (e) {
											var t = this,
												n = this._options,
												i = n.time,
												n = n.pointers;
											e.touches.length === n &&
												(this._timer = setTimeout(function () {
													H.trigger(t._element, 'press', { time: i }),
														H.trigger(t._element, 'pressup', { touch: e });
												}, i));
										},
									},
									{
										key: 'handleTouchEnd',
										value: function () {
											clearTimeout(this._timer);
										},
									},
								]) && by(e.prototype, t),
								n && by(e, n),
								r
							);
						})();
					function Dy(e) {
						return (Dy =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Sy(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Ty(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Sy(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Sy(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Oy(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Yy(e, t) {
						return (Yy =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Cy(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = jy(n);
							return (
								(e = i
									? ((e = jy(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Dy(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function jy(e) {
						return (jy = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Ey = { threshold: 10, direction: 'all' },
						Py = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Yy(e, t);
							})(r, _y);
							var e,
								t,
								n,
								i = Cy(r);
							function r(e, t) {
								var n;
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((n = i.call(this))._element = e),
									(n._startPosition = null),
									(n._options = Ty(Ty({}, Ey), t)),
									n
								);
							}
							return (
								(e = r),
								(t = [
									{
										key: 'handleTouchStart',
										value: function (e) {
											this._startPosition = this._getCoordinates(e);
										},
									},
									{
										key: 'handleTouchMove',
										value: function (e) {
											if (
												('touchmove' === e.type && e.preventDefault(),
												this._startPosition)
											) {
												var t = this._options,
													n = t.direction,
													i = t.threshold,
													r = this._getCoordinates(e),
													t = {
														x: r.x - this._startPosition.x,
														y: r.y - this._startPosition.y,
													},
													e = this._getDirection(t),
													r = e.x,
													t = e.y;
												if ('all' === n) {
													if (t.value < i && r.value < i) return;
													var o = (t.value > r.value ? t : r).direction;
													return (
														H.trigger(
															this._element,
															''.concat('swipe').concat(o)
														),
														H.trigger(this._element, 'swipe', { direction: o }),
														void (this._startPosition = null)
													);
												}
												o = 'left' === n || 'right' === n ? 'x' : 'y';
												e[o].direction === n &&
													e[o].value > i &&
													(H.trigger(
														this._element,
														''.concat('swipe').concat(e[o].direction)
													),
													(this._startPosition = null));
											}
										},
									},
									{
										key: 'handleTouchEnd',
										value: function () {
											this._startPosition = null;
										},
									},
								]) && Oy(e.prototype, t),
								n && Oy(e, n),
								r
							);
						})();
					function Ay(e) {
						return (Ay =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Hy(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Iy(t) {
						for (var e = 1; e < arguments.length; e++) {
							var n = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Hy(Object(n), !0).forEach(function (e) {
										Ry(t, e, n[e]);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										t,
										Object.getOwnPropertyDescriptors(n)
								  )
								: Hy(Object(n)).forEach(function (e) {
										Object.defineProperty(
											t,
											e,
											Object.getOwnPropertyDescriptor(n, e)
										);
								  });
						}
						return t;
					}
					function Ry(e, t, n) {
						return (
							t in e
								? Object.defineProperty(e, t, {
										value: n,
										enumerable: !0,
										configurable: !0,
										writable: !0,
								  })
								: (e[t] = n),
							e
						);
					}
					function Ny(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Wy(e, t) {
						return (Wy =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Fy(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = By(n);
							return (
								(e = i
									? ((e = By(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Ay(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function By(e) {
						return (By = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var zy = { threshold: 20, direction: 'all', pointers: 1 },
						Vy = 'pan',
						Uy = ''.concat(Vy, 'start'),
						Xy = ''.concat(Vy, 'end'),
						Jy = ''.concat(Vy, 'move'),
						qy = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Wy(e, t);
							})(r, _y);
							var e,
								t,
								n,
								i = Fy(r);
							function r(e) {
								var t,
									n =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {};
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((t = i.call(this))._element = e),
									(t._options = Iy(Iy({}, zy), n)),
									(t._startTouch = null),
									t
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return Vy;
										},
									},
								]),
								(t = [
									{
										key: 'handleTouchStart',
										value: function (e) {
											(this._startTouch = this._getCoordinates(e)),
												(this._movedTouch = e),
												H.trigger(this._element, Uy, { touch: e });
										},
									},
									{
										key: 'handleTouchMove',
										value: function (e) {
											'touchmove' === e.type && e.preventDefault();
											var t = this._options,
												n = t.threshold,
												i = t.direction,
												r = this._getCoordinates(e),
												o = this._getCoordinates(this._movedTouch),
												a = this._getOrigin(r, this._startTouch),
												s = this._getOrigin(r, o),
												l = this._getDirection(a),
												u = this._getDirection(s),
												t = l.x,
												a = l.y;
											'all' === i &&
												(a.value > n || t.value > n) &&
												((t = (a.value > t.value ? a : t).direction),
												H.trigger(this._element, ''.concat(Vy).concat(t)),
												H.trigger(this._element, Vy, s));
											s = 'left' === i || 'right' === i ? 'x' : 'y';
											u[s].direction === i &&
												l[s].value > n &&
												H.trigger(
													this._element,
													''.concat(Vy).concat(i),
													Ry({}, s, r[s] - o[s])
												),
												(this._movedTouch = e),
												H.trigger(this._element, Jy, { touch: e });
										},
									},
									{
										key: 'handleTouchEnd',
										value: function (e) {
											'touchend' === e.type && e.preventDefault(),
												(this._movedTouch = null),
												(this._startTouch = null),
												H.trigger(this._element, Xy, { touch: e });
										},
									},
								]) && Ny(e.prototype, t),
								n && Ny(e, n),
								r
							);
						})();
					function Ky(e) {
						return (Ky =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Gy(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Qy(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Qy(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Qy(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function $y(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Zy(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? $y(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: $y(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function eg(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function tg(e, t) {
						return (tg =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function ng(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = ig(n);
							return (
								(e = i
									? ((e = ig(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Ky(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function ig(e) {
						return (ig = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var rg = { pointers: 2, threshold: 10 },
						og = 'pinch',
						ag = ''.concat(og, 'end'),
						sg = ''.concat(og, 'start'),
						lg = ''.concat(og, 'move'),
						ug = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && tg(e, t);
							})(r, _y);
							var e,
								t,
								n,
								i = ng(r);
							function r(e) {
								var t,
									n =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {};
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((t = i.call(this))._element = e),
									(t._options = Zy(Zy({}, rg), n)),
									(t._startTouch = null),
									(t._origin = null),
									(t._touch = null),
									(t._math = null),
									(t._ratio = null),
									t
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return og;
										},
									},
								]),
								(t = [
									{
										key: 'handleTouchStart',
										value: function (e) {
											var t;
											e.touches.length === this._options.pointers &&
												('touchstart' === e.type && e.preventDefault(),
												(e = (t = Gy(
													this._getPinchTouchOrigin(e.touches),
													2
												))[0]),
												(t = t[1]),
												(this._touch = e),
												(this._origin = t),
												(this._startTouch = this._touch),
												H.trigger(this._element, sg, {
													ratio: this._ratio,
													origin: this._origin,
												}));
										},
									},
									{
										key: 'handleTouchMove',
										value: function (e) {
											var t = this._options,
												n = t.threshold,
												t = t.pointers;
											e.touches.length === t &&
												('touchmove' === e.type && e.preventDefault(),
												(this._touch = this._getPinchTouchOrigin(e.touches)[0]),
												(this._ratio = this._touch / this._startTouch),
												this.isNumber &&
													(this._origin.x > n || this._origin.y > n) &&
													((this._startTouch = this._touch),
													H.trigger(this._element, og, {
														ratio: this._ratio,
														origin: this._origin,
													}),
													H.trigger(this._element, lg, {
														ratio: this._ratio,
														origin: this._origin,
													})));
										},
									},
									{
										key: 'handleTouchEnd',
										value: function () {
											this.isNumber &&
												((this._startTouch = null),
												H.trigger(this._element, ag, {
													ratio: this._ratio,
													origin: this._origin,
												}));
										},
									},
									{
										key: 'isNumber',
										get: function () {
											return (
												'number' == typeof this._startTouch &&
												'number' == typeof this._touch &&
												!isNaN(this._startTouch) &&
												!isNaN(this._touch)
											);
										},
									},
								]) && eg(e.prototype, t),
								n && eg(e, n),
								r
							);
						})();
					function cg(e) {
						return (cg =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function dg(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function fg(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? dg(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: dg(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function hg(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function pg(e, t) {
						return (pg =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function mg(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = _g(n);
							return (
								(e = i
									? ((e = _g(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== cg(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function _g(e) {
						return (_g = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var vg = { interval: 500, time: 250, taps: 1, pointers: 1 },
						yg = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && pg(e, t);
							})(r, _y);
							var e,
								t,
								n,
								i = mg(r);
							function r(e, t) {
								var n;
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((n = i.call(this))._element = e),
									(n._options = fg(fg({}, vg), t)),
									(n._timer = null),
									(n._tapCount = 0),
									n
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return 'tap';
										},
									},
								]),
								(t = [
									{
										key: 'handleTouchStart',
										value: function (e) {
											var t = this,
												n = this._getCoordinates(e),
												i = n.x,
												r = n.y,
												o = this._options,
												a = o.interval,
												n = o.taps,
												o = o.pointers;
											return (
												e.touches.length === o &&
													((this._tapCount += 1),
													1 === this._tapCount &&
														(this._timer = setTimeout(function () {
															t._tapCount = 0;
														}, a)),
													this._tapCount === n &&
														(clearTimeout(this._timer),
														(this._tapCount = 0),
														H.trigger(this._element, 'tap', {
															origin: { x: i, y: r },
														}))),
												e
											);
										},
									},
									{ key: 'handleTouchEnd', value: function () {} },
									{ key: 'handleTouchMove', value: function () {} },
								]) && hg(e.prototype, t),
								n && hg(e, n),
								r
							);
						})();
					function gg(e) {
						return (gg =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function bg(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return kg(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return kg(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function kg(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function wg(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Mg(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? wg(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: wg(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Lg(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function xg(e, t) {
						return (xg =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Dg(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Sg(n);
							return (
								(e = i
									? ((e = Sg(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== gg(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function Sg(e) {
						return (Sg = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Tg = { angle: 0, pointers: 2 },
						Og = 'rotate',
						Yg = ''.concat(Og, 'end'),
						Cg = ''.concat(Og, 'start'),
						jg = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && xg(e, t);
							})(r, _y);
							var e,
								t,
								n,
								i = Dg(r);
							function r(e, t) {
								var n;
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((n = i.call(this))._element = e),
									(n._options = Mg(Mg({}, Tg), t)),
									(n._origin = {}),
									n
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'NAME',
										get: function () {
											return Og;
										},
									},
								]),
								(t = [
									{
										key: 'handleTouchStart',
										value: function (e) {
											'touchstart' === e.type && e.preventDefault(),
												e.touches.length < 2 ||
													((this._startTouch = e),
													(this._origin = {}),
													H.trigger(this._element, Cg, { touch: e }));
										},
									},
									{
										key: 'handleTouchMove',
										value: function (e) {
											'touchmove' === e.type && e.preventDefault();
											var t = e.touches;
											if (1 === t.length && 1 === this._options.pointers)
												var n = this._element.getBoundingClientRect(),
													i = n.left,
													r = n.top,
													i = { x: i + n.width / 2, y: r + n.height / 2 },
													r = t[0];
											else {
												if (
													2 !== e.touches.length ||
													2 !== this._options.pointers
												)
													return;
												(n = bg(e.touches, 2)),
													(t = n[0]),
													(n = n[1]),
													(t = {
														x1: n.clientX,
														x2: t.clientX,
														y1: n.clientY,
														y2: t.clientY,
													});
												(i = this._getMidPoint(t)),
													(r = this._getRightMostTouch(e.touches));
											}
											(this.currentAngle = this._getAngle(
												i.x,
												i.y,
												r.clientX,
												r.clientY
											)),
												this._origin.initialAngle
													? ((this._origin.change = this._getAngularDistance(
															this._origin.previousAngle,
															this.currentAngle
													  )),
													  (this._origin.distance += this._origin.change))
													: ((this._origin.initialAngle =
															this._origin.previousAngle =
																this.currentAngle),
													  (this._origin.distance = this._origin.change = 0)),
												(this._origin.previousAngle = this.currentAngle),
												(this.rotate = {
													currentAngle: this.currentAngle,
													distance: this._origin.distance,
													change: this._origin.change,
												}),
												H.trigger(this._element, Og, this.rotate);
										},
									},
									{
										key: 'handleTouchEnd',
										value: function (e) {
											'touchend' === e.type && e.preventDefault(),
												(this._origin = {}),
												H.trigger(this._element, Yg, { touch: e });
										},
									},
								]) && Lg(e.prototype, t),
								n && Lg(e, n),
								r
							);
						})();
					function Eg(e) {
						return (Eg =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Pg(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Ag = 'touch',
						Hg = 'mdb.touch',
						Ig = (function () {
							function r(e) {
								var t = this,
									n =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: 'swipe',
									i =
										2 < arguments.length && void 0 !== arguments[2]
											? arguments[2]
											: {};
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._event = n),
									(this.swipe = 'swipe' === n ? new Py(e, i) : null),
									(this.press = 'press' === n ? new xy(e, i) : null),
									(this.pan = 'pan' === n ? new qy(e, i) : null),
									(this.pinch = 'pinch' === n ? new ug(e, i) : null),
									(this.tap = 'tap' === n ? new yg(e, i) : null),
									(this.rotate = 'rotate' === n ? new jg(e, i) : null),
									(this._touchStartHandler = function (e) {
										return t._handleTouchStart(e);
									}),
									(this._touchMoveHandler = function (e) {
										return t._handleTouchMove(e);
									}),
									(this._touchEndHandler = function (e) {
										return t._handleTouchEnd(e);
									}),
									this._element && m.setData(e, Hg, this);
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, Hg),
													t = 'object' === Eg(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													return e[n];
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Hg);
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(
												this._element,
												'touchstart',
												this._touchStartHandler
											),
												H.off(
													this._element,
													'touchmove',
													this._touchMoveHandler
												),
												H.off(this._element, 'touchend', this._touchEndHandler),
												(this.swipe = null),
												(this.press = null),
												(this.pan = null),
												(this.pinch = null),
												(this.tap = null),
												(this.rotate = null);
										},
									},
									{
										key: 'init',
										value: function () {
											H.on(
												this._element,
												'touchstart',
												this._touchStartHandler
											),
												H.on(
													this._element,
													'touchmove',
													this._touchMoveHandler
												),
												H.on(this._element, 'touchend', this._touchEndHandler);
										},
									},
									{
										key: '_handleTouchStart',
										value: function (e) {
											this[this._event].handleTouchStart(e);
										},
									},
									{
										key: '_handleTouchMove',
										value: function (e) {
											this[this._event].handleTouchMove(e);
										},
									},
									{
										key: '_handleTouchEnd',
										value: function (e) {
											this[this._event].handleTouchEnd(e);
										},
									},
								]) && Pg(e.prototype, t),
								n && Pg(e, n),
								r
							);
						})();
					l(function () {
						var e,
							t = r();
						t &&
							((e = t.fn[Ag]),
							(t.fn[Ag] = Ig.jQueryInterface),
							(t.fn[Ag].Constructor = Ig),
							(t.fn[Ag].noConflict = function () {
								return (t.fn[Ag] = e), Ig.jQueryInterface;
							}));
					});
					var Rg = Ig;
					function Ng(e) {
						return (Ng =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Wg(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Fg(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Wg(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Wg(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Bg(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var zg = 'smoothScroll',
						Vg = 'mdb.'.concat(zg),
						t = '.'.concat(Vg),
						Ug = {
							container: 'string',
							offset: 'number',
							easing: 'string',
							duration: 'number',
						},
						Xg = {
							container: 'body',
							offset: 0,
							easing: 'linear',
							duration: 500,
						},
						Jg = 'scrollStart'.concat(t),
						qg = 'scrollEnd'.concat(t),
						Kg = 'scrollCancel'.concat(t),
						Gg = (function () {
							function i(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t)),
									(this._href = this._element.getAttribute('href')),
									(this.isCancel = !1),
									this._element && (m.setData(e, Vg, this), this._setup());
							}
							var e, t, n;
							return (
								(e = i),
								(n = [
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Vg);
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, Vg),
													t = 'object' === Ng(n) && n,
													e = e || new i(this, t);
												if ('string' == typeof n) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](this);
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return zg;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, 'click', this._handleClick),
												m.removeData(this._element, Vg),
												(this._element = null);
										},
									},
									{
										key: 'cancelScroll',
										value: function () {
											this.isCancel = !0;
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = Fg(
												Fg(Fg({}, Xg), F.getDataAttributes(this._element)),
												e
											);
											return s(zg, e, Ug), e;
										},
									},
									{
										key: '_inViewport',
										value: function () {
											if (this.isWindow) return !0;
											var e = this.containerToScroll.getBoundingClientRect();
											return (
												0 <= e.top &&
												e.bottom <=
													(window.innerHeight ||
														document.documentElement.clientHeight)
											);
										},
									},
									{
										key: '_setup',
										value: function () {
											var e = void 0 !== this._href,
												t = this._href.includes('#');
											e &&
												t &&
												this.elFromHrefExist &&
												(this._scrollOnClickEvent(),
												this._preventNativeScroll());
										},
									},
									{
										key: '_scrollOnClickEvent',
										value: function () {
											var t = this;
											H.on(this._element, 'click', function (e) {
												t._handleClick(e);
											});
										},
									},
									{
										key: '_handleClick',
										value: function (e) {
											var t = this;
											e.preventDefault(),
												(this.isCancel = !1),
												H.trigger(this._element, Jg);
											var n = this.containerToScroll,
												i = this.containerToScroll.scrollTop,
												r = this.offsetFromEl,
												o = 1 / this._options.duration,
												a = this.easingFunction;
											this._inViewport()
												? this._scrollOnNextTick(n, i, r, 0, o, 4.25, a)
												: (this._scrollOnNextTick(
														document.documentElement,
														document.documentElement.scrollTop,
														this.containerToScroll.offsetTop,
														0,
														o,
														4.25,
														a
												  ),
												  setTimeout(function () {
														t._scrollOnNextTick(n, i, r, 0, o, 4.25, a),
															(t.isCancel = !1);
												  }, this._options.duration));
										},
									},
									{
										key: '_scrollOnNextTick',
										value: function (e, t, n, i, r, o, a) {
											var s = this;
											if (i < 0 || 1 < i || r <= 0 || this.isCancel)
												return this.isCancel
													? (this.isInViewport && (this.isCancel = !1),
													  void H.trigger(this._element, Kg))
													: (H.trigger(this._element, qg),
													  void (e.scrollTop = n));
											e.scrollTo({ top: t - (t - n) * a(i) }),
												(i += r * o),
												setTimeout(function () {
													s._scrollOnNextTick(e, t, n, i, r, o, a);
												});
										},
									},
									{
										key: '_preventDefault',
										value: function (e) {
											e.preventDefault();
										},
									},
									{
										key: '_preventNativeScroll',
										value: function () {
											var e = !1;
											try {
												window.addEventListener(
													'test',
													null,
													Object.defineProperty({}, 'passive', {
														get: function () {
															return (e = !0);
														},
													})
												);
											} catch (e) {
												this._scrollError = e;
											}
											var t = !!e && { passive: !1 },
												n = 'onwheel' in x('div') ? 'wheel' : 'mousewheel';
											this.isWindow &&
												(this._deleteScrollOnStart(t, n),
												this._addScrollOnEnd(t, n),
												this._addScrollOnCancel(t, n));
										},
									},
									{
										key: '_deleteScrollOnStart',
										value: function (e, t) {
											var n = this;
											H.on(
												this._element,
												'scrollStart.mdb.smoothScroll',
												function () {
													window.addEventListener(t, n._preventDefault, e),
														window.addEventListener(
															'touchmove',
															n._preventDefault,
															e
														);
												}
											);
										},
									},
									{
										key: '_addScrollOnEnd',
										value: function (e, t) {
											var n = this;
											H.on(
												this._element,
												'scrollEnd.mdb.smoothScroll',
												function () {
													window.removeEventListener(t, n._preventDefault, e),
														window.removeEventListener(
															'touchmove',
															n._preventDefault,
															e
														);
												}
											);
										},
									},
									{
										key: '_addScrollOnCancel',
										value: function (e, t) {
											var n = this;
											H.on(
												this._element,
												'scrollCancel.mdb.smoothScroll',
												function () {
													window.removeEventListener(t, n._preventDefault, e),
														window.removeEventListener(
															'touchmove',
															n._preventDefault,
															e
														);
												}
											);
										},
									},
									{
										key: '_motionLinear',
										value: function (e) {
											return e;
										},
									},
									{
										key: '_motionEaseInQuad',
										value: function (e) {
											return e * e;
										},
									},
									{
										key: '_motionEaseInCubic',
										value: function (e) {
											return e * e * e;
										},
									},
									{
										key: '_motionEaseInQuart',
										value: function (e) {
											return e * e * e * e;
										},
									},
									{
										key: '_motionEaseInQuint',
										value: function (e) {
											return e * e * e * e * e;
										},
									},
									{
										key: '_motionEaseInOutQuad',
										value: function (e) {
											return e < 0.5 ? 2 * e * e : (4 - 2 * e) * e - 1;
										},
									},
									{
										key: '_motionEaseInOutCubic',
										value: function (e) {
											return (e /= 0.5) < 1
												? (e * e * e) / 2
												: ((e -= 2) * e * e + 2) / 2;
										},
									},
									{
										key: '_motionEaseInOutQuart',
										value: function (e) {
											return (e /= 0.5) < 1
												? 0.5 * e * e * e * e
												: -((e -= 2) * e * e * e - 2) / 2;
										},
									},
									{
										key: '_motionEaseInOutQuint',
										value: function (e) {
											return (e /= 0.5) < 1
												? (e * e * e * e * e) / 2
												: ((e -= 2) * e * e * e * e + 2) / 2;
										},
									},
									{
										key: '_motionEaseOutQuad',
										value: function (e) {
											return -e * (e - 2);
										},
									},
									{
										key: '_motionEaseOutCubic',
										value: function (e) {
											return --e * e * e + 1;
										},
									},
									{
										key: '_motionEaseOutQuart',
										value: function (e) {
											return -(--e * e * e * e - 1);
										},
									},
									{
										key: '_motionEaseOutQuint',
										value: function (e) {
											return --e * e * e * e * e + 1;
										},
									},
									{
										key: 'isWindow',
										get: function () {
											return 'body' === this._options.container;
										},
									},
									{
										key: 'containerToScroll',
										get: function () {
											return this.isWindow
												? document.documentElement
												: V.findOne(
														this._options.container,
														document.documentElement
												  );
										},
									},
									{
										key: 'elFromHrefExist',
										get: function () {
											return !!V.findOne(this._href, this.containerToScroll);
										},
									},
									{
										key: 'offsetFromEl',
										get: function () {
											var e = this.containerToScroll.scrollTop,
												t = V.findOne(this._href, this.containerToScroll);
											return this.isWindow
												? F.offset(t).top - this._options.offset + e
												: t.getBoundingClientRect().y -
														this.containerToScroll.getBoundingClientRect().y -
														this._options.offset +
														e;
										},
									},
									{
										key: 'easingFunction',
										get: function () {
											var e = this._options.easing,
												e = '_motion'
													.concat(e[0].toUpperCase())
													.concat(e.slice(1));
											return this[e] || this._motionLinear;
										},
									},
								]) && Bg(e.prototype, t),
								n && Bg(e, n),
								i
							);
						})();
					V.find('a[data-mdb-smooth-scroll="smooth-scroll"]').forEach(function (
						e
					) {
						return Gg.getInstance(e) || new Gg(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[zg]),
								(t.fn[zg] = Gg.jQueryInterface),
								(t.fn[zg].Constructor = Gg),
								(t.fn[zg].noConflict = function () {
									return (t.fn[zg] = e), Gg.jQueryInterface;
								}));
						});
					var Qg = Gg;
					function $g(e) {
						return ($g =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Zg(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function eb(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Zg(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Zg(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function tb(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var nb = 'perfectScrollbar',
						ib = 'perfect-scrollbar',
						rb = 'mdb.perfectScrollbar',
						n = 'mdb',
						t = 'ps',
						ob = [
							{ mdb: 'scrollX.'.concat(n, '.').concat(t), ps: 'ps-scroll-x' },
							{ mdb: 'scrollY.'.concat(n, '.').concat(t), ps: 'ps-scroll-y' },
							{ mdb: 'scrollUp.'.concat(n, '.').concat(t), ps: 'ps-scroll-up' },
							{
								mdb: 'scrollDown.'.concat(n, '.').concat(t),
								ps: 'ps-scroll-down',
							},
							{
								mdb: 'scrollLeft.'.concat(n, '.').concat(t),
								ps: 'ps-scroll-left',
							},
							{
								mdb: 'scrollRight.'.concat(n, '.').concat(t),
								ps: 'ps-scroll-right',
							},
							{
								mdb: 'scrollXEnd.'.concat(n, '.').concat(t),
								ps: 'ps-x-reach-end',
							},
							{
								mdb: 'scrollYEnd.'.concat(n, '.').concat(t),
								ps: 'ps-y-reach-end',
							},
							{
								mdb: 'scrollXStart.'.concat(n, '.').concat(t),
								ps: 'ps-x-reach-start',
							},
							{
								mdb: 'scrollYStart.'.concat(n, '.').concat(t),
								ps: 'ps-y-reach-start',
							},
						],
						ab = {
							handlers: [
								'click-rail',
								'drag-thumb',
								'keyboard',
								'wheel',
								'touch',
							],
							wheelSpeed: 1,
							wheelPropagation: !0,
							swipeEasing: !0,
							minScrollbarLength: null,
							maxScrollbarLength: null,
							scrollingThreshold: 1e3,
							useBothWheelAxes: !1,
							suppressScrollX: !1,
							suppressScrollY: !1,
							scrollXMarginOffset: 0,
							scrollYMarginOffset: 0,
						},
						sb = {
							handlers: '(string|array)',
							wheelSpeed: 'number',
							wheelPropagation: 'boolean',
							swipeEasing: 'boolean',
							minScrollbarLength: '(number|null)',
							maxScrollbarLength: '(number|null)',
							scrollingThreshold: 'number',
							useBothWheelAxes: 'boolean',
							suppressScrollX: 'boolean',
							suppressScrollY: 'boolean',
							scrollXMarginOffset: 'number',
							scrollYMarginOffset: 'number',
						},
						lb = (function () {
							function i(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t)),
									(this.perfectScrollbar = null),
									this._element &&
										(m.setData(e, rb, this), F.addClass(this._element, ib)),
									this.init();
							}
							var e, t, n;
							return (
								(e = i),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, rb),
													t = 'object' === $g(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new i(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n]();
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, rb);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return nb;
										},
									},
								]),
								(t = [
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._element);
											return (
												void 0 !== t.handlers &&
													(t.handlers = t.handlers.split(' ')),
												(e = eb(eb(eb({}, ab), t), e)),
												s(nb, e, sb),
												e
											);
										},
									},
									{
										key: 'dispose',
										value: function () {
											m.removeData(this._element, rb),
												(this._element = null),
												(this._dataAttrOptions = null),
												(this._options = null),
												this.perfectScrollbar.destroy(),
												this.removeEvent(ob),
												(this.perfectScrollbar = null);
										},
									},
									{
										key: 'init',
										value: function () {
											(this.perfectScrollbar = new Ec(
												this._element,
												this._options
											)),
												this._initEvents(ob);
										},
									},
									{
										key: 'update',
										value: function () {
											return this.perfectScrollbar.update();
										},
									},
									{
										key: '_initEvents',
										value: function (e) {
											var i = this;
											(0 < arguments.length && void 0 !== e ? e : []).forEach(
												function (e) {
													var t = e.ps,
														n = e.mdb;
													return H.on(i._element, t, function (e) {
														return H.trigger(i._element, n, { e: e });
													});
												}
											);
										},
									},
									{
										key: 'removeEvent',
										value: function (t) {
											var n = this,
												e = [];
											'string' == typeof t &&
												(e = ob.filter(function (e) {
													return e.mdb === t;
												})),
												e.forEach(function (e) {
													var t = e.ps,
														e = e.mdb;
													H.off(n._element, t), H.off(n._element, e);
												});
										},
									},
								]) && tb(e.prototype, t),
								n && tb(e, n),
								i
							);
						})();
					V.find('[data-mdb-perfect-scrollbar="true"]').forEach(function (e) {
						return lb.getInstance(e) || new lb(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[nb]),
								(t.fn[nb] = lb.jQueryInterface),
								(t.fn[nb].Constructor = lb),
								(t.fn[nb].noConflict = function () {
									return (t.fn[nb] = e), lb.jQueryInterface;
								}));
						});
					var ub = lb;
					function cb(e) {
						return (cb =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function db(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function fb(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? db(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: db(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function hb(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var pb = 'loading',
						mb = 'mdb.loading',
						_b = '.loading-icon',
						vb = '.loading-text',
						yb = {
							backdrop: '(null|boolean)',
							backdropColor: 'string',
							backdropOpacity: '(number|string)',
							delay: '(null|number)',
							loader: 'string',
							loadingIcon: 'boolean',
							loadingText: 'boolean',
							scroll: 'boolean',
						},
						gb = {
							backdrop: !0,
							backdropColor: 'rgba(0, 0, 0)',
							backdropOpacity: 0.4,
							backdropID: '',
							delay: null,
							loader: '',
							parentSelector: null,
							scroll: !0,
							loadingText: !0,
							loadingIcon: !0,
						},
						bb = (function () {
							function i(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t)),
									this._element && m.setData(e, mb, this),
									(this._backdropElement = null),
									(this._parentElement = V.findOne(
										this._options.parentSelector
									)),
									(this._loadingIcon = V.findOne(_b, this._element)),
									(this._loadingText = V.findOne(vb, this._element)),
									this.init();
							}
							var e, t, n;
							return (
								(e = i),
								(n = [
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, mb);
										},
									},
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, mb),
													t = 'object' === cb(n) && n,
													e = e || new i(this, t);
												if ('string' == typeof n) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](this);
												}
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return pb;
										},
									},
								]),
								(t = [
									{
										key: 'toggle',
										value: function () {
											F.hasClass(this._element, 'show') || this.init();
										},
									},
									{
										key: 'init',
										value: function () {
											var e = this,
												t = this._loadingIcon.cloneNode(!0),
												n = this._loadingText.cloneNode(!0);
											this._removeElementsOnStart(),
												setTimeout(function () {
													F.addClass(e._element, 'loading-spinner'),
														e._setBackdrop(),
														e._setLoadingIcon(t),
														e._setLoadingText(n),
														e._setScrollOption(),
														H.trigger(e._element, 'show.mdb.loading');
												}, this._options.delay);
										},
									},
									{
										key: 'dispose',
										value: function () {
											m.removeData(this._element, mb),
												(this._backdropElement = null),
												(this._element = null),
												(this._options = null);
										},
									},
									{
										key: '_setBackdrop',
										value: function () {
											var e, t, n, i;
											this._options.backdrop &&
												((this._backdropElement =
													((e = this._options),
													(t = e.backdropID),
													(n = e.backdropOpacity),
													(i = e.backdropColor),
													(e = x('div')),
													F.addClass(e, 'loading-backdrop'),
													(e.id = t),
													F.addStyle(e, { opacity: n, backgroundColor: i }),
													e)),
												null !== this._parentElement
													? (F.addClass(this._element, 'position-absolute'),
													  F.addClass(
															this._parentElement,
															'position-relative'
													  ),
													  F.addClass(
															this._backdropElement,
															'position-absolute'
													  ),
													  this._parentElement.appendChild(
															this._backdropElement
													  ))
													: (F.addClass(this._element, 'position-fixed'),
													  document.body.appendChild(this._backdropElement),
													  document.body.appendChild(this._element)));
										},
									},
									{
										key: '_setLoadingIcon',
										value: function (e) {
											this._options.loadingIcon
												? (this._element.appendChild(e),
												  (e.id = this._options.loader))
												: e.remove();
										},
									},
									{
										key: '_setLoadingText',
										value: function (e) {
											this._options.loadingText
												? this._element.appendChild(e)
												: e.remove();
										},
									},
									{
										key: '_removeElementsOnStart',
										value: function () {
											null !== this._element &&
												(this._loadingIcon.remove(),
												this._loadingText.remove());
										},
									},
									{
										key: '_setScrollOption',
										value: function () {
											this._options.scroll
												? null !== this._parentElement
													? F.addStyle(this._parentElement, { overflow: '' })
													: (document.body.style.overflow = '')
												: null !== this._parentElement
												? F.addStyle(this._parentElement, {
														overflow: 'hidden',
												  })
												: (document.body.style.overflow = 'hidden');
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = fb(
												fb(fb({}, gb), F.getDataAttributes(this._element)),
												e
											);
											return s(pb, e, yb), e;
										},
									},
								]) && hb(e.prototype, t),
								n && hb(e, n),
								i
							);
						})();
					V.find('.loading').forEach(function (e) {
						return bb.getInstance(e) || new bb(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[pb]),
								(t.fn[pb] = bb.jQueryInterface),
								(t.fn[pb].Constructor = bb),
								(t.fn[pb].noConflict = function () {
									return (t.fn[pb] = e), bb.jQueryInterface;
								}));
						});
					var kb = bb;
					function wb(e) {
						return (
							(function (e) {
								if (Array.isArray(e)) return Mb(e);
							})(e) ||
							(function (e) {
								if (
									'undefined' != typeof Symbol &&
									Symbol.iterator in Object(e)
								)
									return Array.from(e);
							})(e) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Mb(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Mb(e, t);
							})(e) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Mb(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					var Lb = new Set([
							'background',
							'cite',
							'href',
							'itemtype',
							'longdesc',
							'poster',
							'src',
							'xlink:href',
						]),
						xb = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,
						Db =
							/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,
						Sb = function (e, t) {
							var n = e.nodeName.toLowerCase();
							if (t.includes(n))
								return (
									!Lb.has(n) ||
									Boolean(e.nodeValue.match(xb) || e.nodeValue.match(Db))
								);
							for (
								var i = t.filter(function (e) {
										return e instanceof RegExp;
									}),
									r = 0,
									o = i.length;
								r < o;
								r++
							)
								if (i[r].test(n)) return !0;
							return !1;
						},
						Tb = {
							'*': ['class', 'dir', 'id', 'lang', 'role', /^aria-[\w-]*$/i],
							a: ['target', 'href', 'title', 'rel'],
							area: [],
							b: [],
							br: [],
							col: [],
							code: [],
							div: [],
							em: [],
							hr: [],
							h1: [],
							h2: [],
							h3: [],
							h4: [],
							h5: [],
							h6: [],
							i: [],
							img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
							li: [],
							ol: [],
							p: [],
							pre: [],
							s: [],
							small: [],
							span: [],
							sub: [],
							sup: [],
							strong: [],
							u: [],
							ul: [],
						};
					function Ob(e, r, t) {
						if (!e.length) return e;
						if (t && 'function' == typeof t) return t(e);
						for (
							var t = new window.DOMParser().parseFromString(e, 'text/html'),
								o = Object.keys(r),
								a = (e = []).concat.apply(e, wb(t.body.querySelectorAll('*'))),
								n = 0,
								i = a.length;
							n < i;
							n++
						)
							(function (e) {
								var t = a[e],
									n = t.nodeName.toLowerCase();
								if (-1 === o.indexOf(n)) return t.parentNode.removeChild(t);
								var e = (e = []).concat.apply(e, wb(t.attributes)),
									i = [].concat(r['*'] || [], r[n] || []);
								e.forEach(function (e) {
									Sb(e, i) || t.removeAttribute(e.nodeName);
								});
							})(n);
						return t.body.innerHTML;
					}
					var Yb = 'autocomplete-item',
						Cb = 'autocomplete-loader',
						jb = 'spinner-border';
					function Eb(e, t) {
						var e = 0 < arguments.length && void 0 !== e ? e : [],
							t = 1 < arguments.length ? t : void 0,
							n = t.displayValue,
							i = t.itemContent;
						return '\n    '.concat(
							e
								.map(function (e, t) {
									e = 'function' == typeof i ? Ob(i(e), Tb, null) : n(e);
									return '<li data-mdb-index="'
										.concat(t, '" role="option" class="')
										.concat(Yb, '">')
										.concat(e, '</li>');
								})
								.join(''),
							'\n  '
						);
					}
					function Pb(e) {
						return (Pb =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Ab(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Hb(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Ab(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Ab(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Ib(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var Rb = {
							customContent: '',
							debounce: 300,
							displayValue: function (e) {
								return e;
							},
							filter: null,
							itemContent: null,
							listHeight: 190,
							noResults: 'No results found',
							threshold: 0,
						},
						Nb = {
							customContent: 'string',
							debounce: 'number',
							displayValue: 'function',
							filter: '(null|function)',
							itemContent: '(null|function)',
							listHeight: 'number',
							noResults: 'string',
							threshold: 'number',
						},
						Wb = 'autocomplete',
						Fb = 'mdb.autocomplete',
						Bb = 'active',
						zb = '.autocomplete-items-list',
						Vb = '.autocomplete-item',
						Ub = '.form-control',
						Xb = '.form-label',
						Jb = '.autocomplete-custom-content',
						n = '.'.concat(Fb),
						qb = 'close'.concat(n),
						Kb = 'open'.concat(n),
						Gb = 'itemSelect'.concat(n),
						Qb = 'update'.concat(n),
						$b = (function () {
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t)),
									(this._input = V.findOne(Ub, e)),
									(this._label = V.findOne(Xb, e)),
									(this._customContent = V.findOne(Jb, e)),
									(this._loader =
										((t = x('div')),
										F.addClass(t, Cb),
										F.addClass(t, jb),
										t.setAttribute('role', 'status'),
										(t.innerHTML = '<span class="sr-only">Loading...</span>'),
										t)),
									(this._popper = null),
									(this._debounceTimeoutId = null),
									(this._loaderTimeout = null),
									(this._activeItemIndex = -1),
									(this._activeItem = null),
									(this._filteredResults = null),
									(this._lastQueryValue = null),
									(this._canOpenOnFocus = !0),
									(this._isOpen = !1),
									(this._outsideClickHandler =
										this._handleOutsideClick.bind(this)),
									(this._inputFocusHandler = this._handleInputFocus.bind(this)),
									(this._userInputHandler = this._handleUserInput.bind(this)),
									(this._keydownHandler = this._handleKeydown.bind(this)),
									e && m.setData(e, Fb, this),
									this._init();
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, Fb),
													t = 'object' === Pb(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Fb);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return Wb;
										},
									},
								]),
								(t = [
									{
										key: 'initSearch',
										value: function (e) {
											this._filterResults(e);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._element);
											return (e = Hb(Hb(Hb({}, Rb), t), e)), s(Wb, e, Nb), e;
										},
									},
									{
										key: '_init',
										value: function () {
											this._initDropdown(),
												this._setInputAndLabelClasses(),
												this._updateLabelPosition(),
												this._setInputAriaAttributes(),
												this._listenToInputFocus(),
												this._listenToUserInput(),
												this._listenToKeydown();
										},
									},
									{
										key: '_initDropdown',
										value: function () {
											this._dropdownContainerId = d('autocomplete-dropdown-');
											var e,
												t,
												n,
												i,
												r,
												o = {
													id: this._dropdownContainerId,
													items: [],
													width: this._input.offsetWidth,
													options: this._options,
												};
											(this._dropdownContainer =
												((t = (e = o).id),
												(n = e.items),
												(i = e.width),
												(r = e.options),
												(o = x('div')),
												F.addClass(o, 'autocomplete-dropdown-container'),
												F.addStyle(o, { width: ''.concat(i, 'px') }),
												o.setAttribute('id', t),
												(e = x('div')),
												F.addClass(e, 'autocomplete-dropdown'),
												(i = x('ul')),
												(t = r.listHeight),
												F.addClass(i, 'autocomplete-items-list'),
												F.addStyle(i, { maxHeight: ''.concat(t, 'px') }),
												i.setAttribute('role', 'listbox'),
												(r = Eb(n, r)),
												(i.innerHTML = r),
												e.appendChild(i),
												o.appendChild(e),
												o)),
												'' !== this._options.customContent &&
													((o = Ob(this._options.customContent, Tb, null)),
													this.dropdown.insertAdjacentHTML('beforeend', o));
										},
									},
									{
										key: '_setInputAndLabelClasses',
										value: function () {
											F.addClass(this._input, 'autocomplete-input'),
												this._label &&
													F.addClass(this._label, 'autocomplete-label');
										},
									},
									{
										key: '_setInputAriaAttributes',
										value: function () {
											this._input.setAttribute('role', 'combobox'),
												this._input.setAttribute('aria-expanded', !1),
												this._input.setAttribute(
													'aria-owns',
													this._dropdownContainerId
												),
												this._input.setAttribute('aria-haspoup', !0),
												this._input.setAttribute('autocomplete', 'off');
										},
									},
									{
										key: '_updateLabelPosition',
										value: function () {
											this._label &&
												('' !== this._input.value || this._isOpen
													? F.addClass(this._label, Bb)
													: F.removeClass(this._label, Bb));
										},
									},
									{
										key: '_listenToInputFocus',
										value: function () {
											H.on(this._input, 'focus', this._inputFocusHandler);
										},
									},
									{
										key: '_handleInputFocus',
										value: function (e) {
											var t = e.target.value,
												e = this._options.threshold;
											this._canOpenOnFocus
												? t.length < e ||
												  (this._lastQueryValue !== t
														? this._filterResults(t)
														: this.open())
												: (this._canOpenOnFocus = !0);
										},
									},
									{
										key: '_listenToWindowResize',
										value: function () {
											H.on(
												window,
												'resize',
												this._handleWindowResize.bind(this)
											);
										},
									},
									{
										key: '_handleWindowResize',
										value: function () {
											this._dropdownContainer && this._updateDropdownWidth();
										},
									},
									{
										key: '_updateDropdownWidth',
										value: function () {
											var e = this._input.offsetWidth;
											F.addStyle(this._dropdownContainer, {
												width: ''.concat(e, 'px'),
											});
										},
									},
									{
										key: '_listenToUserInput',
										value: function () {
											H.on(this._input, 'input', this._userInputHandler);
										},
									},
									{
										key: '_handleUserInput',
										value: function (e) {
											var t = e.target.value,
												n = this._options.threshold,
												e = this._options.debounce;
											this.filter &&
												(t.length < n
													? this._isOpen && this.close()
													: this._debounceFilter(t, e));
										},
									},
									{
										key: '_debounceFilter',
										value: function (e, t) {
											var n = this;
											this._debounceTimeoutId &&
												clearTimeout(this._debounceTimeoutId),
												(this._debounceTimeoutId = setTimeout(function () {
													n._filterResults(e);
												}, t));
										},
									},
									{
										key: '_filterResults',
										value: function (e) {
											this._lastQueryValue = e;
											e = this.filter(e);
											this._isPromise(e)
												? this._asyncUpdateResults(e)
												: this._updateResults(e);
										},
									},
									{
										key: '_isPromise',
										value: function (e) {
											return !!e && 'function' == typeof e.then;
										},
									},
									{
										key: '_asyncUpdateResults',
										value: function (e) {
											var t = this;
											this._resetActiveItem(),
												this._showLoader(),
												e.then(function (e) {
													t._updateResults(e),
														(t._loaderTimeout = setTimeout(function () {
															t._hideLoader(), (t._loaderTimeout = null);
														}, 300));
												});
										},
									},
									{
										key: '_resetActiveItem',
										value: function () {
											var e = this._activeItem;
											e &&
												(F.removeClass(e, 'active'),
												(this._activeItem = null),
												(this._activeItemIndex = -1));
										},
									},
									{
										key: '_showLoader',
										value: function () {
											this._element.appendChild(this._loader);
										},
									},
									{
										key: '_hideLoader',
										value: function () {
											V.findOne('.autocomplete-loader', this._element) &&
												this._element.removeChild(this._loader);
										},
									},
									{
										key: '_updateResults',
										value: function (e) {
											this._resetActiveItem(),
												(this._filteredResults = e),
												H.trigger(this._element, Qb, { results: e });
											var t,
												n = V.findOne(
													'.autocomplete-items-list',
													this._dropdownContainer
												),
												i = Eb(e, this._options),
												t =
													((t = this._options.noResults),
													'<li class="'
														.concat(
															'autocomplete-item autocomplete-no-results',
															'">'
														)
														.concat(t, '</li>'));
											0 === e.length && '' !== this._options.noResults
												? (n.innerHTML = t)
												: (n.innerHTML = i),
												this._isOpen || this.open(),
												this._popper.forceUpdate();
										},
									},
									{
										key: '_listenToKeydown',
										value: function () {
											H.on(this._element, 'keydown', this._keydownHandler);
										},
									},
									{
										key: '_handleKeydown',
										value: function (e) {
											this._isOpen
												? this._handleOpenKeydown(e)
												: this._handleClosedKeydown(e);
										},
									},
									{
										key: '_handleOpenKeydown',
										value: function (e) {
											var t,
												n = e.keyCode;
											if (n === Hc || (38 === n && e.altKey) || 9 === n)
												return this.close(), void this._input.focus();
											switch (n) {
												case 40:
													this._setActiveItem(this._activeItemIndex + 1),
														this._scrollToItem(this._activeItem);
													break;
												case 38:
													this._setActiveItem(this._activeItemIndex - 1),
														this._scrollToItem(this._activeItem);
													break;
												case 36:
													this._setActiveItem(0),
														this._scrollToItem(this._activeItem);
													break;
												case 35:
													this._setActiveItem(this.items.length - 1),
														this._scrollToItem(this._activeItem);
													break;
												case 13:
													return void (
														-1 < this._activeItemIndex &&
														((t = this._filteredResults[this._activeItemIndex]),
														this._handleSelection(t))
													);
												default:
													return;
											}
											e.preventDefault();
										},
									},
									{
										key: '_setActiveItem',
										value: function (e) {
											var t = this.items;
											t[e] && this._updateActiveItem(t[e], e);
										},
									},
									{
										key: '_updateActiveItem',
										value: function (e, t) {
											var n = this._activeItem;
											n && F.removeClass(n, 'active'),
												F.addClass(e, 'active'),
												(this._activeItemIndex = t),
												(this._activeItem = e);
										},
									},
									{
										key: '_scrollToItem',
										value: function (e) {
											var t, n, i, r, o, a;
											e &&
												((n = (t = this.itemsList).offsetHeight),
												(a = this.items.indexOf(e)),
												(i = e.offsetHeight),
												(r = t.scrollTop),
												-1 < a &&
													((e = r + n < (o = a * i) + i),
													(a = o < r),
													(t.scrollTop = a ? o : e ? o - n + i : r)));
										},
									},
									{
										key: '_handleClosedKeydown',
										value: function (e) {
											e = e.keyCode;
											(13 !== e && 40 !== e && 40 !== e) || this.open();
										},
									},
									{
										key: 'open',
										value: function () {
											var e = this,
												t = H.trigger(this._element, Kb);
											this._isOpen ||
												t.defaultPrevented ||
												(this._updateDropdownWidth(),
												this._listenToWindowResize(),
												(this._popper = Nr(
													this._element,
													this._dropdownContainer
												)),
												document.body.appendChild(this._dropdownContainer),
												this._listenToOutsideClick(),
												this._listenToItemsClick(),
												setTimeout(function () {
													F.addClass(e.dropdown, 'open'),
														(e._isOpen = !0),
														e._setInputActiveStyles(),
														e._updateLabelPosition();
												}, 0));
										},
									},
									{
										key: '_listenToOutsideClick',
										value: function () {
											H.on(document, 'click', this._outsideClickHandler);
										},
									},
									{
										key: '_handleOutsideClick',
										value: function (e) {
											var t = this._input === e.target,
												n = e.target === this._dropdownContainer,
												e =
													this._dropdownContainer &&
													this._dropdownContainer.contains(e.target);
											t || n || e || this.close();
										},
									},
									{
										key: '_listenToItemsClick',
										value: function () {
											var e = V.findOne(zb, this._dropdownContainer);
											H.on(e, 'click', this._handleItemsClick.bind(this));
										},
									},
									{
										key: '_handleItemsClick',
										value: function (e) {
											(e = V.closest(e.target, Vb)),
												(e = F.getDataAttribute(e, 'index')),
												(e = this._filteredResults[e]);
											this._handleSelection(e);
										},
									},
									{
										key: '_handleSelection',
										value: function (e) {
											var t = this,
												n = this._options.displayValue(e);
											H.trigger(this._element, Gb, { value: e })
												.defaultPrevented ||
												setTimeout(function () {
													(t._canOpenOnFocus = !1),
														t._updateInputValue(n),
														t._updateLabelPosition(),
														t._input.focus(),
														t.close();
												}, 0);
										},
									},
									{
										key: '_updateInputValue',
										value: function (e) {
											this._input.value = e;
										},
									},
									{
										key: '_setInputActiveStyles',
										value: function () {
											F.addClass(this._input, 'focused');
										},
									},
									{
										key: 'close',
										value: function () {
											var e = H.trigger(this._element, qb);
											this._isOpen &&
												!e.defaultPrevented &&
												(this._resetActiveItem(),
												this._removeDropdownEvents(),
												F.removeClass(this.dropdown, 'open'),
												H.on(
													this.dropdown,
													'transitionend',
													this._handleDropdownTransitionEnd.bind(this)
												),
												F.removeClass(this._input, 'focused'),
												F.removeClass(this._input, Bb),
												this._input.value || F.removeClass(this._label, Bb));
										},
									},
									{
										key: '_removeDropdownEvents',
										value: function () {
											var e = V.findOne(zb, this._dropdownContainer);
											H.off(e, 'click'),
												H.off(document, 'click', this._outsideClickHandler),
												H.off(
													window,
													'resize',
													this._handleWindowResize.bind(this)
												);
										},
									},
									{
										key: '_handleDropdownTransitionEnd',
										value: function (e) {
											this._isOpen &&
												e &&
												'opacity' === e.propertyName &&
												(this._popper.destroy(),
												this._dropdownContainer &&
													document.body.removeChild(this._dropdownContainer),
												(this._isOpen = !1),
												H.off(this.dropdown, 'transitionend'));
										},
									},
									{
										key: 'dispose',
										value: function () {
											this._isOpen && this.close(),
												this._removeInputAndElementEvents(),
												m.removeData(this._element, Fb);
										},
									},
									{
										key: '_removeInputAndElementEvents',
										value: function () {
											H.off(this._input, 'focus', this._inputFocusHandler),
												H.off(this._input, 'input', this._userInputHandler),
												H.off(this._element, 'keydown', this._keydownHandler);
										},
									},
									{
										key: 'filter',
										get: function () {
											return this._options.filter;
										},
									},
									{
										key: 'dropdown',
										get: function () {
											return V.findOne(
												'.autocomplete-dropdown',
												this._dropdownContainer
											);
										},
									},
									{
										key: 'items',
										get: function () {
											return V.find(Vb, this._dropdownContainer);
										},
									},
									{
										key: 'itemsList',
										get: function () {
											return V.findOne(zb, this._dropdownContainer);
										},
									},
								]) && Ib(e.prototype, t),
								n && Ib(e, n),
								r
							);
						})(),
						Zb = $b;
					function ek(e) {
						return (ek =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function tk(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function nk(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? tk(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: tk(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function ik(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function rk(e, t, n) {
						return (rk =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = sk(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function ok(e, t) {
						return (ok =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function ak(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = sk(n);
							return (
								(e = i
									? ((e = sk(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== ek(e) && 'function' != typeof e)
									? (function (e) {
											if (void 0 !== e) return e;
											throw new ReferenceError(
												"this hasn't been initialised - super() hasn't been called"
											);
									  })(t)
									: e
							);
						};
					}
					function sk(e) {
						return (sk = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					l(function () {
						var e,
							t = r();
						t &&
							((e = t.fn[Wb]),
							(t.fn[Wb] = $b.jQueryInterface),
							(t.fn[Wb].Constructor = $b),
							(t.fn[Wb].noConflict = function () {
								return (t.fn[Wb] = e), $b.jQueryInterface;
							}));
					});
					var lk = '.'.concat('bs.modal'),
						uk = { backdrop: !0, keyboard: !0, focus: !0 },
						ck = {
							backdrop: '(boolean|string)',
							keyboard: 'boolean',
							focus: 'boolean',
						},
						dk = 'hide'.concat(lk),
						fk = 'hidePrevented'.concat(lk),
						hk = 'hidden'.concat(lk),
						pk = 'show'.concat(lk),
						mk = 'shown'.concat(lk),
						_k = 'focusin'.concat(lk),
						vk = 'resize'.concat(lk),
						yk = 'click.dismiss'.concat(lk),
						gk = 'keydown.dismiss'.concat(lk),
						bk = 'mouseup.dismiss'.concat(lk),
						kk = 'mousedown.dismiss'.concat(lk),
						t = 'click'.concat(lk).concat('.data-api'),
						wk = 'modal-open',
						Mk = 'modal-static',
						Lk = '.modal-dialog',
						xk = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && ok(e, t);
							})(r, Ie);
							var e,
								t,
								n,
								i = ak(r);
							function r(e, t) {
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((e = i.call(this, e))._config = e._getConfig(t)),
									(e._dialog = J.findOne(Lk, e._element)),
									(e._backdrop = e._initializeBackDrop()),
									(e._isShown = !1),
									(e._ignoreBackdropClick = !1),
									(e._isTransitioning = !1),
									e
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (t, n) {
											return this.each(function () {
												var e =
													r.getInstance(this) ||
													new r(this, 'object' === ek(t) ? t : {});
												if ('string' == typeof t) {
													if (void 0 === e[t])
														throw new TypeError(
															'No method named "'.concat(t, '"')
														);
													e[t](n);
												}
											});
										},
									},
									{
										key: 'Default',
										get: function () {
											return uk;
										},
									},
									{
										key: 'NAME',
										get: function () {
											return 'modal';
										},
									},
								]),
								(t = [
									{
										key: 'toggle',
										value: function (e) {
											return this._isShown ? this.hide() : this.show(e);
										},
									},
									{
										key: 'show',
										value: function (e) {
											var t,
												n = this;
											this._isShown ||
												this._isTransitioning ||
												(this._isAnimated() && (this._isTransitioning = !0),
												(t = Ae.trigger(this._element, pk, {
													relatedTarget: e,
												})),
												this._isShown ||
													t.defaultPrevented ||
													((this._isShown = !0),
													Wt(),
													document.body.classList.add(wk),
													this._adjustDialog(),
													this._setEscapeEvent(),
													this._setResizeEvent(),
													Ae.on(
														this._element,
														yk,
														'[data-mdb-dismiss="modal"]',
														function (e) {
															return n.hide(e);
														}
													),
													Ae.on(this._dialog, kk, function () {
														Ae.one(n._element, bk, function (e) {
															e.target === n._element &&
																(n._ignoreBackdropClick = !0);
														});
													}),
													this._showBackdrop(function () {
														return n._showElement(e);
													})));
										},
									},
									{
										key: 'hide',
										value: function (e) {
											var t = this;
											e && e.preventDefault(),
												this._isShown &&
													!this._isTransitioning &&
													(Ae.trigger(this._element, dk).defaultPrevented ||
														((this._isShown = !1),
														(e = this._isAnimated()) &&
															(this._isTransitioning = !0),
														this._setEscapeEvent(),
														this._setResizeEvent(),
														Ae.off(document, _k),
														this._element.classList.remove('show'),
														Ae.off(this._element, yk),
														Ae.off(this._dialog, kk),
														this._queueCallback(
															function () {
																return t._hideModal();
															},
															this._element,
															e
														)));
										},
									},
									{
										key: 'dispose',
										value: function () {
											[window, this._dialog].forEach(function (e) {
												return Ae.off(e, lk);
											}),
												this._backdrop.dispose(),
												rk(sk(r.prototype), 'dispose', this).call(this),
												Ae.off(document, _k);
										},
									},
									{
										key: 'handleUpdate',
										value: function () {
											this._adjustDialog();
										},
									},
									{
										key: '_initializeBackDrop',
										value: function () {
											return new tn({
												isVisible: Boolean(this._config.backdrop),
												isAnimated: this._isAnimated(),
											});
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											return (
												(e = nk(
													nk(nk({}, uk), yt.getDataAttributes(this._element)),
													e
												)),
												ne('modal', e, ck),
												e
											);
										},
									},
									{
										key: '_showElement',
										value: function (e) {
											var t = this,
												n = this._isAnimated(),
												i = J.findOne('.modal-body', this._dialog);
											(this._element.parentNode &&
												this._element.parentNode.nodeType ===
													Node.ELEMENT_NODE) ||
												document.body.appendChild(this._element),
												(this._element.style.display = 'block'),
												this._element.removeAttribute('aria-hidden'),
												this._element.setAttribute('aria-modal', !0),
												this._element.setAttribute('role', 'dialog'),
												(this._element.scrollTop = 0),
												i && (i.scrollTop = 0),
												n && se(this._element),
												this._element.classList.add('show'),
												this._config.focus && this._enforceFocus();
											this._queueCallback(
												function () {
													t._config.focus && t._element.focus(),
														(t._isTransitioning = !1),
														Ae.trigger(t._element, mk, { relatedTarget: e });
												},
												this._dialog,
												n
											);
										},
									},
									{
										key: '_enforceFocus',
										value: function () {
											var t = this;
											Ae.off(document, _k),
												Ae.on(document, _k, function (e) {
													document === e.target ||
														t._element === e.target ||
														t._element.contains(e.target) ||
														t._element.focus();
												});
										},
									},
									{
										key: '_setEscapeEvent',
										value: function () {
											var t = this;
											this._isShown
												? Ae.on(this._element, gk, function (e) {
														t._config.keyboard && 'Escape' === e.key
															? (e.preventDefault(), t.hide())
															: t._config.keyboard ||
															  'Escape' !== e.key ||
															  t._triggerBackdropTransition();
												  })
												: Ae.off(this._element, gk);
										},
									},
									{
										key: '_setResizeEvent',
										value: function () {
											var e = this;
											this._isShown
												? Ae.on(window, vk, function () {
														return e._adjustDialog();
												  })
												: Ae.off(window, vk);
										},
									},
									{
										key: '_hideModal',
										value: function () {
											var e = this;
											(this._element.style.display = 'none'),
												this._element.setAttribute('aria-hidden', !0),
												this._element.removeAttribute('aria-modal'),
												this._element.removeAttribute('role'),
												(this._isTransitioning = !1),
												this._backdrop.hide(function () {
													document.body.classList.remove(wk),
														e._resetAdjustments(),
														Ft(),
														Ae.trigger(e._element, hk);
												});
										},
									},
									{
										key: '_showBackdrop',
										value: function (e) {
											var t = this;
											Ae.on(this._element, yk, function (e) {
												t._ignoreBackdropClick
													? (t._ignoreBackdropClick = !1)
													: e.target === e.currentTarget &&
													  (!0 === t._config.backdrop
															? t.hide()
															: 'static' === t._config.backdrop &&
															  t._triggerBackdropTransition());
											}),
												this._backdrop.show(e);
										},
									},
									{
										key: '_isAnimated',
										value: function () {
											return this._element.classList.contains('fade');
										},
									},
									{
										key: '_triggerBackdropTransition',
										value: function () {
											var e,
												t,
												n = this;
											Ae.trigger(this._element, fk).defaultPrevented ||
												((e =
													this._element.scrollHeight >
													document.documentElement.clientHeight) ||
													(this._element.style.overflowY = 'hidden'),
												this._element.classList.add(Mk),
												(t = $(this._dialog)),
												Ae.off(this._element, 'transitionend'),
												Ae.one(this._element, 'transitionend', function () {
													n._element.classList.remove(Mk),
														e ||
															(Ae.one(n._element, 'transitionend', function () {
																n._element.style.overflowY = '';
															}),
															te(n._element, t));
												}),
												te(this._element, t),
												this._element.focus());
										},
									},
									{
										key: '_adjustDialog',
										value: function () {
											var e =
													this._element.scrollHeight >
													document.documentElement.clientHeight,
												t = Nt(),
												n = 0 < t;
											((!n && e && !ue()) || (n && !e && ue())) &&
												(this._element.style.paddingLeft = ''.concat(t, 'px')),
												((n && !e && !ue()) || (!n && e && ue())) &&
													(this._element.style.paddingRight = ''.concat(
														t,
														'px'
													));
										},
									},
									{
										key: '_resetAdjustments',
										value: function () {
											(this._element.style.paddingLeft = ''),
												(this._element.style.paddingRight = '');
										},
									},
								]) && ik(e.prototype, t),
								n && ik(e, n),
								r
							);
						})();
					Ae.on(document, t, '[data-mdb-toggle="modal"]', function (e) {
						var t = this,
							n = Q(this);
						['A', 'AREA'].includes(this.tagName) && e.preventDefault(),
							Ae.one(n, pk, function (e) {
								e.defaultPrevented ||
									Ae.one(n, hk, function () {
										ie(t) && t.focus();
									});
							}),
							(xk.getInstance(n) || new xk(n)).toggle(this);
					}),
						pe(xk);
					var Dk = xk,
						Sk = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',
						Tk = '.sticky-top',
						Ok = function (e, n) {
							V.find(e).forEach(function (e) {
								var t = F.getDataAttribute(e, n);
								void 0 === t
									? e.style.removeProperty(n)
									: (F.removeDataAttribute(e, n), (e.style[n] = t));
							});
						};
					function Yk(e) {
						return (Yk =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Ck(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function jk(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Ck(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: Ck(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function Ek(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Pk(e, t, n) {
						return (Pk =
							'undefined' != typeof Reflect && Reflect.get
								? Reflect.get
								: function (e, t, n) {
										e = (function (e, t) {
											for (
												;
												!Object.prototype.hasOwnProperty.call(e, t) &&
												null !== (e = Rk(e));

											);
											return e;
										})(e, t);
										if (e) {
											t = Object.getOwnPropertyDescriptor(e, t);
											return t.get ? t.get.call(n) : t.value;
										}
								  })(e, t, n || e);
					}
					function Ak(e, t) {
						return (Ak =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Hk(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Rk(n);
							return (
								(e = i
									? ((e = Rk(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Yk(e) && 'function' != typeof e)
									? Ik(t)
									: e
							);
						};
					}
					function Ik(e) {
						if (void 0 === e)
							throw new ReferenceError(
								"this hasn't been initialised - super() hasn't been called"
							);
						return e;
					}
					function Rk(e) {
						return (Rk = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					var Nk = 'modal',
						Wk = 'bs.modal',
						n = '.'.concat(Wk),
						Fk = 'modal-non-invasive-open',
						Bk = 'modal-non-invasive-show',
						zk = '.'.concat('modal-content'),
						Vk = '.'.concat('modal-bottom'),
						Uk = '.'.concat('modal-bottom-right'),
						Xk = '.'.concat('modal-bottom-left'),
						Jk = '.'.concat('modal-top-right'),
						qk = '.'.concat('modal-top-left'),
						Kk = '.'.concat('modal-dialog-scrollable'),
						t = 'mousedown'.concat(n).concat('.data-api'),
						Gk = 'show'.concat(n),
						Qk = 'shown'.concat(n),
						$k = 'hidden'.concat(n),
						Zk = 'hide.bs.modal',
						ew = 'hidePrevented.bs.modal',
						tw = {
							backdrop: !0,
							keyboard: !0,
							focus: !0,
							show: !0,
							modalNonInvasive: !1,
						},
						nw = {
							backdrop: '(boolean|string)',
							keyboard: 'boolean',
							focus: 'boolean',
							show: 'boolean',
							modalNonInvasive: 'boolean',
						},
						iw = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Ak(e, t);
							})(r, Dk);
							var e,
								t,
								n,
								i = Hk(r);
							function r(e, t) {
								var n;
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									((n = i.call(this, e, t))._config = n._getConfig(t)),
									(n._modalRect = ''),
									(n._modalComputedStyles = ''),
									(n._isNonInvasive = n._config.modalNonInvasive),
									(n._isScrollable = ''),
									(n._isBottomRight = ''),
									(n._isBottomLeft = ''),
									(n._isTopRight = ''),
									(n._isTopLeft = ''),
									(n._isSideTopModal = ''),
									(n._isSideBottomModal = ''),
									(n._isSideModal = ''),
									(n._isModalBottom = ''),
									n._isNonInvasive &&
										((n._config.backdrop = !1),
										(n._isBodyOverflowing = !0),
										n._onModalShow(),
										n._onModalShown(),
										n._onModalHidden()),
									m.setData(e, Wk, Ik(n)),
									n._bindEvents(),
									n
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, Wk),
													t = jk(
														jk(jk({}, tw), F.getDataAttributes(this)),
														'object' === Yk(n) && n ? n : {}
													),
													e = e || new r(this, t);
												if ('string' == typeof n) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												} else t.show && e.show(i);
											});
										},
									},
									{
										key: 'NAME',
										get: function () {
											return Nk;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, Gk),
												H.off(this._element, Qk),
												H.off(this._element, Zk),
												H.off(this._element, $k),
												H.off(this._element, ew),
												(this._modalRect = null),
												(this._modalComputedStyles = null),
												(this._isNonInvasive = null),
												(this._isScrollable = null),
												(this._isBottomRight = null),
												(this._isBottomLeft = null),
												(this._isTopRight = null),
												(this._isTopLeft = null),
												(this._isSideTopModal = null),
												(this._isSideBottomModal = null),
												(this._isSideModal = null),
												(this._isModalBottom = null),
												Pk(Rk(r.prototype), 'dispose', this).call(this);
										},
									},
									{
										key: '_onModalShow',
										value: function () {
											var e = this;
											H.on(this._element, Gk, function () {
												e._addNonInvasiveClass();
											});
										},
									},
									{
										key: '_onModalShown',
										value: function () {
											var t = this;
											H.on(this._element, Qk, function () {
												var e = V.findOne(zk, t._element);
												(t._isScrollable = V.findOne(Kk, t._element)),
													(t._isBottomRight = V.findOne(Uk, t._element)),
													(t._isBottomLeft = V.findOne(Xk, t._element)),
													(t._isTopRight = V.findOne(Jk, t._element)),
													(t._isTopLeft = V.findOne(qk, t._element)),
													(t._isSideTopModal = t._isTopLeft || t._isTopRight),
													(t._isSideBottomModal =
														t._isBottomLeft || t._isBottomRight),
													(t._isSideModal =
														t._isSideTopModal || t._isSideBottomModal),
													(t._isModalBottom = V.findOne(Vk, t._element)),
													(t._modalRect = e.getBoundingClientRect()),
													(t._modalComputedStyles = window.getComputedStyle(e)),
													t._addOpenClass(),
													t._setStyles();
											});
										},
									},
									{
										key: '_adjustDialog',
										value: function () {
											Pk(Rk(r.prototype), '_adjustDialog', this).call(this);
											var e = document.body.classList.contains(Fk);
											(this._isNonInvasive || e) &&
												(this._isBodyOverflowing = !1),
												this._isNonInvasive &&
													(this._backdrop.hide(),
													this._resetAdjustments(),
													Ok('body', 'overflow'),
													Ok('body', 'paddingRight'),
													Ok(Sk, 'paddingRight'),
													Ok(Tk, 'marginRight'));
										},
									},
									{
										key: '_onModalHidden',
										value: function () {
											var t = this;
											H.on(this._element, $k, function (e) {
												e.stopImmediatePropagation(),
													t._removeOpenClass(),
													t._resetStyles(),
													t._removeNonInvasiveClass();
											});
										},
									},
									{
										key: '_addOpenClass',
										value: function () {
											this._element.classList.add(Bk);
										},
									},
									{
										key: '_removeOpenClass',
										value: function () {
											this._element.classList.remove(Bk);
										},
									},
									{
										key: '_addNonInvasiveClass',
										value: function () {
											document.body.classList.add(Fk);
										},
									},
									{
										key: '_removeNonInvasiveClass',
										value: function () {
											V.findOne(
												'.'.concat('modal', '.').concat('show', '.').concat(Bk),
												document.body
											)
												? document.body.classList.add('modal-open')
												: document.body.classList.remove(Fk);
										},
									},
									{
										key: '_setStyles',
										value: function () {
											var e = 992 <= window.innerWidth;
											(this._element.style.left = ''.concat(
												this._modalRect.left,
												'px'
											)),
												(this._element.style.width =
													this._modalComputedStyles.width),
												this._isScrollable ||
													((this._element.style.height =
														this._modalComputedStyles.height),
													(this._element.style.display = '')),
												e &&
													((this._isSideBottomModal || this._isModalBottom) &&
														(this._element.style.top = ''.concat(
															this._modalRect.top,
															'px'
														)),
													this._isSideModal &&
														(this._element.style.overflowX = 'auto'));
										},
									},
									{
										key: '_resetStyles',
										value: function () {
											(this._element.style.left = ''),
												(this._element.style.top = ''),
												(this._element.style.height = ''),
												(this._element.style.width = ''),
												this._isScrollable ||
													(this._element.style.display = ''),
												this._isSideModal &&
													(this._element.style.overflowX = '');
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t;
											this._element && (t = o(this._element));
											e = jk(
												jk(
													jk(jk({}, tw), F.getDataAttributes(this._element)),
													F.getDataAttributes(t)
												),
												e
											);
											return s(Nk, e, nw), e;
										},
									},
									{
										key: '_bindEvents',
										value: function () {
											this._bindShowEvent(),
												this._bindShownEvent(),
												this._bindHideEvent(),
												this._bindHiddenEvent(),
												this._bindHidePreventedEvent();
										},
									},
									{
										key: '_bindShowEvent',
										value: function () {
											var t = this;
											H.on(this._element, Gk, function (e) {
												H.trigger(t._element, 'show.mdb.modal', {
													relatedTarget: e.relatedTarget,
												});
											});
										},
									},
									{
										key: '_bindShownEvent',
										value: function () {
											var t = this;
											H.on(this._element, Qk, function (e) {
												H.trigger(t._element, 'shown.mdb.modal', {
													relatedTarget: e.relatedTarget,
												});
											});
										},
									},
									{
										key: '_bindHideEvent',
										value: function () {
											var e = this;
											H.on(this._element, Zk, function () {
												H.trigger(e._element, 'hide.mdb.modal');
											});
										},
									},
									{
										key: '_bindHiddenEvent',
										value: function () {
											var e = this;
											H.on(this._element, $k, function () {
												H.trigger(e._element, 'hidden.mdb.modal');
											});
										},
									},
									{
										key: '_bindHidePreventedEvent',
										value: function () {
											var e = this;
											H.on(this._element, ew, function () {
												H.trigger(e._element, 'hidePrevented.mdb.modal');
											});
										},
									},
								]) && Ek(e.prototype, t),
								n && Ek(e, n),
								r
							);
						})();
					H.on(document, t, '[data-mdb-toggle="modal"]', function (e) {
						var t = o(e.target);
						m.getData(t, Wk) ||
							((e = jk(
								jk({}, F.getDataAttributes(t)),
								F.getDataAttributes(this._element)
							)),
							new iw(t, e));
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Nk]),
								(t.fn[Nk] = iw.jQueryInterface),
								(t.fn[Nk].Constructor = iw),
								(t.fn[Nk].noConflict = function () {
									return (t.fn[Nk] = e), iw.jQueryInterface;
								}));
						});
					var rw = iw;
					function ow(e) {
						return (ow =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function aw(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function sw(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? aw(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: aw(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function lw(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var uw = 'clipboard',
						cw = 'mdb.clipboard',
						pe = '.'.concat(cw),
						dw = { clipboardTarget: null },
						fw = { clipboardTarget: 'null|string' },
						hw = 'copy'.concat(pe),
						pw = (function () {
							function i(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = t),
									this._element &&
										(m.setData(e, cw, this),
										(this._initCopy = this._initCopy.bind(this)),
										this._setup());
							}
							var e, t, n;
							return (
								(e = i),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, cw),
													t = 'object' === ow(n) && n,
													e = e || new i(this, t);
												if ('string' == typeof n) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](this);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, cw);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return uw;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, 'click', this._initCopy),
												m.removeData(this._element, cw),
												(this._element = null);
										},
									},
									{
										key: '_setup',
										value: function () {
											H.on(this._element, 'click', this._initCopy);
										},
									},
									{
										key: '_initCopy',
										value: function () {
											var e = this._createNewInput();
											document.body.appendChild(e),
												this._selectInput(e),
												H.trigger(this._element, hw, {
													copyText: this.copyText,
												}),
												e.remove();
										},
									},
									{
										key: '_createNewInput',
										value: function () {
											var e = x('input');
											return (
												(e.value = this.copyText),
												F.style(e, { left: '-9999px', position: 'absolute' }),
												e
											);
										},
									},
									{
										key: '_selectInput',
										value: function (e) {
											e.select(),
												e.setSelectionRange(0, 99999),
												document.execCommand('copy');
										},
									},
									{
										key: 'options',
										get: function () {
											var e = sw(
												sw(sw({}, dw), F.getDataAttributes(this._element)),
												this._options
											);
											return s(uw, e, fw), e;
										},
									},
									{
										key: 'clipboardTarget',
										get: function () {
											return V.findOne(this.options.clipboardTarget);
										},
									},
									{
										key: 'copyText',
										get: function () {
											var e = this.clipboardTarget.hasAttribute(
													'data-mdb-clipboard-text'
												),
												t = this.clipboardTarget.value,
												n = this.clipboardTarget.textContent;
											return e
												? this.clipboardTarget.getAttribute(
														'data-mdb-clipboard-text'
												  )
												: t || n;
										},
									},
								]) && lw(e.prototype, t),
								n && lw(e, n),
								i
							);
						})();
					V.find('.clipboard').forEach(function (e) {
						return pw.getInstance(e) || new pw(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[uw]),
								(t.fn[uw] = pw.jQueryInterface),
								(t.fn[uw].Constructor = pw),
								(t.fn[uw].noConflict = function () {
									return (t.fn[uw] = e), pw.jQueryInterface;
								}));
						});
					var mw = pw;
					function _w(e) {
						return (_w =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function vw(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function yw(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? vw(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: vw(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function gw(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var bw = 'chip',
						kw = 'mdb.'.concat(bw),
						ww = '.close',
						Mw = { text: 'string', closeIcon: 'boolean', img: 'object' },
						Lw = { text: '', closeIcon: !1, img: { path: '', alt: '' } },
						xw = (function () {
							function i(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								!(function (e) {
									if (!(e instanceof i))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t));
							}
							var e, t, n;
							return (
								(e = i),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, kw),
													t = 'object' === _w(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new i(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n]();
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, kw);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return bw;
										},
									},
								]),
								(t = [
									{
										key: 'init',
										value: function () {
											this._appendCloseIcon(),
												this._handleDelete(),
												this._handleTextChip(),
												this._handleClickOnChip();
										},
									},
									{
										key: 'dispose',
										value: function () {
											(this._element = null),
												(this._options = null),
												H.off(this._element, 'click');
										},
									},
									{
										key: 'appendChip',
										value: function () {
											var e = this._options;
											return (function (e) {
												e = e.text;
												return '<div class="chip btn"><span class="text-chip">'.concat(
													e,
													'</span> <i class="close fas fa-times"></i></div>'
												);
											})({ text: e.text, closeIcon: e.closeIcon });
										},
									},
									{
										key: '_appendCloseIcon',
										value: function (e) {
											var t =
												0 < arguments.length && void 0 !== e
													? e
													: this._element;
											0 < V.find(ww, this._element).length ||
												(this._options.closeIcon &&
													(((e = x('i')).classList = 'close fas fa-times'),
													t.insertAdjacentElement('beforeend', e)));
										},
									},
									{
										key: '_handleClickOnChip',
										value: function () {
											H.on(this._element, 'click', function (e) {
												var t = e.target.textContent,
													n = {};
												(n.tag = t.trim()),
													H.trigger('select.mdb.chip', { event: e, obj: n });
											});
										},
									},
									{
										key: '_handleDelete',
										value: function () {
											var t = this;
											0 !== V.find(ww, this._element).length &&
												H.on(this._element, 'click', ww, function (e) {
													H.trigger('delete.mdb.chip', e), t._element.remove();
												});
										},
									},
									{
										key: '_handleTextChip',
										value: function () {
											'' === this._element.innerText &&
												(this._element.innerText = this._options.text);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = yw(
												yw(yw({}, Lw), F.getDataAttributes(this._element)),
												e
											);
											return s(bw, e, Mw), e;
										},
									},
								]) && gw(e.prototype, t),
								n && gw(e, n),
								i
							);
						})();
					V.find('.'.concat(bw)).forEach(function (e) {
						return (xw.getInstance(e) || new xw(e)).init();
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn.chip),
								(t.fn.chip = xw.jQueryInterface),
								(t.fn.chip.Constructor = xw),
								(t.fn.chip.noConflict = function () {
									return (t.fn.chip = e), xw.jQueryInterface;
								}));
						});
					var Dw = xw;
					function Sw(e) {
						return (Sw =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function Tw(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function Ow(t) {
						for (var e = 1; e < arguments.length; e++) {
							var n = null != arguments[e] ? arguments[e] : {};
							e % 2
								? Tw(Object(n), !0).forEach(function (e) {
										Iw(t, e, n[e]);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										t,
										Object.getOwnPropertyDescriptors(n)
								  )
								: Tw(Object(n)).forEach(function (e) {
										Object.defineProperty(
											t,
											e,
											Object.getOwnPropertyDescriptor(n, e)
										);
								  });
						}
						return t;
					}
					function Yw(e, t) {
						return (
							(function (e) {
								if (Array.isArray(e)) return e;
							})(e) ||
							(function (e, t) {
								if (
									'undefined' == typeof Symbol ||
									!(Symbol.iterator in Object(e))
								)
									return;
								var n = [],
									i = !0,
									r = !1,
									o = void 0;
								try {
									for (
										var a, s = e[Symbol.iterator]();
										!(i = (a = s.next()).done) &&
										(n.push(a.value), !t || n.length !== t);
										i = !0
									);
								} catch (e) {
									(r = !0), (o = e);
								} finally {
									try {
										i || null == s.return || s.return();
									} finally {
										if (r) throw o;
									}
								}
								return n;
							})(e, t) ||
							(function (e, t) {
								if (!e) return;
								if ('string' == typeof e) return Cw(e, t);
								var n = Object.prototype.toString.call(e).slice(8, -1);
								'Object' === n && e.constructor && (n = e.constructor.name);
								if ('Map' === n || 'Set' === n) return Array.from(e);
								if (
									'Arguments' === n ||
									/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
								)
									return Cw(e, t);
							})(e, t) ||
							(function () {
								throw new TypeError(
									'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
								);
							})()
						);
					}
					function Cw(e, t) {
						(null == t || t > e.length) && (t = e.length);
						for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
						return i;
					}
					function jw(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					function Ew(e, t) {
						return (Ew =
							Object.setPrototypeOf ||
							function (e, t) {
								return (e.__proto__ = t), e;
							})(e, t);
					}
					function Pw(n) {
						var i = (function () {
							if ('undefined' == typeof Reflect || !Reflect.construct)
								return !1;
							if (Reflect.construct.sham) return !1;
							if ('function' == typeof Proxy) return !0;
							try {
								return (
									Date.prototype.toString.call(
										Reflect.construct(Date, [], function () {})
									),
									!0
								);
							} catch (e) {
								return !1;
							}
						})();
						return function () {
							var e,
								t = Hw(n);
							return (
								(e = i
									? ((e = Hw(this).constructor),
									  Reflect.construct(t, arguments, e))
									: t.apply(this, arguments)),
								(t = this),
								!(e = e) || ('object' !== Sw(e) && 'function' != typeof e)
									? Aw(t)
									: e
							);
						};
					}
					function Aw(e) {
						if (void 0 === e)
							throw new ReferenceError(
								"this hasn't been initialised - super() hasn't been called"
							);
						return e;
					}
					function Hw(e) {
						return (Hw = Object.setPrototypeOf
							? Object.getPrototypeOf
							: function (e) {
									return e.__proto__ || Object.getPrototypeOf(e);
							  })(e);
					}
					function Iw(e, t, n) {
						return (
							t in e
								? Object.defineProperty(e, t, {
										value: n,
										enumerable: !0,
										configurable: !0,
										writable: !0,
								  })
								: (e[t] = n),
							e
						);
					}
					var Rw = 'chips',
						Nw = 'mdb.'.concat(Rw),
						Ww = 'active',
						Fw = ''.concat(Rw, '-initial'),
						Bw = ''.concat(Rw, '-placeholder'),
						zw = 'chip-opacity',
						Vw = ''.concat(Rw, '-padding'),
						Uw = ''.concat(Rw, '-transition'),
						Xw = ''.concat(Rw, '-input-wrapper'),
						Jw = ''.concat('.chip', '.').concat(Ww),
						qw = 'delete.mdb.chips',
						Kw = 'select.mdb.chips',
						Gw = {
							inputID: 'string',
							parentSelector: 'string',
							initialValues: 'array',
							editable: 'boolean',
							labelText: 'string',
						},
						Qw = {
							inputID: '',
							parentSelector: '',
							initialValues: [{ tag: 'init1' }, { tag: 'init2' }],
							editable: !1,
							labelText: 'Example label',
						},
						$w = (function () {
							!(function (e, t) {
								if ('function' != typeof t && null !== t)
									throw new TypeError(
										'Super expression must either be null or a function'
									);
								(e.prototype = Object.create(t && t.prototype, {
									constructor: { value: e, writable: !0, configurable: !0 },
								})),
									t && Ew(e, t);
							})(r, Dw);
							var e,
								t,
								n,
								i = Pw(r);
							function r(e) {
								var t,
									n =
										1 < arguments.length && void 0 !== arguments[1]
											? arguments[1]
											: {};
								return (
									(function (e) {
										if (!(e instanceof r))
											throw new TypeError('Cannot call a class as a function');
									})(this),
									Iw(
										Aw((t = i.call(this, e, n))),
										'_handleBlurInput',
										function (e) {
											e = e.target;
											0 < e.value.length && t._handleCreateChip(e, e.value),
												0 < t.allChips.length
													? (F.addClass(e, Ww),
													  F.addClass(t.chipsInputWrapper, Vw))
													: (F.removeClass(e, Ww),
													  F.removeClass(t.chipsInputWrapper, Vw)),
												t.allChips.forEach(function (e) {
													return F.removeClass(e, Ww);
												});
										}
									),
									(t._options = t._getConfig(n)),
									(t._element = e),
									(t.numberClicks = 0),
									t.init(),
									t
								);
							}
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n) {
											return this.each(function () {
												var e = m.getData(this, Nw),
													t = 'object' === Sw(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n]();
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, Nw);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return Rw;
										},
									},
								]),
								(t = [
									{
										key: 'init',
										value: function () {
											this._setChipsClass(),
												this._appendInputToElement(Bw),
												this._handleInitialValue(),
												this._handleInputText(),
												this._handleKeyboard(),
												this._handleChipsOnSelect(),
												this._handleEditable(),
												this._handleChipsFocus(),
												this._handleClicksOnChips();
										},
									},
									{
										key: 'dispose',
										value: function () {
											(this._element = null), (this._options = null);
										},
									},
									{
										key: '_setChipsClass',
										value: function () {
											F.addClass(this._element, 'chips');
										},
									},
									{
										key: '_handleDeleteEvents',
										value: function (e) {
											var t,
												n,
												i = this,
												r = Yw(this.allChips.slice(-1), 1)[0];
											null === this.activeChip
												? (r.remove(), this._handleEvents(e, qw))
												: ((t = this.allChips.findIndex(function (e) {
														return e === i.activeChip;
												  })),
												  (r = this._handleActiveChipAfterRemove(t)),
												  (n = []),
												  null !== this.activeChip &&
														(this.activeChip.remove(),
														this._handleEvents(e, qw),
														(this.numberClicks = t),
														F.addClass(r, Ww),
														this.allChips.forEach(function (e) {
															F.hasClass(e, Ww) &&
																(n.push(e),
																1 < n.length &&
																	i.allChips.forEach(function (e) {
																		return e.remove();
																	}));
														})));
										},
									},
									{
										key: '_handleUpEvents',
										value: function (e) {
											(this.numberClicks += 1),
												this.numberClicks === this.allChips.length + 1 &&
													(this.numberClicks = 0),
												this._handleRightKeyboardArrow(this.numberClicks),
												this._handleEvents(e, 'arrowRight.mdb.chips'),
												this._handleEvents(e, 'arrowUp.mdb.chips');
										},
									},
									{
										key: '_handleDownEvents',
										value: function (e) {
											--this.numberClicks,
												this.numberClicks <= 0 &&
													(this.numberClicks = this.allChips.length),
												this._handleLeftKeyboardArrow(this.numberClicks),
												this._handleEvents(e, 'arrowLeft.mdb.chips'),
												this._handleEvents(e, 'arrowDown.mdb.chips');
										},
									},
									{
										key: '_keyboardEvents',
										value: function (e) {
											var t = e.target,
												n = e.keyCode,
												i = e.ctrlKey;
											0 < t.value.length ||
												0 === this.allChips.length ||
												(8 === n || 46 === n
													? this._handleDeleteEvents(e)
													: 39 === n || 38 === n
													? this._handleUpEvents(e)
													: 37 === n || 40 === n
													? this._handleDownEvents(e)
													: 65 === n && i && this._handleAddActiveClass());
										},
									},
									{
										key: '_handleKeyboard',
										value: function () {
											var t = this;
											H.on(this.input, 'keydown', function (e) {
												return t._keyboardEvents(e);
											});
										},
									},
									{
										key: '_handleEditable',
										value: function () {
											var n = this;
											this._options.editable &&
												this.allChips.forEach(function (r) {
													H.on(r, 'dblclick', function (e) {
														var t = V.findOne('.close', r);
														(r.contentEditable = !0),
															r.focus(),
															setTimeout(function () {
																F.addStyle(t, { display: 'none' });
															}, 200),
															F.addClass(t, 'close-opacity');
														e.target.textContent,
															H.trigger(r, Kw, {
																event: e,
																allChips: n.allChips,
															});
													}),
														H.on(document, 'click', function (e) {
															var t = e.target,
																n = V.findOne('.close', r),
																i = V.findOne('.text-chip', r),
																e = t === r,
																t = r && r.contains(t);
															e ||
																t ||
																((r.contentEditable = !1),
																'' !== i.textContent &&
																	setTimeout(function () {
																		F.addStyle(n, { display: 'block' }),
																			F.removeClass(n, 'close-opacity');
																	}, 160)),
																'' === i.textContent &&
																	(setTimeout(function () {
																		F.addClass(r, zw);
																	}, 200),
																	setTimeout(function () {
																		r.remove();
																	}, 300));
														});
												});
										},
									},
									{
										key: '_handleRemoveActiveClass',
										value: function () {
											this.allChips.forEach(function (e) {
												return F.removeClass(e, Ww);
											});
										},
									},
									{
										key: '_handleAddActiveClass',
										value: function () {
											this.allChips.forEach(function (e) {
												return F.addClass(e, Ww);
											});
										},
									},
									{
										key: '_handleRightKeyboardArrow',
										value: function (e) {
											this._handleRemoveActiveClass(),
												0 === e && (e = 1),
												this._handleAddActiveClassWithKebyboard(e);
										},
									},
									{
										key: '_handleLeftKeyboardArrow',
										value: function (e) {
											this._handleRemoveActiveClass(),
												this._handleAddActiveClassWithKebyboard(e);
										},
									},
									{
										key: '_handleActiveChipAfterRemove',
										value: function (e) {
											e = 0 === e ? 1 : e - 1;
											return this.allChips[e];
										},
									},
									{
										key: '_handleClicksOnChips',
										value: function () {
											var e = this;
											H.on(this._element, 'click', function () {
												0 === e.allChips.length &&
													(F.removeClass(e.chipsInputWrapper, Vw),
													F.removeClass(e.input, Ww));
											});
										},
									},
									{
										key: '_handleTextContent',
										value: function () {
											var t = [];
											return (
												this.allChips.forEach(function (e) {
													return t.push({ tag: e.textContent.trim() });
												}),
												t
											);
										},
									},
									{
										key: '_handleEvents',
										value: function (e, t) {
											var n = this._handleTextContent(),
												i = this.allChips.filter(function (e) {
													return F.hasClass(e, Ww) && e;
												});
											H.trigger(this._element, t, {
												event: e,
												allChips: this.allChips,
												arrOfObjects: n,
												active: i,
												activeObj: {
													tag: i.length <= 0 ? '' : i[0].textContent.trim(),
												},
											});
										},
									},
									{
										key: '_handleChipsFocus',
										value: function () {
											var t = this;
											H.on(this._element, 'click', function (e) {
												e = e.target.classList;
												e.contains('chip') ||
													e.contains('close') ||
													e.contains('text-chip') ||
													t.input.focus();
											});
										},
									},
									{
										key: '_handleInitialValue',
										value: function () {
											var t = this;
											this._appendInputToElement(Fw),
												F.hasClass(this._element, Fw) &&
													(this._options.initialValues.forEach(function (e) {
														e = e.tag;
														return t._handleCreateChip(t.input, e);
													}),
													F.addClass(this.input, Ww)),
												0 < this.allChips.length &&
													(F.addClass(this.chipsInputWrapper, Vw),
													F.addClass(this.chipsInputWrapper, Uw));
										},
									},
									{
										key: '_handleKeysInputToElement',
										value: function (e) {
											var t = e.keyCode,
												n = e.target;
											if (F.hasClass(n, 'chip')) {
												var i = V.findOne('.close', n);
												13 === t &&
													((n.contentEditable = !1),
													'' !== n.textContent
														? setTimeout(function () {
																F.addStyle(i, { display: 'block' }),
																	F.removeClass(i, 'close-opacity');
														  }, 160)
														: '' === n.textContent &&
														  (setTimeout(function () {
																F.addClass(n, zw);
														  }, 200),
														  setTimeout(function () {
																n.remove();
														  }, 300)));
											} else {
												if (13 === t) {
													if ('' === n.value) return;
													this._handleCreateChip(n, n.value),
														this._handleRemoveActiveClass(),
														(this.numberClicks = this.allChips.length + 1),
														this._handleEvents(e, 'add.mdb.chips');
												}
												0 < this.allChips.length
													? (F.addClass(this.chipsInputWrapper, Vw),
													  F.addClass(this.chipsInputWrapper, Uw))
													: F.removeClass(this.chipsInputWrapper, Vw);
											}
										},
									},
									{
										key: '_handleInputText',
										value: function () {
											var t = this,
												e = V.findOne(Bw, this._element);
											H.on(this._element, 'keyup', e, function (e) {
												return t._handleKeysInputToElement(e);
											}),
												H.on(this.input, 'blur', function (e) {
													return t._handleBlurInput(e);
												});
										},
									},
									{
										key: '_appendInputToElement',
										value: function (e) {
											var t;
											F.hasClass(this._element, e) &&
												((t = this._options),
												(e = t.inputID),
												(t = t.labelText),
												(t =
													'<div class="form-outline chips-input-wrapper">\n      <input type="text" id="'
														.concat(
															e,
															'" class="form-control chips-input" />\n      <label class="form-label" for="'
														)
														.concat(e, '">\n        ')
														.concat(
															t,
															'\n      </label>\n\n      <div class="form-notch">\n        <div class="form-notch-leading" style="width: 9px;"></div>\n        <div class="form-notch-middle" style="width: 87.2px;"></div>\n        <div class="form-notch-trailing"></div>\n      </div>\n    </div>'
														)),
												this._element.insertAdjacentHTML('beforeend', t));
										},
									},
									{
										key: '_handleCreateChip',
										value: function (e, t) {
											var n = x('div'),
												n = Dw.getInstance(n),
												t = new Dw(n, { text: t });
											'' !== this._options.parentSelector
												? document
														.querySelector(this._options.parentSelector)
														.insertAdjacentHTML('beforeend', t.appendChip())
												: e.insertAdjacentHTML('beforebegin', t.appendChip()),
												(e.value = ''),
												V.find('.chip').forEach(function (e) {
													return (Dw.getInstance(e) || new Dw(e)).init();
												}),
												this._handleEditable();
										},
									},
									{
										key: '_handleChipsOnSelect',
										value: function () {
											var n = this;
											this.allChips.forEach(function (t) {
												H.on(n._element, 'click', function (e) {
													H.trigger(t, Kw, { event: e, allChips: n.allChips });
												});
											});
										},
									},
									{
										key: '_handleAddActiveClassWithKebyboard',
										value: function (e) {
											e =
												void 0 === this.allChips[e - 1]
													? this.allChips[e - 2]
													: this.allChips[e - 1];
											F.addClass(e, Ww);
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = Ow(
												Ow(Ow({}, Qw), F.getDataAttributes(this._element)),
												e
											);
											return s(Rw, e, Gw), e;
										},
									},
									{
										key: 'activeChip',
										get: function () {
											return V.findOne(Jw, this._element);
										},
									},
									{
										key: 'input',
										get: function () {
											return V.findOne('input', this._element);
										},
									},
									{
										key: 'allChips',
										get: function () {
											return V.find('.chip', this._element);
										},
									},
									{
										key: 'chipsInputWrapper',
										get: function () {
											return V.findOne('.'.concat(Xw), this._element);
										},
									},
								]) && jw(e.prototype, t),
								n && jw(e, n),
								r
							);
						})();
					V.find('.'.concat(Rw)).forEach(function (e) {
						return $w.getInstance(e) || new $w(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[Rw]),
								(t.fn[Rw] = $w.jQueryInterface),
								(t.fn[Rw].Constructor = $w),
								(t.fn[Rw].noConflict = function () {
									return (t.fn[Rw] = e), $w.jQueryInterface;
								}));
						});
					function Zw(e) {
						return ('touchmove' === e.type ? e.touches[0] : e).clientX;
					}
					var eM = $w;
					function tM(e) {
						return (tM =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function nM(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function iM(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? nM(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: nM(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function rM(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var oM = 'multiRangeSlider',
						aM = 'mdb.multiRangeSlider',
						sM = 'value.mdb.multiRangeSlider',
						lM = '.multi-range-slider-hand',
						uM = 'active',
						cM = {
							direction: 'string',
							margin: '(string||number||null)',
							max: 'number',
							min: 'number',
							numberOfRanges: 'number',
							orientation: 'string',
							padding: '(string||number||null)',
							startValues: 'array',
							step: '(string||null||number)',
							tooltips: 'boolean',
						},
						dM = {
							direction: '',
							margin: null,
							max: 100,
							min: 0,
							numberOfRanges: 2,
							orientation: 'horizontal',
							padding: null,
							startValues: [0, 100],
							step: null,
							tooltips: !1,
						},
						fM = (function () {
							function r(e) {
								var t =
									1 < arguments.length && void 0 !== arguments[1]
										? arguments[1]
										: {};
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._options = this._getConfig(t)),
									(this._mousemove = !1),
									this.init();
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, aM),
													t = 'object' === tM(n) && n;
												if (
													(e || !/dispose|hide/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, aM);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return oM;
										},
									},
								]),
								(t = [
									{
										key: 'init',
										value: function () {
											this._setClassHorizontalOrVertical(),
												this._setRangeConnectsElement(),
												this._setRangeHandleElements(),
												this._setTransofrmationOnStart(),
												this._handleClickEventOnHand(),
												this._handleEndMoveEventDocument(),
												this._handleClickOnRange(),
												this._setValueEventOnMouseDown(),
												this._setPercentEventOnMouseDown(),
												this._setTooltipToHand();
										},
									},
									{
										key: 'dispose',
										value: function () {
											m.removeData(this._element, aM),
												(this._element = null),
												(this._input = null),
												(this._options = null),
												(this._view = null),
												(this._focusTrap = null);
										},
									},
									{
										key: '_setTransofrmationOnStart',
										value: function () {
											var n = this,
												e = this._options,
												i = e.startValues,
												r = e.max,
												o = e.min;
											0 === i.length
												? this.hands.forEach(function (e) {
														var t = -e.offsetWidth;
														F.setDataAttribute(e, 'translation', Math.round(t)),
															F.addStyle(e, {
																transform: 'translate('.concat(t, 'px,-25%)'),
															});
												  })
												: this.hands.forEach(function (e, t) {
														i[t] > r ||
															i[t] < o ||
															((t =
																(i[t] * n.connect.offsetWidth) / r -
																e.offsetWidth / 2),
															F.setDataAttribute(
																e,
																'translation',
																Math.round(t)
															),
															F.addStyle(e, {
																transform: 'translate('.concat(t, 'px,-25%)'),
															}));
												  });
										},
									},
									{
										key: '_handleClickEventOnHand',
										value: function () {
											var o = this,
												e = this._options,
												a = e.max,
												s = e.min;
											this.hands.forEach(function (i, r) {
												P(i, 'mousedown touchstart', function (e) {
													o._mousemove = !0;
													var t = Zw(e) - o.leftConnectRect - i.offsetWidth / 2,
														n =
															((Zw(e) - o.leftConnectRect) /
																(o.connect.offsetWidth / (a - s))) %
															(a - s);
													F.addStyle(i, {
														transform: 'translate('.concat(t, 'px,-25%)'),
													}),
														F.setDataAttribute(i, 'translation', t),
														F.addClass(i, uM),
														o._options.tooltip &&
															(F.addClass(i.children[1], 'active'),
															(o.activeTooltipValue.innerText = Math.round(n))),
														o._handleMoveEvent(i, r),
														o._handleEndMoveEvent(i, e);
												});
											});
										},
									},
									{
										key: '_setPercentEventOnMouseDown',
										value: function () {
											var n = this;
											P(this.connect, 'mousedown touchstart', function (e) {
												var t =
														(Zw(e) - n.leftConnectRect) / e.target.offsetWidth,
													e = ''.concat(Math.round(100 * t), '%');
												H.trigger(
													n._element,
													'showPercent.mdb.multiRangeSlider',
													{ percents: { value: t, percent: e } }
												);
											});
										},
									},
									{
										key: '_setValueEventOnMouseDown',
										value: function () {
											var r = this;
											P(this.connect, 'mousedown touchstart', function (e) {
												var t = r._options,
													n = t.max,
													i = t.min;
												t.numberOfRanges < 2 &&
													((n =
														Math.round(
															(Zw(e) - r.leftConnectRect) /
																(e.target.offsetWidth / (n - i))
														) %
														(n - i)),
													H.trigger(r._element, 'start.mdb.multiRangeSlider', {
														values: {
															value: n + i,
															rounded: Math.round(n + i),
														},
													}));
											});
										},
									},
									{
										key: '_setClassHorizontalOrVertical',
										value: function () {
											F.addClass(this._element, 'multi-range-slider'),
												'horizontal' === this._options.orientation
													? F.addClass(
															this._element,
															'multi-range-slider-horizontal'
													  )
													: F.addClass(
															this._element,
															'multi-range-slider-vertical'
													  );
										},
									},
									{
										key: '_setRangeConnectsElement',
										value: function () {
											this._element.insertAdjacentHTML(
												'afterbegin',
												'<div class="multi-range-slider-connects">\n<div class="multi-range-slider-connect"></div>\n</div>'
											);
										},
									},
									{
										key: '_setRangeHandleElements',
										value: function () {
											for (
												var n = this, e = 0;
												e < this._options.numberOfRanges;
												e++
											)
												this._element.insertAdjacentHTML(
													'beforeend',
													'<div class="multi-range-slider-hand">\n  <div class="multi-range-slider-handle"></div>\n</div>'
												);
											this.hands.forEach(function (e, t) {
												e.setAttribute(
													'aria-orientation',
													n._options.orientation
												),
													e.setAttribute('role', 'slider'),
													F.setDataAttribute(e, 'handle', t);
											});
										},
									},
									{
										key: '_setTooltipToHand',
										value: function () {
											this._options.tooltips &&
												this.hands.forEach(function (e) {
													return e.insertAdjacentHTML(
														'beforeend',
														'\n  <span class="multi-range-slider-tooltip">\n    <span class="multi-range-slider-tooltip-value">'.concat(
															t,
															'</span>\n  </span>\n  '
														)
													);
													var t;
												});
										},
									},
									{
										key: '_handleMoveEvent',
										value: function (l) {
											var u = this,
												e = this._options,
												c = e.tooltip,
												d = e.step;
											P(document, 'mousemove touchmove', function (e) {
												'mousemove' === e.type && e.preventDefault();
												var t = u._options,
													n = t.max,
													i = t.min,
													r = t.numberOfRanges;
												if (F.hasClass(l, uM)) {
													var o =
															((Zw(e) - u.leftConnectRect) /
																u.connect.offsetWidth) *
															n,
														a =
															((Zw(e) - u.leftConnectRect) /
																(u.connect.offsetWidth / (n - i))) %
															(n - i),
														s = Zw(e) - u.leftConnectRect - l.offsetWidth / 2,
														t = F.getDataAttribute(u.handActive, 'handle'),
														e = F.getDataAttribute(u.handActive, 'translation');
													if (a < i) (s = i - l.offsetWidth / 2), (a = i);
													else if (n <= o) return;
													(n = u.handsNoActive.map(function (e) {
														return F.getDataAttribute(e, 'handle');
													})),
														(o = u.handsNoActive.map(function (e) {
															return F.getDataAttribute(e, 'translation');
														}));
													t < n && e <= o
														? ((Math.round(a) % d == 0 && null !== d) ||
																null === d) &&
														  (F.addStyle(l, {
																transform: 'translate('.concat(s, 'px,-25%)'),
														  }),
														  c &&
																(u.activeTooltipValue.innerText =
																	Math.round(a)))
														: n < t &&
														  o <= e &&
														  ((Math.round(a) % d == 0 && null !== d) ||
																null === d) &&
														  (F.addStyle(l, {
																transform: 'translate('.concat(s, 'px,-25%)'),
														  }),
														  c &&
																(u.activeTooltipValue.innerText =
																	Math.round(a))),
														r < 2 &&
															((Math.round(a) % d == 0 && null !== d) ||
																null === d) &&
															(F.addStyle(l, {
																transform: 'translate('.concat(s, 'px,-25%)'),
															}),
															c &&
																(u.activeTooltipValue.innerText =
																	Math.round(a))),
														F.setDataAttribute(l, 'translation', s),
														r < 2
															? H.trigger(u._element, sM, {
																	values: {
																		value: a + i,
																		rounded: Math.round(a + i),
																	},
															  })
															: u._handleMultiValuesOnRange();
												}
											});
										},
									},
									{
										key: '_handleMultiValuesOnRange',
										value: function () {
											var i = this,
												e = this._options,
												r = e.max,
												o = e.min,
												a = [];
											this.hands.forEach(function (e) {
												var t =
														e.getBoundingClientRect().left -
														i.leftConnectRect +
														e.offsetWidth / 2,
													n = (t / (i.connect.offsetWidth / (r - o))) % (r - o);
												t === i.connect.offsetWidth ? (n = r) : (n += o),
													F.setDataAttribute(
														e,
														'value',
														Math.round(10 * n) / 10
													),
													a.push({ value: n });
											}),
												H.trigger(this._element, sM, {
													values: {
														value: a.map(function (e) {
															return e.value;
														}),
														rounded: a.map(function (e) {
															e = e.value;
															return Math.round(e);
														}),
													},
												});
										},
									},
									{
										key: '_handleEndMoveEventDocument',
										value: function () {
											var t = this;
											P(document, 'mouseup touchend', function () {
												t._mousemove &&
													(t.hands.forEach(function (e) {
														H.off(e, 'mousemove'),
															F.removeClass(e, uM),
															t._options.tooltip &&
																F.removeClass(e.children[1], 'active');
													}),
													(t._mousemove = !1));
											});
										},
									},
									{
										key: '_handleEndMoveEvent',
										value: function (e) {
											var t = this;
											P(e, 'mouseup touchend', function () {
												H.off(e, 'mousemove'),
													F.removeClass(e, uM),
													t._options.tooltip &&
														F.removeClass(e.children[1], 'active'),
													(t._mousemove = !1);
											});
										},
									},
									{
										key: '_handleClickOnRange',
										value: function () {
											var n = this;
											P(this.connect, 'mousedown touchstart', function (t) {
												n.hands.forEach(function (e) {
													F.addClass(e, uM),
														(n._mousemove = !0),
														n._options.numberOfRanges < 2
															? F.addStyle(e, {
																	transform: 'translate('.concat(
																		Zw(t) -
																			n.leftConnectRect -
																			e.offsetWidth / 2,
																		'px,-25%)'
																	),
															  })
															: F.addStyle(n.hands[0], {
																	transform: 'translate('.concat(
																		Zw(t) -
																			n.leftConnectRect -
																			e.offsetWidth / 2,
																		'px,-25%)'
																	),
															  });
												});
											});
										},
									},
									{
										key: '_handlePadding',
										value: function () {
											var r = this;
											P(this.connect, 'mousedown touchstart', function (e) {
												var t,
													n = r._options,
													i = n.padding;
												return (
													n.numberOfRanges < 2 &&
														(t =
															Math.round(
																(Zw(e) - r.leftConnectRect) /
																	(e.target.offsetWidth / i)
															) % i),
													t
												);
											});
										},
									},
									{
										key: '_setMovingTooltipEvent',
										value: function () {
											var n = this;
											P(this.connect, 'mousemove', function (e) {
												var t =
														(Zw(e) - n.leftConnectRect) / e.target.offsetWidth,
													e = ''.concat(Math.round(100 * t), '%');
												H.trigger(n._element, 'movetooltip', {
													percents: { value: t, percent: e },
												});
											});
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											e = iM(
												iM(iM({}, dM), F.getDataAttributes(this._element)),
												e
											);
											return s(oM, e, cM), e;
										},
									},
									{
										key: 'hands',
										get: function () {
											return V.find(lM, this._element);
										},
									},
									{
										key: 'connect',
										get: function () {
											return V.findOne(
												'.multi-range-slider-connect',
												this._element
											);
										},
									},
									{
										key: 'leftConnectRect',
										get: function () {
											return this.connect.getBoundingClientRect().left;
										},
									},
									{
										key: 'handsNoActive',
										get: function () {
											return this.hands.filter(function (e) {
												return !F.hasClass(e, 'active');
											});
										},
									},
									{
										key: 'handActive',
										get: function () {
											return V.findOne(''.concat(lM, '.active'));
										},
									},
									{
										key: 'activeTooltip',
										get: function () {
											return V.findOne('.multi-range-slider-tooltip');
										},
									},
									{
										key: 'activeTooltipValue',
										get: function () {
											return V.findOne(''.concat(lM, '.active')).children[1]
												.children[0];
										},
									},
								]) && rM(e.prototype, t),
								n && rM(e, n),
								r
							);
						})();
					V.find('.multi-range-slider').forEach(function (e) {
						return fM.getInstance(e) || new fM(e);
					}),
						l(function () {
							var e,
								t = r();
							t &&
								((e = t.fn[oM]),
								(t.fn[oM] = fM.jQueryInterface),
								(t.fn[oM].Constructor = fM),
								(t.fn[oM].noConflict = function () {
									return (t.fn[oM] = e), fM.jQueryInterface;
								}));
						});
					var hM = fM,
						pM = function (t, e) {
							return e.findIndex(function (e) {
								return e === t;
							});
						};
					function mM(e) {
						return (mM =
							'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
								? function (e) {
										return typeof e;
								  }
								: function (e) {
										return e &&
											'function' == typeof Symbol &&
											e.constructor === Symbol &&
											e !== Symbol.prototype
											? 'symbol'
											: typeof e;
								  })(e);
					}
					function _M(t, e) {
						var n,
							i = Object.keys(t);
						return (
							Object.getOwnPropertySymbols &&
								((n = Object.getOwnPropertySymbols(t)),
								e &&
									(n = n.filter(function (e) {
										return Object.getOwnPropertyDescriptor(t, e).enumerable;
									})),
								i.push.apply(i, n)),
							i
						);
					}
					function vM(i) {
						for (var e = 1; e < arguments.length; e++) {
							var r = null != arguments[e] ? arguments[e] : {};
							e % 2
								? _M(Object(r), !0).forEach(function (e) {
										var t, n;
										(t = i),
											(e = r[(n = e)]),
											n in t
												? Object.defineProperty(t, n, {
														value: e,
														enumerable: !0,
														configurable: !0,
														writable: !0,
												  })
												: (t[n] = e);
								  })
								: Object.getOwnPropertyDescriptors
								? Object.defineProperties(
										i,
										Object.getOwnPropertyDescriptors(r)
								  )
								: _M(Object(r)).forEach(function (e) {
										Object.defineProperty(
											i,
											e,
											Object.getOwnPropertyDescriptor(r, e)
										);
								  });
						}
						return i;
					}
					function yM(e, t) {
						for (var n = 0; n < t.length; n++) {
							var i = t[n];
							(i.enumerable = i.enumerable || !1),
								(i.configurable = !0),
								'value' in i && (i.writable = !0),
								Object.defineProperty(e, i.key, i);
						}
					}
					var gM = 'datetimepicker',
						bM = 'mdb.'.concat(gM),
						n = '.'.concat(bM),
						kM = 'datepicker',
						wM = 'timepicker',
						t = ''.concat(gM, '-toggle-button'),
						MM = 'invalid-feedback',
						LM = 'is-invalid',
						pe = '.'.concat(gM),
						xM = '.'.concat(wM),
						DM = '.'.concat(kM),
						SM = '[data-mdb-toggle="'.concat(gM, '"]'),
						TM = '.'.concat(t),
						OM = '.'.concat(MM),
						YM = 'open'.concat(n),
						CM = 'close'.concat(n),
						jM = 'datetimeChange'.concat(n),
						EM = 'close.mdb.datepicker',
						PM = 'input.mdb.timepicker',
						AM = x('div'),
						HM = {
							appendValidationInfo: !0,
							inline: !1,
							toggleButton: !0,
							disabled: !1,
							defaultTime: '',
							defaultDate: '',
							timepicker: {},
							datepicker: {},
							invalidLabel: 'Invalid Date or Time Format',
							showFormat: !1,
						},
						IM = {
							appendValidationInfo: 'boolean',
							inline: 'boolean',
							toggleButton: 'boolean',
							disabled: 'boolean',
							defaultTime: '(string|date|number)',
							defaultDate: '(string|date|number)',
							timepicker: 'object',
							datepicker: 'object',
							invalidLabel: 'string',
							showFormat: 'boolean',
						},
						RM = (function () {
							function r(e, t) {
								!(function (e) {
									if (!(e instanceof r))
										throw new TypeError('Cannot call a class as a function');
								})(this),
									(this._element = e),
									(this._input = V.findOne('input', this._element)),
									(this._options = this._getConfig(t)),
									(this._timepicker = null),
									(this._datepicker = null),
									(this._dateValue = this._options.defaultDate || ''),
									(this._timeValue = this._options.defaultTime || ''),
									(this._isInvalidTimeFormat = !1),
									(this._validationInfo = null),
									(this._format =
										this._options.datepicker.format || 'dd/mm/yyyy'),
									(this._cancel = !1),
									this._element && m.setData(e, bM, this),
									this._init();
							}
							var e, t, n;
							return (
								(e = r),
								(n = [
									{
										key: 'jQueryInterface',
										value: function (n, i) {
											return this.each(function () {
												var e = m.getData(this, bM),
													t = 'object' === mM(n) && n;
												if (
													(e || !/dispose/.test(n)) &&
													((e = e || new r(this, t)), 'string' == typeof n)
												) {
													if (void 0 === e[n])
														throw new TypeError(
															'No method named "'.concat(n, '"')
														);
													e[n](i);
												}
											});
										},
									},
									{
										key: 'getInstance',
										value: function (e) {
											return m.getData(e, bM);
										},
									},
									{
										key: 'NAME',
										get: function () {
											return gM;
										},
									},
								]),
								(t = [
									{
										key: 'dispose',
										value: function () {
											H.off(this._element, 'click', this._openDatePicker),
												H.off(this._input, 'input', this._handleInput),
												m.removeData(this._element, bM),
												(this._element = null),
												(this._options = null),
												(this._input = null),
												(this._timepicker = null),
												(this._datepicker = null),
												(this._dateValue = null),
												(this._timeValue = null),
												(this._isInvalidTimeFormat = null),
												(this._validationInfo = null);
										},
									},
									{
										key: '_init',
										value: function () {
											this._addDatepicker(),
												this._addTimePicker(),
												this._appendToggleButton(),
												this._listenToToggleClick(),
												this._listenToUserInput(),
												this._disableInput(),
												this._setInitialDefaultInput(),
												this._appendValidationInfo(),
												this._applyFormatPlaceholder();
										},
									},
									{
										key: '_addDatepicker',
										value: function () {
											var e = x('div');
											e.id = d('datepicker-');
											var t;
											(e.innerHTML =
												'<input type="text" class="form-control">'),
												F.addClass(e, kM),
												this._element.appendChild(e),
												F.style(e, { display: 'none' }),
												this._options.inline
													? ((t = vM(vM({}, this._options.datepicker), {
															inline: !0,
													  })),
													  (this._datepicker = new nm(e, t)))
													: (this._datepicker = new nm(
															e,
															this._options.datepicker
													  )),
												(this._datepicker._input.value = this._dateValue);
										},
									},
									{
										key: '_addTimePicker',
										value: function () {
											var e = x('div');
											e.id = d('timepicker-');
											var t;
											(e.innerHTML =
												'<input type="text" class="form-control">'),
												F.addClass(e, wM),
												this._element.appendChild(e),
												F.style(e, { display: 'none' }),
												this._options.inline
													? ((t = vM(vM({}, this._options.timepicker), {
															inline: !0,
													  })),
													  (this._timepicker = new zh(e, t)))
													: (this._timepicker = new zh(
															e,
															this._options.timepicker
													  )),
												(this._timepicker.input.value = this._timeValue);
										},
									},
									{
										key: '_addIconButtons',
										value: function () {
											var e, t;
											F.addClass(AM, 'buttons-container'),
												(AM.innerHTML =
													'\n  <button type="button" class="datepicker-button-toggle"  data-mdb-toggle="datepicker">\n    <i class="far fa-calendar datepicker-toggle-icon"></i>\n  </button>\n  <button type="button" class="timepicker-button-toggle" data-mdb-toggle="timepicker">\n    <i class="far fa-clock fa-sm timepicker-icon"></i>\n  </button>\n'),
												this._options.inline ||
													(this._datepicker._isOpen
														? V.findOne(
																''.concat(DM, '-header'),
																document.body
														  ).appendChild(AM)
														: this._timepicker._modal &&
														  ((e = V.findOne(
																''.concat(xM, '-elements'),
																document.body
														  )),
														  (t = V.findOne(
																''.concat(xM, '-clock-wrapper'),
																document.body
														  )),
														  e.insertBefore(AM, t)));
										},
									},
									{
										key: '_appendToggleButton',
										value: function () {
											this._options.toggleButton &&
												(this._element.insertAdjacentHTML(
													'beforeend',
													'\n  <button type="button" class="datetimepicker-toggle-button" data-mdb-toggle="datetimepicker">\n    <i class="far fa-calendar datepicker-toggle-icon"></i>\n  </button>\n'
												),
												this._options.disabled &&
													((this.toggleButton.disabled = !0),
													(this.toggleButton.style.pointerEvents = 'none')));
										},
									},
									{
										key: '_appendValidationInfo',
										value: function () {
											var e = this._options,
												t = e.invalidLabel;
											e.appendValidationInfo &&
												((this._validationInfo = x('div')),
												F.addClass(this._validationInfo, MM),
												(this._validationInfo.innerHTML = t),
												F.addStyle(this._input, { marginBottom: 0 }),
												F.addStyle(this._validationInfo, { bottom: '-23px' }));
										},
									},
									{
										key: '_applyFormatPlaceholder',
										value: function () {
											this._options.showFormat &&
												(this._input.placeholder = this._format);
										},
									},
									{
										key: '_listenToCancelClick',
										value: function () {
											var e = this,
												t = V.findOne(
													''.concat(DM, '-cancel-btn'),
													document.body
												);
											H.one(t, 'mousedown', function () {
												(e._cancel = !0), H.off(t, 'mousedown');
											});
										},
									},
									{
										key: '_listenToToggleClick',
										value: function () {
											var t = this;
											H.on(this._element, 'click', SM, function (e) {
												e.preventDefault(), t._openDatePicker();
											});
										},
									},
									{
										key: '_listenToUserInput',
										value: function () {
											var t = this;
											H.on(this._input, 'input', function (e) {
												t._handleInput(e.target.value);
											});
										},
									},
									{
										key: '_disableInput',
										value: function () {
											this._options.disabled && (this._input.disabled = 'true');
										},
									},
									{
										key: '_getConfig',
										value: function (e) {
											var t = F.getDataAttributes(this._element);
											return (e = vM(vM(vM({}, HM), t), e)), s(gM, e, IM), e;
										},
									},
									{
										key: '_handleInput',
										value: function (e) {
											var t,
												n = e.split(', '),
												i = this._format.match(/[^(dmy)]{1,}/g),
												r = n[0],
												e = n[1] || '',
												i = (function (e, t, n) {
													for (
														var n = n[0] !== n[1] ? n[0] + n[1] : n[0],
															n = new RegExp('['.concat(n, ']')),
															i = e.split(n),
															r = t.split(n),
															t = -1 !== t.indexOf('mmm'),
															o = [],
															a = 0;
														a < r.length;
														a++
													)
														-1 !== r[a].indexOf('yy') &&
															(o[0] = { value: i[a], format: r[a] }),
															-1 !== r[a].indexOf('m') &&
																(o[1] = { value: i[a], format: r[a] }),
															-1 !== r[a].indexOf('d') &&
																r[a].length <= 2 &&
																(o[2] = { value: i[a], format: r[a] });
													return Dp(
														Number(o[0].value),
														t ? pM(o[1].value, void 0) : Number(o[1].value) - 1,
														Number(o[2].value)
													);
												})(r, this._format, i);
											r
												? 2 === n.length &&
												  (t = i) &&
												  '[object Date]' ===
														Object.prototype.toString.call(t) &&
												  !isNaN(t) &&
												  ((t = e).match(
														/^([0-1]?[0-9]|2[0-3]):[0-5][0-9] [APap][mM]$/
												  ) ||
														t.match(
															/^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?$/
														))
													? ((this._dateValue = r),
													  (this._timeValue = e),
													  this._removeInvalidClass(this._input),
													  (this._datepicker._input.value = this._dateValue),
													  (this._timepicker.input.value = this._timeValue))
													: this._addInvalidClass(
															this._input,
															this._validationInfo
													  )
												: this._removeInvalidClass(this._input);
										},
									},
									{
										key: '_addInvalidClass',
										value: function () {
											this._options.appendValidationInfo &&
												(F.addClass(this._input, LM),
												V.findOne(OM) ||
													this._input.parentNode.insertBefore(
														this._validationInfo,
														this._input.nextSibling
													));
										},
									},
									{
										key: '_removeInvalidClass',
										value: function (e) {
											F.removeClass(e, LM), (this._isInvalidTimeFormat = !1);
											e = V.findOne(OM);
											null !== e && e.remove();
										},
									},
									{
										key: '_openDatePicker',
										value: function () {
											var e,
												t = this;
											H.trigger(this._element, YM).defaultPrevented ||
												(this._datepicker.open(),
												this._options.inline && this._openDropdownDate(),
												this._addIconButtons(),
												this._listenToCancelClick(),
												this._options.inline &&
													this._datepicker._isOpen &&
													(this.toggleButton.style.pointerEvents = 'none'),
												H.one(this._datepicker._element, EM, function () {
													(t._dateValue = t._datepicker._input.value),
														t._updateInputValue(),
														t._cancel
															? (t._cancel = !1)
															: (t._openTimePicker(),
															  t._options.inline &&
																	(t.toggleButton.style.pointerEvents =
																		'auto'));
												}),
												(e = V.findOne(
													''.concat(xM, '-button-toggle'),
													document.body
												)),
												H.on(e, 'click', function () {
													t._datepicker.close(),
														H.trigger(t._datepicker._element, EM);
												}));
										},
									},
									{
										key: '_openDropdownDate',
										value: function () {
											this._datepicker._popper.state.elements.reference =
												this._input;
										},
									},
									{
										key: '_openTimePicker',
										value: function () {
											var n = this;
											H.trigger(this._timepicker.elementToggle, 'click'),
												setTimeout(function () {
													var t;
													n._addIconButtons(),
														n._options.inline && n._openDropdownTime(),
														n._timepicker._modal &&
															((t = V.findOne(
																''.concat(xM, '-cancel'),
																document.body
															)),
															H.on(n._timepicker._modal, 'click', function (e) {
																e.target.classList.contains(
																	''.concat(wM, '-clear')
																) && H.trigger(n._timepicker._element, PM),
																	e.target.classList.contains(
																		''.concat(kM, '-button-toggle')
																	) &&
																		(H.trigger(t, 'click'),
																		setTimeout(function () {
																			n._openDatePicker();
																		}, 400));
															}));
												}),
												H.one(this._timepicker._element, PM, function () {
													(n._timeValue = n._timepicker.input.value),
														n._updateInputValue(),
														H.trigger(n._element, CM);
												});
										},
									},
									{
										key: '_openDropdownTime',
										value: function () {
											var e = this._timepicker._popper;
											(e.state.elements.reference = this._input), e.update();
										},
									},
									{
										key: '_setInitialDefaultInput',
										value: function () {
											(this._options.defaultDate ||
												this._options.defaultTime) &&
												this._updateInputValue();
										},
									},
									{
										key: '_updateInputValue',
										value: function () {
											var e = this._timeValue && this._dateValue;
											if (
												e &&
												((this._input.value = ''
													.concat(this._dateValue, ', ')
													.concat(this._timeValue)),
												H.trigger(this._element, jM).defaultPrevented)
											)
												return;
											H.trigger(this._input, 'focus');
										},
									},
									{
										key: 'toggleButton',
										get: function () {
											return V.findOne(TM, this._element);
										},
									},
								]) && yM(e.prototype, t),
								n && yM(e, n),
								r
							);
						})();
					V.find(pe).forEach(function (e) {
						RM.getInstance(e) || new RM(e);
					});
					var NM,
						WM = r();
					WM &&
						((NM = WM.fn[gM]),
						(WM.fn[gM] = RM.jQueryInterface),
						(WM.fn[gM].Constructor = RM),
						(WM.fn[gM].noConflict = function () {
							return (WM.fn[gM] = NM), RM.jQueryInterface;
						}));
					var FM = RM;
				},
			]),
		(r.c = i),
		(r.d = function (e, t, n) {
			r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n });
		}),
		(r.r = function (e) {
			'undefined' != typeof Symbol &&
				Symbol.toStringTag &&
				Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
				Object.defineProperty(e, '__esModule', { value: !0 });
		}),
		(r.t = function (t, e) {
			if ((1 & e && (t = r(t)), 8 & e)) return t;
			if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
			var n = Object.create(null);
			if (
				(r.r(n),
				Object.defineProperty(n, 'default', { enumerable: !0, value: t }),
				2 & e && 'string' != typeof t)
			)
				for (var i in t)
					r.d(
						n,
						i,
						function (e) {
							return t[e];
						}.bind(null, i)
					);
			return n;
		}),
		(r.n = function (e) {
			var t =
				e && e.__esModule
					? function () {
							return e.default;
					  }
					: function () {
							return e;
					  };
			return r.d(t, 'a', t), t;
		}),
		(r.o = function (e, t) {
			return Object.prototype.hasOwnProperty.call(e, t);
		}),
		(r.p = ''),
		r((r.s = 328))
	);
	function r(e) {
		if (i[e]) return i[e].exports;
		var t = (i[e] = { i: e, l: !1, exports: {} });
		return n[e].call(t.exports, t, t.exports, r), (t.l = !0), t.exports;
	}
	var n, i;
});

// threejs.org/license
!(function (t, e) {
	'object' == typeof exports && 'undefined' != typeof module
		? e(exports)
		: 'function' == typeof define && define.amd
		? define(['exports'], e)
		: e(
				((t = 'undefined' != typeof globalThis ? globalThis : t || self).THREE =
					{})
		  );
})(this, function (t) {
	'use strict';
	void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
		void 0 === Number.isInteger &&
			(Number.isInteger = function (t) {
				return 'number' == typeof t && isFinite(t) && Math.floor(t) === t;
			}),
		void 0 === Math.sign &&
			(Math.sign = function (t) {
				return t < 0 ? -1 : t > 0 ? 1 : +t;
			}),
		'name' in Function.prototype == !1 &&
			Object.defineProperty(Function.prototype, 'name', {
				get: function () {
					return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
				},
			}),
		void 0 === Object.assign &&
			(Object.assign = function (t) {
				if (null == t)
					throw new TypeError('Cannot convert undefined or null to object');
				for (var e = Object(t), n = 1; n < arguments.length; n++) {
					var r = arguments[n];
					if (null != r)
						for (var i in r)
							Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i]);
				}
				return e;
			});
	var e = 100,
		n = 300,
		r = 301,
		i = 302,
		a = 303,
		o = 304,
		s = 306,
		c = 307,
		l = 1e3,
		u = 1001,
		h = 1002,
		d = 1003,
		p = 1004,
		f = 1005,
		m = 1006,
		v = 1007,
		g = 1008,
		y = 1009,
		x = 1012,
		_ = 1014,
		b = 1015,
		w = 1016,
		M = 1020,
		S = 1022,
		T = 1023,
		E = 1026,
		A = 1027,
		L = 33776,
		R = 33777,
		C = 33778,
		P = 33779,
		I = 35840,
		D = 35841,
		N = 35842,
		O = 35843,
		B = 37492,
		z = 37496,
		G = 2300,
		F = 2301,
		U = 2302,
		H = 2400,
		k = 2401,
		V = 2402,
		W = 2500,
		j = 2501,
		q = 3e3,
		X = 3001,
		Y = 3007,
		Z = 3002,
		J = 3004,
		Q = 3005,
		K = 3006,
		$ = 7680,
		tt = 35044,
		et = 35048,
		nt = '300 es';
	function rt() {}
	Object.assign(rt.prototype, {
		addEventListener: function (t, e) {
			void 0 === this._listeners && (this._listeners = {});
			var n = this._listeners;
			void 0 === n[t] && (n[t] = []), -1 === n[t].indexOf(e) && n[t].push(e);
		},
		hasEventListener: function (t, e) {
			if (void 0 === this._listeners) return !1;
			var n = this._listeners;
			return void 0 !== n[t] && -1 !== n[t].indexOf(e);
		},
		removeEventListener: function (t, e) {
			if (void 0 !== this._listeners) {
				var n = this._listeners[t];
				if (void 0 !== n) {
					var r = n.indexOf(e);
					-1 !== r && n.splice(r, 1);
				}
			}
		},
		dispatchEvent: function (t) {
			if (void 0 !== this._listeners) {
				var e = this._listeners[t.type];
				if (void 0 !== e) {
					t.target = this;
					for (var n = e.slice(0), r = 0, i = n.length; r < i; r++)
						n[r].call(this, t);
				}
			}
		},
	});
	for (var it = [], at = 0; at < 256; at++)
		it[at] = (at < 16 ? '0' : '') + at.toString(16);
	var ot = 1234567,
		st = {
			DEG2RAD: Math.PI / 180,
			RAD2DEG: 180 / Math.PI,
			generateUUID: function () {
				var t = (4294967295 * Math.random()) | 0,
					e = (4294967295 * Math.random()) | 0,
					n = (4294967295 * Math.random()) | 0,
					r = (4294967295 * Math.random()) | 0;
				return (
					it[255 & t] +
					it[(t >> 8) & 255] +
					it[(t >> 16) & 255] +
					it[(t >> 24) & 255] +
					'-' +
					it[255 & e] +
					it[(e >> 8) & 255] +
					'-' +
					it[((e >> 16) & 15) | 64] +
					it[(e >> 24) & 255] +
					'-' +
					it[(63 & n) | 128] +
					it[(n >> 8) & 255] +
					'-' +
					it[(n >> 16) & 255] +
					it[(n >> 24) & 255] +
					it[255 & r] +
					it[(r >> 8) & 255] +
					it[(r >> 16) & 255] +
					it[(r >> 24) & 255]
				).toUpperCase();
			},
			clamp: function (t, e, n) {
				return Math.max(e, Math.min(n, t));
			},
			euclideanModulo: function (t, e) {
				return ((t % e) + e) % e;
			},
			mapLinear: function (t, e, n, r, i) {
				return r + ((t - e) * (i - r)) / (n - e);
			},
			lerp: function (t, e, n) {
				return (1 - n) * t + n * e;
			},
			smoothstep: function (t, e, n) {
				return t <= e
					? 0
					: t >= n
					? 1
					: (t = (t - e) / (n - e)) * t * (3 - 2 * t);
			},
			smootherstep: function (t, e, n) {
				return t <= e
					? 0
					: t >= n
					? 1
					: (t = (t - e) / (n - e)) * t * t * (t * (6 * t - 15) + 10);
			},
			randInt: function (t, e) {
				return t + Math.floor(Math.random() * (e - t + 1));
			},
			randFloat: function (t, e) {
				return t + Math.random() * (e - t);
			},
			randFloatSpread: function (t) {
				return t * (0.5 - Math.random());
			},
			seededRandom: function (t) {
				return (
					void 0 !== t && (ot = t % 2147483647),
					((ot = (16807 * ot) % 2147483647) - 1) / 2147483646
				);
			},
			degToRad: function (t) {
				return t * st.DEG2RAD;
			},
			radToDeg: function (t) {
				return t * st.RAD2DEG;
			},
			isPowerOfTwo: function (t) {
				return 0 == (t & (t - 1)) && 0 !== t;
			},
			ceilPowerOfTwo: function (t) {
				return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));
			},
			floorPowerOfTwo: function (t) {
				return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));
			},
			setQuaternionFromProperEuler: function (t, e, n, r, i) {
				var a = Math.cos,
					o = Math.sin,
					s = a(n / 2),
					c = o(n / 2),
					l = a((e + r) / 2),
					u = o((e + r) / 2),
					h = a((e - r) / 2),
					d = o((e - r) / 2),
					p = a((r - e) / 2),
					f = o((r - e) / 2);
				switch (i) {
					case 'XYX':
						t.set(s * u, c * h, c * d, s * l);
						break;
					case 'YZY':
						t.set(c * d, s * u, c * h, s * l);
						break;
					case 'ZXZ':
						t.set(c * h, c * d, s * u, s * l);
						break;
					case 'XZX':
						t.set(s * u, c * f, c * p, s * l);
						break;
					case 'YXY':
						t.set(c * p, s * u, c * f, s * l);
						break;
					case 'ZYZ':
						t.set(c * f, c * p, s * u, s * l);
						break;
					default:
						console.warn(
							'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' +
								i
						);
				}
			},
		};
	function ct(t, e) {
		for (var n = 0; n < e.length; n++) {
			var r = e[n];
			(r.enumerable = r.enumerable || !1),
				(r.configurable = !0),
				'value' in r && (r.writable = !0),
				Object.defineProperty(t, r.key, r);
		}
	}
	function lt(t, e, n) {
		return e && ct(t.prototype, e), n && ct(t, n), t;
	}
	function ut(t, e) {
		(t.prototype = Object.create(e.prototype)),
			(t.prototype.constructor = t),
			(t.__proto__ = e);
	}
	function ht(t) {
		if (void 0 === t)
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			);
		return t;
	}
	var dt,
		pt = (function () {
			function t(t, e) {
				void 0 === t && (t = 0),
					void 0 === e && (e = 0),
					Object.defineProperty(this, 'isVector2', { value: !0 }),
					(this.x = t),
					(this.y = e);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e) {
					return (this.x = t), (this.y = e), this;
				}),
				(e.setScalar = function (t) {
					return (this.x = t), (this.y = t), this;
				}),
				(e.setX = function (t) {
					return (this.x = t), this;
				}),
				(e.setY = function (t) {
					return (this.y = t), this;
				}),
				(e.setComponent = function (t, e) {
					switch (t) {
						case 0:
							this.x = e;
							break;
						case 1:
							this.y = e;
							break;
						default:
							throw new Error('index is out of range: ' + t);
					}
					return this;
				}),
				(e.getComponent = function (t) {
					switch (t) {
						case 0:
							return this.x;
						case 1:
							return this.y;
						default:
							throw new Error('index is out of range: ' + t);
					}
				}),
				(e.clone = function () {
					return new this.constructor(this.x, this.y);
				}),
				(e.copy = function (t) {
					return (this.x = t.x), (this.y = t.y), this;
				}),
				(e.add = function (t, e) {
					return void 0 !== e
						? (console.warn(
								'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'
						  ),
						  this.addVectors(t, e))
						: ((this.x += t.x), (this.y += t.y), this);
				}),
				(e.addScalar = function (t) {
					return (this.x += t), (this.y += t), this;
				}),
				(e.addVectors = function (t, e) {
					return (this.x = t.x + e.x), (this.y = t.y + e.y), this;
				}),
				(e.addScaledVector = function (t, e) {
					return (this.x += t.x * e), (this.y += t.y * e), this;
				}),
				(e.sub = function (t, e) {
					return void 0 !== e
						? (console.warn(
								'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'
						  ),
						  this.subVectors(t, e))
						: ((this.x -= t.x), (this.y -= t.y), this);
				}),
				(e.subScalar = function (t) {
					return (this.x -= t), (this.y -= t), this;
				}),
				(e.subVectors = function (t, e) {
					return (this.x = t.x - e.x), (this.y = t.y - e.y), this;
				}),
				(e.multiply = function (t) {
					return (this.x *= t.x), (this.y *= t.y), this;
				}),
				(e.multiplyScalar = function (t) {
					return (this.x *= t), (this.y *= t), this;
				}),
				(e.divide = function (t) {
					return (this.x /= t.x), (this.y /= t.y), this;
				}),
				(e.divideScalar = function (t) {
					return this.multiplyScalar(1 / t);
				}),
				(e.applyMatrix3 = function (t) {
					var e = this.x,
						n = this.y,
						r = t.elements;
					return (
						(this.x = r[0] * e + r[3] * n + r[6]),
						(this.y = r[1] * e + r[4] * n + r[7]),
						this
					);
				}),
				(e.min = function (t) {
					return (
						(this.x = Math.min(this.x, t.x)),
						(this.y = Math.min(this.y, t.y)),
						this
					);
				}),
				(e.max = function (t) {
					return (
						(this.x = Math.max(this.x, t.x)),
						(this.y = Math.max(this.y, t.y)),
						this
					);
				}),
				(e.clamp = function (t, e) {
					return (
						(this.x = Math.max(t.x, Math.min(e.x, this.x))),
						(this.y = Math.max(t.y, Math.min(e.y, this.y))),
						this
					);
				}),
				(e.clampScalar = function (t, e) {
					return (
						(this.x = Math.max(t, Math.min(e, this.x))),
						(this.y = Math.max(t, Math.min(e, this.y))),
						this
					);
				}),
				(e.clampLength = function (t, e) {
					var n = this.length();
					return this.divideScalar(n || 1).multiplyScalar(
						Math.max(t, Math.min(e, n))
					);
				}),
				(e.floor = function () {
					return (
						(this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
					);
				}),
				(e.ceil = function () {
					return (
						(this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this
					);
				}),
				(e.round = function () {
					return (
						(this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
					);
				}),
				(e.roundToZero = function () {
					return (
						(this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
						(this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
						this
					);
				}),
				(e.negate = function () {
					return (this.x = -this.x), (this.y = -this.y), this;
				}),
				(e.dot = function (t) {
					return this.x * t.x + this.y * t.y;
				}),
				(e.cross = function (t) {
					return this.x * t.y - this.y * t.x;
				}),
				(e.lengthSq = function () {
					return this.x * this.x + this.y * this.y;
				}),
				(e.length = function () {
					return Math.sqrt(this.x * this.x + this.y * this.y);
				}),
				(e.manhattanLength = function () {
					return Math.abs(this.x) + Math.abs(this.y);
				}),
				(e.normalize = function () {
					return this.divideScalar(this.length() || 1);
				}),
				(e.angle = function () {
					var t = Math.atan2(-this.y, -this.x) + Math.PI;
					return t;
				}),
				(e.distanceTo = function (t) {
					return Math.sqrt(this.distanceToSquared(t));
				}),
				(e.distanceToSquared = function (t) {
					var e = this.x - t.x,
						n = this.y - t.y;
					return e * e + n * n;
				}),
				(e.manhattanDistanceTo = function (t) {
					return Math.abs(this.x - t.x) + Math.abs(this.y - t.y);
				}),
				(e.setLength = function (t) {
					return this.normalize().multiplyScalar(t);
				}),
				(e.lerp = function (t, e) {
					return (
						(this.x += (t.x - this.x) * e), (this.y += (t.y - this.y) * e), this
					);
				}),
				(e.lerpVectors = function (t, e, n) {
					return (
						(this.x = t.x + (e.x - t.x) * n),
						(this.y = t.y + (e.y - t.y) * n),
						this
					);
				}),
				(e.equals = function (t) {
					return t.x === this.x && t.y === this.y;
				}),
				(e.fromArray = function (t, e) {
					return (
						void 0 === e && (e = 0), (this.x = t[e]), (this.y = t[e + 1]), this
					);
				}),
				(e.toArray = function (t, e) {
					return (
						void 0 === t && (t = []),
						void 0 === e && (e = 0),
						(t[e] = this.x),
						(t[e + 1] = this.y),
						t
					);
				}),
				(e.fromBufferAttribute = function (t, e, n) {
					return (
						void 0 !== n &&
							console.warn(
								'THREE.Vector2: offset has been removed from .fromBufferAttribute().'
							),
						(this.x = t.getX(e)),
						(this.y = t.getY(e)),
						this
					);
				}),
				(e.rotateAround = function (t, e) {
					var n = Math.cos(e),
						r = Math.sin(e),
						i = this.x - t.x,
						a = this.y - t.y;
					return (
						(this.x = i * n - a * r + t.x), (this.y = i * r + a * n + t.y), this
					);
				}),
				(e.random = function () {
					return (this.x = Math.random()), (this.y = Math.random()), this;
				}),
				lt(t, [
					{
						key: 'width',
						get: function () {
							return this.x;
						},
						set: function (t) {
							this.x = t;
						},
					},
					{
						key: 'height',
						get: function () {
							return this.y;
						},
						set: function (t) {
							this.y = t;
						},
					},
				]),
				t
			);
		})(),
		ft = (function () {
			function t() {
				Object.defineProperty(this, 'isMatrix3', { value: !0 }),
					(this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
					arguments.length > 0 &&
						console.error(
							'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.'
						);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e, n, r, i, a, o, s, c) {
					var l = this.elements;
					return (
						(l[0] = t),
						(l[1] = r),
						(l[2] = o),
						(l[3] = e),
						(l[4] = i),
						(l[5] = s),
						(l[6] = n),
						(l[7] = a),
						(l[8] = c),
						this
					);
				}),
				(e.identity = function () {
					return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
				}),
				(e.clone = function () {
					return new this.constructor().fromArray(this.elements);
				}),
				(e.copy = function (t) {
					var e = this.elements,
						n = t.elements;
					return (
						(e[0] = n[0]),
						(e[1] = n[1]),
						(e[2] = n[2]),
						(e[3] = n[3]),
						(e[4] = n[4]),
						(e[5] = n[5]),
						(e[6] = n[6]),
						(e[7] = n[7]),
						(e[8] = n[8]),
						this
					);
				}),
				(e.extractBasis = function (t, e, n) {
					return (
						t.setFromMatrix3Column(this, 0),
						e.setFromMatrix3Column(this, 1),
						n.setFromMatrix3Column(this, 2),
						this
					);
				}),
				(e.setFromMatrix4 = function (t) {
					var e = t.elements;
					return (
						this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
						this
					);
				}),
				(e.multiply = function (t) {
					return this.multiplyMatrices(this, t);
				}),
				(e.premultiply = function (t) {
					return this.multiplyMatrices(t, this);
				}),
				(e.multiplyMatrices = function (t, e) {
					var n = t.elements,
						r = e.elements,
						i = this.elements,
						a = n[0],
						o = n[3],
						s = n[6],
						c = n[1],
						l = n[4],
						u = n[7],
						h = n[2],
						d = n[5],
						p = n[8],
						f = r[0],
						m = r[3],
						v = r[6],
						g = r[1],
						y = r[4],
						x = r[7],
						_ = r[2],
						b = r[5],
						w = r[8];
					return (
						(i[0] = a * f + o * g + s * _),
						(i[3] = a * m + o * y + s * b),
						(i[6] = a * v + o * x + s * w),
						(i[1] = c * f + l * g + u * _),
						(i[4] = c * m + l * y + u * b),
						(i[7] = c * v + l * x + u * w),
						(i[2] = h * f + d * g + p * _),
						(i[5] = h * m + d * y + p * b),
						(i[8] = h * v + d * x + p * w),
						this
					);
				}),
				(e.multiplyScalar = function (t) {
					var e = this.elements;
					return (
						(e[0] *= t),
						(e[3] *= t),
						(e[6] *= t),
						(e[1] *= t),
						(e[4] *= t),
						(e[7] *= t),
						(e[2] *= t),
						(e[5] *= t),
						(e[8] *= t),
						this
					);
				}),
				(e.determinant = function () {
					var t = this.elements,
						e = t[0],
						n = t[1],
						r = t[2],
						i = t[3],
						a = t[4],
						o = t[5],
						s = t[6],
						c = t[7],
						l = t[8];
					return (
						e * a * l -
						e * o * c -
						n * i * l +
						n * o * s +
						r * i * c -
						r * a * s
					);
				}),
				(e.getInverse = function (t, e) {
					void 0 !== e &&
						console.warn(
							'THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.'
						);
					var n = t.elements,
						r = this.elements,
						i = n[0],
						a = n[1],
						o = n[2],
						s = n[3],
						c = n[4],
						l = n[5],
						u = n[6],
						h = n[7],
						d = n[8],
						p = d * c - l * h,
						f = l * u - d * s,
						m = h * s - c * u,
						v = i * p + a * f + o * m;
					if (0 === v) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
					var g = 1 / v;
					return (
						(r[0] = p * g),
						(r[1] = (o * h - d * a) * g),
						(r[2] = (l * a - o * c) * g),
						(r[3] = f * g),
						(r[4] = (d * i - o * u) * g),
						(r[5] = (o * s - l * i) * g),
						(r[6] = m * g),
						(r[7] = (a * u - h * i) * g),
						(r[8] = (c * i - a * s) * g),
						this
					);
				}),
				(e.transpose = function () {
					var t,
						e = this.elements;
					return (
						(t = e[1]),
						(e[1] = e[3]),
						(e[3] = t),
						(t = e[2]),
						(e[2] = e[6]),
						(e[6] = t),
						(t = e[5]),
						(e[5] = e[7]),
						(e[7] = t),
						this
					);
				}),
				(e.getNormalMatrix = function (t) {
					return this.setFromMatrix4(t).getInverse(this).transpose();
				}),
				(e.transposeIntoArray = function (t) {
					var e = this.elements;
					return (
						(t[0] = e[0]),
						(t[1] = e[3]),
						(t[2] = e[6]),
						(t[3] = e[1]),
						(t[4] = e[4]),
						(t[5] = e[7]),
						(t[6] = e[2]),
						(t[7] = e[5]),
						(t[8] = e[8]),
						this
					);
				}),
				(e.setUvTransform = function (t, e, n, r, i, a, o) {
					var s = Math.cos(i),
						c = Math.sin(i);
					this.set(
						n * s,
						n * c,
						-n * (s * a + c * o) + a + t,
						-r * c,
						r * s,
						-r * (-c * a + s * o) + o + e,
						0,
						0,
						1
					);
				}),
				(e.scale = function (t, e) {
					var n = this.elements;
					return (
						(n[0] *= t),
						(n[3] *= t),
						(n[6] *= t),
						(n[1] *= e),
						(n[4] *= e),
						(n[7] *= e),
						this
					);
				}),
				(e.rotate = function (t) {
					var e = Math.cos(t),
						n = Math.sin(t),
						r = this.elements,
						i = r[0],
						a = r[3],
						o = r[6],
						s = r[1],
						c = r[4],
						l = r[7];
					return (
						(r[0] = e * i + n * s),
						(r[3] = e * a + n * c),
						(r[6] = e * o + n * l),
						(r[1] = -n * i + e * s),
						(r[4] = -n * a + e * c),
						(r[7] = -n * o + e * l),
						this
					);
				}),
				(e.translate = function (t, e) {
					var n = this.elements;
					return (
						(n[0] += t * n[2]),
						(n[3] += t * n[5]),
						(n[6] += t * n[8]),
						(n[1] += e * n[2]),
						(n[4] += e * n[5]),
						(n[7] += e * n[8]),
						this
					);
				}),
				(e.equals = function (t) {
					for (var e = this.elements, n = t.elements, r = 0; r < 9; r++)
						if (e[r] !== n[r]) return !1;
					return !0;
				}),
				(e.fromArray = function (t, e) {
					void 0 === e && (e = 0);
					for (var n = 0; n < 9; n++) this.elements[n] = t[n + e];
					return this;
				}),
				(e.toArray = function (t, e) {
					void 0 === t && (t = []), void 0 === e && (e = 0);
					var n = this.elements;
					return (
						(t[e] = n[0]),
						(t[e + 1] = n[1]),
						(t[e + 2] = n[2]),
						(t[e + 3] = n[3]),
						(t[e + 4] = n[4]),
						(t[e + 5] = n[5]),
						(t[e + 6] = n[6]),
						(t[e + 7] = n[7]),
						(t[e + 8] = n[8]),
						t
					);
				}),
				t
			);
		})(),
		mt = {
			getDataURL: function (t) {
				if (/^data:/i.test(t.src)) return t.src;
				if ('undefined' == typeof HTMLCanvasElement) return t.src;
				var e;
				if (t instanceof HTMLCanvasElement) e = t;
				else {
					void 0 === dt &&
						(dt = document.createElementNS(
							'http://www.w3.org/1999/xhtml',
							'canvas'
						)),
						(dt.width = t.width),
						(dt.height = t.height);
					var n = dt.getContext('2d');
					t instanceof ImageData
						? n.putImageData(t, 0, 0)
						: n.drawImage(t, 0, 0, t.width, t.height),
						(e = dt);
				}
				return e.width > 2048 || e.height > 2048
					? e.toDataURL('image/jpeg', 0.6)
					: e.toDataURL('image/png');
			},
		},
		vt = 0;
	function gt(t, e, n, r, i, a, o, s, c, l) {
		Object.defineProperty(this, 'id', { value: vt++ }),
			(this.uuid = st.generateUUID()),
			(this.name = ''),
			(this.image = void 0 !== t ? t : gt.DEFAULT_IMAGE),
			(this.mipmaps = []),
			(this.mapping = void 0 !== e ? e : gt.DEFAULT_MAPPING),
			(this.wrapS = void 0 !== n ? n : u),
			(this.wrapT = void 0 !== r ? r : u),
			(this.magFilter = void 0 !== i ? i : m),
			(this.minFilter = void 0 !== a ? a : g),
			(this.anisotropy = void 0 !== c ? c : 1),
			(this.format = void 0 !== o ? o : T),
			(this.internalFormat = null),
			(this.type = void 0 !== s ? s : y),
			(this.offset = new pt(0, 0)),
			(this.repeat = new pt(1, 1)),
			(this.center = new pt(0, 0)),
			(this.rotation = 0),
			(this.matrixAutoUpdate = !0),
			(this.matrix = new ft()),
			(this.generateMipmaps = !0),
			(this.premultiplyAlpha = !1),
			(this.flipY = !0),
			(this.unpackAlignment = 4),
			(this.encoding = void 0 !== l ? l : q),
			(this.version = 0),
			(this.onUpdate = null);
	}
	(gt.DEFAULT_IMAGE = void 0),
		(gt.DEFAULT_MAPPING = n),
		(gt.prototype = Object.assign(Object.create(rt.prototype), {
			constructor: gt,
			isTexture: !0,
			updateMatrix: function () {
				this.matrix.setUvTransform(
					this.offset.x,
					this.offset.y,
					this.repeat.x,
					this.repeat.y,
					this.rotation,
					this.center.x,
					this.center.y
				);
			},
			clone: function () {
				return new this.constructor().copy(this);
			},
			copy: function (t) {
				return (
					(this.name = t.name),
					(this.image = t.image),
					(this.mipmaps = t.mipmaps.slice(0)),
					(this.mapping = t.mapping),
					(this.wrapS = t.wrapS),
					(this.wrapT = t.wrapT),
					(this.magFilter = t.magFilter),
					(this.minFilter = t.minFilter),
					(this.anisotropy = t.anisotropy),
					(this.format = t.format),
					(this.internalFormat = t.internalFormat),
					(this.type = t.type),
					this.offset.copy(t.offset),
					this.repeat.copy(t.repeat),
					this.center.copy(t.center),
					(this.rotation = t.rotation),
					(this.matrixAutoUpdate = t.matrixAutoUpdate),
					this.matrix.copy(t.matrix),
					(this.generateMipmaps = t.generateMipmaps),
					(this.premultiplyAlpha = t.premultiplyAlpha),
					(this.flipY = t.flipY),
					(this.unpackAlignment = t.unpackAlignment),
					(this.encoding = t.encoding),
					this
				);
			},
			toJSON: function (t) {
				var e = void 0 === t || 'string' == typeof t;
				if (!e && void 0 !== t.textures[this.uuid])
					return t.textures[this.uuid];
				var n = {
					metadata: {
						version: 4.5,
						type: 'Texture',
						generator: 'Texture.toJSON',
					},
					uuid: this.uuid,
					name: this.name,
					mapping: this.mapping,
					repeat: [this.repeat.x, this.repeat.y],
					offset: [this.offset.x, this.offset.y],
					center: [this.center.x, this.center.y],
					rotation: this.rotation,
					wrap: [this.wrapS, this.wrapT],
					format: this.format,
					type: this.type,
					encoding: this.encoding,
					minFilter: this.minFilter,
					magFilter: this.magFilter,
					anisotropy: this.anisotropy,
					flipY: this.flipY,
					premultiplyAlpha: this.premultiplyAlpha,
					unpackAlignment: this.unpackAlignment,
				};
				if (void 0 !== this.image) {
					var r = this.image;
					if (
						(void 0 === r.uuid && (r.uuid = st.generateUUID()),
						!e && void 0 === t.images[r.uuid])
					) {
						var i;
						if (Array.isArray(r)) {
							i = [];
							for (var a = 0, o = r.length; a < o; a++)
								i.push(mt.getDataURL(r[a]));
						} else i = mt.getDataURL(r);
						t.images[r.uuid] = { uuid: r.uuid, url: i };
					}
					n.image = r.uuid;
				}
				return e || (t.textures[this.uuid] = n), n;
			},
			dispose: function () {
				this.dispatchEvent({ type: 'dispose' });
			},
			transformUv: function (t) {
				if (this.mapping !== n) return t;
				if ((t.applyMatrix3(this.matrix), t.x < 0 || t.x > 1))
					switch (this.wrapS) {
						case l:
							t.x = t.x - Math.floor(t.x);
							break;
						case u:
							t.x = t.x < 0 ? 0 : 1;
							break;
						case h:
							1 === Math.abs(Math.floor(t.x) % 2)
								? (t.x = Math.ceil(t.x) - t.x)
								: (t.x = t.x - Math.floor(t.x));
					}
				if (t.y < 0 || t.y > 1)
					switch (this.wrapT) {
						case l:
							t.y = t.y - Math.floor(t.y);
							break;
						case u:
							t.y = t.y < 0 ? 0 : 1;
							break;
						case h:
							1 === Math.abs(Math.floor(t.y) % 2)
								? (t.y = Math.ceil(t.y) - t.y)
								: (t.y = t.y - Math.floor(t.y));
					}
				return this.flipY && (t.y = 1 - t.y), t;
			},
		})),
		Object.defineProperty(gt.prototype, 'needsUpdate', {
			set: function (t) {
				!0 === t && this.version++;
			},
		});
	var yt = (function () {
		function t(t, e, n, r) {
			void 0 === t && (t = 0),
				void 0 === e && (e = 0),
				void 0 === n && (n = 0),
				void 0 === r && (r = 1),
				Object.defineProperty(this, 'isVector4', { value: !0 }),
				(this.x = t),
				(this.y = e),
				(this.z = n),
				(this.w = r);
		}
		var e = t.prototype;
		return (
			(e.set = function (t, e, n, r) {
				return (this.x = t), (this.y = e), (this.z = n), (this.w = r), this;
			}),
			(e.setScalar = function (t) {
				return (this.x = t), (this.y = t), (this.z = t), (this.w = t), this;
			}),
			(e.setX = function (t) {
				return (this.x = t), this;
			}),
			(e.setY = function (t) {
				return (this.y = t), this;
			}),
			(e.setZ = function (t) {
				return (this.z = t), this;
			}),
			(e.setW = function (t) {
				return (this.w = t), this;
			}),
			(e.setComponent = function (t, e) {
				switch (t) {
					case 0:
						this.x = e;
						break;
					case 1:
						this.y = e;
						break;
					case 2:
						this.z = e;
						break;
					case 3:
						this.w = e;
						break;
					default:
						throw new Error('index is out of range: ' + t);
				}
				return this;
			}),
			(e.getComponent = function (t) {
				switch (t) {
					case 0:
						return this.x;
					case 1:
						return this.y;
					case 2:
						return this.z;
					case 3:
						return this.w;
					default:
						throw new Error('index is out of range: ' + t);
				}
			}),
			(e.clone = function () {
				return new this.constructor(this.x, this.y, this.z, this.w);
			}),
			(e.copy = function (t) {
				return (
					(this.x = t.x),
					(this.y = t.y),
					(this.z = t.z),
					(this.w = void 0 !== t.w ? t.w : 1),
					this
				);
			}),
			(e.add = function (t, e) {
				return void 0 !== e
					? (console.warn(
							'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'
					  ),
					  this.addVectors(t, e))
					: ((this.x += t.x),
					  (this.y += t.y),
					  (this.z += t.z),
					  (this.w += t.w),
					  this);
			}),
			(e.addScalar = function (t) {
				return (this.x += t), (this.y += t), (this.z += t), (this.w += t), this;
			}),
			(e.addVectors = function (t, e) {
				return (
					(this.x = t.x + e.x),
					(this.y = t.y + e.y),
					(this.z = t.z + e.z),
					(this.w = t.w + e.w),
					this
				);
			}),
			(e.addScaledVector = function (t, e) {
				return (
					(this.x += t.x * e),
					(this.y += t.y * e),
					(this.z += t.z * e),
					(this.w += t.w * e),
					this
				);
			}),
			(e.sub = function (t, e) {
				return void 0 !== e
					? (console.warn(
							'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'
					  ),
					  this.subVectors(t, e))
					: ((this.x -= t.x),
					  (this.y -= t.y),
					  (this.z -= t.z),
					  (this.w -= t.w),
					  this);
			}),
			(e.subScalar = function (t) {
				return (this.x -= t), (this.y -= t), (this.z -= t), (this.w -= t), this;
			}),
			(e.subVectors = function (t, e) {
				return (
					(this.x = t.x - e.x),
					(this.y = t.y - e.y),
					(this.z = t.z - e.z),
					(this.w = t.w - e.w),
					this
				);
			}),
			(e.multiplyScalar = function (t) {
				return (this.x *= t), (this.y *= t), (this.z *= t), (this.w *= t), this;
			}),
			(e.applyMatrix4 = function (t) {
				var e = this.x,
					n = this.y,
					r = this.z,
					i = this.w,
					a = t.elements;
				return (
					(this.x = a[0] * e + a[4] * n + a[8] * r + a[12] * i),
					(this.y = a[1] * e + a[5] * n + a[9] * r + a[13] * i),
					(this.z = a[2] * e + a[6] * n + a[10] * r + a[14] * i),
					(this.w = a[3] * e + a[7] * n + a[11] * r + a[15] * i),
					this
				);
			}),
			(e.divideScalar = function (t) {
				return this.multiplyScalar(1 / t);
			}),
			(e.setAxisAngleFromQuaternion = function (t) {
				this.w = 2 * Math.acos(t.w);
				var e = Math.sqrt(1 - t.w * t.w);
				return (
					e < 1e-4
						? ((this.x = 1), (this.y = 0), (this.z = 0))
						: ((this.x = t.x / e), (this.y = t.y / e), (this.z = t.z / e)),
					this
				);
			}),
			(e.setAxisAngleFromRotationMatrix = function (t) {
				var e,
					n,
					r,
					i,
					a = 0.01,
					o = 0.1,
					s = t.elements,
					c = s[0],
					l = s[4],
					u = s[8],
					h = s[1],
					d = s[5],
					p = s[9],
					f = s[2],
					m = s[6],
					v = s[10];
				if (Math.abs(l - h) < a && Math.abs(u - f) < a && Math.abs(p - m) < a) {
					if (
						Math.abs(l + h) < o &&
						Math.abs(u + f) < o &&
						Math.abs(p + m) < o &&
						Math.abs(c + d + v - 3) < o
					)
						return this.set(1, 0, 0, 0), this;
					e = Math.PI;
					var g = (c + 1) / 2,
						y = (d + 1) / 2,
						x = (v + 1) / 2,
						_ = (l + h) / 4,
						b = (u + f) / 4,
						w = (p + m) / 4;
					return (
						g > y && g > x
							? g < a
								? ((n = 0), (r = 0.707106781), (i = 0.707106781))
								: ((r = _ / (n = Math.sqrt(g))), (i = b / n))
							: y > x
							? y < a
								? ((n = 0.707106781), (r = 0), (i = 0.707106781))
								: ((n = _ / (r = Math.sqrt(y))), (i = w / r))
							: x < a
							? ((n = 0.707106781), (r = 0.707106781), (i = 0))
							: ((n = b / (i = Math.sqrt(x))), (r = w / i)),
						this.set(n, r, i, e),
						this
					);
				}
				var M = Math.sqrt(
					(m - p) * (m - p) + (u - f) * (u - f) + (h - l) * (h - l)
				);
				return (
					Math.abs(M) < 0.001 && (M = 1),
					(this.x = (m - p) / M),
					(this.y = (u - f) / M),
					(this.z = (h - l) / M),
					(this.w = Math.acos((c + d + v - 1) / 2)),
					this
				);
			}),
			(e.min = function (t) {
				return (
					(this.x = Math.min(this.x, t.x)),
					(this.y = Math.min(this.y, t.y)),
					(this.z = Math.min(this.z, t.z)),
					(this.w = Math.min(this.w, t.w)),
					this
				);
			}),
			(e.max = function (t) {
				return (
					(this.x = Math.max(this.x, t.x)),
					(this.y = Math.max(this.y, t.y)),
					(this.z = Math.max(this.z, t.z)),
					(this.w = Math.max(this.w, t.w)),
					this
				);
			}),
			(e.clamp = function (t, e) {
				return (
					(this.x = Math.max(t.x, Math.min(e.x, this.x))),
					(this.y = Math.max(t.y, Math.min(e.y, this.y))),
					(this.z = Math.max(t.z, Math.min(e.z, this.z))),
					(this.w = Math.max(t.w, Math.min(e.w, this.w))),
					this
				);
			}),
			(e.clampScalar = function (t, e) {
				return (
					(this.x = Math.max(t, Math.min(e, this.x))),
					(this.y = Math.max(t, Math.min(e, this.y))),
					(this.z = Math.max(t, Math.min(e, this.z))),
					(this.w = Math.max(t, Math.min(e, this.w))),
					this
				);
			}),
			(e.clampLength = function (t, e) {
				var n = this.length();
				return this.divideScalar(n || 1).multiplyScalar(
					Math.max(t, Math.min(e, n))
				);
			}),
			(e.floor = function () {
				return (
					(this.x = Math.floor(this.x)),
					(this.y = Math.floor(this.y)),
					(this.z = Math.floor(this.z)),
					(this.w = Math.floor(this.w)),
					this
				);
			}),
			(e.ceil = function () {
				return (
					(this.x = Math.ceil(this.x)),
					(this.y = Math.ceil(this.y)),
					(this.z = Math.ceil(this.z)),
					(this.w = Math.ceil(this.w)),
					this
				);
			}),
			(e.round = function () {
				return (
					(this.x = Math.round(this.x)),
					(this.y = Math.round(this.y)),
					(this.z = Math.round(this.z)),
					(this.w = Math.round(this.w)),
					this
				);
			}),
			(e.roundToZero = function () {
				return (
					(this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
					(this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
					(this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
					(this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
					this
				);
			}),
			(e.negate = function () {
				return (
					(this.x = -this.x),
					(this.y = -this.y),
					(this.z = -this.z),
					(this.w = -this.w),
					this
				);
			}),
			(e.dot = function (t) {
				return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
			}),
			(e.lengthSq = function () {
				return (
					this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
				);
			}),
			(e.length = function () {
				return Math.sqrt(
					this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
				);
			}),
			(e.manhattanLength = function () {
				return (
					Math.abs(this.x) +
					Math.abs(this.y) +
					Math.abs(this.z) +
					Math.abs(this.w)
				);
			}),
			(e.normalize = function () {
				return this.divideScalar(this.length() || 1);
			}),
			(e.setLength = function (t) {
				return this.normalize().multiplyScalar(t);
			}),
			(e.lerp = function (t, e) {
				return (
					(this.x += (t.x - this.x) * e),
					(this.y += (t.y - this.y) * e),
					(this.z += (t.z - this.z) * e),
					(this.w += (t.w - this.w) * e),
					this
				);
			}),
			(e.lerpVectors = function (t, e, n) {
				return (
					(this.x = t.x + (e.x - t.x) * n),
					(this.y = t.y + (e.y - t.y) * n),
					(this.z = t.z + (e.z - t.z) * n),
					(this.w = t.w + (e.w - t.w) * n),
					this
				);
			}),
			(e.equals = function (t) {
				return (
					t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
				);
			}),
			(e.fromArray = function (t, e) {
				return (
					void 0 === e && (e = 0),
					(this.x = t[e]),
					(this.y = t[e + 1]),
					(this.z = t[e + 2]),
					(this.w = t[e + 3]),
					this
				);
			}),
			(e.toArray = function (t, e) {
				return (
					void 0 === t && (t = []),
					void 0 === e && (e = 0),
					(t[e] = this.x),
					(t[e + 1] = this.y),
					(t[e + 2] = this.z),
					(t[e + 3] = this.w),
					t
				);
			}),
			(e.fromBufferAttribute = function (t, e, n) {
				return (
					void 0 !== n &&
						console.warn(
							'THREE.Vector4: offset has been removed from .fromBufferAttribute().'
						),
					(this.x = t.getX(e)),
					(this.y = t.getY(e)),
					(this.z = t.getZ(e)),
					(this.w = t.getW(e)),
					this
				);
			}),
			(e.random = function () {
				return (
					(this.x = Math.random()),
					(this.y = Math.random()),
					(this.z = Math.random()),
					(this.w = Math.random()),
					this
				);
			}),
			lt(t, [
				{
					key: 'width',
					get: function () {
						return this.z;
					},
					set: function (t) {
						this.z = t;
					},
				},
				{
					key: 'height',
					get: function () {
						return this.w;
					},
					set: function (t) {
						this.w = t;
					},
				},
			]),
			t
		);
	})();
	function xt(t, e, n) {
		(this.width = t),
			(this.height = e),
			(this.scissor = new yt(0, 0, t, e)),
			(this.scissorTest = !1),
			(this.viewport = new yt(0, 0, t, e)),
			(n = n || {}),
			(this.texture = new gt(
				void 0,
				n.mapping,
				n.wrapS,
				n.wrapT,
				n.magFilter,
				n.minFilter,
				n.format,
				n.type,
				n.anisotropy,
				n.encoding
			)),
			(this.texture.image = {}),
			(this.texture.image.width = t),
			(this.texture.image.height = e),
			(this.texture.generateMipmaps =
				void 0 !== n.generateMipmaps && n.generateMipmaps),
			(this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : m),
			(this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer),
			(this.stencilBuffer = void 0 !== n.stencilBuffer && n.stencilBuffer),
			(this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null);
	}
	function _t(t, e, n) {
		xt.call(this, t, e, n), (this.samples = 4);
	}
	(xt.prototype = Object.assign(Object.create(rt.prototype), {
		constructor: xt,
		isWebGLRenderTarget: !0,
		setSize: function (t, e) {
			(this.width === t && this.height === e) ||
				((this.width = t),
				(this.height = e),
				(this.texture.image.width = t),
				(this.texture.image.height = e),
				this.dispose()),
				this.viewport.set(0, 0, t, e),
				this.scissor.set(0, 0, t, e);
		},
		clone: function () {
			return new this.constructor().copy(this);
		},
		copy: function (t) {
			return (
				(this.width = t.width),
				(this.height = t.height),
				this.viewport.copy(t.viewport),
				(this.texture = t.texture.clone()),
				(this.depthBuffer = t.depthBuffer),
				(this.stencilBuffer = t.stencilBuffer),
				(this.depthTexture = t.depthTexture),
				this
			);
		},
		dispose: function () {
			this.dispatchEvent({ type: 'dispose' });
		},
	})),
		(_t.prototype = Object.assign(Object.create(xt.prototype), {
			constructor: _t,
			isWebGLMultisampleRenderTarget: !0,
			copy: function (t) {
				return (
					xt.prototype.copy.call(this, t), (this.samples = t.samples), this
				);
			},
		}));
	var bt = (function () {
			function t(t, e, n, r) {
				void 0 === t && (t = 0),
					void 0 === e && (e = 0),
					void 0 === n && (n = 0),
					void 0 === r && (r = 1),
					Object.defineProperty(this, 'isQuaternion', { value: !0 }),
					(this._x = t),
					(this._y = e),
					(this._z = n),
					(this._w = r);
			}
			(t.slerp = function (t, e, n, r) {
				return n.copy(t).slerp(e, r);
			}),
				(t.slerpFlat = function (t, e, n, r, i, a, o) {
					var s = n[r + 0],
						c = n[r + 1],
						l = n[r + 2],
						u = n[r + 3],
						h = i[a + 0],
						d = i[a + 1],
						p = i[a + 2],
						f = i[a + 3];
					if (u !== f || s !== h || c !== d || l !== p) {
						var m = 1 - o,
							v = s * h + c * d + l * p + u * f,
							g = v >= 0 ? 1 : -1,
							y = 1 - v * v;
						if (y > Number.EPSILON) {
							var x = Math.sqrt(y),
								_ = Math.atan2(x, v * g);
							(m = Math.sin(m * _) / x), (o = Math.sin(o * _) / x);
						}
						var b = o * g;
						if (
							((s = s * m + h * b),
							(c = c * m + d * b),
							(l = l * m + p * b),
							(u = u * m + f * b),
							m === 1 - o)
						) {
							var w = 1 / Math.sqrt(s * s + c * c + l * l + u * u);
							(s *= w), (c *= w), (l *= w), (u *= w);
						}
					}
					(t[e] = s), (t[e + 1] = c), (t[e + 2] = l), (t[e + 3] = u);
				}),
				(t.multiplyQuaternionsFlat = function (t, e, n, r, i, a) {
					var o = n[r],
						s = n[r + 1],
						c = n[r + 2],
						l = n[r + 3],
						u = i[a],
						h = i[a + 1],
						d = i[a + 2],
						p = i[a + 3];
					return (
						(t[e] = o * p + l * u + s * d - c * h),
						(t[e + 1] = s * p + l * h + c * u - o * d),
						(t[e + 2] = c * p + l * d + o * h - s * u),
						(t[e + 3] = l * p - o * u - s * h - c * d),
						t
					);
				});
			var e = t.prototype;
			return (
				(e.set = function (t, e, n, r) {
					return (
						(this._x = t),
						(this._y = e),
						(this._z = n),
						(this._w = r),
						this._onChangeCallback(),
						this
					);
				}),
				(e.clone = function () {
					return new this.constructor(this._x, this._y, this._z, this._w);
				}),
				(e.copy = function (t) {
					return (
						(this._x = t.x),
						(this._y = t.y),
						(this._z = t.z),
						(this._w = t.w),
						this._onChangeCallback(),
						this
					);
				}),
				(e.setFromEuler = function (t, e) {
					if (!t || !t.isEuler)
						throw new Error(
							'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.'
						);
					var n = t._x,
						r = t._y,
						i = t._z,
						a = t._order,
						o = Math.cos,
						s = Math.sin,
						c = o(n / 2),
						l = o(r / 2),
						u = o(i / 2),
						h = s(n / 2),
						d = s(r / 2),
						p = s(i / 2);
					switch (a) {
						case 'XYZ':
							(this._x = h * l * u + c * d * p),
								(this._y = c * d * u - h * l * p),
								(this._z = c * l * p + h * d * u),
								(this._w = c * l * u - h * d * p);
							break;
						case 'YXZ':
							(this._x = h * l * u + c * d * p),
								(this._y = c * d * u - h * l * p),
								(this._z = c * l * p - h * d * u),
								(this._w = c * l * u + h * d * p);
							break;
						case 'ZXY':
							(this._x = h * l * u - c * d * p),
								(this._y = c * d * u + h * l * p),
								(this._z = c * l * p + h * d * u),
								(this._w = c * l * u - h * d * p);
							break;
						case 'ZYX':
							(this._x = h * l * u - c * d * p),
								(this._y = c * d * u + h * l * p),
								(this._z = c * l * p - h * d * u),
								(this._w = c * l * u + h * d * p);
							break;
						case 'YZX':
							(this._x = h * l * u + c * d * p),
								(this._y = c * d * u + h * l * p),
								(this._z = c * l * p - h * d * u),
								(this._w = c * l * u - h * d * p);
							break;
						case 'XZY':
							(this._x = h * l * u - c * d * p),
								(this._y = c * d * u - h * l * p),
								(this._z = c * l * p + h * d * u),
								(this._w = c * l * u + h * d * p);
							break;
						default:
							console.warn(
								'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' +
									a
							);
					}
					return !1 !== e && this._onChangeCallback(), this;
				}),
				(e.setFromAxisAngle = function (t, e) {
					var n = e / 2,
						r = Math.sin(n);
					return (
						(this._x = t.x * r),
						(this._y = t.y * r),
						(this._z = t.z * r),
						(this._w = Math.cos(n)),
						this._onChangeCallback(),
						this
					);
				}),
				(e.setFromRotationMatrix = function (t) {
					var e = t.elements,
						n = e[0],
						r = e[4],
						i = e[8],
						a = e[1],
						o = e[5],
						s = e[9],
						c = e[2],
						l = e[6],
						u = e[10],
						h = n + o + u;
					if (h > 0) {
						var d = 0.5 / Math.sqrt(h + 1);
						(this._w = 0.25 / d),
							(this._x = (l - s) * d),
							(this._y = (i - c) * d),
							(this._z = (a - r) * d);
					} else if (n > o && n > u) {
						var p = 2 * Math.sqrt(1 + n - o - u);
						(this._w = (l - s) / p),
							(this._x = 0.25 * p),
							(this._y = (r + a) / p),
							(this._z = (i + c) / p);
					} else if (o > u) {
						var f = 2 * Math.sqrt(1 + o - n - u);
						(this._w = (i - c) / f),
							(this._x = (r + a) / f),
							(this._y = 0.25 * f),
							(this._z = (s + l) / f);
					} else {
						var m = 2 * Math.sqrt(1 + u - n - o);
						(this._w = (a - r) / m),
							(this._x = (i + c) / m),
							(this._y = (s + l) / m),
							(this._z = 0.25 * m);
					}
					return this._onChangeCallback(), this;
				}),
				(e.setFromUnitVectors = function (t, e) {
					var n = t.dot(e) + 1;
					return (
						n < 1e-6
							? ((n = 0),
							  Math.abs(t.x) > Math.abs(t.z)
									? ((this._x = -t.y),
									  (this._y = t.x),
									  (this._z = 0),
									  (this._w = n))
									: ((this._x = 0),
									  (this._y = -t.z),
									  (this._z = t.y),
									  (this._w = n)))
							: ((this._x = t.y * e.z - t.z * e.y),
							  (this._y = t.z * e.x - t.x * e.z),
							  (this._z = t.x * e.y - t.y * e.x),
							  (this._w = n)),
						this.normalize()
					);
				}),
				(e.angleTo = function (t) {
					return 2 * Math.acos(Math.abs(st.clamp(this.dot(t), -1, 1)));
				}),
				(e.rotateTowards = function (t, e) {
					var n = this.angleTo(t);
					if (0 === n) return this;
					var r = Math.min(1, e / n);
					return this.slerp(t, r), this;
				}),
				(e.identity = function () {
					return this.set(0, 0, 0, 1);
				}),
				(e.inverse = function () {
					return this.conjugate();
				}),
				(e.conjugate = function () {
					return (
						(this._x *= -1),
						(this._y *= -1),
						(this._z *= -1),
						this._onChangeCallback(),
						this
					);
				}),
				(e.dot = function (t) {
					return (
						this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
					);
				}),
				(e.lengthSq = function () {
					return (
						this._x * this._x +
						this._y * this._y +
						this._z * this._z +
						this._w * this._w
					);
				}),
				(e.length = function () {
					return Math.sqrt(
						this._x * this._x +
							this._y * this._y +
							this._z * this._z +
							this._w * this._w
					);
				}),
				(e.normalize = function () {
					var t = this.length();
					return (
						0 === t
							? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
							: ((t = 1 / t),
							  (this._x = this._x * t),
							  (this._y = this._y * t),
							  (this._z = this._z * t),
							  (this._w = this._w * t)),
						this._onChangeCallback(),
						this
					);
				}),
				(e.multiply = function (t, e) {
					return void 0 !== e
						? (console.warn(
								'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.'
						  ),
						  this.multiplyQuaternions(t, e))
						: this.multiplyQuaternions(this, t);
				}),
				(e.premultiply = function (t) {
					return this.multiplyQuaternions(t, this);
				}),
				(e.multiplyQuaternions = function (t, e) {
					var n = t._x,
						r = t._y,
						i = t._z,
						a = t._w,
						o = e._x,
						s = e._y,
						c = e._z,
						l = e._w;
					return (
						(this._x = n * l + a * o + r * c - i * s),
						(this._y = r * l + a * s + i * o - n * c),
						(this._z = i * l + a * c + n * s - r * o),
						(this._w = a * l - n * o - r * s - i * c),
						this._onChangeCallback(),
						this
					);
				}),
				(e.slerp = function (t, e) {
					if (0 === e) return this;
					if (1 === e) return this.copy(t);
					var n = this._x,
						r = this._y,
						i = this._z,
						a = this._w,
						o = a * t._w + n * t._x + r * t._y + i * t._z;
					if (
						(o < 0
							? ((this._w = -t._w),
							  (this._x = -t._x),
							  (this._y = -t._y),
							  (this._z = -t._z),
							  (o = -o))
							: this.copy(t),
						o >= 1)
					)
						return (
							(this._w = a), (this._x = n), (this._y = r), (this._z = i), this
						);
					var s = 1 - o * o;
					if (s <= Number.EPSILON) {
						var c = 1 - e;
						return (
							(this._w = c * a + e * this._w),
							(this._x = c * n + e * this._x),
							(this._y = c * r + e * this._y),
							(this._z = c * i + e * this._z),
							this.normalize(),
							this._onChangeCallback(),
							this
						);
					}
					var l = Math.sqrt(s),
						u = Math.atan2(l, o),
						h = Math.sin((1 - e) * u) / l,
						d = Math.sin(e * u) / l;
					return (
						(this._w = a * h + this._w * d),
						(this._x = n * h + this._x * d),
						(this._y = r * h + this._y * d),
						(this._z = i * h + this._z * d),
						this._onChangeCallback(),
						this
					);
				}),
				(e.equals = function (t) {
					return (
						t._x === this._x &&
						t._y === this._y &&
						t._z === this._z &&
						t._w === this._w
					);
				}),
				(e.fromArray = function (t, e) {
					return (
						void 0 === e && (e = 0),
						(this._x = t[e]),
						(this._y = t[e + 1]),
						(this._z = t[e + 2]),
						(this._w = t[e + 3]),
						this._onChangeCallback(),
						this
					);
				}),
				(e.toArray = function (t, e) {
					return (
						void 0 === t && (t = []),
						void 0 === e && (e = 0),
						(t[e] = this._x),
						(t[e + 1] = this._y),
						(t[e + 2] = this._z),
						(t[e + 3] = this._w),
						t
					);
				}),
				(e.fromBufferAttribute = function (t, e) {
					return (
						(this._x = t.getX(e)),
						(this._y = t.getY(e)),
						(this._z = t.getZ(e)),
						(this._w = t.getW(e)),
						this
					);
				}),
				(e._onChange = function (t) {
					return (this._onChangeCallback = t), this;
				}),
				(e._onChangeCallback = function () {}),
				lt(t, [
					{
						key: 'x',
						get: function () {
							return this._x;
						},
						set: function (t) {
							(this._x = t), this._onChangeCallback();
						},
					},
					{
						key: 'y',
						get: function () {
							return this._y;
						},
						set: function (t) {
							(this._y = t), this._onChangeCallback();
						},
					},
					{
						key: 'z',
						get: function () {
							return this._z;
						},
						set: function (t) {
							(this._z = t), this._onChangeCallback();
						},
					},
					{
						key: 'w',
						get: function () {
							return this._w;
						},
						set: function (t) {
							(this._w = t), this._onChangeCallback();
						},
					},
				]),
				t
			);
		})(),
		wt = (function () {
			function t(t, e, n) {
				void 0 === t && (t = 0),
					void 0 === e && (e = 0),
					void 0 === n && (n = 0),
					Object.defineProperty(this, 'isVector3', { value: !0 }),
					(this.x = t),
					(this.y = e),
					(this.z = n);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e, n) {
					return (
						void 0 === n && (n = this.z),
						(this.x = t),
						(this.y = e),
						(this.z = n),
						this
					);
				}),
				(e.setScalar = function (t) {
					return (this.x = t), (this.y = t), (this.z = t), this;
				}),
				(e.setX = function (t) {
					return (this.x = t), this;
				}),
				(e.setY = function (t) {
					return (this.y = t), this;
				}),
				(e.setZ = function (t) {
					return (this.z = t), this;
				}),
				(e.setComponent = function (t, e) {
					switch (t) {
						case 0:
							this.x = e;
							break;
						case 1:
							this.y = e;
							break;
						case 2:
							this.z = e;
							break;
						default:
							throw new Error('index is out of range: ' + t);
					}
					return this;
				}),
				(e.getComponent = function (t) {
					switch (t) {
						case 0:
							return this.x;
						case 1:
							return this.y;
						case 2:
							return this.z;
						default:
							throw new Error('index is out of range: ' + t);
					}
				}),
				(e.clone = function () {
					return new this.constructor(this.x, this.y, this.z);
				}),
				(e.copy = function (t) {
					return (this.x = t.x), (this.y = t.y), (this.z = t.z), this;
				}),
				(e.add = function (t, e) {
					return void 0 !== e
						? (console.warn(
								'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'
						  ),
						  this.addVectors(t, e))
						: ((this.x += t.x), (this.y += t.y), (this.z += t.z), this);
				}),
				(e.addScalar = function (t) {
					return (this.x += t), (this.y += t), (this.z += t), this;
				}),
				(e.addVectors = function (t, e) {
					return (
						(this.x = t.x + e.x),
						(this.y = t.y + e.y),
						(this.z = t.z + e.z),
						this
					);
				}),
				(e.addScaledVector = function (t, e) {
					return (
						(this.x += t.x * e), (this.y += t.y * e), (this.z += t.z * e), this
					);
				}),
				(e.sub = function (t, e) {
					return void 0 !== e
						? (console.warn(
								'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'
						  ),
						  this.subVectors(t, e))
						: ((this.x -= t.x), (this.y -= t.y), (this.z -= t.z), this);
				}),
				(e.subScalar = function (t) {
					return (this.x -= t), (this.y -= t), (this.z -= t), this;
				}),
				(e.subVectors = function (t, e) {
					return (
						(this.x = t.x - e.x),
						(this.y = t.y - e.y),
						(this.z = t.z - e.z),
						this
					);
				}),
				(e.multiply = function (t, e) {
					return void 0 !== e
						? (console.warn(
								'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.'
						  ),
						  this.multiplyVectors(t, e))
						: ((this.x *= t.x), (this.y *= t.y), (this.z *= t.z), this);
				}),
				(e.multiplyScalar = function (t) {
					return (this.x *= t), (this.y *= t), (this.z *= t), this;
				}),
				(e.multiplyVectors = function (t, e) {
					return (
						(this.x = t.x * e.x),
						(this.y = t.y * e.y),
						(this.z = t.z * e.z),
						this
					);
				}),
				(e.applyEuler = function (t) {
					return (
						(t && t.isEuler) ||
							console.error(
								'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.'
							),
						this.applyQuaternion(St.setFromEuler(t))
					);
				}),
				(e.applyAxisAngle = function (t, e) {
					return this.applyQuaternion(St.setFromAxisAngle(t, e));
				}),
				(e.applyMatrix3 = function (t) {
					var e = this.x,
						n = this.y,
						r = this.z,
						i = t.elements;
					return (
						(this.x = i[0] * e + i[3] * n + i[6] * r),
						(this.y = i[1] * e + i[4] * n + i[7] * r),
						(this.z = i[2] * e + i[5] * n + i[8] * r),
						this
					);
				}),
				(e.applyNormalMatrix = function (t) {
					return this.applyMatrix3(t).normalize();
				}),
				(e.applyMatrix4 = function (t) {
					var e = this.x,
						n = this.y,
						r = this.z,
						i = t.elements,
						a = 1 / (i[3] * e + i[7] * n + i[11] * r + i[15]);
					return (
						(this.x = (i[0] * e + i[4] * n + i[8] * r + i[12]) * a),
						(this.y = (i[1] * e + i[5] * n + i[9] * r + i[13]) * a),
						(this.z = (i[2] * e + i[6] * n + i[10] * r + i[14]) * a),
						this
					);
				}),
				(e.applyQuaternion = function (t) {
					var e = this.x,
						n = this.y,
						r = this.z,
						i = t.x,
						a = t.y,
						o = t.z,
						s = t.w,
						c = s * e + a * r - o * n,
						l = s * n + o * e - i * r,
						u = s * r + i * n - a * e,
						h = -i * e - a * n - o * r;
					return (
						(this.x = c * s + h * -i + l * -o - u * -a),
						(this.y = l * s + h * -a + u * -i - c * -o),
						(this.z = u * s + h * -o + c * -a - l * -i),
						this
					);
				}),
				(e.project = function (t) {
					return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(
						t.projectionMatrix
					);
				}),
				(e.unproject = function (t) {
					return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(
						t.matrixWorld
					);
				}),
				(e.transformDirection = function (t) {
					var e = this.x,
						n = this.y,
						r = this.z,
						i = t.elements;
					return (
						(this.x = i[0] * e + i[4] * n + i[8] * r),
						(this.y = i[1] * e + i[5] * n + i[9] * r),
						(this.z = i[2] * e + i[6] * n + i[10] * r),
						this.normalize()
					);
				}),
				(e.divide = function (t) {
					return (this.x /= t.x), (this.y /= t.y), (this.z /= t.z), this;
				}),
				(e.divideScalar = function (t) {
					return this.multiplyScalar(1 / t);
				}),
				(e.min = function (t) {
					return (
						(this.x = Math.min(this.x, t.x)),
						(this.y = Math.min(this.y, t.y)),
						(this.z = Math.min(this.z, t.z)),
						this
					);
				}),
				(e.max = function (t) {
					return (
						(this.x = Math.max(this.x, t.x)),
						(this.y = Math.max(this.y, t.y)),
						(this.z = Math.max(this.z, t.z)),
						this
					);
				}),
				(e.clamp = function (t, e) {
					return (
						(this.x = Math.max(t.x, Math.min(e.x, this.x))),
						(this.y = Math.max(t.y, Math.min(e.y, this.y))),
						(this.z = Math.max(t.z, Math.min(e.z, this.z))),
						this
					);
				}),
				(e.clampScalar = function (t, e) {
					return (
						(this.x = Math.max(t, Math.min(e, this.x))),
						(this.y = Math.max(t, Math.min(e, this.y))),
						(this.z = Math.max(t, Math.min(e, this.z))),
						this
					);
				}),
				(e.clampLength = function (t, e) {
					var n = this.length();
					return this.divideScalar(n || 1).multiplyScalar(
						Math.max(t, Math.min(e, n))
					);
				}),
				(e.floor = function () {
					return (
						(this.x = Math.floor(this.x)),
						(this.y = Math.floor(this.y)),
						(this.z = Math.floor(this.z)),
						this
					);
				}),
				(e.ceil = function () {
					return (
						(this.x = Math.ceil(this.x)),
						(this.y = Math.ceil(this.y)),
						(this.z = Math.ceil(this.z)),
						this
					);
				}),
				(e.round = function () {
					return (
						(this.x = Math.round(this.x)),
						(this.y = Math.round(this.y)),
						(this.z = Math.round(this.z)),
						this
					);
				}),
				(e.roundToZero = function () {
					return (
						(this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
						(this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
						(this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
						this
					);
				}),
				(e.negate = function () {
					return (
						(this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this
					);
				}),
				(e.dot = function (t) {
					return this.x * t.x + this.y * t.y + this.z * t.z;
				}),
				(e.lengthSq = function () {
					return this.x * this.x + this.y * this.y + this.z * this.z;
				}),
				(e.length = function () {
					return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
				}),
				(e.manhattanLength = function () {
					return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
				}),
				(e.normalize = function () {
					return this.divideScalar(this.length() || 1);
				}),
				(e.setLength = function (t) {
					return this.normalize().multiplyScalar(t);
				}),
				(e.lerp = function (t, e) {
					return (
						(this.x += (t.x - this.x) * e),
						(this.y += (t.y - this.y) * e),
						(this.z += (t.z - this.z) * e),
						this
					);
				}),
				(e.lerpVectors = function (t, e, n) {
					return (
						(this.x = t.x + (e.x - t.x) * n),
						(this.y = t.y + (e.y - t.y) * n),
						(this.z = t.z + (e.z - t.z) * n),
						this
					);
				}),
				(e.cross = function (t, e) {
					return void 0 !== e
						? (console.warn(
								'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.'
						  ),
						  this.crossVectors(t, e))
						: this.crossVectors(this, t);
				}),
				(e.crossVectors = function (t, e) {
					var n = t.x,
						r = t.y,
						i = t.z,
						a = e.x,
						o = e.y,
						s = e.z;
					return (
						(this.x = r * s - i * o),
						(this.y = i * a - n * s),
						(this.z = n * o - r * a),
						this
					);
				}),
				(e.projectOnVector = function (t) {
					var e = t.lengthSq();
					if (0 === e) return this.set(0, 0, 0);
					var n = t.dot(this) / e;
					return this.copy(t).multiplyScalar(n);
				}),
				(e.projectOnPlane = function (t) {
					return Mt.copy(this).projectOnVector(t), this.sub(Mt);
				}),
				(e.reflect = function (t) {
					return this.sub(Mt.copy(t).multiplyScalar(2 * this.dot(t)));
				}),
				(e.angleTo = function (t) {
					var e = Math.sqrt(this.lengthSq() * t.lengthSq());
					if (0 === e) return Math.PI / 2;
					var n = this.dot(t) / e;
					return Math.acos(st.clamp(n, -1, 1));
				}),
				(e.distanceTo = function (t) {
					return Math.sqrt(this.distanceToSquared(t));
				}),
				(e.distanceToSquared = function (t) {
					var e = this.x - t.x,
						n = this.y - t.y,
						r = this.z - t.z;
					return e * e + n * n + r * r;
				}),
				(e.manhattanDistanceTo = function (t) {
					return (
						Math.abs(this.x - t.x) +
						Math.abs(this.y - t.y) +
						Math.abs(this.z - t.z)
					);
				}),
				(e.setFromSpherical = function (t) {
					return this.setFromSphericalCoords(t.radius, t.phi, t.theta);
				}),
				(e.setFromSphericalCoords = function (t, e, n) {
					var r = Math.sin(e) * t;
					return (
						(this.x = r * Math.sin(n)),
						(this.y = Math.cos(e) * t),
						(this.z = r * Math.cos(n)),
						this
					);
				}),
				(e.setFromCylindrical = function (t) {
					return this.setFromCylindricalCoords(t.radius, t.theta, t.y);
				}),
				(e.setFromCylindricalCoords = function (t, e, n) {
					return (
						(this.x = t * Math.sin(e)),
						(this.y = n),
						(this.z = t * Math.cos(e)),
						this
					);
				}),
				(e.setFromMatrixPosition = function (t) {
					var e = t.elements;
					return (this.x = e[12]), (this.y = e[13]), (this.z = e[14]), this;
				}),
				(e.setFromMatrixScale = function (t) {
					var e = this.setFromMatrixColumn(t, 0).length(),
						n = this.setFromMatrixColumn(t, 1).length(),
						r = this.setFromMatrixColumn(t, 2).length();
					return (this.x = e), (this.y = n), (this.z = r), this;
				}),
				(e.setFromMatrixColumn = function (t, e) {
					return this.fromArray(t.elements, 4 * e);
				}),
				(e.setFromMatrix3Column = function (t, e) {
					return this.fromArray(t.elements, 3 * e);
				}),
				(e.equals = function (t) {
					return t.x === this.x && t.y === this.y && t.z === this.z;
				}),
				(e.fromArray = function (t, e) {
					return (
						void 0 === e && (e = 0),
						(this.x = t[e]),
						(this.y = t[e + 1]),
						(this.z = t[e + 2]),
						this
					);
				}),
				(e.toArray = function (t, e) {
					return (
						void 0 === t && (t = []),
						void 0 === e && (e = 0),
						(t[e] = this.x),
						(t[e + 1] = this.y),
						(t[e + 2] = this.z),
						t
					);
				}),
				(e.fromBufferAttribute = function (t, e, n) {
					return (
						void 0 !== n &&
							console.warn(
								'THREE.Vector3: offset has been removed from .fromBufferAttribute().'
							),
						(this.x = t.getX(e)),
						(this.y = t.getY(e)),
						(this.z = t.getZ(e)),
						this
					);
				}),
				(e.random = function () {
					return (
						(this.x = Math.random()),
						(this.y = Math.random()),
						(this.z = Math.random()),
						this
					);
				}),
				t
			);
		})(),
		Mt = new wt(),
		St = new bt(),
		Tt = (function () {
			function t(t, e) {
				Object.defineProperty(this, 'isBox3', { value: !0 }),
					(this.min = void 0 !== t ? t : new wt(1 / 0, 1 / 0, 1 / 0)),
					(this.max = void 0 !== e ? e : new wt(-1 / 0, -1 / 0, -1 / 0));
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e) {
					return this.min.copy(t), this.max.copy(e), this;
				}),
				(e.setFromArray = function (t) {
					for (
						var e = 1 / 0,
							n = 1 / 0,
							r = 1 / 0,
							i = -1 / 0,
							a = -1 / 0,
							o = -1 / 0,
							s = 0,
							c = t.length;
						s < c;
						s += 3
					) {
						var l = t[s],
							u = t[s + 1],
							h = t[s + 2];
						l < e && (e = l),
							u < n && (n = u),
							h < r && (r = h),
							l > i && (i = l),
							u > a && (a = u),
							h > o && (o = h);
					}
					return this.min.set(e, n, r), this.max.set(i, a, o), this;
				}),
				(e.setFromBufferAttribute = function (t) {
					for (
						var e = 1 / 0,
							n = 1 / 0,
							r = 1 / 0,
							i = -1 / 0,
							a = -1 / 0,
							o = -1 / 0,
							s = 0,
							c = t.count;
						s < c;
						s++
					) {
						var l = t.getX(s),
							u = t.getY(s),
							h = t.getZ(s);
						l < e && (e = l),
							u < n && (n = u),
							h < r && (r = h),
							l > i && (i = l),
							u > a && (a = u),
							h > o && (o = h);
					}
					return this.min.set(e, n, r), this.max.set(i, a, o), this;
				}),
				(e.setFromPoints = function (t) {
					this.makeEmpty();
					for (var e = 0, n = t.length; e < n; e++) this.expandByPoint(t[e]);
					return this;
				}),
				(e.setFromCenterAndSize = function (t, e) {
					var n = Lt.copy(e).multiplyScalar(0.5);
					return this.min.copy(t).sub(n), this.max.copy(t).add(n), this;
				}),
				(e.setFromObject = function (t) {
					return this.makeEmpty(), this.expandByObject(t);
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return this.min.copy(t.min), this.max.copy(t.max), this;
				}),
				(e.makeEmpty = function () {
					return (
						(this.min.x = this.min.y = this.min.z = 1 / 0),
						(this.max.x = this.max.y = this.max.z = -1 / 0),
						this
					);
				}),
				(e.isEmpty = function () {
					return (
						this.max.x < this.min.x ||
						this.max.y < this.min.y ||
						this.max.z < this.min.z
					);
				}),
				(e.getCenter = function (t) {
					return (
						void 0 === t &&
							(console.warn('THREE.Box3: .getCenter() target is now required'),
							(t = new wt())),
						this.isEmpty()
							? t.set(0, 0, 0)
							: t.addVectors(this.min, this.max).multiplyScalar(0.5)
					);
				}),
				(e.getSize = function (t) {
					return (
						void 0 === t &&
							(console.warn('THREE.Box3: .getSize() target is now required'),
							(t = new wt())),
						this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min)
					);
				}),
				(e.expandByPoint = function (t) {
					return this.min.min(t), this.max.max(t), this;
				}),
				(e.expandByVector = function (t) {
					return this.min.sub(t), this.max.add(t), this;
				}),
				(e.expandByScalar = function (t) {
					return this.min.addScalar(-t), this.max.addScalar(t), this;
				}),
				(e.expandByObject = function (t) {
					t.updateWorldMatrix(!1, !1);
					var e = t.geometry;
					void 0 !== e &&
						(null === e.boundingBox && e.computeBoundingBox(),
						Rt.copy(e.boundingBox),
						Rt.applyMatrix4(t.matrixWorld),
						this.union(Rt));
					for (var n = t.children, r = 0, i = n.length; r < i; r++)
						this.expandByObject(n[r]);
					return this;
				}),
				(e.containsPoint = function (t) {
					return !(
						t.x < this.min.x ||
						t.x > this.max.x ||
						t.y < this.min.y ||
						t.y > this.max.y ||
						t.z < this.min.z ||
						t.z > this.max.z
					);
				}),
				(e.containsBox = function (t) {
					return (
						this.min.x <= t.min.x &&
						t.max.x <= this.max.x &&
						this.min.y <= t.min.y &&
						t.max.y <= this.max.y &&
						this.min.z <= t.min.z &&
						t.max.z <= this.max.z
					);
				}),
				(e.getParameter = function (t, e) {
					return (
						void 0 === e &&
							(console.warn(
								'THREE.Box3: .getParameter() target is now required'
							),
							(e = new wt())),
						e.set(
							(t.x - this.min.x) / (this.max.x - this.min.x),
							(t.y - this.min.y) / (this.max.y - this.min.y),
							(t.z - this.min.z) / (this.max.z - this.min.z)
						)
					);
				}),
				(e.intersectsBox = function (t) {
					return !(
						t.max.x < this.min.x ||
						t.min.x > this.max.x ||
						t.max.y < this.min.y ||
						t.min.y > this.max.y ||
						t.max.z < this.min.z ||
						t.min.z > this.max.z
					);
				}),
				(e.intersectsSphere = function (t) {
					return (
						this.clampPoint(t.center, Lt),
						Lt.distanceToSquared(t.center) <= t.radius * t.radius
					);
				}),
				(e.intersectsPlane = function (t) {
					var e, n;
					return (
						t.normal.x > 0
							? ((e = t.normal.x * this.min.x), (n = t.normal.x * this.max.x))
							: ((e = t.normal.x * this.max.x), (n = t.normal.x * this.min.x)),
						t.normal.y > 0
							? ((e += t.normal.y * this.min.y), (n += t.normal.y * this.max.y))
							: ((e += t.normal.y * this.max.y),
							  (n += t.normal.y * this.min.y)),
						t.normal.z > 0
							? ((e += t.normal.z * this.min.z), (n += t.normal.z * this.max.z))
							: ((e += t.normal.z * this.max.z),
							  (n += t.normal.z * this.min.z)),
						e <= -t.constant && n >= -t.constant
					);
				}),
				(e.intersectsTriangle = function (t) {
					if (this.isEmpty()) return !1;
					this.getCenter(Bt),
						zt.subVectors(this.max, Bt),
						Ct.subVectors(t.a, Bt),
						Pt.subVectors(t.b, Bt),
						It.subVectors(t.c, Bt),
						Dt.subVectors(Pt, Ct),
						Nt.subVectors(It, Pt),
						Ot.subVectors(Ct, It);
					var e = [
						0,
						-Dt.z,
						Dt.y,
						0,
						-Nt.z,
						Nt.y,
						0,
						-Ot.z,
						Ot.y,
						Dt.z,
						0,
						-Dt.x,
						Nt.z,
						0,
						-Nt.x,
						Ot.z,
						0,
						-Ot.x,
						-Dt.y,
						Dt.x,
						0,
						-Nt.y,
						Nt.x,
						0,
						-Ot.y,
						Ot.x,
						0,
					];
					return (
						!!Et(e, Ct, Pt, It, zt) &&
						!!Et((e = [1, 0, 0, 0, 1, 0, 0, 0, 1]), Ct, Pt, It, zt) &&
						(Gt.crossVectors(Dt, Nt),
						Et((e = [Gt.x, Gt.y, Gt.z]), Ct, Pt, It, zt))
					);
				}),
				(e.clampPoint = function (t, e) {
					return (
						void 0 === e &&
							(console.warn('THREE.Box3: .clampPoint() target is now required'),
							(e = new wt())),
						e.copy(t).clamp(this.min, this.max)
					);
				}),
				(e.distanceToPoint = function (t) {
					return Lt.copy(t).clamp(this.min, this.max).sub(t).length();
				}),
				(e.getBoundingSphere = function (t) {
					return (
						void 0 === t &&
							console.error(
								'THREE.Box3: .getBoundingSphere() target is now required'
							),
						this.getCenter(t.center),
						(t.radius = 0.5 * this.getSize(Lt).length()),
						t
					);
				}),
				(e.intersect = function (t) {
					return (
						this.min.max(t.min),
						this.max.min(t.max),
						this.isEmpty() && this.makeEmpty(),
						this
					);
				}),
				(e.union = function (t) {
					return this.min.min(t.min), this.max.max(t.max), this;
				}),
				(e.applyMatrix4 = function (t) {
					return (
						this.isEmpty() ||
							(At[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t),
							At[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t),
							At[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t),
							At[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t),
							At[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t),
							At[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t),
							At[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t),
							At[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t),
							this.setFromPoints(At)),
						this
					);
				}),
				(e.translate = function (t) {
					return this.min.add(t), this.max.add(t), this;
				}),
				(e.equals = function (t) {
					return t.min.equals(this.min) && t.max.equals(this.max);
				}),
				t
			);
		})();
	function Et(t, e, n, r, i) {
		for (var a = 0, o = t.length - 3; a <= o; a += 3) {
			Ft.fromArray(t, a);
			var s =
					i.x * Math.abs(Ft.x) + i.y * Math.abs(Ft.y) + i.z * Math.abs(Ft.z),
				c = e.dot(Ft),
				l = n.dot(Ft),
				u = r.dot(Ft);
			if (Math.max(-Math.max(c, l, u), Math.min(c, l, u)) > s) return !1;
		}
		return !0;
	}
	var At = [
			new wt(),
			new wt(),
			new wt(),
			new wt(),
			new wt(),
			new wt(),
			new wt(),
			new wt(),
		],
		Lt = new wt(),
		Rt = new Tt(),
		Ct = new wt(),
		Pt = new wt(),
		It = new wt(),
		Dt = new wt(),
		Nt = new wt(),
		Ot = new wt(),
		Bt = new wt(),
		zt = new wt(),
		Gt = new wt(),
		Ft = new wt(),
		Ut = new Tt(),
		Ht = (function () {
			function t(t, e) {
				(this.center = void 0 !== t ? t : new wt()),
					(this.radius = void 0 !== e ? e : -1);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e) {
					return this.center.copy(t), (this.radius = e), this;
				}),
				(e.setFromPoints = function (t, e) {
					var n = this.center;
					void 0 !== e ? n.copy(e) : Ut.setFromPoints(t).getCenter(n);
					for (var r = 0, i = 0, a = t.length; i < a; i++)
						r = Math.max(r, n.distanceToSquared(t[i]));
					return (this.radius = Math.sqrt(r)), this;
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return this.center.copy(t.center), (this.radius = t.radius), this;
				}),
				(e.isEmpty = function () {
					return this.radius < 0;
				}),
				(e.makeEmpty = function () {
					return this.center.set(0, 0, 0), (this.radius = -1), this;
				}),
				(e.containsPoint = function (t) {
					return t.distanceToSquared(this.center) <= this.radius * this.radius;
				}),
				(e.distanceToPoint = function (t) {
					return t.distanceTo(this.center) - this.radius;
				}),
				(e.intersectsSphere = function (t) {
					var e = this.radius + t.radius;
					return t.center.distanceToSquared(this.center) <= e * e;
				}),
				(e.intersectsBox = function (t) {
					return t.intersectsSphere(this);
				}),
				(e.intersectsPlane = function (t) {
					return Math.abs(t.distanceToPoint(this.center)) <= this.radius;
				}),
				(e.clampPoint = function (t, e) {
					var n = this.center.distanceToSquared(t);
					return (
						void 0 === e &&
							(console.warn(
								'THREE.Sphere: .clampPoint() target is now required'
							),
							(e = new wt())),
						e.copy(t),
						n > this.radius * this.radius &&
							(e.sub(this.center).normalize(),
							e.multiplyScalar(this.radius).add(this.center)),
						e
					);
				}),
				(e.getBoundingBox = function (t) {
					return (
						void 0 === t &&
							(console.warn(
								'THREE.Sphere: .getBoundingBox() target is now required'
							),
							(t = new Tt())),
						this.isEmpty()
							? (t.makeEmpty(), t)
							: (t.set(this.center, this.center),
							  t.expandByScalar(this.radius),
							  t)
					);
				}),
				(e.applyMatrix4 = function (t) {
					return (
						this.center.applyMatrix4(t),
						(this.radius = this.radius * t.getMaxScaleOnAxis()),
						this
					);
				}),
				(e.translate = function (t) {
					return this.center.add(t), this;
				}),
				(e.equals = function (t) {
					return t.center.equals(this.center) && t.radius === this.radius;
				}),
				t
			);
		})(),
		kt = new wt(),
		Vt = new wt(),
		Wt = new wt(),
		jt = new wt(),
		qt = new wt(),
		Xt = new wt(),
		Yt = new wt(),
		Zt = (function () {
			function t(t, e) {
				(this.origin = void 0 !== t ? t : new wt()),
					(this.direction = void 0 !== e ? e : new wt(0, 0, -1));
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e) {
					return this.origin.copy(t), this.direction.copy(e), this;
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return (
						this.origin.copy(t.origin), this.direction.copy(t.direction), this
					);
				}),
				(e.at = function (t, e) {
					return (
						void 0 === e &&
							(console.warn('THREE.Ray: .at() target is now required'),
							(e = new wt())),
						e.copy(this.direction).multiplyScalar(t).add(this.origin)
					);
				}),
				(e.lookAt = function (t) {
					return this.direction.copy(t).sub(this.origin).normalize(), this;
				}),
				(e.recast = function (t) {
					return this.origin.copy(this.at(t, kt)), this;
				}),
				(e.closestPointToPoint = function (t, e) {
					void 0 === e &&
						(console.warn(
							'THREE.Ray: .closestPointToPoint() target is now required'
						),
						(e = new wt())),
						e.subVectors(t, this.origin);
					var n = e.dot(this.direction);
					return n < 0
						? e.copy(this.origin)
						: e.copy(this.direction).multiplyScalar(n).add(this.origin);
				}),
				(e.distanceToPoint = function (t) {
					return Math.sqrt(this.distanceSqToPoint(t));
				}),
				(e.distanceSqToPoint = function (t) {
					var e = kt.subVectors(t, this.origin).dot(this.direction);
					return e < 0
						? this.origin.distanceToSquared(t)
						: (kt.copy(this.direction).multiplyScalar(e).add(this.origin),
						  kt.distanceToSquared(t));
				}),
				(e.distanceSqToSegment = function (t, e, n, r) {
					Vt.copy(t).add(e).multiplyScalar(0.5),
						Wt.copy(e).sub(t).normalize(),
						jt.copy(this.origin).sub(Vt);
					var i,
						a,
						o,
						s,
						c = 0.5 * t.distanceTo(e),
						l = -this.direction.dot(Wt),
						u = jt.dot(this.direction),
						h = -jt.dot(Wt),
						d = jt.lengthSq(),
						p = Math.abs(1 - l * l);
					if (p > 0)
						if (((a = l * u - h), (s = c * p), (i = l * h - u) >= 0))
							if (a >= -s)
								if (a <= s) {
									var f = 1 / p;
									o =
										(i *= f) * (i + l * (a *= f) + 2 * u) +
										a * (l * i + a + 2 * h) +
										d;
								} else
									(a = c),
										(o =
											-(i = Math.max(0, -(l * a + u))) * i +
											a * (a + 2 * h) +
											d);
							else
								(a = -c),
									(o =
										-(i = Math.max(0, -(l * a + u))) * i + a * (a + 2 * h) + d);
						else
							a <= -s
								? (o =
										-(i = Math.max(0, -(-l * c + u))) * i +
										(a = i > 0 ? -c : Math.min(Math.max(-c, -h), c)) *
											(a + 2 * h) +
										d)
								: a <= s
								? ((i = 0),
								  (o = (a = Math.min(Math.max(-c, -h), c)) * (a + 2 * h) + d))
								: (o =
										-(i = Math.max(0, -(l * c + u))) * i +
										(a = i > 0 ? c : Math.min(Math.max(-c, -h), c)) *
											(a + 2 * h) +
										d);
					else
						(a = l > 0 ? -c : c),
							(o = -(i = Math.max(0, -(l * a + u))) * i + a * (a + 2 * h) + d);
					return (
						n && n.copy(this.direction).multiplyScalar(i).add(this.origin),
						r && r.copy(Wt).multiplyScalar(a).add(Vt),
						o
					);
				}),
				(e.intersectSphere = function (t, e) {
					kt.subVectors(t.center, this.origin);
					var n = kt.dot(this.direction),
						r = kt.dot(kt) - n * n,
						i = t.radius * t.radius;
					if (r > i) return null;
					var a = Math.sqrt(i - r),
						o = n - a,
						s = n + a;
					return o < 0 && s < 0 ? null : o < 0 ? this.at(s, e) : this.at(o, e);
				}),
				(e.intersectsSphere = function (t) {
					return this.distanceSqToPoint(t.center) <= t.radius * t.radius;
				}),
				(e.distanceToPlane = function (t) {
					var e = t.normal.dot(this.direction);
					if (0 === e) return 0 === t.distanceToPoint(this.origin) ? 0 : null;
					var n = -(this.origin.dot(t.normal) + t.constant) / e;
					return n >= 0 ? n : null;
				}),
				(e.intersectPlane = function (t, e) {
					var n = this.distanceToPlane(t);
					return null === n ? null : this.at(n, e);
				}),
				(e.intersectsPlane = function (t) {
					var e = t.distanceToPoint(this.origin);
					return 0 === e || t.normal.dot(this.direction) * e < 0;
				}),
				(e.intersectBox = function (t, e) {
					var n,
						r,
						i,
						a,
						o,
						s,
						c = 1 / this.direction.x,
						l = 1 / this.direction.y,
						u = 1 / this.direction.z,
						h = this.origin;
					return (
						c >= 0
							? ((n = (t.min.x - h.x) * c), (r = (t.max.x - h.x) * c))
							: ((n = (t.max.x - h.x) * c), (r = (t.min.x - h.x) * c)),
						l >= 0
							? ((i = (t.min.y - h.y) * l), (a = (t.max.y - h.y) * l))
							: ((i = (t.max.y - h.y) * l), (a = (t.min.y - h.y) * l)),
						n > a || i > r
							? null
							: ((i > n || n != n) && (n = i),
							  (a < r || r != r) && (r = a),
							  u >= 0
									? ((o = (t.min.z - h.z) * u), (s = (t.max.z - h.z) * u))
									: ((o = (t.max.z - h.z) * u), (s = (t.min.z - h.z) * u)),
							  n > s || o > r
									? null
									: ((o > n || n != n) && (n = o),
									  (s < r || r != r) && (r = s),
									  r < 0 ? null : this.at(n >= 0 ? n : r, e)))
					);
				}),
				(e.intersectsBox = function (t) {
					return null !== this.intersectBox(t, kt);
				}),
				(e.intersectTriangle = function (t, e, n, r, i) {
					qt.subVectors(e, t), Xt.subVectors(n, t), Yt.crossVectors(qt, Xt);
					var a,
						o = this.direction.dot(Yt);
					if (o > 0) {
						if (r) return null;
						a = 1;
					} else {
						if (!(o < 0)) return null;
						(a = -1), (o = -o);
					}
					jt.subVectors(this.origin, t);
					var s = a * this.direction.dot(Xt.crossVectors(jt, Xt));
					if (s < 0) return null;
					var c = a * this.direction.dot(qt.cross(jt));
					if (c < 0) return null;
					if (s + c > o) return null;
					var l = -a * jt.dot(Yt);
					return l < 0 ? null : this.at(l / o, i);
				}),
				(e.applyMatrix4 = function (t) {
					return (
						this.origin.applyMatrix4(t),
						this.direction.transformDirection(t),
						this
					);
				}),
				(e.equals = function (t) {
					return (
						t.origin.equals(this.origin) && t.direction.equals(this.direction)
					);
				}),
				t
			);
		})(),
		Jt = (function () {
			function t() {
				Object.defineProperty(this, 'isMatrix4', { value: !0 }),
					(this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
					arguments.length > 0 &&
						console.error(
							'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.'
						);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e, n, r, i, a, o, s, c, l, u, h, d, p, f, m) {
					var v = this.elements;
					return (
						(v[0] = t),
						(v[4] = e),
						(v[8] = n),
						(v[12] = r),
						(v[1] = i),
						(v[5] = a),
						(v[9] = o),
						(v[13] = s),
						(v[2] = c),
						(v[6] = l),
						(v[10] = u),
						(v[14] = h),
						(v[3] = d),
						(v[7] = p),
						(v[11] = f),
						(v[15] = m),
						this
					);
				}),
				(e.identity = function () {
					return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
				}),
				(e.clone = function () {
					return new t().fromArray(this.elements);
				}),
				(e.copy = function (t) {
					var e = this.elements,
						n = t.elements;
					return (
						(e[0] = n[0]),
						(e[1] = n[1]),
						(e[2] = n[2]),
						(e[3] = n[3]),
						(e[4] = n[4]),
						(e[5] = n[5]),
						(e[6] = n[6]),
						(e[7] = n[7]),
						(e[8] = n[8]),
						(e[9] = n[9]),
						(e[10] = n[10]),
						(e[11] = n[11]),
						(e[12] = n[12]),
						(e[13] = n[13]),
						(e[14] = n[14]),
						(e[15] = n[15]),
						this
					);
				}),
				(e.copyPosition = function (t) {
					var e = this.elements,
						n = t.elements;
					return (e[12] = n[12]), (e[13] = n[13]), (e[14] = n[14]), this;
				}),
				(e.extractBasis = function (t, e, n) {
					return (
						t.setFromMatrixColumn(this, 0),
						e.setFromMatrixColumn(this, 1),
						n.setFromMatrixColumn(this, 2),
						this
					);
				}),
				(e.makeBasis = function (t, e, n) {
					return (
						this.set(
							t.x,
							e.x,
							n.x,
							0,
							t.y,
							e.y,
							n.y,
							0,
							t.z,
							e.z,
							n.z,
							0,
							0,
							0,
							0,
							1
						),
						this
					);
				}),
				(e.extractRotation = function (t) {
					var e = this.elements,
						n = t.elements,
						r = 1 / Qt.setFromMatrixColumn(t, 0).length(),
						i = 1 / Qt.setFromMatrixColumn(t, 1).length(),
						a = 1 / Qt.setFromMatrixColumn(t, 2).length();
					return (
						(e[0] = n[0] * r),
						(e[1] = n[1] * r),
						(e[2] = n[2] * r),
						(e[3] = 0),
						(e[4] = n[4] * i),
						(e[5] = n[5] * i),
						(e[6] = n[6] * i),
						(e[7] = 0),
						(e[8] = n[8] * a),
						(e[9] = n[9] * a),
						(e[10] = n[10] * a),
						(e[11] = 0),
						(e[12] = 0),
						(e[13] = 0),
						(e[14] = 0),
						(e[15] = 1),
						this
					);
				}),
				(e.makeRotationFromEuler = function (t) {
					(t && t.isEuler) ||
						console.error(
							'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.'
						);
					var e = this.elements,
						n = t.x,
						r = t.y,
						i = t.z,
						a = Math.cos(n),
						o = Math.sin(n),
						s = Math.cos(r),
						c = Math.sin(r),
						l = Math.cos(i),
						u = Math.sin(i);
					if ('XYZ' === t.order) {
						var h = a * l,
							d = a * u,
							p = o * l,
							f = o * u;
						(e[0] = s * l),
							(e[4] = -s * u),
							(e[8] = c),
							(e[1] = d + p * c),
							(e[5] = h - f * c),
							(e[9] = -o * s),
							(e[2] = f - h * c),
							(e[6] = p + d * c),
							(e[10] = a * s);
					} else if ('YXZ' === t.order) {
						var m = s * l,
							v = s * u,
							g = c * l,
							y = c * u;
						(e[0] = m + y * o),
							(e[4] = g * o - v),
							(e[8] = a * c),
							(e[1] = a * u),
							(e[5] = a * l),
							(e[9] = -o),
							(e[2] = v * o - g),
							(e[6] = y + m * o),
							(e[10] = a * s);
					} else if ('ZXY' === t.order) {
						var x = s * l,
							_ = s * u,
							b = c * l,
							w = c * u;
						(e[0] = x - w * o),
							(e[4] = -a * u),
							(e[8] = b + _ * o),
							(e[1] = _ + b * o),
							(e[5] = a * l),
							(e[9] = w - x * o),
							(e[2] = -a * c),
							(e[6] = o),
							(e[10] = a * s);
					} else if ('ZYX' === t.order) {
						var M = a * l,
							S = a * u,
							T = o * l,
							E = o * u;
						(e[0] = s * l),
							(e[4] = T * c - S),
							(e[8] = M * c + E),
							(e[1] = s * u),
							(e[5] = E * c + M),
							(e[9] = S * c - T),
							(e[2] = -c),
							(e[6] = o * s),
							(e[10] = a * s);
					} else if ('YZX' === t.order) {
						var A = a * s,
							L = a * c,
							R = o * s,
							C = o * c;
						(e[0] = s * l),
							(e[4] = C - A * u),
							(e[8] = R * u + L),
							(e[1] = u),
							(e[5] = a * l),
							(e[9] = -o * l),
							(e[2] = -c * l),
							(e[6] = L * u + R),
							(e[10] = A - C * u);
					} else if ('XZY' === t.order) {
						var P = a * s,
							I = a * c,
							D = o * s,
							N = o * c;
						(e[0] = s * l),
							(e[4] = -u),
							(e[8] = c * l),
							(e[1] = P * u + N),
							(e[5] = a * l),
							(e[9] = I * u - D),
							(e[2] = D * u - I),
							(e[6] = o * l),
							(e[10] = N * u + P);
					}
					return (
						(e[3] = 0),
						(e[7] = 0),
						(e[11] = 0),
						(e[12] = 0),
						(e[13] = 0),
						(e[14] = 0),
						(e[15] = 1),
						this
					);
				}),
				(e.makeRotationFromQuaternion = function (t) {
					return this.compose($t, t, te);
				}),
				(e.lookAt = function (t, e, n) {
					var r = this.elements;
					return (
						re.subVectors(t, e),
						0 === re.lengthSq() && (re.z = 1),
						re.normalize(),
						ee.crossVectors(n, re),
						0 === ee.lengthSq() &&
							(1 === Math.abs(n.z) ? (re.x += 1e-4) : (re.z += 1e-4),
							re.normalize(),
							ee.crossVectors(n, re)),
						ee.normalize(),
						ne.crossVectors(re, ee),
						(r[0] = ee.x),
						(r[4] = ne.x),
						(r[8] = re.x),
						(r[1] = ee.y),
						(r[5] = ne.y),
						(r[9] = re.y),
						(r[2] = ee.z),
						(r[6] = ne.z),
						(r[10] = re.z),
						this
					);
				}),
				(e.multiply = function (t, e) {
					return void 0 !== e
						? (console.warn(
								'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.'
						  ),
						  this.multiplyMatrices(t, e))
						: this.multiplyMatrices(this, t);
				}),
				(e.premultiply = function (t) {
					return this.multiplyMatrices(t, this);
				}),
				(e.multiplyMatrices = function (t, e) {
					var n = t.elements,
						r = e.elements,
						i = this.elements,
						a = n[0],
						o = n[4],
						s = n[8],
						c = n[12],
						l = n[1],
						u = n[5],
						h = n[9],
						d = n[13],
						p = n[2],
						f = n[6],
						m = n[10],
						v = n[14],
						g = n[3],
						y = n[7],
						x = n[11],
						_ = n[15],
						b = r[0],
						w = r[4],
						M = r[8],
						S = r[12],
						T = r[1],
						E = r[5],
						A = r[9],
						L = r[13],
						R = r[2],
						C = r[6],
						P = r[10],
						I = r[14],
						D = r[3],
						N = r[7],
						O = r[11],
						B = r[15];
					return (
						(i[0] = a * b + o * T + s * R + c * D),
						(i[4] = a * w + o * E + s * C + c * N),
						(i[8] = a * M + o * A + s * P + c * O),
						(i[12] = a * S + o * L + s * I + c * B),
						(i[1] = l * b + u * T + h * R + d * D),
						(i[5] = l * w + u * E + h * C + d * N),
						(i[9] = l * M + u * A + h * P + d * O),
						(i[13] = l * S + u * L + h * I + d * B),
						(i[2] = p * b + f * T + m * R + v * D),
						(i[6] = p * w + f * E + m * C + v * N),
						(i[10] = p * M + f * A + m * P + v * O),
						(i[14] = p * S + f * L + m * I + v * B),
						(i[3] = g * b + y * T + x * R + _ * D),
						(i[7] = g * w + y * E + x * C + _ * N),
						(i[11] = g * M + y * A + x * P + _ * O),
						(i[15] = g * S + y * L + x * I + _ * B),
						this
					);
				}),
				(e.multiplyScalar = function (t) {
					var e = this.elements;
					return (
						(e[0] *= t),
						(e[4] *= t),
						(e[8] *= t),
						(e[12] *= t),
						(e[1] *= t),
						(e[5] *= t),
						(e[9] *= t),
						(e[13] *= t),
						(e[2] *= t),
						(e[6] *= t),
						(e[10] *= t),
						(e[14] *= t),
						(e[3] *= t),
						(e[7] *= t),
						(e[11] *= t),
						(e[15] *= t),
						this
					);
				}),
				(e.determinant = function () {
					var t = this.elements,
						e = t[0],
						n = t[4],
						r = t[8],
						i = t[12],
						a = t[1],
						o = t[5],
						s = t[9],
						c = t[13],
						l = t[2],
						u = t[6],
						h = t[10],
						d = t[14];
					return (
						t[3] *
							(+i * s * u -
								r * c * u -
								i * o * h +
								n * c * h +
								r * o * d -
								n * s * d) +
						t[7] *
							(+e * s * d -
								e * c * h +
								i * a * h -
								r * a * d +
								r * c * l -
								i * s * l) +
						t[11] *
							(+e * c * u -
								e * o * d -
								i * a * u +
								n * a * d +
								i * o * l -
								n * c * l) +
						t[15] *
							(-r * o * l -
								e * s * u +
								e * o * h +
								r * a * u -
								n * a * h +
								n * s * l)
					);
				}),
				(e.transpose = function () {
					var t,
						e = this.elements;
					return (
						(t = e[1]),
						(e[1] = e[4]),
						(e[4] = t),
						(t = e[2]),
						(e[2] = e[8]),
						(e[8] = t),
						(t = e[6]),
						(e[6] = e[9]),
						(e[9] = t),
						(t = e[3]),
						(e[3] = e[12]),
						(e[12] = t),
						(t = e[7]),
						(e[7] = e[13]),
						(e[13] = t),
						(t = e[11]),
						(e[11] = e[14]),
						(e[14] = t),
						this
					);
				}),
				(e.setPosition = function (t, e, n) {
					var r = this.elements;
					return (
						t.isVector3
							? ((r[12] = t.x), (r[13] = t.y), (r[14] = t.z))
							: ((r[12] = t), (r[13] = e), (r[14] = n)),
						this
					);
				}),
				(e.getInverse = function (t, e) {
					void 0 !== e &&
						console.warn(
							'THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.'
						);
					var n = this.elements,
						r = t.elements,
						i = r[0],
						a = r[1],
						o = r[2],
						s = r[3],
						c = r[4],
						l = r[5],
						u = r[6],
						h = r[7],
						d = r[8],
						p = r[9],
						f = r[10],
						m = r[11],
						v = r[12],
						g = r[13],
						y = r[14],
						x = r[15],
						_ =
							p * y * h -
							g * f * h +
							g * u * m -
							l * y * m -
							p * u * x +
							l * f * x,
						b =
							v * f * h -
							d * y * h -
							v * u * m +
							c * y * m +
							d * u * x -
							c * f * x,
						w =
							d * g * h -
							v * p * h +
							v * l * m -
							c * g * m -
							d * l * x +
							c * p * x,
						M =
							v * p * u -
							d * g * u -
							v * l * f +
							c * g * f +
							d * l * y -
							c * p * y,
						S = i * _ + a * b + o * w + s * M;
					if (0 === S)
						return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
					var T = 1 / S;
					return (
						(n[0] = _ * T),
						(n[1] =
							(g * f * s -
								p * y * s -
								g * o * m +
								a * y * m +
								p * o * x -
								a * f * x) *
							T),
						(n[2] =
							(l * y * s -
								g * u * s +
								g * o * h -
								a * y * h -
								l * o * x +
								a * u * x) *
							T),
						(n[3] =
							(p * u * s -
								l * f * s -
								p * o * h +
								a * f * h +
								l * o * m -
								a * u * m) *
							T),
						(n[4] = b * T),
						(n[5] =
							(d * y * s -
								v * f * s +
								v * o * m -
								i * y * m -
								d * o * x +
								i * f * x) *
							T),
						(n[6] =
							(v * u * s -
								c * y * s -
								v * o * h +
								i * y * h +
								c * o * x -
								i * u * x) *
							T),
						(n[7] =
							(c * f * s -
								d * u * s +
								d * o * h -
								i * f * h -
								c * o * m +
								i * u * m) *
							T),
						(n[8] = w * T),
						(n[9] =
							(v * p * s -
								d * g * s -
								v * a * m +
								i * g * m +
								d * a * x -
								i * p * x) *
							T),
						(n[10] =
							(c * g * s -
								v * l * s +
								v * a * h -
								i * g * h -
								c * a * x +
								i * l * x) *
							T),
						(n[11] =
							(d * l * s -
								c * p * s -
								d * a * h +
								i * p * h +
								c * a * m -
								i * l * m) *
							T),
						(n[12] = M * T),
						(n[13] =
							(d * g * o -
								v * p * o +
								v * a * f -
								i * g * f -
								d * a * y +
								i * p * y) *
							T),
						(n[14] =
							(v * l * o -
								c * g * o -
								v * a * u +
								i * g * u +
								c * a * y -
								i * l * y) *
							T),
						(n[15] =
							(c * p * o -
								d * l * o +
								d * a * u -
								i * p * u -
								c * a * f +
								i * l * f) *
							T),
						this
					);
				}),
				(e.scale = function (t) {
					var e = this.elements,
						n = t.x,
						r = t.y,
						i = t.z;
					return (
						(e[0] *= n),
						(e[4] *= r),
						(e[8] *= i),
						(e[1] *= n),
						(e[5] *= r),
						(e[9] *= i),
						(e[2] *= n),
						(e[6] *= r),
						(e[10] *= i),
						(e[3] *= n),
						(e[7] *= r),
						(e[11] *= i),
						this
					);
				}),
				(e.getMaxScaleOnAxis = function () {
					var t = this.elements,
						e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2],
						n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6],
						r = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
					return Math.sqrt(Math.max(e, n, r));
				}),
				(e.makeTranslation = function (t, e, n) {
					return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1), this;
				}),
				(e.makeRotationX = function (t) {
					var e = Math.cos(t),
						n = Math.sin(t);
					return (
						this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1), this
					);
				}),
				(e.makeRotationY = function (t) {
					var e = Math.cos(t),
						n = Math.sin(t);
					return (
						this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1), this
					);
				}),
				(e.makeRotationZ = function (t) {
					var e = Math.cos(t),
						n = Math.sin(t);
					return (
						this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
					);
				}),
				(e.makeRotationAxis = function (t, e) {
					var n = Math.cos(e),
						r = Math.sin(e),
						i = 1 - n,
						a = t.x,
						o = t.y,
						s = t.z,
						c = i * a,
						l = i * o;
					return (
						this.set(
							c * a + n,
							c * o - r * s,
							c * s + r * o,
							0,
							c * o + r * s,
							l * o + n,
							l * s - r * a,
							0,
							c * s - r * o,
							l * s + r * a,
							i * s * s + n,
							0,
							0,
							0,
							0,
							1
						),
						this
					);
				}),
				(e.makeScale = function (t, e, n) {
					return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
				}),
				(e.makeShear = function (t, e, n) {
					return this.set(1, e, n, 0, t, 1, n, 0, t, e, 1, 0, 0, 0, 0, 1), this;
				}),
				(e.compose = function (t, e, n) {
					var r = this.elements,
						i = e._x,
						a = e._y,
						o = e._z,
						s = e._w,
						c = i + i,
						l = a + a,
						u = o + o,
						h = i * c,
						d = i * l,
						p = i * u,
						f = a * l,
						m = a * u,
						v = o * u,
						g = s * c,
						y = s * l,
						x = s * u,
						_ = n.x,
						b = n.y,
						w = n.z;
					return (
						(r[0] = (1 - (f + v)) * _),
						(r[1] = (d + x) * _),
						(r[2] = (p - y) * _),
						(r[3] = 0),
						(r[4] = (d - x) * b),
						(r[5] = (1 - (h + v)) * b),
						(r[6] = (m + g) * b),
						(r[7] = 0),
						(r[8] = (p + y) * w),
						(r[9] = (m - g) * w),
						(r[10] = (1 - (h + f)) * w),
						(r[11] = 0),
						(r[12] = t.x),
						(r[13] = t.y),
						(r[14] = t.z),
						(r[15] = 1),
						this
					);
				}),
				(e.decompose = function (t, e, n) {
					var r = this.elements,
						i = Qt.set(r[0], r[1], r[2]).length(),
						a = Qt.set(r[4], r[5], r[6]).length(),
						o = Qt.set(r[8], r[9], r[10]).length();
					this.determinant() < 0 && (i = -i),
						(t.x = r[12]),
						(t.y = r[13]),
						(t.z = r[14]),
						Kt.copy(this);
					var s = 1 / i,
						c = 1 / a,
						l = 1 / o;
					return (
						(Kt.elements[0] *= s),
						(Kt.elements[1] *= s),
						(Kt.elements[2] *= s),
						(Kt.elements[4] *= c),
						(Kt.elements[5] *= c),
						(Kt.elements[6] *= c),
						(Kt.elements[8] *= l),
						(Kt.elements[9] *= l),
						(Kt.elements[10] *= l),
						e.setFromRotationMatrix(Kt),
						(n.x = i),
						(n.y = a),
						(n.z = o),
						this
					);
				}),
				(e.makePerspective = function (t, e, n, r, i, a) {
					void 0 === a &&
						console.warn(
							'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.'
						);
					var o = this.elements,
						s = (2 * i) / (e - t),
						c = (2 * i) / (n - r),
						l = (e + t) / (e - t),
						u = (n + r) / (n - r),
						h = -(a + i) / (a - i),
						d = (-2 * a * i) / (a - i);
					return (
						(o[0] = s),
						(o[4] = 0),
						(o[8] = l),
						(o[12] = 0),
						(o[1] = 0),
						(o[5] = c),
						(o[9] = u),
						(o[13] = 0),
						(o[2] = 0),
						(o[6] = 0),
						(o[10] = h),
						(o[14] = d),
						(o[3] = 0),
						(o[7] = 0),
						(o[11] = -1),
						(o[15] = 0),
						this
					);
				}),
				(e.makeOrthographic = function (t, e, n, r, i, a) {
					var o = this.elements,
						s = 1 / (e - t),
						c = 1 / (n - r),
						l = 1 / (a - i),
						u = (e + t) * s,
						h = (n + r) * c,
						d = (a + i) * l;
					return (
						(o[0] = 2 * s),
						(o[4] = 0),
						(o[8] = 0),
						(o[12] = -u),
						(o[1] = 0),
						(o[5] = 2 * c),
						(o[9] = 0),
						(o[13] = -h),
						(o[2] = 0),
						(o[6] = 0),
						(o[10] = -2 * l),
						(o[14] = -d),
						(o[3] = 0),
						(o[7] = 0),
						(o[11] = 0),
						(o[15] = 1),
						this
					);
				}),
				(e.equals = function (t) {
					for (var e = this.elements, n = t.elements, r = 0; r < 16; r++)
						if (e[r] !== n[r]) return !1;
					return !0;
				}),
				(e.fromArray = function (t, e) {
					void 0 === e && (e = 0);
					for (var n = 0; n < 16; n++) this.elements[n] = t[n + e];
					return this;
				}),
				(e.toArray = function (t, e) {
					void 0 === t && (t = []), void 0 === e && (e = 0);
					var n = this.elements;
					return (
						(t[e] = n[0]),
						(t[e + 1] = n[1]),
						(t[e + 2] = n[2]),
						(t[e + 3] = n[3]),
						(t[e + 4] = n[4]),
						(t[e + 5] = n[5]),
						(t[e + 6] = n[6]),
						(t[e + 7] = n[7]),
						(t[e + 8] = n[8]),
						(t[e + 9] = n[9]),
						(t[e + 10] = n[10]),
						(t[e + 11] = n[11]),
						(t[e + 12] = n[12]),
						(t[e + 13] = n[13]),
						(t[e + 14] = n[14]),
						(t[e + 15] = n[15]),
						t
					);
				}),
				t
			);
		})(),
		Qt = new wt(),
		Kt = new Jt(),
		$t = new wt(0, 0, 0),
		te = new wt(1, 1, 1),
		ee = new wt(),
		ne = new wt(),
		re = new wt(),
		ie = (function () {
			function t(e, n, r, i) {
				void 0 === e && (e = 0),
					void 0 === n && (n = 0),
					void 0 === r && (r = 0),
					void 0 === i && (i = t.DefaultOrder),
					Object.defineProperty(this, 'isEuler', { value: !0 }),
					(this._x = e),
					(this._y = n),
					(this._z = r),
					(this._order = i);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e, n, r) {
					return (
						(this._x = t),
						(this._y = e),
						(this._z = n),
						(this._order = r || this._order),
						this._onChangeCallback(),
						this
					);
				}),
				(e.clone = function () {
					return new this.constructor(this._x, this._y, this._z, this._order);
				}),
				(e.copy = function (t) {
					return (
						(this._x = t._x),
						(this._y = t._y),
						(this._z = t._z),
						(this._order = t._order),
						this._onChangeCallback(),
						this
					);
				}),
				(e.setFromRotationMatrix = function (t, e, n) {
					var r = st.clamp,
						i = t.elements,
						a = i[0],
						o = i[4],
						s = i[8],
						c = i[1],
						l = i[5],
						u = i[9],
						h = i[2],
						d = i[6],
						p = i[10];
					switch ((e = e || this._order)) {
						case 'XYZ':
							(this._y = Math.asin(r(s, -1, 1))),
								Math.abs(s) < 0.9999999
									? ((this._x = Math.atan2(-u, p)),
									  (this._z = Math.atan2(-o, a)))
									: ((this._x = Math.atan2(d, l)), (this._z = 0));
							break;
						case 'YXZ':
							(this._x = Math.asin(-r(u, -1, 1))),
								Math.abs(u) < 0.9999999
									? ((this._y = Math.atan2(s, p)), (this._z = Math.atan2(c, l)))
									: ((this._y = Math.atan2(-h, a)), (this._z = 0));
							break;
						case 'ZXY':
							(this._x = Math.asin(r(d, -1, 1))),
								Math.abs(d) < 0.9999999
									? ((this._y = Math.atan2(-h, p)),
									  (this._z = Math.atan2(-o, l)))
									: ((this._y = 0), (this._z = Math.atan2(c, a)));
							break;
						case 'ZYX':
							(this._y = Math.asin(-r(h, -1, 1))),
								Math.abs(h) < 0.9999999
									? ((this._x = Math.atan2(d, p)), (this._z = Math.atan2(c, a)))
									: ((this._x = 0), (this._z = Math.atan2(-o, l)));
							break;
						case 'YZX':
							(this._z = Math.asin(r(c, -1, 1))),
								Math.abs(c) < 0.9999999
									? ((this._x = Math.atan2(-u, l)),
									  (this._y = Math.atan2(-h, a)))
									: ((this._x = 0), (this._y = Math.atan2(s, p)));
							break;
						case 'XZY':
							(this._z = Math.asin(-r(o, -1, 1))),
								Math.abs(o) < 0.9999999
									? ((this._x = Math.atan2(d, l)), (this._y = Math.atan2(s, a)))
									: ((this._x = Math.atan2(-u, p)), (this._y = 0));
							break;
						default:
							console.warn(
								'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' +
									e
							);
					}
					return (this._order = e), !1 !== n && this._onChangeCallback(), this;
				}),
				(e.setFromQuaternion = function (t, e, n) {
					return (
						ae.makeRotationFromQuaternion(t),
						this.setFromRotationMatrix(ae, e, n)
					);
				}),
				(e.setFromVector3 = function (t, e) {
					return this.set(t.x, t.y, t.z, e || this._order);
				}),
				(e.reorder = function (t) {
					return oe.setFromEuler(this), this.setFromQuaternion(oe, t);
				}),
				(e.equals = function (t) {
					return (
						t._x === this._x &&
						t._y === this._y &&
						t._z === this._z &&
						t._order === this._order
					);
				}),
				(e.fromArray = function (t) {
					return (
						(this._x = t[0]),
						(this._y = t[1]),
						(this._z = t[2]),
						void 0 !== t[3] && (this._order = t[3]),
						this._onChangeCallback(),
						this
					);
				}),
				(e.toArray = function (t, e) {
					return (
						void 0 === t && (t = []),
						void 0 === e && (e = 0),
						(t[e] = this._x),
						(t[e + 1] = this._y),
						(t[e + 2] = this._z),
						(t[e + 3] = this._order),
						t
					);
				}),
				(e.toVector3 = function (t) {
					return t
						? t.set(this._x, this._y, this._z)
						: new wt(this._x, this._y, this._z);
				}),
				(e._onChange = function (t) {
					return (this._onChangeCallback = t), this;
				}),
				(e._onChangeCallback = function () {}),
				lt(t, [
					{
						key: 'x',
						get: function () {
							return this._x;
						},
						set: function (t) {
							(this._x = t), this._onChangeCallback();
						},
					},
					{
						key: 'y',
						get: function () {
							return this._y;
						},
						set: function (t) {
							(this._y = t), this._onChangeCallback();
						},
					},
					{
						key: 'z',
						get: function () {
							return this._z;
						},
						set: function (t) {
							(this._z = t), this._onChangeCallback();
						},
					},
					{
						key: 'order',
						get: function () {
							return this._order;
						},
						set: function (t) {
							(this._order = t), this._onChangeCallback();
						},
					},
				]),
				t
			);
		})();
	(ie.DefaultOrder = 'XYZ'),
		(ie.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX']);
	var ae = new Jt(),
		oe = new bt(),
		se = (function () {
			function t() {
				this.mask = 1;
			}
			var e = t.prototype;
			return (
				(e.set = function (t) {
					this.mask = (1 << t) | 0;
				}),
				(e.enable = function (t) {
					this.mask |= (1 << t) | 0;
				}),
				(e.enableAll = function () {
					this.mask = -1;
				}),
				(e.toggle = function (t) {
					this.mask ^= (1 << t) | 0;
				}),
				(e.disable = function (t) {
					this.mask &= ~((1 << t) | 0);
				}),
				(e.disableAll = function () {
					this.mask = 0;
				}),
				(e.test = function (t) {
					return 0 != (this.mask & t.mask);
				}),
				t
			);
		})(),
		ce = 0,
		le = new wt(),
		ue = new bt(),
		he = new Jt(),
		de = new wt(),
		pe = new wt(),
		fe = new wt(),
		me = new bt(),
		ve = new wt(1, 0, 0),
		ge = new wt(0, 1, 0),
		ye = new wt(0, 0, 1),
		xe = { type: 'added' },
		_e = { type: 'removed' };
	function be() {
		Object.defineProperty(this, 'id', { value: ce++ }),
			(this.uuid = st.generateUUID()),
			(this.name = ''),
			(this.type = 'Object3D'),
			(this.parent = null),
			(this.children = []),
			(this.up = be.DefaultUp.clone());
		var t = new wt(),
			e = new ie(),
			n = new bt(),
			r = new wt(1, 1, 1);
		e._onChange(function () {
			n.setFromEuler(e, !1);
		}),
			n._onChange(function () {
				e.setFromQuaternion(n, void 0, !1);
			}),
			Object.defineProperties(this, {
				position: { configurable: !0, enumerable: !0, value: t },
				rotation: { configurable: !0, enumerable: !0, value: e },
				quaternion: { configurable: !0, enumerable: !0, value: n },
				scale: { configurable: !0, enumerable: !0, value: r },
				modelViewMatrix: { value: new Jt() },
				normalMatrix: { value: new ft() },
			}),
			(this.matrix = new Jt()),
			(this.matrixWorld = new Jt()),
			(this.matrixAutoUpdate = be.DefaultMatrixAutoUpdate),
			(this.matrixWorldNeedsUpdate = !1),
			(this.layers = new se()),
			(this.visible = !0),
			(this.castShadow = !1),
			(this.receiveShadow = !1),
			(this.frustumCulled = !0),
			(this.renderOrder = 0),
			(this.userData = {});
	}
	(be.DefaultUp = new wt(0, 1, 0)),
		(be.DefaultMatrixAutoUpdate = !0),
		(be.prototype = Object.assign(Object.create(rt.prototype), {
			constructor: be,
			isObject3D: !0,
			onBeforeRender: function () {},
			onAfterRender: function () {},
			applyMatrix4: function (t) {
				this.matrixAutoUpdate && this.updateMatrix(),
					this.matrix.premultiply(t),
					this.matrix.decompose(this.position, this.quaternion, this.scale);
			},
			applyQuaternion: function (t) {
				return this.quaternion.premultiply(t), this;
			},
			setRotationFromAxisAngle: function (t, e) {
				this.quaternion.setFromAxisAngle(t, e);
			},
			setRotationFromEuler: function (t) {
				this.quaternion.setFromEuler(t, !0);
			},
			setRotationFromMatrix: function (t) {
				this.quaternion.setFromRotationMatrix(t);
			},
			setRotationFromQuaternion: function (t) {
				this.quaternion.copy(t);
			},
			rotateOnAxis: function (t, e) {
				return ue.setFromAxisAngle(t, e), this.quaternion.multiply(ue), this;
			},
			rotateOnWorldAxis: function (t, e) {
				return ue.setFromAxisAngle(t, e), this.quaternion.premultiply(ue), this;
			},
			rotateX: function (t) {
				return this.rotateOnAxis(ve, t);
			},
			rotateY: function (t) {
				return this.rotateOnAxis(ge, t);
			},
			rotateZ: function (t) {
				return this.rotateOnAxis(ye, t);
			},
			translateOnAxis: function (t, e) {
				return (
					le.copy(t).applyQuaternion(this.quaternion),
					this.position.add(le.multiplyScalar(e)),
					this
				);
			},
			translateX: function (t) {
				return this.translateOnAxis(ve, t);
			},
			translateY: function (t) {
				return this.translateOnAxis(ge, t);
			},
			translateZ: function (t) {
				return this.translateOnAxis(ye, t);
			},
			localToWorld: function (t) {
				return t.applyMatrix4(this.matrixWorld);
			},
			worldToLocal: function (t) {
				return t.applyMatrix4(he.getInverse(this.matrixWorld));
			},
			lookAt: function (t, e, n) {
				t.isVector3 ? de.copy(t) : de.set(t, e, n);
				var r = this.parent;
				this.updateWorldMatrix(!0, !1),
					pe.setFromMatrixPosition(this.matrixWorld),
					this.isCamera || this.isLight
						? he.lookAt(pe, de, this.up)
						: he.lookAt(de, pe, this.up),
					this.quaternion.setFromRotationMatrix(he),
					r &&
						(he.extractRotation(r.matrixWorld),
						ue.setFromRotationMatrix(he),
						this.quaternion.premultiply(ue.inverse()));
			},
			add: function (t) {
				if (arguments.length > 1) {
					for (var e = 0; e < arguments.length; e++) this.add(arguments[e]);
					return this;
				}
				return t === this
					? (console.error(
							"THREE.Object3D.add: object can't be added as a child of itself.",
							t
					  ),
					  this)
					: (t && t.isObject3D
							? (null !== t.parent && t.parent.remove(t),
							  (t.parent = this),
							  this.children.push(t),
							  t.dispatchEvent(xe))
							: console.error(
									'THREE.Object3D.add: object not an instance of THREE.Object3D.',
									t
							  ),
					  this);
			},
			remove: function (t) {
				if (arguments.length > 1) {
					for (var e = 0; e < arguments.length; e++) this.remove(arguments[e]);
					return this;
				}
				var n = this.children.indexOf(t);
				return (
					-1 !== n &&
						((t.parent = null),
						this.children.splice(n, 1),
						t.dispatchEvent(_e)),
					this
				);
			},
			attach: function (t) {
				return (
					this.updateWorldMatrix(!0, !1),
					he.getInverse(this.matrixWorld),
					null !== t.parent &&
						(t.parent.updateWorldMatrix(!0, !1),
						he.multiply(t.parent.matrixWorld)),
					t.applyMatrix4(he),
					t.updateWorldMatrix(!1, !1),
					this.add(t),
					this
				);
			},
			getObjectById: function (t) {
				return this.getObjectByProperty('id', t);
			},
			getObjectByName: function (t) {
				return this.getObjectByProperty('name', t);
			},
			getObjectByProperty: function (t, e) {
				if (this[t] === e) return this;
				for (var n = 0, r = this.children.length; n < r; n++) {
					var i = this.children[n].getObjectByProperty(t, e);
					if (void 0 !== i) return i;
				}
			},
			getWorldPosition: function (t) {
				return (
					void 0 === t &&
						(console.warn(
							'THREE.Object3D: .getWorldPosition() target is now required'
						),
						(t = new wt())),
					this.updateWorldMatrix(!0, !1),
					t.setFromMatrixPosition(this.matrixWorld)
				);
			},
			getWorldQuaternion: function (t) {
				return (
					void 0 === t &&
						(console.warn(
							'THREE.Object3D: .getWorldQuaternion() target is now required'
						),
						(t = new bt())),
					this.updateWorldMatrix(!0, !1),
					this.matrixWorld.decompose(pe, t, fe),
					t
				);
			},
			getWorldScale: function (t) {
				return (
					void 0 === t &&
						(console.warn(
							'THREE.Object3D: .getWorldScale() target is now required'
						),
						(t = new wt())),
					this.updateWorldMatrix(!0, !1),
					this.matrixWorld.decompose(pe, me, t),
					t
				);
			},
			getWorldDirection: function (t) {
				void 0 === t &&
					(console.warn(
						'THREE.Object3D: .getWorldDirection() target is now required'
					),
					(t = new wt())),
					this.updateWorldMatrix(!0, !1);
				var e = this.matrixWorld.elements;
				return t.set(e[8], e[9], e[10]).normalize();
			},
			raycast: function () {},
			traverse: function (t) {
				t(this);
				for (var e = this.children, n = 0, r = e.length; n < r; n++)
					e[n].traverse(t);
			},
			traverseVisible: function (t) {
				if (!1 !== this.visible) {
					t(this);
					for (var e = this.children, n = 0, r = e.length; n < r; n++)
						e[n].traverseVisible(t);
				}
			},
			traverseAncestors: function (t) {
				var e = this.parent;
				null !== e && (t(e), e.traverseAncestors(t));
			},
			updateMatrix: function () {
				this.matrix.compose(this.position, this.quaternion, this.scale),
					(this.matrixWorldNeedsUpdate = !0);
			},
			updateMatrixWorld: function (t) {
				this.matrixAutoUpdate && this.updateMatrix(),
					(this.matrixWorldNeedsUpdate || t) &&
						(null === this.parent
							? this.matrixWorld.copy(this.matrix)
							: this.matrixWorld.multiplyMatrices(
									this.parent.matrixWorld,
									this.matrix
							  ),
						(this.matrixWorldNeedsUpdate = !1),
						(t = !0));
				for (var e = this.children, n = 0, r = e.length; n < r; n++)
					e[n].updateMatrixWorld(t);
			},
			updateWorldMatrix: function (t, e) {
				var n = this.parent;
				if (
					(!0 === t && null !== n && n.updateWorldMatrix(!0, !1),
					this.matrixAutoUpdate && this.updateMatrix(),
					null === this.parent
						? this.matrixWorld.copy(this.matrix)
						: this.matrixWorld.multiplyMatrices(
								this.parent.matrixWorld,
								this.matrix
						  ),
					!0 === e)
				)
					for (var r = this.children, i = 0, a = r.length; i < a; i++)
						r[i].updateWorldMatrix(!1, !0);
			},
			toJSON: function (t) {
				var e = void 0 === t || 'string' == typeof t,
					n = {};
				e &&
					((t = {
						geometries: {},
						materials: {},
						textures: {},
						images: {},
						shapes: {},
					}),
					(n.metadata = {
						version: 4.5,
						type: 'Object',
						generator: 'Object3D.toJSON',
					}));
				var r = {};
				function i(e, n) {
					return void 0 === e[n.uuid] && (e[n.uuid] = n.toJSON(t)), n.uuid;
				}
				if (
					((r.uuid = this.uuid),
					(r.type = this.type),
					'' !== this.name && (r.name = this.name),
					!0 === this.castShadow && (r.castShadow = !0),
					!0 === this.receiveShadow && (r.receiveShadow = !0),
					!1 === this.visible && (r.visible = !1),
					!1 === this.frustumCulled && (r.frustumCulled = !1),
					0 !== this.renderOrder && (r.renderOrder = this.renderOrder),
					'{}' !== JSON.stringify(this.userData) &&
						(r.userData = this.userData),
					(r.layers = this.layers.mask),
					(r.matrix = this.matrix.toArray()),
					!1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
					this.isInstancedMesh &&
						((r.type = 'InstancedMesh'),
						(r.count = this.count),
						(r.instanceMatrix = this.instanceMatrix.toJSON())),
					this.isMesh || this.isLine || this.isPoints)
				) {
					r.geometry = i(t.geometries, this.geometry);
					var a = this.geometry.parameters;
					if (void 0 !== a && void 0 !== a.shapes) {
						var o = a.shapes;
						if (Array.isArray(o))
							for (var s = 0, c = o.length; s < c; s++) {
								var l = o[s];
								i(t.shapes, l);
							}
						else i(t.shapes, o);
					}
				}
				if (void 0 !== this.material)
					if (Array.isArray(this.material)) {
						for (var u = [], h = 0, d = this.material.length; h < d; h++)
							u.push(i(t.materials, this.material[h]));
						r.material = u;
					} else r.material = i(t.materials, this.material);
				if (this.children.length > 0) {
					r.children = [];
					for (var p = 0; p < this.children.length; p++)
						r.children.push(this.children[p].toJSON(t).object);
				}
				if (e) {
					var f = x(t.geometries),
						m = x(t.materials),
						v = x(t.textures),
						g = x(t.images),
						y = x(t.shapes);
					f.length > 0 && (n.geometries = f),
						m.length > 0 && (n.materials = m),
						v.length > 0 && (n.textures = v),
						g.length > 0 && (n.images = g),
						y.length > 0 && (n.shapes = y);
				}
				return (n.object = r), n;
				function x(t) {
					var e = [];
					for (var n in t) {
						var r = t[n];
						delete r.metadata, e.push(r);
					}
					return e;
				}
			},
			clone: function (t) {
				return new this.constructor().copy(this, t);
			},
			copy: function (t, e) {
				if (
					(void 0 === e && (e = !0),
					(this.name = t.name),
					this.up.copy(t.up),
					this.position.copy(t.position),
					(this.rotation.order = t.rotation.order),
					this.quaternion.copy(t.quaternion),
					this.scale.copy(t.scale),
					this.matrix.copy(t.matrix),
					this.matrixWorld.copy(t.matrixWorld),
					(this.matrixAutoUpdate = t.matrixAutoUpdate),
					(this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate),
					(this.layers.mask = t.layers.mask),
					(this.visible = t.visible),
					(this.castShadow = t.castShadow),
					(this.receiveShadow = t.receiveShadow),
					(this.frustumCulled = t.frustumCulled),
					(this.renderOrder = t.renderOrder),
					(this.userData = JSON.parse(JSON.stringify(t.userData))),
					!0 === e)
				)
					for (var n = 0; n < t.children.length; n++) {
						var r = t.children[n];
						this.add(r.clone());
					}
				return this;
			},
		}));
	var we = new wt(),
		Me = new wt(),
		Se = new ft(),
		Te = (function () {
			function t(t, e) {
				Object.defineProperty(this, 'isPlane', { value: !0 }),
					(this.normal = void 0 !== t ? t : new wt(1, 0, 0)),
					(this.constant = void 0 !== e ? e : 0);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e) {
					return this.normal.copy(t), (this.constant = e), this;
				}),
				(e.setComponents = function (t, e, n, r) {
					return this.normal.set(t, e, n), (this.constant = r), this;
				}),
				(e.setFromNormalAndCoplanarPoint = function (t, e) {
					return (
						this.normal.copy(t), (this.constant = -e.dot(this.normal)), this
					);
				}),
				(e.setFromCoplanarPoints = function (t, e, n) {
					var r = we.subVectors(n, e).cross(Me.subVectors(t, e)).normalize();
					return this.setFromNormalAndCoplanarPoint(r, t), this;
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return this.normal.copy(t.normal), (this.constant = t.constant), this;
				}),
				(e.normalize = function () {
					var t = 1 / this.normal.length();
					return this.normal.multiplyScalar(t), (this.constant *= t), this;
				}),
				(e.negate = function () {
					return (this.constant *= -1), this.normal.negate(), this;
				}),
				(e.distanceToPoint = function (t) {
					return this.normal.dot(t) + this.constant;
				}),
				(e.distanceToSphere = function (t) {
					return this.distanceToPoint(t.center) - t.radius;
				}),
				(e.projectPoint = function (t, e) {
					return (
						void 0 === e &&
							(console.warn(
								'THREE.Plane: .projectPoint() target is now required'
							),
							(e = new wt())),
						e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)
					);
				}),
				(e.intersectLine = function (t, e) {
					void 0 === e &&
						(console.warn(
							'THREE.Plane: .intersectLine() target is now required'
						),
						(e = new wt()));
					var n = t.delta(we),
						r = this.normal.dot(n);
					if (0 === r)
						return 0 === this.distanceToPoint(t.start)
							? e.copy(t.start)
							: void 0;
					var i = -(t.start.dot(this.normal) + this.constant) / r;
					return i < 0 || i > 1
						? void 0
						: e.copy(n).multiplyScalar(i).add(t.start);
				}),
				(e.intersectsLine = function (t) {
					var e = this.distanceToPoint(t.start),
						n = this.distanceToPoint(t.end);
					return (e < 0 && n > 0) || (n < 0 && e > 0);
				}),
				(e.intersectsBox = function (t) {
					return t.intersectsPlane(this);
				}),
				(e.intersectsSphere = function (t) {
					return t.intersectsPlane(this);
				}),
				(e.coplanarPoint = function (t) {
					return (
						void 0 === t &&
							(console.warn(
								'THREE.Plane: .coplanarPoint() target is now required'
							),
							(t = new wt())),
						t.copy(this.normal).multiplyScalar(-this.constant)
					);
				}),
				(e.applyMatrix4 = function (t, e) {
					var n = e || Se.getNormalMatrix(t),
						r = this.coplanarPoint(we).applyMatrix4(t),
						i = this.normal.applyMatrix3(n).normalize();
					return (this.constant = -r.dot(i)), this;
				}),
				(e.translate = function (t) {
					return (this.constant -= t.dot(this.normal)), this;
				}),
				(e.equals = function (t) {
					return t.normal.equals(this.normal) && t.constant === this.constant;
				}),
				t
			);
		})(),
		Ee = new wt(),
		Ae = new wt(),
		Le = new wt(),
		Re = new wt(),
		Ce = new wt(),
		Pe = new wt(),
		Ie = new wt(),
		De = new wt(),
		Ne = new wt(),
		Oe = new wt(),
		Be = (function () {
			function t(t, e, n) {
				(this.a = void 0 !== t ? t : new wt()),
					(this.b = void 0 !== e ? e : new wt()),
					(this.c = void 0 !== n ? n : new wt());
			}
			(t.getNormal = function (t, e, n, r) {
				void 0 === r &&
					(console.warn('THREE.Triangle: .getNormal() target is now required'),
					(r = new wt())),
					r.subVectors(n, e),
					Ee.subVectors(t, e),
					r.cross(Ee);
				var i = r.lengthSq();
				return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0);
			}),
				(t.getBarycoord = function (t, e, n, r, i) {
					Ee.subVectors(r, e), Ae.subVectors(n, e), Le.subVectors(t, e);
					var a = Ee.dot(Ee),
						o = Ee.dot(Ae),
						s = Ee.dot(Le),
						c = Ae.dot(Ae),
						l = Ae.dot(Le),
						u = a * c - o * o;
					if (
						(void 0 === i &&
							(console.warn(
								'THREE.Triangle: .getBarycoord() target is now required'
							),
							(i = new wt())),
						0 === u)
					)
						return i.set(-2, -1, -1);
					var h = 1 / u,
						d = (c * s - o * l) * h,
						p = (a * l - o * s) * h;
					return i.set(1 - d - p, p, d);
				}),
				(t.containsPoint = function (t, e, n, r) {
					return (
						this.getBarycoord(t, e, n, r, Re),
						Re.x >= 0 && Re.y >= 0 && Re.x + Re.y <= 1
					);
				}),
				(t.getUV = function (t, e, n, r, i, a, o, s) {
					return (
						this.getBarycoord(t, e, n, r, Re),
						s.set(0, 0),
						s.addScaledVector(i, Re.x),
						s.addScaledVector(a, Re.y),
						s.addScaledVector(o, Re.z),
						s
					);
				}),
				(t.isFrontFacing = function (t, e, n, r) {
					return (
						Ee.subVectors(n, e), Ae.subVectors(t, e), Ee.cross(Ae).dot(r) < 0
					);
				});
			var e = t.prototype;
			return (
				(e.set = function (t, e, n) {
					return this.a.copy(t), this.b.copy(e), this.c.copy(n), this;
				}),
				(e.setFromPointsAndIndices = function (t, e, n, r) {
					return this.a.copy(t[e]), this.b.copy(t[n]), this.c.copy(t[r]), this;
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this;
				}),
				(e.getArea = function () {
					return (
						Ee.subVectors(this.c, this.b),
						Ae.subVectors(this.a, this.b),
						0.5 * Ee.cross(Ae).length()
					);
				}),
				(e.getMidpoint = function (t) {
					return (
						void 0 === t &&
							(console.warn(
								'THREE.Triangle: .getMidpoint() target is now required'
							),
							(t = new wt())),
						t
							.addVectors(this.a, this.b)
							.add(this.c)
							.multiplyScalar(1 / 3)
					);
				}),
				(e.getNormal = function (e) {
					return t.getNormal(this.a, this.b, this.c, e);
				}),
				(e.getPlane = function (t) {
					return (
						void 0 === t &&
							(console.warn(
								'THREE.Triangle: .getPlane() target is now required'
							),
							(t = new Te())),
						t.setFromCoplanarPoints(this.a, this.b, this.c)
					);
				}),
				(e.getBarycoord = function (e, n) {
					return t.getBarycoord(e, this.a, this.b, this.c, n);
				}),
				(e.getUV = function (e, n, r, i, a) {
					return t.getUV(e, this.a, this.b, this.c, n, r, i, a);
				}),
				(e.containsPoint = function (e) {
					return t.containsPoint(e, this.a, this.b, this.c);
				}),
				(e.isFrontFacing = function (e) {
					return t.isFrontFacing(this.a, this.b, this.c, e);
				}),
				(e.intersectsBox = function (t) {
					return t.intersectsTriangle(this);
				}),
				(e.closestPointToPoint = function (t, e) {
					void 0 === e &&
						(console.warn(
							'THREE.Triangle: .closestPointToPoint() target is now required'
						),
						(e = new wt()));
					var n,
						r,
						i = this.a,
						a = this.b,
						o = this.c;
					Ce.subVectors(a, i), Pe.subVectors(o, i), De.subVectors(t, i);
					var s = Ce.dot(De),
						c = Pe.dot(De);
					if (s <= 0 && c <= 0) return e.copy(i);
					Ne.subVectors(t, a);
					var l = Ce.dot(Ne),
						u = Pe.dot(Ne);
					if (l >= 0 && u <= l) return e.copy(a);
					var h = s * u - l * c;
					if (h <= 0 && s >= 0 && l <= 0)
						return (n = s / (s - l)), e.copy(i).addScaledVector(Ce, n);
					Oe.subVectors(t, o);
					var d = Ce.dot(Oe),
						p = Pe.dot(Oe);
					if (p >= 0 && d <= p) return e.copy(o);
					var f = d * c - s * p;
					if (f <= 0 && c >= 0 && p <= 0)
						return (r = c / (c - p)), e.copy(i).addScaledVector(Pe, r);
					var m = l * p - d * u;
					if (m <= 0 && u - l >= 0 && d - p >= 0)
						return (
							Ie.subVectors(o, a),
							(r = (u - l) / (u - l + (d - p))),
							e.copy(a).addScaledVector(Ie, r)
						);
					var v = 1 / (m + f + h);
					return (
						(n = f * v),
						(r = h * v),
						e.copy(i).addScaledVector(Ce, n).addScaledVector(Pe, r)
					);
				}),
				(e.equals = function (t) {
					return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c);
				}),
				t
			);
		})(),
		ze = {
			aliceblue: 15792383,
			antiquewhite: 16444375,
			aqua: 65535,
			aquamarine: 8388564,
			azure: 15794175,
			beige: 16119260,
			bisque: 16770244,
			black: 0,
			blanchedalmond: 16772045,
			blue: 255,
			blueviolet: 9055202,
			brown: 10824234,
			burlywood: 14596231,
			cadetblue: 6266528,
			chartreuse: 8388352,
			chocolate: 13789470,
			coral: 16744272,
			cornflowerblue: 6591981,
			cornsilk: 16775388,
			crimson: 14423100,
			cyan: 65535,
			darkblue: 139,
			darkcyan: 35723,
			darkgoldenrod: 12092939,
			darkgray: 11119017,
			darkgreen: 25600,
			darkgrey: 11119017,
			darkkhaki: 12433259,
			darkmagenta: 9109643,
			darkolivegreen: 5597999,
			darkorange: 16747520,
			darkorchid: 10040012,
			darkred: 9109504,
			darksalmon: 15308410,
			darkseagreen: 9419919,
			darkslateblue: 4734347,
			darkslategray: 3100495,
			darkslategrey: 3100495,
			darkturquoise: 52945,
			darkviolet: 9699539,
			deeppink: 16716947,
			deepskyblue: 49151,
			dimgray: 6908265,
			dimgrey: 6908265,
			dodgerblue: 2003199,
			firebrick: 11674146,
			floralwhite: 16775920,
			forestgreen: 2263842,
			fuchsia: 16711935,
			gainsboro: 14474460,
			ghostwhite: 16316671,
			gold: 16766720,
			goldenrod: 14329120,
			gray: 8421504,
			green: 32768,
			greenyellow: 11403055,
			grey: 8421504,
			honeydew: 15794160,
			hotpink: 16738740,
			indianred: 13458524,
			indigo: 4915330,
			ivory: 16777200,
			khaki: 15787660,
			lavender: 15132410,
			lavenderblush: 16773365,
			lawngreen: 8190976,
			lemonchiffon: 16775885,
			lightblue: 11393254,
			lightcoral: 15761536,
			lightcyan: 14745599,
			lightgoldenrodyellow: 16448210,
			lightgray: 13882323,
			lightgreen: 9498256,
			lightgrey: 13882323,
			lightpink: 16758465,
			lightsalmon: 16752762,
			lightseagreen: 2142890,
			lightskyblue: 8900346,
			lightslategray: 7833753,
			lightslategrey: 7833753,
			lightsteelblue: 11584734,
			lightyellow: 16777184,
			lime: 65280,
			limegreen: 3329330,
			linen: 16445670,
			magenta: 16711935,
			maroon: 8388608,
			mediumaquamarine: 6737322,
			mediumblue: 205,
			mediumorchid: 12211667,
			mediumpurple: 9662683,
			mediumseagreen: 3978097,
			mediumslateblue: 8087790,
			mediumspringgreen: 64154,
			mediumturquoise: 4772300,
			mediumvioletred: 13047173,
			midnightblue: 1644912,
			mintcream: 16121850,
			mistyrose: 16770273,
			moccasin: 16770229,
			navajowhite: 16768685,
			navy: 128,
			oldlace: 16643558,
			olive: 8421376,
			olivedrab: 7048739,
			orange: 16753920,
			orangered: 16729344,
			orchid: 14315734,
			palegoldenrod: 15657130,
			palegreen: 10025880,
			paleturquoise: 11529966,
			palevioletred: 14381203,
			papayawhip: 16773077,
			peachpuff: 16767673,
			peru: 13468991,
			pink: 16761035,
			plum: 14524637,
			powderblue: 11591910,
			purple: 8388736,
			rebeccapurple: 6697881,
			red: 16711680,
			rosybrown: 12357519,
			royalblue: 4286945,
			saddlebrown: 9127187,
			salmon: 16416882,
			sandybrown: 16032864,
			seagreen: 3050327,
			seashell: 16774638,
			sienna: 10506797,
			silver: 12632256,
			skyblue: 8900331,
			slateblue: 6970061,
			slategray: 7372944,
			slategrey: 7372944,
			snow: 16775930,
			springgreen: 65407,
			steelblue: 4620980,
			tan: 13808780,
			teal: 32896,
			thistle: 14204888,
			tomato: 16737095,
			turquoise: 4251856,
			violet: 15631086,
			wheat: 16113331,
			white: 16777215,
			whitesmoke: 16119285,
			yellow: 16776960,
			yellowgreen: 10145074,
		},
		Ge = { h: 0, s: 0, l: 0 },
		Fe = { h: 0, s: 0, l: 0 };
	function Ue(t, e, n) {
		return (
			n < 0 && (n += 1),
			n > 1 && (n -= 1),
			n < 1 / 6
				? t + 6 * (e - t) * n
				: n < 0.5
				? e
				: n < 2 / 3
				? t + 6 * (e - t) * (2 / 3 - n)
				: t
		);
	}
	function He(t) {
		return t < 0.04045
			? 0.0773993808 * t
			: Math.pow(0.9478672986 * t + 0.0521327014, 2.4);
	}
	function ke(t) {
		return t < 0.0031308 ? 12.92 * t : 1.055 * Math.pow(t, 0.41666) - 0.055;
	}
	var Ve = (function () {
		function t(t, e, n) {
			return (
				Object.defineProperty(this, 'isColor', { value: !0 }),
				void 0 === e && void 0 === n ? this.set(t) : this.setRGB(t, e, n)
			);
		}
		var e = t.prototype;
		return (
			(e.set = function (t) {
				return (
					t && t.isColor
						? this.copy(t)
						: 'number' == typeof t
						? this.setHex(t)
						: 'string' == typeof t && this.setStyle(t),
					this
				);
			}),
			(e.setScalar = function (t) {
				return (this.r = t), (this.g = t), (this.b = t), this;
			}),
			(e.setHex = function (t) {
				return (
					(t = Math.floor(t)),
					(this.r = ((t >> 16) & 255) / 255),
					(this.g = ((t >> 8) & 255) / 255),
					(this.b = (255 & t) / 255),
					this
				);
			}),
			(e.setRGB = function (t, e, n) {
				return (this.r = t), (this.g = e), (this.b = n), this;
			}),
			(e.setHSL = function (t, e, n) {
				if (
					((t = st.euclideanModulo(t, 1)),
					(e = st.clamp(e, 0, 1)),
					(n = st.clamp(n, 0, 1)),
					0 === e)
				)
					this.r = this.g = this.b = n;
				else {
					var r = n <= 0.5 ? n * (1 + e) : n + e - n * e,
						i = 2 * n - r;
					(this.r = Ue(i, r, t + 1 / 3)),
						(this.g = Ue(i, r, t)),
						(this.b = Ue(i, r, t - 1 / 3));
				}
				return this;
			}),
			(e.setStyle = function (t) {
				function e(e) {
					void 0 !== e &&
						parseFloat(e) < 1 &&
						console.warn(
							'THREE.Color: Alpha component of ' + t + ' will be ignored.'
						);
				}
				var n;
				if ((n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t))) {
					var r,
						i = n[1],
						a = n[2];
					switch (i) {
						case 'rgb':
						case 'rgba':
							if (
								(r =
									/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
										a
									))
							)
								return (
									(this.r = Math.min(255, parseInt(r[1], 10)) / 255),
									(this.g = Math.min(255, parseInt(r[2], 10)) / 255),
									(this.b = Math.min(255, parseInt(r[3], 10)) / 255),
									e(r[5]),
									this
								);
							if (
								(r =
									/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
										a
									))
							)
								return (
									(this.r = Math.min(100, parseInt(r[1], 10)) / 100),
									(this.g = Math.min(100, parseInt(r[2], 10)) / 100),
									(this.b = Math.min(100, parseInt(r[3], 10)) / 100),
									e(r[5]),
									this
								);
							break;
						case 'hsl':
						case 'hsla':
							if (
								(r =
									/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
										a
									))
							) {
								var o = parseFloat(r[1]) / 360,
									s = parseInt(r[2], 10) / 100,
									c = parseInt(r[3], 10) / 100;
								return e(r[5]), this.setHSL(o, s, c);
							}
					}
				} else if ((n = /^\#([A-Fa-f0-9]+)$/.exec(t))) {
					var l = n[1],
						u = l.length;
					if (3 === u)
						return (
							(this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255),
							(this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255),
							(this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255),
							this
						);
					if (6 === u)
						return (
							(this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255),
							(this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255),
							(this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255),
							this
						);
				}
				return t && t.length > 0 ? this.setColorName(t) : this;
			}),
			(e.setColorName = function (t) {
				var e = ze[t];
				return (
					void 0 !== e
						? this.setHex(e)
						: console.warn('THREE.Color: Unknown color ' + t),
					this
				);
			}),
			(e.clone = function () {
				return new this.constructor(this.r, this.g, this.b);
			}),
			(e.copy = function (t) {
				return (this.r = t.r), (this.g = t.g), (this.b = t.b), this;
			}),
			(e.copyGammaToLinear = function (t, e) {
				return (
					void 0 === e && (e = 2),
					(this.r = Math.pow(t.r, e)),
					(this.g = Math.pow(t.g, e)),
					(this.b = Math.pow(t.b, e)),
					this
				);
			}),
			(e.copyLinearToGamma = function (t, e) {
				void 0 === e && (e = 2);
				var n = e > 0 ? 1 / e : 1;
				return (
					(this.r = Math.pow(t.r, n)),
					(this.g = Math.pow(t.g, n)),
					(this.b = Math.pow(t.b, n)),
					this
				);
			}),
			(e.convertGammaToLinear = function (t) {
				return this.copyGammaToLinear(this, t), this;
			}),
			(e.convertLinearToGamma = function (t) {
				return this.copyLinearToGamma(this, t), this;
			}),
			(e.copySRGBToLinear = function (t) {
				return (this.r = He(t.r)), (this.g = He(t.g)), (this.b = He(t.b)), this;
			}),
			(e.copyLinearToSRGB = function (t) {
				return (this.r = ke(t.r)), (this.g = ke(t.g)), (this.b = ke(t.b)), this;
			}),
			(e.convertSRGBToLinear = function () {
				return this.copySRGBToLinear(this), this;
			}),
			(e.convertLinearToSRGB = function () {
				return this.copyLinearToSRGB(this), this;
			}),
			(e.getHex = function () {
				return (
					((255 * this.r) << 16) ^ ((255 * this.g) << 8) ^ ((255 * this.b) << 0)
				);
			}),
			(e.getHexString = function () {
				return ('000000' + this.getHex().toString(16)).slice(-6);
			}),
			(e.getHSL = function (t) {
				void 0 === t &&
					(console.warn('THREE.Color: .getHSL() target is now required'),
					(t = { h: 0, s: 0, l: 0 }));
				var e,
					n,
					r = this.r,
					i = this.g,
					a = this.b,
					o = Math.max(r, i, a),
					s = Math.min(r, i, a),
					c = (s + o) / 2;
				if (s === o) (e = 0), (n = 0);
				else {
					var l = o - s;
					switch (((n = c <= 0.5 ? l / (o + s) : l / (2 - o - s)), o)) {
						case r:
							e = (i - a) / l + (i < a ? 6 : 0);
							break;
						case i:
							e = (a - r) / l + 2;
							break;
						case a:
							e = (r - i) / l + 4;
					}
					e /= 6;
				}
				return (t.h = e), (t.s = n), (t.l = c), t;
			}),
			(e.getStyle = function () {
				return (
					'rgb(' +
					((255 * this.r) | 0) +
					',' +
					((255 * this.g) | 0) +
					',' +
					((255 * this.b) | 0) +
					')'
				);
			}),
			(e.offsetHSL = function (t, e, n) {
				return (
					this.getHSL(Ge),
					(Ge.h += t),
					(Ge.s += e),
					(Ge.l += n),
					this.setHSL(Ge.h, Ge.s, Ge.l),
					this
				);
			}),
			(e.add = function (t) {
				return (this.r += t.r), (this.g += t.g), (this.b += t.b), this;
			}),
			(e.addColors = function (t, e) {
				return (
					(this.r = t.r + e.r), (this.g = t.g + e.g), (this.b = t.b + e.b), this
				);
			}),
			(e.addScalar = function (t) {
				return (this.r += t), (this.g += t), (this.b += t), this;
			}),
			(e.sub = function (t) {
				return (
					(this.r = Math.max(0, this.r - t.r)),
					(this.g = Math.max(0, this.g - t.g)),
					(this.b = Math.max(0, this.b - t.b)),
					this
				);
			}),
			(e.multiply = function (t) {
				return (this.r *= t.r), (this.g *= t.g), (this.b *= t.b), this;
			}),
			(e.multiplyScalar = function (t) {
				return (this.r *= t), (this.g *= t), (this.b *= t), this;
			}),
			(e.lerp = function (t, e) {
				return (
					(this.r += (t.r - this.r) * e),
					(this.g += (t.g - this.g) * e),
					(this.b += (t.b - this.b) * e),
					this
				);
			}),
			(e.lerpHSL = function (t, e) {
				this.getHSL(Ge), t.getHSL(Fe);
				var n = st.lerp(Ge.h, Fe.h, e),
					r = st.lerp(Ge.s, Fe.s, e),
					i = st.lerp(Ge.l, Fe.l, e);
				return this.setHSL(n, r, i), this;
			}),
			(e.equals = function (t) {
				return t.r === this.r && t.g === this.g && t.b === this.b;
			}),
			(e.fromArray = function (t, e) {
				return (
					void 0 === e && (e = 0),
					(this.r = t[e]),
					(this.g = t[e + 1]),
					(this.b = t[e + 2]),
					this
				);
			}),
			(e.toArray = function (t, e) {
				return (
					void 0 === t && (t = []),
					void 0 === e && (e = 0),
					(t[e] = this.r),
					(t[e + 1] = this.g),
					(t[e + 2] = this.b),
					t
				);
			}),
			(e.fromBufferAttribute = function (t, e) {
				return (
					(this.r = t.getX(e)),
					(this.g = t.getY(e)),
					(this.b = t.getZ(e)),
					!0 === t.normalized &&
						((this.r /= 255), (this.g /= 255), (this.b /= 255)),
					this
				);
			}),
			(e.toJSON = function () {
				return this.getHex();
			}),
			t
		);
	})();
	(Ve.NAMES = ze),
		(Ve.prototype.r = 1),
		(Ve.prototype.g = 1),
		(Ve.prototype.b = 1);
	var We = (function () {
			function t(t, e, n, r, i, a) {
				(this.a = t),
					(this.b = e),
					(this.c = n),
					(this.normal = r && r.isVector3 ? r : new wt()),
					(this.vertexNormals = Array.isArray(r) ? r : []),
					(this.color = i && i.isColor ? i : new Ve()),
					(this.vertexColors = Array.isArray(i) ? i : []),
					(this.materialIndex = void 0 !== a ? a : 0);
			}
			var e = t.prototype;
			return (
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					(this.a = t.a),
						(this.b = t.b),
						(this.c = t.c),
						this.normal.copy(t.normal),
						this.color.copy(t.color),
						(this.materialIndex = t.materialIndex);
					for (var e = 0, n = t.vertexNormals.length; e < n; e++)
						this.vertexNormals[e] = t.vertexNormals[e].clone();
					for (var r = 0, i = t.vertexColors.length; r < i; r++)
						this.vertexColors[r] = t.vertexColors[r].clone();
					return this;
				}),
				t
			);
		})(),
		je = 0;
	function qe() {
		Object.defineProperty(this, 'id', { value: je++ }),
			(this.uuid = st.generateUUID()),
			(this.name = ''),
			(this.type = 'Material'),
			(this.fog = !0),
			(this.blending = 1),
			(this.side = 0),
			(this.flatShading = !1),
			(this.vertexColors = !1),
			(this.opacity = 1),
			(this.transparent = !1),
			(this.blendSrc = 204),
			(this.blendDst = 205),
			(this.blendEquation = e),
			(this.blendSrcAlpha = null),
			(this.blendDstAlpha = null),
			(this.blendEquationAlpha = null),
			(this.depthFunc = 3),
			(this.depthTest = !0),
			(this.depthWrite = !0),
			(this.stencilWriteMask = 255),
			(this.stencilFunc = 519),
			(this.stencilRef = 0),
			(this.stencilFuncMask = 255),
			(this.stencilFail = $),
			(this.stencilZFail = $),
			(this.stencilZPass = $),
			(this.stencilWrite = !1),
			(this.clippingPlanes = null),
			(this.clipIntersection = !1),
			(this.clipShadows = !1),
			(this.shadowSide = null),
			(this.colorWrite = !0),
			(this.precision = null),
			(this.polygonOffset = !1),
			(this.polygonOffsetFactor = 0),
			(this.polygonOffsetUnits = 0),
			(this.dithering = !1),
			(this.alphaTest = 0),
			(this.premultipliedAlpha = !1),
			(this.visible = !0),
			(this.toneMapped = !0),
			(this.userData = {}),
			(this.version = 0);
	}
	function Xe(t) {
		qe.call(this),
			(this.type = 'MeshBasicMaterial'),
			(this.color = new Ve(16777215)),
			(this.map = null),
			(this.lightMap = null),
			(this.lightMapIntensity = 1),
			(this.aoMap = null),
			(this.aoMapIntensity = 1),
			(this.specularMap = null),
			(this.alphaMap = null),
			(this.envMap = null),
			(this.combine = 0),
			(this.reflectivity = 1),
			(this.refractionRatio = 0.98),
			(this.wireframe = !1),
			(this.wireframeLinewidth = 1),
			(this.wireframeLinecap = 'round'),
			(this.wireframeLinejoin = 'round'),
			(this.skinning = !1),
			(this.morphTargets = !1),
			this.setValues(t);
	}
	(qe.prototype = Object.assign(Object.create(rt.prototype), {
		constructor: qe,
		isMaterial: !0,
		onBeforeCompile: function () {},
		customProgramCacheKey: function () {
			return this.onBeforeCompile.toString();
		},
		setValues: function (t) {
			if (void 0 !== t)
				for (var e in t) {
					var n = t[e];
					if (void 0 !== n)
						if ('shading' !== e) {
							var r = this[e];
							void 0 !== r
								? r && r.isColor
									? r.set(n)
									: r && r.isVector3 && n && n.isVector3
									? r.copy(n)
									: (this[e] = n)
								: console.warn(
										'THREE.' +
											this.type +
											": '" +
											e +
											"' is not a property of this material."
								  );
						} else
							console.warn(
								'THREE.' +
									this.type +
									': .shading has been removed. Use the boolean .flatShading instead.'
							),
								(this.flatShading = 1 === n);
					else
						console.warn("THREE.Material: '" + e + "' parameter is undefined.");
				}
		},
		toJSON: function (t) {
			var e = void 0 === t || 'string' == typeof t;
			e && (t = { textures: {}, images: {} });
			var n = {
				metadata: {
					version: 4.5,
					type: 'Material',
					generator: 'Material.toJSON',
				},
			};
			function r(t) {
				var e = [];
				for (var n in t) {
					var r = t[n];
					delete r.metadata, e.push(r);
				}
				return e;
			}
			if (
				((n.uuid = this.uuid),
				(n.type = this.type),
				'' !== this.name && (n.name = this.name),
				this.color && this.color.isColor && (n.color = this.color.getHex()),
				void 0 !== this.roughness && (n.roughness = this.roughness),
				void 0 !== this.metalness && (n.metalness = this.metalness),
				this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()),
				this.emissive &&
					this.emissive.isColor &&
					(n.emissive = this.emissive.getHex()),
				this.emissiveIntensity &&
					1 !== this.emissiveIntensity &&
					(n.emissiveIntensity = this.emissiveIntensity),
				this.specular &&
					this.specular.isColor &&
					(n.specular = this.specular.getHex()),
				void 0 !== this.shininess && (n.shininess = this.shininess),
				void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
				void 0 !== this.clearcoatRoughness &&
					(n.clearcoatRoughness = this.clearcoatRoughness),
				this.clearcoatMap &&
					this.clearcoatMap.isTexture &&
					(n.clearcoatMap = this.clearcoatMap.toJSON(t).uuid),
				this.clearcoatRoughnessMap &&
					this.clearcoatRoughnessMap.isTexture &&
					(n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(t).uuid),
				this.clearcoatNormalMap &&
					this.clearcoatNormalMap.isTexture &&
					((n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(t).uuid),
					(n.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
				this.map && this.map.isTexture && (n.map = this.map.toJSON(t).uuid),
				this.matcap &&
					this.matcap.isTexture &&
					(n.matcap = this.matcap.toJSON(t).uuid),
				this.alphaMap &&
					this.alphaMap.isTexture &&
					(n.alphaMap = this.alphaMap.toJSON(t).uuid),
				this.lightMap &&
					this.lightMap.isTexture &&
					(n.lightMap = this.lightMap.toJSON(t).uuid),
				this.aoMap &&
					this.aoMap.isTexture &&
					((n.aoMap = this.aoMap.toJSON(t).uuid),
					(n.aoMapIntensity = this.aoMapIntensity)),
				this.bumpMap &&
					this.bumpMap.isTexture &&
					((n.bumpMap = this.bumpMap.toJSON(t).uuid),
					(n.bumpScale = this.bumpScale)),
				this.normalMap &&
					this.normalMap.isTexture &&
					((n.normalMap = this.normalMap.toJSON(t).uuid),
					(n.normalMapType = this.normalMapType),
					(n.normalScale = this.normalScale.toArray())),
				this.displacementMap &&
					this.displacementMap.isTexture &&
					((n.displacementMap = this.displacementMap.toJSON(t).uuid),
					(n.displacementScale = this.displacementScale),
					(n.displacementBias = this.displacementBias)),
				this.roughnessMap &&
					this.roughnessMap.isTexture &&
					(n.roughnessMap = this.roughnessMap.toJSON(t).uuid),
				this.metalnessMap &&
					this.metalnessMap.isTexture &&
					(n.metalnessMap = this.metalnessMap.toJSON(t).uuid),
				this.emissiveMap &&
					this.emissiveMap.isTexture &&
					(n.emissiveMap = this.emissiveMap.toJSON(t).uuid),
				this.specularMap &&
					this.specularMap.isTexture &&
					(n.specularMap = this.specularMap.toJSON(t).uuid),
				this.envMap &&
					this.envMap.isTexture &&
					((n.envMap = this.envMap.toJSON(t).uuid),
					(n.reflectivity = this.reflectivity),
					(n.refractionRatio = this.refractionRatio),
					void 0 !== this.combine && (n.combine = this.combine),
					void 0 !== this.envMapIntensity &&
						(n.envMapIntensity = this.envMapIntensity)),
				this.gradientMap &&
					this.gradientMap.isTexture &&
					(n.gradientMap = this.gradientMap.toJSON(t).uuid),
				void 0 !== this.size && (n.size = this.size),
				void 0 !== this.sizeAttenuation &&
					(n.sizeAttenuation = this.sizeAttenuation),
				1 !== this.blending && (n.blending = this.blending),
				!0 === this.flatShading && (n.flatShading = this.flatShading),
				0 !== this.side && (n.side = this.side),
				this.vertexColors && (n.vertexColors = !0),
				this.opacity < 1 && (n.opacity = this.opacity),
				!0 === this.transparent && (n.transparent = this.transparent),
				(n.depthFunc = this.depthFunc),
				(n.depthTest = this.depthTest),
				(n.depthWrite = this.depthWrite),
				(n.stencilWrite = this.stencilWrite),
				(n.stencilWriteMask = this.stencilWriteMask),
				(n.stencilFunc = this.stencilFunc),
				(n.stencilRef = this.stencilRef),
				(n.stencilFuncMask = this.stencilFuncMask),
				(n.stencilFail = this.stencilFail),
				(n.stencilZFail = this.stencilZFail),
				(n.stencilZPass = this.stencilZPass),
				this.rotation && 0 !== this.rotation && (n.rotation = this.rotation),
				!0 === this.polygonOffset && (n.polygonOffset = !0),
				0 !== this.polygonOffsetFactor &&
					(n.polygonOffsetFactor = this.polygonOffsetFactor),
				0 !== this.polygonOffsetUnits &&
					(n.polygonOffsetUnits = this.polygonOffsetUnits),
				this.linewidth &&
					1 !== this.linewidth &&
					(n.linewidth = this.linewidth),
				void 0 !== this.dashSize && (n.dashSize = this.dashSize),
				void 0 !== this.gapSize && (n.gapSize = this.gapSize),
				void 0 !== this.scale && (n.scale = this.scale),
				!0 === this.dithering && (n.dithering = !0),
				this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
				!0 === this.premultipliedAlpha &&
					(n.premultipliedAlpha = this.premultipliedAlpha),
				!0 === this.wireframe && (n.wireframe = this.wireframe),
				this.wireframeLinewidth > 1 &&
					(n.wireframeLinewidth = this.wireframeLinewidth),
				'round' !== this.wireframeLinecap &&
					(n.wireframeLinecap = this.wireframeLinecap),
				'round' !== this.wireframeLinejoin &&
					(n.wireframeLinejoin = this.wireframeLinejoin),
				!0 === this.morphTargets && (n.morphTargets = !0),
				!0 === this.morphNormals && (n.morphNormals = !0),
				!0 === this.skinning && (n.skinning = !0),
				!1 === this.visible && (n.visible = !1),
				!1 === this.toneMapped && (n.toneMapped = !1),
				'{}' !== JSON.stringify(this.userData) && (n.userData = this.userData),
				e)
			) {
				var i = r(t.textures),
					a = r(t.images);
				i.length > 0 && (n.textures = i), a.length > 0 && (n.images = a);
			}
			return n;
		},
		clone: function () {
			return new this.constructor().copy(this);
		},
		copy: function (t) {
			(this.name = t.name),
				(this.fog = t.fog),
				(this.blending = t.blending),
				(this.side = t.side),
				(this.flatShading = t.flatShading),
				(this.vertexColors = t.vertexColors),
				(this.opacity = t.opacity),
				(this.transparent = t.transparent),
				(this.blendSrc = t.blendSrc),
				(this.blendDst = t.blendDst),
				(this.blendEquation = t.blendEquation),
				(this.blendSrcAlpha = t.blendSrcAlpha),
				(this.blendDstAlpha = t.blendDstAlpha),
				(this.blendEquationAlpha = t.blendEquationAlpha),
				(this.depthFunc = t.depthFunc),
				(this.depthTest = t.depthTest),
				(this.depthWrite = t.depthWrite),
				(this.stencilWriteMask = t.stencilWriteMask),
				(this.stencilFunc = t.stencilFunc),
				(this.stencilRef = t.stencilRef),
				(this.stencilFuncMask = t.stencilFuncMask),
				(this.stencilFail = t.stencilFail),
				(this.stencilZFail = t.stencilZFail),
				(this.stencilZPass = t.stencilZPass),
				(this.stencilWrite = t.stencilWrite);
			var e = t.clippingPlanes,
				n = null;
			if (null !== e) {
				var r = e.length;
				n = new Array(r);
				for (var i = 0; i !== r; ++i) n[i] = e[i].clone();
			}
			return (
				(this.clippingPlanes = n),
				(this.clipIntersection = t.clipIntersection),
				(this.clipShadows = t.clipShadows),
				(this.shadowSide = t.shadowSide),
				(this.colorWrite = t.colorWrite),
				(this.precision = t.precision),
				(this.polygonOffset = t.polygonOffset),
				(this.polygonOffsetFactor = t.polygonOffsetFactor),
				(this.polygonOffsetUnits = t.polygonOffsetUnits),
				(this.dithering = t.dithering),
				(this.alphaTest = t.alphaTest),
				(this.premultipliedAlpha = t.premultipliedAlpha),
				(this.visible = t.visible),
				(this.toneMapped = t.toneMapped),
				(this.userData = JSON.parse(JSON.stringify(t.userData))),
				this
			);
		},
		dispose: function () {
			this.dispatchEvent({ type: 'dispose' });
		},
	})),
		Object.defineProperty(qe.prototype, 'needsUpdate', {
			set: function (t) {
				!0 === t && this.version++;
			},
		}),
		(Xe.prototype = Object.create(qe.prototype)),
		(Xe.prototype.constructor = Xe),
		(Xe.prototype.isMeshBasicMaterial = !0),
		(Xe.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				this.color.copy(t.color),
				(this.map = t.map),
				(this.lightMap = t.lightMap),
				(this.lightMapIntensity = t.lightMapIntensity),
				(this.aoMap = t.aoMap),
				(this.aoMapIntensity = t.aoMapIntensity),
				(this.specularMap = t.specularMap),
				(this.alphaMap = t.alphaMap),
				(this.envMap = t.envMap),
				(this.combine = t.combine),
				(this.reflectivity = t.reflectivity),
				(this.refractionRatio = t.refractionRatio),
				(this.wireframe = t.wireframe),
				(this.wireframeLinewidth = t.wireframeLinewidth),
				(this.wireframeLinecap = t.wireframeLinecap),
				(this.wireframeLinejoin = t.wireframeLinejoin),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				this
			);
		});
	var Ye = new wt(),
		Ze = new pt();
	function Je(t, e, n) {
		if (Array.isArray(t))
			throw new TypeError(
				'THREE.BufferAttribute: array should be a Typed Array.'
			);
		(this.name = ''),
			(this.array = t),
			(this.itemSize = e),
			(this.count = void 0 !== t ? t.length / e : 0),
			(this.normalized = !0 === n),
			(this.usage = tt),
			(this.updateRange = { offset: 0, count: -1 }),
			(this.version = 0);
	}
	function Qe(t, e, n) {
		Je.call(this, new Int8Array(t), e, n);
	}
	function Ke(t, e, n) {
		Je.call(this, new Uint8Array(t), e, n);
	}
	function $e(t, e, n) {
		Je.call(this, new Uint8ClampedArray(t), e, n);
	}
	function tn(t, e, n) {
		Je.call(this, new Int16Array(t), e, n);
	}
	function en(t, e, n) {
		Je.call(this, new Uint16Array(t), e, n);
	}
	function nn(t, e, n) {
		Je.call(this, new Int32Array(t), e, n);
	}
	function rn(t, e, n) {
		Je.call(this, new Uint32Array(t), e, n);
	}
	function an(t, e, n) {
		Je.call(this, new Float32Array(t), e, n);
	}
	function on(t, e, n) {
		Je.call(this, new Float64Array(t), e, n);
	}
	Object.defineProperty(Je.prototype, 'needsUpdate', {
		set: function (t) {
			!0 === t && this.version++;
		},
	}),
		Object.assign(Je.prototype, {
			isBufferAttribute: !0,
			onUploadCallback: function () {},
			setUsage: function (t) {
				return (this.usage = t), this;
			},
			copy: function (t) {
				return (
					(this.name = t.name),
					(this.array = new t.array.constructor(t.array)),
					(this.itemSize = t.itemSize),
					(this.count = t.count),
					(this.normalized = t.normalized),
					(this.usage = t.usage),
					this
				);
			},
			copyAt: function (t, e, n) {
				(t *= this.itemSize), (n *= e.itemSize);
				for (var r = 0, i = this.itemSize; r < i; r++)
					this.array[t + r] = e.array[n + r];
				return this;
			},
			copyArray: function (t) {
				return this.array.set(t), this;
			},
			copyColorsArray: function (t) {
				for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
					var a = t[r];
					void 0 === a &&
						(console.warn(
							'THREE.BufferAttribute.copyColorsArray(): color is undefined',
							r
						),
						(a = new Ve())),
						(e[n++] = a.r),
						(e[n++] = a.g),
						(e[n++] = a.b);
				}
				return this;
			},
			copyVector2sArray: function (t) {
				for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
					var a = t[r];
					void 0 === a &&
						(console.warn(
							'THREE.BufferAttribute.copyVector2sArray(): vector is undefined',
							r
						),
						(a = new pt())),
						(e[n++] = a.x),
						(e[n++] = a.y);
				}
				return this;
			},
			copyVector3sArray: function (t) {
				for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
					var a = t[r];
					void 0 === a &&
						(console.warn(
							'THREE.BufferAttribute.copyVector3sArray(): vector is undefined',
							r
						),
						(a = new wt())),
						(e[n++] = a.x),
						(e[n++] = a.y),
						(e[n++] = a.z);
				}
				return this;
			},
			copyVector4sArray: function (t) {
				for (var e = this.array, n = 0, r = 0, i = t.length; r < i; r++) {
					var a = t[r];
					void 0 === a &&
						(console.warn(
							'THREE.BufferAttribute.copyVector4sArray(): vector is undefined',
							r
						),
						(a = new yt())),
						(e[n++] = a.x),
						(e[n++] = a.y),
						(e[n++] = a.z),
						(e[n++] = a.w);
				}
				return this;
			},
			applyMatrix3: function (t) {
				if (2 === this.itemSize)
					for (var e = 0, n = this.count; e < n; e++)
						Ze.fromBufferAttribute(this, e),
							Ze.applyMatrix3(t),
							this.setXY(e, Ze.x, Ze.y);
				else if (3 === this.itemSize)
					for (var r = 0, i = this.count; r < i; r++)
						Ye.fromBufferAttribute(this, r),
							Ye.applyMatrix3(t),
							this.setXYZ(r, Ye.x, Ye.y, Ye.z);
				return this;
			},
			applyMatrix4: function (t) {
				for (var e = 0, n = this.count; e < n; e++)
					(Ye.x = this.getX(e)),
						(Ye.y = this.getY(e)),
						(Ye.z = this.getZ(e)),
						Ye.applyMatrix4(t),
						this.setXYZ(e, Ye.x, Ye.y, Ye.z);
				return this;
			},
			applyNormalMatrix: function (t) {
				for (var e = 0, n = this.count; e < n; e++)
					(Ye.x = this.getX(e)),
						(Ye.y = this.getY(e)),
						(Ye.z = this.getZ(e)),
						Ye.applyNormalMatrix(t),
						this.setXYZ(e, Ye.x, Ye.y, Ye.z);
				return this;
			},
			transformDirection: function (t) {
				for (var e = 0, n = this.count; e < n; e++)
					(Ye.x = this.getX(e)),
						(Ye.y = this.getY(e)),
						(Ye.z = this.getZ(e)),
						Ye.transformDirection(t),
						this.setXYZ(e, Ye.x, Ye.y, Ye.z);
				return this;
			},
			set: function (t, e) {
				return void 0 === e && (e = 0), this.array.set(t, e), this;
			},
			getX: function (t) {
				return this.array[t * this.itemSize];
			},
			setX: function (t, e) {
				return (this.array[t * this.itemSize] = e), this;
			},
			getY: function (t) {
				return this.array[t * this.itemSize + 1];
			},
			setY: function (t, e) {
				return (this.array[t * this.itemSize + 1] = e), this;
			},
			getZ: function (t) {
				return this.array[t * this.itemSize + 2];
			},
			setZ: function (t, e) {
				return (this.array[t * this.itemSize + 2] = e), this;
			},
			getW: function (t) {
				return this.array[t * this.itemSize + 3];
			},
			setW: function (t, e) {
				return (this.array[t * this.itemSize + 3] = e), this;
			},
			setXY: function (t, e, n) {
				return (
					(t *= this.itemSize),
					(this.array[t + 0] = e),
					(this.array[t + 1] = n),
					this
				);
			},
			setXYZ: function (t, e, n, r) {
				return (
					(t *= this.itemSize),
					(this.array[t + 0] = e),
					(this.array[t + 1] = n),
					(this.array[t + 2] = r),
					this
				);
			},
			setXYZW: function (t, e, n, r, i) {
				return (
					(t *= this.itemSize),
					(this.array[t + 0] = e),
					(this.array[t + 1] = n),
					(this.array[t + 2] = r),
					(this.array[t + 3] = i),
					this
				);
			},
			onUpload: function (t) {
				return (this.onUploadCallback = t), this;
			},
			clone: function () {
				return new this.constructor(this.array, this.itemSize).copy(this);
			},
			toJSON: function () {
				return {
					itemSize: this.itemSize,
					type: this.array.constructor.name,
					array: Array.prototype.slice.call(this.array),
					normalized: this.normalized,
				};
			},
		}),
		(Qe.prototype = Object.create(Je.prototype)),
		(Qe.prototype.constructor = Qe),
		(Ke.prototype = Object.create(Je.prototype)),
		(Ke.prototype.constructor = Ke),
		($e.prototype = Object.create(Je.prototype)),
		($e.prototype.constructor = $e),
		(tn.prototype = Object.create(Je.prototype)),
		(tn.prototype.constructor = tn),
		(en.prototype = Object.create(Je.prototype)),
		(en.prototype.constructor = en),
		(nn.prototype = Object.create(Je.prototype)),
		(nn.prototype.constructor = nn),
		(rn.prototype = Object.create(Je.prototype)),
		(rn.prototype.constructor = rn),
		(an.prototype = Object.create(Je.prototype)),
		(an.prototype.constructor = an),
		(on.prototype = Object.create(Je.prototype)),
		(on.prototype.constructor = on);
	var sn = (function () {
		function t() {
			(this.vertices = []),
				(this.normals = []),
				(this.colors = []),
				(this.uvs = []),
				(this.uvs2 = []),
				(this.groups = []),
				(this.morphTargets = {}),
				(this.skinWeights = []),
				(this.skinIndices = []),
				(this.boundingBox = null),
				(this.boundingSphere = null),
				(this.verticesNeedUpdate = !1),
				(this.normalsNeedUpdate = !1),
				(this.colorsNeedUpdate = !1),
				(this.uvsNeedUpdate = !1),
				(this.groupsNeedUpdate = !1);
		}
		var e = t.prototype;
		return (
			(e.computeGroups = function (t) {
				var e,
					n,
					r = [],
					i = void 0,
					a = t.faces;
				for (n = 0; n < a.length; n++) {
					var o = a[n];
					o.materialIndex !== i &&
						((i = o.materialIndex),
						void 0 !== e && ((e.count = 3 * n - e.start), r.push(e)),
						(e = { start: 3 * n, materialIndex: i }));
				}
				void 0 !== e && ((e.count = 3 * n - e.start), r.push(e)),
					(this.groups = r);
			}),
			(e.fromGeometry = function (t) {
				var e,
					n = t.faces,
					r = t.vertices,
					i = t.faceVertexUvs,
					a = i[0] && i[0].length > 0,
					o = i[1] && i[1].length > 0,
					s = t.morphTargets,
					c = s.length;
				if (c > 0) {
					e = [];
					for (var l = 0; l < c; l++) e[l] = { name: s[l].name, data: [] };
					this.morphTargets.position = e;
				}
				var u,
					h = t.morphNormals,
					d = h.length;
				if (d > 0) {
					u = [];
					for (var p = 0; p < d; p++) u[p] = { name: h[p].name, data: [] };
					this.morphTargets.normal = u;
				}
				var f = t.skinIndices,
					m = t.skinWeights,
					v = f.length === r.length,
					g = m.length === r.length;
				r.length > 0 &&
					0 === n.length &&
					console.error(
						'THREE.DirectGeometry: Faceless geometries are not supported.'
					);
				for (var y = 0; y < n.length; y++) {
					var x = n[y];
					this.vertices.push(r[x.a], r[x.b], r[x.c]);
					var _ = x.vertexNormals;
					if (3 === _.length) this.normals.push(_[0], _[1], _[2]);
					else {
						var b = x.normal;
						this.normals.push(b, b, b);
					}
					var w = x.vertexColors;
					if (3 === w.length) this.colors.push(w[0], w[1], w[2]);
					else {
						var M = x.color;
						this.colors.push(M, M, M);
					}
					if (!0 === a) {
						var S = i[0][y];
						void 0 !== S
							? this.uvs.push(S[0], S[1], S[2])
							: (console.warn(
									'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ',
									y
							  ),
							  this.uvs.push(new pt(), new pt(), new pt()));
					}
					if (!0 === o) {
						var T = i[1][y];
						void 0 !== T
							? this.uvs2.push(T[0], T[1], T[2])
							: (console.warn(
									'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ',
									y
							  ),
							  this.uvs2.push(new pt(), new pt(), new pt()));
					}
					for (var E = 0; E < c; E++) {
						var A = s[E].vertices;
						e[E].data.push(A[x.a], A[x.b], A[x.c]);
					}
					for (var L = 0; L < d; L++) {
						var R = h[L].vertexNormals[y];
						u[L].data.push(R.a, R.b, R.c);
					}
					v && this.skinIndices.push(f[x.a], f[x.b], f[x.c]),
						g && this.skinWeights.push(m[x.a], m[x.b], m[x.c]);
				}
				return (
					this.computeGroups(t),
					(this.verticesNeedUpdate = t.verticesNeedUpdate),
					(this.normalsNeedUpdate = t.normalsNeedUpdate),
					(this.colorsNeedUpdate = t.colorsNeedUpdate),
					(this.uvsNeedUpdate = t.uvsNeedUpdate),
					(this.groupsNeedUpdate = t.groupsNeedUpdate),
					null !== t.boundingSphere &&
						(this.boundingSphere = t.boundingSphere.clone()),
					null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
					this
				);
			}),
			t
		);
	})();
	function cn(t) {
		if (0 === t.length) return -1 / 0;
		for (var e = t[0], n = 1, r = t.length; n < r; ++n) t[n] > e && (e = t[n]);
		return e;
	}
	var ln = 1,
		un = new Jt(),
		hn = new be(),
		dn = new wt(),
		pn = new Tt(),
		fn = new Tt(),
		mn = new wt();
	function vn() {
		Object.defineProperty(this, 'id', { value: (ln += 2) }),
			(this.uuid = st.generateUUID()),
			(this.name = ''),
			(this.type = 'BufferGeometry'),
			(this.index = null),
			(this.attributes = {}),
			(this.morphAttributes = {}),
			(this.morphTargetsRelative = !1),
			(this.groups = []),
			(this.boundingBox = null),
			(this.boundingSphere = null),
			(this.drawRange = { start: 0, count: 1 / 0 }),
			(this.userData = {});
	}
	vn.prototype = Object.assign(Object.create(rt.prototype), {
		constructor: vn,
		isBufferGeometry: !0,
		getIndex: function () {
			return this.index;
		},
		setIndex: function (t) {
			return (
				Array.isArray(t)
					? (this.index = new (cn(t) > 65535 ? rn : en)(t, 1))
					: (this.index = t),
				this
			);
		},
		getAttribute: function (t) {
			return this.attributes[t];
		},
		setAttribute: function (t, e) {
			return (this.attributes[t] = e), this;
		},
		deleteAttribute: function (t) {
			return delete this.attributes[t], this;
		},
		addGroup: function (t, e, n) {
			this.groups.push({
				start: t,
				count: e,
				materialIndex: void 0 !== n ? n : 0,
			});
		},
		clearGroups: function () {
			this.groups = [];
		},
		setDrawRange: function (t, e) {
			(this.drawRange.start = t), (this.drawRange.count = e);
		},
		applyMatrix4: function (t) {
			var e = this.attributes.position;
			void 0 !== e && (e.applyMatrix4(t), (e.needsUpdate = !0));
			var n = this.attributes.normal;
			if (void 0 !== n) {
				var r = new ft().getNormalMatrix(t);
				n.applyNormalMatrix(r), (n.needsUpdate = !0);
			}
			var i = this.attributes.tangent;
			return (
				void 0 !== i && (i.transformDirection(t), (i.needsUpdate = !0)),
				null !== this.boundingBox && this.computeBoundingBox(),
				null !== this.boundingSphere && this.computeBoundingSphere(),
				this
			);
		},
		rotateX: function (t) {
			return un.makeRotationX(t), this.applyMatrix4(un), this;
		},
		rotateY: function (t) {
			return un.makeRotationY(t), this.applyMatrix4(un), this;
		},
		rotateZ: function (t) {
			return un.makeRotationZ(t), this.applyMatrix4(un), this;
		},
		translate: function (t, e, n) {
			return un.makeTranslation(t, e, n), this.applyMatrix4(un), this;
		},
		scale: function (t, e, n) {
			return un.makeScale(t, e, n), this.applyMatrix4(un), this;
		},
		lookAt: function (t) {
			return (
				hn.lookAt(t), hn.updateMatrix(), this.applyMatrix4(hn.matrix), this
			);
		},
		center: function () {
			return (
				this.computeBoundingBox(),
				this.boundingBox.getCenter(dn).negate(),
				this.translate(dn.x, dn.y, dn.z),
				this
			);
		},
		setFromObject: function (t) {
			var e = t.geometry;
			if (t.isPoints || t.isLine) {
				var n = new an(3 * e.vertices.length, 3),
					r = new an(3 * e.colors.length, 3);
				if (
					(this.setAttribute('position', n.copyVector3sArray(e.vertices)),
					this.setAttribute('color', r.copyColorsArray(e.colors)),
					e.lineDistances && e.lineDistances.length === e.vertices.length)
				) {
					var i = new an(e.lineDistances.length, 1);
					this.setAttribute('lineDistance', i.copyArray(e.lineDistances));
				}
				null !== e.boundingSphere &&
					(this.boundingSphere = e.boundingSphere.clone()),
					null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone());
			} else t.isMesh && e && e.isGeometry && this.fromGeometry(e);
			return this;
		},
		setFromPoints: function (t) {
			for (var e = [], n = 0, r = t.length; n < r; n++) {
				var i = t[n];
				e.push(i.x, i.y, i.z || 0);
			}
			return this.setAttribute('position', new an(e, 3)), this;
		},
		updateFromObject: function (t) {
			var e = t.geometry;
			if (t.isMesh) {
				var n = e.__directGeometry;
				if (
					(!0 === e.elementsNeedUpdate &&
						((n = void 0), (e.elementsNeedUpdate = !1)),
					void 0 === n)
				)
					return this.fromGeometry(e);
				(n.verticesNeedUpdate = e.verticesNeedUpdate),
					(n.normalsNeedUpdate = e.normalsNeedUpdate),
					(n.colorsNeedUpdate = e.colorsNeedUpdate),
					(n.uvsNeedUpdate = e.uvsNeedUpdate),
					(n.groupsNeedUpdate = e.groupsNeedUpdate),
					(e.verticesNeedUpdate = !1),
					(e.normalsNeedUpdate = !1),
					(e.colorsNeedUpdate = !1),
					(e.uvsNeedUpdate = !1),
					(e.groupsNeedUpdate = !1),
					(e = n);
			}
			if (!0 === e.verticesNeedUpdate) {
				var r = this.attributes.position;
				void 0 !== r && (r.copyVector3sArray(e.vertices), (r.needsUpdate = !0)),
					(e.verticesNeedUpdate = !1);
			}
			if (!0 === e.normalsNeedUpdate) {
				var i = this.attributes.normal;
				void 0 !== i && (i.copyVector3sArray(e.normals), (i.needsUpdate = !0)),
					(e.normalsNeedUpdate = !1);
			}
			if (!0 === e.colorsNeedUpdate) {
				var a = this.attributes.color;
				void 0 !== a && (a.copyColorsArray(e.colors), (a.needsUpdate = !0)),
					(e.colorsNeedUpdate = !1);
			}
			if (e.uvsNeedUpdate) {
				var o = this.attributes.uv;
				void 0 !== o && (o.copyVector2sArray(e.uvs), (o.needsUpdate = !0)),
					(e.uvsNeedUpdate = !1);
			}
			if (e.lineDistancesNeedUpdate) {
				var s = this.attributes.lineDistance;
				void 0 !== s && (s.copyArray(e.lineDistances), (s.needsUpdate = !0)),
					(e.lineDistancesNeedUpdate = !1);
			}
			return (
				e.groupsNeedUpdate &&
					(e.computeGroups(t.geometry),
					(this.groups = e.groups),
					(e.groupsNeedUpdate = !1)),
				this
			);
		},
		fromGeometry: function (t) {
			return (
				(t.__directGeometry = new sn().fromGeometry(t)),
				this.fromDirectGeometry(t.__directGeometry)
			);
		},
		fromDirectGeometry: function (t) {
			var e = new Float32Array(3 * t.vertices.length);
			if (
				(this.setAttribute(
					'position',
					new Je(e, 3).copyVector3sArray(t.vertices)
				),
				t.normals.length > 0)
			) {
				var n = new Float32Array(3 * t.normals.length);
				this.setAttribute('normal', new Je(n, 3).copyVector3sArray(t.normals));
			}
			if (t.colors.length > 0) {
				var r = new Float32Array(3 * t.colors.length);
				this.setAttribute('color', new Je(r, 3).copyColorsArray(t.colors));
			}
			if (t.uvs.length > 0) {
				var i = new Float32Array(2 * t.uvs.length);
				this.setAttribute('uv', new Je(i, 2).copyVector2sArray(t.uvs));
			}
			if (t.uvs2.length > 0) {
				var a = new Float32Array(2 * t.uvs2.length);
				this.setAttribute('uv2', new Je(a, 2).copyVector2sArray(t.uvs2));
			}
			for (var o in ((this.groups = t.groups), t.morphTargets)) {
				for (
					var s = [], c = t.morphTargets[o], l = 0, u = c.length;
					l < u;
					l++
				) {
					var h = c[l],
						d = new an(3 * h.data.length, 3);
					(d.name = h.name), s.push(d.copyVector3sArray(h.data));
				}
				this.morphAttributes[o] = s;
			}
			if (t.skinIndices.length > 0) {
				var p = new an(4 * t.skinIndices.length, 4);
				this.setAttribute('skinIndex', p.copyVector4sArray(t.skinIndices));
			}
			if (t.skinWeights.length > 0) {
				var f = new an(4 * t.skinWeights.length, 4);
				this.setAttribute('skinWeight', f.copyVector4sArray(t.skinWeights));
			}
			return (
				null !== t.boundingSphere &&
					(this.boundingSphere = t.boundingSphere.clone()),
				null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
				this
			);
		},
		computeBoundingBox: function () {
			null === this.boundingBox && (this.boundingBox = new Tt());
			var t = this.attributes.position,
				e = this.morphAttributes.position;
			if (t && t.isGLBufferAttribute)
				return (
					console.error(
						'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',
						this
					),
					void this.boundingBox.set(
						new wt(-1 / 0, -1 / 0, -1 / 0),
						new wt(1 / 0, 1 / 0, 1 / 0)
					)
				);
			if (void 0 !== t) {
				if ((this.boundingBox.setFromBufferAttribute(t), e))
					for (var n = 0, r = e.length; n < r; n++) {
						var i = e[n];
						pn.setFromBufferAttribute(i),
							this.morphTargetsRelative
								? (mn.addVectors(this.boundingBox.min, pn.min),
								  this.boundingBox.expandByPoint(mn),
								  mn.addVectors(this.boundingBox.max, pn.max),
								  this.boundingBox.expandByPoint(mn))
								: (this.boundingBox.expandByPoint(pn.min),
								  this.boundingBox.expandByPoint(pn.max));
					}
			} else this.boundingBox.makeEmpty();
			(isNaN(this.boundingBox.min.x) ||
				isNaN(this.boundingBox.min.y) ||
				isNaN(this.boundingBox.min.z)) &&
				console.error(
					'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
					this
				);
		},
		computeBoundingSphere: function () {
			null === this.boundingSphere && (this.boundingSphere = new Ht());
			var t = this.attributes.position,
				e = this.morphAttributes.position;
			if (t && t.isGLBufferAttribute)
				return (
					console.error(
						'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',
						this
					),
					void this.boundingSphere.set(new wt(), 1 / 0)
				);
			if (t) {
				var n = this.boundingSphere.center;
				if ((pn.setFromBufferAttribute(t), e))
					for (var r = 0, i = e.length; r < i; r++) {
						var a = e[r];
						fn.setFromBufferAttribute(a),
							this.morphTargetsRelative
								? (mn.addVectors(pn.min, fn.min),
								  pn.expandByPoint(mn),
								  mn.addVectors(pn.max, fn.max),
								  pn.expandByPoint(mn))
								: (pn.expandByPoint(fn.min), pn.expandByPoint(fn.max));
					}
				pn.getCenter(n);
				for (var o = 0, s = 0, c = t.count; s < c; s++)
					mn.fromBufferAttribute(t, s),
						(o = Math.max(o, n.distanceToSquared(mn)));
				if (e)
					for (var l = 0, u = e.length; l < u; l++)
						for (
							var h = e[l], d = this.morphTargetsRelative, p = 0, f = h.count;
							p < f;
							p++
						)
							mn.fromBufferAttribute(h, p),
								d && (dn.fromBufferAttribute(t, p), mn.add(dn)),
								(o = Math.max(o, n.distanceToSquared(mn)));
				(this.boundingSphere.radius = Math.sqrt(o)),
					isNaN(this.boundingSphere.radius) &&
						console.error(
							'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
							this
						);
			}
		},
		computeFaceNormals: function () {},
		computeVertexNormals: function () {
			var t = this.index,
				e = this.getAttribute('position');
			if (void 0 !== e) {
				var n = this.getAttribute('normal');
				if (void 0 === n)
					(n = new Je(new Float32Array(3 * e.count), 3)),
						this.setAttribute('normal', n);
				else for (var r = 0, i = n.count; r < i; r++) n.setXYZ(r, 0, 0, 0);
				var a = new wt(),
					o = new wt(),
					s = new wt(),
					c = new wt(),
					l = new wt(),
					u = new wt(),
					h = new wt(),
					d = new wt();
				if (t)
					for (var p = 0, f = t.count; p < f; p += 3) {
						var m = t.getX(p + 0),
							v = t.getX(p + 1),
							g = t.getX(p + 2);
						a.fromBufferAttribute(e, m),
							o.fromBufferAttribute(e, v),
							s.fromBufferAttribute(e, g),
							h.subVectors(s, o),
							d.subVectors(a, o),
							h.cross(d),
							c.fromBufferAttribute(n, m),
							l.fromBufferAttribute(n, v),
							u.fromBufferAttribute(n, g),
							c.add(h),
							l.add(h),
							u.add(h),
							n.setXYZ(m, c.x, c.y, c.z),
							n.setXYZ(v, l.x, l.y, l.z),
							n.setXYZ(g, u.x, u.y, u.z);
					}
				else
					for (var y = 0, x = e.count; y < x; y += 3)
						a.fromBufferAttribute(e, y + 0),
							o.fromBufferAttribute(e, y + 1),
							s.fromBufferAttribute(e, y + 2),
							h.subVectors(s, o),
							d.subVectors(a, o),
							h.cross(d),
							n.setXYZ(y + 0, h.x, h.y, h.z),
							n.setXYZ(y + 1, h.x, h.y, h.z),
							n.setXYZ(y + 2, h.x, h.y, h.z);
				this.normalizeNormals(), (n.needsUpdate = !0);
			}
		},
		merge: function (t, e) {
			if (t && t.isBufferGeometry) {
				void 0 === e &&
					((e = 0),
					console.warn(
						'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'
					));
				var n = this.attributes;
				for (var r in n)
					if (void 0 !== t.attributes[r])
						for (
							var i = n[r].array,
								a = t.attributes[r],
								o = a.array,
								s = a.itemSize * e,
								c = Math.min(o.length, i.length - s),
								l = 0,
								u = s;
							l < c;
							l++, u++
						)
							i[u] = o[l];
				return this;
			}
			console.error(
				'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',
				t
			);
		},
		normalizeNormals: function () {
			for (var t = this.attributes.normal, e = 0, n = t.count; e < n; e++)
				mn.fromBufferAttribute(t, e),
					mn.normalize(),
					t.setXYZ(e, mn.x, mn.y, mn.z);
		},
		toNonIndexed: function () {
			function t(t, e) {
				for (
					var n = t.array,
						r = t.itemSize,
						i = t.normalized,
						a = new n.constructor(e.length * r),
						o = 0,
						s = 0,
						c = 0,
						l = e.length;
					c < l;
					c++
				) {
					o = e[c] * r;
					for (var u = 0; u < r; u++) a[s++] = n[o++];
				}
				return new Je(a, r, i);
			}
			if (null === this.index)
				return (
					console.warn(
						'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.'
					),
					this
				);
			var e = new vn(),
				n = this.index.array,
				r = this.attributes;
			for (var i in r) {
				var a = t(r[i], n);
				e.setAttribute(i, a);
			}
			var o = this.morphAttributes;
			for (var s in o) {
				for (var c = [], l = o[s], u = 0, h = l.length; u < h; u++) {
					var d = t(l[u], n);
					c.push(d);
				}
				e.morphAttributes[s] = c;
			}
			e.morphTargetsRelative = this.morphTargetsRelative;
			for (var p = this.groups, f = 0, m = p.length; f < m; f++) {
				var v = p[f];
				e.addGroup(v.start, v.count, v.materialIndex);
			}
			return e;
		},
		toJSON: function () {
			var t = {
				metadata: {
					version: 4.5,
					type: 'BufferGeometry',
					generator: 'BufferGeometry.toJSON',
				},
			};
			if (
				((t.uuid = this.uuid),
				(t.type = this.type),
				'' !== this.name && (t.name = this.name),
				Object.keys(this.userData).length > 0 && (t.userData = this.userData),
				void 0 !== this.parameters)
			) {
				var e = this.parameters;
				for (var n in e) void 0 !== e[n] && (t[n] = e[n]);
				return t;
			}
			t.data = { attributes: {} };
			var r = this.index;
			null !== r &&
				(t.data.index = {
					type: r.array.constructor.name,
					array: Array.prototype.slice.call(r.array),
				});
			var i = this.attributes;
			for (var a in i) {
				var o = i[a],
					s = o.toJSON(t.data);
				'' !== o.name && (s.name = o.name), (t.data.attributes[a] = s);
			}
			var c = {},
				l = !1;
			for (var u in this.morphAttributes) {
				for (
					var h = this.morphAttributes[u], d = [], p = 0, f = h.length;
					p < f;
					p++
				) {
					var m = h[p],
						v = m.toJSON(t.data);
					'' !== m.name && (v.name = m.name), d.push(v);
				}
				d.length > 0 && ((c[u] = d), (l = !0));
			}
			l &&
				((t.data.morphAttributes = c),
				(t.data.morphTargetsRelative = this.morphTargetsRelative));
			var g = this.groups;
			g.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(g)));
			var y = this.boundingSphere;
			return (
				null !== y &&
					(t.data.boundingSphere = {
						center: y.center.toArray(),
						radius: y.radius,
					}),
				t
			);
		},
		clone: function () {
			return new vn().copy(this);
		},
		copy: function (t) {
			(this.index = null),
				(this.attributes = {}),
				(this.morphAttributes = {}),
				(this.groups = []),
				(this.boundingBox = null),
				(this.boundingSphere = null);
			var e = {};
			this.name = t.name;
			var n = t.index;
			null !== n && this.setIndex(n.clone(e));
			var r = t.attributes;
			for (var i in r) {
				var a = r[i];
				this.setAttribute(i, a.clone(e));
			}
			var o = t.morphAttributes;
			for (var s in o) {
				for (var c = [], l = o[s], u = 0, h = l.length; u < h; u++)
					c.push(l[u].clone(e));
				this.morphAttributes[s] = c;
			}
			this.morphTargetsRelative = t.morphTargetsRelative;
			for (var d = t.groups, p = 0, f = d.length; p < f; p++) {
				var m = d[p];
				this.addGroup(m.start, m.count, m.materialIndex);
			}
			var v = t.boundingBox;
			null !== v && (this.boundingBox = v.clone());
			var g = t.boundingSphere;
			return (
				null !== g && (this.boundingSphere = g.clone()),
				(this.drawRange.start = t.drawRange.start),
				(this.drawRange.count = t.drawRange.count),
				(this.userData = t.userData),
				this
			);
		},
		dispose: function () {
			this.dispatchEvent({ type: 'dispose' });
		},
	});
	var gn = new Jt(),
		yn = new Zt(),
		xn = new Ht(),
		_n = new wt(),
		bn = new wt(),
		wn = new wt(),
		Mn = new wt(),
		Sn = new wt(),
		Tn = new wt(),
		En = new wt(),
		An = new wt(),
		Ln = new wt(),
		Rn = new pt(),
		Cn = new pt(),
		Pn = new pt(),
		In = new wt(),
		Dn = new wt();
	function Nn(t, e) {
		be.call(this),
			(this.type = 'Mesh'),
			(this.geometry = void 0 !== t ? t : new vn()),
			(this.material = void 0 !== e ? e : new Xe()),
			this.updateMorphTargets();
	}
	function On(t, e, n, r, i, a, o, s) {
		if (
			null ===
			(1 === e.side
				? r.intersectTriangle(o, a, i, !0, s)
				: r.intersectTriangle(i, a, o, 2 !== e.side, s))
		)
			return null;
		Dn.copy(s), Dn.applyMatrix4(t.matrixWorld);
		var c = n.ray.origin.distanceTo(Dn);
		return c < n.near || c > n.far
			? null
			: { distance: c, point: Dn.clone(), object: t };
	}
	function Bn(t, e, n, r, i, a, o, s, c, l, u, h) {
		_n.fromBufferAttribute(i, l),
			bn.fromBufferAttribute(i, u),
			wn.fromBufferAttribute(i, h);
		var d = t.morphTargetInfluences;
		if (e.morphTargets && a && d) {
			En.set(0, 0, 0), An.set(0, 0, 0), Ln.set(0, 0, 0);
			for (var p = 0, f = a.length; p < f; p++) {
				var m = d[p],
					v = a[p];
				0 !== m &&
					(Mn.fromBufferAttribute(v, l),
					Sn.fromBufferAttribute(v, u),
					Tn.fromBufferAttribute(v, h),
					o
						? (En.addScaledVector(Mn, m),
						  An.addScaledVector(Sn, m),
						  Ln.addScaledVector(Tn, m))
						: (En.addScaledVector(Mn.sub(_n), m),
						  An.addScaledVector(Sn.sub(bn), m),
						  Ln.addScaledVector(Tn.sub(wn), m)));
			}
			_n.add(En), bn.add(An), wn.add(Ln);
		}
		t.isSkinnedMesh &&
			(t.boneTransform(l, _n), t.boneTransform(u, bn), t.boneTransform(h, wn));
		var g = On(t, e, n, r, _n, bn, wn, In);
		if (g) {
			s &&
				(Rn.fromBufferAttribute(s, l),
				Cn.fromBufferAttribute(s, u),
				Pn.fromBufferAttribute(s, h),
				(g.uv = Be.getUV(In, _n, bn, wn, Rn, Cn, Pn, new pt()))),
				c &&
					(Rn.fromBufferAttribute(c, l),
					Cn.fromBufferAttribute(c, u),
					Pn.fromBufferAttribute(c, h),
					(g.uv2 = Be.getUV(In, _n, bn, wn, Rn, Cn, Pn, new pt())));
			var y = new We(l, u, h);
			Be.getNormal(_n, bn, wn, y.normal), (g.face = y);
		}
		return g;
	}
	Nn.prototype = Object.assign(Object.create(be.prototype), {
		constructor: Nn,
		isMesh: !0,
		copy: function (t) {
			return (
				be.prototype.copy.call(this, t),
				void 0 !== t.morphTargetInfluences &&
					(this.morphTargetInfluences = t.morphTargetInfluences.slice()),
				void 0 !== t.morphTargetDictionary &&
					(this.morphTargetDictionary = Object.assign(
						{},
						t.morphTargetDictionary
					)),
				(this.material = t.material),
				(this.geometry = t.geometry),
				this
			);
		},
		updateMorphTargets: function () {
			var t = this.geometry;
			if (t.isBufferGeometry) {
				var e = t.morphAttributes,
					n = Object.keys(e);
				if (n.length > 0) {
					var r = e[n[0]];
					if (void 0 !== r) {
						(this.morphTargetInfluences = []),
							(this.morphTargetDictionary = {});
						for (var i = 0, a = r.length; i < a; i++) {
							var o = r[i].name || String(i);
							this.morphTargetInfluences.push(0),
								(this.morphTargetDictionary[o] = i);
						}
					}
				}
			} else {
				var s = t.morphTargets;
				void 0 !== s &&
					s.length > 0 &&
					console.error(
						'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.'
					);
			}
		},
		raycast: function (t, e) {
			var n,
				r = this.geometry,
				i = this.material,
				a = this.matrixWorld;
			if (
				void 0 !== i &&
				(null === r.boundingSphere && r.computeBoundingSphere(),
				xn.copy(r.boundingSphere),
				xn.applyMatrix4(a),
				!1 !== t.ray.intersectsSphere(xn) &&
					(gn.getInverse(a),
					yn.copy(t.ray).applyMatrix4(gn),
					null === r.boundingBox || !1 !== yn.intersectsBox(r.boundingBox)))
			)
				if (r.isBufferGeometry) {
					var o = r.index,
						s = r.attributes.position,
						c = r.morphAttributes.position,
						l = r.morphTargetsRelative,
						u = r.attributes.uv,
						h = r.attributes.uv2,
						d = r.groups,
						p = r.drawRange;
					if (null !== o)
						if (Array.isArray(i))
							for (var f = 0, m = d.length; f < m; f++)
								for (
									var v = d[f],
										g = i[v.materialIndex],
										y = Math.max(v.start, p.start),
										x = Math.min(v.start + v.count, p.start + p.count);
									y < x;
									y += 3
								) {
									var _ = o.getX(y),
										b = o.getX(y + 1),
										w = o.getX(y + 2);
									(n = Bn(this, g, t, yn, s, c, l, u, h, _, b, w)) &&
										((n.faceIndex = Math.floor(y / 3)),
										(n.face.materialIndex = v.materialIndex),
										e.push(n));
								}
						else
							for (
								var M = Math.max(0, p.start),
									S = Math.min(o.count, p.start + p.count);
								M < S;
								M += 3
							) {
								var T = o.getX(M),
									E = o.getX(M + 1),
									A = o.getX(M + 2);
								(n = Bn(this, i, t, yn, s, c, l, u, h, T, E, A)) &&
									((n.faceIndex = Math.floor(M / 3)), e.push(n));
							}
					else if (void 0 !== s)
						if (Array.isArray(i))
							for (var L = 0, R = d.length; L < R; L++)
								for (
									var C = d[L],
										P = i[C.materialIndex],
										I = Math.max(C.start, p.start),
										D = Math.min(C.start + C.count, p.start + p.count);
									I < D;
									I += 3
								) {
									(n = Bn(this, P, t, yn, s, c, l, u, h, I, I + 1, I + 2)) &&
										((n.faceIndex = Math.floor(I / 3)),
										(n.face.materialIndex = C.materialIndex),
										e.push(n));
								}
						else
							for (
								var N = Math.max(0, p.start),
									O = Math.min(s.count, p.start + p.count);
								N < O;
								N += 3
							) {
								(n = Bn(this, i, t, yn, s, c, l, u, h, N, N + 1, N + 2)) &&
									((n.faceIndex = Math.floor(N / 3)), e.push(n));
							}
				} else if (r.isGeometry) {
					var B,
						z = Array.isArray(i),
						G = r.vertices,
						F = r.faces,
						U = r.faceVertexUvs[0];
					U.length > 0 && (B = U);
					for (var H = 0, k = F.length; H < k; H++) {
						var V = F[H],
							W = z ? i[V.materialIndex] : i;
						if (void 0 !== W) {
							var j = G[V.a],
								q = G[V.b],
								X = G[V.c];
							if ((n = On(this, W, t, yn, j, q, X, In))) {
								if (B && B[H]) {
									var Y = B[H];
									Rn.copy(Y[0]),
										Cn.copy(Y[1]),
										Pn.copy(Y[2]),
										(n.uv = Be.getUV(In, j, q, X, Rn, Cn, Pn, new pt()));
								}
								(n.face = V), (n.faceIndex = H), e.push(n);
							}
						}
					}
				}
		},
	});
	var zn = (function (t) {
		function e(e, n, r, i, a, o) {
			var s;
			void 0 === e && (e = 1),
				void 0 === n && (n = 1),
				void 0 === r && (r = 1),
				void 0 === i && (i = 1),
				void 0 === a && (a = 1),
				void 0 === o && (o = 1),
				((s = t.call(this) || this).type = 'BoxBufferGeometry'),
				(s.parameters = {
					width: e,
					height: n,
					depth: r,
					widthSegments: i,
					heightSegments: a,
					depthSegments: o,
				});
			var c = ht(s);
			(i = Math.floor(i)), (a = Math.floor(a)), (o = Math.floor(o));
			var l = [],
				u = [],
				h = [],
				d = [],
				p = 0,
				f = 0;
			function m(t, e, n, r, i, a, o, s, m, v, g) {
				for (
					var y = a / m,
						x = o / v,
						_ = a / 2,
						b = o / 2,
						w = s / 2,
						M = m + 1,
						S = v + 1,
						T = 0,
						E = 0,
						A = new wt(),
						L = 0;
					L < S;
					L++
				)
					for (var R = L * x - b, C = 0; C < M; C++) {
						var P = C * y - _;
						(A[t] = P * r),
							(A[e] = R * i),
							(A[n] = w),
							u.push(A.x, A.y, A.z),
							(A[t] = 0),
							(A[e] = 0),
							(A[n] = s > 0 ? 1 : -1),
							h.push(A.x, A.y, A.z),
							d.push(C / m),
							d.push(1 - L / v),
							(T += 1);
					}
				for (var I = 0; I < v; I++)
					for (var D = 0; D < m; D++) {
						var N = p + D + M * I,
							O = p + D + M * (I + 1),
							B = p + (D + 1) + M * (I + 1),
							z = p + (D + 1) + M * I;
						l.push(N, O, z), l.push(O, B, z), (E += 6);
					}
				c.addGroup(f, E, g), (f += E), (p += T);
			}
			return (
				m('z', 'y', 'x', -1, -1, r, n, e, o, a, 0),
				m('z', 'y', 'x', 1, -1, r, n, -e, o, a, 1),
				m('x', 'z', 'y', 1, 1, e, r, n, i, o, 2),
				m('x', 'z', 'y', 1, -1, e, r, -n, i, o, 3),
				m('x', 'y', 'z', 1, -1, e, n, r, i, a, 4),
				m('x', 'y', 'z', -1, -1, e, n, -r, i, a, 5),
				s.setIndex(l),
				s.setAttribute('position', new an(u, 3)),
				s.setAttribute('normal', new an(h, 3)),
				s.setAttribute('uv', new an(d, 2)),
				s
			);
		}
		return ut(e, t), e;
	})(vn);
	function Gn(t) {
		var e = {};
		for (var n in t)
			for (var r in ((e[n] = {}), t[n])) {
				var i = t[n][r];
				i &&
				(i.isColor ||
					i.isMatrix3 ||
					i.isMatrix4 ||
					i.isVector2 ||
					i.isVector3 ||
					i.isVector4 ||
					i.isTexture)
					? (e[n][r] = i.clone())
					: Array.isArray(i)
					? (e[n][r] = i.slice())
					: (e[n][r] = i);
			}
		return e;
	}
	function Fn(t) {
		for (var e = {}, n = 0; n < t.length; n++) {
			var r = Gn(t[n]);
			for (var i in r) e[i] = r[i];
		}
		return e;
	}
	var Un = { clone: Gn, merge: Fn };
	function Hn(t) {
		qe.call(this),
			(this.type = 'ShaderMaterial'),
			(this.defines = {}),
			(this.uniforms = {}),
			(this.vertexShader =
				'void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}'),
			(this.fragmentShader =
				'void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}'),
			(this.linewidth = 1),
			(this.wireframe = !1),
			(this.wireframeLinewidth = 1),
			(this.fog = !1),
			(this.lights = !1),
			(this.clipping = !1),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.morphNormals = !1),
			(this.extensions = {
				derivatives: !1,
				fragDepth: !1,
				drawBuffers: !1,
				shaderTextureLOD: !1,
			}),
			(this.defaultAttributeValues = {
				color: [1, 1, 1],
				uv: [0, 0],
				uv2: [0, 0],
			}),
			(this.index0AttributeName = void 0),
			(this.uniformsNeedUpdate = !1),
			(this.glslVersion = null),
			void 0 !== t &&
				(void 0 !== t.attributes &&
					console.error(
						'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.'
					),
				this.setValues(t));
	}
	function kn() {
		be.call(this),
			(this.type = 'Camera'),
			(this.matrixWorldInverse = new Jt()),
			(this.projectionMatrix = new Jt()),
			(this.projectionMatrixInverse = new Jt());
	}
	function Vn(t, e, n, r) {
		kn.call(this),
			(this.type = 'PerspectiveCamera'),
			(this.fov = void 0 !== t ? t : 50),
			(this.zoom = 1),
			(this.near = void 0 !== n ? n : 0.1),
			(this.far = void 0 !== r ? r : 2e3),
			(this.focus = 10),
			(this.aspect = void 0 !== e ? e : 1),
			(this.view = null),
			(this.filmGauge = 35),
			(this.filmOffset = 0),
			this.updateProjectionMatrix();
	}
	(Hn.prototype = Object.create(qe.prototype)),
		(Hn.prototype.constructor = Hn),
		(Hn.prototype.isShaderMaterial = !0),
		(Hn.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				(this.fragmentShader = t.fragmentShader),
				(this.vertexShader = t.vertexShader),
				(this.uniforms = Gn(t.uniforms)),
				(this.defines = Object.assign({}, t.defines)),
				(this.wireframe = t.wireframe),
				(this.wireframeLinewidth = t.wireframeLinewidth),
				(this.lights = t.lights),
				(this.clipping = t.clipping),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.morphNormals = t.morphNormals),
				(this.extensions = Object.assign({}, t.extensions)),
				(this.glslVersion = t.glslVersion),
				this
			);
		}),
		(Hn.prototype.toJSON = function (t) {
			var e = qe.prototype.toJSON.call(this, t);
			for (var n in ((e.glslVersion = this.glslVersion),
			(e.uniforms = {}),
			this.uniforms)) {
				var r = this.uniforms[n].value;
				r && r.isTexture
					? (e.uniforms[n] = { type: 't', value: r.toJSON(t).uuid })
					: r && r.isColor
					? (e.uniforms[n] = { type: 'c', value: r.getHex() })
					: r && r.isVector2
					? (e.uniforms[n] = { type: 'v2', value: r.toArray() })
					: r && r.isVector3
					? (e.uniforms[n] = { type: 'v3', value: r.toArray() })
					: r && r.isVector4
					? (e.uniforms[n] = { type: 'v4', value: r.toArray() })
					: r && r.isMatrix3
					? (e.uniforms[n] = { type: 'm3', value: r.toArray() })
					: r && r.isMatrix4
					? (e.uniforms[n] = { type: 'm4', value: r.toArray() })
					: (e.uniforms[n] = { value: r });
			}
			Object.keys(this.defines).length > 0 && (e.defines = this.defines),
				(e.vertexShader = this.vertexShader),
				(e.fragmentShader = this.fragmentShader);
			var i = {};
			for (var a in this.extensions) !0 === this.extensions[a] && (i[a] = !0);
			return Object.keys(i).length > 0 && (e.extensions = i), e;
		}),
		(kn.prototype = Object.assign(Object.create(be.prototype), {
			constructor: kn,
			isCamera: !0,
			copy: function (t, e) {
				return (
					be.prototype.copy.call(this, t, e),
					this.matrixWorldInverse.copy(t.matrixWorldInverse),
					this.projectionMatrix.copy(t.projectionMatrix),
					this.projectionMatrixInverse.copy(t.projectionMatrixInverse),
					this
				);
			},
			getWorldDirection: function (t) {
				void 0 === t &&
					(console.warn(
						'THREE.Camera: .getWorldDirection() target is now required'
					),
					(t = new wt())),
					this.updateMatrixWorld(!0);
				var e = this.matrixWorld.elements;
				return t.set(-e[8], -e[9], -e[10]).normalize();
			},
			updateMatrixWorld: function (t) {
				be.prototype.updateMatrixWorld.call(this, t),
					this.matrixWorldInverse.getInverse(this.matrixWorld);
			},
			updateWorldMatrix: function (t, e) {
				be.prototype.updateWorldMatrix.call(this, t, e),
					this.matrixWorldInverse.getInverse(this.matrixWorld);
			},
			clone: function () {
				return new this.constructor().copy(this);
			},
		})),
		(Vn.prototype = Object.assign(Object.create(kn.prototype), {
			constructor: Vn,
			isPerspectiveCamera: !0,
			copy: function (t, e) {
				return (
					kn.prototype.copy.call(this, t, e),
					(this.fov = t.fov),
					(this.zoom = t.zoom),
					(this.near = t.near),
					(this.far = t.far),
					(this.focus = t.focus),
					(this.aspect = t.aspect),
					(this.view = null === t.view ? null : Object.assign({}, t.view)),
					(this.filmGauge = t.filmGauge),
					(this.filmOffset = t.filmOffset),
					this
				);
			},
			setFocalLength: function (t) {
				var e = (0.5 * this.getFilmHeight()) / t;
				(this.fov = 2 * st.RAD2DEG * Math.atan(e)),
					this.updateProjectionMatrix();
			},
			getFocalLength: function () {
				var t = Math.tan(0.5 * st.DEG2RAD * this.fov);
				return (0.5 * this.getFilmHeight()) / t;
			},
			getEffectiveFOV: function () {
				return (
					2 *
					st.RAD2DEG *
					Math.atan(Math.tan(0.5 * st.DEG2RAD * this.fov) / this.zoom)
				);
			},
			getFilmWidth: function () {
				return this.filmGauge * Math.min(this.aspect, 1);
			},
			getFilmHeight: function () {
				return this.filmGauge / Math.max(this.aspect, 1);
			},
			setViewOffset: function (t, e, n, r, i, a) {
				(this.aspect = t / e),
					null === this.view &&
						(this.view = {
							enabled: !0,
							fullWidth: 1,
							fullHeight: 1,
							offsetX: 0,
							offsetY: 0,
							width: 1,
							height: 1,
						}),
					(this.view.enabled = !0),
					(this.view.fullWidth = t),
					(this.view.fullHeight = e),
					(this.view.offsetX = n),
					(this.view.offsetY = r),
					(this.view.width = i),
					(this.view.height = a),
					this.updateProjectionMatrix();
			},
			clearViewOffset: function () {
				null !== this.view && (this.view.enabled = !1),
					this.updateProjectionMatrix();
			},
			updateProjectionMatrix: function () {
				var t = this.near,
					e = (t * Math.tan(0.5 * st.DEG2RAD * this.fov)) / this.zoom,
					n = 2 * e,
					r = this.aspect * n,
					i = -0.5 * r,
					a = this.view;
				if (null !== this.view && this.view.enabled) {
					var o = a.fullWidth,
						s = a.fullHeight;
					(i += (a.offsetX * r) / o),
						(e -= (a.offsetY * n) / s),
						(r *= a.width / o),
						(n *= a.height / s);
				}
				var c = this.filmOffset;
				0 !== c && (i += (t * c) / this.getFilmWidth()),
					this.projectionMatrix.makePerspective(
						i,
						i + r,
						e,
						e - n,
						t,
						this.far
					),
					this.projectionMatrixInverse.getInverse(this.projectionMatrix);
			},
			toJSON: function (t) {
				var e = be.prototype.toJSON.call(this, t);
				return (
					(e.object.fov = this.fov),
					(e.object.zoom = this.zoom),
					(e.object.near = this.near),
					(e.object.far = this.far),
					(e.object.focus = this.focus),
					(e.object.aspect = this.aspect),
					null !== this.view && (e.object.view = Object.assign({}, this.view)),
					(e.object.filmGauge = this.filmGauge),
					(e.object.filmOffset = this.filmOffset),
					e
				);
			},
		}));
	var Wn = 90;
	function jn(t, e, n) {
		if (
			(be.call(this),
			(this.type = 'CubeCamera'),
			!0 === n.isWebGLCubeRenderTarget)
		) {
			this.renderTarget = n;
			var r = new Vn(Wn, 1, t, e);
			(r.layers = this.layers),
				r.up.set(0, -1, 0),
				r.lookAt(new wt(1, 0, 0)),
				this.add(r);
			var i = new Vn(Wn, 1, t, e);
			(i.layers = this.layers),
				i.up.set(0, -1, 0),
				i.lookAt(new wt(-1, 0, 0)),
				this.add(i);
			var a = new Vn(Wn, 1, t, e);
			(a.layers = this.layers),
				a.up.set(0, 0, 1),
				a.lookAt(new wt(0, 1, 0)),
				this.add(a);
			var o = new Vn(Wn, 1, t, e);
			(o.layers = this.layers),
				o.up.set(0, 0, -1),
				o.lookAt(new wt(0, -1, 0)),
				this.add(o);
			var s = new Vn(Wn, 1, t, e);
			(s.layers = this.layers),
				s.up.set(0, -1, 0),
				s.lookAt(new wt(0, 0, 1)),
				this.add(s);
			var c = new Vn(Wn, 1, t, e);
			(c.layers = this.layers),
				c.up.set(0, -1, 0),
				c.lookAt(new wt(0, 0, -1)),
				this.add(c),
				(this.update = function (t, e) {
					null === this.parent && this.updateMatrixWorld();
					var l = t.xr.enabled,
						u = t.getRenderTarget();
					t.xr.enabled = !1;
					var h = n.texture.generateMipmaps;
					(n.texture.generateMipmaps = !1),
						t.setRenderTarget(n, 0),
						t.render(e, r),
						t.setRenderTarget(n, 1),
						t.render(e, i),
						t.setRenderTarget(n, 2),
						t.render(e, a),
						t.setRenderTarget(n, 3),
						t.render(e, o),
						t.setRenderTarget(n, 4),
						t.render(e, s),
						(n.texture.generateMipmaps = h),
						t.setRenderTarget(n, 5),
						t.render(e, c),
						t.setRenderTarget(u),
						(t.xr.enabled = l);
				}),
				(this.clear = function (t, e, r, i) {
					for (var a = t.getRenderTarget(), o = 0; o < 6; o++)
						t.setRenderTarget(n, o), t.clear(e, r, i);
					t.setRenderTarget(a);
				});
		} else console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');
	}
	function qn(t, e, n, i, a, o, s, c, l, u) {
		(t = void 0 !== t ? t : []),
			(e = void 0 !== e ? e : r),
			(s = void 0 !== s ? s : S),
			gt.call(this, t, e, n, i, a, o, s, c, l, u),
			(this.flipY = !1),
			(this._needsFlipEnvMap = !0);
	}
	function Xn(t, e, n) {
		Number.isInteger(e) &&
			(console.warn(
				'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )'
			),
			(e = n)),
			xt.call(this, t, t, e),
			(e = e || {}),
			(this.texture = new qn(
				void 0,
				e.mapping,
				e.wrapS,
				e.wrapT,
				e.magFilter,
				e.minFilter,
				e.format,
				e.type,
				e.anisotropy,
				e.encoding
			)),
			(this.texture._needsFlipEnvMap = !1);
	}
	function Yn(t, e, n, r, i, a, o, s, c, l, u, h) {
		gt.call(this, null, a, o, s, c, l, r, i, u, h),
			(this.image = { data: t || null, width: e || 1, height: n || 1 }),
			(this.magFilter = void 0 !== c ? c : d),
			(this.minFilter = void 0 !== l ? l : d),
			(this.generateMipmaps = !1),
			(this.flipY = !1),
			(this.unpackAlignment = 1),
			(this.needsUpdate = !0);
	}
	(jn.prototype = Object.create(be.prototype)),
		(jn.prototype.constructor = jn),
		(qn.prototype = Object.create(gt.prototype)),
		(qn.prototype.constructor = qn),
		(qn.prototype.isCubeTexture = !0),
		Object.defineProperty(qn.prototype, 'images', {
			get: function () {
				return this.image;
			},
			set: function (t) {
				this.image = t;
			},
		}),
		(Xn.prototype = Object.create(xt.prototype)),
		(Xn.prototype.constructor = Xn),
		(Xn.prototype.isWebGLCubeRenderTarget = !0),
		(Xn.prototype.fromEquirectangularTexture = function (t, e) {
			(this.texture.type = e.type),
				(this.texture.format = T),
				(this.texture.encoding = e.encoding),
				(this.texture.generateMipmaps = e.generateMipmaps),
				(this.texture.minFilter = e.minFilter),
				(this.texture.magFilter = e.magFilter);
			var n = { tEquirect: { value: null } },
				r =
					'\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t',
				i =
					'\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t',
				a = new zn(5, 5, 5),
				o = new Hn({
					name: 'CubemapFromEquirect',
					uniforms: Gn(n),
					vertexShader: r,
					fragmentShader: i,
					side: 1,
					blending: 0,
				});
			o.uniforms.tEquirect.value = e;
			var s = new Nn(a, o),
				c = e.minFilter;
			return (
				e.minFilter === g && (e.minFilter = m),
				new jn(1, 10, this).update(t, s),
				(e.minFilter = c),
				s.geometry.dispose(),
				s.material.dispose(),
				this
			);
		}),
		(Yn.prototype = Object.create(gt.prototype)),
		(Yn.prototype.constructor = Yn),
		(Yn.prototype.isDataTexture = !0);
	var Zn = new Ht(),
		Jn = new wt(),
		Qn = (function () {
			function t(t, e, n, r, i, a) {
				this.planes = [
					void 0 !== t ? t : new Te(),
					void 0 !== e ? e : new Te(),
					void 0 !== n ? n : new Te(),
					void 0 !== r ? r : new Te(),
					void 0 !== i ? i : new Te(),
					void 0 !== a ? a : new Te(),
				];
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e, n, r, i, a) {
					var o = this.planes;
					return (
						o[0].copy(t),
						o[1].copy(e),
						o[2].copy(n),
						o[3].copy(r),
						o[4].copy(i),
						o[5].copy(a),
						this
					);
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					for (var e = this.planes, n = 0; n < 6; n++) e[n].copy(t.planes[n]);
					return this;
				}),
				(e.setFromProjectionMatrix = function (t) {
					var e = this.planes,
						n = t.elements,
						r = n[0],
						i = n[1],
						a = n[2],
						o = n[3],
						s = n[4],
						c = n[5],
						l = n[6],
						u = n[7],
						h = n[8],
						d = n[9],
						p = n[10],
						f = n[11],
						m = n[12],
						v = n[13],
						g = n[14],
						y = n[15];
					return (
						e[0].setComponents(o - r, u - s, f - h, y - m).normalize(),
						e[1].setComponents(o + r, u + s, f + h, y + m).normalize(),
						e[2].setComponents(o + i, u + c, f + d, y + v).normalize(),
						e[3].setComponents(o - i, u - c, f - d, y - v).normalize(),
						e[4].setComponents(o - a, u - l, f - p, y - g).normalize(),
						e[5].setComponents(o + a, u + l, f + p, y + g).normalize(),
						this
					);
				}),
				(e.intersectsObject = function (t) {
					var e = t.geometry;
					return (
						null === e.boundingSphere && e.computeBoundingSphere(),
						Zn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),
						this.intersectsSphere(Zn)
					);
				}),
				(e.intersectsSprite = function (t) {
					return (
						Zn.center.set(0, 0, 0),
						(Zn.radius = 0.7071067811865476),
						Zn.applyMatrix4(t.matrixWorld),
						this.intersectsSphere(Zn)
					);
				}),
				(e.intersectsSphere = function (t) {
					for (
						var e = this.planes, n = t.center, r = -t.radius, i = 0;
						i < 6;
						i++
					) {
						if (e[i].distanceToPoint(n) < r) return !1;
					}
					return !0;
				}),
				(e.intersectsBox = function (t) {
					for (var e = this.planes, n = 0; n < 6; n++) {
						var r = e[n];
						if (
							((Jn.x = r.normal.x > 0 ? t.max.x : t.min.x),
							(Jn.y = r.normal.y > 0 ? t.max.y : t.min.y),
							(Jn.z = r.normal.z > 0 ? t.max.z : t.min.z),
							r.distanceToPoint(Jn) < 0)
						)
							return !1;
					}
					return !0;
				}),
				(e.containsPoint = function (t) {
					for (var e = this.planes, n = 0; n < 6; n++)
						if (e[n].distanceToPoint(t) < 0) return !1;
					return !0;
				}),
				t
			);
		})();
	function Kn() {
		var t = null,
			e = !1,
			n = null,
			r = null;
		function i(e, a) {
			n(e, a), (r = t.requestAnimationFrame(i));
		}
		return {
			start: function () {
				!0 !== e && null !== n && ((r = t.requestAnimationFrame(i)), (e = !0));
			},
			stop: function () {
				t.cancelAnimationFrame(r), (e = !1);
			},
			setAnimationLoop: function (t) {
				n = t;
			},
			setContext: function (e) {
				t = e;
			},
		};
	}
	function $n(t, e) {
		var n = e.isWebGL2,
			r = new WeakMap();
		return {
			get: function (t) {
				return t.isInterleavedBufferAttribute && (t = t.data), r.get(t);
			},
			remove: function (e) {
				e.isInterleavedBufferAttribute && (e = e.data);
				var n = r.get(e);
				n && (t.deleteBuffer(n.buffer), r.delete(e));
			},
			update: function (e, i) {
				if (e.isGLBufferAttribute) {
					var a = r.get(e);
					(!a || a.version < e.version) &&
						r.set(e, {
							buffer: e.buffer,
							type: e.type,
							bytesPerElement: e.elementSize,
							version: e.version,
						});
				} else {
					e.isInterleavedBufferAttribute && (e = e.data);
					var o = r.get(e);
					void 0 === o
						? r.set(
								e,
								(function (e, n) {
									var r = e.array,
										i = e.usage,
										a = t.createBuffer();
									t.bindBuffer(n, a),
										t.bufferData(n, r, i),
										e.onUploadCallback();
									var o = 5126;
									return (
										r instanceof Float32Array
											? (o = 5126)
											: r instanceof Float64Array
											? console.warn(
													'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.'
											  )
											: r instanceof Uint16Array
											? (o = 5123)
											: r instanceof Int16Array
											? (o = 5122)
											: r instanceof Uint32Array
											? (o = 5125)
											: r instanceof Int32Array
											? (o = 5124)
											: r instanceof Int8Array
											? (o = 5120)
											: r instanceof Uint8Array && (o = 5121),
										{
											buffer: a,
											type: o,
											bytesPerElement: r.BYTES_PER_ELEMENT,
											version: e.version,
										}
									);
								})(e, i)
						  )
						: o.version < e.version &&
						  (!(function (e, r, i) {
								var a = r.array,
									o = r.updateRange;
								t.bindBuffer(i, e),
									-1 === o.count
										? t.bufferSubData(i, 0, a)
										: (n
												? t.bufferSubData(
														i,
														o.offset * a.BYTES_PER_ELEMENT,
														a,
														o.offset,
														o.count
												  )
												: t.bufferSubData(
														i,
														o.offset * a.BYTES_PER_ELEMENT,
														a.subarray(o.offset, o.offset + o.count)
												  ),
										  (o.count = -1));
						  })(o.buffer, e, i),
						  (o.version = e.version));
				}
			},
		};
	}
	var tr = (function (t) {
			function e(e, n, r, i) {
				var a;
				((a = t.call(this) || this).type = 'PlaneBufferGeometry'),
					(a.parameters = {
						width: e,
						height: n,
						widthSegments: r,
						heightSegments: i,
					});
				for (
					var o = (e = e || 1) / 2,
						s = (n = n || 1) / 2,
						c = Math.floor(r) || 1,
						l = Math.floor(i) || 1,
						u = c + 1,
						h = l + 1,
						d = e / c,
						p = n / l,
						f = [],
						m = [],
						v = [],
						g = [],
						y = 0;
					y < h;
					y++
				)
					for (var x = y * p - s, _ = 0; _ < u; _++) {
						var b = _ * d - o;
						m.push(b, -x, 0), v.push(0, 0, 1), g.push(_ / c), g.push(1 - y / l);
					}
				for (var w = 0; w < l; w++)
					for (var M = 0; M < c; M++) {
						var S = M + u * w,
							T = M + u * (w + 1),
							E = M + 1 + u * (w + 1),
							A = M + 1 + u * w;
						f.push(S, T, A), f.push(T, E, A);
					}
				return (
					a.setIndex(f),
					a.setAttribute('position', new an(m, 3)),
					a.setAttribute('normal', new an(v, 3)),
					a.setAttribute('uv', new an(g, 2)),
					a
				);
			}
			return ut(e, t), e;
		})(vn),
		er = {
			alphamap_fragment:
				'#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif',
			alphamap_pars_fragment:
				'#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif',
			alphatest_fragment:
				'#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif',
			aomap_fragment:
				'#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif',
			aomap_pars_fragment:
				'#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif',
			begin_vertex: 'vec3 transformed = vec3( position );',
			beginnormal_vertex:
				'vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif',
			bsdfs:
				'vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif',
			bumpmap_pars_fragment:
				'#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif',
			clipping_planes_fragment:
				'#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif',
			clipping_planes_pars_fragment:
				'#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif',
			clipping_planes_pars_vertex:
				'#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif',
			clipping_planes_vertex:
				'#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif',
			color_fragment: '#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif',
			color_pars_fragment: '#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif',
			color_pars_vertex:
				'#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif',
			color_vertex:
				'#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif',
			common:
				'#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}',
			cube_uv_reflection_fragment:
				'#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif',
			defaultnormal_vertex:
				'vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif',
			displacementmap_pars_vertex:
				'#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif',
			displacementmap_vertex:
				'#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif',
			emissivemap_fragment:
				'#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif',
			emissivemap_pars_fragment:
				'#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif',
			encodings_fragment: 'gl_FragColor = linearToOutputTexel( gl_FragColor );',
			encodings_pars_fragment:
				'\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}',
			envmap_fragment:
				'#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif',
			envmap_common_pars_fragment:
				'#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif',
			envmap_pars_fragment:
				'#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif',
			envmap_pars_vertex:
				'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif',
			envmap_physical_pars_fragment:
				'#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif',
			envmap_vertex:
				'#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif',
			fog_vertex: '#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif',
			fog_pars_vertex: '#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif',
			fog_fragment:
				'#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif',
			fog_pars_fragment:
				'#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif',
			gradientmap_pars_fragment:
				'#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}',
			lightmap_fragment:
				'#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif',
			lightmap_pars_fragment:
				'#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif',
			lights_lambert_vertex:
				'vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif',
			lights_pars_begin:
				'uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif',
			lights_toon_fragment:
				'ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;',
			lights_toon_pars_fragment:
				'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)',
			lights_phong_fragment:
				'BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;',
			lights_phong_pars_fragment:
				'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)',
			lights_physical_fragment:
				'PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif',
			lights_physical_pars_fragment:
				'struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}',
			lights_fragment_begin:
				'\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif',
			lights_fragment_maps:
				'#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif',
			lights_fragment_end:
				'#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif',
			logdepthbuf_fragment:
				'#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif',
			logdepthbuf_pars_fragment:
				'#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif',
			logdepthbuf_pars_vertex:
				'#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif',
			logdepthbuf_vertex:
				'#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif',
			map_fragment:
				'#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif',
			map_pars_fragment: '#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif',
			map_particle_fragment:
				'#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif',
			map_particle_pars_fragment:
				'#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif',
			metalnessmap_fragment:
				'float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif',
			metalnessmap_pars_fragment:
				'#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif',
			morphnormal_vertex:
				'#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif',
			morphtarget_pars_vertex:
				'#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif',
			morphtarget_vertex:
				'#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif',
			normal_fragment_begin:
				'#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;',
			normal_fragment_maps:
				'#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif',
			normalmap_pars_fragment:
				'#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif',
			clearcoat_normal_fragment_begin:
				'#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif',
			clearcoat_normal_fragment_maps:
				'#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif',
			clearcoat_pars_fragment:
				'#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif',
			packing:
				'vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}',
			premultiplied_alpha_fragment:
				'#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif',
			project_vertex:
				'vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;',
			dithering_fragment:
				'#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif',
			dithering_pars_fragment:
				'#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif',
			roughnessmap_fragment:
				'float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif',
			roughnessmap_pars_fragment:
				'#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif',
			shadowmap_pars_fragment:
				'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif',
			shadowmap_pars_vertex:
				'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif',
			shadowmap_vertex:
				'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif',
			shadowmask_pars_fragment:
				'float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}',
			skinbase_vertex:
				'#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif',
			skinning_pars_vertex:
				'#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif',
			skinning_vertex:
				'#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif',
			skinnormal_vertex:
				'#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif',
			specularmap_fragment:
				'float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif',
			specularmap_pars_fragment:
				'#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif',
			tonemapping_fragment:
				'#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif',
			tonemapping_pars_fragment:
				'#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }',
			transmissionmap_fragment:
				'#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif',
			transmissionmap_pars_fragment:
				'#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif',
			uv_pars_fragment:
				'#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif',
			uv_pars_vertex:
				'#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif',
			uv_vertex:
				'#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif',
			uv2_pars_fragment:
				'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif',
			uv2_pars_vertex:
				'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif',
			uv2_vertex:
				'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif',
			worldpos_vertex:
				'#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif',
			background_frag:
				'uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',
			background_vert:
				'varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}',
			cube_frag:
				'#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',
			cube_vert:
				'varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}',
			depth_frag:
				'#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}',
			depth_vert:
				'#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}',
			distanceRGBA_frag:
				'#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}',
			distanceRGBA_vert:
				'#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}',
			equirect_frag:
				'uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',
			equirect_vert:
				'varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}',
			linedashed_frag:
				'uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}',
			linedashed_vert:
				'uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}',
			meshbasic_frag:
				'uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
			meshbasic_vert:
				'#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}',
			meshlambert_frag:
				'uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
			meshlambert_vert:
				'#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
			meshmatcap_frag:
				'#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
			meshmatcap_vert:
				'#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}',
			meshtoon_frag:
				'#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
			meshtoon_vert:
				'#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
			meshphong_frag:
				'#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
			meshphong_vert:
				'#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
			meshphysical_frag:
				'#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',
			meshphysical_vert:
				'#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
			normal_frag:
				'#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}',
			normal_vert:
				'#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}',
			points_frag:
				'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}',
			points_vert:
				'uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}',
			shadow_frag:
				'uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',
			shadow_vert:
				'#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',
			sprite_frag:
				'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',
			sprite_vert:
				'uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}',
		},
		nr = {
			common: {
				diffuse: { value: new Ve(15658734) },
				opacity: { value: 1 },
				map: { value: null },
				uvTransform: { value: new ft() },
				uv2Transform: { value: new ft() },
				alphaMap: { value: null },
			},
			specularmap: { specularMap: { value: null } },
			envmap: {
				envMap: { value: null },
				flipEnvMap: { value: -1 },
				reflectivity: { value: 1 },
				refractionRatio: { value: 0.98 },
				maxMipLevel: { value: 0 },
			},
			aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
			lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } },
			emissivemap: { emissiveMap: { value: null } },
			bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
			normalmap: {
				normalMap: { value: null },
				normalScale: { value: new pt(1, 1) },
			},
			displacementmap: {
				displacementMap: { value: null },
				displacementScale: { value: 1 },
				displacementBias: { value: 0 },
			},
			roughnessmap: { roughnessMap: { value: null } },
			metalnessmap: { metalnessMap: { value: null } },
			gradientmap: { gradientMap: { value: null } },
			fog: {
				fogDensity: { value: 25e-5 },
				fogNear: { value: 1 },
				fogFar: { value: 2e3 },
				fogColor: { value: new Ve(16777215) },
			},
			lights: {
				ambientLightColor: { value: [] },
				lightProbe: { value: [] },
				directionalLights: {
					value: [],
					properties: { direction: {}, color: {} },
				},
				directionalLightShadows: {
					value: [],
					properties: {
						shadowBias: {},
						shadowNormalBias: {},
						shadowRadius: {},
						shadowMapSize: {},
					},
				},
				directionalShadowMap: { value: [] },
				directionalShadowMatrix: { value: [] },
				spotLights: {
					value: [],
					properties: {
						color: {},
						position: {},
						direction: {},
						distance: {},
						coneCos: {},
						penumbraCos: {},
						decay: {},
					},
				},
				spotLightShadows: {
					value: [],
					properties: {
						shadowBias: {},
						shadowNormalBias: {},
						shadowRadius: {},
						shadowMapSize: {},
					},
				},
				spotShadowMap: { value: [] },
				spotShadowMatrix: { value: [] },
				pointLights: {
					value: [],
					properties: { color: {}, position: {}, decay: {}, distance: {} },
				},
				pointLightShadows: {
					value: [],
					properties: {
						shadowBias: {},
						shadowNormalBias: {},
						shadowRadius: {},
						shadowMapSize: {},
						shadowCameraNear: {},
						shadowCameraFar: {},
					},
				},
				pointShadowMap: { value: [] },
				pointShadowMatrix: { value: [] },
				hemisphereLights: {
					value: [],
					properties: { direction: {}, skyColor: {}, groundColor: {} },
				},
				rectAreaLights: {
					value: [],
					properties: { color: {}, position: {}, width: {}, height: {} },
				},
				ltc_1: { value: null },
				ltc_2: { value: null },
			},
			points: {
				diffuse: { value: new Ve(15658734) },
				opacity: { value: 1 },
				size: { value: 1 },
				scale: { value: 1 },
				map: { value: null },
				alphaMap: { value: null },
				uvTransform: { value: new ft() },
			},
			sprite: {
				diffuse: { value: new Ve(15658734) },
				opacity: { value: 1 },
				center: { value: new pt(0.5, 0.5) },
				rotation: { value: 0 },
				map: { value: null },
				alphaMap: { value: null },
				uvTransform: { value: new ft() },
			},
		},
		rr = {
			basic: {
				uniforms: Fn([
					nr.common,
					nr.specularmap,
					nr.envmap,
					nr.aomap,
					nr.lightmap,
					nr.fog,
				]),
				vertexShader: er.meshbasic_vert,
				fragmentShader: er.meshbasic_frag,
			},
			lambert: {
				uniforms: Fn([
					nr.common,
					nr.specularmap,
					nr.envmap,
					nr.aomap,
					nr.lightmap,
					nr.emissivemap,
					nr.fog,
					nr.lights,
					{ emissive: { value: new Ve(0) } },
				]),
				vertexShader: er.meshlambert_vert,
				fragmentShader: er.meshlambert_frag,
			},
			phong: {
				uniforms: Fn([
					nr.common,
					nr.specularmap,
					nr.envmap,
					nr.aomap,
					nr.lightmap,
					nr.emissivemap,
					nr.bumpmap,
					nr.normalmap,
					nr.displacementmap,
					nr.fog,
					nr.lights,
					{
						emissive: { value: new Ve(0) },
						specular: { value: new Ve(1118481) },
						shininess: { value: 30 },
					},
				]),
				vertexShader: er.meshphong_vert,
				fragmentShader: er.meshphong_frag,
			},
			standard: {
				uniforms: Fn([
					nr.common,
					nr.envmap,
					nr.aomap,
					nr.lightmap,
					nr.emissivemap,
					nr.bumpmap,
					nr.normalmap,
					nr.displacementmap,
					nr.roughnessmap,
					nr.metalnessmap,
					nr.fog,
					nr.lights,
					{
						emissive: { value: new Ve(0) },
						roughness: { value: 1 },
						metalness: { value: 0 },
						envMapIntensity: { value: 1 },
					},
				]),
				vertexShader: er.meshphysical_vert,
				fragmentShader: er.meshphysical_frag,
			},
			toon: {
				uniforms: Fn([
					nr.common,
					nr.aomap,
					nr.lightmap,
					nr.emissivemap,
					nr.bumpmap,
					nr.normalmap,
					nr.displacementmap,
					nr.gradientmap,
					nr.fog,
					nr.lights,
					{ emissive: { value: new Ve(0) } },
				]),
				vertexShader: er.meshtoon_vert,
				fragmentShader: er.meshtoon_frag,
			},
			matcap: {
				uniforms: Fn([
					nr.common,
					nr.bumpmap,
					nr.normalmap,
					nr.displacementmap,
					nr.fog,
					{ matcap: { value: null } },
				]),
				vertexShader: er.meshmatcap_vert,
				fragmentShader: er.meshmatcap_frag,
			},
			points: {
				uniforms: Fn([nr.points, nr.fog]),
				vertexShader: er.points_vert,
				fragmentShader: er.points_frag,
			},
			dashed: {
				uniforms: Fn([
					nr.common,
					nr.fog,
					{
						scale: { value: 1 },
						dashSize: { value: 1 },
						totalSize: { value: 2 },
					},
				]),
				vertexShader: er.linedashed_vert,
				fragmentShader: er.linedashed_frag,
			},
			depth: {
				uniforms: Fn([nr.common, nr.displacementmap]),
				vertexShader: er.depth_vert,
				fragmentShader: er.depth_frag,
			},
			normal: {
				uniforms: Fn([
					nr.common,
					nr.bumpmap,
					nr.normalmap,
					nr.displacementmap,
					{ opacity: { value: 1 } },
				]),
				vertexShader: er.normal_vert,
				fragmentShader: er.normal_frag,
			},
			sprite: {
				uniforms: Fn([nr.sprite, nr.fog]),
				vertexShader: er.sprite_vert,
				fragmentShader: er.sprite_frag,
			},
			background: {
				uniforms: { uvTransform: { value: new ft() }, t2D: { value: null } },
				vertexShader: er.background_vert,
				fragmentShader: er.background_frag,
			},
			cube: {
				uniforms: Fn([nr.envmap, { opacity: { value: 1 } }]),
				vertexShader: er.cube_vert,
				fragmentShader: er.cube_frag,
			},
			equirect: {
				uniforms: { tEquirect: { value: null } },
				vertexShader: er.equirect_vert,
				fragmentShader: er.equirect_frag,
			},
			distanceRGBA: {
				uniforms: Fn([
					nr.common,
					nr.displacementmap,
					{
						referencePosition: { value: new wt() },
						nearDistance: { value: 1 },
						farDistance: { value: 1e3 },
					},
				]),
				vertexShader: er.distanceRGBA_vert,
				fragmentShader: er.distanceRGBA_frag,
			},
			shadow: {
				uniforms: Fn([
					nr.lights,
					nr.fog,
					{ color: { value: new Ve(0) }, opacity: { value: 1 } },
				]),
				vertexShader: er.shadow_vert,
				fragmentShader: er.shadow_frag,
			},
		};
	function ir(t, e, n, r, i) {
		var a,
			o,
			c = new Ve(0),
			l = 0,
			u = null,
			h = 0,
			d = null;
		function p(t, e) {
			n.buffers.color.setClear(t.r, t.g, t.b, e, i);
		}
		return {
			getClearColor: function () {
				return c;
			},
			setClearColor: function (t, e) {
				c.set(t), p(c, (l = void 0 !== e ? e : 1));
			},
			getClearAlpha: function () {
				return l;
			},
			setClearAlpha: function (t) {
				p(c, (l = t));
			},
			render: function (n, i, f, m) {
				var v = !0 === i.isScene ? i.background : null;
				v && v.isTexture && (v = e.get(v));
				var g = t.xr,
					y = g.getSession && g.getSession();
				y && 'additive' === y.environmentBlendMode && (v = null),
					null === v ? p(c, l) : v && v.isColor && (p(v, 1), (m = !0)),
					(t.autoClear || m) &&
						t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
					v && (v.isCubeTexture || v.isWebGLCubeRenderTarget || v.mapping === s)
						? (void 0 === o &&
								((o = new Nn(
									new zn(1, 1, 1),
									new Hn({
										name: 'BackgroundCubeMaterial',
										uniforms: Gn(rr.cube.uniforms),
										vertexShader: rr.cube.vertexShader,
										fragmentShader: rr.cube.fragmentShader,
										side: 1,
										depthTest: !1,
										depthWrite: !1,
										fog: !1,
									})
								)).geometry.deleteAttribute('normal'),
								o.geometry.deleteAttribute('uv'),
								(o.onBeforeRender = function (t, e, n) {
									this.matrixWorld.copyPosition(n.matrixWorld);
								}),
								Object.defineProperty(o.material, 'envMap', {
									get: function () {
										return this.uniforms.envMap.value;
									},
								}),
								r.update(o)),
						  v.isWebGLCubeRenderTarget && (v = v.texture),
						  (o.material.uniforms.envMap.value = v),
						  (o.material.uniforms.flipEnvMap.value =
								v.isCubeTexture && v._needsFlipEnvMap ? -1 : 1),
						  (u === v && h === v.version && d === t.toneMapping) ||
								((o.material.needsUpdate = !0),
								(u = v),
								(h = v.version),
								(d = t.toneMapping)),
						  n.unshift(o, o.geometry, o.material, 0, 0, null))
						: v &&
						  v.isTexture &&
						  (void 0 === a &&
								((a = new Nn(
									new tr(2, 2),
									new Hn({
										name: 'BackgroundMaterial',
										uniforms: Gn(rr.background.uniforms),
										vertexShader: rr.background.vertexShader,
										fragmentShader: rr.background.fragmentShader,
										side: 0,
										depthTest: !1,
										depthWrite: !1,
										fog: !1,
									})
								)).geometry.deleteAttribute('normal'),
								Object.defineProperty(a.material, 'map', {
									get: function () {
										return this.uniforms.t2D.value;
									},
								}),
								r.update(a)),
						  (a.material.uniforms.t2D.value = v),
						  !0 === v.matrixAutoUpdate && v.updateMatrix(),
						  a.material.uniforms.uvTransform.value.copy(v.matrix),
						  (u === v && h === v.version && d === t.toneMapping) ||
								((a.material.needsUpdate = !0),
								(u = v),
								(h = v.version),
								(d = t.toneMapping)),
						  n.unshift(a, a.geometry, a.material, 0, 0, null));
			},
		};
	}
	function ar(t, e, n, r) {
		var i = t.getParameter(34921),
			a = r.isWebGL2 ? null : e.get('OES_vertex_array_object'),
			o = r.isWebGL2 || null !== a,
			s = {},
			c = d(null),
			l = c;
		function u(e) {
			return r.isWebGL2 ? t.bindVertexArray(e) : a.bindVertexArrayOES(e);
		}
		function h(e) {
			return r.isWebGL2 ? t.deleteVertexArray(e) : a.deleteVertexArrayOES(e);
		}
		function d(t) {
			for (var e = [], n = [], r = [], a = 0; a < i; a++)
				(e[a] = 0), (n[a] = 0), (r[a] = 0);
			return {
				geometry: null,
				program: null,
				wireframe: !1,
				newAttributes: e,
				enabledAttributes: n,
				attributeDivisors: r,
				object: t,
				attributes: {},
				index: null,
			};
		}
		function p() {
			for (var t = l.newAttributes, e = 0, n = t.length; e < n; e++) t[e] = 0;
		}
		function f(t) {
			m(t, 0);
		}
		function m(n, i) {
			var a = l.newAttributes,
				o = l.enabledAttributes,
				s = l.attributeDivisors;
			((a[n] = 1),
			0 === o[n] && (t.enableVertexAttribArray(n), (o[n] = 1)),
			s[n] !== i) &&
				((r.isWebGL2 ? t : e.get('ANGLE_instanced_arrays'))[
					r.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'
				](n, i),
				(s[n] = i));
		}
		function v() {
			for (
				var e = l.newAttributes, n = l.enabledAttributes, r = 0, i = n.length;
				r < i;
				r++
			)
				n[r] !== e[r] && (t.disableVertexAttribArray(r), (n[r] = 0));
		}
		function g(e, n, i, a, o, s) {
			!0 !== r.isWebGL2 || (5124 !== i && 5125 !== i)
				? t.vertexAttribPointer(e, n, i, a, o, s)
				: t.vertexAttribIPointer(e, n, i, o, s);
		}
		function y() {
			x(), l !== c && u((l = c).object);
		}
		function x() {
			(c.geometry = null), (c.program = null), (c.wireframe = !1);
		}
		return {
			setup: function (i, c, h, y, x) {
				var _ = !1;
				if (o) {
					var b = (function (e, n, i) {
						var o = !0 === i.wireframe,
							c = s[e.id];
						void 0 === c && ((c = {}), (s[e.id] = c));
						var l = c[n.id];
						void 0 === l && ((l = {}), (c[n.id] = l));
						var u = l[o];
						void 0 === u &&
							((u = d(
								r.isWebGL2 ? t.createVertexArray() : a.createVertexArrayOES()
							)),
							(l[o] = u));
						return u;
					})(y, h, c);
					l !== b && u((l = b).object),
						(_ = (function (t, e) {
							var n = l.attributes,
								r = t.attributes;
							if (Object.keys(n).length !== Object.keys(r).length) return !0;
							for (var i in r) {
								var a = n[i],
									o = r[i];
								if (void 0 === a) return !0;
								if (a.attribute !== o) return !0;
								if (a.data !== o.data) return !0;
							}
							return l.index !== e;
						})(y, x)) &&
							(function (t, e) {
								var n = {},
									r = t.attributes;
								for (var i in r) {
									var a = r[i],
										o = {};
									(o.attribute = a), a.data && (o.data = a.data), (n[i] = o);
								}
								(l.attributes = n), (l.index = e);
							})(y, x);
				} else {
					var w = !0 === c.wireframe;
					(l.geometry === y.id && l.program === h.id && l.wireframe === w) ||
						((l.geometry = y.id),
						(l.program = h.id),
						(l.wireframe = w),
						(_ = !0));
				}
				!0 === i.isInstancedMesh && (_ = !0),
					null !== x && n.update(x, 34963),
					_ &&
						(!(function (i, a, o, s) {
							if (
								!1 === r.isWebGL2 &&
								(i.isInstancedMesh || s.isInstancedBufferGeometry) &&
								null === e.get('ANGLE_instanced_arrays')
							)
								return;
							p();
							var c = s.attributes,
								l = o.getAttributes(),
								u = a.defaultAttributeValues;
							for (var h in l) {
								var d = l[h];
								if (d >= 0) {
									var y = c[h];
									if (void 0 !== y) {
										var x = y.normalized,
											_ = y.itemSize,
											b = n.get(y);
										if (void 0 === b) continue;
										var w = b.buffer,
											M = b.type,
											S = b.bytesPerElement;
										if (y.isInterleavedBufferAttribute) {
											var T = y.data,
												E = T.stride,
												A = y.offset;
											T && T.isInstancedInterleavedBuffer
												? (m(d, T.meshPerAttribute),
												  void 0 === s._maxInstanceCount &&
														(s._maxInstanceCount =
															T.meshPerAttribute * T.count))
												: f(d),
												t.bindBuffer(34962, w),
												g(d, _, M, x, E * S, A * S);
										} else
											y.isInstancedBufferAttribute
												? (m(d, y.meshPerAttribute),
												  void 0 === s._maxInstanceCount &&
														(s._maxInstanceCount =
															y.meshPerAttribute * y.count))
												: f(d),
												t.bindBuffer(34962, w),
												g(d, _, M, x, 0, 0);
									} else if ('instanceMatrix' === h) {
										var L = n.get(i.instanceMatrix);
										if (void 0 === L) continue;
										var R = L.buffer,
											C = L.type;
										m(d + 0, 1),
											m(d + 1, 1),
											m(d + 2, 1),
											m(d + 3, 1),
											t.bindBuffer(34962, R),
											t.vertexAttribPointer(d + 0, 4, C, !1, 64, 0),
											t.vertexAttribPointer(d + 1, 4, C, !1, 64, 16),
											t.vertexAttribPointer(d + 2, 4, C, !1, 64, 32),
											t.vertexAttribPointer(d + 3, 4, C, !1, 64, 48);
									} else if ('instanceColor' === h) {
										var P = n.get(i.instanceColor);
										if (void 0 === P) continue;
										var I = P.buffer,
											D = P.type;
										m(d, 1),
											t.bindBuffer(34962, I),
											t.vertexAttribPointer(d, 3, D, !1, 12, 0);
									} else if (void 0 !== u) {
										var N = u[h];
										if (void 0 !== N)
											switch (N.length) {
												case 2:
													t.vertexAttrib2fv(d, N);
													break;
												case 3:
													t.vertexAttrib3fv(d, N);
													break;
												case 4:
													t.vertexAttrib4fv(d, N);
													break;
												default:
													t.vertexAttrib1fv(d, N);
											}
									}
								}
							}
							v();
						})(i, c, h, y),
						null !== x && t.bindBuffer(34963, n.get(x).buffer));
			},
			reset: y,
			resetDefaultState: x,
			dispose: function () {
				for (var t in (y(), s)) {
					var e = s[t];
					for (var n in e) {
						var r = e[n];
						for (var i in r) h(r[i].object), delete r[i];
						delete e[n];
					}
					delete s[t];
				}
			},
			releaseStatesOfGeometry: function (t) {
				if (void 0 !== s[t.id]) {
					var e = s[t.id];
					for (var n in e) {
						var r = e[n];
						for (var i in r) h(r[i].object), delete r[i];
						delete e[n];
					}
					delete s[t.id];
				}
			},
			releaseStatesOfProgram: function (t) {
				for (var e in s) {
					var n = s[e];
					if (void 0 !== n[t.id]) {
						var r = n[t.id];
						for (var i in r) h(r[i].object), delete r[i];
						delete n[t.id];
					}
				}
			},
			initAttributes: p,
			enableAttribute: f,
			disableUnusedAttributes: v,
		};
	}
	function or(t, e, n, r) {
		var i,
			a = r.isWebGL2;
		(this.setMode = function (t) {
			i = t;
		}),
			(this.render = function (e, r) {
				t.drawArrays(i, e, r), n.update(r, i, 1);
			}),
			(this.renderInstances = function (r, o, s) {
				if (0 !== s) {
					var c, l;
					if (a) (c = t), (l = 'drawArraysInstanced');
					else if (
						((l = 'drawArraysInstancedANGLE'),
						null === (c = e.get('ANGLE_instanced_arrays')))
					)
						return void console.error(
							'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.'
						);
					c[l](i, r, o, s), n.update(o, i, s);
				}
			});
	}
	function sr(t, e, n) {
		var r;
		function i(e) {
			if ('highp' === e) {
				if (
					t.getShaderPrecisionFormat(35633, 36338).precision > 0 &&
					t.getShaderPrecisionFormat(35632, 36338).precision > 0
				)
					return 'highp';
				e = 'mediump';
			}
			return 'mediump' === e &&
				t.getShaderPrecisionFormat(35633, 36337).precision > 0 &&
				t.getShaderPrecisionFormat(35632, 36337).precision > 0
				? 'mediump'
				: 'lowp';
		}
		var a =
				('undefined' != typeof WebGL2RenderingContext &&
					t instanceof WebGL2RenderingContext) ||
				('undefined' != typeof WebGL2ComputeRenderingContext &&
					t instanceof WebGL2ComputeRenderingContext),
			o = void 0 !== n.precision ? n.precision : 'highp',
			s = i(o);
		s !== o &&
			(console.warn(
				'THREE.WebGLRenderer:',
				o,
				'not supported, using',
				s,
				'instead.'
			),
			(o = s));
		var c = !0 === n.logarithmicDepthBuffer,
			l = t.getParameter(34930),
			u = t.getParameter(35660),
			h = t.getParameter(3379),
			d = t.getParameter(34076),
			p = t.getParameter(34921),
			f = t.getParameter(36347),
			m = t.getParameter(36348),
			v = t.getParameter(36349),
			g = u > 0,
			y = a || !!e.get('OES_texture_float');
		return {
			isWebGL2: a,
			getMaxAnisotropy: function () {
				if (void 0 !== r) return r;
				var n = e.get('EXT_texture_filter_anisotropic');
				return (r =
					null !== n ? t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0);
			},
			getMaxPrecision: i,
			precision: o,
			logarithmicDepthBuffer: c,
			maxTextures: l,
			maxVertexTextures: u,
			maxTextureSize: h,
			maxCubemapSize: d,
			maxAttributes: p,
			maxVertexUniforms: f,
			maxVaryings: m,
			maxFragmentUniforms: v,
			vertexTextures: g,
			floatFragmentTextures: y,
			floatVertexTextures: g && y,
			maxSamples: a ? t.getParameter(36183) : 0,
		};
	}
	function cr(t) {
		var e = this,
			n = null,
			r = 0,
			i = !1,
			a = !1,
			o = new Te(),
			s = new ft(),
			c = { value: null, needsUpdate: !1 };
		function l() {
			c.value !== n && ((c.value = n), (c.needsUpdate = r > 0)),
				(e.numPlanes = r),
				(e.numIntersection = 0);
		}
		function u(t, n, r, i) {
			var a = null !== t ? t.length : 0,
				l = null;
			if (0 !== a) {
				if (((l = c.value), !0 !== i || null === l)) {
					var u = r + 4 * a,
						h = n.matrixWorldInverse;
					s.getNormalMatrix(h),
						(null === l || l.length < u) && (l = new Float32Array(u));
					for (var d = 0, p = r; d !== a; ++d, p += 4)
						o.copy(t[d]).applyMatrix4(h, s),
							o.normal.toArray(l, p),
							(l[p + 3] = o.constant);
				}
				(c.value = l), (c.needsUpdate = !0);
			}
			return (e.numPlanes = a), (e.numIntersection = 0), l;
		}
		(this.uniform = c),
			(this.numPlanes = 0),
			(this.numIntersection = 0),
			(this.init = function (t, e, a) {
				var o = 0 !== t.length || e || 0 !== r || i;
				return (i = e), (n = u(t, a, 0)), (r = t.length), o;
			}),
			(this.beginShadows = function () {
				(a = !0), u(null);
			}),
			(this.endShadows = function () {
				(a = !1), l();
			}),
			(this.setState = function (e, o, s) {
				var h = e.clippingPlanes,
					d = e.clipIntersection,
					p = e.clipShadows,
					f = t.get(e);
				if (!i || null === h || 0 === h.length || (a && !p)) a ? u(null) : l();
				else {
					var m = a ? 0 : r,
						v = 4 * m,
						g = f.clippingState || null;
					(c.value = g), (g = u(h, o, v, s));
					for (var y = 0; y !== v; ++y) g[y] = n[y];
					(f.clippingState = g),
						(this.numIntersection = d ? this.numPlanes : 0),
						(this.numPlanes += m);
				}
			});
	}
	function lr(t) {
		var e = new WeakMap();
		function n(t, e) {
			return e === a ? (t.mapping = r) : e === o && (t.mapping = i), t;
		}
		return {
			get: function (r) {
				if (r && r.isTexture) {
					var i = r.mapping;
					if (i === a || i === o) {
						if (e.has(r)) return n(e.get(r).texture, r.mapping);
						var s = r.image;
						if (s && s.height > 0) {
							var c = t.getRenderList(),
								l = t.getRenderTarget(),
								u = t.getRenderState(),
								h = new Xn(s.height / 2);
							return (
								h.fromEquirectangularTexture(t, r),
								e.set(r, h),
								t.setRenderTarget(l),
								t.setRenderList(c),
								t.setRenderState(u),
								n(h.texture, r.mapping)
							);
						}
						return null;
					}
				}
				return r;
			},
			dispose: function () {
				e = new WeakMap();
			},
		};
	}
	function ur(t) {
		var e = {};
		return {
			has: function (n) {
				if (void 0 !== e[n]) return null !== e[n];
				var r;
				switch (n) {
					case 'WEBGL_depth_texture':
						r =
							t.getExtension('WEBGL_depth_texture') ||
							t.getExtension('MOZ_WEBGL_depth_texture') ||
							t.getExtension('WEBKIT_WEBGL_depth_texture');
						break;
					case 'EXT_texture_filter_anisotropic':
						r =
							t.getExtension('EXT_texture_filter_anisotropic') ||
							t.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
							t.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
						break;
					case 'WEBGL_compressed_texture_s3tc':
						r =
							t.getExtension('WEBGL_compressed_texture_s3tc') ||
							t.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
							t.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
						break;
					case 'WEBGL_compressed_texture_pvrtc':
						r =
							t.getExtension('WEBGL_compressed_texture_pvrtc') ||
							t.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');
						break;
					default:
						r = t.getExtension(n);
				}
				return (e[n] = r), null !== r;
			},
			get: function (t) {
				return (
					this.has(t) ||
						console.warn(
							'THREE.WebGLRenderer: ' + t + ' extension not supported.'
						),
					e[t]
				);
			},
		};
	}
	function hr(t, e, n, r) {
		var i = new WeakMap(),
			a = new WeakMap();
		function o(t) {
			var s = t.target,
				c = i.get(s);
			for (var l in (null !== c.index && e.remove(c.index), c.attributes))
				e.remove(c.attributes[l]);
			s.removeEventListener('dispose', o), i.delete(s);
			var u = a.get(c);
			u && (e.remove(u), a.delete(c)),
				r.releaseStatesOfGeometry(s),
				!0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
				n.memory.geometries--;
		}
		function s(t) {
			var n = [],
				r = t.index,
				i = t.attributes.position,
				o = 0;
			if (null !== r) {
				var s = r.array;
				o = r.version;
				for (var c = 0, l = s.length; c < l; c += 3) {
					var u = s[c + 0],
						h = s[c + 1],
						d = s[c + 2];
					n.push(u, h, h, d, d, u);
				}
			} else {
				var p = i.array;
				o = i.version;
				for (var f = 0, m = p.length / 3 - 1; f < m; f += 3) {
					var v = f + 0,
						g = f + 1,
						y = f + 2;
					n.push(v, g, g, y, y, v);
				}
			}
			var x = new (cn(n) > 65535 ? rn : en)(n, 1);
			x.version = o;
			var _ = a.get(t);
			_ && e.remove(_), a.set(t, x);
		}
		return {
			get: function (t, e) {
				var r = i.get(e);
				return (
					r ||
					(e.addEventListener('dispose', o),
					e.isBufferGeometry
						? (r = e)
						: e.isGeometry &&
						  (void 0 === e._bufferGeometry &&
								(e._bufferGeometry = new vn().setFromObject(t)),
						  (r = e._bufferGeometry)),
					i.set(e, r),
					n.memory.geometries++,
					r)
				);
			},
			update: function (t) {
				var n = t.attributes;
				for (var r in n) e.update(n[r], 34962);
				var i = t.morphAttributes;
				for (var a in i)
					for (var o = i[a], s = 0, c = o.length; s < c; s++)
						e.update(o[s], 34962);
			},
			getWireframeAttribute: function (t) {
				var e = a.get(t);
				if (e) {
					var n = t.index;
					null !== n && e.version < n.version && s(t);
				} else s(t);
				return a.get(t);
			},
		};
	}
	function dr(t, e, n, r) {
		var i,
			a,
			o,
			s = r.isWebGL2;
		(this.setMode = function (t) {
			i = t;
		}),
			(this.setIndex = function (t) {
				(a = t.type), (o = t.bytesPerElement);
			}),
			(this.render = function (e, r) {
				t.drawElements(i, r, a, e * o), n.update(r, i, 1);
			}),
			(this.renderInstances = function (r, c, l) {
				if (0 !== l) {
					var u, h;
					if (s) (u = t), (h = 'drawElementsInstanced');
					else if (
						((h = 'drawElementsInstancedANGLE'),
						null === (u = e.get('ANGLE_instanced_arrays')))
					)
						return void console.error(
							'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.'
						);
					u[h](i, c, a, r * o, l), n.update(c, i, l);
				}
			});
	}
	function pr(t) {
		var e = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
		return {
			memory: { geometries: 0, textures: 0 },
			render: e,
			programs: null,
			autoReset: !0,
			reset: function () {
				e.frame++,
					(e.calls = 0),
					(e.triangles = 0),
					(e.points = 0),
					(e.lines = 0);
			},
			update: function (t, n, r) {
				switch ((e.calls++, n)) {
					case 4:
						e.triangles += r * (t / 3);
						break;
					case 1:
						e.lines += r * (t / 2);
						break;
					case 3:
						e.lines += r * (t - 1);
						break;
					case 2:
						e.lines += r * t;
						break;
					case 0:
						e.points += r * t;
						break;
					default:
						console.error('THREE.WebGLInfo: Unknown draw mode:', n);
				}
			},
		};
	}
	function fr(t, e) {
		return t[0] - e[0];
	}
	function mr(t, e) {
		return Math.abs(e[1]) - Math.abs(t[1]);
	}
	function vr(t) {
		for (var e = {}, n = new Float32Array(8), r = [], i = 0; i < 8; i++)
			r[i] = [i, 0];
		return {
			update: function (i, a, o, s) {
				var c = i.morphTargetInfluences,
					l = void 0 === c ? 0 : c.length,
					u = e[a.id];
				if (void 0 === u) {
					u = [];
					for (var h = 0; h < l; h++) u[h] = [h, 0];
					e[a.id] = u;
				}
				for (var d = 0; d < l; d++) {
					var p = u[d];
					(p[0] = d), (p[1] = c[d]);
				}
				u.sort(mr);
				for (var f = 0; f < 8; f++)
					f < l && u[f][1]
						? ((r[f][0] = u[f][0]), (r[f][1] = u[f][1]))
						: ((r[f][0] = Number.MAX_SAFE_INTEGER), (r[f][1] = 0));
				r.sort(fr);
				for (
					var m = o.morphTargets && a.morphAttributes.position,
						v = o.morphNormals && a.morphAttributes.normal,
						g = 0,
						y = 0;
					y < 8;
					y++
				) {
					var x = r[y],
						_ = x[0],
						b = x[1];
					_ !== Number.MAX_SAFE_INTEGER && b
						? (m &&
								a.getAttribute('morphTarget' + y) !== m[_] &&
								a.setAttribute('morphTarget' + y, m[_]),
						  v &&
								a.getAttribute('morphNormal' + y) !== v[_] &&
								a.setAttribute('morphNormal' + y, v[_]),
						  (n[y] = b),
						  (g += b))
						: (m &&
								void 0 !== a.getAttribute('morphTarget' + y) &&
								a.deleteAttribute('morphTarget' + y),
						  v &&
								void 0 !== a.getAttribute('morphNormal' + y) &&
								a.deleteAttribute('morphNormal' + y),
						  (n[y] = 0));
				}
				var w = a.morphTargetsRelative ? 1 : 1 - g;
				s.getUniforms().setValue(t, 'morphTargetBaseInfluence', w),
					s.getUniforms().setValue(t, 'morphTargetInfluences', n);
			},
		};
	}
	function gr(t, e, n, r) {
		var i = new WeakMap();
		return {
			update: function (t) {
				var a = r.render.frame,
					o = t.geometry,
					s = e.get(t, o);
				return (
					i.get(s) !== a &&
						(o.isGeometry && s.updateFromObject(t), e.update(s), i.set(s, a)),
					t.isInstancedMesh &&
						(n.update(t.instanceMatrix, 34962),
						null !== t.instanceColor && n.update(t.instanceColor, 34962)),
					s
				);
			},
			dispose: function () {
				i = new WeakMap();
			},
		};
	}
	function yr(t, e, n, r) {
		gt.call(this, null),
			(this.image = {
				data: t || null,
				width: e || 1,
				height: n || 1,
				depth: r || 1,
			}),
			(this.magFilter = d),
			(this.minFilter = d),
			(this.wrapR = u),
			(this.generateMipmaps = !1),
			(this.flipY = !1),
			(this.needsUpdate = !0);
	}
	function xr(t, e, n, r) {
		gt.call(this, null),
			(this.image = {
				data: t || null,
				width: e || 1,
				height: n || 1,
				depth: r || 1,
			}),
			(this.magFilter = d),
			(this.minFilter = d),
			(this.wrapR = u),
			(this.generateMipmaps = !1),
			(this.flipY = !1),
			(this.needsUpdate = !0);
	}
	(rr.physical = {
		uniforms: Fn([
			rr.standard.uniforms,
			{
				clearcoat: { value: 0 },
				clearcoatMap: { value: null },
				clearcoatRoughness: { value: 0 },
				clearcoatRoughnessMap: { value: null },
				clearcoatNormalScale: { value: new pt(1, 1) },
				clearcoatNormalMap: { value: null },
				sheen: { value: new Ve(0) },
				transmission: { value: 0 },
				transmissionMap: { value: null },
			},
		]),
		vertexShader: er.meshphysical_vert,
		fragmentShader: er.meshphysical_frag,
	}),
		(yr.prototype = Object.create(gt.prototype)),
		(yr.prototype.constructor = yr),
		(yr.prototype.isDataTexture2DArray = !0),
		(xr.prototype = Object.create(gt.prototype)),
		(xr.prototype.constructor = xr),
		(xr.prototype.isDataTexture3D = !0);
	var _r = new gt(),
		br = new yr(),
		wr = new xr(),
		Mr = new qn(),
		Sr = [],
		Tr = [],
		Er = new Float32Array(16),
		Ar = new Float32Array(9),
		Lr = new Float32Array(4);
	function Rr(t, e, n) {
		var r = t[0];
		if (r <= 0 || r > 0) return t;
		var i = e * n,
			a = Sr[i];
		if ((void 0 === a && ((a = new Float32Array(i)), (Sr[i] = a)), 0 !== e)) {
			r.toArray(a, 0);
			for (var o = 1, s = 0; o !== e; ++o) (s += n), t[o].toArray(a, s);
		}
		return a;
	}
	function Cr(t, e) {
		if (t.length !== e.length) return !1;
		for (var n = 0, r = t.length; n < r; n++) if (t[n] !== e[n]) return !1;
		return !0;
	}
	function Pr(t, e) {
		for (var n = 0, r = e.length; n < r; n++) t[n] = e[n];
	}
	function Ir(t, e) {
		var n = Tr[e];
		void 0 === n && ((n = new Int32Array(e)), (Tr[e] = n));
		for (var r = 0; r !== e; ++r) n[r] = t.allocateTextureUnit();
		return n;
	}
	function Dr(t, e) {
		var n = this.cache;
		n[0] !== e && (t.uniform1f(this.addr, e), (n[0] = e));
	}
	function Nr(t, e) {
		var n = this.cache;
		if (void 0 !== e.x)
			(n[0] === e.x && n[1] === e.y) ||
				(t.uniform2f(this.addr, e.x, e.y), (n[0] = e.x), (n[1] = e.y));
		else {
			if (Cr(n, e)) return;
			t.uniform2fv(this.addr, e), Pr(n, e);
		}
	}
	function Or(t, e) {
		var n = this.cache;
		if (void 0 !== e.x)
			(n[0] === e.x && n[1] === e.y && n[2] === e.z) ||
				(t.uniform3f(this.addr, e.x, e.y, e.z),
				(n[0] = e.x),
				(n[1] = e.y),
				(n[2] = e.z));
		else if (void 0 !== e.r)
			(n[0] === e.r && n[1] === e.g && n[2] === e.b) ||
				(t.uniform3f(this.addr, e.r, e.g, e.b),
				(n[0] = e.r),
				(n[1] = e.g),
				(n[2] = e.b));
		else {
			if (Cr(n, e)) return;
			t.uniform3fv(this.addr, e), Pr(n, e);
		}
	}
	function Br(t, e) {
		var n = this.cache;
		if (void 0 !== e.x)
			(n[0] === e.x && n[1] === e.y && n[2] === e.z && n[3] === e.w) ||
				(t.uniform4f(this.addr, e.x, e.y, e.z, e.w),
				(n[0] = e.x),
				(n[1] = e.y),
				(n[2] = e.z),
				(n[3] = e.w));
		else {
			if (Cr(n, e)) return;
			t.uniform4fv(this.addr, e), Pr(n, e);
		}
	}
	function zr(t, e) {
		var n = this.cache,
			r = e.elements;
		if (void 0 === r) {
			if (Cr(n, e)) return;
			t.uniformMatrix2fv(this.addr, !1, e), Pr(n, e);
		} else {
			if (Cr(n, r)) return;
			Lr.set(r), t.uniformMatrix2fv(this.addr, !1, Lr), Pr(n, r);
		}
	}
	function Gr(t, e) {
		var n = this.cache,
			r = e.elements;
		if (void 0 === r) {
			if (Cr(n, e)) return;
			t.uniformMatrix3fv(this.addr, !1, e), Pr(n, e);
		} else {
			if (Cr(n, r)) return;
			Ar.set(r), t.uniformMatrix3fv(this.addr, !1, Ar), Pr(n, r);
		}
	}
	function Fr(t, e) {
		var n = this.cache,
			r = e.elements;
		if (void 0 === r) {
			if (Cr(n, e)) return;
			t.uniformMatrix4fv(this.addr, !1, e), Pr(n, e);
		} else {
			if (Cr(n, r)) return;
			Er.set(r), t.uniformMatrix4fv(this.addr, !1, Er), Pr(n, r);
		}
	}
	function Ur(t, e, n) {
		var r = this.cache,
			i = n.allocateTextureUnit();
		r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
			n.safeSetTexture2D(e || _r, i);
	}
	function Hr(t, e, n) {
		var r = this.cache,
			i = n.allocateTextureUnit();
		r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
			n.setTexture2DArray(e || br, i);
	}
	function kr(t, e, n) {
		var r = this.cache,
			i = n.allocateTextureUnit();
		r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
			n.setTexture3D(e || wr, i);
	}
	function Vr(t, e, n) {
		var r = this.cache,
			i = n.allocateTextureUnit();
		r[0] !== i && (t.uniform1i(this.addr, i), (r[0] = i)),
			n.safeSetTextureCube(e || Mr, i);
	}
	function Wr(t, e) {
		var n = this.cache;
		n[0] !== e && (t.uniform1i(this.addr, e), (n[0] = e));
	}
	function jr(t, e) {
		var n = this.cache;
		Cr(n, e) || (t.uniform2iv(this.addr, e), Pr(n, e));
	}
	function qr(t, e) {
		var n = this.cache;
		Cr(n, e) || (t.uniform3iv(this.addr, e), Pr(n, e));
	}
	function Xr(t, e) {
		var n = this.cache;
		Cr(n, e) || (t.uniform4iv(this.addr, e), Pr(n, e));
	}
	function Yr(t, e) {
		var n = this.cache;
		n[0] !== e && (t.uniform1ui(this.addr, e), (n[0] = e));
	}
	function Zr(t, e) {
		t.uniform1fv(this.addr, e);
	}
	function Jr(t, e) {
		t.uniform1iv(this.addr, e);
	}
	function Qr(t, e) {
		t.uniform2iv(this.addr, e);
	}
	function Kr(t, e) {
		t.uniform3iv(this.addr, e);
	}
	function $r(t, e) {
		t.uniform4iv(this.addr, e);
	}
	function ti(t, e) {
		var n = Rr(e, this.size, 2);
		t.uniform2fv(this.addr, n);
	}
	function ei(t, e) {
		var n = Rr(e, this.size, 3);
		t.uniform3fv(this.addr, n);
	}
	function ni(t, e) {
		var n = Rr(e, this.size, 4);
		t.uniform4fv(this.addr, n);
	}
	function ri(t, e) {
		var n = Rr(e, this.size, 4);
		t.uniformMatrix2fv(this.addr, !1, n);
	}
	function ii(t, e) {
		var n = Rr(e, this.size, 9);
		t.uniformMatrix3fv(this.addr, !1, n);
	}
	function ai(t, e) {
		var n = Rr(e, this.size, 16);
		t.uniformMatrix4fv(this.addr, !1, n);
	}
	function oi(t, e, n) {
		var r = e.length,
			i = Ir(n, r);
		t.uniform1iv(this.addr, i);
		for (var a = 0; a !== r; ++a) n.safeSetTexture2D(e[a] || _r, i[a]);
	}
	function si(t, e, n) {
		var r = e.length,
			i = Ir(n, r);
		t.uniform1iv(this.addr, i);
		for (var a = 0; a !== r; ++a) n.safeSetTextureCube(e[a] || Mr, i[a]);
	}
	function ci(t, e, n) {
		(this.id = t),
			(this.addr = n),
			(this.cache = []),
			(this.setValue = (function (t) {
				switch (t) {
					case 5126:
						return Dr;
					case 35664:
						return Nr;
					case 35665:
						return Or;
					case 35666:
						return Br;
					case 35674:
						return zr;
					case 35675:
						return Gr;
					case 35676:
						return Fr;
					case 5124:
					case 35670:
						return Wr;
					case 35667:
					case 35671:
						return jr;
					case 35668:
					case 35672:
						return qr;
					case 35669:
					case 35673:
						return Xr;
					case 5125:
						return Yr;
					case 35678:
					case 36198:
					case 36298:
					case 36306:
					case 35682:
						return Ur;
					case 35679:
					case 36299:
					case 36307:
						return kr;
					case 35680:
					case 36300:
					case 36308:
					case 36293:
						return Vr;
					case 36289:
					case 36303:
					case 36311:
					case 36292:
						return Hr;
				}
			})(e.type));
	}
	function li(t, e, n) {
		(this.id = t),
			(this.addr = n),
			(this.cache = []),
			(this.size = e.size),
			(this.setValue = (function (t) {
				switch (t) {
					case 5126:
						return Zr;
					case 35664:
						return ti;
					case 35665:
						return ei;
					case 35666:
						return ni;
					case 35674:
						return ri;
					case 35675:
						return ii;
					case 35676:
						return ai;
					case 5124:
					case 35670:
						return Jr;
					case 35667:
					case 35671:
						return Qr;
					case 35668:
					case 35672:
						return Kr;
					case 35669:
					case 35673:
						return $r;
					case 35678:
					case 36198:
					case 36298:
					case 36306:
					case 35682:
						return oi;
					case 35680:
					case 36300:
					case 36308:
					case 36293:
						return si;
				}
			})(e.type));
	}
	function ui(t) {
		(this.id = t), (this.seq = []), (this.map = {});
	}
	(li.prototype.updateCache = function (t) {
		var e = this.cache;
		t instanceof Float32Array &&
			e.length !== t.length &&
			(this.cache = new Float32Array(t.length)),
			Pr(e, t);
	}),
		(ui.prototype.setValue = function (t, e, n) {
			for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
				var o = r[i];
				o.setValue(t, e[o.id], n);
			}
		});
	var hi = /([\w\d_]+)(\])?(\[|\.)?/g;
	function di(t, e) {
		t.seq.push(e), (t.map[e.id] = e);
	}
	function pi(t, e, n) {
		var r = t.name,
			i = r.length;
		for (hi.lastIndex = 0; ; ) {
			var a = hi.exec(r),
				o = hi.lastIndex,
				s = a[1],
				c = ']' === a[2],
				l = a[3];
			if ((c && (s |= 0), void 0 === l || ('[' === l && o + 2 === i))) {
				di(n, void 0 === l ? new ci(s, t, e) : new li(s, t, e));
				break;
			}
			var u = n.map[s];
			void 0 === u && di(n, (u = new ui(s))), (n = u);
		}
	}
	function fi(t, e) {
		(this.seq = []), (this.map = {});
		for (var n = t.getProgramParameter(e, 35718), r = 0; r < n; ++r) {
			var i = t.getActiveUniform(e, r);
			pi(i, t.getUniformLocation(e, i.name), this);
		}
	}
	function mi(t, e, n) {
		var r = t.createShader(e);
		return t.shaderSource(r, n), t.compileShader(r), r;
	}
	(fi.prototype.setValue = function (t, e, n, r) {
		var i = this.map[e];
		void 0 !== i && i.setValue(t, n, r);
	}),
		(fi.prototype.setOptional = function (t, e, n) {
			var r = e[n];
			void 0 !== r && this.setValue(t, n, r);
		}),
		(fi.upload = function (t, e, n, r) {
			for (var i = 0, a = e.length; i !== a; ++i) {
				var o = e[i],
					s = n[o.id];
				!1 !== s.needsUpdate && o.setValue(t, s.value, r);
			}
		}),
		(fi.seqWithValue = function (t, e) {
			for (var n = [], r = 0, i = t.length; r !== i; ++r) {
				var a = t[r];
				a.id in e && n.push(a);
			}
			return n;
		});
	var vi = 0;
	function gi(t) {
		switch (t) {
			case q:
				return ['Linear', '( value )'];
			case X:
				return ['sRGB', '( value )'];
			case Z:
				return ['RGBE', '( value )'];
			case J:
				return ['RGBM', '( value, 7.0 )'];
			case Q:
				return ['RGBM', '( value, 16.0 )'];
			case K:
				return ['RGBD', '( value, 256.0 )'];
			case Y:
				return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];
			case 3003:
				return ['LogLuv', '( value )'];
			default:
				return (
					console.warn('THREE.WebGLProgram: Unsupported encoding:', t),
					['Linear', '( value )']
				);
		}
	}
	function yi(t, e, n) {
		var r = t.getShaderParameter(e, 35713),
			i = t.getShaderInfoLog(e).trim();
		return r && '' === i
			? ''
			: 'THREE.WebGLShader: gl.getShaderInfoLog() ' +
					n +
					'\n' +
					i +
					(function (t) {
						for (var e = t.split('\n'), n = 0; n < e.length; n++)
							e[n] = n + 1 + ': ' + e[n];
						return e.join('\n');
					})(t.getShaderSource(e));
	}
	function xi(t, e) {
		var n = gi(e);
		return (
			'vec4 ' +
			t +
			'( vec4 value ) { return ' +
			n[0] +
			'ToLinear' +
			n[1] +
			'; }'
		);
	}
	function _i(t, e) {
		var n;
		switch (e) {
			case 1:
				n = 'Linear';
				break;
			case 2:
				n = 'Reinhard';
				break;
			case 3:
				n = 'OptimizedCineon';
				break;
			case 4:
				n = 'ACESFilmic';
				break;
			case 5:
				n = 'Custom';
				break;
			default:
				console.warn('THREE.WebGLProgram: Unsupported toneMapping:', e),
					(n = 'Linear');
		}
		return (
			'vec3 ' + t + '( vec3 color ) { return ' + n + 'ToneMapping( color ); }'
		);
	}
	function bi(t) {
		return '' !== t;
	}
	function wi(t, e) {
		return t
			.replace(/NUM_DIR_LIGHTS/g, e.numDirLights)
			.replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights)
			.replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights)
			.replace(/NUM_POINT_LIGHTS/g, e.numPointLights)
			.replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
			.replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows)
			.replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows)
			.replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
	}
	function Mi(t, e) {
		return t
			.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes)
			.replace(
				/UNION_CLIPPING_PLANES/g,
				e.numClippingPlanes - e.numClipIntersection
			);
	}
	var Si = /^[ \t]*#include +<([\w\d./]+)>/gm;
	function Ti(t) {
		return t.replace(Si, Ei);
	}
	function Ei(t, e) {
		var n = er[e];
		if (void 0 === n) throw new Error('Can not resolve #include <' + e + '>');
		return Ti(n);
	}
	var Ai =
			/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
		Li =
			/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
	function Ri(t) {
		return t.replace(Li, Pi).replace(Ai, Ci);
	}
	function Ci(t, e, n, r) {
		return (
			console.warn(
				'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.'
			),
			Pi(t, e, n, r)
		);
	}
	function Pi(t, e, n, r) {
		for (var i = '', a = parseInt(e); a < parseInt(n); a++)
			i += r
				.replace(/\[\s*i\s*\]/g, '[ ' + a + ' ]')
				.replace(/UNROLLED_LOOP_INDEX/g, a);
		return i;
	}
	function Ii(t) {
		var e =
			'precision ' +
			t.precision +
			' float;\nprecision ' +
			t.precision +
			' int;';
		return (
			'highp' === t.precision
				? (e += '\n#define HIGH_PRECISION')
				: 'mediump' === t.precision
				? (e += '\n#define MEDIUM_PRECISION')
				: 'lowp' === t.precision && (e += '\n#define LOW_PRECISION'),
			e
		);
	}
	function Di(t, e, n, a) {
		var o,
			l,
			u,
			h,
			d,
			p = t.getContext(),
			f = n.defines,
			m = n.vertexShader,
			v = n.fragmentShader,
			g = (function (t) {
				var e = 'SHADOWMAP_TYPE_BASIC';
				return (
					1 === t.shadowMapType
						? (e = 'SHADOWMAP_TYPE_PCF')
						: 2 === t.shadowMapType
						? (e = 'SHADOWMAP_TYPE_PCF_SOFT')
						: 3 === t.shadowMapType && (e = 'SHADOWMAP_TYPE_VSM'),
					e
				);
			})(n),
			y = (function (t) {
				var e = 'ENVMAP_TYPE_CUBE';
				if (t.envMap)
					switch (t.envMapMode) {
						case r:
						case i:
							e = 'ENVMAP_TYPE_CUBE';
							break;
						case s:
						case c:
							e = 'ENVMAP_TYPE_CUBE_UV';
					}
				return e;
			})(n),
			x = (function (t) {
				var e = 'ENVMAP_MODE_REFLECTION';
				if (t.envMap)
					switch (t.envMapMode) {
						case i:
						case c:
							e = 'ENVMAP_MODE_REFRACTION';
					}
				return e;
			})(n),
			_ = (function (t) {
				var e = 'ENVMAP_BLENDING_NONE';
				if (t.envMap)
					switch (t.combine) {
						case 0:
							e = 'ENVMAP_BLENDING_MULTIPLY';
							break;
						case 1:
							e = 'ENVMAP_BLENDING_MIX';
							break;
						case 2:
							e = 'ENVMAP_BLENDING_ADD';
					}
				return e;
			})(n),
			b = t.gammaFactor > 0 ? t.gammaFactor : 1,
			w = n.isWebGL2
				? ''
				: (function (t) {
						return [
							t.extensionDerivatives ||
							t.envMapCubeUV ||
							t.bumpMap ||
							t.tangentSpaceNormalMap ||
							t.clearcoatNormalMap ||
							t.flatShading ||
							'physical' === t.shaderID
								? '#extension GL_OES_standard_derivatives : enable'
								: '',
							(t.extensionFragDepth || t.logarithmicDepthBuffer) &&
							t.rendererExtensionFragDepth
								? '#extension GL_EXT_frag_depth : enable'
								: '',
							t.extensionDrawBuffers && t.rendererExtensionDrawBuffers
								? '#extension GL_EXT_draw_buffers : require'
								: '',
							(t.extensionShaderTextureLOD || t.envMap) &&
							t.rendererExtensionShaderTextureLod
								? '#extension GL_EXT_shader_texture_lod : enable'
								: '',
						]
							.filter(bi)
							.join('\n');
				  })(n),
			M = (function (t) {
				var e = [];
				for (var n in t) {
					var r = t[n];
					!1 !== r && e.push('#define ' + n + ' ' + r);
				}
				return e.join('\n');
			})(f),
			S = p.createProgram(),
			T = n.glslVersion ? '#version ' + n.glslVersion + '\n' : '';
		n.isRawShaderMaterial
			? ((o = [M].filter(bi).join('\n')).length > 0 && (o += '\n'),
			  (l = [w, M].filter(bi).join('\n')).length > 0 && (l += '\n'))
			: ((o = [
					Ii(n),
					'#define SHADER_NAME ' + n.shaderName,
					M,
					n.instancing ? '#define USE_INSTANCING' : '',
					n.instancingColor ? '#define USE_INSTANCING_COLOR' : '',
					n.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',
					'#define GAMMA_FACTOR ' + b,
					'#define MAX_BONES ' + n.maxBones,
					n.useFog && n.fog ? '#define USE_FOG' : '',
					n.useFog && n.fogExp2 ? '#define FOG_EXP2' : '',
					n.map ? '#define USE_MAP' : '',
					n.envMap ? '#define USE_ENVMAP' : '',
					n.envMap ? '#define ' + x : '',
					n.lightMap ? '#define USE_LIGHTMAP' : '',
					n.aoMap ? '#define USE_AOMAP' : '',
					n.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
					n.bumpMap ? '#define USE_BUMPMAP' : '',
					n.normalMap ? '#define USE_NORMALMAP' : '',
					n.normalMap && n.objectSpaceNormalMap
						? '#define OBJECTSPACE_NORMALMAP'
						: '',
					n.normalMap && n.tangentSpaceNormalMap
						? '#define TANGENTSPACE_NORMALMAP'
						: '',
					n.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
					n.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',
					n.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
					n.displacementMap && n.supportsVertexTextures
						? '#define USE_DISPLACEMENTMAP'
						: '',
					n.specularMap ? '#define USE_SPECULARMAP' : '',
					n.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
					n.metalnessMap ? '#define USE_METALNESSMAP' : '',
					n.alphaMap ? '#define USE_ALPHAMAP' : '',
					n.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',
					n.vertexTangents ? '#define USE_TANGENT' : '',
					n.vertexColors ? '#define USE_COLOR' : '',
					n.vertexUvs ? '#define USE_UV' : '',
					n.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',
					n.flatShading ? '#define FLAT_SHADED' : '',
					n.skinning ? '#define USE_SKINNING' : '',
					n.useVertexTexture ? '#define BONE_TEXTURE' : '',
					n.morphTargets ? '#define USE_MORPHTARGETS' : '',
					n.morphNormals && !1 === n.flatShading
						? '#define USE_MORPHNORMALS'
						: '',
					n.doubleSided ? '#define DOUBLE_SIDED' : '',
					n.flipSided ? '#define FLIP_SIDED' : '',
					n.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
					n.shadowMapEnabled ? '#define ' + g : '',
					n.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',
					n.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
					n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
						? '#define USE_LOGDEPTHBUF_EXT'
						: '',
					'uniform mat4 modelMatrix;',
					'uniform mat4 modelViewMatrix;',
					'uniform mat4 projectionMatrix;',
					'uniform mat4 viewMatrix;',
					'uniform mat3 normalMatrix;',
					'uniform vec3 cameraPosition;',
					'uniform bool isOrthographic;',
					'#ifdef USE_INSTANCING',
					'\tattribute mat4 instanceMatrix;',
					'#endif',
					'#ifdef USE_INSTANCING_COLOR',
					'\tattribute vec3 instanceColor;',
					'#endif',
					'attribute vec3 position;',
					'attribute vec3 normal;',
					'attribute vec2 uv;',
					'#ifdef USE_TANGENT',
					'\tattribute vec4 tangent;',
					'#endif',
					'#ifdef USE_COLOR',
					'\tattribute vec3 color;',
					'#endif',
					'#ifdef USE_MORPHTARGETS',
					'\tattribute vec3 morphTarget0;',
					'\tattribute vec3 morphTarget1;',
					'\tattribute vec3 morphTarget2;',
					'\tattribute vec3 morphTarget3;',
					'\t#ifdef USE_MORPHNORMALS',
					'\t\tattribute vec3 morphNormal0;',
					'\t\tattribute vec3 morphNormal1;',
					'\t\tattribute vec3 morphNormal2;',
					'\t\tattribute vec3 morphNormal3;',
					'\t#else',
					'\t\tattribute vec3 morphTarget4;',
					'\t\tattribute vec3 morphTarget5;',
					'\t\tattribute vec3 morphTarget6;',
					'\t\tattribute vec3 morphTarget7;',
					'\t#endif',
					'#endif',
					'#ifdef USE_SKINNING',
					'\tattribute vec4 skinIndex;',
					'\tattribute vec4 skinWeight;',
					'#endif',
					'\n',
			  ]
					.filter(bi)
					.join('\n')),
			  (l = [
					w,
					Ii(n),
					'#define SHADER_NAME ' + n.shaderName,
					M,
					n.alphaTest
						? '#define ALPHATEST ' + n.alphaTest + (n.alphaTest % 1 ? '' : '.0')
						: '',
					'#define GAMMA_FACTOR ' + b,
					n.useFog && n.fog ? '#define USE_FOG' : '',
					n.useFog && n.fogExp2 ? '#define FOG_EXP2' : '',
					n.map ? '#define USE_MAP' : '',
					n.matcap ? '#define USE_MATCAP' : '',
					n.envMap ? '#define USE_ENVMAP' : '',
					n.envMap ? '#define ' + y : '',
					n.envMap ? '#define ' + x : '',
					n.envMap ? '#define ' + _ : '',
					n.lightMap ? '#define USE_LIGHTMAP' : '',
					n.aoMap ? '#define USE_AOMAP' : '',
					n.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
					n.bumpMap ? '#define USE_BUMPMAP' : '',
					n.normalMap ? '#define USE_NORMALMAP' : '',
					n.normalMap && n.objectSpaceNormalMap
						? '#define OBJECTSPACE_NORMALMAP'
						: '',
					n.normalMap && n.tangentSpaceNormalMap
						? '#define TANGENTSPACE_NORMALMAP'
						: '',
					n.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
					n.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',
					n.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
					n.specularMap ? '#define USE_SPECULARMAP' : '',
					n.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
					n.metalnessMap ? '#define USE_METALNESSMAP' : '',
					n.alphaMap ? '#define USE_ALPHAMAP' : '',
					n.sheen ? '#define USE_SHEEN' : '',
					n.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',
					n.vertexTangents ? '#define USE_TANGENT' : '',
					n.vertexColors || n.instancingColor ? '#define USE_COLOR' : '',
					n.vertexUvs ? '#define USE_UV' : '',
					n.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',
					n.gradientMap ? '#define USE_GRADIENTMAP' : '',
					n.flatShading ? '#define FLAT_SHADED' : '',
					n.doubleSided ? '#define DOUBLE_SIDED' : '',
					n.flipSided ? '#define FLIP_SIDED' : '',
					n.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
					n.shadowMapEnabled ? '#define ' + g : '',
					n.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',
					n.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',
					n.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
					n.logarithmicDepthBuffer && n.rendererExtensionFragDepth
						? '#define USE_LOGDEPTHBUF_EXT'
						: '',
					(n.extensionShaderTextureLOD || n.envMap) &&
					n.rendererExtensionShaderTextureLod
						? '#define TEXTURE_LOD_EXT'
						: '',
					'uniform mat4 viewMatrix;',
					'uniform vec3 cameraPosition;',
					'uniform bool isOrthographic;',
					0 !== n.toneMapping ? '#define TONE_MAPPING' : '',
					0 !== n.toneMapping ? er.tonemapping_pars_fragment : '',
					0 !== n.toneMapping ? _i('toneMapping', n.toneMapping) : '',
					n.dithering ? '#define DITHERING' : '',
					er.encodings_pars_fragment,
					n.map ? xi('mapTexelToLinear', n.mapEncoding) : '',
					n.matcap ? xi('matcapTexelToLinear', n.matcapEncoding) : '',
					n.envMap ? xi('envMapTexelToLinear', n.envMapEncoding) : '',
					n.emissiveMap
						? xi('emissiveMapTexelToLinear', n.emissiveMapEncoding)
						: '',
					n.lightMap ? xi('lightMapTexelToLinear', n.lightMapEncoding) : '',
					((u = 'linearToOutputTexel'),
					(h = n.outputEncoding),
					(d = gi(h)),
					'vec4 ' +
						u +
						'( vec4 value ) { return LinearTo' +
						d[0] +
						d[1] +
						'; }'),
					n.depthPacking ? '#define DEPTH_PACKING ' + n.depthPacking : '',
					'\n',
			  ]
					.filter(bi)
					.join('\n'))),
			(m = Mi((m = wi((m = Ti(m)), n)), n)),
			(v = Mi((v = wi((v = Ti(v)), n)), n)),
			(m = Ri(m)),
			(v = Ri(v)),
			n.isWebGL2 &&
				!0 !== n.isRawShaderMaterial &&
				((T = '#version 300 es\n'),
				(o =
					[
						'#define attribute in',
						'#define varying out',
						'#define texture2D texture',
					].join('\n') +
					'\n' +
					o),
				(l =
					[
						'#define varying in',
						n.glslVersion === nt ? '' : 'out highp vec4 pc_fragColor;',
						n.glslVersion === nt ? '' : '#define gl_FragColor pc_fragColor',
						'#define gl_FragDepthEXT gl_FragDepth',
						'#define texture2D texture',
						'#define textureCube texture',
						'#define texture2DProj textureProj',
						'#define texture2DLodEXT textureLod',
						'#define texture2DProjLodEXT textureProjLod',
						'#define textureCubeLodEXT textureLod',
						'#define texture2DGradEXT textureGrad',
						'#define texture2DProjGradEXT textureProjGrad',
						'#define textureCubeGradEXT textureGrad',
					].join('\n') +
					'\n' +
					l));
		var E,
			A,
			L = T + l + v,
			R = mi(p, 35633, T + o + m),
			C = mi(p, 35632, L);
		if (
			(p.attachShader(S, R),
			p.attachShader(S, C),
			void 0 !== n.index0AttributeName
				? p.bindAttribLocation(S, 0, n.index0AttributeName)
				: !0 === n.morphTargets && p.bindAttribLocation(S, 0, 'position'),
			p.linkProgram(S),
			t.debug.checkShaderErrors)
		) {
			var P = p.getProgramInfoLog(S).trim(),
				I = p.getShaderInfoLog(R).trim(),
				D = p.getShaderInfoLog(C).trim(),
				N = !0,
				O = !0;
			if (!1 === p.getProgramParameter(S, 35714)) {
				N = !1;
				var B = yi(p, R, 'vertex'),
					z = yi(p, C, 'fragment');
				console.error(
					'THREE.WebGLProgram: shader error: ',
					p.getError(),
					'35715',
					p.getProgramParameter(S, 35715),
					'gl.getProgramInfoLog',
					P,
					B,
					z
				);
			} else
				'' !== P
					? console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', P)
					: ('' !== I && '' !== D) || (O = !1);
			O &&
				(this.diagnostics = {
					runnable: N,
					programLog: P,
					vertexShader: { log: I, prefix: o },
					fragmentShader: { log: D, prefix: l },
				});
		}
		return (
			p.deleteShader(R),
			p.deleteShader(C),
			(this.getUniforms = function () {
				return void 0 === E && (E = new fi(p, S)), E;
			}),
			(this.getAttributes = function () {
				return (
					void 0 === A &&
						(A = (function (t, e) {
							for (
								var n = {}, r = t.getProgramParameter(e, 35721), i = 0;
								i < r;
								i++
							) {
								var a = t.getActiveAttrib(e, i).name;
								n[a] = t.getAttribLocation(e, a);
							}
							return n;
						})(p, S)),
					A
				);
			}),
			(this.destroy = function () {
				a.releaseStatesOfProgram(this),
					p.deleteProgram(S),
					(this.program = void 0);
			}),
			(this.name = n.shaderName),
			(this.id = vi++),
			(this.cacheKey = e),
			(this.usedTimes = 1),
			(this.program = S),
			(this.vertexShader = R),
			(this.fragmentShader = C),
			this
		);
	}
	function Ni(t, e, n, r, i, a) {
		var o = [],
			l = r.isWebGL2,
			u = r.logarithmicDepthBuffer,
			h = r.floatVertexTextures,
			d = r.maxVertexUniforms,
			p = r.vertexTextures,
			f = r.precision,
			m = {
				MeshDepthMaterial: 'depth',
				MeshDistanceMaterial: 'distanceRGBA',
				MeshNormalMaterial: 'normal',
				MeshBasicMaterial: 'basic',
				MeshLambertMaterial: 'lambert',
				MeshPhongMaterial: 'phong',
				MeshToonMaterial: 'toon',
				MeshStandardMaterial: 'physical',
				MeshPhysicalMaterial: 'physical',
				MeshMatcapMaterial: 'matcap',
				LineBasicMaterial: 'basic',
				LineDashedMaterial: 'dashed',
				PointsMaterial: 'points',
				ShadowMaterial: 'shadow',
				SpriteMaterial: 'sprite',
			},
			v = [
				'precision',
				'isWebGL2',
				'supportsVertexTextures',
				'outputEncoding',
				'instancing',
				'instancingColor',
				'map',
				'mapEncoding',
				'matcap',
				'matcapEncoding',
				'envMap',
				'envMapMode',
				'envMapEncoding',
				'envMapCubeUV',
				'lightMap',
				'lightMapEncoding',
				'aoMap',
				'emissiveMap',
				'emissiveMapEncoding',
				'bumpMap',
				'normalMap',
				'objectSpaceNormalMap',
				'tangentSpaceNormalMap',
				'clearcoatMap',
				'clearcoatRoughnessMap',
				'clearcoatNormalMap',
				'displacementMap',
				'specularMap',
				'roughnessMap',
				'metalnessMap',
				'gradientMap',
				'alphaMap',
				'combine',
				'vertexColors',
				'vertexTangents',
				'vertexUvs',
				'uvsVertexOnly',
				'fog',
				'useFog',
				'fogExp2',
				'flatShading',
				'sizeAttenuation',
				'logarithmicDepthBuffer',
				'skinning',
				'maxBones',
				'useVertexTexture',
				'morphTargets',
				'morphNormals',
				'maxMorphTargets',
				'maxMorphNormals',
				'premultipliedAlpha',
				'numDirLights',
				'numPointLights',
				'numSpotLights',
				'numHemiLights',
				'numRectAreaLights',
				'numDirLightShadows',
				'numPointLightShadows',
				'numSpotLightShadows',
				'shadowMapEnabled',
				'shadowMapType',
				'toneMapping',
				'physicallyCorrectLights',
				'alphaTest',
				'doubleSided',
				'flipSided',
				'numClippingPlanes',
				'numClipIntersection',
				'depthPacking',
				'dithering',
				'sheen',
				'transmissionMap',
			];
		function g(t) {
			var e;
			return (
				t
					? t.isTexture
						? (e = t.encoding)
						: t.isWebGLRenderTarget &&
						  (console.warn(
								"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."
						  ),
						  (e = t.texture.encoding))
					: (e = q),
				e
			);
		}
		return {
			getParameters: function (i, o, v, y, x) {
				var _,
					b,
					w = y.fog,
					M = i.isMeshStandardMaterial ? y.environment : null,
					S = e.get(i.envMap || M),
					T = m[i.type],
					E = x.isSkinnedMesh
						? (function (t) {
								var e = t.skeleton.bones;
								if (h) return 1024;
								var n = d,
									r = Math.floor((n - 20) / 4),
									i = Math.min(r, e.length);
								return i < e.length
									? (console.warn(
											'THREE.WebGLRenderer: Skeleton has ' +
												e.length +
												' bones. This GPU supports ' +
												i +
												'.'
									  ),
									  0)
									: i;
						  })(x)
						: 0;
				if (
					(null !== i.precision &&
						(f = r.getMaxPrecision(i.precision)) !== i.precision &&
						console.warn(
							'THREE.WebGLProgram.getParameters:',
							i.precision,
							'not supported, using',
							f,
							'instead.'
						),
					T)
				) {
					var A = rr[T];
					(_ = A.vertexShader), (b = A.fragmentShader);
				} else (_ = i.vertexShader), (b = i.fragmentShader);
				var L = t.getRenderTarget();
				return {
					isWebGL2: l,
					shaderID: T,
					shaderName: i.type,
					vertexShader: _,
					fragmentShader: b,
					defines: i.defines,
					isRawShaderMaterial: !0 === i.isRawShaderMaterial,
					glslVersion: i.glslVersion,
					precision: f,
					instancing: !0 === x.isInstancedMesh,
					instancingColor: !0 === x.isInstancedMesh && null !== x.instanceColor,
					supportsVertexTextures: p,
					outputEncoding: null !== L ? g(L.texture) : t.outputEncoding,
					map: !!i.map,
					mapEncoding: g(i.map),
					matcap: !!i.matcap,
					matcapEncoding: g(i.matcap),
					envMap: !!S,
					envMapMode: S && S.mapping,
					envMapEncoding: g(S),
					envMapCubeUV: !!S && (S.mapping === s || S.mapping === c),
					lightMap: !!i.lightMap,
					lightMapEncoding: g(i.lightMap),
					aoMap: !!i.aoMap,
					emissiveMap: !!i.emissiveMap,
					emissiveMapEncoding: g(i.emissiveMap),
					bumpMap: !!i.bumpMap,
					normalMap: !!i.normalMap,
					objectSpaceNormalMap: 1 === i.normalMapType,
					tangentSpaceNormalMap: 0 === i.normalMapType,
					clearcoatMap: !!i.clearcoatMap,
					clearcoatRoughnessMap: !!i.clearcoatRoughnessMap,
					clearcoatNormalMap: !!i.clearcoatNormalMap,
					displacementMap: !!i.displacementMap,
					roughnessMap: !!i.roughnessMap,
					metalnessMap: !!i.metalnessMap,
					specularMap: !!i.specularMap,
					alphaMap: !!i.alphaMap,
					gradientMap: !!i.gradientMap,
					sheen: !!i.sheen,
					transmissionMap: !!i.transmissionMap,
					combine: i.combine,
					vertexTangents: i.normalMap && i.vertexTangents,
					vertexColors: i.vertexColors,
					vertexUvs: !!(
						i.map ||
						i.bumpMap ||
						i.normalMap ||
						i.specularMap ||
						i.alphaMap ||
						i.emissiveMap ||
						i.roughnessMap ||
						i.metalnessMap ||
						i.clearcoatMap ||
						i.clearcoatRoughnessMap ||
						i.clearcoatNormalMap ||
						i.displacementMap ||
						i.transmissionMap
					),
					uvsVertexOnly: !(
						i.map ||
						i.bumpMap ||
						i.normalMap ||
						i.specularMap ||
						i.alphaMap ||
						i.emissiveMap ||
						i.roughnessMap ||
						i.metalnessMap ||
						i.clearcoatNormalMap ||
						i.transmissionMap ||
						!i.displacementMap
					),
					fog: !!w,
					useFog: i.fog,
					fogExp2: w && w.isFogExp2,
					flatShading: i.flatShading,
					sizeAttenuation: i.sizeAttenuation,
					logarithmicDepthBuffer: u,
					skinning: i.skinning && E > 0,
					maxBones: E,
					useVertexTexture: h,
					morphTargets: i.morphTargets,
					morphNormals: i.morphNormals,
					maxMorphTargets: t.maxMorphTargets,
					maxMorphNormals: t.maxMorphNormals,
					numDirLights: o.directional.length,
					numPointLights: o.point.length,
					numSpotLights: o.spot.length,
					numRectAreaLights: o.rectArea.length,
					numHemiLights: o.hemi.length,
					numDirLightShadows: o.directionalShadowMap.length,
					numPointLightShadows: o.pointShadowMap.length,
					numSpotLightShadows: o.spotShadowMap.length,
					numClippingPlanes: a.numPlanes,
					numClipIntersection: a.numIntersection,
					dithering: i.dithering,
					shadowMapEnabled: t.shadowMap.enabled && v.length > 0,
					shadowMapType: t.shadowMap.type,
					toneMapping: i.toneMapped ? t.toneMapping : 0,
					physicallyCorrectLights: t.physicallyCorrectLights,
					premultipliedAlpha: i.premultipliedAlpha,
					alphaTest: i.alphaTest,
					doubleSided: 2 === i.side,
					flipSided: 1 === i.side,
					depthPacking: void 0 !== i.depthPacking && i.depthPacking,
					index0AttributeName: i.index0AttributeName,
					extensionDerivatives: i.extensions && i.extensions.derivatives,
					extensionFragDepth: i.extensions && i.extensions.fragDepth,
					extensionDrawBuffers: i.extensions && i.extensions.drawBuffers,
					extensionShaderTextureLOD:
						i.extensions && i.extensions.shaderTextureLOD,
					rendererExtensionFragDepth: l || n.has('EXT_frag_depth'),
					rendererExtensionDrawBuffers: l || n.has('WEBGL_draw_buffers'),
					rendererExtensionShaderTextureLod:
						l || n.has('EXT_shader_texture_lod'),
					customProgramCacheKey: i.customProgramCacheKey(),
				};
			},
			getProgramCacheKey: function (e) {
				var n = [];
				if (
					(e.shaderID
						? n.push(e.shaderID)
						: (n.push(e.fragmentShader), n.push(e.vertexShader)),
					void 0 !== e.defines)
				)
					for (var r in e.defines) n.push(r), n.push(e.defines[r]);
				if (!1 === e.isRawShaderMaterial) {
					for (var i = 0; i < v.length; i++) n.push(e[v[i]]);
					n.push(t.outputEncoding), n.push(t.gammaFactor);
				}
				return n.push(e.customProgramCacheKey), n.join();
			},
			getUniforms: function (t) {
				var e,
					n = m[t.type];
				if (n) {
					var r = rr[n];
					e = Un.clone(r.uniforms);
				} else e = t.uniforms;
				return e;
			},
			acquireProgram: function (e, n) {
				for (var r, a = 0, s = o.length; a < s; a++) {
					var c = o[a];
					if (c.cacheKey === n) {
						++(r = c).usedTimes;
						break;
					}
				}
				return void 0 === r && ((r = new Di(t, n, e, i)), o.push(r)), r;
			},
			releaseProgram: function (t) {
				if (0 == --t.usedTimes) {
					var e = o.indexOf(t);
					(o[e] = o[o.length - 1]), o.pop(), t.destroy();
				}
			},
			programs: o,
		};
	}
	function Oi() {
		var t = new WeakMap();
		return {
			get: function (e) {
				var n = t.get(e);
				return void 0 === n && ((n = {}), t.set(e, n)), n;
			},
			remove: function (e) {
				t.delete(e);
			},
			update: function (e, n, r) {
				t.get(e)[n] = r;
			},
			dispose: function () {
				t = new WeakMap();
			},
		};
	}
	function Bi(t, e) {
		return t.groupOrder !== e.groupOrder
			? t.groupOrder - e.groupOrder
			: t.renderOrder !== e.renderOrder
			? t.renderOrder - e.renderOrder
			: t.program !== e.program
			? t.program.id - e.program.id
			: t.material.id !== e.material.id
			? t.material.id - e.material.id
			: t.z !== e.z
			? t.z - e.z
			: t.id - e.id;
	}
	function zi(t, e) {
		return t.groupOrder !== e.groupOrder
			? t.groupOrder - e.groupOrder
			: t.renderOrder !== e.renderOrder
			? t.renderOrder - e.renderOrder
			: t.z !== e.z
			? e.z - t.z
			: t.id - e.id;
	}
	function Gi(t) {
		var e = [],
			n = 0,
			r = [],
			i = [],
			a = { id: -1 };
		function o(r, i, o, s, c, l) {
			var u = e[n],
				h = t.get(o);
			return (
				void 0 === u
					? ((u = {
							id: r.id,
							object: r,
							geometry: i,
							material: o,
							program: h.program || a,
							groupOrder: s,
							renderOrder: r.renderOrder,
							z: c,
							group: l,
					  }),
					  (e[n] = u))
					: ((u.id = r.id),
					  (u.object = r),
					  (u.geometry = i),
					  (u.material = o),
					  (u.program = h.program || a),
					  (u.groupOrder = s),
					  (u.renderOrder = r.renderOrder),
					  (u.z = c),
					  (u.group = l)),
				n++,
				u
			);
		}
		return {
			opaque: r,
			transparent: i,
			init: function () {
				(n = 0), (r.length = 0), (i.length = 0);
			},
			push: function (t, e, n, a, s, c) {
				var l = o(t, e, n, a, s, c);
				(!0 === n.transparent ? i : r).push(l);
			},
			unshift: function (t, e, n, a, s, c) {
				var l = o(t, e, n, a, s, c);
				(!0 === n.transparent ? i : r).unshift(l);
			},
			finish: function () {
				for (var t = n, r = e.length; t < r; t++) {
					var i = e[t];
					if (null === i.id) break;
					(i.id = null),
						(i.object = null),
						(i.geometry = null),
						(i.material = null),
						(i.program = null),
						(i.group = null);
				}
			},
			sort: function (t, e) {
				r.length > 1 && r.sort(t || Bi), i.length > 1 && i.sort(e || zi);
			},
		};
	}
	function Fi(t) {
		var e = new WeakMap();
		return {
			get: function (n, r) {
				var i,
					a = e.get(n);
				return (
					void 0 === a
						? ((i = new Gi(t)), e.set(n, new WeakMap()), e.get(n).set(r, i))
						: void 0 === (i = a.get(r)) && ((i = new Gi(t)), a.set(r, i)),
					i
				);
			},
			dispose: function () {
				e = new WeakMap();
			},
		};
	}
	function Ui() {
		var t = {};
		return {
			get: function (e) {
				if (void 0 !== t[e.id]) return t[e.id];
				var n;
				switch (e.type) {
					case 'DirectionalLight':
						n = { direction: new wt(), color: new Ve() };
						break;
					case 'SpotLight':
						n = {
							position: new wt(),
							direction: new wt(),
							color: new Ve(),
							distance: 0,
							coneCos: 0,
							penumbraCos: 0,
							decay: 0,
						};
						break;
					case 'PointLight':
						n = { position: new wt(), color: new Ve(), distance: 0, decay: 0 };
						break;
					case 'HemisphereLight':
						n = {
							direction: new wt(),
							skyColor: new Ve(),
							groundColor: new Ve(),
						};
						break;
					case 'RectAreaLight':
						n = {
							color: new Ve(),
							position: new wt(),
							halfWidth: new wt(),
							halfHeight: new wt(),
						};
				}
				return (t[e.id] = n), n;
			},
		};
	}
	var Hi = 0;
	function ki(t, e) {
		return (e.castShadow ? 1 : 0) - (t.castShadow ? 1 : 0);
	}
	function Vi() {
		for (
			var t,
				e = new Ui(),
				n =
					((t = {}),
					{
						get: function (e) {
							if (void 0 !== t[e.id]) return t[e.id];
							var n;
							switch (e.type) {
								case 'DirectionalLight':
								case 'SpotLight':
									n = {
										shadowBias: 0,
										shadowNormalBias: 0,
										shadowRadius: 1,
										shadowMapSize: new pt(),
									};
									break;
								case 'PointLight':
									n = {
										shadowBias: 0,
										shadowNormalBias: 0,
										shadowRadius: 1,
										shadowMapSize: new pt(),
										shadowCameraNear: 1,
										shadowCameraFar: 1e3,
									};
							}
							return (t[e.id] = n), n;
						},
					}),
				r = {
					version: 0,
					hash: {
						directionalLength: -1,
						pointLength: -1,
						spotLength: -1,
						rectAreaLength: -1,
						hemiLength: -1,
						numDirectionalShadows: -1,
						numPointShadows: -1,
						numSpotShadows: -1,
					},
					ambient: [0, 0, 0],
					probe: [],
					directional: [],
					directionalShadow: [],
					directionalShadowMap: [],
					directionalShadowMatrix: [],
					spot: [],
					spotShadow: [],
					spotShadowMap: [],
					spotShadowMatrix: [],
					rectArea: [],
					rectAreaLTC1: null,
					rectAreaLTC2: null,
					point: [],
					pointShadow: [],
					pointShadowMap: [],
					pointShadowMatrix: [],
					hemi: [],
				},
				i = 0;
			i < 9;
			i++
		)
			r.probe.push(new wt());
		var a = new wt(),
			o = new Jt(),
			s = new Jt();
		return {
			setup: function (t, i, c) {
				for (var l = 0, u = 0, h = 0, d = 0; d < 9; d++)
					r.probe[d].set(0, 0, 0);
				var p = 0,
					f = 0,
					m = 0,
					v = 0,
					g = 0,
					y = 0,
					x = 0,
					_ = 0,
					b = c.matrixWorldInverse;
				t.sort(ki);
				for (var w = 0, M = t.length; w < M; w++) {
					var S = t[w],
						T = S.color,
						E = S.intensity,
						A = S.distance,
						L = S.shadow && S.shadow.map ? S.shadow.map.texture : null;
					if (S.isAmbientLight) (l += T.r * E), (u += T.g * E), (h += T.b * E);
					else if (S.isLightProbe)
						for (var R = 0; R < 9; R++)
							r.probe[R].addScaledVector(S.sh.coefficients[R], E);
					else if (S.isDirectionalLight) {
						var C = e.get(S);
						if (
							(C.color.copy(S.color).multiplyScalar(S.intensity),
							C.direction.setFromMatrixPosition(S.matrixWorld),
							a.setFromMatrixPosition(S.target.matrixWorld),
							C.direction.sub(a),
							C.direction.transformDirection(b),
							S.castShadow)
						) {
							var P = S.shadow,
								I = n.get(S);
							(I.shadowBias = P.bias),
								(I.shadowNormalBias = P.normalBias),
								(I.shadowRadius = P.radius),
								(I.shadowMapSize = P.mapSize),
								(r.directionalShadow[p] = I),
								(r.directionalShadowMap[p] = L),
								(r.directionalShadowMatrix[p] = S.shadow.matrix),
								y++;
						}
						(r.directional[p] = C), p++;
					} else if (S.isSpotLight) {
						var D = e.get(S);
						if (
							(D.position.setFromMatrixPosition(S.matrixWorld),
							D.position.applyMatrix4(b),
							D.color.copy(T).multiplyScalar(E),
							(D.distance = A),
							D.direction.setFromMatrixPosition(S.matrixWorld),
							a.setFromMatrixPosition(S.target.matrixWorld),
							D.direction.sub(a),
							D.direction.transformDirection(b),
							(D.coneCos = Math.cos(S.angle)),
							(D.penumbraCos = Math.cos(S.angle * (1 - S.penumbra))),
							(D.decay = S.decay),
							S.castShadow)
						) {
							var N = S.shadow,
								O = n.get(S);
							(O.shadowBias = N.bias),
								(O.shadowNormalBias = N.normalBias),
								(O.shadowRadius = N.radius),
								(O.shadowMapSize = N.mapSize),
								(r.spotShadow[m] = O),
								(r.spotShadowMap[m] = L),
								(r.spotShadowMatrix[m] = S.shadow.matrix),
								_++;
						}
						(r.spot[m] = D), m++;
					} else if (S.isRectAreaLight) {
						var B = e.get(S);
						B.color.copy(T).multiplyScalar(E),
							B.position.setFromMatrixPosition(S.matrixWorld),
							B.position.applyMatrix4(b),
							s.identity(),
							o.copy(S.matrixWorld),
							o.premultiply(b),
							s.extractRotation(o),
							B.halfWidth.set(0.5 * S.width, 0, 0),
							B.halfHeight.set(0, 0.5 * S.height, 0),
							B.halfWidth.applyMatrix4(s),
							B.halfHeight.applyMatrix4(s),
							(r.rectArea[v] = B),
							v++;
					} else if (S.isPointLight) {
						var z = e.get(S);
						if (
							(z.position.setFromMatrixPosition(S.matrixWorld),
							z.position.applyMatrix4(b),
							z.color.copy(S.color).multiplyScalar(S.intensity),
							(z.distance = S.distance),
							(z.decay = S.decay),
							S.castShadow)
						) {
							var G = S.shadow,
								F = n.get(S);
							(F.shadowBias = G.bias),
								(F.shadowNormalBias = G.normalBias),
								(F.shadowRadius = G.radius),
								(F.shadowMapSize = G.mapSize),
								(F.shadowCameraNear = G.camera.near),
								(F.shadowCameraFar = G.camera.far),
								(r.pointShadow[f] = F),
								(r.pointShadowMap[f] = L),
								(r.pointShadowMatrix[f] = S.shadow.matrix),
								x++;
						}
						(r.point[f] = z), f++;
					} else if (S.isHemisphereLight) {
						var U = e.get(S);
						U.direction.setFromMatrixPosition(S.matrixWorld),
							U.direction.transformDirection(b),
							U.direction.normalize(),
							U.skyColor.copy(S.color).multiplyScalar(E),
							U.groundColor.copy(S.groundColor).multiplyScalar(E),
							(r.hemi[g] = U),
							g++;
					}
				}
				v > 0 && ((r.rectAreaLTC1 = nr.LTC_1), (r.rectAreaLTC2 = nr.LTC_2)),
					(r.ambient[0] = l),
					(r.ambient[1] = u),
					(r.ambient[2] = h);
				var H = r.hash;
				(H.directionalLength === p &&
					H.pointLength === f &&
					H.spotLength === m &&
					H.rectAreaLength === v &&
					H.hemiLength === g &&
					H.numDirectionalShadows === y &&
					H.numPointShadows === x &&
					H.numSpotShadows === _) ||
					((r.directional.length = p),
					(r.spot.length = m),
					(r.rectArea.length = v),
					(r.point.length = f),
					(r.hemi.length = g),
					(r.directionalShadow.length = y),
					(r.directionalShadowMap.length = y),
					(r.pointShadow.length = x),
					(r.pointShadowMap.length = x),
					(r.spotShadow.length = _),
					(r.spotShadowMap.length = _),
					(r.directionalShadowMatrix.length = y),
					(r.pointShadowMatrix.length = x),
					(r.spotShadowMatrix.length = _),
					(H.directionalLength = p),
					(H.pointLength = f),
					(H.spotLength = m),
					(H.rectAreaLength = v),
					(H.hemiLength = g),
					(H.numDirectionalShadows = y),
					(H.numPointShadows = x),
					(H.numSpotShadows = _),
					(r.version = Hi++));
			},
			state: r,
		};
	}
	function Wi() {
		var t = new Vi(),
			e = [],
			n = [];
		return {
			init: function () {
				(e.length = 0), (n.length = 0);
			},
			state: { lightsArray: e, shadowsArray: n, lights: t },
			setupLights: function (r) {
				t.setup(e, n, r);
			},
			pushLight: function (t) {
				e.push(t);
			},
			pushShadow: function (t) {
				n.push(t);
			},
		};
	}
	function ji() {
		var t = new WeakMap();
		return {
			get: function (e, n) {
				var r;
				return (
					!1 === t.has(e)
						? ((r = new Wi()), t.set(e, new WeakMap()), t.get(e).set(n, r))
						: !1 === t.get(e).has(n)
						? ((r = new Wi()), t.get(e).set(n, r))
						: (r = t.get(e).get(n)),
					r
				);
			},
			dispose: function () {
				t = new WeakMap();
			},
		};
	}
	function qi(t) {
		qe.call(this),
			(this.type = 'MeshDepthMaterial'),
			(this.depthPacking = 3200),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.map = null),
			(this.alphaMap = null),
			(this.displacementMap = null),
			(this.displacementScale = 1),
			(this.displacementBias = 0),
			(this.wireframe = !1),
			(this.wireframeLinewidth = 1),
			(this.fog = !1),
			this.setValues(t);
	}
	function Xi(t) {
		qe.call(this),
			(this.type = 'MeshDistanceMaterial'),
			(this.referencePosition = new wt()),
			(this.nearDistance = 1),
			(this.farDistance = 1e3),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.map = null),
			(this.alphaMap = null),
			(this.displacementMap = null),
			(this.displacementScale = 1),
			(this.displacementBias = 0),
			(this.fog = !1),
			this.setValues(t);
	}
	(qi.prototype = Object.create(qe.prototype)),
		(qi.prototype.constructor = qi),
		(qi.prototype.isMeshDepthMaterial = !0),
		(qi.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				(this.depthPacking = t.depthPacking),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.map = t.map),
				(this.alphaMap = t.alphaMap),
				(this.displacementMap = t.displacementMap),
				(this.displacementScale = t.displacementScale),
				(this.displacementBias = t.displacementBias),
				(this.wireframe = t.wireframe),
				(this.wireframeLinewidth = t.wireframeLinewidth),
				this
			);
		}),
		(Xi.prototype = Object.create(qe.prototype)),
		(Xi.prototype.constructor = Xi),
		(Xi.prototype.isMeshDistanceMaterial = !0),
		(Xi.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				this.referencePosition.copy(t.referencePosition),
				(this.nearDistance = t.nearDistance),
				(this.farDistance = t.farDistance),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.map = t.map),
				(this.alphaMap = t.alphaMap),
				(this.displacementMap = t.displacementMap),
				(this.displacementScale = t.displacementScale),
				(this.displacementBias = t.displacementBias),
				this
			);
		});
	function Yi(t, e, n) {
		var r = new Qn(),
			i = new pt(),
			a = new pt(),
			o = new yt(),
			s = [],
			c = [],
			l = {},
			u = { 0: 1, 1: 0, 2: 2 },
			h = new Hn({
				defines: { SAMPLE_RATE: 2 / 8, HALF_SAMPLE_RATE: 1 / 8 },
				uniforms: {
					shadow_pass: { value: null },
					resolution: { value: new pt() },
					radius: { value: 4 },
				},
				vertexShader:
					'void main() {\n\tgl_Position = vec4( position, 1.0 );\n}',
				fragmentShader:
					'uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}',
			}),
			p = h.clone();
		p.defines.HORIZONAL_PASS = 1;
		var f = new vn();
		f.setAttribute(
			'position',
			new Je(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
		);
		var v = new Nn(f, h),
			g = this;
		function y(n, r) {
			var i = e.update(v);
			(h.uniforms.shadow_pass.value = n.map.texture),
				(h.uniforms.resolution.value = n.mapSize),
				(h.uniforms.radius.value = n.radius),
				t.setRenderTarget(n.mapPass),
				t.clear(),
				t.renderBufferDirect(r, null, i, h, v, null),
				(p.uniforms.shadow_pass.value = n.mapPass.texture),
				(p.uniforms.resolution.value = n.mapSize),
				(p.uniforms.radius.value = n.radius),
				t.setRenderTarget(n.map),
				t.clear(),
				t.renderBufferDirect(r, null, i, p, v, null);
		}
		function x(t, e, n) {
			var r = (t << 0) | (e << 1) | (n << 2),
				i = s[r];
			return (
				void 0 === i &&
					((i = new qi({ depthPacking: 3201, morphTargets: t, skinning: e })),
					(s[r] = i)),
				i
			);
		}
		function _(t, e, n) {
			var r = (t << 0) | (e << 1) | (n << 2),
				i = c[r];
			return (
				void 0 === i &&
					((i = new Xi({ morphTargets: t, skinning: e })), (c[r] = i)),
				i
			);
		}
		function b(e, n, r, i, a, o, s) {
			var c = null,
				h = x,
				d = e.customDepthMaterial;
			if (
				(!0 === i.isPointLight && ((h = _), (d = e.customDistanceMaterial)),
				void 0 === d)
			) {
				var p = !1;
				!0 === r.morphTargets &&
					(p =
						n.morphAttributes &&
						n.morphAttributes.position &&
						n.morphAttributes.position.length > 0);
				var f = !1;
				!0 === e.isSkinnedMesh &&
					(!0 === r.skinning
						? (f = !0)
						: console.warn(
								'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:',
								e
						  )),
					(c = h(p, f, !0 === e.isInstancedMesh));
			} else c = d;
			if (
				t.localClippingEnabled &&
				!0 === r.clipShadows &&
				0 !== r.clippingPlanes.length
			) {
				var m = c.uuid,
					v = r.uuid,
					g = l[m];
				void 0 === g && ((g = {}), (l[m] = g));
				var y = g[v];
				void 0 === y && ((y = c.clone()), (g[v] = y)), (c = y);
			}
			return (
				(c.visible = r.visible),
				(c.wireframe = r.wireframe),
				(c.side =
					3 === s
						? null !== r.shadowSide
							? r.shadowSide
							: r.side
						: null !== r.shadowSide
						? r.shadowSide
						: u[r.side]),
				(c.clipShadows = r.clipShadows),
				(c.clippingPlanes = r.clippingPlanes),
				(c.clipIntersection = r.clipIntersection),
				(c.wireframeLinewidth = r.wireframeLinewidth),
				(c.linewidth = r.linewidth),
				!0 === i.isPointLight &&
					!0 === c.isMeshDistanceMaterial &&
					(c.referencePosition.setFromMatrixPosition(i.matrixWorld),
					(c.nearDistance = a),
					(c.farDistance = o)),
				c
			);
		}
		function w(n, i, a, o, s) {
			if (!1 !== n.visible) {
				if (
					n.layers.test(i.layers) &&
					(n.isMesh || n.isLine || n.isPoints) &&
					(n.castShadow || (n.receiveShadow && 3 === s)) &&
					(!n.frustumCulled || r.intersectsObject(n))
				) {
					n.modelViewMatrix.multiplyMatrices(
						a.matrixWorldInverse,
						n.matrixWorld
					);
					var c = e.update(n),
						l = n.material;
					if (Array.isArray(l))
						for (var u = c.groups, h = 0, d = u.length; h < d; h++) {
							var p = u[h],
								f = l[p.materialIndex];
							if (f && f.visible) {
								var m = b(n, c, f, o, a.near, a.far, s);
								t.renderBufferDirect(a, null, c, m, n, p);
							}
						}
					else if (l.visible) {
						var v = b(n, c, l, o, a.near, a.far, s);
						t.renderBufferDirect(a, null, c, v, n, null);
					}
				}
				for (var g = n.children, y = 0, x = g.length; y < x; y++)
					w(g[y], i, a, o, s);
			}
		}
		(this.enabled = !1),
			(this.autoUpdate = !0),
			(this.needsUpdate = !1),
			(this.type = 1),
			(this.render = function (e, s, c) {
				if (
					!1 !== g.enabled &&
					(!1 !== g.autoUpdate || !1 !== g.needsUpdate) &&
					0 !== e.length
				) {
					var l = t.getRenderTarget(),
						u = t.getActiveCubeFace(),
						h = t.getActiveMipmapLevel(),
						p = t.state;
					p.setBlending(0),
						p.buffers.color.setClear(1, 1, 1, 1),
						p.buffers.depth.setTest(!0),
						p.setScissorTest(!1);
					for (var f = 0, v = e.length; f < v; f++) {
						var x = e[f],
							_ = x.shadow;
						if (void 0 !== _) {
							if (!1 !== _.autoUpdate || !1 !== _.needsUpdate) {
								i.copy(_.mapSize);
								var b = _.getFrameExtents();
								if (
									(i.multiply(b),
									a.copy(_.mapSize),
									(i.x > n || i.y > n) &&
										(i.x > n &&
											((a.x = Math.floor(n / b.x)),
											(i.x = a.x * b.x),
											(_.mapSize.x = a.x)),
										i.y > n &&
											((a.y = Math.floor(n / b.y)),
											(i.y = a.y * b.y),
											(_.mapSize.y = a.y))),
									null === _.map && !_.isPointLightShadow && 3 === this.type)
								) {
									var M = { minFilter: m, magFilter: m, format: T };
									(_.map = new xt(i.x, i.y, M)),
										(_.map.texture.name = x.name + '.shadowMap'),
										(_.mapPass = new xt(i.x, i.y, M)),
										_.camera.updateProjectionMatrix();
								}
								if (null === _.map) {
									var S = { minFilter: d, magFilter: d, format: T };
									(_.map = new xt(i.x, i.y, S)),
										(_.map.texture.name = x.name + '.shadowMap'),
										_.camera.updateProjectionMatrix();
								}
								t.setRenderTarget(_.map), t.clear();
								for (var E = _.getViewportCount(), A = 0; A < E; A++) {
									var L = _.getViewport(A);
									o.set(a.x * L.x, a.y * L.y, a.x * L.z, a.y * L.w),
										p.viewport(o),
										_.updateMatrices(x, A),
										(r = _.getFrustum()),
										w(s, c, _.camera, x, this.type);
								}
								_.isPointLightShadow || 3 !== this.type || y(_, c),
									(_.needsUpdate = !1);
							}
						} else console.warn('THREE.WebGLShadowMap:', x, 'has no shadow.');
					}
					(g.needsUpdate = !1), t.setRenderTarget(l, u, h);
				}
			});
	}
	function Zi(t, n, r) {
		var i,
			a,
			o = r.isWebGL2;
		var s = new (function () {
				var e = !1,
					n = new yt(),
					r = null,
					i = new yt(0, 0, 0, 0);
				return {
					setMask: function (n) {
						r === n || e || (t.colorMask(n, n, n, n), (r = n));
					},
					setLocked: function (t) {
						e = t;
					},
					setClear: function (e, r, a, o, s) {
						!0 === s && ((e *= o), (r *= o), (a *= o)),
							n.set(e, r, a, o),
							!1 === i.equals(n) && (t.clearColor(e, r, a, o), i.copy(n));
					},
					reset: function () {
						(e = !1), (r = null), i.set(-1, 0, 0, 0);
					},
				};
			})(),
			c = new (function () {
				var e = !1,
					n = null,
					r = null,
					i = null;
				return {
					setTest: function (t) {
						t ? B(2929) : z(2929);
					},
					setMask: function (r) {
						n === r || e || (t.depthMask(r), (n = r));
					},
					setFunc: function (e) {
						if (r !== e) {
							if (e)
								switch (e) {
									case 0:
										t.depthFunc(512);
										break;
									case 1:
										t.depthFunc(519);
										break;
									case 2:
										t.depthFunc(513);
										break;
									case 3:
										t.depthFunc(515);
										break;
									case 4:
										t.depthFunc(514);
										break;
									case 5:
										t.depthFunc(518);
										break;
									case 6:
										t.depthFunc(516);
										break;
									case 7:
										t.depthFunc(517);
										break;
									default:
										t.depthFunc(515);
								}
							else t.depthFunc(515);
							r = e;
						}
					},
					setLocked: function (t) {
						e = t;
					},
					setClear: function (e) {
						i !== e && (t.clearDepth(e), (i = e));
					},
					reset: function () {
						(e = !1), (n = null), (r = null), (i = null);
					},
				};
			})(),
			l = new (function () {
				var e = !1,
					n = null,
					r = null,
					i = null,
					a = null,
					o = null,
					s = null,
					c = null,
					l = null;
				return {
					setTest: function (t) {
						e || (t ? B(2960) : z(2960));
					},
					setMask: function (r) {
						n === r || e || (t.stencilMask(r), (n = r));
					},
					setFunc: function (e, n, o) {
						(r === e && i === n && a === o) ||
							(t.stencilFunc(e, n, o), (r = e), (i = n), (a = o));
					},
					setOp: function (e, n, r) {
						(o === e && s === n && c === r) ||
							(t.stencilOp(e, n, r), (o = e), (s = n), (c = r));
					},
					setLocked: function (t) {
						e = t;
					},
					setClear: function (e) {
						l !== e && (t.clearStencil(e), (l = e));
					},
					reset: function () {
						(e = !1),
							(n = null),
							(r = null),
							(i = null),
							(a = null),
							(o = null),
							(s = null),
							(c = null),
							(l = null);
					},
				};
			})(),
			u = {},
			h = null,
			d = null,
			p = null,
			f = null,
			m = null,
			v = null,
			g = null,
			y = null,
			x = null,
			_ = !1,
			b = null,
			w = null,
			M = null,
			S = null,
			T = null,
			E = t.getParameter(35661),
			A = !1,
			L = 0,
			R = t.getParameter(7938);
		-1 !== R.indexOf('WebGL')
			? ((L = parseFloat(/^WebGL\ ([0-9])/.exec(R)[1])), (A = L >= 1))
			: -1 !== R.indexOf('OpenGL ES') &&
			  ((L = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(R)[1])), (A = L >= 2));
		var C = null,
			P = {},
			I = new yt(),
			D = new yt();
		function N(e, n, r) {
			var i = new Uint8Array(4),
				a = t.createTexture();
			t.bindTexture(e, a),
				t.texParameteri(e, 10241, 9728),
				t.texParameteri(e, 10240, 9728);
			for (var o = 0; o < r; o++)
				t.texImage2D(n + o, 0, 6408, 1, 1, 0, 6408, 5121, i);
			return a;
		}
		var O = {};
		function B(e) {
			!0 !== u[e] && (t.enable(e), (u[e] = !0));
		}
		function z(e) {
			!1 !== u[e] && (t.disable(e), (u[e] = !1));
		}
		(O[3553] = N(3553, 3553, 1)),
			(O[34067] = N(34067, 34069, 6)),
			s.setClear(0, 0, 0, 1),
			c.setClear(1),
			l.setClear(0),
			B(2929),
			c.setFunc(3),
			k(!1),
			V(1),
			B(2884),
			H(0);
		var G = (((i = {})[100] = 32774), (i[101] = 32778), (i[102] = 32779), i);
		if (o) (G[103] = 32775), (G[104] = 32776);
		else {
			var F = n.get('EXT_blend_minmax');
			null !== F && ((G[103] = F.MIN_EXT), (G[104] = F.MAX_EXT));
		}
		var U =
			(((a = {})[200] = 0),
			(a[201] = 1),
			(a[202] = 768),
			(a[204] = 770),
			(a[210] = 776),
			(a[208] = 774),
			(a[206] = 772),
			(a[203] = 769),
			(a[205] = 771),
			(a[209] = 775),
			(a[207] = 773),
			a);
		function H(n, r, i, a, o, s, c, l) {
			if (0 !== n) {
				if ((d || (B(3042), (d = !0)), 5 === n))
					(o = o || r),
						(s = s || i),
						(c = c || a),
						(r === f && o === g) ||
							(t.blendEquationSeparate(G[r], G[o]), (f = r), (g = o)),
						(i === m && a === v && s === y && c === x) ||
							(t.blendFuncSeparate(U[i], U[a], U[s], U[c]),
							(m = i),
							(v = a),
							(y = s),
							(x = c)),
						(p = n),
						(_ = null);
				else if (n !== p || l !== _) {
					if (
						((f === e && g === e) || (t.blendEquation(32774), (f = e), (g = e)),
						l)
					)
						switch (n) {
							case 1:
								t.blendFuncSeparate(1, 771, 1, 771);
								break;
							case 2:
								t.blendFunc(1, 1);
								break;
							case 3:
								t.blendFuncSeparate(0, 0, 769, 771);
								break;
							case 4:
								t.blendFuncSeparate(0, 768, 0, 770);
								break;
							default:
								console.error('THREE.WebGLState: Invalid blending: ', n);
						}
					else
						switch (n) {
							case 1:
								t.blendFuncSeparate(770, 771, 1, 771);
								break;
							case 2:
								t.blendFunc(770, 1);
								break;
							case 3:
								t.blendFunc(0, 769);
								break;
							case 4:
								t.blendFunc(0, 768);
								break;
							default:
								console.error('THREE.WebGLState: Invalid blending: ', n);
						}
					(m = null), (v = null), (y = null), (x = null), (p = n), (_ = l);
				}
			} else d && (z(3042), (d = !1));
		}
		function k(e) {
			b !== e && (e ? t.frontFace(2304) : t.frontFace(2305), (b = e));
		}
		function V(e) {
			0 !== e
				? (B(2884),
				  e !== w &&
						(1 === e
							? t.cullFace(1029)
							: 2 === e
							? t.cullFace(1028)
							: t.cullFace(1032)))
				: z(2884),
				(w = e);
		}
		function W(e, n, r) {
			e
				? (B(32823),
				  (S === n && T === r) || (t.polygonOffset(n, r), (S = n), (T = r)))
				: z(32823);
		}
		function j(e) {
			void 0 === e && (e = 33984 + E - 1),
				C !== e && (t.activeTexture(e), (C = e));
		}
		return {
			buffers: { color: s, depth: c, stencil: l },
			enable: B,
			disable: z,
			useProgram: function (e) {
				return h !== e && (t.useProgram(e), (h = e), !0);
			},
			setBlending: H,
			setMaterial: function (t, e) {
				2 === t.side ? z(2884) : B(2884);
				var n = 1 === t.side;
				e && (n = !n),
					k(n),
					1 === t.blending && !1 === t.transparent
						? H(0)
						: H(
								t.blending,
								t.blendEquation,
								t.blendSrc,
								t.blendDst,
								t.blendEquationAlpha,
								t.blendSrcAlpha,
								t.blendDstAlpha,
								t.premultipliedAlpha
						  ),
					c.setFunc(t.depthFunc),
					c.setTest(t.depthTest),
					c.setMask(t.depthWrite),
					s.setMask(t.colorWrite);
				var r = t.stencilWrite;
				l.setTest(r),
					r &&
						(l.setMask(t.stencilWriteMask),
						l.setFunc(t.stencilFunc, t.stencilRef, t.stencilFuncMask),
						l.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)),
					W(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits);
			},
			setFlipSided: k,
			setCullFace: V,
			setLineWidth: function (e) {
				e !== M && (A && t.lineWidth(e), (M = e));
			},
			setPolygonOffset: W,
			setScissorTest: function (t) {
				t ? B(3089) : z(3089);
			},
			activeTexture: j,
			bindTexture: function (e, n) {
				null === C && j();
				var r = P[C];
				void 0 === r && ((r = { type: void 0, texture: void 0 }), (P[C] = r)),
					(r.type === e && r.texture === n) ||
						(t.bindTexture(e, n || O[e]), (r.type = e), (r.texture = n));
			},
			unbindTexture: function () {
				var e = P[C];
				void 0 !== e &&
					void 0 !== e.type &&
					(t.bindTexture(e.type, null),
					(e.type = void 0),
					(e.texture = void 0));
			},
			compressedTexImage2D: function () {
				try {
					t.compressedTexImage2D.apply(t, arguments);
				} catch (t) {
					console.error('THREE.WebGLState:', t);
				}
			},
			texImage2D: function () {
				try {
					t.texImage2D.apply(t, arguments);
				} catch (t) {
					console.error('THREE.WebGLState:', t);
				}
			},
			texImage3D: function () {
				try {
					t.texImage3D.apply(t, arguments);
				} catch (t) {
					console.error('THREE.WebGLState:', t);
				}
			},
			scissor: function (e) {
				!1 === I.equals(e) && (t.scissor(e.x, e.y, e.z, e.w), I.copy(e));
			},
			viewport: function (e) {
				!1 === D.equals(e) && (t.viewport(e.x, e.y, e.z, e.w), D.copy(e));
			},
			reset: function () {
				(u = {}),
					(C = null),
					(P = {}),
					(h = null),
					(p = null),
					(b = null),
					(w = null),
					s.reset(),
					c.reset(),
					l.reset();
			},
		};
	}
	function Ji(t, e, n, r, i, a, o) {
		var s,
			c,
			l,
			h = i.isWebGL2,
			v = i.maxTextures,
			g = i.maxCubemapSize,
			y = i.maxTextureSize,
			L = i.maxSamples,
			R = new WeakMap(),
			C = !1;
		try {
			C =
				'undefined' != typeof OffscreenCanvas &&
				null !== new OffscreenCanvas(1, 1).getContext('2d');
		} catch (t) {}
		function P(t, e) {
			return C
				? new OffscreenCanvas(t, e)
				: document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');
		}
		function I(t, e, n, r) {
			var i = 1;
			if (
				((t.width > r || t.height > r) && (i = r / Math.max(t.width, t.height)),
				i < 1 || !0 === e)
			) {
				if (
					('undefined' != typeof HTMLImageElement &&
						t instanceof HTMLImageElement) ||
					('undefined' != typeof HTMLCanvasElement &&
						t instanceof HTMLCanvasElement) ||
					('undefined' != typeof ImageBitmap && t instanceof ImageBitmap)
				) {
					var a = e ? st.floorPowerOfTwo : Math.floor,
						o = a(i * t.width),
						s = a(i * t.height);
					void 0 === l && (l = P(o, s));
					var c = n ? P(o, s) : l;
					return (
						(c.width = o),
						(c.height = s),
						c.getContext('2d').drawImage(t, 0, 0, o, s),
						console.warn(
							'THREE.WebGLRenderer: Texture has been resized from (' +
								t.width +
								'x' +
								t.height +
								') to (' +
								o +
								'x' +
								s +
								').'
						),
						c
					);
				}
				return (
					'data' in t &&
						console.warn(
							'THREE.WebGLRenderer: Image in DataTexture is too big (' +
								t.width +
								'x' +
								t.height +
								').'
						),
					t
				);
			}
			return t;
		}
		function D(t) {
			return st.isPowerOfTwo(t.width) && st.isPowerOfTwo(t.height);
		}
		function N(t, e) {
			return t.generateMipmaps && e && t.minFilter !== d && t.minFilter !== m;
		}
		function O(e, n, i, a) {
			t.generateMipmap(e),
				(r.get(n).__maxMipLevel = Math.log(Math.max(i, a)) * Math.LOG2E);
		}
		function B(n, r, i) {
			if (!1 === h) return r;
			if (null !== n) {
				if (void 0 !== t[n]) return t[n];
				console.warn(
					"THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
						n +
						"'"
				);
			}
			var a = r;
			return (
				6403 === r &&
					(5126 === i && (a = 33326),
					5131 === i && (a = 33325),
					5121 === i && (a = 33321)),
				6407 === r &&
					(5126 === i && (a = 34837),
					5131 === i && (a = 34843),
					5121 === i && (a = 32849)),
				6408 === r &&
					(5126 === i && (a = 34836),
					5131 === i && (a = 34842),
					5121 === i && (a = 32856)),
				(33325 !== a && 33326 !== a && 34842 !== a && 34836 !== a) ||
					e.get('EXT_color_buffer_float'),
				a
			);
		}
		function z(t) {
			return t === d || t === p || t === f ? 9728 : 9729;
		}
		function G(e) {
			var n = e.target;
			n.removeEventListener('dispose', G),
				(function (e) {
					var n = r.get(e);
					if (void 0 === n.__webglInit) return;
					t.deleteTexture(n.__webglTexture), r.remove(e);
				})(n),
				n.isVideoTexture && R.delete(n),
				o.memory.textures--;
		}
		function F(e) {
			var n = e.target;
			n.removeEventListener('dispose', F),
				(function (e) {
					var n = r.get(e),
						i = r.get(e.texture);
					if (!e) return;
					void 0 !== i.__webglTexture && t.deleteTexture(i.__webglTexture);
					e.depthTexture && e.depthTexture.dispose();
					if (e.isWebGLCubeRenderTarget)
						for (var a = 0; a < 6; a++)
							t.deleteFramebuffer(n.__webglFramebuffer[a]),
								n.__webglDepthbuffer &&
									t.deleteRenderbuffer(n.__webglDepthbuffer[a]);
					else
						t.deleteFramebuffer(n.__webglFramebuffer),
							n.__webglDepthbuffer &&
								t.deleteRenderbuffer(n.__webglDepthbuffer),
							n.__webglMultisampledFramebuffer &&
								t.deleteFramebuffer(n.__webglMultisampledFramebuffer),
							n.__webglColorRenderbuffer &&
								t.deleteRenderbuffer(n.__webglColorRenderbuffer),
							n.__webglDepthRenderbuffer &&
								t.deleteRenderbuffer(n.__webglDepthRenderbuffer);
					r.remove(e.texture), r.remove(e);
				})(n),
				o.memory.textures--;
		}
		var U = 0;
		function H(t, e) {
			var i = r.get(t);
			if (
				(t.isVideoTexture &&
					(function (t) {
						var e = o.render.frame;
						R.get(t) !== e && (R.set(t, e), t.update());
					})(t),
				t.version > 0 && i.__version !== t.version)
			) {
				var a = t.image;
				if (void 0 === a)
					console.warn(
						'THREE.WebGLRenderer: Texture marked for update but image is undefined'
					);
				else {
					if (!1 !== a.complete) return void X(i, t, e);
					console.warn(
						'THREE.WebGLRenderer: Texture marked for update but image is incomplete'
					);
				}
			}
			n.activeTexture(33984 + e), n.bindTexture(3553, i.__webglTexture);
		}
		function k(e, i) {
			var o = r.get(e);
			e.version > 0 && o.__version !== e.version
				? (function (e, r, i) {
						if (6 !== r.image.length) return;
						q(e, r),
							n.activeTexture(33984 + i),
							n.bindTexture(34067, e.__webglTexture),
							t.pixelStorei(37440, r.flipY);
						for (
							var o =
									r &&
									(r.isCompressedTexture || r.image[0].isCompressedTexture),
								s = r.image[0] && r.image[0].isDataTexture,
								c = [],
								l = 0;
							l < 6;
							l++
						)
							c[l] =
								o || s
									? s
										? r.image[l].image
										: r.image[l]
									: I(r.image[l], !1, !0, g);
						var u,
							d = c[0],
							p = D(d) || h,
							f = a.convert(r.format),
							m = a.convert(r.type),
							v = B(r.internalFormat, f, m);
						if ((j(34067, r, p), o)) {
							for (var y = 0; y < 6; y++) {
								u = c[y].mipmaps;
								for (var x = 0; x < u.length; x++) {
									var _ = u[x];
									r.format !== T && r.format !== S
										? null !== f
											? n.compressedTexImage2D(
													34069 + y,
													x,
													v,
													_.width,
													_.height,
													0,
													_.data
											  )
											: console.warn(
													'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()'
											  )
										: n.texImage2D(
												34069 + y,
												x,
												v,
												_.width,
												_.height,
												0,
												f,
												m,
												_.data
										  );
								}
							}
							e.__maxMipLevel = u.length - 1;
						} else {
							u = r.mipmaps;
							for (var b = 0; b < 6; b++)
								if (s) {
									n.texImage2D(
										34069 + b,
										0,
										v,
										c[b].width,
										c[b].height,
										0,
										f,
										m,
										c[b].data
									);
									for (var w = 0; w < u.length; w++) {
										var M = u[w].image[b].image;
										n.texImage2D(
											34069 + b,
											w + 1,
											v,
											M.width,
											M.height,
											0,
											f,
											m,
											M.data
										);
									}
								} else {
									n.texImage2D(34069 + b, 0, v, f, m, c[b]);
									for (var E = 0; E < u.length; E++) {
										var A = u[E];
										n.texImage2D(34069 + b, E + 1, v, f, m, A.image[b]);
									}
								}
							e.__maxMipLevel = u.length;
						}
						N(r, p) && O(34067, r, d.width, d.height);
						(e.__version = r.version), r.onUpdate && r.onUpdate(r);
				  })(o, e, i)
				: (n.activeTexture(33984 + i), n.bindTexture(34067, o.__webglTexture));
		}
		var V = (((s = {})[1e3] = 10497), (s[1001] = 33071), (s[1002] = 33648), s),
			W =
				(((c = {})[1003] = 9728),
				(c[1004] = 9984),
				(c[1005] = 9986),
				(c[1006] = 9729),
				(c[1007] = 9985),
				(c[1008] = 9987),
				c);
		function j(n, a, o) {
			o
				? (t.texParameteri(n, 10242, V[a.wrapS]),
				  t.texParameteri(n, 10243, V[a.wrapT]),
				  (32879 !== n && 35866 !== n) || t.texParameteri(n, 32882, V[a.wrapR]),
				  t.texParameteri(n, 10240, W[a.magFilter]),
				  t.texParameteri(n, 10241, W[a.minFilter]))
				: (t.texParameteri(n, 10242, 33071),
				  t.texParameteri(n, 10243, 33071),
				  (32879 !== n && 35866 !== n) || t.texParameteri(n, 32882, 33071),
				  (a.wrapS === u && a.wrapT === u) ||
						console.warn(
							'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.'
						),
				  t.texParameteri(n, 10240, z(a.magFilter)),
				  t.texParameteri(n, 10241, z(a.minFilter)),
				  a.minFilter !== d &&
						a.minFilter !== m &&
						console.warn(
							'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.'
						));
			var s = e.get('EXT_texture_filter_anisotropic');
			if (s) {
				if (a.type === b && null === e.get('OES_texture_float_linear')) return;
				if (
					a.type === w &&
					null === (h || e.get('OES_texture_half_float_linear'))
				)
					return;
				(a.anisotropy > 1 || r.get(a).__currentAnisotropy) &&
					(t.texParameterf(
						n,
						s.TEXTURE_MAX_ANISOTROPY_EXT,
						Math.min(a.anisotropy, i.getMaxAnisotropy())
					),
					(r.get(a).__currentAnisotropy = a.anisotropy));
			}
		}
		function q(e, n) {
			void 0 === e.__webglInit &&
				((e.__webglInit = !0),
				n.addEventListener('dispose', G),
				(e.__webglTexture = t.createTexture()),
				o.memory.textures++);
		}
		function X(e, r, i) {
			var o = 3553;
			r.isDataTexture2DArray && (o = 35866),
				r.isDataTexture3D && (o = 32879),
				q(e, r),
				n.activeTexture(33984 + i),
				n.bindTexture(o, e.__webglTexture),
				t.pixelStorei(37440, r.flipY),
				t.pixelStorei(37441, r.premultiplyAlpha),
				t.pixelStorei(3317, r.unpackAlignment);
			var s,
				c =
					(function (t) {
						return (
							!h &&
							(t.wrapS !== u ||
								t.wrapT !== u ||
								(t.minFilter !== d && t.minFilter !== m))
						);
					})(r) && !1 === D(r.image),
				l = I(r.image, c, !1, y),
				p = D(l) || h,
				f = a.convert(r.format),
				v = a.convert(r.type),
				g = B(r.internalFormat, f, v);
			j(o, r, p);
			var w = r.mipmaps;
			if (r.isDepthTexture)
				(g = 6402),
					h
						? (g =
								r.type === b
									? 36012
									: r.type === _
									? 33190
									: r.type === M
									? 35056
									: 33189)
						: r.type === b &&
						  console.error(
								'WebGLRenderer: Floating point depth texture requires WebGL2.'
						  ),
					r.format === E &&
						6402 === g &&
						r.type !== x &&
						r.type !== _ &&
						(console.warn(
							'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.'
						),
						(r.type = x),
						(v = a.convert(r.type))),
					r.format === A &&
						6402 === g &&
						((g = 34041),
						r.type !== M &&
							(console.warn(
								'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.'
							),
							(r.type = M),
							(v = a.convert(r.type)))),
					n.texImage2D(3553, 0, g, l.width, l.height, 0, f, v, null);
			else if (r.isDataTexture)
				if (w.length > 0 && p) {
					for (var L = 0, R = w.length; L < R; L++)
						(s = w[L]),
							n.texImage2D(3553, L, g, s.width, s.height, 0, f, v, s.data);
					(r.generateMipmaps = !1), (e.__maxMipLevel = w.length - 1);
				} else
					n.texImage2D(3553, 0, g, l.width, l.height, 0, f, v, l.data),
						(e.__maxMipLevel = 0);
			else if (r.isCompressedTexture) {
				for (var C = 0, P = w.length; C < P; C++)
					(s = w[C]),
						r.format !== T && r.format !== S
							? null !== f
								? n.compressedTexImage2D(
										3553,
										C,
										g,
										s.width,
										s.height,
										0,
										s.data
								  )
								: console.warn(
										'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()'
								  )
							: n.texImage2D(3553, C, g, s.width, s.height, 0, f, v, s.data);
				e.__maxMipLevel = w.length - 1;
			} else if (r.isDataTexture2DArray)
				n.texImage3D(35866, 0, g, l.width, l.height, l.depth, 0, f, v, l.data),
					(e.__maxMipLevel = 0);
			else if (r.isDataTexture3D)
				n.texImage3D(32879, 0, g, l.width, l.height, l.depth, 0, f, v, l.data),
					(e.__maxMipLevel = 0);
			else if (w.length > 0 && p) {
				for (var z = 0, G = w.length; z < G; z++)
					(s = w[z]), n.texImage2D(3553, z, g, f, v, s);
				(r.generateMipmaps = !1), (e.__maxMipLevel = w.length - 1);
			} else n.texImage2D(3553, 0, g, f, v, l), (e.__maxMipLevel = 0);
			N(r, p) && O(o, r, l.width, l.height),
				(e.__version = r.version),
				r.onUpdate && r.onUpdate(r);
		}
		function Y(e, i, o, s) {
			var c = a.convert(i.texture.format),
				l = a.convert(i.texture.type),
				u = B(i.texture.internalFormat, c, l);
			n.texImage2D(s, 0, u, i.width, i.height, 0, c, l, null),
				t.bindFramebuffer(36160, e),
				t.framebufferTexture2D(36160, o, s, r.get(i.texture).__webglTexture, 0),
				t.bindFramebuffer(36160, null);
		}
		function Z(e, n, r) {
			if ((t.bindRenderbuffer(36161, e), n.depthBuffer && !n.stencilBuffer)) {
				var i = 33189;
				if (r) {
					var o = n.depthTexture;
					o &&
						o.isDepthTexture &&
						(o.type === b ? (i = 36012) : o.type === _ && (i = 33190));
					var s = Q(n);
					t.renderbufferStorageMultisample(36161, s, i, n.width, n.height);
				} else t.renderbufferStorage(36161, i, n.width, n.height);
				t.framebufferRenderbuffer(36160, 36096, 36161, e);
			} else if (n.depthBuffer && n.stencilBuffer) {
				if (r) {
					var c = Q(n);
					t.renderbufferStorageMultisample(36161, c, 35056, n.width, n.height);
				} else t.renderbufferStorage(36161, 34041, n.width, n.height);
				t.framebufferRenderbuffer(36160, 33306, 36161, e);
			} else {
				var l = a.convert(n.texture.format),
					u = a.convert(n.texture.type),
					h = B(n.texture.internalFormat, l, u);
				if (r) {
					var d = Q(n);
					t.renderbufferStorageMultisample(36161, d, h, n.width, n.height);
				} else t.renderbufferStorage(36161, h, n.width, n.height);
			}
			t.bindRenderbuffer(36161, null);
		}
		function J(e) {
			var n = r.get(e),
				i = !0 === e.isWebGLCubeRenderTarget;
			if (e.depthTexture) {
				if (i)
					throw new Error(
						'target.depthTexture not supported in Cube render targets'
					);
				!(function (e, n) {
					if (n && n.isWebGLCubeRenderTarget)
						throw new Error(
							'Depth Texture with cube render targets is not supported'
						);
					if (
						(t.bindFramebuffer(36160, e),
						!n.depthTexture || !n.depthTexture.isDepthTexture)
					)
						throw new Error(
							'renderTarget.depthTexture must be an instance of THREE.DepthTexture'
						);
					(r.get(n.depthTexture).__webglTexture &&
						n.depthTexture.image.width === n.width &&
						n.depthTexture.image.height === n.height) ||
						((n.depthTexture.image.width = n.width),
						(n.depthTexture.image.height = n.height),
						(n.depthTexture.needsUpdate = !0)),
						H(n.depthTexture, 0);
					var i = r.get(n.depthTexture).__webglTexture;
					if (n.depthTexture.format === E)
						t.framebufferTexture2D(36160, 36096, 3553, i, 0);
					else {
						if (n.depthTexture.format !== A)
							throw new Error('Unknown depthTexture format');
						t.framebufferTexture2D(36160, 33306, 3553, i, 0);
					}
				})(n.__webglFramebuffer, e);
			} else if (i) {
				n.__webglDepthbuffer = [];
				for (var a = 0; a < 6; a++)
					t.bindFramebuffer(36160, n.__webglFramebuffer[a]),
						(n.__webglDepthbuffer[a] = t.createRenderbuffer()),
						Z(n.__webglDepthbuffer[a], e, !1);
			} else
				t.bindFramebuffer(36160, n.__webglFramebuffer),
					(n.__webglDepthbuffer = t.createRenderbuffer()),
					Z(n.__webglDepthbuffer, e, !1);
			t.bindFramebuffer(36160, null);
		}
		function Q(t) {
			return h && t.isWebGLMultisampleRenderTarget ? Math.min(L, t.samples) : 0;
		}
		var K = !1,
			$ = !1;
		(this.allocateTextureUnit = function () {
			var t = U;
			return (
				t >= v &&
					console.warn(
						'THREE.WebGLTextures: Trying to use ' +
							t +
							' texture units while this GPU supports only ' +
							v
					),
				(U += 1),
				t
			);
		}),
			(this.resetTextureUnits = function () {
				U = 0;
			}),
			(this.setTexture2D = H),
			(this.setTexture2DArray = function (t, e) {
				var i = r.get(t);
				t.version > 0 && i.__version !== t.version
					? X(i, t, e)
					: (n.activeTexture(33984 + e),
					  n.bindTexture(35866, i.__webglTexture));
			}),
			(this.setTexture3D = function (t, e) {
				var i = r.get(t);
				t.version > 0 && i.__version !== t.version
					? X(i, t, e)
					: (n.activeTexture(33984 + e),
					  n.bindTexture(32879, i.__webglTexture));
			}),
			(this.setTextureCube = k),
			(this.setupRenderTarget = function (e) {
				var i = r.get(e),
					s = r.get(e.texture);
				e.addEventListener('dispose', F),
					(s.__webglTexture = t.createTexture()),
					o.memory.textures++;
				var c = !0 === e.isWebGLCubeRenderTarget,
					l = !0 === e.isWebGLMultisampleRenderTarget,
					u = D(e) || h;
				if (
					(!h ||
						e.texture.format !== S ||
						(e.texture.type !== b && e.texture.type !== w) ||
						((e.texture.format = T),
						console.warn(
							'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.'
						)),
					c)
				) {
					i.__webglFramebuffer = [];
					for (var d = 0; d < 6; d++)
						i.__webglFramebuffer[d] = t.createFramebuffer();
				} else if (((i.__webglFramebuffer = t.createFramebuffer()), l))
					if (h) {
						(i.__webglMultisampledFramebuffer = t.createFramebuffer()),
							(i.__webglColorRenderbuffer = t.createRenderbuffer()),
							t.bindRenderbuffer(36161, i.__webglColorRenderbuffer);
						var p = a.convert(e.texture.format),
							f = a.convert(e.texture.type),
							m = B(e.texture.internalFormat, p, f),
							v = Q(e);
						t.renderbufferStorageMultisample(36161, v, m, e.width, e.height),
							t.bindFramebuffer(36160, i.__webglMultisampledFramebuffer),
							t.framebufferRenderbuffer(
								36160,
								36064,
								36161,
								i.__webglColorRenderbuffer
							),
							t.bindRenderbuffer(36161, null),
							e.depthBuffer &&
								((i.__webglDepthRenderbuffer = t.createRenderbuffer()),
								Z(i.__webglDepthRenderbuffer, e, !0)),
							t.bindFramebuffer(36160, null);
					} else
						console.warn(
							'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.'
						);
				if (c) {
					n.bindTexture(34067, s.__webglTexture), j(34067, e.texture, u);
					for (var g = 0; g < 6; g++)
						Y(i.__webglFramebuffer[g], e, 36064, 34069 + g);
					N(e.texture, u) && O(34067, e.texture, e.width, e.height),
						n.bindTexture(34067, null);
				} else
					n.bindTexture(3553, s.__webglTexture),
						j(3553, e.texture, u),
						Y(i.__webglFramebuffer, e, 36064, 3553),
						N(e.texture, u) && O(3553, e.texture, e.width, e.height),
						n.bindTexture(3553, null);
				e.depthBuffer && J(e);
			}),
			(this.updateRenderTargetMipmap = function (t) {
				var e = t.texture;
				if (N(e, D(t) || h)) {
					var i = t.isWebGLCubeRenderTarget ? 34067 : 3553,
						a = r.get(e).__webglTexture;
					n.bindTexture(i, a),
						O(i, e, t.width, t.height),
						n.bindTexture(i, null);
				}
			}),
			(this.updateMultisampleRenderTarget = function (e) {
				if (e.isWebGLMultisampleRenderTarget)
					if (h) {
						var n = r.get(e);
						t.bindFramebuffer(36008, n.__webglMultisampledFramebuffer),
							t.bindFramebuffer(36009, n.__webglFramebuffer);
						var i = e.width,
							a = e.height,
							o = 16384;
						e.depthBuffer && (o |= 256),
							e.stencilBuffer && (o |= 1024),
							t.blitFramebuffer(0, 0, i, a, 0, 0, i, a, o, 9728),
							t.bindFramebuffer(36160, n.__webglMultisampledFramebuffer);
					} else
						console.warn(
							'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.'
						);
			}),
			(this.safeSetTexture2D = function (t, e) {
				t &&
					t.isWebGLRenderTarget &&
					(!1 === K &&
						(console.warn(
							"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."
						),
						(K = !0)),
					(t = t.texture)),
					H(t, e);
			}),
			(this.safeSetTextureCube = function (t, e) {
				t &&
					t.isWebGLCubeRenderTarget &&
					(!1 === $ &&
						(console.warn(
							"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."
						),
						($ = !0)),
					(t = t.texture)),
					k(t, e);
			});
	}
	function Qi(t, e, n) {
		var r = n.isWebGL2;
		return {
			convert: function (t) {
				var n;
				if (t === y) return 5121;
				if (1017 === t) return 32819;
				if (1018 === t) return 32820;
				if (1019 === t) return 33635;
				if (1010 === t) return 5120;
				if (1011 === t) return 5122;
				if (t === x) return 5123;
				if (1013 === t) return 5124;
				if (t === _) return 5125;
				if (t === b) return 5126;
				if (t === w)
					return r
						? 5131
						: null !== (n = e.get('OES_texture_half_float'))
						? n.HALF_FLOAT_OES
						: null;
				if (1021 === t) return 6406;
				if (t === S) return 6407;
				if (t === T) return 6408;
				if (1024 === t) return 6409;
				if (1025 === t) return 6410;
				if (t === E) return 6402;
				if (t === A) return 34041;
				if (1028 === t) return 6403;
				if (1029 === t) return 36244;
				if (1030 === t) return 33319;
				if (1031 === t) return 33320;
				if (1032 === t) return 36248;
				if (1033 === t) return 36249;
				if (t === L || t === R || t === C || t === P) {
					if (null === (n = e.get('WEBGL_compressed_texture_s3tc')))
						return null;
					if (t === L) return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
					if (t === R) return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
					if (t === C) return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
					if (t === P) return n.COMPRESSED_RGBA_S3TC_DXT5_EXT;
				}
				if (t === I || t === D || t === N || t === O) {
					if (null === (n = e.get('WEBGL_compressed_texture_pvrtc')))
						return null;
					if (t === I) return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
					if (t === D) return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
					if (t === N) return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
					if (t === O) return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
				}
				if (36196 === t)
					return null !== (n = e.get('WEBGL_compressed_texture_etc1'))
						? n.COMPRESSED_RGB_ETC1_WEBGL
						: null;
				if (
					(t === B || t === z) &&
					null !== (n = e.get('WEBGL_compressed_texture_etc'))
				) {
					if (t === B) return n.COMPRESSED_RGB8_ETC2;
					if (t === z) return n.COMPRESSED_RGBA8_ETC2_EAC;
				}
				return 37808 === t ||
					37809 === t ||
					37810 === t ||
					37811 === t ||
					37812 === t ||
					37813 === t ||
					37814 === t ||
					37815 === t ||
					37816 === t ||
					37817 === t ||
					37818 === t ||
					37819 === t ||
					37820 === t ||
					37821 === t ||
					37840 === t ||
					37841 === t ||
					37842 === t ||
					37843 === t ||
					37844 === t ||
					37845 === t ||
					37846 === t ||
					37847 === t ||
					37848 === t ||
					37849 === t ||
					37850 === t ||
					37851 === t ||
					37852 === t ||
					37853 === t
					? null !== (n = e.get('WEBGL_compressed_texture_astc'))
						? t
						: null
					: 36492 === t
					? null !== (n = e.get('EXT_texture_compression_bptc'))
						? t
						: null
					: t === M
					? r
						? 34042
						: null !== (n = e.get('WEBGL_depth_texture'))
						? n.UNSIGNED_INT_24_8_WEBGL
						: null
					: void 0;
			},
		};
	}
	function Ki(t) {
		Vn.call(this), (this.cameras = t || []);
	}
	function $i() {
		be.call(this), (this.type = 'Group');
	}
	function ta() {
		(this._targetRay = null), (this._grip = null), (this._hand = null);
	}
	function ea(t, e) {
		var n = this,
			r = null,
			i = 1,
			a = null,
			o = 'local-floor',
			s = null,
			c = [],
			l = new Map(),
			u = new Vn();
		u.layers.enable(1), (u.viewport = new yt());
		var h = new Vn();
		h.layers.enable(2), (h.viewport = new yt());
		var d = [u, h],
			p = new Ki();
		p.layers.enable(1), p.layers.enable(2);
		var f = null,
			m = null;
		function v(t) {
			var e = l.get(t.inputSource);
			e && e.dispatchEvent({ type: t.type, data: t.inputSource });
		}
		function g() {
			l.forEach(function (t, e) {
				t.disconnect(e);
			}),
				l.clear(),
				t.setFramebuffer(null),
				t.setRenderTarget(t.getRenderTarget()),
				S.stop(),
				(n.isPresenting = !1),
				n.dispatchEvent({ type: 'sessionend' });
		}
		function y(t) {
			(a = t),
				S.setContext(r),
				S.start(),
				(n.isPresenting = !0),
				n.dispatchEvent({ type: 'sessionstart' });
		}
		function x(t) {
			for (var e = r.inputSources, n = 0; n < c.length; n++) l.set(e[n], c[n]);
			for (var i = 0; i < t.removed.length; i++) {
				var a = t.removed[i],
					o = l.get(a);
				o && (o.dispatchEvent({ type: 'disconnected', data: a }), l.delete(a));
			}
			for (var s = 0; s < t.added.length; s++) {
				var u = t.added[s],
					h = l.get(u);
				h && h.dispatchEvent({ type: 'connected', data: u });
			}
		}
		(this.enabled = !1),
			(this.isPresenting = !1),
			(this.getController = function (t) {
				var e = c[t];
				return (
					void 0 === e && ((e = new ta()), (c[t] = e)), e.getTargetRaySpace()
				);
			}),
			(this.getControllerGrip = function (t) {
				var e = c[t];
				return void 0 === e && ((e = new ta()), (c[t] = e)), e.getGripSpace();
			}),
			(this.getHand = function (t) {
				var e = c[t];
				return void 0 === e && ((e = new ta()), (c[t] = e)), e.getHandSpace();
			}),
			(this.setFramebufferScaleFactor = function (t) {
				(i = t),
					!0 === n.isPresenting &&
						console.warn(
							'THREE.WebXRManager: Cannot change framebuffer scale while presenting.'
						);
			}),
			(this.setReferenceSpaceType = function (t) {
				(o = t),
					!0 === n.isPresenting &&
						console.warn(
							'THREE.WebXRManager: Cannot change reference space type while presenting.'
						);
			}),
			(this.getReferenceSpace = function () {
				return a;
			}),
			(this.getSession = function () {
				return r;
			}),
			(this.setSession = function (t) {
				if (null !== (r = t)) {
					r.addEventListener('select', v),
						r.addEventListener('selectstart', v),
						r.addEventListener('selectend', v),
						r.addEventListener('squeeze', v),
						r.addEventListener('squeezestart', v),
						r.addEventListener('squeezeend', v),
						r.addEventListener('end', g);
					var n = e.getContextAttributes();
					!0 !== n.xrCompatible && e.makeXRCompatible();
					var a = {
							antialias: n.antialias,
							alpha: n.alpha,
							depth: n.depth,
							stencil: n.stencil,
							framebufferScaleFactor: i,
						},
						s = new XRWebGLLayer(r, e, a);
					r.updateRenderState({ baseLayer: s }),
						r.requestReferenceSpace(o).then(y),
						r.addEventListener('inputsourceschange', x);
				}
			});
		var _ = new wt(),
			b = new wt();
		function w(t, e) {
			null === e
				? t.matrixWorld.copy(t.matrix)
				: t.matrixWorld.multiplyMatrices(e.matrixWorld, t.matrix),
				t.matrixWorldInverse.getInverse(t.matrixWorld);
		}
		this.getCamera = function (t) {
			(p.near = h.near = u.near = t.near),
				(p.far = h.far = u.far = t.far),
				(f === p.near && m === p.far) ||
					(r.updateRenderState({ depthNear: p.near, depthFar: p.far }),
					(f = p.near),
					(m = p.far));
			var e = t.parent,
				n = p.cameras;
			w(p, e);
			for (var i = 0; i < n.length; i++) w(n[i], e);
			t.matrixWorld.copy(p.matrixWorld);
			for (var a = t.children, o = 0, s = a.length; o < s; o++)
				a[o].updateMatrixWorld(!0);
			return (
				2 === n.length
					? (function (t, e, n) {
							_.setFromMatrixPosition(e.matrixWorld),
								b.setFromMatrixPosition(n.matrixWorld);
							var r = _.distanceTo(b),
								i = e.projectionMatrix.elements,
								a = n.projectionMatrix.elements,
								o = i[14] / (i[10] - 1),
								s = i[14] / (i[10] + 1),
								c = (i[9] + 1) / i[5],
								l = (i[9] - 1) / i[5],
								u = (i[8] - 1) / i[0],
								h = (a[8] + 1) / a[0],
								d = o * u,
								p = o * h,
								f = r / (-u + h),
								m = f * -u;
							e.matrixWorld.decompose(t.position, t.quaternion, t.scale),
								t.translateX(m),
								t.translateZ(f),
								t.matrixWorld.compose(t.position, t.quaternion, t.scale),
								t.matrixWorldInverse.getInverse(t.matrixWorld);
							var v = o + f,
								g = s + f,
								y = d - m,
								x = p + (r - m),
								w = ((c * s) / g) * v,
								M = ((l * s) / g) * v;
							t.projectionMatrix.makePerspective(y, x, w, M, v, g);
					  })(p, u, h)
					: p.projectionMatrix.copy(u.projectionMatrix),
				p
			);
		};
		var M = null;
		var S = new Kn();
		S.setAnimationLoop(function (e, n) {
			if (null !== (s = n.getViewerPose(a))) {
				var i = s.views,
					o = r.renderState.baseLayer;
				t.setFramebuffer(o.framebuffer);
				var l = !1;
				i.length !== p.cameras.length && ((p.cameras.length = 0), (l = !0));
				for (var u = 0; u < i.length; u++) {
					var h = i[u],
						f = o.getViewport(h),
						m = d[u];
					m.matrix.fromArray(h.transform.matrix),
						m.projectionMatrix.fromArray(h.projectionMatrix),
						m.viewport.set(f.x, f.y, f.width, f.height),
						0 === u && p.matrix.copy(m.matrix),
						!0 === l && p.cameras.push(m);
				}
			}
			for (var v = r.inputSources, g = 0; g < c.length; g++) {
				var y = c[g],
					x = v[g];
				y.update(x, n, a);
			}
			M && M(e, n);
		}),
			(this.setAnimationLoop = function (t) {
				M = t;
			}),
			(this.dispose = function () {});
	}
	function na(t) {
		function e(e, n) {
			(e.opacity.value = n.opacity),
				n.color && e.diffuse.value.copy(n.color),
				n.emissive &&
					e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),
				n.map && (e.map.value = n.map),
				n.alphaMap && (e.alphaMap.value = n.alphaMap),
				n.specularMap && (e.specularMap.value = n.specularMap);
			var r,
				i,
				a = t.get(n).envMap;
			if (a) {
				(e.envMap.value = a),
					(e.flipEnvMap.value = a.isCubeTexture && a._needsFlipEnvMap ? -1 : 1),
					(e.reflectivity.value = n.reflectivity),
					(e.refractionRatio.value = n.refractionRatio);
				var o = t.get(a).__maxMipLevel;
				void 0 !== o && (e.maxMipLevel.value = o);
			}
			n.lightMap &&
				((e.lightMap.value = n.lightMap),
				(e.lightMapIntensity.value = n.lightMapIntensity)),
				n.aoMap &&
					((e.aoMap.value = n.aoMap),
					(e.aoMapIntensity.value = n.aoMapIntensity)),
				n.map
					? (r = n.map)
					: n.specularMap
					? (r = n.specularMap)
					: n.displacementMap
					? (r = n.displacementMap)
					: n.normalMap
					? (r = n.normalMap)
					: n.bumpMap
					? (r = n.bumpMap)
					: n.roughnessMap
					? (r = n.roughnessMap)
					: n.metalnessMap
					? (r = n.metalnessMap)
					: n.alphaMap
					? (r = n.alphaMap)
					: n.emissiveMap
					? (r = n.emissiveMap)
					: n.clearcoatMap
					? (r = n.clearcoatMap)
					: n.clearcoatNormalMap
					? (r = n.clearcoatNormalMap)
					: n.clearcoatRoughnessMap && (r = n.clearcoatRoughnessMap),
				void 0 !== r &&
					(r.isWebGLRenderTarget && (r = r.texture),
					!0 === r.matrixAutoUpdate && r.updateMatrix(),
					e.uvTransform.value.copy(r.matrix)),
				n.aoMap ? (i = n.aoMap) : n.lightMap && (i = n.lightMap),
				void 0 !== i &&
					(i.isWebGLRenderTarget && (i = i.texture),
					!0 === i.matrixAutoUpdate && i.updateMatrix(),
					e.uv2Transform.value.copy(i.matrix));
		}
		function n(e, n) {
			(e.roughness.value = n.roughness),
				(e.metalness.value = n.metalness),
				n.roughnessMap && (e.roughnessMap.value = n.roughnessMap),
				n.metalnessMap && (e.metalnessMap.value = n.metalnessMap),
				n.emissiveMap && (e.emissiveMap.value = n.emissiveMap),
				n.bumpMap &&
					((e.bumpMap.value = n.bumpMap),
					(e.bumpScale.value = n.bumpScale),
					1 === n.side && (e.bumpScale.value *= -1)),
				n.normalMap &&
					((e.normalMap.value = n.normalMap),
					e.normalScale.value.copy(n.normalScale),
					1 === n.side && e.normalScale.value.negate()),
				n.displacementMap &&
					((e.displacementMap.value = n.displacementMap),
					(e.displacementScale.value = n.displacementScale),
					(e.displacementBias.value = n.displacementBias)),
				t.get(n).envMap && (e.envMapIntensity.value = n.envMapIntensity);
		}
		return {
			refreshFogUniforms: function (t, e) {
				t.fogColor.value.copy(e.color),
					e.isFog
						? ((t.fogNear.value = e.near), (t.fogFar.value = e.far))
						: e.isFogExp2 && (t.fogDensity.value = e.density);
			},
			refreshMaterialUniforms: function (t, r, i, a) {
				r.isMeshBasicMaterial
					? e(t, r)
					: r.isMeshLambertMaterial
					? (e(t, r),
					  (function (t, e) {
							e.emissiveMap && (t.emissiveMap.value = e.emissiveMap);
					  })(t, r))
					: r.isMeshToonMaterial
					? (e(t, r),
					  (function (t, e) {
							e.gradientMap && (t.gradientMap.value = e.gradientMap);
							e.emissiveMap && (t.emissiveMap.value = e.emissiveMap);
							e.bumpMap &&
								((t.bumpMap.value = e.bumpMap),
								(t.bumpScale.value = e.bumpScale),
								1 === e.side && (t.bumpScale.value *= -1));
							e.normalMap &&
								((t.normalMap.value = e.normalMap),
								t.normalScale.value.copy(e.normalScale),
								1 === e.side && t.normalScale.value.negate());
							e.displacementMap &&
								((t.displacementMap.value = e.displacementMap),
								(t.displacementScale.value = e.displacementScale),
								(t.displacementBias.value = e.displacementBias));
					  })(t, r))
					: r.isMeshPhongMaterial
					? (e(t, r),
					  (function (t, e) {
							t.specular.value.copy(e.specular),
								(t.shininess.value = Math.max(e.shininess, 1e-4)),
								e.emissiveMap && (t.emissiveMap.value = e.emissiveMap);
							e.bumpMap &&
								((t.bumpMap.value = e.bumpMap),
								(t.bumpScale.value = e.bumpScale),
								1 === e.side && (t.bumpScale.value *= -1));
							e.normalMap &&
								((t.normalMap.value = e.normalMap),
								t.normalScale.value.copy(e.normalScale),
								1 === e.side && t.normalScale.value.negate());
							e.displacementMap &&
								((t.displacementMap.value = e.displacementMap),
								(t.displacementScale.value = e.displacementScale),
								(t.displacementBias.value = e.displacementBias));
					  })(t, r))
					: r.isMeshStandardMaterial
					? (e(t, r),
					  r.isMeshPhysicalMaterial
							? (function (t, e) {
									n(t, e),
										(t.reflectivity.value = e.reflectivity),
										(t.clearcoat.value = e.clearcoat),
										(t.clearcoatRoughness.value = e.clearcoatRoughness),
										e.sheen && t.sheen.value.copy(e.sheen);
									e.clearcoatMap && (t.clearcoatMap.value = e.clearcoatMap);
									e.clearcoatRoughnessMap &&
										(t.clearcoatRoughnessMap.value = e.clearcoatRoughnessMap);
									e.clearcoatNormalMap &&
										(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),
										(t.clearcoatNormalMap.value = e.clearcoatNormalMap),
										1 === e.side && t.clearcoatNormalScale.value.negate());
									(t.transmission.value = e.transmission),
										e.transmissionMap &&
											(t.transmissionMap.value = e.transmissionMap);
							  })(t, r)
							: n(t, r))
					: r.isMeshMatcapMaterial
					? (e(t, r),
					  (function (t, e) {
							e.matcap && (t.matcap.value = e.matcap);
							e.bumpMap &&
								((t.bumpMap.value = e.bumpMap),
								(t.bumpScale.value = e.bumpScale),
								1 === e.side && (t.bumpScale.value *= -1));
							e.normalMap &&
								((t.normalMap.value = e.normalMap),
								t.normalScale.value.copy(e.normalScale),
								1 === e.side && t.normalScale.value.negate());
							e.displacementMap &&
								((t.displacementMap.value = e.displacementMap),
								(t.displacementScale.value = e.displacementScale),
								(t.displacementBias.value = e.displacementBias));
					  })(t, r))
					: r.isMeshDepthMaterial
					? (e(t, r),
					  (function (t, e) {
							e.displacementMap &&
								((t.displacementMap.value = e.displacementMap),
								(t.displacementScale.value = e.displacementScale),
								(t.displacementBias.value = e.displacementBias));
					  })(t, r))
					: r.isMeshDistanceMaterial
					? (e(t, r),
					  (function (t, e) {
							e.displacementMap &&
								((t.displacementMap.value = e.displacementMap),
								(t.displacementScale.value = e.displacementScale),
								(t.displacementBias.value = e.displacementBias));
							t.referencePosition.value.copy(e.referencePosition),
								(t.nearDistance.value = e.nearDistance),
								(t.farDistance.value = e.farDistance);
					  })(t, r))
					: r.isMeshNormalMaterial
					? (e(t, r),
					  (function (t, e) {
							e.bumpMap &&
								((t.bumpMap.value = e.bumpMap),
								(t.bumpScale.value = e.bumpScale),
								1 === e.side && (t.bumpScale.value *= -1));
							e.normalMap &&
								((t.normalMap.value = e.normalMap),
								t.normalScale.value.copy(e.normalScale),
								1 === e.side && t.normalScale.value.negate());
							e.displacementMap &&
								((t.displacementMap.value = e.displacementMap),
								(t.displacementScale.value = e.displacementScale),
								(t.displacementBias.value = e.displacementBias));
					  })(t, r))
					: r.isLineBasicMaterial
					? ((function (t, e) {
							t.diffuse.value.copy(e.color), (t.opacity.value = e.opacity);
					  })(t, r),
					  r.isLineDashedMaterial &&
							(function (t, e) {
								(t.dashSize.value = e.dashSize),
									(t.totalSize.value = e.dashSize + e.gapSize),
									(t.scale.value = e.scale);
							})(t, r))
					: r.isPointsMaterial
					? (function (t, e, n, r) {
							t.diffuse.value.copy(e.color),
								(t.opacity.value = e.opacity),
								(t.size.value = e.size * n),
								(t.scale.value = 0.5 * r),
								e.map && (t.map.value = e.map);
							e.alphaMap && (t.alphaMap.value = e.alphaMap);
							var i;
							e.map ? (i = e.map) : e.alphaMap && (i = e.alphaMap);
							void 0 !== i &&
								(!0 === i.matrixAutoUpdate && i.updateMatrix(),
								t.uvTransform.value.copy(i.matrix));
					  })(t, r, i, a)
					: r.isSpriteMaterial
					? (function (t, e) {
							t.diffuse.value.copy(e.color),
								(t.opacity.value = e.opacity),
								(t.rotation.value = e.rotation),
								e.map && (t.map.value = e.map);
							e.alphaMap && (t.alphaMap.value = e.alphaMap);
							var n;
							e.map ? (n = e.map) : e.alphaMap && (n = e.alphaMap);
							void 0 !== n &&
								(!0 === n.matrixAutoUpdate && n.updateMatrix(),
								t.uvTransform.value.copy(n.matrix));
					  })(t, r)
					: r.isShadowMaterial
					? (t.color.value.copy(r.color), (t.opacity.value = r.opacity))
					: r.isShaderMaterial && (r.uniformsNeedUpdate = !1);
			},
		};
	}
	function ra(t) {
		var e =
				void 0 !== (t = t || {}).canvas
					? t.canvas
					: document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas'),
			n = void 0 !== t.context ? t.context : null,
			r = void 0 !== t.alpha && t.alpha,
			i = void 0 === t.depth || t.depth,
			a = void 0 === t.stencil || t.stencil,
			o = void 0 !== t.antialias && t.antialias,
			s = void 0 === t.premultipliedAlpha || t.premultipliedAlpha,
			c = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer,
			l = void 0 !== t.powerPreference ? t.powerPreference : 'default',
			u =
				void 0 !== t.failIfMajorPerformanceCaveat &&
				t.failIfMajorPerformanceCaveat,
			h = null,
			d = null;
		(this.domElement = e),
			(this.debug = { checkShaderErrors: !0 }),
			(this.autoClear = !0),
			(this.autoClearColor = !0),
			(this.autoClearDepth = !0),
			(this.autoClearStencil = !0),
			(this.sortObjects = !0),
			(this.clippingPlanes = []),
			(this.localClippingEnabled = !1),
			(this.gammaFactor = 2),
			(this.outputEncoding = q),
			(this.physicallyCorrectLights = !1),
			(this.toneMapping = 0),
			(this.toneMappingExposure = 1),
			(this.maxMorphTargets = 8),
			(this.maxMorphNormals = 4);
		var p = this,
			f = !1,
			m = null,
			v = 0,
			g = 0,
			x = null,
			_ = null,
			M = -1,
			S = null,
			E = null,
			A = new yt(),
			L = new yt(),
			R = null,
			C = e.width,
			P = e.height,
			I = 1,
			D = null,
			N = null,
			O = new yt(0, 0, C, P),
			B = new yt(0, 0, C, P),
			z = !1,
			G = new Qn(),
			F = !1,
			U = !1,
			H = new Jt(),
			k = new wt(),
			V = {
				background: null,
				fog: null,
				environment: null,
				overrideMaterial: null,
				isScene: !0,
			};
		function W() {
			return null === x ? I : 1;
		}
		var j,
			X,
			Y,
			Z,
			J,
			Q,
			K,
			$,
			tt,
			et,
			nt,
			rt,
			it,
			at,
			ot,
			ct,
			lt,
			ut,
			ht,
			dt,
			ft,
			mt = n;
		function vt(t, n) {
			for (var r = 0; r < t.length; r++) {
				var i = t[r],
					a = e.getContext(i, n);
				if (null !== a) return a;
			}
			return null;
		}
		try {
			var gt = {
				alpha: r,
				depth: i,
				stencil: a,
				antialias: o,
				premultipliedAlpha: s,
				preserveDrawingBuffer: c,
				powerPreference: l,
				failIfMajorPerformanceCaveat: u,
			};
			if (
				(e.addEventListener('webglcontextlost', St, !1),
				e.addEventListener('webglcontextrestored', Tt, !1),
				null === mt)
			) {
				var xt = ['webgl2', 'webgl', 'experimental-webgl'];
				if (
					(!0 === p.isWebGL1Renderer && xt.shift(), null === (mt = vt(xt, gt)))
				)
					throw vt(xt)
						? new Error(
								'Error creating WebGL context with your selected attributes.'
						  )
						: new Error('Error creating WebGL context.');
			}
			void 0 === mt.getShaderPrecisionFormat &&
				(mt.getShaderPrecisionFormat = function () {
					return { rangeMin: 1, rangeMax: 1, precision: 1 };
				});
		} catch (t) {
			throw (console.error('THREE.WebGLRenderer: ' + t.message), t);
		}
		function _t() {
			(j = new ur(mt)),
				!1 === (X = new sr(mt, j, t)).isWebGL2 &&
					(j.get('WEBGL_depth_texture'),
					j.get('OES_texture_float'),
					j.get('OES_texture_half_float'),
					j.get('OES_texture_half_float_linear'),
					j.get('OES_standard_derivatives'),
					j.get('OES_element_index_uint'),
					j.get('OES_vertex_array_object'),
					j.get('ANGLE_instanced_arrays')),
				j.get('OES_texture_float_linear'),
				(dt = new Qi(mt, j, X)),
				(Y = new Zi(mt, j, X)).scissor(L.copy(B).multiplyScalar(I).floor()),
				Y.viewport(A.copy(O).multiplyScalar(I).floor()),
				(Z = new pr(mt)),
				(J = new Oi()),
				(Q = new Ji(mt, j, Y, J, X, dt, Z)),
				(K = new lr(p)),
				($ = new $n(mt, X)),
				(ft = new ar(mt, j, $, X)),
				(tt = new hr(mt, $, Z, ft)),
				(et = new gr(mt, tt, $, Z)),
				(lt = new vr(mt)),
				(ot = new cr(J)),
				(nt = new Ni(p, K, j, X, ft, ot)),
				(rt = new na(J)),
				(it = new Fi(J)),
				(at = new ji()),
				(ct = new ir(p, K, Y, et, s)),
				(ut = new or(mt, j, Z, X)),
				(ht = new dr(mt, j, Z, X)),
				(Z.programs = nt.programs),
				(p.capabilities = X),
				(p.extensions = j),
				(p.properties = J),
				(p.renderLists = it),
				(p.state = Y),
				(p.info = Z);
		}
		_t();
		var bt = new ea(p, mt);
		this.xr = bt;
		var Mt = new Yi(p, et, X.maxTextureSize);
		function St(t) {
			t.preventDefault(),
				console.log('THREE.WebGLRenderer: Context Lost.'),
				(f = !0);
		}
		function Tt() {
			console.log('THREE.WebGLRenderer: Context Restored.'), (f = !1), _t();
		}
		function Et(t) {
			var e = t.target;
			e.removeEventListener('dispose', Et),
				(function (t) {
					At(t), J.remove(t);
				})(e);
		}
		function At(t) {
			var e = J.get(t).program;
			void 0 !== e && nt.releaseProgram(e);
		}
		(this.shadowMap = Mt),
			(this.getContext = function () {
				return mt;
			}),
			(this.getContextAttributes = function () {
				return mt.getContextAttributes();
			}),
			(this.forceContextLoss = function () {
				var t = j.get('WEBGL_lose_context');
				t && t.loseContext();
			}),
			(this.forceContextRestore = function () {
				var t = j.get('WEBGL_lose_context');
				t && t.restoreContext();
			}),
			(this.getPixelRatio = function () {
				return I;
			}),
			(this.setPixelRatio = function (t) {
				void 0 !== t && ((I = t), this.setSize(C, P, !1));
			}),
			(this.getSize = function (t) {
				return (
					void 0 === t &&
						(console.warn(
							'WebGLRenderer: .getsize() now requires a Vector2 as an argument'
						),
						(t = new pt())),
					t.set(C, P)
				);
			}),
			(this.setSize = function (t, n, r) {
				bt.isPresenting
					? console.warn(
							"THREE.WebGLRenderer: Can't change size while VR device is presenting."
					  )
					: ((C = t),
					  (P = n),
					  (e.width = Math.floor(t * I)),
					  (e.height = Math.floor(n * I)),
					  !1 !== r &&
							((e.style.width = t + 'px'), (e.style.height = n + 'px')),
					  this.setViewport(0, 0, t, n));
			}),
			(this.getDrawingBufferSize = function (t) {
				return (
					void 0 === t &&
						(console.warn(
							'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument'
						),
						(t = new pt())),
					t.set(C * I, P * I).floor()
				);
			}),
			(this.setDrawingBufferSize = function (t, n, r) {
				(C = t),
					(P = n),
					(I = r),
					(e.width = Math.floor(t * r)),
					(e.height = Math.floor(n * r)),
					this.setViewport(0, 0, t, n);
			}),
			(this.getCurrentViewport = function (t) {
				return (
					void 0 === t &&
						(console.warn(
							'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument'
						),
						(t = new yt())),
					t.copy(A)
				);
			}),
			(this.getViewport = function (t) {
				return t.copy(O);
			}),
			(this.setViewport = function (t, e, n, r) {
				t.isVector4 ? O.set(t.x, t.y, t.z, t.w) : O.set(t, e, n, r),
					Y.viewport(A.copy(O).multiplyScalar(I).floor());
			}),
			(this.getScissor = function (t) {
				return t.copy(B);
			}),
			(this.setScissor = function (t, e, n, r) {
				t.isVector4 ? B.set(t.x, t.y, t.z, t.w) : B.set(t, e, n, r),
					Y.scissor(L.copy(B).multiplyScalar(I).floor());
			}),
			(this.getScissorTest = function () {
				return z;
			}),
			(this.setScissorTest = function (t) {
				Y.setScissorTest((z = t));
			}),
			(this.setOpaqueSort = function (t) {
				D = t;
			}),
			(this.setTransparentSort = function (t) {
				N = t;
			}),
			(this.getClearColor = function () {
				return ct.getClearColor();
			}),
			(this.setClearColor = function () {
				ct.setClearColor.apply(ct, arguments);
			}),
			(this.getClearAlpha = function () {
				return ct.getClearAlpha();
			}),
			(this.setClearAlpha = function () {
				ct.setClearAlpha.apply(ct, arguments);
			}),
			(this.clear = function (t, e, n) {
				var r = 0;
				(void 0 === t || t) && (r |= 16384),
					(void 0 === e || e) && (r |= 256),
					(void 0 === n || n) && (r |= 1024),
					mt.clear(r);
			}),
			(this.clearColor = function () {
				this.clear(!0, !1, !1);
			}),
			(this.clearDepth = function () {
				this.clear(!1, !0, !1);
			}),
			(this.clearStencil = function () {
				this.clear(!1, !1, !0);
			}),
			(this.dispose = function () {
				e.removeEventListener('webglcontextlost', St, !1),
					e.removeEventListener('webglcontextrestored', Tt, !1),
					it.dispose(),
					at.dispose(),
					J.dispose(),
					K.dispose(),
					et.dispose(),
					ft.dispose(),
					bt.dispose(),
					Rt.stop();
			}),
			(this.renderBufferImmediate = function (t, e) {
				ft.initAttributes();
				var n = J.get(t);
				t.hasPositions && !n.position && (n.position = mt.createBuffer()),
					t.hasNormals && !n.normal && (n.normal = mt.createBuffer()),
					t.hasUvs && !n.uv && (n.uv = mt.createBuffer()),
					t.hasColors && !n.color && (n.color = mt.createBuffer());
				var r = e.getAttributes();
				t.hasPositions &&
					(mt.bindBuffer(34962, n.position),
					mt.bufferData(34962, t.positionArray, 35048),
					ft.enableAttribute(r.position),
					mt.vertexAttribPointer(r.position, 3, 5126, !1, 0, 0)),
					t.hasNormals &&
						(mt.bindBuffer(34962, n.normal),
						mt.bufferData(34962, t.normalArray, 35048),
						ft.enableAttribute(r.normal),
						mt.vertexAttribPointer(r.normal, 3, 5126, !1, 0, 0)),
					t.hasUvs &&
						(mt.bindBuffer(34962, n.uv),
						mt.bufferData(34962, t.uvArray, 35048),
						ft.enableAttribute(r.uv),
						mt.vertexAttribPointer(r.uv, 2, 5126, !1, 0, 0)),
					t.hasColors &&
						(mt.bindBuffer(34962, n.color),
						mt.bufferData(34962, t.colorArray, 35048),
						ft.enableAttribute(r.color),
						mt.vertexAttribPointer(r.color, 3, 5126, !1, 0, 0)),
					ft.disableUnusedAttributes(),
					mt.drawArrays(4, 0, t.count),
					(t.count = 0);
			}),
			(this.renderBufferDirect = function (t, e, n, r, i, a) {
				null === e && (e = V);
				var o = i.isMesh && i.matrixWorld.determinant() < 0,
					s = Nt(t, e, r, i);
				Y.setMaterial(r, o);
				var c = n.index,
					l = n.attributes.position;
				if (null === c) {
					if (void 0 === l || 0 === l.count) return;
				} else if (0 === c.count) return;
				var u,
					h = 1;
				!0 === r.wireframe && ((c = tt.getWireframeAttribute(n)), (h = 2)),
					(r.morphTargets || r.morphNormals) && lt.update(i, n, r, s),
					ft.setup(i, r, s, n, c);
				var d = ut;
				null !== c && ((u = $.get(c)), (d = ht).setIndex(u));
				var p = null !== c ? c.count : l.count,
					f = n.drawRange.start * h,
					m = n.drawRange.count * h,
					v = null !== a ? a.start * h : 0,
					g = null !== a ? a.count * h : 1 / 0,
					y = Math.max(f, v),
					x = Math.min(p, f + m, v + g) - 1,
					_ = Math.max(0, x - y + 1);
				if (0 !== _) {
					if (i.isMesh)
						!0 === r.wireframe
							? (Y.setLineWidth(r.wireframeLinewidth * W()), d.setMode(1))
							: d.setMode(4);
					else if (i.isLine) {
						var b = r.linewidth;
						void 0 === b && (b = 1),
							Y.setLineWidth(b * W()),
							i.isLineSegments
								? d.setMode(1)
								: i.isLineLoop
								? d.setMode(2)
								: d.setMode(3);
					} else i.isPoints ? d.setMode(0) : i.isSprite && d.setMode(4);
					if (i.isInstancedMesh) d.renderInstances(y, _, i.count);
					else if (n.isInstancedBufferGeometry) {
						var w = Math.min(n.instanceCount, n._maxInstanceCount);
						d.renderInstances(y, _, w);
					} else d.render(y, _);
				}
			}),
			(this.compile = function (t, e) {
				(d = at.get(t, e)).init(),
					t.traverse(function (t) {
						t.isLight && (d.pushLight(t), t.castShadow && d.pushShadow(t));
					}),
					d.setupLights(e);
				var n = new WeakMap();
				t.traverse(function (e) {
					var r = e.material;
					if (r)
						if (Array.isArray(r))
							for (var i = 0; i < r.length; i++) {
								var a = r[i];
								!1 === n.has(a) && (Dt(a, t, e), n.set(a));
							}
						else !1 === n.has(r) && (Dt(r, t, e), n.set(r));
				});
			});
		var Lt = null;
		var Rt = new Kn();
		function Ct(t, e, n, r) {
			if (!1 !== t.visible) {
				if (t.layers.test(e.layers))
					if (t.isGroup) n = t.renderOrder;
					else if (t.isLOD) !0 === t.autoUpdate && t.update(e);
					else if (t.isLight) d.pushLight(t), t.castShadow && d.pushShadow(t);
					else if (t.isSprite) {
						if (!t.frustumCulled || G.intersectsSprite(t)) {
							r && k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H);
							var i = et.update(t),
								a = t.material;
							a.visible && h.push(t, i, a, n, k.z, null);
						}
					} else if (t.isImmediateRenderObject)
						r && k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H),
							h.push(t, null, t.material, n, k.z, null);
					else if (
						(t.isMesh || t.isLine || t.isPoints) &&
						(t.isSkinnedMesh &&
							t.skeleton.frame !== Z.render.frame &&
							(t.skeleton.update(), (t.skeleton.frame = Z.render.frame)),
						!t.frustumCulled || G.intersectsObject(t))
					) {
						r && k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(H);
						var o = et.update(t),
							s = t.material;
						if (Array.isArray(s))
							for (var c = o.groups, l = 0, u = c.length; l < u; l++) {
								var p = c[l],
									f = s[p.materialIndex];
								f && f.visible && h.push(t, o, f, n, k.z, p);
							}
						else s.visible && h.push(t, o, s, n, k.z, null);
					}
				for (var m = t.children, v = 0, g = m.length; v < g; v++)
					Ct(m[v], e, n, r);
			}
		}
		function Pt(t, e, n) {
			for (
				var r = !0 === e.isScene ? e.overrideMaterial : null,
					i = 0,
					a = t.length;
				i < a;
				i++
			) {
				var o = t[i],
					s = o.object,
					c = o.geometry,
					l = null === r ? o.material : r,
					u = o.group;
				if (n.isArrayCamera) {
					E = n;
					for (var h = n.cameras, p = 0, f = h.length; p < f; p++) {
						var m = h[p];
						s.layers.test(m.layers) &&
							(Y.viewport(A.copy(m.viewport)),
							d.setupLights(m),
							It(s, e, m, c, l, u));
					}
				} else (E = null), It(s, e, n, c, l, u);
			}
		}
		function It(t, e, n, r, i, a) {
			if (
				(t.onBeforeRender(p, e, n, r, i, a),
				(d = at.get(e, E || n)),
				t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, t.matrixWorld),
				t.normalMatrix.getNormalMatrix(t.modelViewMatrix),
				t.isImmediateRenderObject)
			) {
				var o = Nt(n, e, i, t);
				Y.setMaterial(i),
					ft.reset(),
					(function (t, e) {
						t.render(function (t) {
							p.renderBufferImmediate(t, e);
						});
					})(t, o);
			} else p.renderBufferDirect(n, e, r, i, t, a);
			t.onAfterRender(p, e, n, r, i, a), (d = at.get(e, E || n));
		}
		function Dt(t, e, n) {
			!0 !== e.isScene && (e = V);
			var r = J.get(t),
				i = d.state.lights,
				a = d.state.shadowsArray,
				o = i.state.version,
				s = nt.getParameters(t, i.state, a, e, n),
				c = nt.getProgramCacheKey(s),
				l = r.program,
				u = !0;
			if (void 0 === l) t.addEventListener('dispose', Et);
			else if (l.cacheKey !== c) At(t);
			else if (r.lightsStateVersion !== o) u = !1;
			else {
				if (void 0 !== s.shaderID) {
					var h = t.isMeshStandardMaterial ? e.environment : null;
					return void (r.envMap = K.get(t.envMap || h));
				}
				u = !1;
			}
			u &&
				((s.uniforms = nt.getUniforms(t)),
				t.onBeforeCompile(s, p),
				(l = nt.acquireProgram(s, c)),
				(r.program = l),
				(r.uniforms = s.uniforms),
				(r.outputEncoding = s.outputEncoding));
			var f = r.uniforms;
			((t.isShaderMaterial || t.isRawShaderMaterial) && !0 !== t.clipping) ||
				((r.numClippingPlanes = ot.numPlanes),
				(r.numIntersection = ot.numIntersection),
				(f.clippingPlanes = ot.uniform)),
				(r.environment = t.isMeshStandardMaterial ? e.environment : null),
				(r.fog = e.fog),
				(r.envMap = K.get(t.envMap || r.environment)),
				(r.needsLights = (function (t) {
					return (
						t.isMeshLambertMaterial ||
						t.isMeshToonMaterial ||
						t.isMeshPhongMaterial ||
						t.isMeshStandardMaterial ||
						t.isShadowMaterial ||
						(t.isShaderMaterial && !0 === t.lights)
					);
				})(t)),
				(r.lightsStateVersion = o),
				r.needsLights &&
					((f.ambientLightColor.value = i.state.ambient),
					(f.lightProbe.value = i.state.probe),
					(f.directionalLights.value = i.state.directional),
					(f.directionalLightShadows.value = i.state.directionalShadow),
					(f.spotLights.value = i.state.spot),
					(f.spotLightShadows.value = i.state.spotShadow),
					(f.rectAreaLights.value = i.state.rectArea),
					(f.ltc_1.value = i.state.rectAreaLTC1),
					(f.ltc_2.value = i.state.rectAreaLTC2),
					(f.pointLights.value = i.state.point),
					(f.pointLightShadows.value = i.state.pointShadow),
					(f.hemisphereLights.value = i.state.hemi),
					(f.directionalShadowMap.value = i.state.directionalShadowMap),
					(f.directionalShadowMatrix.value = i.state.directionalShadowMatrix),
					(f.spotShadowMap.value = i.state.spotShadowMap),
					(f.spotShadowMatrix.value = i.state.spotShadowMatrix),
					(f.pointShadowMap.value = i.state.pointShadowMap),
					(f.pointShadowMatrix.value = i.state.pointShadowMatrix));
			var m = r.program.getUniforms(),
				v = fi.seqWithValue(m.seq, f);
			r.uniformsList = v;
		}
		function Nt(t, e, n, r) {
			!0 !== e.isScene && (e = V), Q.resetTextureUnits();
			var i = e.fog,
				a = n.isMeshStandardMaterial ? e.environment : null,
				o = null === x ? p.outputEncoding : x.texture.encoding,
				s = K.get(n.envMap || a),
				c = J.get(n),
				l = d.state.lights;
			if (!0 === F && (!0 === U || t !== S)) {
				var u = t === S && n.id === M;
				ot.setState(n, t, u);
			}
			n.version === c.__version
				? (n.fog && c.fog !== i) ||
				  c.environment !== a ||
				  (c.needsLights && c.lightsStateVersion !== l.state.version)
					? Dt(n, e, r)
					: void 0 === c.numClippingPlanes ||
					  (c.numClippingPlanes === ot.numPlanes &&
							c.numIntersection === ot.numIntersection)
					? (c.outputEncoding !== o || c.envMap !== s) && Dt(n, e, r)
					: Dt(n, e, r)
				: (Dt(n, e, r), (c.__version = n.version));
			var h,
				f,
				m = !1,
				v = !1,
				g = !1,
				y = c.program,
				_ = y.getUniforms(),
				w = c.uniforms;
			if (
				(Y.useProgram(y.program) && ((m = !0), (v = !0), (g = !0)),
				n.id !== M && ((M = n.id), (v = !0)),
				m || S !== t)
			) {
				if (
					(_.setValue(mt, 'projectionMatrix', t.projectionMatrix),
					X.logarithmicDepthBuffer &&
						_.setValue(
							mt,
							'logDepthBufFC',
							2 / (Math.log(t.far + 1) / Math.LN2)
						),
					S !== t && ((S = t), (v = !0), (g = !0)),
					n.isShaderMaterial ||
						n.isMeshPhongMaterial ||
						n.isMeshToonMaterial ||
						n.isMeshStandardMaterial ||
						n.envMap)
				) {
					var E = _.map.cameraPosition;
					void 0 !== E &&
						E.setValue(mt, k.setFromMatrixPosition(t.matrixWorld));
				}
				(n.isMeshPhongMaterial ||
					n.isMeshToonMaterial ||
					n.isMeshLambertMaterial ||
					n.isMeshBasicMaterial ||
					n.isMeshStandardMaterial ||
					n.isShaderMaterial) &&
					_.setValue(mt, 'isOrthographic', !0 === t.isOrthographicCamera),
					(n.isMeshPhongMaterial ||
						n.isMeshToonMaterial ||
						n.isMeshLambertMaterial ||
						n.isMeshBasicMaterial ||
						n.isMeshStandardMaterial ||
						n.isShaderMaterial ||
						n.isShadowMaterial ||
						n.skinning) &&
						_.setValue(mt, 'viewMatrix', t.matrixWorldInverse);
			}
			if (n.skinning) {
				_.setOptional(mt, r, 'bindMatrix'),
					_.setOptional(mt, r, 'bindMatrixInverse');
				var A = r.skeleton;
				if (A) {
					var L = A.bones;
					if (X.floatVertexTextures) {
						if (void 0 === A.boneTexture) {
							var R = Math.sqrt(4 * L.length);
							(R = st.ceilPowerOfTwo(R)), (R = Math.max(R, 4));
							var C = new Float32Array(R * R * 4);
							C.set(A.boneMatrices);
							var D = new Yn(C, R, R, T, b);
							(A.boneMatrices = C),
								(A.boneTexture = D),
								(A.boneTextureSize = R);
						}
						_.setValue(mt, 'boneTexture', A.boneTexture, Q),
							_.setValue(mt, 'boneTextureSize', A.boneTextureSize);
					} else _.setOptional(mt, A, 'boneMatrices');
				}
			}
			return (
				(v || c.receiveShadow !== r.receiveShadow) &&
					((c.receiveShadow = r.receiveShadow),
					_.setValue(mt, 'receiveShadow', r.receiveShadow)),
				v &&
					(_.setValue(mt, 'toneMappingExposure', p.toneMappingExposure),
					c.needsLights &&
						((f = g),
						((h = w).ambientLightColor.needsUpdate = f),
						(h.lightProbe.needsUpdate = f),
						(h.directionalLights.needsUpdate = f),
						(h.directionalLightShadows.needsUpdate = f),
						(h.pointLights.needsUpdate = f),
						(h.pointLightShadows.needsUpdate = f),
						(h.spotLights.needsUpdate = f),
						(h.spotLightShadows.needsUpdate = f),
						(h.rectAreaLights.needsUpdate = f),
						(h.hemisphereLights.needsUpdate = f)),
					i && n.fog && rt.refreshFogUniforms(w, i),
					rt.refreshMaterialUniforms(w, n, I, P),
					fi.upload(mt, c.uniformsList, w, Q)),
				n.isShaderMaterial &&
					!0 === n.uniformsNeedUpdate &&
					(fi.upload(mt, c.uniformsList, w, Q), (n.uniformsNeedUpdate = !1)),
				n.isSpriteMaterial && _.setValue(mt, 'center', r.center),
				_.setValue(mt, 'modelViewMatrix', r.modelViewMatrix),
				_.setValue(mt, 'normalMatrix', r.normalMatrix),
				_.setValue(mt, 'modelMatrix', r.matrixWorld),
				y
			);
		}
		Rt.setAnimationLoop(function (t) {
			bt.isPresenting || (Lt && Lt(t));
		}),
			'undefined' != typeof window && Rt.setContext(window),
			(this.setAnimationLoop = function (t) {
				(Lt = t), bt.setAnimationLoop(t), null === t ? Rt.stop() : Rt.start();
			}),
			(this.render = function (t, e) {
				var n, r;
				if (
					(void 0 !== arguments[2] &&
						(console.warn(
							'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.'
						),
						(n = arguments[2])),
					void 0 !== arguments[3] &&
						(console.warn(
							'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.'
						),
						(r = arguments[3])),
					void 0 === e || !0 === e.isCamera)
				) {
					if (!0 !== f) {
						ft.resetDefaultState(),
							(M = -1),
							(S = null),
							!0 === t.autoUpdate && t.updateMatrixWorld(),
							null === e.parent && e.updateMatrixWorld(),
							!0 === bt.enabled &&
								!0 === bt.isPresenting &&
								(e = bt.getCamera(e)),
							!0 === t.isScene && t.onBeforeRender(p, t, e, n || x),
							(d = at.get(t, e)).init(),
							H.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
							G.setFromProjectionMatrix(H),
							(U = this.localClippingEnabled),
							(F = ot.init(this.clippingPlanes, U, e)),
							(h = it.get(t, e)).init(),
							Ct(t, e, 0, p.sortObjects),
							h.finish(),
							!0 === p.sortObjects && h.sort(D, N),
							!0 === F && ot.beginShadows();
						var i = d.state.shadowsArray;
						Mt.render(i, t, e),
							d.setupLights(e),
							!0 === F && ot.endShadows(),
							!0 === this.info.autoReset && this.info.reset(),
							void 0 !== n && this.setRenderTarget(n),
							ct.render(h, t, e, r);
						var a = h.opaque,
							o = h.transparent;
						a.length > 0 && Pt(a, t, e),
							o.length > 0 && Pt(o, t, e),
							!0 === t.isScene && t.onAfterRender(p, t, e),
							null !== x &&
								(Q.updateRenderTargetMipmap(x),
								Q.updateMultisampleRenderTarget(x)),
							Y.buffers.depth.setTest(!0),
							Y.buffers.depth.setMask(!0),
							Y.buffers.color.setMask(!0),
							Y.setPolygonOffset(!1),
							(h = null),
							(d = null);
					}
				} else
					console.error(
						'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.'
					);
			}),
			(this.setFramebuffer = function (t) {
				m !== t && null === x && mt.bindFramebuffer(36160, t), (m = t);
			}),
			(this.getActiveCubeFace = function () {
				return v;
			}),
			(this.getActiveMipmapLevel = function () {
				return g;
			}),
			(this.getRenderList = function () {
				return h;
			}),
			(this.setRenderList = function (t) {
				h = t;
			}),
			(this.getRenderState = function () {
				return d;
			}),
			(this.setRenderState = function (t) {
				d = t;
			}),
			(this.getRenderTarget = function () {
				return x;
			}),
			(this.setRenderTarget = function (t, e, n) {
				void 0 === e && (e = 0),
					void 0 === n && (n = 0),
					(x = t),
					(v = e),
					(g = n),
					t && void 0 === J.get(t).__webglFramebuffer && Q.setupRenderTarget(t);
				var r = m,
					i = !1;
				if (t) {
					var a = J.get(t).__webglFramebuffer;
					t.isWebGLCubeRenderTarget
						? ((r = a[e]), (i = !0))
						: (r = t.isWebGLMultisampleRenderTarget
								? J.get(t).__webglMultisampledFramebuffer
								: a),
						A.copy(t.viewport),
						L.copy(t.scissor),
						(R = t.scissorTest);
				} else
					A.copy(O).multiplyScalar(I).floor(),
						L.copy(B).multiplyScalar(I).floor(),
						(R = z);
				if (
					(_ !== r && (mt.bindFramebuffer(36160, r), (_ = r)),
					Y.viewport(A),
					Y.scissor(L),
					Y.setScissorTest(R),
					i)
				) {
					var o = J.get(t.texture);
					mt.framebufferTexture2D(36160, 36064, 34069 + e, o.__webglTexture, n);
				}
			}),
			(this.readRenderTargetPixels = function (t, e, n, r, i, a, o) {
				if (t && t.isWebGLRenderTarget) {
					var s = J.get(t).__webglFramebuffer;
					if ((t.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s)) {
						var c = !1;
						s !== _ && (mt.bindFramebuffer(36160, s), (c = !0));
						try {
							var l = t.texture,
								u = l.format,
								h = l.type;
							if (u !== T && dt.convert(u) !== mt.getParameter(35739))
								return void console.error(
									'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.'
								);
							if (
								!(
									h === y ||
									dt.convert(h) === mt.getParameter(35738) ||
									(h === b &&
										(X.isWebGL2 ||
											j.get('OES_texture_float') ||
											j.get('WEBGL_color_buffer_float'))) ||
									(h === w &&
										(X.isWebGL2
											? j.get('EXT_color_buffer_float')
											: j.get('EXT_color_buffer_half_float')))
								)
							)
								return void console.error(
									'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.'
								);
							36053 === mt.checkFramebufferStatus(36160)
								? e >= 0 &&
								  e <= t.width - r &&
								  n >= 0 &&
								  n <= t.height - i &&
								  mt.readPixels(e, n, r, i, dt.convert(u), dt.convert(h), a)
								: console.error(
										'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.'
								  );
						} finally {
							c && mt.bindFramebuffer(36160, _);
						}
					}
				} else
					console.error(
						'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.'
					);
			}),
			(this.copyFramebufferToTexture = function (t, e, n) {
				void 0 === n && (n = 0);
				var r = Math.pow(2, -n),
					i = Math.floor(e.image.width * r),
					a = Math.floor(e.image.height * r),
					o = dt.convert(e.format);
				Q.setTexture2D(e, 0),
					mt.copyTexImage2D(3553, n, o, t.x, t.y, i, a, 0),
					Y.unbindTexture();
			}),
			(this.copyTextureToTexture = function (t, e, n, r) {
				void 0 === r && (r = 0);
				var i = e.image.width,
					a = e.image.height,
					o = dt.convert(n.format),
					s = dt.convert(n.type);
				Q.setTexture2D(n, 0),
					mt.pixelStorei(37440, n.flipY),
					mt.pixelStorei(37441, n.premultiplyAlpha),
					mt.pixelStorei(3317, n.unpackAlignment),
					e.isDataTexture
						? mt.texSubImage2D(3553, r, t.x, t.y, i, a, o, s, e.image.data)
						: e.isCompressedTexture
						? mt.compressedTexSubImage2D(
								3553,
								r,
								t.x,
								t.y,
								e.mipmaps[0].width,
								e.mipmaps[0].height,
								o,
								e.mipmaps[0].data
						  )
						: mt.texSubImage2D(3553, r, t.x, t.y, o, s, e.image),
					0 === r && n.generateMipmaps && mt.generateMipmap(3553),
					Y.unbindTexture();
			}),
			(this.initTexture = function (t) {
				Q.setTexture2D(t, 0), Y.unbindTexture();
			}),
			'undefined' != typeof __THREE_DEVTOOLS__ &&
				__THREE_DEVTOOLS__.dispatchEvent(
					new CustomEvent('observe', { detail: this })
				);
	}
	function ia(t) {
		ra.call(this, t);
	}
	(Ki.prototype = Object.assign(Object.create(Vn.prototype), {
		constructor: Ki,
		isArrayCamera: !0,
	})),
		($i.prototype = Object.assign(Object.create(be.prototype), {
			constructor: $i,
			isGroup: !0,
		})),
		Object.assign(ta.prototype, {
			constructor: ta,
			getHandSpace: function () {
				if (
					null === this._hand &&
					((this._hand = new $i()),
					(this._hand.matrixAutoUpdate = !1),
					(this._hand.visible = !1),
					(this._hand.joints = []),
					(this._hand.inputState = { pinching: !1 }),
					window.XRHand)
				)
					for (var t = 0; t <= window.XRHand.LITTLE_PHALANX_TIP; t++) {
						var e = new $i();
						(e.matrixAutoUpdate = !1),
							(e.visible = !1),
							this._hand.joints.push(e),
							this._hand.add(e);
					}
				return this._hand;
			},
			getTargetRaySpace: function () {
				return (
					null === this._targetRay &&
						((this._targetRay = new $i()),
						(this._targetRay.matrixAutoUpdate = !1),
						(this._targetRay.visible = !1)),
					this._targetRay
				);
			},
			getGripSpace: function () {
				return (
					null === this._grip &&
						((this._grip = new $i()),
						(this._grip.matrixAutoUpdate = !1),
						(this._grip.visible = !1)),
					this._grip
				);
			},
			dispatchEvent: function (t) {
				return (
					null !== this._targetRay && this._targetRay.dispatchEvent(t),
					null !== this._grip && this._grip.dispatchEvent(t),
					null !== this._hand && this._hand.dispatchEvent(t),
					this
				);
			},
			disconnect: function (t) {
				return (
					this.dispatchEvent({ type: 'disconnected', data: t }),
					null !== this._targetRay && (this._targetRay.visible = !1),
					null !== this._grip && (this._grip.visible = !1),
					null !== this._hand && (this._hand.visible = !1),
					this
				);
			},
			update: function (t, e, n) {
				var r = null,
					i = null,
					a = null,
					o = this._targetRay,
					s = this._grip,
					c = this._hand;
				if (t)
					if (c && t.hand) {
						a = !0;
						for (var l = 0; l <= window.XRHand.LITTLE_PHALANX_TIP; l++)
							if (t.hand[l]) {
								var u = e.getJointPose(t.hand[l], n),
									h = c.joints[l];
								null !== u &&
									(h.matrix.fromArray(u.transform.matrix),
									h.matrix.decompose(h.position, h.rotation, h.scale),
									(h.jointRadius = u.radius)),
									(h.visible = null !== u);
								var d = c.joints[window.XRHand.INDEX_PHALANX_TIP],
									p = c.joints[window.XRHand.THUMB_PHALANX_TIP],
									f = d.position.distanceTo(p.position);
								c.inputState.pinching && f > 0.025
									? ((c.inputState.pinching = !1),
									  this.dispatchEvent({
											type: 'pinchend',
											handedness: t.handedness,
											target: this,
									  }))
									: !c.inputState.pinching &&
									  f <= 0.015 &&
									  ((c.inputState.pinching = !0),
									  this.dispatchEvent({
											type: 'pinchstart',
											handedness: t.handedness,
											target: this,
									  }));
							}
					} else
						null !== o &&
							null !== (r = e.getPose(t.targetRaySpace, n)) &&
							(o.matrix.fromArray(r.transform.matrix),
							o.matrix.decompose(o.position, o.rotation, o.scale)),
							null !== s &&
								t.gripSpace &&
								null !== (i = e.getPose(t.gripSpace, n)) &&
								(s.matrix.fromArray(i.transform.matrix),
								s.matrix.decompose(s.position, s.rotation, s.scale));
				return (
					null !== o && (o.visible = null !== r),
					null !== s && (s.visible = null !== i),
					null !== c && (c.visible = null !== a),
					this
				);
			},
		}),
		Object.assign(ea.prototype, rt.prototype),
		(ia.prototype = Object.assign(Object.create(ra.prototype), {
			constructor: ia,
			isWebGL1Renderer: !0,
		}));
	var aa = (function () {
			function t(t, e) {
				Object.defineProperty(this, 'isFogExp2', { value: !0 }),
					(this.name = ''),
					(this.color = new Ve(t)),
					(this.density = void 0 !== e ? e : 25e-5);
			}
			var e = t.prototype;
			return (
				(e.clone = function () {
					return new t(this.color, this.density);
				}),
				(e.toJSON = function () {
					return {
						type: 'FogExp2',
						color: this.color.getHex(),
						density: this.density,
					};
				}),
				t
			);
		})(),
		oa = (function () {
			function t(t, e, n) {
				Object.defineProperty(this, 'isFog', { value: !0 }),
					(this.name = ''),
					(this.color = new Ve(t)),
					(this.near = void 0 !== e ? e : 1),
					(this.far = void 0 !== n ? n : 1e3);
			}
			var e = t.prototype;
			return (
				(e.clone = function () {
					return new t(this.color, this.near, this.far);
				}),
				(e.toJSON = function () {
					return {
						type: 'Fog',
						color: this.color.getHex(),
						near: this.near,
						far: this.far,
					};
				}),
				t
			);
		})(),
		sa = (function (t) {
			function e() {
				var e;
				return (
					(e = t.call(this) || this),
					Object.defineProperty(ht(e), 'isScene', { value: !0 }),
					(e.type = 'Scene'),
					(e.background = null),
					(e.environment = null),
					(e.fog = null),
					(e.overrideMaterial = null),
					(e.autoUpdate = !0),
					'undefined' != typeof __THREE_DEVTOOLS__ &&
						__THREE_DEVTOOLS__.dispatchEvent(
							new CustomEvent('observe', { detail: ht(e) })
						),
					e
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.copy = function (e, n) {
					return (
						t.prototype.copy.call(this, e, n),
						null !== e.background && (this.background = e.background.clone()),
						null !== e.environment &&
							(this.environment = e.environment.clone()),
						null !== e.fog && (this.fog = e.fog.clone()),
						null !== e.overrideMaterial &&
							(this.overrideMaterial = e.overrideMaterial.clone()),
						(this.autoUpdate = e.autoUpdate),
						(this.matrixAutoUpdate = e.matrixAutoUpdate),
						this
					);
				}),
				(n.toJSON = function (e) {
					var n = t.prototype.toJSON.call(this, e);
					return (
						null !== this.background &&
							(n.object.background = this.background.toJSON(e)),
						null !== this.environment &&
							(n.object.environment = this.environment.toJSON(e)),
						null !== this.fog && (n.object.fog = this.fog.toJSON()),
						n
					);
				}),
				e
			);
		})(be);
	function ca(t, e) {
		(this.array = t),
			(this.stride = e),
			(this.count = void 0 !== t ? t.length / e : 0),
			(this.usage = tt),
			(this.updateRange = { offset: 0, count: -1 }),
			(this.version = 0),
			(this.uuid = st.generateUUID());
	}
	Object.defineProperty(ca.prototype, 'needsUpdate', {
		set: function (t) {
			!0 === t && this.version++;
		},
	}),
		Object.assign(ca.prototype, {
			isInterleavedBuffer: !0,
			onUploadCallback: function () {},
			setUsage: function (t) {
				return (this.usage = t), this;
			},
			copy: function (t) {
				return (
					(this.array = new t.array.constructor(t.array)),
					(this.count = t.count),
					(this.stride = t.stride),
					(this.usage = t.usage),
					this
				);
			},
			copyAt: function (t, e, n) {
				(t *= this.stride), (n *= e.stride);
				for (var r = 0, i = this.stride; r < i; r++)
					this.array[t + r] = e.array[n + r];
				return this;
			},
			set: function (t, e) {
				return void 0 === e && (e = 0), this.array.set(t, e), this;
			},
			clone: function (t) {
				void 0 === t.arrayBuffers && (t.arrayBuffers = {}),
					void 0 === this.array.buffer._uuid &&
						(this.array.buffer._uuid = st.generateUUID()),
					void 0 === t.arrayBuffers[this.array.buffer._uuid] &&
						(t.arrayBuffers[this.array.buffer._uuid] =
							this.array.slice(0).buffer);
				var e = new ca(
					new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),
					this.stride
				);
				return e.setUsage(this.usage), e;
			},
			onUpload: function (t) {
				return (this.onUploadCallback = t), this;
			},
			toJSON: function (t) {
				return (
					void 0 === t.arrayBuffers && (t.arrayBuffers = {}),
					void 0 === this.array.buffer._uuid &&
						(this.array.buffer._uuid = st.generateUUID()),
					void 0 === t.arrayBuffers[this.array.buffer._uuid] &&
						(t.arrayBuffers[this.array.buffer._uuid] =
							Array.prototype.slice.call(new Uint32Array(this.array.buffer))),
					{
						uuid: this.uuid,
						buffer: this.array.buffer._uuid,
						type: this.array.constructor.name,
						stride: this.stride,
					}
				);
			},
		});
	var la,
		ua = new wt();
	function ha(t, e, n, r) {
		(this.name = ''),
			(this.data = t),
			(this.itemSize = e),
			(this.offset = n),
			(this.normalized = !0 === r);
	}
	function da(t) {
		qe.call(this),
			(this.type = 'SpriteMaterial'),
			(this.color = new Ve(16777215)),
			(this.map = null),
			(this.alphaMap = null),
			(this.rotation = 0),
			(this.sizeAttenuation = !0),
			(this.transparent = !0),
			this.setValues(t);
	}
	Object.defineProperties(ha.prototype, {
		count: {
			get: function () {
				return this.data.count;
			},
		},
		array: {
			get: function () {
				return this.data.array;
			},
		},
		needsUpdate: {
			set: function (t) {
				this.data.needsUpdate = t;
			},
		},
	}),
		Object.assign(ha.prototype, {
			isInterleavedBufferAttribute: !0,
			applyMatrix4: function (t) {
				for (var e = 0, n = this.data.count; e < n; e++)
					(ua.x = this.getX(e)),
						(ua.y = this.getY(e)),
						(ua.z = this.getZ(e)),
						ua.applyMatrix4(t),
						this.setXYZ(e, ua.x, ua.y, ua.z);
				return this;
			},
			setX: function (t, e) {
				return (this.data.array[t * this.data.stride + this.offset] = e), this;
			},
			setY: function (t, e) {
				return (
					(this.data.array[t * this.data.stride + this.offset + 1] = e), this
				);
			},
			setZ: function (t, e) {
				return (
					(this.data.array[t * this.data.stride + this.offset + 2] = e), this
				);
			},
			setW: function (t, e) {
				return (
					(this.data.array[t * this.data.stride + this.offset + 3] = e), this
				);
			},
			getX: function (t) {
				return this.data.array[t * this.data.stride + this.offset];
			},
			getY: function (t) {
				return this.data.array[t * this.data.stride + this.offset + 1];
			},
			getZ: function (t) {
				return this.data.array[t * this.data.stride + this.offset + 2];
			},
			getW: function (t) {
				return this.data.array[t * this.data.stride + this.offset + 3];
			},
			setXY: function (t, e, n) {
				return (
					(t = t * this.data.stride + this.offset),
					(this.data.array[t + 0] = e),
					(this.data.array[t + 1] = n),
					this
				);
			},
			setXYZ: function (t, e, n, r) {
				return (
					(t = t * this.data.stride + this.offset),
					(this.data.array[t + 0] = e),
					(this.data.array[t + 1] = n),
					(this.data.array[t + 2] = r),
					this
				);
			},
			setXYZW: function (t, e, n, r, i) {
				return (
					(t = t * this.data.stride + this.offset),
					(this.data.array[t + 0] = e),
					(this.data.array[t + 1] = n),
					(this.data.array[t + 2] = r),
					(this.data.array[t + 3] = i),
					this
				);
			},
			clone: function (t) {
				if (void 0 === t) {
					console.log(
						'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.'
					);
					for (var e = [], n = 0; n < this.count; n++)
						for (
							var r = n * this.data.stride + this.offset, i = 0;
							i < this.itemSize;
							i++
						)
							e.push(this.data.array[r + i]);
					return new Je(
						new this.array.constructor(e),
						this.itemSize,
						this.normalized
					);
				}
				return (
					void 0 === t.interleavedBuffers && (t.interleavedBuffers = {}),
					void 0 === t.interleavedBuffers[this.data.uuid] &&
						(t.interleavedBuffers[this.data.uuid] = this.data.clone(t)),
					new ha(
						t.interleavedBuffers[this.data.uuid],
						this.itemSize,
						this.offset,
						this.normalized
					)
				);
			},
			toJSON: function (t) {
				if (void 0 === t) {
					console.log(
						'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.'
					);
					for (var e = [], n = 0; n < this.count; n++)
						for (
							var r = n * this.data.stride + this.offset, i = 0;
							i < this.itemSize;
							i++
						)
							e.push(this.data.array[r + i]);
					return {
						itemSize: this.itemSize,
						type: this.array.constructor.name,
						array: e,
						normalized: this.normalized,
					};
				}
				return (
					void 0 === t.interleavedBuffers && (t.interleavedBuffers = {}),
					void 0 === t.interleavedBuffers[this.data.uuid] &&
						(t.interleavedBuffers[this.data.uuid] = this.data.toJSON(t)),
					{
						isInterleavedBufferAttribute: !0,
						itemSize: this.itemSize,
						data: this.data.uuid,
						offset: this.offset,
						normalized: this.normalized,
					}
				);
			},
		}),
		(da.prototype = Object.create(qe.prototype)),
		(da.prototype.constructor = da),
		(da.prototype.isSpriteMaterial = !0),
		(da.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				this.color.copy(t.color),
				(this.map = t.map),
				(this.alphaMap = t.alphaMap),
				(this.rotation = t.rotation),
				(this.sizeAttenuation = t.sizeAttenuation),
				this
			);
		});
	var pa = new wt(),
		fa = new wt(),
		ma = new wt(),
		va = new pt(),
		ga = new pt(),
		ya = new Jt(),
		xa = new wt(),
		_a = new wt(),
		ba = new wt(),
		wa = new pt(),
		Ma = new pt(),
		Sa = new pt();
	function Ta(t) {
		if ((be.call(this), (this.type = 'Sprite'), void 0 === la)) {
			la = new vn();
			var e = new ca(
				new Float32Array([
					-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5,
					0, 0, 1,
				]),
				5
			);
			la.setIndex([0, 1, 2, 0, 2, 3]),
				la.setAttribute('position', new ha(e, 3, 0, !1)),
				la.setAttribute('uv', new ha(e, 2, 3, !1));
		}
		(this.geometry = la),
			(this.material = void 0 !== t ? t : new da()),
			(this.center = new pt(0.5, 0.5));
	}
	function Ea(t, e, n, r, i, a) {
		va.subVectors(t, n).addScalar(0.5).multiply(r),
			void 0 !== i
				? ((ga.x = a * va.x - i * va.y), (ga.y = i * va.x + a * va.y))
				: ga.copy(va),
			t.copy(e),
			(t.x += ga.x),
			(t.y += ga.y),
			t.applyMatrix4(ya);
	}
	Ta.prototype = Object.assign(Object.create(be.prototype), {
		constructor: Ta,
		isSprite: !0,
		raycast: function (t, e) {
			null === t.camera &&
				console.error(
					'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'
				),
				fa.setFromMatrixScale(this.matrixWorld),
				ya.copy(t.camera.matrixWorld),
				this.modelViewMatrix.multiplyMatrices(
					t.camera.matrixWorldInverse,
					this.matrixWorld
				),
				ma.setFromMatrixPosition(this.modelViewMatrix),
				t.camera.isPerspectiveCamera &&
					!1 === this.material.sizeAttenuation &&
					fa.multiplyScalar(-ma.z);
			var n,
				r,
				i = this.material.rotation;
			0 !== i && ((r = Math.cos(i)), (n = Math.sin(i)));
			var a = this.center;
			Ea(xa.set(-0.5, -0.5, 0), ma, a, fa, n, r),
				Ea(_a.set(0.5, -0.5, 0), ma, a, fa, n, r),
				Ea(ba.set(0.5, 0.5, 0), ma, a, fa, n, r),
				wa.set(0, 0),
				Ma.set(1, 0),
				Sa.set(1, 1);
			var o = t.ray.intersectTriangle(xa, _a, ba, !1, pa);
			if (
				null !== o ||
				(Ea(_a.set(-0.5, 0.5, 0), ma, a, fa, n, r),
				Ma.set(0, 1),
				null !== (o = t.ray.intersectTriangle(xa, ba, _a, !1, pa)))
			) {
				var s = t.ray.origin.distanceTo(pa);
				s < t.near ||
					s > t.far ||
					e.push({
						distance: s,
						point: pa.clone(),
						uv: Be.getUV(pa, xa, _a, ba, wa, Ma, Sa, new pt()),
						face: null,
						object: this,
					});
			}
		},
		copy: function (t) {
			return (
				be.prototype.copy.call(this, t),
				void 0 !== t.center && this.center.copy(t.center),
				(this.material = t.material),
				this
			);
		},
	});
	var Aa,
		La,
		Ra,
		Ca,
		Pa,
		Ia = new wt(),
		Da = new wt();
	function Na() {
		be.call(this),
			(this._currentLevel = 0),
			(this.type = 'LOD'),
			Object.defineProperties(this, { levels: { enumerable: !0, value: [] } }),
			(this.autoUpdate = !0);
	}
	function Oa(t, e) {
		t &&
			t.isGeometry &&
			console.error(
				'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.'
			),
			Nn.call(this, t, e),
			(this.type = 'SkinnedMesh'),
			(this.bindMode = 'attached'),
			(this.bindMatrix = new Jt()),
			(this.bindMatrixInverse = new Jt());
	}
	(Na.prototype = Object.assign(Object.create(be.prototype), {
		constructor: Na,
		isLOD: !0,
		copy: function (t) {
			be.prototype.copy.call(this, t, !1);
			for (var e = t.levels, n = 0, r = e.length; n < r; n++) {
				var i = e[n];
				this.addLevel(i.object.clone(), i.distance);
			}
			return (this.autoUpdate = t.autoUpdate), this;
		},
		addLevel: function (t, e) {
			void 0 === e && (e = 0), (e = Math.abs(e));
			var n,
				r = this.levels;
			for (n = 0; n < r.length && !(e < r[n].distance); n++);
			return r.splice(n, 0, { distance: e, object: t }), this.add(t), this;
		},
		getCurrentLevel: function () {
			return this._currentLevel;
		},
		getObjectForDistance: function (t) {
			var e = this.levels;
			if (e.length > 0) {
				var n, r;
				for (n = 1, r = e.length; n < r && !(t < e[n].distance); n++);
				return e[n - 1].object;
			}
			return null;
		},
		raycast: function (t, e) {
			if (this.levels.length > 0) {
				Ia.setFromMatrixPosition(this.matrixWorld);
				var n = t.ray.origin.distanceTo(Ia);
				this.getObjectForDistance(n).raycast(t, e);
			}
		},
		update: function (t) {
			var e = this.levels;
			if (e.length > 1) {
				Ia.setFromMatrixPosition(t.matrixWorld),
					Da.setFromMatrixPosition(this.matrixWorld);
				var n,
					r,
					i = Ia.distanceTo(Da) / t.zoom;
				for (
					e[0].object.visible = !0, n = 1, r = e.length;
					n < r && i >= e[n].distance;
					n++
				)
					(e[n - 1].object.visible = !1), (e[n].object.visible = !0);
				for (this._currentLevel = n - 1; n < r; n++) e[n].object.visible = !1;
			}
		},
		toJSON: function (t) {
			var e = be.prototype.toJSON.call(this, t);
			!1 === this.autoUpdate && (e.object.autoUpdate = !1),
				(e.object.levels = []);
			for (var n = this.levels, r = 0, i = n.length; r < i; r++) {
				var a = n[r];
				e.object.levels.push({ object: a.object.uuid, distance: a.distance });
			}
			return e;
		},
	})),
		(Oa.prototype = Object.assign(Object.create(Nn.prototype), {
			constructor: Oa,
			isSkinnedMesh: !0,
			copy: function (t) {
				return (
					Nn.prototype.copy.call(this, t),
					(this.bindMode = t.bindMode),
					this.bindMatrix.copy(t.bindMatrix),
					this.bindMatrixInverse.copy(t.bindMatrixInverse),
					(this.skeleton = t.skeleton),
					this
				);
			},
			bind: function (t, e) {
				(this.skeleton = t),
					void 0 === e &&
						(this.updateMatrixWorld(!0),
						this.skeleton.calculateInverses(),
						(e = this.matrixWorld)),
					this.bindMatrix.copy(e),
					this.bindMatrixInverse.getInverse(e);
			},
			pose: function () {
				this.skeleton.pose();
			},
			normalizeSkinWeights: function () {
				for (
					var t = new yt(),
						e = this.geometry.attributes.skinWeight,
						n = 0,
						r = e.count;
					n < r;
					n++
				) {
					(t.x = e.getX(n)),
						(t.y = e.getY(n)),
						(t.z = e.getZ(n)),
						(t.w = e.getW(n));
					var i = 1 / t.manhattanLength();
					i !== 1 / 0 ? t.multiplyScalar(i) : t.set(1, 0, 0, 0),
						e.setXYZW(n, t.x, t.y, t.z, t.w);
				}
			},
			updateMatrixWorld: function (t) {
				Nn.prototype.updateMatrixWorld.call(this, t),
					'attached' === this.bindMode
						? this.bindMatrixInverse.getInverse(this.matrixWorld)
						: 'detached' === this.bindMode
						? this.bindMatrixInverse.getInverse(this.bindMatrix)
						: console.warn(
								'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode
						  );
			},
			boneTransform:
				((Aa = new wt()),
				(La = new yt()),
				(Ra = new yt()),
				(Ca = new wt()),
				(Pa = new Jt()),
				function (t, e) {
					var n = this.skeleton,
						r = this.geometry;
					La.fromBufferAttribute(r.attributes.skinIndex, t),
						Ra.fromBufferAttribute(r.attributes.skinWeight, t),
						Aa.fromBufferAttribute(r.attributes.position, t).applyMatrix4(
							this.bindMatrix
						),
						e.set(0, 0, 0);
					for (var i = 0; i < 4; i++) {
						var a = Ra.getComponent(i);
						if (0 !== a) {
							var o = La.getComponent(i);
							Pa.multiplyMatrices(n.bones[o].matrixWorld, n.boneInverses[o]),
								e.addScaledVector(Ca.copy(Aa).applyMatrix4(Pa), a);
						}
					}
					return e.applyMatrix4(this.bindMatrixInverse);
				}),
		}));
	var Ba = new Jt(),
		za = new Jt();
	function Ga(t, e) {
		if (
			((t = t || []),
			(this.bones = t.slice(0)),
			(this.boneMatrices = new Float32Array(16 * this.bones.length)),
			(this.frame = -1),
			void 0 === e)
		)
			this.calculateInverses();
		else if (this.bones.length === e.length) this.boneInverses = e.slice(0);
		else {
			console.warn('THREE.Skeleton boneInverses is the wrong length.'),
				(this.boneInverses = []);
			for (var n = 0, r = this.bones.length; n < r; n++)
				this.boneInverses.push(new Jt());
		}
	}
	function Fa() {
		be.call(this), (this.type = 'Bone');
	}
	Object.assign(Ga.prototype, {
		calculateInverses: function () {
			this.boneInverses = [];
			for (var t = 0, e = this.bones.length; t < e; t++) {
				var n = new Jt();
				this.bones[t] && n.getInverse(this.bones[t].matrixWorld),
					this.boneInverses.push(n);
			}
		},
		pose: function () {
			for (var t = 0, e = this.bones.length; t < e; t++) {
				var n = this.bones[t];
				n && n.matrixWorld.getInverse(this.boneInverses[t]);
			}
			for (var r = 0, i = this.bones.length; r < i; r++) {
				var a = this.bones[r];
				a &&
					(a.parent && a.parent.isBone
						? (a.matrix.getInverse(a.parent.matrixWorld),
						  a.matrix.multiply(a.matrixWorld))
						: a.matrix.copy(a.matrixWorld),
					a.matrix.decompose(a.position, a.quaternion, a.scale));
			}
		},
		update: function () {
			for (
				var t = this.bones,
					e = this.boneInverses,
					n = this.boneMatrices,
					r = this.boneTexture,
					i = 0,
					a = t.length;
				i < a;
				i++
			) {
				var o = t[i] ? t[i].matrixWorld : za;
				Ba.multiplyMatrices(o, e[i]), Ba.toArray(n, 16 * i);
			}
			void 0 !== r && (r.needsUpdate = !0);
		},
		clone: function () {
			return new Ga(this.bones, this.boneInverses);
		},
		getBoneByName: function (t) {
			for (var e = 0, n = this.bones.length; e < n; e++) {
				var r = this.bones[e];
				if (r.name === t) return r;
			}
		},
		dispose: function () {
			this.boneTexture &&
				(this.boneTexture.dispose(), (this.boneTexture = void 0));
		},
	}),
		(Fa.prototype = Object.assign(Object.create(be.prototype), {
			constructor: Fa,
			isBone: !0,
		}));
	var Ua = new Jt(),
		Ha = new Jt(),
		ka = [],
		Va = new Nn();
	function Wa(t, e, n) {
		Nn.call(this, t, e),
			(this.instanceMatrix = new Je(new Float32Array(16 * n), 16)),
			(this.instanceColor = null),
			(this.count = n),
			(this.frustumCulled = !1);
	}
	function ja(t) {
		qe.call(this),
			(this.type = 'LineBasicMaterial'),
			(this.color = new Ve(16777215)),
			(this.linewidth = 1),
			(this.linecap = 'round'),
			(this.linejoin = 'round'),
			(this.morphTargets = !1),
			this.setValues(t);
	}
	(Wa.prototype = Object.assign(Object.create(Nn.prototype), {
		constructor: Wa,
		isInstancedMesh: !0,
		copy: function (t) {
			return (
				Nn.prototype.copy.call(this, t),
				this.instanceMatrix.copy(t.instanceMatrix),
				(this.count = t.count),
				this
			);
		},
		setColorAt: function (t, e) {
			null === this.instanceColor &&
				(this.instanceColor = new Je(new Float32Array(3 * this.count), 3)),
				e.toArray(this.instanceColor.array, 3 * t);
		},
		getMatrixAt: function (t, e) {
			e.fromArray(this.instanceMatrix.array, 16 * t);
		},
		raycast: function (t, e) {
			var n = this.matrixWorld,
				r = this.count;
			if (
				((Va.geometry = this.geometry),
				(Va.material = this.material),
				void 0 !== Va.material)
			)
				for (var i = 0; i < r; i++) {
					this.getMatrixAt(i, Ua),
						Ha.multiplyMatrices(n, Ua),
						(Va.matrixWorld = Ha),
						Va.raycast(t, ka);
					for (var a = 0, o = ka.length; a < o; a++) {
						var s = ka[a];
						(s.instanceId = i), (s.object = this), e.push(s);
					}
					ka.length = 0;
				}
		},
		setMatrixAt: function (t, e) {
			e.toArray(this.instanceMatrix.array, 16 * t);
		},
		updateMorphTargets: function () {},
	})),
		(ja.prototype = Object.create(qe.prototype)),
		(ja.prototype.constructor = ja),
		(ja.prototype.isLineBasicMaterial = !0),
		(ja.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				this.color.copy(t.color),
				(this.linewidth = t.linewidth),
				(this.linecap = t.linecap),
				(this.linejoin = t.linejoin),
				(this.morphTargets = t.morphTargets),
				this
			);
		});
	var qa = new wt(),
		Xa = new wt(),
		Ya = new Jt(),
		Za = new Zt(),
		Ja = new Ht();
	function Qa(t, e, n) {
		1 === n &&
			console.error(
				'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.'
			),
			be.call(this),
			(this.type = 'Line'),
			(this.geometry = void 0 !== t ? t : new vn()),
			(this.material = void 0 !== e ? e : new ja()),
			this.updateMorphTargets();
	}
	Qa.prototype = Object.assign(Object.create(be.prototype), {
		constructor: Qa,
		isLine: !0,
		copy: function (t) {
			return (
				be.prototype.copy.call(this, t),
				(this.material = t.material),
				(this.geometry = t.geometry),
				this
			);
		},
		computeLineDistances: function () {
			var t = this.geometry;
			if (t.isBufferGeometry)
				if (null === t.index) {
					for (
						var e = t.attributes.position, n = [0], r = 1, i = e.count;
						r < i;
						r++
					)
						qa.fromBufferAttribute(e, r - 1),
							Xa.fromBufferAttribute(e, r),
							(n[r] = n[r - 1]),
							(n[r] += qa.distanceTo(Xa));
					t.setAttribute('lineDistance', new an(n, 1));
				} else
					console.warn(
						'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.'
					);
			else if (t.isGeometry) {
				var a = t.vertices,
					o = t.lineDistances;
				o[0] = 0;
				for (var s = 1, c = a.length; s < c; s++)
					(o[s] = o[s - 1]), (o[s] += a[s - 1].distanceTo(a[s]));
			}
			return this;
		},
		raycast: function (t, e) {
			var n = this.geometry,
				r = this.matrixWorld,
				i = t.params.Line.threshold;
			if (
				(null === n.boundingSphere && n.computeBoundingSphere(),
				Ja.copy(n.boundingSphere),
				Ja.applyMatrix4(r),
				(Ja.radius += i),
				!1 !== t.ray.intersectsSphere(Ja))
			) {
				Ya.getInverse(r), Za.copy(t.ray).applyMatrix4(Ya);
				var a = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
					o = a * a,
					s = new wt(),
					c = new wt(),
					l = new wt(),
					u = new wt(),
					h = this.isLineSegments ? 2 : 1;
				if (n.isBufferGeometry) {
					var d = n.index,
						p = n.attributes.position;
					if (null !== d)
						for (var f = d.array, m = 0, v = f.length - 1; m < v; m += h) {
							var g = f[m],
								y = f[m + 1];
							if (
								(s.fromBufferAttribute(p, g),
								c.fromBufferAttribute(p, y),
								!(Za.distanceSqToSegment(s, c, u, l) > o))
							) {
								u.applyMatrix4(this.matrixWorld);
								var x = t.ray.origin.distanceTo(u);
								x < t.near ||
									x > t.far ||
									e.push({
										distance: x,
										point: l.clone().applyMatrix4(this.matrixWorld),
										index: m,
										face: null,
										faceIndex: null,
										object: this,
									});
							}
						}
					else
						for (var _ = 0, b = p.count - 1; _ < b; _ += h) {
							if (
								(s.fromBufferAttribute(p, _),
								c.fromBufferAttribute(p, _ + 1),
								!(Za.distanceSqToSegment(s, c, u, l) > o))
							) {
								u.applyMatrix4(this.matrixWorld);
								var w = t.ray.origin.distanceTo(u);
								w < t.near ||
									w > t.far ||
									e.push({
										distance: w,
										point: l.clone().applyMatrix4(this.matrixWorld),
										index: _,
										face: null,
										faceIndex: null,
										object: this,
									});
							}
						}
				} else if (n.isGeometry)
					for (var M = n.vertices, S = M.length, T = 0; T < S - 1; T += h) {
						if (!(Za.distanceSqToSegment(M[T], M[T + 1], u, l) > o)) {
							u.applyMatrix4(this.matrixWorld);
							var E = t.ray.origin.distanceTo(u);
							E < t.near ||
								E > t.far ||
								e.push({
									distance: E,
									point: l.clone().applyMatrix4(this.matrixWorld),
									index: T,
									face: null,
									faceIndex: null,
									object: this,
								});
						}
					}
			}
		},
		updateMorphTargets: function () {
			var t = this.geometry;
			if (t.isBufferGeometry) {
				var e = t.morphAttributes,
					n = Object.keys(e);
				if (n.length > 0) {
					var r = e[n[0]];
					if (void 0 !== r) {
						(this.morphTargetInfluences = []),
							(this.morphTargetDictionary = {});
						for (var i = 0, a = r.length; i < a; i++) {
							var o = r[i].name || String(i);
							this.morphTargetInfluences.push(0),
								(this.morphTargetDictionary[o] = i);
						}
					}
				}
			} else {
				var s = t.morphTargets;
				void 0 !== s &&
					s.length > 0 &&
					console.error(
						'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.'
					);
			}
		},
	});
	var Ka = new wt(),
		$a = new wt();
	function to(t, e) {
		Qa.call(this, t, e), (this.type = 'LineSegments');
	}
	function eo(t, e) {
		Qa.call(this, t, e), (this.type = 'LineLoop');
	}
	function no(t) {
		qe.call(this),
			(this.type = 'PointsMaterial'),
			(this.color = new Ve(16777215)),
			(this.map = null),
			(this.alphaMap = null),
			(this.size = 1),
			(this.sizeAttenuation = !0),
			(this.morphTargets = !1),
			this.setValues(t);
	}
	(to.prototype = Object.assign(Object.create(Qa.prototype), {
		constructor: to,
		isLineSegments: !0,
		computeLineDistances: function () {
			var t = this.geometry;
			if (t.isBufferGeometry)
				if (null === t.index) {
					for (
						var e = t.attributes.position, n = [], r = 0, i = e.count;
						r < i;
						r += 2
					)
						Ka.fromBufferAttribute(e, r),
							$a.fromBufferAttribute(e, r + 1),
							(n[r] = 0 === r ? 0 : n[r - 1]),
							(n[r + 1] = n[r] + Ka.distanceTo($a));
					t.setAttribute('lineDistance', new an(n, 1));
				} else
					console.warn(
						'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.'
					);
			else if (t.isGeometry)
				for (
					var a = t.vertices, o = t.lineDistances, s = 0, c = a.length;
					s < c;
					s += 2
				)
					Ka.copy(a[s]),
						$a.copy(a[s + 1]),
						(o[s] = 0 === s ? 0 : o[s - 1]),
						(o[s + 1] = o[s] + Ka.distanceTo($a));
			return this;
		},
	})),
		(eo.prototype = Object.assign(Object.create(Qa.prototype), {
			constructor: eo,
			isLineLoop: !0,
		})),
		(no.prototype = Object.create(qe.prototype)),
		(no.prototype.constructor = no),
		(no.prototype.isPointsMaterial = !0),
		(no.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				this.color.copy(t.color),
				(this.map = t.map),
				(this.alphaMap = t.alphaMap),
				(this.size = t.size),
				(this.sizeAttenuation = t.sizeAttenuation),
				(this.morphTargets = t.morphTargets),
				this
			);
		});
	var ro = new Jt(),
		io = new Zt(),
		ao = new Ht(),
		oo = new wt();
	function so(t, e) {
		be.call(this),
			(this.type = 'Points'),
			(this.geometry = void 0 !== t ? t : new vn()),
			(this.material = void 0 !== e ? e : new no()),
			this.updateMorphTargets();
	}
	function co(t, e, n, r, i, a, o) {
		var s = io.distanceSqToPoint(t);
		if (s < n) {
			var c = new wt();
			io.closestPointToPoint(t, c), c.applyMatrix4(r);
			var l = i.ray.origin.distanceTo(c);
			if (l < i.near || l > i.far) return;
			a.push({
				distance: l,
				distanceToRay: Math.sqrt(s),
				point: c,
				index: e,
				face: null,
				object: o,
			});
		}
	}
	function lo(t, e, n, r, i, a, o, s, c) {
		gt.call(this, t, e, n, r, i, a, o, s, c),
			(this.format = void 0 !== o ? o : S),
			(this.minFilter = void 0 !== a ? a : m),
			(this.magFilter = void 0 !== i ? i : m),
			(this.generateMipmaps = !1);
		var l = this;
		'requestVideoFrameCallback' in t &&
			t.requestVideoFrameCallback(function e() {
				(l.needsUpdate = !0), t.requestVideoFrameCallback(e);
			});
	}
	function uo(t, e, n, r, i, a, o, s, c, l, u, h) {
		gt.call(this, null, a, o, s, c, l, r, i, u, h),
			(this.image = { width: e, height: n }),
			(this.mipmaps = t),
			(this.flipY = !1),
			(this.generateMipmaps = !1);
	}
	function ho(t, e, n, r, i, a, o, s, c) {
		gt.call(this, t, e, n, r, i, a, o, s, c), (this.needsUpdate = !0);
	}
	function po(t, e, n, r, i, a, o, s, c, l) {
		if ((l = void 0 !== l ? l : E) !== E && l !== A)
			throw new Error(
				'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat'
			);
		void 0 === n && l === E && (n = x),
			void 0 === n && l === A && (n = M),
			gt.call(this, null, r, i, a, o, s, l, n, c),
			(this.image = { width: t, height: e }),
			(this.magFilter = void 0 !== o ? o : d),
			(this.minFilter = void 0 !== s ? s : d),
			(this.flipY = !1),
			(this.generateMipmaps = !1);
	}
	(so.prototype = Object.assign(Object.create(be.prototype), {
		constructor: so,
		isPoints: !0,
		copy: function (t) {
			return (
				be.prototype.copy.call(this, t),
				(this.material = t.material),
				(this.geometry = t.geometry),
				this
			);
		},
		raycast: function (t, e) {
			var n = this.geometry,
				r = this.matrixWorld,
				i = t.params.Points.threshold;
			if (
				(null === n.boundingSphere && n.computeBoundingSphere(),
				ao.copy(n.boundingSphere),
				ao.applyMatrix4(r),
				(ao.radius += i),
				!1 !== t.ray.intersectsSphere(ao))
			) {
				ro.getInverse(r), io.copy(t.ray).applyMatrix4(ro);
				var a = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
					o = a * a;
				if (n.isBufferGeometry) {
					var s = n.index,
						c = n.attributes.position;
					if (null !== s)
						for (var l = s.array, u = 0, h = l.length; u < h; u++) {
							var d = l[u];
							oo.fromBufferAttribute(c, d), co(oo, d, o, r, t, e, this);
						}
					else
						for (var p = 0, f = c.count; p < f; p++)
							oo.fromBufferAttribute(c, p), co(oo, p, o, r, t, e, this);
				} else
					for (var m = n.vertices, v = 0, g = m.length; v < g; v++)
						co(m[v], v, o, r, t, e, this);
			}
		},
		updateMorphTargets: function () {
			var t = this.geometry;
			if (t.isBufferGeometry) {
				var e = t.morphAttributes,
					n = Object.keys(e);
				if (n.length > 0) {
					var r = e[n[0]];
					if (void 0 !== r) {
						(this.morphTargetInfluences = []),
							(this.morphTargetDictionary = {});
						for (var i = 0, a = r.length; i < a; i++) {
							var o = r[i].name || String(i);
							this.morphTargetInfluences.push(0),
								(this.morphTargetDictionary[o] = i);
						}
					}
				}
			} else {
				var s = t.morphTargets;
				void 0 !== s &&
					s.length > 0 &&
					console.error(
						'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.'
					);
			}
		},
	})),
		(lo.prototype = Object.assign(Object.create(gt.prototype), {
			constructor: lo,
			isVideoTexture: !0,
			update: function () {
				var t = this.image;
				!1 === 'requestVideoFrameCallback' in t &&
					t.readyState >= t.HAVE_CURRENT_DATA &&
					(this.needsUpdate = !0);
			},
		})),
		(uo.prototype = Object.create(gt.prototype)),
		(uo.prototype.constructor = uo),
		(uo.prototype.isCompressedTexture = !0),
		(ho.prototype = Object.create(gt.prototype)),
		(ho.prototype.constructor = ho),
		(ho.prototype.isCanvasTexture = !0),
		(po.prototype = Object.create(gt.prototype)),
		(po.prototype.constructor = po),
		(po.prototype.isDepthTexture = !0);
	var fo = 0,
		mo = new Jt(),
		vo = new be(),
		go = new wt();
	function yo() {
		Object.defineProperty(this, 'id', { value: (fo += 2) }),
			(this.uuid = st.generateUUID()),
			(this.name = ''),
			(this.type = 'Geometry'),
			(this.vertices = []),
			(this.colors = []),
			(this.faces = []),
			(this.faceVertexUvs = [[]]),
			(this.morphTargets = []),
			(this.morphNormals = []),
			(this.skinWeights = []),
			(this.skinIndices = []),
			(this.lineDistances = []),
			(this.boundingBox = null),
			(this.boundingSphere = null),
			(this.elementsNeedUpdate = !1),
			(this.verticesNeedUpdate = !1),
			(this.uvsNeedUpdate = !1),
			(this.normalsNeedUpdate = !1),
			(this.colorsNeedUpdate = !1),
			(this.lineDistancesNeedUpdate = !1),
			(this.groupsNeedUpdate = !1);
	}
	yo.prototype = Object.assign(Object.create(rt.prototype), {
		constructor: yo,
		isGeometry: !0,
		applyMatrix4: function (t) {
			for (
				var e = new ft().getNormalMatrix(t), n = 0, r = this.vertices.length;
				n < r;
				n++
			) {
				this.vertices[n].applyMatrix4(t);
			}
			for (var i = 0, a = this.faces.length; i < a; i++) {
				var o = this.faces[i];
				o.normal.applyMatrix3(e).normalize();
				for (var s = 0, c = o.vertexNormals.length; s < c; s++)
					o.vertexNormals[s].applyMatrix3(e).normalize();
			}
			return (
				null !== this.boundingBox && this.computeBoundingBox(),
				null !== this.boundingSphere && this.computeBoundingSphere(),
				(this.verticesNeedUpdate = !0),
				(this.normalsNeedUpdate = !0),
				this
			);
		},
		rotateX: function (t) {
			return mo.makeRotationX(t), this.applyMatrix4(mo), this;
		},
		rotateY: function (t) {
			return mo.makeRotationY(t), this.applyMatrix4(mo), this;
		},
		rotateZ: function (t) {
			return mo.makeRotationZ(t), this.applyMatrix4(mo), this;
		},
		translate: function (t, e, n) {
			return mo.makeTranslation(t, e, n), this.applyMatrix4(mo), this;
		},
		scale: function (t, e, n) {
			return mo.makeScale(t, e, n), this.applyMatrix4(mo), this;
		},
		lookAt: function (t) {
			return (
				vo.lookAt(t), vo.updateMatrix(), this.applyMatrix4(vo.matrix), this
			);
		},
		fromBufferGeometry: function (t) {
			var e = this,
				n = null !== t.index ? t.index : void 0,
				r = t.attributes;
			if (void 0 === r.position)
				return (
					console.error(
						'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.'
					),
					this
				);
			var i = r.position,
				a = r.normal,
				o = r.color,
				s = r.uv,
				c = r.uv2;
			void 0 !== c && (this.faceVertexUvs[1] = []);
			for (var l = 0; l < i.count; l++)
				e.vertices.push(new wt().fromBufferAttribute(i, l)),
					void 0 !== o && e.colors.push(new Ve().fromBufferAttribute(o, l));
			function u(t, n, r, i) {
				var l =
						void 0 === o
							? []
							: [e.colors[t].clone(), e.colors[n].clone(), e.colors[r].clone()],
					u =
						void 0 === a
							? []
							: [
									new wt().fromBufferAttribute(a, t),
									new wt().fromBufferAttribute(a, n),
									new wt().fromBufferAttribute(a, r),
							  ],
					h = new We(t, n, r, u, l, i);
				e.faces.push(h),
					void 0 !== s &&
						e.faceVertexUvs[0].push([
							new pt().fromBufferAttribute(s, t),
							new pt().fromBufferAttribute(s, n),
							new pt().fromBufferAttribute(s, r),
						]),
					void 0 !== c &&
						e.faceVertexUvs[1].push([
							new pt().fromBufferAttribute(c, t),
							new pt().fromBufferAttribute(c, n),
							new pt().fromBufferAttribute(c, r),
						]);
			}
			var h = t.groups;
			if (h.length > 0)
				for (var d = 0; d < h.length; d++)
					for (var p = h[d], f = p.start, m = f, v = f + p.count; m < v; m += 3)
						void 0 !== n
							? u(n.getX(m), n.getX(m + 1), n.getX(m + 2), p.materialIndex)
							: u(m, m + 1, m + 2, p.materialIndex);
			else if (void 0 !== n)
				for (var g = 0; g < n.count; g += 3)
					u(n.getX(g), n.getX(g + 1), n.getX(g + 2));
			else for (var y = 0; y < i.count; y += 3) u(y, y + 1, y + 2);
			return (
				this.computeFaceNormals(),
				null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()),
				null !== t.boundingSphere &&
					(this.boundingSphere = t.boundingSphere.clone()),
				this
			);
		},
		center: function () {
			return (
				this.computeBoundingBox(),
				this.boundingBox.getCenter(go).negate(),
				this.translate(go.x, go.y, go.z),
				this
			);
		},
		normalize: function () {
			this.computeBoundingSphere();
			var t = this.boundingSphere.center,
				e = this.boundingSphere.radius,
				n = 0 === e ? 1 : 1 / e,
				r = new Jt();
			return (
				r.set(
					n,
					0,
					0,
					-n * t.x,
					0,
					n,
					0,
					-n * t.y,
					0,
					0,
					n,
					-n * t.z,
					0,
					0,
					0,
					1
				),
				this.applyMatrix4(r),
				this
			);
		},
		computeFaceNormals: function () {
			for (
				var t = new wt(), e = new wt(), n = 0, r = this.faces.length;
				n < r;
				n++
			) {
				var i = this.faces[n],
					a = this.vertices[i.a],
					o = this.vertices[i.b],
					s = this.vertices[i.c];
				t.subVectors(s, o),
					e.subVectors(a, o),
					t.cross(e),
					t.normalize(),
					i.normal.copy(t);
			}
		},
		computeVertexNormals: function (t) {
			void 0 === t && (t = !0);
			for (
				var e = new Array(this.vertices.length),
					n = 0,
					r = this.vertices.length;
				n < r;
				n++
			)
				e[n] = new wt();
			if (t)
				for (
					var i = new wt(), a = new wt(), o = 0, s = this.faces.length;
					o < s;
					o++
				) {
					var c = this.faces[o],
						l = this.vertices[c.a],
						u = this.vertices[c.b],
						h = this.vertices[c.c];
					i.subVectors(h, u),
						a.subVectors(l, u),
						i.cross(a),
						e[c.a].add(i),
						e[c.b].add(i),
						e[c.c].add(i);
				}
			else {
				this.computeFaceNormals();
				for (var d = 0, p = this.faces.length; d < p; d++) {
					var f = this.faces[d];
					e[f.a].add(f.normal), e[f.b].add(f.normal), e[f.c].add(f.normal);
				}
			}
			for (var m = 0, v = this.vertices.length; m < v; m++) e[m].normalize();
			for (var g = 0, y = this.faces.length; g < y; g++) {
				var x = this.faces[g],
					_ = x.vertexNormals;
				3 === _.length
					? (_[0].copy(e[x.a]), _[1].copy(e[x.b]), _[2].copy(e[x.c]))
					: ((_[0] = e[x.a].clone()),
					  (_[1] = e[x.b].clone()),
					  (_[2] = e[x.c].clone()));
			}
			this.faces.length > 0 && (this.normalsNeedUpdate = !0);
		},
		computeFlatVertexNormals: function () {
			this.computeFaceNormals();
			for (var t = 0, e = this.faces.length; t < e; t++) {
				var n = this.faces[t],
					r = n.vertexNormals;
				3 === r.length
					? (r[0].copy(n.normal), r[1].copy(n.normal), r[2].copy(n.normal))
					: ((r[0] = n.normal.clone()),
					  (r[1] = n.normal.clone()),
					  (r[2] = n.normal.clone()));
			}
			this.faces.length > 0 && (this.normalsNeedUpdate = !0);
		},
		computeMorphNormals: function () {
			for (var t = 0, e = this.faces.length; t < e; t++) {
				var n = this.faces[t];
				n.__originalFaceNormal
					? n.__originalFaceNormal.copy(n.normal)
					: (n.__originalFaceNormal = n.normal.clone()),
					n.__originalVertexNormals || (n.__originalVertexNormals = []);
				for (var r = 0, i = n.vertexNormals.length; r < i; r++)
					n.__originalVertexNormals[r]
						? n.__originalVertexNormals[r].copy(n.vertexNormals[r])
						: (n.__originalVertexNormals[r] = n.vertexNormals[r].clone());
			}
			var a = new yo();
			a.faces = this.faces;
			for (var o = 0, s = this.morphTargets.length; o < s; o++) {
				if (!this.morphNormals[o]) {
					(this.morphNormals[o] = {}),
						(this.morphNormals[o].faceNormals = []),
						(this.morphNormals[o].vertexNormals = []);
					for (
						var c = this.morphNormals[o].faceNormals,
							l = this.morphNormals[o].vertexNormals,
							u = 0,
							h = this.faces.length;
						u < h;
						u++
					) {
						var d = new wt(),
							p = { a: new wt(), b: new wt(), c: new wt() };
						c.push(d), l.push(p);
					}
				}
				var f = this.morphNormals[o];
				(a.vertices = this.morphTargets[o].vertices),
					a.computeFaceNormals(),
					a.computeVertexNormals();
				for (var m = 0, v = this.faces.length; m < v; m++) {
					var g = this.faces[m],
						y = f.faceNormals[m],
						x = f.vertexNormals[m];
					y.copy(g.normal),
						x.a.copy(g.vertexNormals[0]),
						x.b.copy(g.vertexNormals[1]),
						x.c.copy(g.vertexNormals[2]);
				}
			}
			for (var _ = 0, b = this.faces.length; _ < b; _++) {
				var w = this.faces[_];
				(w.normal = w.__originalFaceNormal),
					(w.vertexNormals = w.__originalVertexNormals);
			}
		},
		computeBoundingBox: function () {
			null === this.boundingBox && (this.boundingBox = new Tt()),
				this.boundingBox.setFromPoints(this.vertices);
		},
		computeBoundingSphere: function () {
			null === this.boundingSphere && (this.boundingSphere = new Ht()),
				this.boundingSphere.setFromPoints(this.vertices);
		},
		merge: function (t, e, n) {
			if (t && t.isGeometry) {
				var r,
					i = this.vertices.length,
					a = this.vertices,
					o = t.vertices,
					s = this.faces,
					c = t.faces,
					l = this.colors,
					u = t.colors;
				void 0 === n && (n = 0),
					void 0 !== e && (r = new ft().getNormalMatrix(e));
				for (var h = 0, d = o.length; h < d; h++) {
					var p = o[h].clone();
					void 0 !== e && p.applyMatrix4(e), a.push(p);
				}
				for (var f = 0, m = u.length; f < m; f++) l.push(u[f].clone());
				for (var v = 0, g = c.length; v < g; v++) {
					var y = c[v],
						x = void 0,
						_ = void 0,
						b = y.vertexNormals,
						w = y.vertexColors,
						M = new We(y.a + i, y.b + i, y.c + i);
					M.normal.copy(y.normal),
						void 0 !== r && M.normal.applyMatrix3(r).normalize();
					for (var S = 0, T = b.length; S < T; S++)
						(x = b[S].clone()),
							void 0 !== r && x.applyMatrix3(r).normalize(),
							M.vertexNormals.push(x);
					M.color.copy(y.color);
					for (var E = 0, A = w.length; E < A; E++)
						(_ = w[E]), M.vertexColors.push(_.clone());
					(M.materialIndex = y.materialIndex + n), s.push(M);
				}
				for (var L = 0, R = t.faceVertexUvs.length; L < R; L++) {
					var C = t.faceVertexUvs[L];
					void 0 === this.faceVertexUvs[L] && (this.faceVertexUvs[L] = []);
					for (var P = 0, I = C.length; P < I; P++) {
						for (var D = C[P], N = [], O = 0, B = D.length; O < B; O++)
							N.push(D[O].clone());
						this.faceVertexUvs[L].push(N);
					}
				}
			} else
				console.error(
					'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.',
					t
				);
		},
		mergeMesh: function (t) {
			t && t.isMesh
				? (t.matrixAutoUpdate && t.updateMatrix(),
				  this.merge(t.geometry, t.matrix))
				: console.error(
						'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.',
						t
				  );
		},
		mergeVertices: function () {
			for (
				var t = {},
					e = [],
					n = [],
					r = Math.pow(10, 4),
					i = 0,
					a = this.vertices.length;
				i < a;
				i++
			) {
				var o = this.vertices[i],
					s =
						Math.round(o.x * r) +
						'_' +
						Math.round(o.y * r) +
						'_' +
						Math.round(o.z * r);
				void 0 === t[s]
					? ((t[s] = i), e.push(this.vertices[i]), (n[i] = e.length - 1))
					: (n[i] = n[t[s]]);
			}
			for (var c = [], l = 0, u = this.faces.length; l < u; l++) {
				var h = this.faces[l];
				(h.a = n[h.a]), (h.b = n[h.b]), (h.c = n[h.c]);
				for (var d = [h.a, h.b, h.c], p = 0; p < 3; p++)
					if (d[p] === d[(p + 1) % 3]) {
						c.push(l);
						break;
					}
			}
			for (var f = c.length - 1; f >= 0; f--) {
				var m = c[f];
				this.faces.splice(m, 1);
				for (var v = 0, g = this.faceVertexUvs.length; v < g; v++)
					this.faceVertexUvs[v].splice(m, 1);
			}
			var y = this.vertices.length - e.length;
			return (this.vertices = e), y;
		},
		setFromPoints: function (t) {
			this.vertices = [];
			for (var e = 0, n = t.length; e < n; e++) {
				var r = t[e];
				this.vertices.push(new wt(r.x, r.y, r.z || 0));
			}
			return this;
		},
		sortFacesByMaterialIndex: function () {
			for (var t = this.faces, e = t.length, n = 0; n < e; n++) t[n]._id = n;
			t.sort(function (t, e) {
				return t.materialIndex - e.materialIndex;
			});
			var r,
				i,
				a = this.faceVertexUvs[0],
				o = this.faceVertexUvs[1];
			a && a.length === e && (r = []), o && o.length === e && (i = []);
			for (var s = 0; s < e; s++) {
				var c = t[s]._id;
				r && r.push(a[c]), i && i.push(o[c]);
			}
			r && (this.faceVertexUvs[0] = r), i && (this.faceVertexUvs[1] = i);
		},
		toJSON: function () {
			var t = {
				metadata: {
					version: 4.5,
					type: 'Geometry',
					generator: 'Geometry.toJSON',
				},
			};
			if (
				((t.uuid = this.uuid),
				(t.type = this.type),
				'' !== this.name && (t.name = this.name),
				void 0 !== this.parameters)
			) {
				var e = this.parameters;
				for (var n in e) void 0 !== e[n] && (t[n] = e[n]);
				return t;
			}
			for (var r = [], i = 0; i < this.vertices.length; i++) {
				var a = this.vertices[i];
				r.push(a.x, a.y, a.z);
			}
			for (
				var o = [], s = [], c = {}, l = [], u = {}, h = [], d = {}, p = 0;
				p < this.faces.length;
				p++
			) {
				var f = this.faces[p],
					m = void 0 !== this.faceVertexUvs[0][p],
					v = f.normal.length() > 0,
					g = f.vertexNormals.length > 0,
					y = 1 !== f.color.r || 1 !== f.color.g || 1 !== f.color.b,
					x = f.vertexColors.length > 0,
					_ = 0;
				if (
					((_ = S(_, 0, 0)),
					(_ = S(_, 1, !0)),
					(_ = S(_, 2, !1)),
					(_ = S(_, 3, m)),
					(_ = S(_, 4, v)),
					(_ = S(_, 5, g)),
					(_ = S(_, 6, y)),
					(_ = S(_, 7, x)),
					o.push(_),
					o.push(f.a, f.b, f.c),
					o.push(f.materialIndex),
					m)
				) {
					var b = this.faceVertexUvs[0][p];
					o.push(A(b[0]), A(b[1]), A(b[2]));
				}
				if ((v && o.push(T(f.normal)), g)) {
					var w = f.vertexNormals;
					o.push(T(w[0]), T(w[1]), T(w[2]));
				}
				if ((y && o.push(E(f.color)), x)) {
					var M = f.vertexColors;
					o.push(E(M[0]), E(M[1]), E(M[2]));
				}
			}
			function S(t, e, n) {
				return n ? t | (1 << e) : t & ~(1 << e);
			}
			function T(t) {
				var e = t.x.toString() + t.y.toString() + t.z.toString();
				return (
					void 0 !== c[e] || ((c[e] = s.length / 3), s.push(t.x, t.y, t.z)),
					c[e]
				);
			}
			function E(t) {
				var e = t.r.toString() + t.g.toString() + t.b.toString();
				return void 0 !== u[e] || ((u[e] = l.length), l.push(t.getHex())), u[e];
			}
			function A(t) {
				var e = t.x.toString() + t.y.toString();
				return (
					void 0 !== d[e] || ((d[e] = h.length / 2), h.push(t.x, t.y)), d[e]
				);
			}
			return (
				(t.data = {}),
				(t.data.vertices = r),
				(t.data.normals = s),
				l.length > 0 && (t.data.colors = l),
				h.length > 0 && (t.data.uvs = [h]),
				(t.data.faces = o),
				t
			);
		},
		clone: function () {
			return new yo().copy(this);
		},
		copy: function (t) {
			(this.vertices = []),
				(this.colors = []),
				(this.faces = []),
				(this.faceVertexUvs = [[]]),
				(this.morphTargets = []),
				(this.morphNormals = []),
				(this.skinWeights = []),
				(this.skinIndices = []),
				(this.lineDistances = []),
				(this.boundingBox = null),
				(this.boundingSphere = null),
				(this.name = t.name);
			for (var e = t.vertices, n = 0, r = e.length; n < r; n++)
				this.vertices.push(e[n].clone());
			for (var i = t.colors, a = 0, o = i.length; a < o; a++)
				this.colors.push(i[a].clone());
			for (var s = t.faces, c = 0, l = s.length; c < l; c++)
				this.faces.push(s[c].clone());
			for (var u = 0, h = t.faceVertexUvs.length; u < h; u++) {
				var d = t.faceVertexUvs[u];
				void 0 === this.faceVertexUvs[u] && (this.faceVertexUvs[u] = []);
				for (var p = 0, f = d.length; p < f; p++) {
					for (var m = d[p], v = [], g = 0, y = m.length; g < y; g++) {
						var x = m[g];
						v.push(x.clone());
					}
					this.faceVertexUvs[u].push(v);
				}
			}
			for (var _ = t.morphTargets, b = 0, w = _.length; b < w; b++) {
				var M = {};
				if (((M.name = _[b].name), void 0 !== _[b].vertices)) {
					M.vertices = [];
					for (var S = 0, T = _[b].vertices.length; S < T; S++)
						M.vertices.push(_[b].vertices[S].clone());
				}
				if (void 0 !== _[b].normals) {
					M.normals = [];
					for (var E = 0, A = _[b].normals.length; E < A; E++)
						M.normals.push(_[b].normals[E].clone());
				}
				this.morphTargets.push(M);
			}
			for (var L = t.morphNormals, R = 0, C = L.length; R < C; R++) {
				var P = {};
				if (void 0 !== L[R].vertexNormals) {
					P.vertexNormals = [];
					for (var I = 0, D = L[R].vertexNormals.length; I < D; I++) {
						var N = L[R].vertexNormals[I],
							O = {};
						(O.a = N.a.clone()),
							(O.b = N.b.clone()),
							(O.c = N.c.clone()),
							P.vertexNormals.push(O);
					}
				}
				if (void 0 !== L[R].faceNormals) {
					P.faceNormals = [];
					for (var B = 0, z = L[R].faceNormals.length; B < z; B++)
						P.faceNormals.push(L[R].faceNormals[B].clone());
				}
				this.morphNormals.push(P);
			}
			for (var G = t.skinWeights, F = 0, U = G.length; F < U; F++)
				this.skinWeights.push(G[F].clone());
			for (var H = t.skinIndices, k = 0, V = H.length; k < V; k++)
				this.skinIndices.push(H[k].clone());
			for (var W = t.lineDistances, j = 0, q = W.length; j < q; j++)
				this.lineDistances.push(W[j]);
			var X = t.boundingBox;
			null !== X && (this.boundingBox = X.clone());
			var Y = t.boundingSphere;
			return (
				null !== Y && (this.boundingSphere = Y.clone()),
				(this.elementsNeedUpdate = t.elementsNeedUpdate),
				(this.verticesNeedUpdate = t.verticesNeedUpdate),
				(this.uvsNeedUpdate = t.uvsNeedUpdate),
				(this.normalsNeedUpdate = t.normalsNeedUpdate),
				(this.colorsNeedUpdate = t.colorsNeedUpdate),
				(this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate),
				(this.groupsNeedUpdate = t.groupsNeedUpdate),
				this
			);
		},
		dispose: function () {
			this.dispatchEvent({ type: 'dispose' });
		},
	});
	var xo = (function (t) {
			function e(e, n, r, i, a, o) {
				var s;
				return (
					((s = t.call(this) || this).type = 'BoxGeometry'),
					(s.parameters = {
						width: e,
						height: n,
						depth: r,
						widthSegments: i,
						heightSegments: a,
						depthSegments: o,
					}),
					s.fromBufferGeometry(new zn(e, n, r, i, a, o)),
					s.mergeVertices(),
					s
				);
			}
			return ut(e, t), e;
		})(yo),
		_o = (function (t) {
			function e(e, n, r, i) {
				var a;
				((a = t.call(this) || this).type = 'CircleBufferGeometry'),
					(a.parameters = {
						radius: e,
						segments: n,
						thetaStart: r,
						thetaLength: i,
					}),
					(e = e || 1),
					(n = void 0 !== n ? Math.max(3, n) : 8),
					(r = void 0 !== r ? r : 0),
					(i = void 0 !== i ? i : 2 * Math.PI);
				var o = [],
					s = [],
					c = [],
					l = [],
					u = new wt(),
					h = new pt();
				s.push(0, 0, 0), c.push(0, 0, 1), l.push(0.5, 0.5);
				for (var d = 0, p = 3; d <= n; d++, p += 3) {
					var f = r + (d / n) * i;
					(u.x = e * Math.cos(f)),
						(u.y = e * Math.sin(f)),
						s.push(u.x, u.y, u.z),
						c.push(0, 0, 1),
						(h.x = (s[p] / e + 1) / 2),
						(h.y = (s[p + 1] / e + 1) / 2),
						l.push(h.x, h.y);
				}
				for (var m = 1; m <= n; m++) o.push(m, m + 1, 0);
				return (
					a.setIndex(o),
					a.setAttribute('position', new an(s, 3)),
					a.setAttribute('normal', new an(c, 3)),
					a.setAttribute('uv', new an(l, 2)),
					a
				);
			}
			return ut(e, t), e;
		})(vn),
		bo = (function (t) {
			function e(e, n, r, i) {
				var a;
				return (
					((a = t.call(this) || this).type = 'CircleGeometry'),
					(a.parameters = {
						radius: e,
						segments: n,
						thetaStart: r,
						thetaLength: i,
					}),
					a.fromBufferGeometry(new _o(e, n, r, i)),
					a.mergeVertices(),
					a
				);
			}
			return ut(e, t), e;
		})(yo),
		wo = (function (t) {
			function e(e, n, r, i, a, o, s, c) {
				var l;
				((l = t.call(this) || this).type = 'CylinderBufferGeometry'),
					(l.parameters = {
						radiusTop: e,
						radiusBottom: n,
						height: r,
						radialSegments: i,
						heightSegments: a,
						openEnded: o,
						thetaStart: s,
						thetaLength: c,
					});
				var u = ht(l);
				(e = void 0 !== e ? e : 1),
					(n = void 0 !== n ? n : 1),
					(r = r || 1),
					(i = Math.floor(i) || 8),
					(a = Math.floor(a) || 1),
					(o = void 0 !== o && o),
					(s = void 0 !== s ? s : 0),
					(c = void 0 !== c ? c : 2 * Math.PI);
				var h = [],
					d = [],
					p = [],
					f = [],
					m = 0,
					v = [],
					g = r / 2,
					y = 0;
				function x(t) {
					for (
						var r = m,
							a = new pt(),
							o = new wt(),
							l = 0,
							v = !0 === t ? e : n,
							x = !0 === t ? 1 : -1,
							_ = 1;
						_ <= i;
						_++
					)
						d.push(0, g * x, 0), p.push(0, x, 0), f.push(0.5, 0.5), m++;
					for (var b = m, w = 0; w <= i; w++) {
						var M = (w / i) * c + s,
							S = Math.cos(M),
							T = Math.sin(M);
						(o.x = v * T),
							(o.y = g * x),
							(o.z = v * S),
							d.push(o.x, o.y, o.z),
							p.push(0, x, 0),
							(a.x = 0.5 * S + 0.5),
							(a.y = 0.5 * T * x + 0.5),
							f.push(a.x, a.y),
							m++;
					}
					for (var E = 0; E < i; E++) {
						var A = r + E,
							L = b + E;
						!0 === t ? h.push(L, L + 1, A) : h.push(L + 1, L, A), (l += 3);
					}
					u.addGroup(y, l, !0 === t ? 1 : 2), (y += l);
				}
				return (
					(function () {
						for (
							var t = new wt(), o = new wt(), l = 0, x = (n - e) / r, _ = 0;
							_ <= a;
							_++
						) {
							for (
								var b = [], w = _ / a, M = w * (n - e) + e, S = 0;
								S <= i;
								S++
							) {
								var T = S / i,
									E = T * c + s,
									A = Math.sin(E),
									L = Math.cos(E);
								(o.x = M * A),
									(o.y = -w * r + g),
									(o.z = M * L),
									d.push(o.x, o.y, o.z),
									t.set(A, x, L).normalize(),
									p.push(t.x, t.y, t.z),
									f.push(T, 1 - w),
									b.push(m++);
							}
							v.push(b);
						}
						for (var R = 0; R < i; R++)
							for (var C = 0; C < a; C++) {
								var P = v[C][R],
									I = v[C + 1][R],
									D = v[C + 1][R + 1],
									N = v[C][R + 1];
								h.push(P, I, N), h.push(I, D, N), (l += 6);
							}
						u.addGroup(y, l, 0), (y += l);
					})(),
					!1 === o && (e > 0 && x(!0), n > 0 && x(!1)),
					l.setIndex(h),
					l.setAttribute('position', new an(d, 3)),
					l.setAttribute('normal', new an(p, 3)),
					l.setAttribute('uv', new an(f, 2)),
					l
				);
			}
			return ut(e, t), e;
		})(vn),
		Mo = (function (t) {
			function e(e, n, r, i, a, o, s, c) {
				var l;
				return (
					((l = t.call(this) || this).type = 'CylinderGeometry'),
					(l.parameters = {
						radiusTop: e,
						radiusBottom: n,
						height: r,
						radialSegments: i,
						heightSegments: a,
						openEnded: o,
						thetaStart: s,
						thetaLength: c,
					}),
					l.fromBufferGeometry(new wo(e, n, r, i, a, o, s, c)),
					l.mergeVertices(),
					l
				);
			}
			return ut(e, t), e;
		})(yo),
		So = (function (t) {
			function e(e, n, r, i, a, o, s) {
				var c;
				return (
					((c = t.call(this, 0, e, n, r, i, a, o, s) || this).type =
						'ConeGeometry'),
					(c.parameters = {
						radius: e,
						height: n,
						radialSegments: r,
						heightSegments: i,
						openEnded: a,
						thetaStart: o,
						thetaLength: s,
					}),
					c
				);
			}
			return ut(e, t), e;
		})(Mo),
		To = (function (t) {
			function e(e, n, r, i, a, o, s) {
				var c;
				return (
					((c = t.call(this, 0, e, n, r, i, a, o, s) || this).type =
						'ConeBufferGeometry'),
					(c.parameters = {
						radius: e,
						height: n,
						radialSegments: r,
						heightSegments: i,
						openEnded: a,
						thetaStart: o,
						thetaLength: s,
					}),
					c
				);
			}
			return ut(e, t), e;
		})(wo),
		Eo = (function (t) {
			function e(e, n, r, i) {
				var a;
				((a = t.call(this) || this).type = 'PolyhedronBufferGeometry'),
					(a.parameters = { vertices: e, indices: n, radius: r, detail: i }),
					(r = r || 1);
				var o = [],
					s = [];
				function c(t, e, n, r) {
					for (var i = r + 1, a = [], o = 0; o <= i; o++) {
						a[o] = [];
						for (
							var s = t.clone().lerp(n, o / i),
								c = e.clone().lerp(n, o / i),
								u = i - o,
								h = 0;
							h <= u;
							h++
						)
							a[o][h] = 0 === h && o === i ? s : s.clone().lerp(c, h / u);
					}
					for (var d = 0; d < i; d++)
						for (var p = 0; p < 2 * (i - d) - 1; p++) {
							var f = Math.floor(p / 2);
							p % 2 == 0
								? (l(a[d][f + 1]), l(a[d + 1][f]), l(a[d][f]))
								: (l(a[d][f + 1]), l(a[d + 1][f + 1]), l(a[d + 1][f]));
						}
				}
				function l(t) {
					o.push(t.x, t.y, t.z);
				}
				function u(t, n) {
					var r = 3 * t;
					(n.x = e[r + 0]), (n.y = e[r + 1]), (n.z = e[r + 2]);
				}
				function h(t, e, n, r) {
					r < 0 && 1 === t.x && (s[e] = t.x - 1),
						0 === n.x && 0 === n.z && (s[e] = r / 2 / Math.PI + 0.5);
				}
				function d(t) {
					return Math.atan2(t.z, -t.x);
				}
				function p(t) {
					return Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z));
				}
				return (
					(function (t) {
						for (
							var e = new wt(), r = new wt(), i = new wt(), a = 0;
							a < n.length;
							a += 3
						)
							u(n[a + 0], e), u(n[a + 1], r), u(n[a + 2], i), c(e, r, i, t);
					})((i = i || 0)),
					(function (t) {
						for (var e = new wt(), n = 0; n < o.length; n += 3)
							(e.x = o[n + 0]),
								(e.y = o[n + 1]),
								(e.z = o[n + 2]),
								e.normalize().multiplyScalar(t),
								(o[n + 0] = e.x),
								(o[n + 1] = e.y),
								(o[n + 2] = e.z);
					})(r),
					(function () {
						for (var t = new wt(), e = 0; e < o.length; e += 3) {
							(t.x = o[e + 0]), (t.y = o[e + 1]), (t.z = o[e + 2]);
							var n = d(t) / 2 / Math.PI + 0.5,
								r = p(t) / Math.PI + 0.5;
							s.push(n, 1 - r);
						}
						(function () {
							for (
								var t = new wt(),
									e = new wt(),
									n = new wt(),
									r = new wt(),
									i = new pt(),
									a = new pt(),
									c = new pt(),
									l = 0,
									u = 0;
								l < o.length;
								l += 9, u += 6
							) {
								t.set(o[l + 0], o[l + 1], o[l + 2]),
									e.set(o[l + 3], o[l + 4], o[l + 5]),
									n.set(o[l + 6], o[l + 7], o[l + 8]),
									i.set(s[u + 0], s[u + 1]),
									a.set(s[u + 2], s[u + 3]),
									c.set(s[u + 4], s[u + 5]),
									r.copy(t).add(e).add(n).divideScalar(3);
								var p = d(r);
								h(i, u + 0, t, p), h(a, u + 2, e, p), h(c, u + 4, n, p);
							}
						})(),
							(function () {
								for (var t = 0; t < s.length; t += 6) {
									var e = s[t + 0],
										n = s[t + 2],
										r = s[t + 4],
										i = Math.max(e, n, r),
										a = Math.min(e, n, r);
									i > 0.9 &&
										a < 0.1 &&
										(e < 0.2 && (s[t + 0] += 1),
										n < 0.2 && (s[t + 2] += 1),
										r < 0.2 && (s[t + 4] += 1));
								}
							})();
					})(),
					a.setAttribute('position', new an(o, 3)),
					a.setAttribute('normal', new an(o.slice(), 3)),
					a.setAttribute('uv', new an(s, 2)),
					0 === i ? a.computeVertexNormals() : a.normalizeNormals(),
					a
				);
			}
			return ut(e, t), e;
		})(vn),
		Ao = (function (t) {
			function e(e, n) {
				var r,
					i = (1 + Math.sqrt(5)) / 2,
					a = 1 / i,
					o = [
						-1,
						-1,
						-1,
						-1,
						-1,
						1,
						-1,
						1,
						-1,
						-1,
						1,
						1,
						1,
						-1,
						-1,
						1,
						-1,
						1,
						1,
						1,
						-1,
						1,
						1,
						1,
						0,
						-a,
						-i,
						0,
						-a,
						i,
						0,
						a,
						-i,
						0,
						a,
						i,
						-a,
						-i,
						0,
						-a,
						i,
						0,
						a,
						-i,
						0,
						a,
						i,
						0,
						-i,
						0,
						-a,
						i,
						0,
						-a,
						-i,
						0,
						a,
						i,
						0,
						a,
					];
				return (
					((r =
						t.call(
							this,
							o,
							[
								3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15,
								17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0,
								12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2,
								16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4,
								14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19,
								5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9,
							],
							e,
							n
						) || this).type = 'DodecahedronBufferGeometry'),
					(r.parameters = { radius: e, detail: n }),
					r
				);
			}
			return ut(e, t), e;
		})(Eo),
		Lo = (function (t) {
			function e(e, n) {
				var r;
				return (
					((r = t.call(this) || this).type = 'DodecahedronGeometry'),
					(r.parameters = { radius: e, detail: n }),
					r.fromBufferGeometry(new Ao(e, n)),
					r.mergeVertices(),
					r
				);
			}
			return ut(e, t), e;
		})(yo),
		Ro = new wt(),
		Co = new wt(),
		Po = new wt(),
		Io = new Be(),
		Do = (function (t) {
			function e(e, n) {
				var r;
				((r = t.call(this) || this).type = 'EdgesGeometry'),
					(r.parameters = { thresholdAngle: n }),
					(n = void 0 !== n ? n : 1),
					e.isGeometry && (e = new vn().fromGeometry(e));
				for (
					var i = Math.pow(10, 4),
						a = Math.cos(st.DEG2RAD * n),
						o = e.getIndex(),
						s = e.getAttribute('position'),
						c = o ? o.count : s.count,
						l = [0, 0, 0],
						u = ['a', 'b', 'c'],
						h = new Array(3),
						d = {},
						p = [],
						f = 0;
					f < c;
					f += 3
				) {
					o
						? ((l[0] = o.getX(f)),
						  (l[1] = o.getX(f + 1)),
						  (l[2] = o.getX(f + 2)))
						: ((l[0] = f), (l[1] = f + 1), (l[2] = f + 2));
					var m = Io.a,
						v = Io.b,
						g = Io.c;
					if (
						(m.fromBufferAttribute(s, l[0]),
						v.fromBufferAttribute(s, l[1]),
						g.fromBufferAttribute(s, l[2]),
						Io.getNormal(Po),
						(h[0] =
							Math.round(m.x * i) +
							',' +
							Math.round(m.y * i) +
							',' +
							Math.round(m.z * i)),
						(h[1] =
							Math.round(v.x * i) +
							',' +
							Math.round(v.y * i) +
							',' +
							Math.round(v.z * i)),
						(h[2] =
							Math.round(g.x * i) +
							',' +
							Math.round(g.y * i) +
							',' +
							Math.round(g.z * i)),
						h[0] !== h[1] && h[1] !== h[2] && h[2] !== h[0])
					)
						for (var y = 0; y < 3; y++) {
							var x = (y + 1) % 3,
								_ = h[y],
								b = h[x],
								w = Io[u[y]],
								M = Io[u[x]],
								S = _ + '_' + b,
								T = b + '_' + _;
							T in d && d[T]
								? (Po.dot(d[T].normal) <= a &&
										(p.push(w.x, w.y, w.z), p.push(M.x, M.y, M.z)),
								  (d[T] = null))
								: S in d ||
								  (d[S] = { index0: l[y], index1: l[x], normal: Po.clone() });
						}
				}
				for (var E in d)
					if (d[E]) {
						var A = d[E],
							L = A.index0,
							R = A.index1;
						Ro.fromBufferAttribute(s, L),
							Co.fromBufferAttribute(s, R),
							p.push(Ro.x, Ro.y, Ro.z),
							p.push(Co.x, Co.y, Co.z);
					}
				return r.setAttribute('position', new an(p, 3)), r;
			}
			return ut(e, t), e;
		})(vn),
		No = function (t, e, n) {
			n = n || 2;
			var r,
				i,
				a,
				o,
				s,
				c,
				l,
				u = e && e.length,
				h = u ? e[0] * n : t.length,
				d = Oo(t, 0, h, n, !0),
				p = [];
			if (!d || d.next === d.prev) return p;
			if (
				(u &&
					(d = (function (t, e, n, r) {
						var i,
							a,
							o,
							s = [];
						for (i = 0, a = e.length; i < a; i++)
							(o = Oo(
								t,
								e[i] * r,
								i < a - 1 ? e[i + 1] * r : t.length,
								r,
								!1
							)) === o.next && (o.steiner = !0),
								s.push(qo(o));
						for (s.sort(ko), i = 0; i < s.length; i++)
							Vo(s[i], n), (n = Bo(n, n.next));
						return n;
					})(t, e, d, n)),
				t.length > 80 * n)
			) {
				(r = a = t[0]), (i = o = t[1]);
				for (var f = n; f < h; f += n)
					(s = t[f]) < r && (r = s),
						(c = t[f + 1]) < i && (i = c),
						s > a && (a = s),
						c > o && (o = c);
				l = 0 !== (l = Math.max(a - r, o - i)) ? 1 / l : 0;
			}
			return zo(d, p, n, r, i, l), p;
		};
	function Oo(t, e, n, r, i) {
		var a, o;
		if (
			i ===
			(function (t, e, n, r) {
				for (var i = 0, a = e, o = n - r; a < n; a += r)
					(i += (t[o] - t[a]) * (t[a + 1] + t[o + 1])), (o = a);
				return i;
			})(t, e, n, r) >
				0
		)
			for (a = e; a < n; a += r) o = ns(a, t[a], t[a + 1], o);
		else for (a = n - r; a >= e; a -= r) o = ns(a, t[a], t[a + 1], o);
		return o && Jo(o, o.next) && (rs(o), (o = o.next)), o;
	}
	function Bo(t, e) {
		if (!t) return t;
		e || (e = t);
		var n,
			r = t;
		do {
			if (
				((n = !1), r.steiner || (!Jo(r, r.next) && 0 !== Zo(r.prev, r, r.next)))
			)
				r = r.next;
			else {
				if ((rs(r), (r = e = r.prev) === r.next)) break;
				n = !0;
			}
		} while (n || r !== e);
		return e;
	}
	function zo(t, e, n, r, i, a, o) {
		if (t) {
			!o &&
				a &&
				(function (t, e, n, r) {
					var i = t;
					do {
						null === i.z && (i.z = jo(i.x, i.y, e, n, r)),
							(i.prevZ = i.prev),
							(i.nextZ = i.next),
							(i = i.next);
					} while (i !== t);
					(i.prevZ.nextZ = null),
						(i.prevZ = null),
						(function (t) {
							var e,
								n,
								r,
								i,
								a,
								o,
								s,
								c,
								l = 1;
							do {
								for (n = t, t = null, a = null, o = 0; n; ) {
									for (
										o++, r = n, s = 0, e = 0;
										e < l && (s++, (r = r.nextZ));
										e++
									);
									for (c = l; s > 0 || (c > 0 && r); )
										0 !== s && (0 === c || !r || n.z <= r.z)
											? ((i = n), (n = n.nextZ), s--)
											: ((i = r), (r = r.nextZ), c--),
											a ? (a.nextZ = i) : (t = i),
											(i.prevZ = a),
											(a = i);
									n = r;
								}
								(a.nextZ = null), (l *= 2);
							} while (o > 1);
						})(i);
				})(t, r, i, a);
			for (var s, c, l = t; t.prev !== t.next; )
				if (((s = t.prev), (c = t.next), a ? Fo(t, r, i, a) : Go(t)))
					e.push(s.i / n),
						e.push(t.i / n),
						e.push(c.i / n),
						rs(t),
						(t = c.next),
						(l = c.next);
				else if ((t = c) === l) {
					o
						? 1 === o
							? zo((t = Uo(Bo(t), e, n)), e, n, r, i, a, 2)
							: 2 === o && Ho(t, e, n, r, i, a)
						: zo(Bo(t), e, n, r, i, a, 1);
					break;
				}
		}
	}
	function Go(t) {
		var e = t.prev,
			n = t,
			r = t.next;
		if (Zo(e, n, r) >= 0) return !1;
		for (var i = t.next.next; i !== t.prev; ) {
			if (
				Xo(e.x, e.y, n.x, n.y, r.x, r.y, i.x, i.y) &&
				Zo(i.prev, i, i.next) >= 0
			)
				return !1;
			i = i.next;
		}
		return !0;
	}
	function Fo(t, e, n, r) {
		var i = t.prev,
			a = t,
			o = t.next;
		if (Zo(i, a, o) >= 0) return !1;
		for (
			var s = i.x < a.x ? (i.x < o.x ? i.x : o.x) : a.x < o.x ? a.x : o.x,
				c = i.y < a.y ? (i.y < o.y ? i.y : o.y) : a.y < o.y ? a.y : o.y,
				l = i.x > a.x ? (i.x > o.x ? i.x : o.x) : a.x > o.x ? a.x : o.x,
				u = i.y > a.y ? (i.y > o.y ? i.y : o.y) : a.y > o.y ? a.y : o.y,
				h = jo(s, c, e, n, r),
				d = jo(l, u, e, n, r),
				p = t.prevZ,
				f = t.nextZ;
			p && p.z >= h && f && f.z <= d;

		) {
			if (
				p !== t.prev &&
				p !== t.next &&
				Xo(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
				Zo(p.prev, p, p.next) >= 0
			)
				return !1;
			if (
				((p = p.prevZ),
				f !== t.prev &&
					f !== t.next &&
					Xo(i.x, i.y, a.x, a.y, o.x, o.y, f.x, f.y) &&
					Zo(f.prev, f, f.next) >= 0)
			)
				return !1;
			f = f.nextZ;
		}
		for (; p && p.z >= h; ) {
			if (
				p !== t.prev &&
				p !== t.next &&
				Xo(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) &&
				Zo(p.prev, p, p.next) >= 0
			)
				return !1;
			p = p.prevZ;
		}
		for (; f && f.z <= d; ) {
			if (
				f !== t.prev &&
				f !== t.next &&
				Xo(i.x, i.y, a.x, a.y, o.x, o.y, f.x, f.y) &&
				Zo(f.prev, f, f.next) >= 0
			)
				return !1;
			f = f.nextZ;
		}
		return !0;
	}
	function Uo(t, e, n) {
		var r = t;
		do {
			var i = r.prev,
				a = r.next.next;
			!Jo(i, a) &&
				Qo(i, r, r.next, a) &&
				ts(i, a) &&
				ts(a, i) &&
				(e.push(i.i / n),
				e.push(r.i / n),
				e.push(a.i / n),
				rs(r),
				rs(r.next),
				(r = t = a)),
				(r = r.next);
		} while (r !== t);
		return Bo(r);
	}
	function Ho(t, e, n, r, i, a) {
		var o = t;
		do {
			for (var s = o.next.next; s !== o.prev; ) {
				if (o.i !== s.i && Yo(o, s)) {
					var c = es(o, s);
					return (
						(o = Bo(o, o.next)),
						(c = Bo(c, c.next)),
						zo(o, e, n, r, i, a),
						void zo(c, e, n, r, i, a)
					);
				}
				s = s.next;
			}
			o = o.next;
		} while (o !== t);
	}
	function ko(t, e) {
		return t.x - e.x;
	}
	function Vo(t, e) {
		if (
			(e = (function (t, e) {
				var n,
					r = e,
					i = t.x,
					a = t.y,
					o = -1 / 0;
				do {
					if (a <= r.y && a >= r.next.y && r.next.y !== r.y) {
						var s = r.x + ((a - r.y) * (r.next.x - r.x)) / (r.next.y - r.y);
						if (s <= i && s > o) {
							if (((o = s), s === i)) {
								if (a === r.y) return r;
								if (a === r.next.y) return r.next;
							}
							n = r.x < r.next.x ? r : r.next;
						}
					}
					r = r.next;
				} while (r !== e);
				if (!n) return null;
				if (i === o) return n;
				var c,
					l = n,
					u = n.x,
					h = n.y,
					d = 1 / 0;
				r = n;
				do {
					i >= r.x &&
						r.x >= u &&
						i !== r.x &&
						Xo(a < h ? i : o, a, u, h, a < h ? o : i, a, r.x, r.y) &&
						((c = Math.abs(a - r.y) / (i - r.x)),
						ts(r, t) &&
							(c < d ||
								(c === d && (r.x > n.x || (r.x === n.x && Wo(n, r))))) &&
							((n = r), (d = c))),
						(r = r.next);
				} while (r !== l);
				return n;
			})(t, e))
		) {
			var n = es(e, t);
			Bo(e, e.next), Bo(n, n.next);
		}
	}
	function Wo(t, e) {
		return Zo(t.prev, t, e.prev) < 0 && Zo(e.next, t, t.next) < 0;
	}
	function jo(t, e, n, r, i) {
		return (
			(t =
				1431655765 &
				((t =
					858993459 &
					((t =
						252645135 &
						((t = 16711935 & ((t = 32767 * (t - n) * i) | (t << 8))) |
							(t << 4))) |
						(t << 2))) |
					(t << 1))) |
			((e =
				1431655765 &
				((e =
					858993459 &
					((e =
						252645135 &
						((e = 16711935 & ((e = 32767 * (e - r) * i) | (e << 8))) |
							(e << 4))) |
						(e << 2))) |
					(e << 1))) <<
				1)
		);
	}
	function qo(t) {
		var e = t,
			n = t;
		do {
			(e.x < n.x || (e.x === n.x && e.y < n.y)) && (n = e), (e = e.next);
		} while (e !== t);
		return n;
	}
	function Xo(t, e, n, r, i, a, o, s) {
		return (
			(i - o) * (e - s) - (t - o) * (a - s) >= 0 &&
			(t - o) * (r - s) - (n - o) * (e - s) >= 0 &&
			(n - o) * (a - s) - (i - o) * (r - s) >= 0
		);
	}
	function Yo(t, e) {
		return (
			t.next.i !== e.i &&
			t.prev.i !== e.i &&
			!(function (t, e) {
				var n = t;
				do {
					if (
						n.i !== t.i &&
						n.next.i !== t.i &&
						n.i !== e.i &&
						n.next.i !== e.i &&
						Qo(n, n.next, t, e)
					)
						return !0;
					n = n.next;
				} while (n !== t);
				return !1;
			})(t, e) &&
			((ts(t, e) &&
				ts(e, t) &&
				(function (t, e) {
					var n = t,
						r = !1,
						i = (t.x + e.x) / 2,
						a = (t.y + e.y) / 2;
					do {
						n.y > a != n.next.y > a &&
							n.next.y !== n.y &&
							i < ((n.next.x - n.x) * (a - n.y)) / (n.next.y - n.y) + n.x &&
							(r = !r),
							(n = n.next);
					} while (n !== t);
					return r;
				})(t, e) &&
				(Zo(t.prev, t, e.prev) || Zo(t, e.prev, e))) ||
				(Jo(t, e) && Zo(t.prev, t, t.next) > 0 && Zo(e.prev, e, e.next) > 0))
		);
	}
	function Zo(t, e, n) {
		return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y);
	}
	function Jo(t, e) {
		return t.x === e.x && t.y === e.y;
	}
	function Qo(t, e, n, r) {
		var i = $o(Zo(t, e, n)),
			a = $o(Zo(t, e, r)),
			o = $o(Zo(n, r, t)),
			s = $o(Zo(n, r, e));
		return (
			(i !== a && o !== s) ||
			!(0 !== i || !Ko(t, n, e)) ||
			!(0 !== a || !Ko(t, r, e)) ||
			!(0 !== o || !Ko(n, t, r)) ||
			!(0 !== s || !Ko(n, e, r))
		);
	}
	function Ko(t, e, n) {
		return (
			e.x <= Math.max(t.x, n.x) &&
			e.x >= Math.min(t.x, n.x) &&
			e.y <= Math.max(t.y, n.y) &&
			e.y >= Math.min(t.y, n.y)
		);
	}
	function $o(t) {
		return t > 0 ? 1 : t < 0 ? -1 : 0;
	}
	function ts(t, e) {
		return Zo(t.prev, t, t.next) < 0
			? Zo(t, e, t.next) >= 0 && Zo(t, t.prev, e) >= 0
			: Zo(t, e, t.prev) < 0 || Zo(t, t.next, e) < 0;
	}
	function es(t, e) {
		var n = new is(t.i, t.x, t.y),
			r = new is(e.i, e.x, e.y),
			i = t.next,
			a = e.prev;
		return (
			(t.next = e),
			(e.prev = t),
			(n.next = i),
			(i.prev = n),
			(r.next = n),
			(n.prev = r),
			(a.next = r),
			(r.prev = a),
			r
		);
	}
	function ns(t, e, n, r) {
		var i = new is(t, e, n);
		return (
			r
				? ((i.next = r.next), (i.prev = r), (r.next.prev = i), (r.next = i))
				: ((i.prev = i), (i.next = i)),
			i
		);
	}
	function rs(t) {
		(t.next.prev = t.prev),
			(t.prev.next = t.next),
			t.prevZ && (t.prevZ.nextZ = t.nextZ),
			t.nextZ && (t.nextZ.prevZ = t.prevZ);
	}
	function is(t, e, n) {
		(this.i = t),
			(this.x = e),
			(this.y = n),
			(this.prev = null),
			(this.next = null),
			(this.z = null),
			(this.prevZ = null),
			(this.nextZ = null),
			(this.steiner = !1);
	}
	var as = {
		area: function (t) {
			for (var e = t.length, n = 0, r = e - 1, i = 0; i < e; r = i++)
				n += t[r].x * t[i].y - t[i].x * t[r].y;
			return 0.5 * n;
		},
		isClockWise: function (t) {
			return as.area(t) < 0;
		},
		triangulateShape: function (t, e) {
			var n = [],
				r = [],
				i = [];
			os(t), ss(n, t);
			var a = t.length;
			e.forEach(os);
			for (var o = 0; o < e.length; o++)
				r.push(a), (a += e[o].length), ss(n, e[o]);
			for (var s = No(n, r), c = 0; c < s.length; c += 3)
				i.push(s.slice(c, c + 3));
			return i;
		},
	};
	function os(t) {
		var e = t.length;
		e > 2 && t[e - 1].equals(t[0]) && t.pop();
	}
	function ss(t, e) {
		for (var n = 0; n < e.length; n++) t.push(e[n].x), t.push(e[n].y);
	}
	var cs = (function (t) {
			function e(e, n) {
				var r;
				((r = t.call(this) || this).type = 'ExtrudeBufferGeometry'),
					(r.parameters = { shapes: e, options: n }),
					(e = Array.isArray(e) ? e : [e]);
				for (var i = ht(r), a = [], o = [], s = 0, c = e.length; s < c; s++) {
					l(e[s]);
				}
				function l(t) {
					var e = [],
						r = void 0 !== n.curveSegments ? n.curveSegments : 12,
						s = void 0 !== n.steps ? n.steps : 1,
						c = void 0 !== n.depth ? n.depth : 100,
						l = void 0 === n.bevelEnabled || n.bevelEnabled,
						u = void 0 !== n.bevelThickness ? n.bevelThickness : 6,
						h = void 0 !== n.bevelSize ? n.bevelSize : u - 2,
						d = void 0 !== n.bevelOffset ? n.bevelOffset : 0,
						p = void 0 !== n.bevelSegments ? n.bevelSegments : 3,
						f = n.extrudePath,
						m = void 0 !== n.UVGenerator ? n.UVGenerator : ls;
					void 0 !== n.amount &&
						(console.warn(
							'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.'
						),
						(c = n.amount));
					var v,
						g,
						y,
						x,
						_,
						b = !1;
					f &&
						((v = f.getSpacedPoints(s)),
						(b = !0),
						(l = !1),
						(g = f.computeFrenetFrames(s, !1)),
						(y = new wt()),
						(x = new wt()),
						(_ = new wt())),
						l || ((p = 0), (u = 0), (h = 0), (d = 0));
					var w = t.extractPoints(r),
						M = w.shape,
						S = w.holes;
					if (!as.isClockWise(M)) {
						M = M.reverse();
						for (var T = 0, E = S.length; T < E; T++) {
							var A = S[T];
							as.isClockWise(A) && (S[T] = A.reverse());
						}
					}
					for (
						var L = as.triangulateShape(M, S), R = M, C = 0, P = S.length;
						C < P;
						C++
					) {
						var I = S[C];
						M = M.concat(I);
					}
					function D(t, e, n) {
						return (
							e || console.error('THREE.ExtrudeGeometry: vec does not exist'),
							e.clone().multiplyScalar(n).add(t)
						);
					}
					var N = M.length,
						O = L.length;
					function B(t, e, n) {
						var r,
							i,
							a,
							o = t.x - e.x,
							s = t.y - e.y,
							c = n.x - t.x,
							l = n.y - t.y,
							u = o * o + s * s,
							h = o * l - s * c;
						if (Math.abs(h) > Number.EPSILON) {
							var d = Math.sqrt(u),
								p = Math.sqrt(c * c + l * l),
								f = e.x - s / d,
								m = e.y + o / d,
								v =
									((n.x - l / p - f) * l - (n.y + c / p - m) * c) /
									(o * l - s * c),
								g = (r = f + o * v - t.x) * r + (i = m + s * v - t.y) * i;
							if (g <= 2) return new pt(r, i);
							a = Math.sqrt(g / 2);
						} else {
							var y = !1;
							o > Number.EPSILON
								? c > Number.EPSILON && (y = !0)
								: o < -Number.EPSILON
								? c < -Number.EPSILON && (y = !0)
								: Math.sign(s) === Math.sign(l) && (y = !0),
								y
									? ((r = -s), (i = o), (a = Math.sqrt(u)))
									: ((r = o), (i = s), (a = Math.sqrt(u / 2)));
						}
						return new pt(r / a, i / a);
					}
					for (
						var z = [], G = 0, F = R.length, U = F - 1, H = G + 1;
						G < F;
						G++, U++, H++
					)
						U === F && (U = 0),
							H === F && (H = 0),
							(z[G] = B(R[G], R[U], R[H]));
					for (var k, V = [], W = z.concat(), j = 0, q = S.length; j < q; j++) {
						var X = S[j];
						k = [];
						for (
							var Y = 0, Z = X.length, J = Z - 1, Q = Y + 1;
							Y < Z;
							Y++, J++, Q++
						)
							J === Z && (J = 0),
								Q === Z && (Q = 0),
								(k[Y] = B(X[Y], X[J], X[Q]));
						V.push(k), (W = W.concat(k));
					}
					for (var K = 0; K < p; K++) {
						for (
							var $ = K / p,
								tt = u * Math.cos(($ * Math.PI) / 2),
								et = h * Math.sin(($ * Math.PI) / 2) + d,
								nt = 0,
								rt = R.length;
							nt < rt;
							nt++
						) {
							var it = D(R[nt], z[nt], et);
							Dt(it.x, it.y, -tt);
						}
						for (var at = 0, ot = S.length; at < ot; at++) {
							var st = S[at];
							k = V[at];
							for (var ct = 0, lt = st.length; ct < lt; ct++) {
								var ut = D(st[ct], k[ct], et);
								Dt(ut.x, ut.y, -tt);
							}
						}
					}
					for (var ht = h + d, dt = 0; dt < N; dt++) {
						var ft = l ? D(M[dt], W[dt], ht) : M[dt];
						b
							? (x.copy(g.normals[0]).multiplyScalar(ft.x),
							  y.copy(g.binormals[0]).multiplyScalar(ft.y),
							  _.copy(v[0]).add(x).add(y),
							  Dt(_.x, _.y, _.z))
							: Dt(ft.x, ft.y, 0);
					}
					for (var mt = 1; mt <= s; mt++)
						for (var vt = 0; vt < N; vt++) {
							var gt = l ? D(M[vt], W[vt], ht) : M[vt];
							b
								? (x.copy(g.normals[mt]).multiplyScalar(gt.x),
								  y.copy(g.binormals[mt]).multiplyScalar(gt.y),
								  _.copy(v[mt]).add(x).add(y),
								  Dt(_.x, _.y, _.z))
								: Dt(gt.x, gt.y, (c / s) * mt);
						}
					for (var yt = p - 1; yt >= 0; yt--) {
						for (
							var xt = yt / p,
								_t = u * Math.cos((xt * Math.PI) / 2),
								bt = h * Math.sin((xt * Math.PI) / 2) + d,
								Mt = 0,
								St = R.length;
							Mt < St;
							Mt++
						) {
							var Tt = D(R[Mt], z[Mt], bt);
							Dt(Tt.x, Tt.y, c + _t);
						}
						for (var Et = 0, At = S.length; Et < At; Et++) {
							var Lt = S[Et];
							k = V[Et];
							for (var Rt = 0, Ct = Lt.length; Rt < Ct; Rt++) {
								var Pt = D(Lt[Rt], k[Rt], bt);
								b
									? Dt(Pt.x, Pt.y + v[s - 1].y, v[s - 1].x + _t)
									: Dt(Pt.x, Pt.y, c + _t);
							}
						}
					}
					function It(t, e) {
						for (var n = t.length; --n >= 0; ) {
							var r = n,
								i = n - 1;
							i < 0 && (i = t.length - 1);
							for (var a = 0, o = s + 2 * p; a < o; a++) {
								var c = N * a,
									l = N * (a + 1);
								Ot(e + r + c, e + i + c, e + i + l, e + r + l);
							}
						}
					}
					function Dt(t, n, r) {
						e.push(t), e.push(n), e.push(r);
					}
					function Nt(t, e, n) {
						Bt(t), Bt(e), Bt(n);
						var r = a.length / 3,
							o = m.generateTopUV(i, a, r - 3, r - 2, r - 1);
						zt(o[0]), zt(o[1]), zt(o[2]);
					}
					function Ot(t, e, n, r) {
						Bt(t), Bt(e), Bt(r), Bt(e), Bt(n), Bt(r);
						var o = a.length / 3,
							s = m.generateSideWallUV(i, a, o - 6, o - 3, o - 2, o - 1);
						zt(s[0]), zt(s[1]), zt(s[3]), zt(s[1]), zt(s[2]), zt(s[3]);
					}
					function Bt(t) {
						a.push(e[3 * t + 0]), a.push(e[3 * t + 1]), a.push(e[3 * t + 2]);
					}
					function zt(t) {
						o.push(t.x), o.push(t.y);
					}
					!(function () {
						var t = a.length / 3;
						if (l) {
							for (var e = 0, n = N * e, r = 0; r < O; r++) {
								var o = L[r];
								Nt(o[2] + n, o[1] + n, o[0] + n);
							}
							n = N * (e = s + 2 * p);
							for (var c = 0; c < O; c++) {
								var u = L[c];
								Nt(u[0] + n, u[1] + n, u[2] + n);
							}
						} else {
							for (var h = 0; h < O; h++) {
								var d = L[h];
								Nt(d[2], d[1], d[0]);
							}
							for (var f = 0; f < O; f++) {
								var m = L[f];
								Nt(m[0] + N * s, m[1] + N * s, m[2] + N * s);
							}
						}
						i.addGroup(t, a.length / 3 - t, 0);
					})(),
						(function () {
							var t = a.length / 3,
								e = 0;
							It(R, e), (e += R.length);
							for (var n = 0, r = S.length; n < r; n++) {
								var o = S[n];
								It(o, e), (e += o.length);
							}
							i.addGroup(t, a.length / 3 - t, 1);
						})();
				}
				return (
					r.setAttribute('position', new an(a, 3)),
					r.setAttribute('uv', new an(o, 2)),
					r.computeVertexNormals(),
					r
				);
			}
			return (
				ut(e, t),
				(e.prototype.toJSON = function () {
					var t = vn.prototype.toJSON.call(this);
					return (function (t, e, n) {
						if (((n.shapes = []), Array.isArray(t)))
							for (var r = 0, i = t.length; r < i; r++) {
								var a = t[r];
								n.shapes.push(a.uuid);
							}
						else n.shapes.push(t.uuid);
						void 0 !== e.extrudePath &&
							(n.options.extrudePath = e.extrudePath.toJSON());
						return n;
					})(this.parameters.shapes, this.parameters.options, t);
				}),
				e
			);
		})(vn),
		ls = {
			generateTopUV: function (t, e, n, r, i) {
				var a = e[3 * n],
					o = e[3 * n + 1],
					s = e[3 * r],
					c = e[3 * r + 1],
					l = e[3 * i],
					u = e[3 * i + 1];
				return [new pt(a, o), new pt(s, c), new pt(l, u)];
			},
			generateSideWallUV: function (t, e, n, r, i, a) {
				var o = e[3 * n],
					s = e[3 * n + 1],
					c = e[3 * n + 2],
					l = e[3 * r],
					u = e[3 * r + 1],
					h = e[3 * r + 2],
					d = e[3 * i],
					p = e[3 * i + 1],
					f = e[3 * i + 2],
					m = e[3 * a],
					v = e[3 * a + 1],
					g = e[3 * a + 2];
				return Math.abs(s - u) < 0.01
					? [
							new pt(o, 1 - c),
							new pt(l, 1 - h),
							new pt(d, 1 - f),
							new pt(m, 1 - g),
					  ]
					: [
							new pt(s, 1 - c),
							new pt(u, 1 - h),
							new pt(p, 1 - f),
							new pt(v, 1 - g),
					  ];
			},
		};
	var us = (function (t) {
		function e(e, n) {
			var r;
			return (
				((r = t.call(this) || this).type = 'ExtrudeGeometry'),
				(r.parameters = { shapes: e, options: n }),
				r.fromBufferGeometry(new cs(e, n)),
				r.mergeVertices(),
				r
			);
		}
		return (
			ut(e, t),
			(e.prototype.toJSON = function () {
				var e = t.prototype.toJSON.call(this);
				return (function (t, e, n) {
					if (((n.shapes = []), Array.isArray(t)))
						for (var r = 0, i = t.length; r < i; r++) {
							var a = t[r];
							n.shapes.push(a.uuid);
						}
					else n.shapes.push(t.uuid);
					void 0 !== e.extrudePath &&
						(n.options.extrudePath = e.extrudePath.toJSON());
					return n;
				})(this.parameters.shapes, this.parameters.options, e);
			}),
			e
		);
	})(yo);
	var hs = (function (t) {
			function e(e, n) {
				var r,
					i = (1 + Math.sqrt(5)) / 2,
					a = [
						-1,
						i,
						0,
						1,
						i,
						0,
						-1,
						-i,
						0,
						1,
						-i,
						0,
						0,
						-1,
						i,
						0,
						1,
						i,
						0,
						-1,
						-i,
						0,
						1,
						-i,
						i,
						0,
						-1,
						i,
						0,
						1,
						-i,
						0,
						-1,
						-i,
						0,
						1,
					];
				return (
					((r =
						t.call(
							this,
							a,
							[
								0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11,
								4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3,
								6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,
							],
							e,
							n
						) || this).type = 'IcosahedronBufferGeometry'),
					(r.parameters = { radius: e, detail: n }),
					r
				);
			}
			return ut(e, t), e;
		})(Eo),
		ds = (function (t) {
			function e(e, n) {
				var r;
				return (
					((r = t.call(this) || this).type = 'IcosahedronGeometry'),
					(r.parameters = { radius: e, detail: n }),
					r.fromBufferGeometry(new hs(e, n)),
					r.mergeVertices(),
					r
				);
			}
			return ut(e, t), e;
		})(yo),
		ps = (function (t) {
			function e(e, n, r, i) {
				var a;
				((a = t.call(this) || this).type = 'LatheBufferGeometry'),
					(a.parameters = {
						points: e,
						segments: n,
						phiStart: r,
						phiLength: i,
					}),
					(n = Math.floor(n) || 12),
					(r = r || 0),
					(i = i || 2 * Math.PI),
					(i = st.clamp(i, 0, 2 * Math.PI));
				for (
					var o = [],
						s = [],
						c = [],
						l = 1 / n,
						u = new wt(),
						h = new pt(),
						d = 0;
					d <= n;
					d++
				)
					for (
						var p = r + d * l * i, f = Math.sin(p), m = Math.cos(p), v = 0;
						v <= e.length - 1;
						v++
					)
						(u.x = e[v].x * f),
							(u.y = e[v].y),
							(u.z = e[v].x * m),
							s.push(u.x, u.y, u.z),
							(h.x = d / n),
							(h.y = v / (e.length - 1)),
							c.push(h.x, h.y);
				for (var g = 0; g < n; g++)
					for (var y = 0; y < e.length - 1; y++) {
						var x = y + g * e.length,
							_ = x,
							b = x + e.length,
							w = x + e.length + 1,
							M = x + 1;
						o.push(_, b, M), o.push(b, w, M);
					}
				if (
					(a.setIndex(o),
					a.setAttribute('position', new an(s, 3)),
					a.setAttribute('uv', new an(c, 2)),
					a.computeVertexNormals(),
					i === 2 * Math.PI)
				)
					for (
						var S = a.attributes.normal.array,
							T = new wt(),
							E = new wt(),
							A = new wt(),
							L = n * e.length * 3,
							R = 0,
							C = 0;
						R < e.length;
						R++, C += 3
					)
						(T.x = S[C + 0]),
							(T.y = S[C + 1]),
							(T.z = S[C + 2]),
							(E.x = S[L + C + 0]),
							(E.y = S[L + C + 1]),
							(E.z = S[L + C + 2]),
							A.addVectors(T, E).normalize(),
							(S[C + 0] = S[L + C + 0] = A.x),
							(S[C + 1] = S[L + C + 1] = A.y),
							(S[C + 2] = S[L + C + 2] = A.z);
				return a;
			}
			return ut(e, t), e;
		})(vn),
		fs = (function (t) {
			function e(e, n, r, i) {
				var a;
				return (
					((a = t.call(this) || this).type = 'LatheGeometry'),
					(a.parameters = {
						points: e,
						segments: n,
						phiStart: r,
						phiLength: i,
					}),
					a.fromBufferGeometry(new ps(e, n, r, i)),
					a.mergeVertices(),
					a
				);
			}
			return ut(e, t), e;
		})(yo),
		ms = (function (t) {
			function e(e, n) {
				var r;
				return (
					((r =
						t.call(
							this,
							[1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
							[
								0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4,
								1, 4, 2,
							],
							e,
							n
						) || this).type = 'OctahedronBufferGeometry'),
					(r.parameters = { radius: e, detail: n }),
					r
				);
			}
			return ut(e, t), e;
		})(Eo),
		vs = (function (t) {
			function e(e, n) {
				var r;
				return (
					((r = t.call(this) || this).type = 'OctahedronGeometry'),
					(r.parameters = { radius: e, detail: n }),
					r.fromBufferGeometry(new ms(e, n)),
					r.mergeVertices(),
					r
				);
			}
			return ut(e, t), e;
		})(yo);
	function gs(t, e, n) {
		vn.call(this),
			(this.type = 'ParametricBufferGeometry'),
			(this.parameters = { func: t, slices: e, stacks: n });
		var r = [],
			i = [],
			a = [],
			o = [],
			s = 1e-5,
			c = new wt(),
			l = new wt(),
			u = new wt(),
			h = new wt(),
			d = new wt();
		t.length < 3 &&
			console.error(
				'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.'
			);
		for (var p = e + 1, f = 0; f <= n; f++)
			for (var m = f / n, v = 0; v <= e; v++) {
				var g = v / e;
				t(g, m, l),
					i.push(l.x, l.y, l.z),
					g - s >= 0
						? (t(g - s, m, u), h.subVectors(l, u))
						: (t(g + s, m, u), h.subVectors(u, l)),
					m - s >= 0
						? (t(g, m - s, u), d.subVectors(l, u))
						: (t(g, m + s, u), d.subVectors(u, l)),
					c.crossVectors(h, d).normalize(),
					a.push(c.x, c.y, c.z),
					o.push(g, m);
			}
		for (var y = 0; y < n; y++)
			for (var x = 0; x < e; x++) {
				var _ = y * p + x,
					b = y * p + x + 1,
					w = (y + 1) * p + x + 1,
					M = (y + 1) * p + x;
				r.push(_, b, M), r.push(b, w, M);
			}
		this.setIndex(r),
			this.setAttribute('position', new an(i, 3)),
			this.setAttribute('normal', new an(a, 3)),
			this.setAttribute('uv', new an(o, 2));
	}
	function ys(t, e, n) {
		yo.call(this),
			(this.type = 'ParametricGeometry'),
			(this.parameters = { func: t, slices: e, stacks: n }),
			this.fromBufferGeometry(new gs(t, e, n)),
			this.mergeVertices();
	}
	(gs.prototype = Object.create(vn.prototype)),
		(gs.prototype.constructor = gs),
		(ys.prototype = Object.create(yo.prototype)),
		(ys.prototype.constructor = ys);
	var xs = (function (t) {
			function e(e, n, r, i) {
				var a;
				return (
					((a = t.call(this) || this).type = 'PlaneGeometry'),
					(a.parameters = {
						width: e,
						height: n,
						widthSegments: r,
						heightSegments: i,
					}),
					a.fromBufferGeometry(new tr(e, n, r, i)),
					a.mergeVertices(),
					a
				);
			}
			return ut(e, t), e;
		})(yo),
		_s = (function (t) {
			function e(e, n, r, i) {
				var a;
				return (
					((a = t.call(this) || this).type = 'PolyhedronGeometry'),
					(a.parameters = { vertices: e, indices: n, radius: r, detail: i }),
					a.fromBufferGeometry(new Eo(e, n, r, i)),
					a.mergeVertices(),
					a
				);
			}
			return ut(e, t), e;
		})(yo),
		bs = (function (t) {
			function e(e, n, r, i, a, o) {
				var s;
				((s = t.call(this) || this).type = 'RingBufferGeometry'),
					(s.parameters = {
						innerRadius: e,
						outerRadius: n,
						thetaSegments: r,
						phiSegments: i,
						thetaStart: a,
						thetaLength: o,
					}),
					(e = e || 0.5),
					(n = n || 1),
					(a = void 0 !== a ? a : 0),
					(o = void 0 !== o ? o : 2 * Math.PI),
					(r = void 0 !== r ? Math.max(3, r) : 8);
				for (
					var c = [],
						l = [],
						u = [],
						h = [],
						d = e,
						p = (n - e) / (i = void 0 !== i ? Math.max(1, i) : 1),
						f = new wt(),
						m = new pt(),
						v = 0;
					v <= i;
					v++
				) {
					for (var g = 0; g <= r; g++) {
						var y = a + (g / r) * o;
						(f.x = d * Math.cos(y)),
							(f.y = d * Math.sin(y)),
							l.push(f.x, f.y, f.z),
							u.push(0, 0, 1),
							(m.x = (f.x / n + 1) / 2),
							(m.y = (f.y / n + 1) / 2),
							h.push(m.x, m.y);
					}
					d += p;
				}
				for (var x = 0; x < i; x++)
					for (var _ = x * (r + 1), b = 0; b < r; b++) {
						var w = b + _,
							M = w,
							S = w + r + 1,
							T = w + r + 2,
							E = w + 1;
						c.push(M, S, E), c.push(S, T, E);
					}
				return (
					s.setIndex(c),
					s.setAttribute('position', new an(l, 3)),
					s.setAttribute('normal', new an(u, 3)),
					s.setAttribute('uv', new an(h, 2)),
					s
				);
			}
			return ut(e, t), e;
		})(vn),
		ws = (function (t) {
			function e(e, n, r, i, a, o) {
				var s;
				return (
					((s = t.call(this) || this).type = 'RingGeometry'),
					(s.parameters = {
						innerRadius: e,
						outerRadius: n,
						thetaSegments: r,
						phiSegments: i,
						thetaStart: a,
						thetaLength: o,
					}),
					s.fromBufferGeometry(new bs(e, n, r, i, a, o)),
					s.mergeVertices(),
					s
				);
			}
			return ut(e, t), e;
		})(yo),
		Ms = (function (t) {
			function e(e, n) {
				var r;
				((r = t.call(this) || this).type = 'ShapeBufferGeometry'),
					(r.parameters = { shapes: e, curveSegments: n }),
					(n = n || 12);
				var i = [],
					a = [],
					o = [],
					s = [],
					c = 0,
					l = 0;
				if (!1 === Array.isArray(e)) h(e);
				else
					for (var u = 0; u < e.length; u++)
						h(e[u]), r.addGroup(c, l, u), (c += l), (l = 0);
				function h(t) {
					var e = a.length / 3,
						r = t.extractPoints(n),
						c = r.shape,
						u = r.holes;
					!1 === as.isClockWise(c) && (c = c.reverse());
					for (var h = 0, d = u.length; h < d; h++) {
						var p = u[h];
						!0 === as.isClockWise(p) && (u[h] = p.reverse());
					}
					for (
						var f = as.triangulateShape(c, u), m = 0, v = u.length;
						m < v;
						m++
					) {
						var g = u[m];
						c = c.concat(g);
					}
					for (var y = 0, x = c.length; y < x; y++) {
						var _ = c[y];
						a.push(_.x, _.y, 0), o.push(0, 0, 1), s.push(_.x, _.y);
					}
					for (var b = 0, w = f.length; b < w; b++) {
						var M = f[b],
							S = M[0] + e,
							T = M[1] + e,
							E = M[2] + e;
						i.push(S, T, E), (l += 3);
					}
				}
				return (
					r.setIndex(i),
					r.setAttribute('position', new an(a, 3)),
					r.setAttribute('normal', new an(o, 3)),
					r.setAttribute('uv', new an(s, 2)),
					r
				);
			}
			return (
				ut(e, t),
				(e.prototype.toJSON = function () {
					var t = vn.prototype.toJSON.call(this);
					return (function (t, e) {
						if (((e.shapes = []), Array.isArray(t)))
							for (var n = 0, r = t.length; n < r; n++) {
								var i = t[n];
								e.shapes.push(i.uuid);
							}
						else e.shapes.push(t.uuid);
						return e;
					})(this.parameters.shapes, t);
				}),
				e
			);
		})(vn);
	var Ss = (function (t) {
		function e(e, n) {
			var r;
			return (
				((r = t.call(this) || this).type = 'ShapeGeometry'),
				'object' == typeof n &&
					(console.warn(
						'THREE.ShapeGeometry: Options parameter has been removed.'
					),
					(n = n.curveSegments)),
				(r.parameters = { shapes: e, curveSegments: n }),
				r.fromBufferGeometry(new Ms(e, n)),
				r.mergeVertices(),
				r
			);
		}
		return (
			ut(e, t),
			(e.prototype.toJSON = function () {
				var t = yo.prototype.toJSON.call(this);
				return (function (t, e) {
					if (((e.shapes = []), Array.isArray(t)))
						for (var n = 0, r = t.length; n < r; n++) {
							var i = t[n];
							e.shapes.push(i.uuid);
						}
					else e.shapes.push(t.uuid);
					return e;
				})(this.parameters.shapes, t);
			}),
			e
		);
	})(yo);
	var Ts = (function (t) {
			function e(e, n, r, i, a, o, s) {
				var c;
				((c = t.call(this) || this).type = 'SphereBufferGeometry'),
					(c.parameters = {
						radius: e,
						widthSegments: n,
						heightSegments: r,
						phiStart: i,
						phiLength: a,
						thetaStart: o,
						thetaLength: s,
					}),
					(e = e || 1),
					(n = Math.max(3, Math.floor(n) || 8)),
					(r = Math.max(2, Math.floor(r) || 6)),
					(i = void 0 !== i ? i : 0),
					(a = void 0 !== a ? a : 2 * Math.PI),
					(o = void 0 !== o ? o : 0),
					(s = void 0 !== s ? s : Math.PI);
				for (
					var l = Math.min(o + s, Math.PI),
						u = 0,
						h = [],
						d = new wt(),
						p = new wt(),
						f = [],
						m = [],
						v = [],
						g = [],
						y = 0;
					y <= r;
					y++
				) {
					var x = [],
						_ = y / r,
						b = 0;
					0 == y && 0 == o
						? (b = 0.5 / n)
						: y == r && l == Math.PI && (b = -0.5 / n);
					for (var w = 0; w <= n; w++) {
						var M = w / n;
						(d.x = -e * Math.cos(i + M * a) * Math.sin(o + _ * s)),
							(d.y = e * Math.cos(o + _ * s)),
							(d.z = e * Math.sin(i + M * a) * Math.sin(o + _ * s)),
							m.push(d.x, d.y, d.z),
							p.copy(d).normalize(),
							v.push(p.x, p.y, p.z),
							g.push(M + b, 1 - _),
							x.push(u++);
					}
					h.push(x);
				}
				for (var S = 0; S < r; S++)
					for (var T = 0; T < n; T++) {
						var E = h[S][T + 1],
							A = h[S][T],
							L = h[S + 1][T],
							R = h[S + 1][T + 1];
						(0 !== S || o > 0) && f.push(E, A, R),
							(S !== r - 1 || l < Math.PI) && f.push(A, L, R);
					}
				return (
					c.setIndex(f),
					c.setAttribute('position', new an(m, 3)),
					c.setAttribute('normal', new an(v, 3)),
					c.setAttribute('uv', new an(g, 2)),
					c
				);
			}
			return ut(e, t), e;
		})(vn),
		Es = (function (t) {
			function e(e, n, r, i, a, o, s) {
				var c;
				return (
					((c = t.call(this) || this).type = 'SphereGeometry'),
					(c.parameters = {
						radius: e,
						widthSegments: n,
						heightSegments: r,
						phiStart: i,
						phiLength: a,
						thetaStart: o,
						thetaLength: s,
					}),
					c.fromBufferGeometry(new Ts(e, n, r, i, a, o, s)),
					c.mergeVertices(),
					c
				);
			}
			return ut(e, t), e;
		})(yo),
		As = (function (t) {
			function e(e, n) {
				var r;
				return (
					((r =
						t.call(
							this,
							[1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
							[2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1],
							e,
							n
						) || this).type = 'TetrahedronBufferGeometry'),
					(r.parameters = { radius: e, detail: n }),
					r
				);
			}
			return ut(e, t), e;
		})(Eo),
		Ls = (function (t) {
			function e(e, n) {
				var r;
				return (
					((r = t.call(this) || this).type = 'TetrahedronGeometry'),
					(r.parameters = { radius: e, detail: n }),
					r.fromBufferGeometry(new As(e, n)),
					r.mergeVertices(),
					r
				);
			}
			return ut(e, t), e;
		})(yo),
		Rs = (function (t) {
			function e(e, n) {
				var r,
					i = (n = n || {}).font;
				if (!i || !i.isFont)
					return (
						console.error(
							'THREE.TextGeometry: font parameter is not an instance of THREE.Font.'
						),
						new vn() || ht(r)
					);
				var a = i.generateShapes(e, n.size);
				return (
					(n.depth = void 0 !== n.height ? n.height : 50),
					void 0 === n.bevelThickness && (n.bevelThickness = 10),
					void 0 === n.bevelSize && (n.bevelSize = 8),
					void 0 === n.bevelEnabled && (n.bevelEnabled = !1),
					((r = t.call(this, a, n) || this).type = 'TextBufferGeometry'),
					r
				);
			}
			return ut(e, t), e;
		})(cs),
		Cs = (function (t) {
			function e(e, n) {
				var r;
				return (
					((r = t.call(this) || this).type = 'TextGeometry'),
					(r.parameters = { text: e, parameters: n }),
					r.fromBufferGeometry(new Rs(e, n)),
					r.mergeVertices(),
					r
				);
			}
			return ut(e, t), e;
		})(yo),
		Ps = (function (t) {
			function e(e, n, r, i, a) {
				var o;
				((o = t.call(this) || this).type = 'TorusBufferGeometry'),
					(o.parameters = {
						radius: e,
						tube: n,
						radialSegments: r,
						tubularSegments: i,
						arc: a,
					}),
					(e = e || 1),
					(n = n || 0.4),
					(r = Math.floor(r) || 8),
					(i = Math.floor(i) || 6),
					(a = a || 2 * Math.PI);
				for (
					var s = [],
						c = [],
						l = [],
						u = [],
						h = new wt(),
						d = new wt(),
						p = new wt(),
						f = 0;
					f <= r;
					f++
				)
					for (var m = 0; m <= i; m++) {
						var v = (m / i) * a,
							g = (f / r) * Math.PI * 2;
						(d.x = (e + n * Math.cos(g)) * Math.cos(v)),
							(d.y = (e + n * Math.cos(g)) * Math.sin(v)),
							(d.z = n * Math.sin(g)),
							c.push(d.x, d.y, d.z),
							(h.x = e * Math.cos(v)),
							(h.y = e * Math.sin(v)),
							p.subVectors(d, h).normalize(),
							l.push(p.x, p.y, p.z),
							u.push(m / i),
							u.push(f / r);
					}
				for (var y = 1; y <= r; y++)
					for (var x = 1; x <= i; x++) {
						var _ = (i + 1) * y + x - 1,
							b = (i + 1) * (y - 1) + x - 1,
							w = (i + 1) * (y - 1) + x,
							M = (i + 1) * y + x;
						s.push(_, b, M), s.push(b, w, M);
					}
				return (
					o.setIndex(s),
					o.setAttribute('position', new an(c, 3)),
					o.setAttribute('normal', new an(l, 3)),
					o.setAttribute('uv', new an(u, 2)),
					o
				);
			}
			return ut(e, t), e;
		})(vn),
		Is = (function (t) {
			function e(e, n, r, i, a) {
				var o;
				return (
					((o = t.call(this) || this).type = 'TorusGeometry'),
					(o.parameters = {
						radius: e,
						tube: n,
						radialSegments: r,
						tubularSegments: i,
						arc: a,
					}),
					o.fromBufferGeometry(new Ps(e, n, r, i, a)),
					o.mergeVertices(),
					o
				);
			}
			return ut(e, t), e;
		})(yo),
		Ds = (function (t) {
			function e(e, n, r, i, a, o) {
				var s;
				((s = t.call(this) || this).type = 'TorusKnotBufferGeometry'),
					(s.parameters = {
						radius: e,
						tube: n,
						tubularSegments: r,
						radialSegments: i,
						p: a,
						q: o,
					}),
					(e = e || 1),
					(n = n || 0.4),
					(r = Math.floor(r) || 64),
					(i = Math.floor(i) || 8),
					(a = a || 2),
					(o = o || 3);
				for (
					var c = [],
						l = [],
						u = [],
						h = [],
						d = new wt(),
						p = new wt(),
						f = new wt(),
						m = new wt(),
						v = new wt(),
						g = new wt(),
						y = new wt(),
						x = 0;
					x <= r;
					++x
				) {
					var _ = (x / r) * a * Math.PI * 2;
					P(_, a, o, e, f),
						P(_ + 0.01, a, o, e, m),
						g.subVectors(m, f),
						y.addVectors(m, f),
						v.crossVectors(g, y),
						y.crossVectors(v, g),
						v.normalize(),
						y.normalize();
					for (var b = 0; b <= i; ++b) {
						var w = (b / i) * Math.PI * 2,
							M = -n * Math.cos(w),
							S = n * Math.sin(w);
						(d.x = f.x + (M * y.x + S * v.x)),
							(d.y = f.y + (M * y.y + S * v.y)),
							(d.z = f.z + (M * y.z + S * v.z)),
							l.push(d.x, d.y, d.z),
							p.subVectors(d, f).normalize(),
							u.push(p.x, p.y, p.z),
							h.push(x / r),
							h.push(b / i);
					}
				}
				for (var T = 1; T <= r; T++)
					for (var E = 1; E <= i; E++) {
						var A = (i + 1) * (T - 1) + (E - 1),
							L = (i + 1) * T + (E - 1),
							R = (i + 1) * T + E,
							C = (i + 1) * (T - 1) + E;
						c.push(A, L, C), c.push(L, R, C);
					}
				function P(t, e, n, r, i) {
					var a = Math.cos(t),
						o = Math.sin(t),
						s = (n / e) * t,
						c = Math.cos(s);
					(i.x = r * (2 + c) * 0.5 * a),
						(i.y = r * (2 + c) * o * 0.5),
						(i.z = r * Math.sin(s) * 0.5);
				}
				return (
					s.setIndex(c),
					s.setAttribute('position', new an(l, 3)),
					s.setAttribute('normal', new an(u, 3)),
					s.setAttribute('uv', new an(h, 2)),
					s
				);
			}
			return ut(e, t), e;
		})(vn),
		Ns = (function (t) {
			function e(e, n, r, i, a, o, s) {
				var c;
				return (
					((c = t.call(this) || this).type = 'TorusKnotGeometry'),
					(c.parameters = {
						radius: e,
						tube: n,
						tubularSegments: r,
						radialSegments: i,
						p: a,
						q: o,
					}),
					void 0 !== s &&
						console.warn(
							'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.'
						),
					c.fromBufferGeometry(new Ds(e, n, r, i, a, o)),
					c.mergeVertices(),
					c
				);
			}
			return ut(e, t), e;
		})(yo),
		Os = (function (t) {
			function e(e, n, r, i, a) {
				var o;
				((o = t.call(this) || this).type = 'TubeBufferGeometry'),
					(o.parameters = {
						path: e,
						tubularSegments: n,
						radius: r,
						radialSegments: i,
						closed: a,
					}),
					(n = n || 64),
					(r = r || 1),
					(i = i || 8),
					(a = a || !1);
				var s = e.computeFrenetFrames(n, a);
				(o.tangents = s.tangents),
					(o.normals = s.normals),
					(o.binormals = s.binormals);
				var c = new wt(),
					l = new wt(),
					u = new pt(),
					h = new wt(),
					d = [],
					p = [],
					f = [],
					m = [];
				function v(t) {
					h = e.getPointAt(t / n, h);
					for (var a = s.normals[t], o = s.binormals[t], u = 0; u <= i; u++) {
						var f = (u / i) * Math.PI * 2,
							m = Math.sin(f),
							v = -Math.cos(f);
						(l.x = v * a.x + m * o.x),
							(l.y = v * a.y + m * o.y),
							(l.z = v * a.z + m * o.z),
							l.normalize(),
							p.push(l.x, l.y, l.z),
							(c.x = h.x + r * l.x),
							(c.y = h.y + r * l.y),
							(c.z = h.z + r * l.z),
							d.push(c.x, c.y, c.z);
					}
				}
				return (
					(function () {
						for (var t = 0; t < n; t++) v(t);
						v(!1 === a ? n : 0),
							(function () {
								for (var t = 0; t <= n; t++)
									for (var e = 0; e <= i; e++)
										(u.x = t / n), (u.y = e / i), f.push(u.x, u.y);
							})(),
							(function () {
								for (var t = 1; t <= n; t++)
									for (var e = 1; e <= i; e++) {
										var r = (i + 1) * (t - 1) + (e - 1),
											a = (i + 1) * t + (e - 1),
											o = (i + 1) * t + e,
											s = (i + 1) * (t - 1) + e;
										m.push(r, a, s), m.push(a, o, s);
									}
							})();
					})(),
					o.setIndex(m),
					o.setAttribute('position', new an(d, 3)),
					o.setAttribute('normal', new an(p, 3)),
					o.setAttribute('uv', new an(f, 2)),
					o
				);
			}
			return (
				ut(e, t),
				(e.prototype.toJSON = function () {
					var t = vn.prototype.toJSON.call(this);
					return (t.path = this.parameters.path.toJSON()), t;
				}),
				e
			);
		})(vn),
		Bs = (function (t) {
			function e(e, n, r, i, a, o) {
				var s;
				((s = t.call(this) || this).type = 'TubeGeometry'),
					(s.parameters = {
						path: e,
						tubularSegments: n,
						radius: r,
						radialSegments: i,
						closed: a,
					}),
					void 0 !== o &&
						console.warn('THREE.TubeGeometry: taper has been removed.');
				var c = new Os(e, n, r, i, a);
				return (
					(s.tangents = c.tangents),
					(s.normals = c.normals),
					(s.binormals = c.binormals),
					s.fromBufferGeometry(c),
					s.mergeVertices(),
					s
				);
			}
			return ut(e, t), e;
		})(yo),
		zs = (function (t) {
			function e(e) {
				var n;
				(n = t.call(this) || this).type = 'WireframeGeometry';
				var r = [],
					i = [0, 0],
					a = {},
					o = ['a', 'b', 'c'];
				if (e && e.isGeometry) {
					for (var s = e.faces, c = 0, l = s.length; c < l; c++)
						for (var u = s[c], h = 0; h < 3; h++) {
							var d = u[o[h]],
								p = u[o[(h + 1) % 3]];
							(i[0] = Math.min(d, p)), (i[1] = Math.max(d, p));
							var f = i[0] + ',' + i[1];
							void 0 === a[f] && (a[f] = { index1: i[0], index2: i[1] });
						}
					for (var m in a) {
						var v = a[m],
							g = e.vertices[v.index1];
						r.push(g.x, g.y, g.z),
							(g = e.vertices[v.index2]),
							r.push(g.x, g.y, g.z);
					}
				} else if (e && e.isBufferGeometry) {
					var y = new wt();
					if (null !== e.index) {
						var x = e.attributes.position,
							_ = e.index,
							b = e.groups;
						0 === b.length &&
							(b = [{ start: 0, count: _.count, materialIndex: 0 }]);
						for (var w = 0, M = b.length; w < M; ++w)
							for (
								var S = b[w], T = S.start, E = T, A = T + S.count;
								E < A;
								E += 3
							)
								for (var L = 0; L < 3; L++) {
									var R = _.getX(E + L),
										C = _.getX(E + ((L + 1) % 3));
									(i[0] = Math.min(R, C)), (i[1] = Math.max(R, C));
									var P = i[0] + ',' + i[1];
									void 0 === a[P] && (a[P] = { index1: i[0], index2: i[1] });
								}
						for (var I in a) {
							var D = a[I];
							y.fromBufferAttribute(x, D.index1),
								r.push(y.x, y.y, y.z),
								y.fromBufferAttribute(x, D.index2),
								r.push(y.x, y.y, y.z);
						}
					} else
						for (
							var N = e.attributes.position, O = 0, B = N.count / 3;
							O < B;
							O++
						)
							for (var z = 0; z < 3; z++) {
								var G = 3 * O + z;
								y.fromBufferAttribute(N, G), r.push(y.x, y.y, y.z);
								var F = 3 * O + ((z + 1) % 3);
								y.fromBufferAttribute(N, F), r.push(y.x, y.y, y.z);
							}
				}
				return n.setAttribute('position', new an(r, 3)), n;
			}
			return ut(e, t), e;
		})(vn),
		Gs = Object.freeze({
			__proto__: null,
			BoxGeometry: xo,
			BoxBufferGeometry: zn,
			CircleGeometry: bo,
			CircleBufferGeometry: _o,
			ConeGeometry: So,
			ConeBufferGeometry: To,
			CylinderGeometry: Mo,
			CylinderBufferGeometry: wo,
			DodecahedronGeometry: Lo,
			DodecahedronBufferGeometry: Ao,
			EdgesGeometry: Do,
			ExtrudeGeometry: us,
			ExtrudeBufferGeometry: cs,
			IcosahedronGeometry: ds,
			IcosahedronBufferGeometry: hs,
			LatheGeometry: fs,
			LatheBufferGeometry: ps,
			OctahedronGeometry: vs,
			OctahedronBufferGeometry: ms,
			ParametricGeometry: ys,
			ParametricBufferGeometry: gs,
			PlaneGeometry: xs,
			PlaneBufferGeometry: tr,
			PolyhedronGeometry: _s,
			PolyhedronBufferGeometry: Eo,
			RingGeometry: ws,
			RingBufferGeometry: bs,
			ShapeGeometry: Ss,
			ShapeBufferGeometry: Ms,
			SphereGeometry: Es,
			SphereBufferGeometry: Ts,
			TetrahedronGeometry: Ls,
			TetrahedronBufferGeometry: As,
			TextGeometry: Cs,
			TextBufferGeometry: Rs,
			TorusGeometry: Is,
			TorusBufferGeometry: Ps,
			TorusKnotGeometry: Ns,
			TorusKnotBufferGeometry: Ds,
			TubeGeometry: Bs,
			TubeBufferGeometry: Os,
			WireframeGeometry: zs,
		});
	function Fs(t) {
		qe.call(this),
			(this.type = 'ShadowMaterial'),
			(this.color = new Ve(0)),
			(this.transparent = !0),
			this.setValues(t);
	}
	function Us(t) {
		Hn.call(this, t), (this.type = 'RawShaderMaterial');
	}
	function Hs(t) {
		qe.call(this),
			(this.defines = { STANDARD: '' }),
			(this.type = 'MeshStandardMaterial'),
			(this.color = new Ve(16777215)),
			(this.roughness = 1),
			(this.metalness = 0),
			(this.map = null),
			(this.lightMap = null),
			(this.lightMapIntensity = 1),
			(this.aoMap = null),
			(this.aoMapIntensity = 1),
			(this.emissive = new Ve(0)),
			(this.emissiveIntensity = 1),
			(this.emissiveMap = null),
			(this.bumpMap = null),
			(this.bumpScale = 1),
			(this.normalMap = null),
			(this.normalMapType = 0),
			(this.normalScale = new pt(1, 1)),
			(this.displacementMap = null),
			(this.displacementScale = 1),
			(this.displacementBias = 0),
			(this.roughnessMap = null),
			(this.metalnessMap = null),
			(this.alphaMap = null),
			(this.envMap = null),
			(this.envMapIntensity = 1),
			(this.refractionRatio = 0.98),
			(this.wireframe = !1),
			(this.wireframeLinewidth = 1),
			(this.wireframeLinecap = 'round'),
			(this.wireframeLinejoin = 'round'),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.morphNormals = !1),
			(this.vertexTangents = !1),
			this.setValues(t);
	}
	function ks(t) {
		Hs.call(this),
			(this.defines = { STANDARD: '', PHYSICAL: '' }),
			(this.type = 'MeshPhysicalMaterial'),
			(this.clearcoat = 0),
			(this.clearcoatMap = null),
			(this.clearcoatRoughness = 0),
			(this.clearcoatRoughnessMap = null),
			(this.clearcoatNormalScale = new pt(1, 1)),
			(this.clearcoatNormalMap = null),
			(this.reflectivity = 0.5),
			Object.defineProperty(this, 'ior', {
				get: function () {
					return (1 + 0.4 * this.reflectivity) / (1 - 0.4 * this.reflectivity);
				},
				set: function (t) {
					this.reflectivity = st.clamp((2.5 * (t - 1)) / (t + 1), 0, 1);
				},
			}),
			(this.sheen = null),
			(this.transmission = 0),
			(this.transmissionMap = null),
			this.setValues(t);
	}
	function Vs(t) {
		qe.call(this),
			(this.type = 'MeshPhongMaterial'),
			(this.color = new Ve(16777215)),
			(this.specular = new Ve(1118481)),
			(this.shininess = 30),
			(this.map = null),
			(this.lightMap = null),
			(this.lightMapIntensity = 1),
			(this.aoMap = null),
			(this.aoMapIntensity = 1),
			(this.emissive = new Ve(0)),
			(this.emissiveIntensity = 1),
			(this.emissiveMap = null),
			(this.bumpMap = null),
			(this.bumpScale = 1),
			(this.normalMap = null),
			(this.normalMapType = 0),
			(this.normalScale = new pt(1, 1)),
			(this.displacementMap = null),
			(this.displacementScale = 1),
			(this.displacementBias = 0),
			(this.specularMap = null),
			(this.alphaMap = null),
			(this.envMap = null),
			(this.combine = 0),
			(this.reflectivity = 1),
			(this.refractionRatio = 0.98),
			(this.wireframe = !1),
			(this.wireframeLinewidth = 1),
			(this.wireframeLinecap = 'round'),
			(this.wireframeLinejoin = 'round'),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.morphNormals = !1),
			this.setValues(t);
	}
	function Ws(t) {
		qe.call(this),
			(this.defines = { TOON: '' }),
			(this.type = 'MeshToonMaterial'),
			(this.color = new Ve(16777215)),
			(this.map = null),
			(this.gradientMap = null),
			(this.lightMap = null),
			(this.lightMapIntensity = 1),
			(this.aoMap = null),
			(this.aoMapIntensity = 1),
			(this.emissive = new Ve(0)),
			(this.emissiveIntensity = 1),
			(this.emissiveMap = null),
			(this.bumpMap = null),
			(this.bumpScale = 1),
			(this.normalMap = null),
			(this.normalMapType = 0),
			(this.normalScale = new pt(1, 1)),
			(this.displacementMap = null),
			(this.displacementScale = 1),
			(this.displacementBias = 0),
			(this.alphaMap = null),
			(this.wireframe = !1),
			(this.wireframeLinewidth = 1),
			(this.wireframeLinecap = 'round'),
			(this.wireframeLinejoin = 'round'),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.morphNormals = !1),
			this.setValues(t);
	}
	function js(t) {
		qe.call(this),
			(this.type = 'MeshNormalMaterial'),
			(this.bumpMap = null),
			(this.bumpScale = 1),
			(this.normalMap = null),
			(this.normalMapType = 0),
			(this.normalScale = new pt(1, 1)),
			(this.displacementMap = null),
			(this.displacementScale = 1),
			(this.displacementBias = 0),
			(this.wireframe = !1),
			(this.wireframeLinewidth = 1),
			(this.fog = !1),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.morphNormals = !1),
			this.setValues(t);
	}
	function qs(t) {
		qe.call(this),
			(this.type = 'MeshLambertMaterial'),
			(this.color = new Ve(16777215)),
			(this.map = null),
			(this.lightMap = null),
			(this.lightMapIntensity = 1),
			(this.aoMap = null),
			(this.aoMapIntensity = 1),
			(this.emissive = new Ve(0)),
			(this.emissiveIntensity = 1),
			(this.emissiveMap = null),
			(this.specularMap = null),
			(this.alphaMap = null),
			(this.envMap = null),
			(this.combine = 0),
			(this.reflectivity = 1),
			(this.refractionRatio = 0.98),
			(this.wireframe = !1),
			(this.wireframeLinewidth = 1),
			(this.wireframeLinecap = 'round'),
			(this.wireframeLinejoin = 'round'),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.morphNormals = !1),
			this.setValues(t);
	}
	function Xs(t) {
		qe.call(this),
			(this.defines = { MATCAP: '' }),
			(this.type = 'MeshMatcapMaterial'),
			(this.color = new Ve(16777215)),
			(this.matcap = null),
			(this.map = null),
			(this.bumpMap = null),
			(this.bumpScale = 1),
			(this.normalMap = null),
			(this.normalMapType = 0),
			(this.normalScale = new pt(1, 1)),
			(this.displacementMap = null),
			(this.displacementScale = 1),
			(this.displacementBias = 0),
			(this.alphaMap = null),
			(this.skinning = !1),
			(this.morphTargets = !1),
			(this.morphNormals = !1),
			this.setValues(t);
	}
	function Ys(t) {
		ja.call(this),
			(this.type = 'LineDashedMaterial'),
			(this.scale = 1),
			(this.dashSize = 3),
			(this.gapSize = 1),
			this.setValues(t);
	}
	(Fs.prototype = Object.create(qe.prototype)),
		(Fs.prototype.constructor = Fs),
		(Fs.prototype.isShadowMaterial = !0),
		(Fs.prototype.copy = function (t) {
			return qe.prototype.copy.call(this, t), this.color.copy(t.color), this;
		}),
		(Us.prototype = Object.create(Hn.prototype)),
		(Us.prototype.constructor = Us),
		(Us.prototype.isRawShaderMaterial = !0),
		(Hs.prototype = Object.create(qe.prototype)),
		(Hs.prototype.constructor = Hs),
		(Hs.prototype.isMeshStandardMaterial = !0),
		(Hs.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				(this.defines = { STANDARD: '' }),
				this.color.copy(t.color),
				(this.roughness = t.roughness),
				(this.metalness = t.metalness),
				(this.map = t.map),
				(this.lightMap = t.lightMap),
				(this.lightMapIntensity = t.lightMapIntensity),
				(this.aoMap = t.aoMap),
				(this.aoMapIntensity = t.aoMapIntensity),
				this.emissive.copy(t.emissive),
				(this.emissiveMap = t.emissiveMap),
				(this.emissiveIntensity = t.emissiveIntensity),
				(this.bumpMap = t.bumpMap),
				(this.bumpScale = t.bumpScale),
				(this.normalMap = t.normalMap),
				(this.normalMapType = t.normalMapType),
				this.normalScale.copy(t.normalScale),
				(this.displacementMap = t.displacementMap),
				(this.displacementScale = t.displacementScale),
				(this.displacementBias = t.displacementBias),
				(this.roughnessMap = t.roughnessMap),
				(this.metalnessMap = t.metalnessMap),
				(this.alphaMap = t.alphaMap),
				(this.envMap = t.envMap),
				(this.envMapIntensity = t.envMapIntensity),
				(this.refractionRatio = t.refractionRatio),
				(this.wireframe = t.wireframe),
				(this.wireframeLinewidth = t.wireframeLinewidth),
				(this.wireframeLinecap = t.wireframeLinecap),
				(this.wireframeLinejoin = t.wireframeLinejoin),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.morphNormals = t.morphNormals),
				(this.vertexTangents = t.vertexTangents),
				this
			);
		}),
		(ks.prototype = Object.create(Hs.prototype)),
		(ks.prototype.constructor = ks),
		(ks.prototype.isMeshPhysicalMaterial = !0),
		(ks.prototype.copy = function (t) {
			return (
				Hs.prototype.copy.call(this, t),
				(this.defines = { STANDARD: '', PHYSICAL: '' }),
				(this.clearcoat = t.clearcoat),
				(this.clearcoatMap = t.clearcoatMap),
				(this.clearcoatRoughness = t.clearcoatRoughness),
				(this.clearcoatRoughnessMap = t.clearcoatRoughnessMap),
				(this.clearcoatNormalMap = t.clearcoatNormalMap),
				this.clearcoatNormalScale.copy(t.clearcoatNormalScale),
				(this.reflectivity = t.reflectivity),
				t.sheen
					? (this.sheen = (this.sheen || new Ve()).copy(t.sheen))
					: (this.sheen = null),
				(this.transmission = t.transmission),
				(this.transmissionMap = t.transmissionMap),
				this
			);
		}),
		(Vs.prototype = Object.create(qe.prototype)),
		(Vs.prototype.constructor = Vs),
		(Vs.prototype.isMeshPhongMaterial = !0),
		(Vs.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				this.color.copy(t.color),
				this.specular.copy(t.specular),
				(this.shininess = t.shininess),
				(this.map = t.map),
				(this.lightMap = t.lightMap),
				(this.lightMapIntensity = t.lightMapIntensity),
				(this.aoMap = t.aoMap),
				(this.aoMapIntensity = t.aoMapIntensity),
				this.emissive.copy(t.emissive),
				(this.emissiveMap = t.emissiveMap),
				(this.emissiveIntensity = t.emissiveIntensity),
				(this.bumpMap = t.bumpMap),
				(this.bumpScale = t.bumpScale),
				(this.normalMap = t.normalMap),
				(this.normalMapType = t.normalMapType),
				this.normalScale.copy(t.normalScale),
				(this.displacementMap = t.displacementMap),
				(this.displacementScale = t.displacementScale),
				(this.displacementBias = t.displacementBias),
				(this.specularMap = t.specularMap),
				(this.alphaMap = t.alphaMap),
				(this.envMap = t.envMap),
				(this.combine = t.combine),
				(this.reflectivity = t.reflectivity),
				(this.refractionRatio = t.refractionRatio),
				(this.wireframe = t.wireframe),
				(this.wireframeLinewidth = t.wireframeLinewidth),
				(this.wireframeLinecap = t.wireframeLinecap),
				(this.wireframeLinejoin = t.wireframeLinejoin),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.morphNormals = t.morphNormals),
				this
			);
		}),
		(Ws.prototype = Object.create(qe.prototype)),
		(Ws.prototype.constructor = Ws),
		(Ws.prototype.isMeshToonMaterial = !0),
		(Ws.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				this.color.copy(t.color),
				(this.map = t.map),
				(this.gradientMap = t.gradientMap),
				(this.lightMap = t.lightMap),
				(this.lightMapIntensity = t.lightMapIntensity),
				(this.aoMap = t.aoMap),
				(this.aoMapIntensity = t.aoMapIntensity),
				this.emissive.copy(t.emissive),
				(this.emissiveMap = t.emissiveMap),
				(this.emissiveIntensity = t.emissiveIntensity),
				(this.bumpMap = t.bumpMap),
				(this.bumpScale = t.bumpScale),
				(this.normalMap = t.normalMap),
				(this.normalMapType = t.normalMapType),
				this.normalScale.copy(t.normalScale),
				(this.displacementMap = t.displacementMap),
				(this.displacementScale = t.displacementScale),
				(this.displacementBias = t.displacementBias),
				(this.alphaMap = t.alphaMap),
				(this.wireframe = t.wireframe),
				(this.wireframeLinewidth = t.wireframeLinewidth),
				(this.wireframeLinecap = t.wireframeLinecap),
				(this.wireframeLinejoin = t.wireframeLinejoin),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.morphNormals = t.morphNormals),
				this
			);
		}),
		(js.prototype = Object.create(qe.prototype)),
		(js.prototype.constructor = js),
		(js.prototype.isMeshNormalMaterial = !0),
		(js.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				(this.bumpMap = t.bumpMap),
				(this.bumpScale = t.bumpScale),
				(this.normalMap = t.normalMap),
				(this.normalMapType = t.normalMapType),
				this.normalScale.copy(t.normalScale),
				(this.displacementMap = t.displacementMap),
				(this.displacementScale = t.displacementScale),
				(this.displacementBias = t.displacementBias),
				(this.wireframe = t.wireframe),
				(this.wireframeLinewidth = t.wireframeLinewidth),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.morphNormals = t.morphNormals),
				this
			);
		}),
		(qs.prototype = Object.create(qe.prototype)),
		(qs.prototype.constructor = qs),
		(qs.prototype.isMeshLambertMaterial = !0),
		(qs.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				this.color.copy(t.color),
				(this.map = t.map),
				(this.lightMap = t.lightMap),
				(this.lightMapIntensity = t.lightMapIntensity),
				(this.aoMap = t.aoMap),
				(this.aoMapIntensity = t.aoMapIntensity),
				this.emissive.copy(t.emissive),
				(this.emissiveMap = t.emissiveMap),
				(this.emissiveIntensity = t.emissiveIntensity),
				(this.specularMap = t.specularMap),
				(this.alphaMap = t.alphaMap),
				(this.envMap = t.envMap),
				(this.combine = t.combine),
				(this.reflectivity = t.reflectivity),
				(this.refractionRatio = t.refractionRatio),
				(this.wireframe = t.wireframe),
				(this.wireframeLinewidth = t.wireframeLinewidth),
				(this.wireframeLinecap = t.wireframeLinecap),
				(this.wireframeLinejoin = t.wireframeLinejoin),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.morphNormals = t.morphNormals),
				this
			);
		}),
		(Xs.prototype = Object.create(qe.prototype)),
		(Xs.prototype.constructor = Xs),
		(Xs.prototype.isMeshMatcapMaterial = !0),
		(Xs.prototype.copy = function (t) {
			return (
				qe.prototype.copy.call(this, t),
				(this.defines = { MATCAP: '' }),
				this.color.copy(t.color),
				(this.matcap = t.matcap),
				(this.map = t.map),
				(this.bumpMap = t.bumpMap),
				(this.bumpScale = t.bumpScale),
				(this.normalMap = t.normalMap),
				(this.normalMapType = t.normalMapType),
				this.normalScale.copy(t.normalScale),
				(this.displacementMap = t.displacementMap),
				(this.displacementScale = t.displacementScale),
				(this.displacementBias = t.displacementBias),
				(this.alphaMap = t.alphaMap),
				(this.skinning = t.skinning),
				(this.morphTargets = t.morphTargets),
				(this.morphNormals = t.morphNormals),
				this
			);
		}),
		(Ys.prototype = Object.create(ja.prototype)),
		(Ys.prototype.constructor = Ys),
		(Ys.prototype.isLineDashedMaterial = !0),
		(Ys.prototype.copy = function (t) {
			return (
				ja.prototype.copy.call(this, t),
				(this.scale = t.scale),
				(this.dashSize = t.dashSize),
				(this.gapSize = t.gapSize),
				this
			);
		});
	var Zs = Object.freeze({
			__proto__: null,
			ShadowMaterial: Fs,
			SpriteMaterial: da,
			RawShaderMaterial: Us,
			ShaderMaterial: Hn,
			PointsMaterial: no,
			MeshPhysicalMaterial: ks,
			MeshStandardMaterial: Hs,
			MeshPhongMaterial: Vs,
			MeshToonMaterial: Ws,
			MeshNormalMaterial: js,
			MeshLambertMaterial: qs,
			MeshDepthMaterial: qi,
			MeshDistanceMaterial: Xi,
			MeshBasicMaterial: Xe,
			MeshMatcapMaterial: Xs,
			LineDashedMaterial: Ys,
			LineBasicMaterial: ja,
			Material: qe,
		}),
		Js = {
			arraySlice: function (t, e, n) {
				return Js.isTypedArray(t)
					? new t.constructor(t.subarray(e, void 0 !== n ? n : t.length))
					: t.slice(e, n);
			},
			convertArray: function (t, e, n) {
				return !t || (!n && t.constructor === e)
					? t
					: 'number' == typeof e.BYTES_PER_ELEMENT
					? new e(t)
					: Array.prototype.slice.call(t);
			},
			isTypedArray: function (t) {
				return ArrayBuffer.isView(t) && !(t instanceof DataView);
			},
			getKeyframeOrder: function (t) {
				for (var e = t.length, n = new Array(e), r = 0; r !== e; ++r) n[r] = r;
				return (
					n.sort(function (e, n) {
						return t[e] - t[n];
					}),
					n
				);
			},
			sortedArray: function (t, e, n) {
				for (
					var r = t.length, i = new t.constructor(r), a = 0, o = 0;
					o !== r;
					++a
				)
					for (var s = n[a] * e, c = 0; c !== e; ++c) i[o++] = t[s + c];
				return i;
			},
			flattenJSON: function (t, e, n, r) {
				for (var i = 1, a = t[0]; void 0 !== a && void 0 === a[r]; ) a = t[i++];
				if (void 0 !== a) {
					var o = a[r];
					if (void 0 !== o)
						if (Array.isArray(o))
							do {
								void 0 !== (o = a[r]) && (e.push(a.time), n.push.apply(n, o)),
									(a = t[i++]);
							} while (void 0 !== a);
						else if (void 0 !== o.toArray)
							do {
								void 0 !== (o = a[r]) &&
									(e.push(a.time), o.toArray(n, n.length)),
									(a = t[i++]);
							} while (void 0 !== a);
						else
							do {
								void 0 !== (o = a[r]) && (e.push(a.time), n.push(o)),
									(a = t[i++]);
							} while (void 0 !== a);
				}
			},
			subclip: function (t, e, n, r, i) {
				i = i || 30;
				var a = t.clone();
				a.name = e;
				for (var o = [], s = 0; s < a.tracks.length; ++s) {
					for (
						var c = a.tracks[s], l = c.getValueSize(), u = [], h = [], d = 0;
						d < c.times.length;
						++d
					) {
						var p = c.times[d] * i;
						if (!(p < n || p >= r)) {
							u.push(c.times[d]);
							for (var f = 0; f < l; ++f) h.push(c.values[d * l + f]);
						}
					}
					0 !== u.length &&
						((c.times = Js.convertArray(u, c.times.constructor)),
						(c.values = Js.convertArray(h, c.values.constructor)),
						o.push(c));
				}
				a.tracks = o;
				for (var m = 1 / 0, v = 0; v < a.tracks.length; ++v)
					m > a.tracks[v].times[0] && (m = a.tracks[v].times[0]);
				for (var g = 0; g < a.tracks.length; ++g) a.tracks[g].shift(-1 * m);
				return a.resetDuration(), a;
			},
			makeClipAdditive: function (t, e, n, r) {
				void 0 === e && (e = 0),
					void 0 === n && (n = t),
					(void 0 === r || r <= 0) && (r = 30);
				for (
					var i = n.tracks.length,
						a = e / r,
						o = function (e) {
							var r = n.tracks[e],
								i = r.ValueTypeName;
							if ('bool' === i || 'string' === i) return 'continue';
							var o = t.tracks.find(function (t) {
								return t.name === r.name && t.ValueTypeName === i;
							});
							if (void 0 === o) return 'continue';
							var s = 0,
								c = r.getValueSize();
							r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline &&
								(s = c / 3);
							var l = 0,
								u = o.getValueSize();
							o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline &&
								(l = u / 3);
							var h = r.times.length - 1,
								d = void 0;
							if (a <= r.times[0]) {
								var p = s,
									f = c - s;
								d = Js.arraySlice(r.values, p, f);
							} else if (a >= r.times[h]) {
								var m = h * c + s,
									v = m + c - s;
								d = Js.arraySlice(r.values, m, v);
							} else {
								var g = r.createInterpolant(),
									y = s,
									x = c - s;
								g.evaluate(a), (d = Js.arraySlice(g.resultBuffer, y, x));
							}
							'quaternion' === i &&
								new bt().fromArray(d).normalize().conjugate().toArray(d);
							for (var _ = o.times.length, b = 0; b < _; ++b) {
								var w = b * u + l;
								if ('quaternion' === i)
									bt.multiplyQuaternionsFlat(o.values, w, d, 0, o.values, w);
								else
									for (var M = u - 2 * l, S = 0; S < M; ++S)
										o.values[w + S] -= d[S];
							}
						},
						s = 0;
					s < i;
					++s
				)
					o(s);
				return (t.blendMode = j), t;
			},
		};
	function Qs(t, e, n, r) {
		(this.parameterPositions = t),
			(this._cachedIndex = 0),
			(this.resultBuffer = void 0 !== r ? r : new e.constructor(n)),
			(this.sampleValues = e),
			(this.valueSize = n);
	}
	function Ks(t, e, n, r) {
		Qs.call(this, t, e, n, r),
			(this._weightPrev = -0),
			(this._offsetPrev = -0),
			(this._weightNext = -0),
			(this._offsetNext = -0);
	}
	function $s(t, e, n, r) {
		Qs.call(this, t, e, n, r);
	}
	function tc(t, e, n, r) {
		Qs.call(this, t, e, n, r);
	}
	function ec(t, e, n, r) {
		if (void 0 === t)
			throw new Error('THREE.KeyframeTrack: track name is undefined');
		if (void 0 === e || 0 === e.length)
			throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + t);
		(this.name = t),
			(this.times = Js.convertArray(e, this.TimeBufferType)),
			(this.values = Js.convertArray(n, this.ValueBufferType)),
			this.setInterpolation(r || this.DefaultInterpolation);
	}
	function nc(t, e, n) {
		ec.call(this, t, e, n);
	}
	function rc(t, e, n, r) {
		ec.call(this, t, e, n, r);
	}
	function ic(t, e, n, r) {
		ec.call(this, t, e, n, r);
	}
	function ac(t, e, n, r) {
		Qs.call(this, t, e, n, r);
	}
	function oc(t, e, n, r) {
		ec.call(this, t, e, n, r);
	}
	function sc(t, e, n, r) {
		ec.call(this, t, e, n, r);
	}
	function cc(t, e, n, r) {
		ec.call(this, t, e, n, r);
	}
	function lc(t, e, n, r) {
		(this.name = t),
			(this.tracks = n),
			(this.duration = void 0 !== e ? e : -1),
			(this.blendMode = void 0 !== r ? r : W),
			(this.uuid = st.generateUUID()),
			this.duration < 0 && this.resetDuration();
	}
	function uc(t) {
		if (void 0 === t.type)
			throw new Error(
				'THREE.KeyframeTrack: track type undefined, can not parse'
			);
		var e = (function (t) {
			switch (t.toLowerCase()) {
				case 'scalar':
				case 'double':
				case 'float':
				case 'number':
				case 'integer':
					return ic;
				case 'vector':
				case 'vector2':
				case 'vector3':
				case 'vector4':
					return cc;
				case 'color':
					return rc;
				case 'quaternion':
					return oc;
				case 'bool':
				case 'boolean':
					return nc;
				case 'string':
					return sc;
			}
			throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + t);
		})(t.type);
		if (void 0 === t.times) {
			var n = [],
				r = [];
			Js.flattenJSON(t.keys, n, r, 'value'), (t.times = n), (t.values = r);
		}
		return void 0 !== e.parse
			? e.parse(t)
			: new e(t.name, t.times, t.values, t.interpolation);
	}
	Object.assign(Qs.prototype, {
		evaluate: function (t) {
			var e = this.parameterPositions,
				n = this._cachedIndex,
				r = e[n],
				i = e[n - 1];
			t: {
				e: {
					var a;
					n: {
						r: if (!(t < r)) {
							for (var o = n + 2; ; ) {
								if (void 0 === r) {
									if (t < i) break r;
									return (
										(n = e.length),
										(this._cachedIndex = n),
										this.afterEnd_(n - 1, t, i)
									);
								}
								if (n === o) break;
								if (((i = r), t < (r = e[++n]))) break e;
							}
							a = e.length;
							break n;
						}
						if (t >= i) break t;
						var s = e[1];
						t < s && ((n = 2), (i = s));
						for (var c = n - 2; ; ) {
							if (void 0 === i)
								return (this._cachedIndex = 0), this.beforeStart_(0, t, r);
							if (n === c) break;
							if (((r = i), t >= (i = e[--n - 1]))) break e;
						}
						(a = n), (n = 0);
					}
					for (; n < a; ) {
						var l = (n + a) >>> 1;
						t < e[l] ? (a = l) : (n = l + 1);
					}
					if (((r = e[n]), void 0 === (i = e[n - 1])))
						return (this._cachedIndex = 0), this.beforeStart_(0, t, r);
					if (void 0 === r)
						return (
							(n = e.length),
							(this._cachedIndex = n),
							this.afterEnd_(n - 1, i, t)
						);
				}
				(this._cachedIndex = n), this.intervalChanged_(n, i, r);
			}
			return this.interpolate_(n, i, t, r);
		},
		settings: null,
		DefaultSettings_: {},
		getSettings_: function () {
			return this.settings || this.DefaultSettings_;
		},
		copySampleValue_: function (t) {
			for (
				var e = this.resultBuffer,
					n = this.sampleValues,
					r = this.valueSize,
					i = t * r,
					a = 0;
				a !== r;
				++a
			)
				e[a] = n[i + a];
			return e;
		},
		interpolate_: function () {
			throw new Error('call to abstract method');
		},
		intervalChanged_: function () {},
	}),
		Object.assign(Qs.prototype, {
			beforeStart_: Qs.prototype.copySampleValue_,
			afterEnd_: Qs.prototype.copySampleValue_,
		}),
		(Ks.prototype = Object.assign(Object.create(Qs.prototype), {
			constructor: Ks,
			DefaultSettings_: { endingStart: H, endingEnd: H },
			intervalChanged_: function (t, e, n) {
				var r = this.parameterPositions,
					i = t - 2,
					a = t + 1,
					o = r[i],
					s = r[a];
				if (void 0 === o)
					switch (this.getSettings_().endingStart) {
						case k:
							(i = t), (o = 2 * e - n);
							break;
						case V:
							o = e + r[(i = r.length - 2)] - r[i + 1];
							break;
						default:
							(i = t), (o = n);
					}
				if (void 0 === s)
					switch (this.getSettings_().endingEnd) {
						case k:
							(a = t), (s = 2 * n - e);
							break;
						case V:
							(a = 1), (s = n + r[1] - r[0]);
							break;
						default:
							(a = t - 1), (s = e);
					}
				var c = 0.5 * (n - e),
					l = this.valueSize;
				(this._weightPrev = c / (e - o)),
					(this._weightNext = c / (s - n)),
					(this._offsetPrev = i * l),
					(this._offsetNext = a * l);
			},
			interpolate_: function (t, e, n, r) {
				for (
					var i = this.resultBuffer,
						a = this.sampleValues,
						o = this.valueSize,
						s = t * o,
						c = s - o,
						l = this._offsetPrev,
						u = this._offsetNext,
						h = this._weightPrev,
						d = this._weightNext,
						p = (n - e) / (r - e),
						f = p * p,
						m = f * p,
						v = -h * m + 2 * h * f - h * p,
						g = (1 + h) * m + (-1.5 - 2 * h) * f + (-0.5 + h) * p + 1,
						y = (-1 - d) * m + (1.5 + d) * f + 0.5 * p,
						x = d * m - d * f,
						_ = 0;
					_ !== o;
					++_
				)
					i[_] = v * a[l + _] + g * a[c + _] + y * a[s + _] + x * a[u + _];
				return i;
			},
		})),
		($s.prototype = Object.assign(Object.create(Qs.prototype), {
			constructor: $s,
			interpolate_: function (t, e, n, r) {
				for (
					var i = this.resultBuffer,
						a = this.sampleValues,
						o = this.valueSize,
						s = t * o,
						c = s - o,
						l = (n - e) / (r - e),
						u = 1 - l,
						h = 0;
					h !== o;
					++h
				)
					i[h] = a[c + h] * u + a[s + h] * l;
				return i;
			},
		})),
		(tc.prototype = Object.assign(Object.create(Qs.prototype), {
			constructor: tc,
			interpolate_: function (t) {
				return this.copySampleValue_(t - 1);
			},
		})),
		Object.assign(ec, {
			toJSON: function (t) {
				var e,
					n = t.constructor;
				if (void 0 !== n.toJSON) e = n.toJSON(t);
				else {
					e = {
						name: t.name,
						times: Js.convertArray(t.times, Array),
						values: Js.convertArray(t.values, Array),
					};
					var r = t.getInterpolation();
					r !== t.DefaultInterpolation && (e.interpolation = r);
				}
				return (e.type = t.ValueTypeName), e;
			},
		}),
		Object.assign(ec.prototype, {
			constructor: ec,
			TimeBufferType: Float32Array,
			ValueBufferType: Float32Array,
			DefaultInterpolation: F,
			InterpolantFactoryMethodDiscrete: function (t) {
				return new tc(this.times, this.values, this.getValueSize(), t);
			},
			InterpolantFactoryMethodLinear: function (t) {
				return new $s(this.times, this.values, this.getValueSize(), t);
			},
			InterpolantFactoryMethodSmooth: function (t) {
				return new Ks(this.times, this.values, this.getValueSize(), t);
			},
			setInterpolation: function (t) {
				var e;
				switch (t) {
					case G:
						e = this.InterpolantFactoryMethodDiscrete;
						break;
					case F:
						e = this.InterpolantFactoryMethodLinear;
						break;
					case U:
						e = this.InterpolantFactoryMethodSmooth;
				}
				if (void 0 === e) {
					var n =
						'unsupported interpolation for ' +
						this.ValueTypeName +
						' keyframe track named ' +
						this.name;
					if (void 0 === this.createInterpolant) {
						if (t === this.DefaultInterpolation) throw new Error(n);
						this.setInterpolation(this.DefaultInterpolation);
					}
					return console.warn('THREE.KeyframeTrack:', n), this;
				}
				return (this.createInterpolant = e), this;
			},
			getInterpolation: function () {
				switch (this.createInterpolant) {
					case this.InterpolantFactoryMethodDiscrete:
						return G;
					case this.InterpolantFactoryMethodLinear:
						return F;
					case this.InterpolantFactoryMethodSmooth:
						return U;
				}
			},
			getValueSize: function () {
				return this.values.length / this.times.length;
			},
			shift: function (t) {
				if (0 !== t)
					for (var e = this.times, n = 0, r = e.length; n !== r; ++n) e[n] += t;
				return this;
			},
			scale: function (t) {
				if (1 !== t)
					for (var e = this.times, n = 0, r = e.length; n !== r; ++n) e[n] *= t;
				return this;
			},
			trim: function (t, e) {
				for (
					var n = this.times, r = n.length, i = 0, a = r - 1;
					i !== r && n[i] < t;

				)
					++i;
				for (; -1 !== a && n[a] > e; ) --a;
				if ((++a, 0 !== i || a !== r)) {
					i >= a && (i = (a = Math.max(a, 1)) - 1);
					var o = this.getValueSize();
					(this.times = Js.arraySlice(n, i, a)),
						(this.values = Js.arraySlice(this.values, i * o, a * o));
				}
				return this;
			},
			validate: function () {
				var t = !0,
					e = this.getValueSize();
				e - Math.floor(e) != 0 &&
					(console.error(
						'THREE.KeyframeTrack: Invalid value size in track.',
						this
					),
					(t = !1));
				var n = this.times,
					r = this.values,
					i = n.length;
				0 === i &&
					(console.error('THREE.KeyframeTrack: Track is empty.', this),
					(t = !1));
				for (var a = null, o = 0; o !== i; o++) {
					var s = n[o];
					if ('number' == typeof s && isNaN(s)) {
						console.error(
							'THREE.KeyframeTrack: Time is not a valid number.',
							this,
							o,
							s
						),
							(t = !1);
						break;
					}
					if (null !== a && a > s) {
						console.error(
							'THREE.KeyframeTrack: Out of order keys.',
							this,
							o,
							s,
							a
						),
							(t = !1);
						break;
					}
					a = s;
				}
				if (void 0 !== r && Js.isTypedArray(r))
					for (var c = 0, l = r.length; c !== l; ++c) {
						var u = r[c];
						if (isNaN(u)) {
							console.error(
								'THREE.KeyframeTrack: Value is not a valid number.',
								this,
								c,
								u
							),
								(t = !1);
							break;
						}
					}
				return t;
			},
			optimize: function () {
				for (
					var t = Js.arraySlice(this.times),
						e = Js.arraySlice(this.values),
						n = this.getValueSize(),
						r = this.getInterpolation() === U,
						i = t.length - 1,
						a = 1,
						o = 1;
					o < i;
					++o
				) {
					var s = !1,
						c = t[o];
					if (c !== t[o + 1] && (1 !== o || c !== c[0]))
						if (r) s = !0;
						else
							for (var l = o * n, u = l - n, h = l + n, d = 0; d !== n; ++d) {
								var p = e[l + d];
								if (p !== e[u + d] || p !== e[h + d]) {
									s = !0;
									break;
								}
							}
					if (s) {
						if (o !== a) {
							t[a] = t[o];
							for (var f = o * n, m = a * n, v = 0; v !== n; ++v)
								e[m + v] = e[f + v];
						}
						++a;
					}
				}
				if (i > 0) {
					t[a] = t[i];
					for (var g = i * n, y = a * n, x = 0; x !== n; ++x)
						e[y + x] = e[g + x];
					++a;
				}
				return (
					a !== t.length
						? ((this.times = Js.arraySlice(t, 0, a)),
						  (this.values = Js.arraySlice(e, 0, a * n)))
						: ((this.times = t), (this.values = e)),
					this
				);
			},
			clone: function () {
				var t = Js.arraySlice(this.times, 0),
					e = Js.arraySlice(this.values, 0),
					n = new (0, this.constructor)(this.name, t, e);
				return (n.createInterpolant = this.createInterpolant), n;
			},
		}),
		(nc.prototype = Object.assign(Object.create(ec.prototype), {
			constructor: nc,
			ValueTypeName: 'bool',
			ValueBufferType: Array,
			DefaultInterpolation: G,
			InterpolantFactoryMethodLinear: void 0,
			InterpolantFactoryMethodSmooth: void 0,
		})),
		(rc.prototype = Object.assign(Object.create(ec.prototype), {
			constructor: rc,
			ValueTypeName: 'color',
		})),
		(ic.prototype = Object.assign(Object.create(ec.prototype), {
			constructor: ic,
			ValueTypeName: 'number',
		})),
		(ac.prototype = Object.assign(Object.create(Qs.prototype), {
			constructor: ac,
			interpolate_: function (t, e, n, r) {
				for (
					var i = this.resultBuffer,
						a = this.sampleValues,
						o = this.valueSize,
						s = (n - e) / (r - e),
						c = t * o,
						l = c + o;
					c !== l;
					c += 4
				)
					bt.slerpFlat(i, 0, a, c - o, a, c, s);
				return i;
			},
		})),
		(oc.prototype = Object.assign(Object.create(ec.prototype), {
			constructor: oc,
			ValueTypeName: 'quaternion',
			DefaultInterpolation: F,
			InterpolantFactoryMethodLinear: function (t) {
				return new ac(this.times, this.values, this.getValueSize(), t);
			},
			InterpolantFactoryMethodSmooth: void 0,
		})),
		(sc.prototype = Object.assign(Object.create(ec.prototype), {
			constructor: sc,
			ValueTypeName: 'string',
			ValueBufferType: Array,
			DefaultInterpolation: G,
			InterpolantFactoryMethodLinear: void 0,
			InterpolantFactoryMethodSmooth: void 0,
		})),
		(cc.prototype = Object.assign(Object.create(ec.prototype), {
			constructor: cc,
			ValueTypeName: 'vector',
		})),
		Object.assign(lc, {
			parse: function (t) {
				for (
					var e = [], n = t.tracks, r = 1 / (t.fps || 1), i = 0, a = n.length;
					i !== a;
					++i
				)
					e.push(uc(n[i]).scale(r));
				return new lc(t.name, t.duration, e, t.blendMode);
			},
			toJSON: function (t) {
				for (
					var e = [],
						n = t.tracks,
						r = {
							name: t.name,
							duration: t.duration,
							tracks: e,
							uuid: t.uuid,
							blendMode: t.blendMode,
						},
						i = 0,
						a = n.length;
					i !== a;
					++i
				)
					e.push(ec.toJSON(n[i]));
				return r;
			},
			CreateFromMorphTargetSequence: function (t, e, n, r) {
				for (var i = e.length, a = [], o = 0; o < i; o++) {
					var s = [],
						c = [];
					s.push((o + i - 1) % i, o, (o + 1) % i), c.push(0, 1, 0);
					var l = Js.getKeyframeOrder(s);
					(s = Js.sortedArray(s, 1, l)),
						(c = Js.sortedArray(c, 1, l)),
						r || 0 !== s[0] || (s.push(i), c.push(c[0])),
						a.push(
							new ic('.morphTargetInfluences[' + e[o].name + ']', s, c).scale(
								1 / n
							)
						);
				}
				return new lc(t, -1, a);
			},
			findByName: function (t, e) {
				var n = t;
				if (!Array.isArray(t)) {
					var r = t;
					n = (r.geometry && r.geometry.animations) || r.animations;
				}
				for (var i = 0; i < n.length; i++) if (n[i].name === e) return n[i];
				return null;
			},
			CreateClipsFromMorphTargetSequences: function (t, e, n) {
				for (
					var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = t.length;
					a < o;
					a++
				) {
					var s = t[a],
						c = s.name.match(i);
					if (c && c.length > 1) {
						var l = c[1],
							u = r[l];
						u || (r[l] = u = []), u.push(s);
					}
				}
				var h = [];
				for (var d in r)
					h.push(lc.CreateFromMorphTargetSequence(d, r[d], e, n));
				return h;
			},
			parseAnimation: function (t, e) {
				if (!t)
					return (
						console.error(
							'THREE.AnimationClip: No animation in JSONLoader data.'
						),
						null
					);
				for (
					var n = function (t, e, n, r, i) {
							if (0 !== n.length) {
								var a = [],
									o = [];
								Js.flattenJSON(n, a, o, r),
									0 !== a.length && i.push(new t(e, a, o));
							}
						},
						r = [],
						i = t.name || 'default',
						a = t.fps || 30,
						o = t.blendMode,
						s = t.length || -1,
						c = t.hierarchy || [],
						l = 0;
					l < c.length;
					l++
				) {
					var u = c[l].keys;
					if (u && 0 !== u.length)
						if (u[0].morphTargets) {
							var h = {},
								d = void 0;
							for (d = 0; d < u.length; d++)
								if (u[d].morphTargets)
									for (var p = 0; p < u[d].morphTargets.length; p++)
										h[u[d].morphTargets[p]] = -1;
							for (var f in h) {
								for (
									var m = [], v = [], g = 0;
									g !== u[d].morphTargets.length;
									++g
								) {
									var y = u[d];
									m.push(y.time), v.push(y.morphTarget === f ? 1 : 0);
								}
								r.push(new ic('.morphTargetInfluence[' + f + ']', m, v));
							}
							s = h.length * (a || 1);
						} else {
							var x = '.bones[' + e[l].name + ']';
							n(cc, x + '.position', u, 'pos', r),
								n(oc, x + '.quaternion', u, 'rot', r),
								n(cc, x + '.scale', u, 'scl', r);
						}
				}
				return 0 === r.length ? null : new lc(i, s, r, o);
			},
		}),
		Object.assign(lc.prototype, {
			resetDuration: function () {
				for (var t = 0, e = 0, n = this.tracks.length; e !== n; ++e) {
					var r = this.tracks[e];
					t = Math.max(t, r.times[r.times.length - 1]);
				}
				return (this.duration = t), this;
			},
			trim: function () {
				for (var t = 0; t < this.tracks.length; t++)
					this.tracks[t].trim(0, this.duration);
				return this;
			},
			validate: function () {
				for (var t = !0, e = 0; e < this.tracks.length; e++)
					t = t && this.tracks[e].validate();
				return t;
			},
			optimize: function () {
				for (var t = 0; t < this.tracks.length; t++) this.tracks[t].optimize();
				return this;
			},
			clone: function () {
				for (var t = [], e = 0; e < this.tracks.length; e++)
					t.push(this.tracks[e].clone());
				return new lc(this.name, this.duration, t, this.blendMode);
			},
		});
	var hc = {
		enabled: !1,
		files: {},
		add: function (t, e) {
			!1 !== this.enabled && (this.files[t] = e);
		},
		get: function (t) {
			if (!1 !== this.enabled) return this.files[t];
		},
		remove: function (t) {
			delete this.files[t];
		},
		clear: function () {
			this.files = {};
		},
	};
	function dc(t, e, n) {
		var r = this,
			i = !1,
			a = 0,
			o = 0,
			s = void 0,
			c = [];
		(this.onStart = void 0),
			(this.onLoad = t),
			(this.onProgress = e),
			(this.onError = n),
			(this.itemStart = function (t) {
				o++, !1 === i && void 0 !== r.onStart && r.onStart(t, a, o), (i = !0);
			}),
			(this.itemEnd = function (t) {
				a++,
					void 0 !== r.onProgress && r.onProgress(t, a, o),
					a === o && ((i = !1), void 0 !== r.onLoad && r.onLoad());
			}),
			(this.itemError = function (t) {
				void 0 !== r.onError && r.onError(t);
			}),
			(this.resolveURL = function (t) {
				return s ? s(t) : t;
			}),
			(this.setURLModifier = function (t) {
				return (s = t), this;
			}),
			(this.addHandler = function (t, e) {
				return c.push(t, e), this;
			}),
			(this.removeHandler = function (t) {
				var e = c.indexOf(t);
				return -1 !== e && c.splice(e, 2), this;
			}),
			(this.getHandler = function (t) {
				for (var e = 0, n = c.length; e < n; e += 2) {
					var r = c[e],
						i = c[e + 1];
					if ((r.global && (r.lastIndex = 0), r.test(t))) return i;
				}
				return null;
			});
	}
	var pc = new dc();
	function fc(t) {
		(this.manager = void 0 !== t ? t : pc),
			(this.crossOrigin = 'anonymous'),
			(this.withCredentials = !1),
			(this.path = ''),
			(this.resourcePath = ''),
			(this.requestHeader = {});
	}
	Object.assign(fc.prototype, {
		load: function () {},
		loadAsync: function (t, e) {
			var n = this;
			return new Promise(function (r, i) {
				n.load(t, r, e, i);
			});
		},
		parse: function () {},
		setCrossOrigin: function (t) {
			return (this.crossOrigin = t), this;
		},
		setWithCredentials: function (t) {
			return (this.withCredentials = t), this;
		},
		setPath: function (t) {
			return (this.path = t), this;
		},
		setResourcePath: function (t) {
			return (this.resourcePath = t), this;
		},
		setRequestHeader: function (t) {
			return (this.requestHeader = t), this;
		},
	});
	var mc = {};
	function vc(t) {
		fc.call(this, t);
	}
	function gc(t) {
		fc.call(this, t);
	}
	function yc(t) {
		fc.call(this, t);
	}
	function xc(t) {
		fc.call(this, t);
	}
	function _c(t) {
		fc.call(this, t);
	}
	function bc(t) {
		fc.call(this, t);
	}
	function wc(t) {
		fc.call(this, t);
	}
	function Mc() {
		(this.type = 'Curve'), (this.arcLengthDivisions = 200);
	}
	function Sc(t, e, n, r, i, a, o, s) {
		Mc.call(this),
			(this.type = 'EllipseCurve'),
			(this.aX = t || 0),
			(this.aY = e || 0),
			(this.xRadius = n || 1),
			(this.yRadius = r || 1),
			(this.aStartAngle = i || 0),
			(this.aEndAngle = a || 2 * Math.PI),
			(this.aClockwise = o || !1),
			(this.aRotation = s || 0);
	}
	function Tc(t, e, n, r, i, a) {
		Sc.call(this, t, e, n, n, r, i, a), (this.type = 'ArcCurve');
	}
	function Ec() {
		var t = 0,
			e = 0,
			n = 0,
			r = 0;
		function i(i, a, o, s) {
			(t = i),
				(e = o),
				(n = -3 * i + 3 * a - 2 * o - s),
				(r = 2 * i - 2 * a + o + s);
		}
		return {
			initCatmullRom: function (t, e, n, r, a) {
				i(e, n, a * (n - t), a * (r - e));
			},
			initNonuniformCatmullRom: function (t, e, n, r, a, o, s) {
				var c = (e - t) / a - (n - t) / (a + o) + (n - e) / o,
					l = (n - e) / o - (r - e) / (o + s) + (r - n) / s;
				i(e, n, (c *= o), (l *= o));
			},
			calc: function (i) {
				var a = i * i;
				return t + e * i + n * a + r * (a * i);
			},
		};
	}
	(vc.prototype = Object.assign(Object.create(fc.prototype), {
		constructor: vc,
		load: function (t, e, n, r) {
			void 0 === t && (t = ''),
				void 0 !== this.path && (t = this.path + t),
				(t = this.manager.resolveURL(t));
			var i = this,
				a = hc.get(t);
			if (void 0 !== a)
				return (
					i.manager.itemStart(t),
					setTimeout(function () {
						e && e(a), i.manager.itemEnd(t);
					}, 0),
					a
				);
			if (void 0 === mc[t]) {
				var o,
					s = t.match(/^data:(.*?)(;base64)?,(.*)$/);
				if (s) {
					var c = s[1],
						l = !!s[2],
						u = s[3];
					(u = decodeURIComponent(u)), l && (u = atob(u));
					try {
						var h,
							d = (this.responseType || '').toLowerCase();
						switch (d) {
							case 'arraybuffer':
							case 'blob':
								for (var p = new Uint8Array(u.length), f = 0; f < u.length; f++)
									p[f] = u.charCodeAt(f);
								h = 'blob' === d ? new Blob([p.buffer], { type: c }) : p.buffer;
								break;
							case 'document':
								var m = new DOMParser();
								h = m.parseFromString(u, c);
								break;
							case 'json':
								h = JSON.parse(u);
								break;
							default:
								h = u;
						}
						setTimeout(function () {
							e && e(h), i.manager.itemEnd(t);
						}, 0);
					} catch (e) {
						setTimeout(function () {
							r && r(e), i.manager.itemError(t), i.manager.itemEnd(t);
						}, 0);
					}
				} else {
					for (var v in ((mc[t] = []),
					mc[t].push({ onLoad: e, onProgress: n, onError: r }),
					(o = new XMLHttpRequest()).open('GET', t, !0),
					o.addEventListener(
						'load',
						function (e) {
							var n = this.response,
								r = mc[t];
							if ((delete mc[t], 200 === this.status || 0 === this.status)) {
								0 === this.status &&
									console.warn('THREE.FileLoader: HTTP Status 0 received.'),
									hc.add(t, n);
								for (var a = 0, o = r.length; a < o; a++) {
									var s = r[a];
									s.onLoad && s.onLoad(n);
								}
								i.manager.itemEnd(t);
							} else {
								for (var c = 0, l = r.length; c < l; c++) {
									var u = r[c];
									u.onError && u.onError(e);
								}
								i.manager.itemError(t), i.manager.itemEnd(t);
							}
						},
						!1
					),
					o.addEventListener(
						'progress',
						function (e) {
							for (var n = mc[t], r = 0, i = n.length; r < i; r++) {
								var a = n[r];
								a.onProgress && a.onProgress(e);
							}
						},
						!1
					),
					o.addEventListener(
						'error',
						function (e) {
							var n = mc[t];
							delete mc[t];
							for (var r = 0, a = n.length; r < a; r++) {
								var o = n[r];
								o.onError && o.onError(e);
							}
							i.manager.itemError(t), i.manager.itemEnd(t);
						},
						!1
					),
					o.addEventListener(
						'abort',
						function (e) {
							var n = mc[t];
							delete mc[t];
							for (var r = 0, a = n.length; r < a; r++) {
								var o = n[r];
								o.onError && o.onError(e);
							}
							i.manager.itemError(t), i.manager.itemEnd(t);
						},
						!1
					),
					void 0 !== this.responseType && (o.responseType = this.responseType),
					void 0 !== this.withCredentials &&
						(o.withCredentials = this.withCredentials),
					o.overrideMimeType &&
						o.overrideMimeType(
							void 0 !== this.mimeType ? this.mimeType : 'text/plain'
						),
					this.requestHeader))
						o.setRequestHeader(v, this.requestHeader[v]);
					o.send(null);
				}
				return i.manager.itemStart(t), o;
			}
			mc[t].push({ onLoad: e, onProgress: n, onError: r });
		},
		setResponseType: function (t) {
			return (this.responseType = t), this;
		},
		setMimeType: function (t) {
			return (this.mimeType = t), this;
		},
	})),
		(gc.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: gc,
			load: function (t, e, n, r) {
				var i = this,
					a = new vc(i.manager);
				a.setPath(i.path),
					a.setRequestHeader(i.requestHeader),
					a.setWithCredentials(i.withCredentials),
					a.load(
						t,
						function (n) {
							try {
								e(i.parse(JSON.parse(n)));
							} catch (e) {
								r ? r(e) : console.error(e), i.manager.itemError(t);
							}
						},
						n,
						r
					);
			},
			parse: function (t) {
				for (var e = [], n = 0; n < t.length; n++) {
					var r = lc.parse(t[n]);
					e.push(r);
				}
				return e;
			},
		})),
		(yc.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: yc,
			load: function (t, e, n, r) {
				var i = this,
					a = [],
					o = new uo();
				o.image = a;
				var s = new vc(this.manager);
				s.setPath(this.path),
					s.setResponseType('arraybuffer'),
					s.setRequestHeader(this.requestHeader),
					s.setWithCredentials(i.withCredentials);
				var c = 0;
				function l(l) {
					s.load(
						t[l],
						function (t) {
							var n = i.parse(t, !0);
							(a[l] = {
								width: n.width,
								height: n.height,
								format: n.format,
								mipmaps: n.mipmaps,
							}),
								6 === (c += 1) &&
									(1 === n.mipmapCount && (o.minFilter = m),
									(o.format = n.format),
									(o.needsUpdate = !0),
									e && e(o));
						},
						n,
						r
					);
				}
				if (Array.isArray(t)) for (var u = 0, h = t.length; u < h; ++u) l(u);
				else
					s.load(
						t,
						function (t) {
							var n = i.parse(t, !0);
							if (n.isCubemap)
								for (
									var r = n.mipmaps.length / n.mipmapCount, s = 0;
									s < r;
									s++
								) {
									a[s] = { mipmaps: [] };
									for (var c = 0; c < n.mipmapCount; c++)
										a[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + c]),
											(a[s].format = n.format),
											(a[s].width = n.width),
											(a[s].height = n.height);
								}
							else
								(o.image.width = n.width),
									(o.image.height = n.height),
									(o.mipmaps = n.mipmaps);
							1 === n.mipmapCount && (o.minFilter = m),
								(o.format = n.format),
								(o.needsUpdate = !0),
								e && e(o);
						},
						n,
						r
					);
				return o;
			},
		})),
		(xc.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: xc,
			load: function (t, e, n, r) {
				void 0 !== this.path && (t = this.path + t),
					(t = this.manager.resolveURL(t));
				var i = this,
					a = hc.get(t);
				if (void 0 !== a)
					return (
						i.manager.itemStart(t),
						setTimeout(function () {
							e && e(a), i.manager.itemEnd(t);
						}, 0),
						a
					);
				var o = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');
				function s() {
					o.removeEventListener('load', s, !1),
						o.removeEventListener('error', c, !1),
						hc.add(t, this),
						e && e(this),
						i.manager.itemEnd(t);
				}
				function c(e) {
					o.removeEventListener('load', s, !1),
						o.removeEventListener('error', c, !1),
						r && r(e),
						i.manager.itemError(t),
						i.manager.itemEnd(t);
				}
				return (
					o.addEventListener('load', s, !1),
					o.addEventListener('error', c, !1),
					'data:' !== t.substr(0, 5) &&
						void 0 !== this.crossOrigin &&
						(o.crossOrigin = this.crossOrigin),
					i.manager.itemStart(t),
					(o.src = t),
					o
				);
			},
		})),
		(_c.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: _c,
			load: function (t, e, n, r) {
				var i = new qn(),
					a = new xc(this.manager);
				a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
				var o = 0;
				function s(n) {
					a.load(
						t[n],
						function (t) {
							(i.images[n] = t), 6 === ++o && ((i.needsUpdate = !0), e && e(i));
						},
						void 0,
						r
					);
				}
				for (var c = 0; c < t.length; ++c) s(c);
				return i;
			},
		})),
		(bc.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: bc,
			load: function (t, e, n, r) {
				var i = this,
					a = new Yn(),
					o = new vc(this.manager);
				return (
					o.setResponseType('arraybuffer'),
					o.setRequestHeader(this.requestHeader),
					o.setPath(this.path),
					o.setWithCredentials(i.withCredentials),
					o.load(
						t,
						function (t) {
							var n = i.parse(t);
							n &&
								(void 0 !== n.image
									? (a.image = n.image)
									: void 0 !== n.data &&
									  ((a.image.width = n.width),
									  (a.image.height = n.height),
									  (a.image.data = n.data)),
								(a.wrapS = void 0 !== n.wrapS ? n.wrapS : u),
								(a.wrapT = void 0 !== n.wrapT ? n.wrapT : u),
								(a.magFilter = void 0 !== n.magFilter ? n.magFilter : m),
								(a.minFilter = void 0 !== n.minFilter ? n.minFilter : m),
								(a.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1),
								void 0 !== n.format && (a.format = n.format),
								void 0 !== n.type && (a.type = n.type),
								void 0 !== n.mipmaps &&
									((a.mipmaps = n.mipmaps), (a.minFilter = g)),
								1 === n.mipmapCount && (a.minFilter = m),
								(a.needsUpdate = !0),
								e && e(a, n));
						},
						n,
						r
					),
					a
				);
			},
		})),
		(wc.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: wc,
			load: function (t, e, n, r) {
				var i = new gt(),
					a = new xc(this.manager);
				return (
					a.setCrossOrigin(this.crossOrigin),
					a.setPath(this.path),
					a.load(
						t,
						function (n) {
							i.image = n;
							var r =
								t.search(/\.jpe?g($|\?)/i) > 0 ||
								0 === t.search(/^data\:image\/jpeg/);
							(i.format = r ? S : T),
								(i.needsUpdate = !0),
								void 0 !== e && e(i);
						},
						n,
						r
					),
					i
				);
			},
		})),
		Object.assign(Mc.prototype, {
			getPoint: function () {
				return console.warn('THREE.Curve: .getPoint() not implemented.'), null;
			},
			getPointAt: function (t, e) {
				var n = this.getUtoTmapping(t);
				return this.getPoint(n, e);
			},
			getPoints: function (t) {
				void 0 === t && (t = 5);
				for (var e = [], n = 0; n <= t; n++) e.push(this.getPoint(n / t));
				return e;
			},
			getSpacedPoints: function (t) {
				void 0 === t && (t = 5);
				for (var e = [], n = 0; n <= t; n++) e.push(this.getPointAt(n / t));
				return e;
			},
			getLength: function () {
				var t = this.getLengths();
				return t[t.length - 1];
			},
			getLengths: function (t) {
				if (
					(void 0 === t && (t = this.arcLengthDivisions),
					this.cacheArcLengths &&
						this.cacheArcLengths.length === t + 1 &&
						!this.needsUpdate)
				)
					return this.cacheArcLengths;
				this.needsUpdate = !1;
				var e,
					n = [],
					r = this.getPoint(0),
					i = 0;
				n.push(0);
				for (var a = 1; a <= t; a++)
					(i += (e = this.getPoint(a / t)).distanceTo(r)), n.push(i), (r = e);
				return (this.cacheArcLengths = n), n;
			},
			updateArcLengths: function () {
				(this.needsUpdate = !0), this.getLengths();
			},
			getUtoTmapping: function (t, e) {
				var n,
					r = this.getLengths(),
					i = 0,
					a = r.length;
				n = e || t * r[a - 1];
				for (var o, s = 0, c = a - 1; s <= c; )
					if ((o = r[(i = Math.floor(s + (c - s) / 2))] - n) < 0) s = i + 1;
					else {
						if (!(o > 0)) {
							c = i;
							break;
						}
						c = i - 1;
					}
				if (r[(i = c)] === n) return i / (a - 1);
				var l = r[i];
				return (i + (n - l) / (r[i + 1] - l)) / (a - 1);
			},
			getTangent: function (t, e) {
				var n = 1e-4,
					r = t - n,
					i = t + n;
				r < 0 && (r = 0), i > 1 && (i = 1);
				var a = this.getPoint(r),
					o = this.getPoint(i),
					s = e || (a.isVector2 ? new pt() : new wt());
				return s.copy(o).sub(a).normalize(), s;
			},
			getTangentAt: function (t, e) {
				var n = this.getUtoTmapping(t);
				return this.getTangent(n, e);
			},
			computeFrenetFrames: function (t, e) {
				for (
					var n = new wt(),
						r = [],
						i = [],
						a = [],
						o = new wt(),
						s = new Jt(),
						c = 0;
					c <= t;
					c++
				) {
					var l = c / t;
					(r[c] = this.getTangentAt(l, new wt())), r[c].normalize();
				}
				(i[0] = new wt()), (a[0] = new wt());
				var u = Number.MAX_VALUE,
					h = Math.abs(r[0].x),
					d = Math.abs(r[0].y),
					p = Math.abs(r[0].z);
				h <= u && ((u = h), n.set(1, 0, 0)),
					d <= u && ((u = d), n.set(0, 1, 0)),
					p <= u && n.set(0, 0, 1),
					o.crossVectors(r[0], n).normalize(),
					i[0].crossVectors(r[0], o),
					a[0].crossVectors(r[0], i[0]);
				for (var f = 1; f <= t; f++) {
					if (
						((i[f] = i[f - 1].clone()),
						(a[f] = a[f - 1].clone()),
						o.crossVectors(r[f - 1], r[f]),
						o.length() > Number.EPSILON)
					) {
						o.normalize();
						var m = Math.acos(st.clamp(r[f - 1].dot(r[f]), -1, 1));
						i[f].applyMatrix4(s.makeRotationAxis(o, m));
					}
					a[f].crossVectors(r[f], i[f]);
				}
				if (!0 === e) {
					var v = Math.acos(st.clamp(i[0].dot(i[t]), -1, 1));
					(v /= t), r[0].dot(o.crossVectors(i[0], i[t])) > 0 && (v = -v);
					for (var g = 1; g <= t; g++)
						i[g].applyMatrix4(s.makeRotationAxis(r[g], v * g)),
							a[g].crossVectors(r[g], i[g]);
				}
				return { tangents: r, normals: i, binormals: a };
			},
			clone: function () {
				return new this.constructor().copy(this);
			},
			copy: function (t) {
				return (this.arcLengthDivisions = t.arcLengthDivisions), this;
			},
			toJSON: function () {
				var t = {
					metadata: { version: 4.5, type: 'Curve', generator: 'Curve.toJSON' },
				};
				return (
					(t.arcLengthDivisions = this.arcLengthDivisions),
					(t.type = this.type),
					t
				);
			},
			fromJSON: function (t) {
				return (this.arcLengthDivisions = t.arcLengthDivisions), this;
			},
		}),
		(Sc.prototype = Object.create(Mc.prototype)),
		(Sc.prototype.constructor = Sc),
		(Sc.prototype.isEllipseCurve = !0),
		(Sc.prototype.getPoint = function (t, e) {
			for (
				var n = e || new pt(),
					r = 2 * Math.PI,
					i = this.aEndAngle - this.aStartAngle,
					a = Math.abs(i) < Number.EPSILON;
				i < 0;

			)
				i += r;
			for (; i > r; ) i -= r;
			i < Number.EPSILON && (i = a ? 0 : r),
				!0 !== this.aClockwise || a || (i === r ? (i = -r) : (i -= r));
			var o = this.aStartAngle + t * i,
				s = this.aX + this.xRadius * Math.cos(o),
				c = this.aY + this.yRadius * Math.sin(o);
			if (0 !== this.aRotation) {
				var l = Math.cos(this.aRotation),
					u = Math.sin(this.aRotation),
					h = s - this.aX,
					d = c - this.aY;
				(s = h * l - d * u + this.aX), (c = h * u + d * l + this.aY);
			}
			return n.set(s, c);
		}),
		(Sc.prototype.copy = function (t) {
			return (
				Mc.prototype.copy.call(this, t),
				(this.aX = t.aX),
				(this.aY = t.aY),
				(this.xRadius = t.xRadius),
				(this.yRadius = t.yRadius),
				(this.aStartAngle = t.aStartAngle),
				(this.aEndAngle = t.aEndAngle),
				(this.aClockwise = t.aClockwise),
				(this.aRotation = t.aRotation),
				this
			);
		}),
		(Sc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			return (
				(t.aX = this.aX),
				(t.aY = this.aY),
				(t.xRadius = this.xRadius),
				(t.yRadius = this.yRadius),
				(t.aStartAngle = this.aStartAngle),
				(t.aEndAngle = this.aEndAngle),
				(t.aClockwise = this.aClockwise),
				(t.aRotation = this.aRotation),
				t
			);
		}),
		(Sc.prototype.fromJSON = function (t) {
			return (
				Mc.prototype.fromJSON.call(this, t),
				(this.aX = t.aX),
				(this.aY = t.aY),
				(this.xRadius = t.xRadius),
				(this.yRadius = t.yRadius),
				(this.aStartAngle = t.aStartAngle),
				(this.aEndAngle = t.aEndAngle),
				(this.aClockwise = t.aClockwise),
				(this.aRotation = t.aRotation),
				this
			);
		}),
		(Tc.prototype = Object.create(Sc.prototype)),
		(Tc.prototype.constructor = Tc),
		(Tc.prototype.isArcCurve = !0);
	var Ac = new wt(),
		Lc = new Ec(),
		Rc = new Ec(),
		Cc = new Ec();
	function Pc(t, e, n, r) {
		Mc.call(this),
			(this.type = 'CatmullRomCurve3'),
			(this.points = t || []),
			(this.closed = e || !1),
			(this.curveType = n || 'centripetal'),
			(this.tension = void 0 !== r ? r : 0.5);
	}
	function Ic(t, e, n, r, i) {
		var a = 0.5 * (r - e),
			o = 0.5 * (i - n),
			s = t * t;
		return (
			(2 * n - 2 * r + a + o) * (t * s) +
			(-3 * n + 3 * r - 2 * a - o) * s +
			a * t +
			n
		);
	}
	function Dc(t, e, n, r) {
		return (
			(function (t, e) {
				var n = 1 - t;
				return n * n * e;
			})(t, e) +
			(function (t, e) {
				return 2 * (1 - t) * t * e;
			})(t, n) +
			(function (t, e) {
				return t * t * e;
			})(t, r)
		);
	}
	function Nc(t, e, n, r, i) {
		return (
			(function (t, e) {
				var n = 1 - t;
				return n * n * n * e;
			})(t, e) +
			(function (t, e) {
				var n = 1 - t;
				return 3 * n * n * t * e;
			})(t, n) +
			(function (t, e) {
				return 3 * (1 - t) * t * t * e;
			})(t, r) +
			(function (t, e) {
				return t * t * t * e;
			})(t, i)
		);
	}
	function Oc(t, e, n, r) {
		Mc.call(this),
			(this.type = 'CubicBezierCurve'),
			(this.v0 = t || new pt()),
			(this.v1 = e || new pt()),
			(this.v2 = n || new pt()),
			(this.v3 = r || new pt());
	}
	function Bc(t, e, n, r) {
		Mc.call(this),
			(this.type = 'CubicBezierCurve3'),
			(this.v0 = t || new wt()),
			(this.v1 = e || new wt()),
			(this.v2 = n || new wt()),
			(this.v3 = r || new wt());
	}
	function zc(t, e) {
		Mc.call(this),
			(this.type = 'LineCurve'),
			(this.v1 = t || new pt()),
			(this.v2 = e || new pt());
	}
	function Gc(t, e) {
		Mc.call(this),
			(this.type = 'LineCurve3'),
			(this.v1 = t || new wt()),
			(this.v2 = e || new wt());
	}
	function Fc(t, e, n) {
		Mc.call(this),
			(this.type = 'QuadraticBezierCurve'),
			(this.v0 = t || new pt()),
			(this.v1 = e || new pt()),
			(this.v2 = n || new pt());
	}
	function Uc(t, e, n) {
		Mc.call(this),
			(this.type = 'QuadraticBezierCurve3'),
			(this.v0 = t || new wt()),
			(this.v1 = e || new wt()),
			(this.v2 = n || new wt());
	}
	function Hc(t) {
		Mc.call(this), (this.type = 'SplineCurve'), (this.points = t || []);
	}
	(Pc.prototype = Object.create(Mc.prototype)),
		(Pc.prototype.constructor = Pc),
		(Pc.prototype.isCatmullRomCurve3 = !0),
		(Pc.prototype.getPoint = function (t, e) {
			var n,
				r,
				i = e || new wt(),
				a = this.points,
				o = a.length,
				s = (o - (this.closed ? 0 : 1)) * t,
				c = Math.floor(s),
				l = s - c;
			this.closed
				? (c += c > 0 ? 0 : (Math.floor(Math.abs(c) / o) + 1) * o)
				: 0 === l && c === o - 1 && ((c = o - 2), (l = 1)),
				this.closed || c > 0
					? (n = a[(c - 1) % o])
					: (Ac.subVectors(a[0], a[1]).add(a[0]), (n = Ac));
			var u = a[c % o],
				h = a[(c + 1) % o];
			if (
				(this.closed || c + 2 < o
					? (r = a[(c + 2) % o])
					: (Ac.subVectors(a[o - 1], a[o - 2]).add(a[o - 1]), (r = Ac)),
				'centripetal' === this.curveType || 'chordal' === this.curveType)
			) {
				var d = 'chordal' === this.curveType ? 0.5 : 0.25,
					p = Math.pow(n.distanceToSquared(u), d),
					f = Math.pow(u.distanceToSquared(h), d),
					m = Math.pow(h.distanceToSquared(r), d);
				f < 1e-4 && (f = 1),
					p < 1e-4 && (p = f),
					m < 1e-4 && (m = f),
					Lc.initNonuniformCatmullRom(n.x, u.x, h.x, r.x, p, f, m),
					Rc.initNonuniformCatmullRom(n.y, u.y, h.y, r.y, p, f, m),
					Cc.initNonuniformCatmullRom(n.z, u.z, h.z, r.z, p, f, m);
			} else
				'catmullrom' === this.curveType &&
					(Lc.initCatmullRom(n.x, u.x, h.x, r.x, this.tension),
					Rc.initCatmullRom(n.y, u.y, h.y, r.y, this.tension),
					Cc.initCatmullRom(n.z, u.z, h.z, r.z, this.tension));
			return i.set(Lc.calc(l), Rc.calc(l), Cc.calc(l)), i;
		}),
		(Pc.prototype.copy = function (t) {
			Mc.prototype.copy.call(this, t), (this.points = []);
			for (var e = 0, n = t.points.length; e < n; e++) {
				var r = t.points[e];
				this.points.push(r.clone());
			}
			return (
				(this.closed = t.closed),
				(this.curveType = t.curveType),
				(this.tension = t.tension),
				this
			);
		}),
		(Pc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			t.points = [];
			for (var e = 0, n = this.points.length; e < n; e++) {
				var r = this.points[e];
				t.points.push(r.toArray());
			}
			return (
				(t.closed = this.closed),
				(t.curveType = this.curveType),
				(t.tension = this.tension),
				t
			);
		}),
		(Pc.prototype.fromJSON = function (t) {
			Mc.prototype.fromJSON.call(this, t), (this.points = []);
			for (var e = 0, n = t.points.length; e < n; e++) {
				var r = t.points[e];
				this.points.push(new wt().fromArray(r));
			}
			return (
				(this.closed = t.closed),
				(this.curveType = t.curveType),
				(this.tension = t.tension),
				this
			);
		}),
		(Oc.prototype = Object.create(Mc.prototype)),
		(Oc.prototype.constructor = Oc),
		(Oc.prototype.isCubicBezierCurve = !0),
		(Oc.prototype.getPoint = function (t, e) {
			var n = e || new pt(),
				r = this.v0,
				i = this.v1,
				a = this.v2,
				o = this.v3;
			return n.set(Nc(t, r.x, i.x, a.x, o.x), Nc(t, r.y, i.y, a.y, o.y)), n;
		}),
		(Oc.prototype.copy = function (t) {
			return (
				Mc.prototype.copy.call(this, t),
				this.v0.copy(t.v0),
				this.v1.copy(t.v1),
				this.v2.copy(t.v2),
				this.v3.copy(t.v3),
				this
			);
		}),
		(Oc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			return (
				(t.v0 = this.v0.toArray()),
				(t.v1 = this.v1.toArray()),
				(t.v2 = this.v2.toArray()),
				(t.v3 = this.v3.toArray()),
				t
			);
		}),
		(Oc.prototype.fromJSON = function (t) {
			return (
				Mc.prototype.fromJSON.call(this, t),
				this.v0.fromArray(t.v0),
				this.v1.fromArray(t.v1),
				this.v2.fromArray(t.v2),
				this.v3.fromArray(t.v3),
				this
			);
		}),
		(Bc.prototype = Object.create(Mc.prototype)),
		(Bc.prototype.constructor = Bc),
		(Bc.prototype.isCubicBezierCurve3 = !0),
		(Bc.prototype.getPoint = function (t, e) {
			var n = e || new wt(),
				r = this.v0,
				i = this.v1,
				a = this.v2,
				o = this.v3;
			return (
				n.set(
					Nc(t, r.x, i.x, a.x, o.x),
					Nc(t, r.y, i.y, a.y, o.y),
					Nc(t, r.z, i.z, a.z, o.z)
				),
				n
			);
		}),
		(Bc.prototype.copy = function (t) {
			return (
				Mc.prototype.copy.call(this, t),
				this.v0.copy(t.v0),
				this.v1.copy(t.v1),
				this.v2.copy(t.v2),
				this.v3.copy(t.v3),
				this
			);
		}),
		(Bc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			return (
				(t.v0 = this.v0.toArray()),
				(t.v1 = this.v1.toArray()),
				(t.v2 = this.v2.toArray()),
				(t.v3 = this.v3.toArray()),
				t
			);
		}),
		(Bc.prototype.fromJSON = function (t) {
			return (
				Mc.prototype.fromJSON.call(this, t),
				this.v0.fromArray(t.v0),
				this.v1.fromArray(t.v1),
				this.v2.fromArray(t.v2),
				this.v3.fromArray(t.v3),
				this
			);
		}),
		(zc.prototype = Object.create(Mc.prototype)),
		(zc.prototype.constructor = zc),
		(zc.prototype.isLineCurve = !0),
		(zc.prototype.getPoint = function (t, e) {
			var n = e || new pt();
			return (
				1 === t
					? n.copy(this.v2)
					: (n.copy(this.v2).sub(this.v1), n.multiplyScalar(t).add(this.v1)),
				n
			);
		}),
		(zc.prototype.getPointAt = function (t, e) {
			return this.getPoint(t, e);
		}),
		(zc.prototype.getTangent = function (t, e) {
			var n = e || new pt();
			return n.copy(this.v2).sub(this.v1).normalize(), n;
		}),
		(zc.prototype.copy = function (t) {
			return (
				Mc.prototype.copy.call(this, t),
				this.v1.copy(t.v1),
				this.v2.copy(t.v2),
				this
			);
		}),
		(zc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			return (t.v1 = this.v1.toArray()), (t.v2 = this.v2.toArray()), t;
		}),
		(zc.prototype.fromJSON = function (t) {
			return (
				Mc.prototype.fromJSON.call(this, t),
				this.v1.fromArray(t.v1),
				this.v2.fromArray(t.v2),
				this
			);
		}),
		(Gc.prototype = Object.create(Mc.prototype)),
		(Gc.prototype.constructor = Gc),
		(Gc.prototype.isLineCurve3 = !0),
		(Gc.prototype.getPoint = function (t, e) {
			var n = e || new wt();
			return (
				1 === t
					? n.copy(this.v2)
					: (n.copy(this.v2).sub(this.v1), n.multiplyScalar(t).add(this.v1)),
				n
			);
		}),
		(Gc.prototype.getPointAt = function (t, e) {
			return this.getPoint(t, e);
		}),
		(Gc.prototype.copy = function (t) {
			return (
				Mc.prototype.copy.call(this, t),
				this.v1.copy(t.v1),
				this.v2.copy(t.v2),
				this
			);
		}),
		(Gc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			return (t.v1 = this.v1.toArray()), (t.v2 = this.v2.toArray()), t;
		}),
		(Gc.prototype.fromJSON = function (t) {
			return (
				Mc.prototype.fromJSON.call(this, t),
				this.v1.fromArray(t.v1),
				this.v2.fromArray(t.v2),
				this
			);
		}),
		(Fc.prototype = Object.create(Mc.prototype)),
		(Fc.prototype.constructor = Fc),
		(Fc.prototype.isQuadraticBezierCurve = !0),
		(Fc.prototype.getPoint = function (t, e) {
			var n = e || new pt(),
				r = this.v0,
				i = this.v1,
				a = this.v2;
			return n.set(Dc(t, r.x, i.x, a.x), Dc(t, r.y, i.y, a.y)), n;
		}),
		(Fc.prototype.copy = function (t) {
			return (
				Mc.prototype.copy.call(this, t),
				this.v0.copy(t.v0),
				this.v1.copy(t.v1),
				this.v2.copy(t.v2),
				this
			);
		}),
		(Fc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			return (
				(t.v0 = this.v0.toArray()),
				(t.v1 = this.v1.toArray()),
				(t.v2 = this.v2.toArray()),
				t
			);
		}),
		(Fc.prototype.fromJSON = function (t) {
			return (
				Mc.prototype.fromJSON.call(this, t),
				this.v0.fromArray(t.v0),
				this.v1.fromArray(t.v1),
				this.v2.fromArray(t.v2),
				this
			);
		}),
		(Uc.prototype = Object.create(Mc.prototype)),
		(Uc.prototype.constructor = Uc),
		(Uc.prototype.isQuadraticBezierCurve3 = !0),
		(Uc.prototype.getPoint = function (t, e) {
			var n = e || new wt(),
				r = this.v0,
				i = this.v1,
				a = this.v2;
			return (
				n.set(Dc(t, r.x, i.x, a.x), Dc(t, r.y, i.y, a.y), Dc(t, r.z, i.z, a.z)),
				n
			);
		}),
		(Uc.prototype.copy = function (t) {
			return (
				Mc.prototype.copy.call(this, t),
				this.v0.copy(t.v0),
				this.v1.copy(t.v1),
				this.v2.copy(t.v2),
				this
			);
		}),
		(Uc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			return (
				(t.v0 = this.v0.toArray()),
				(t.v1 = this.v1.toArray()),
				(t.v2 = this.v2.toArray()),
				t
			);
		}),
		(Uc.prototype.fromJSON = function (t) {
			return (
				Mc.prototype.fromJSON.call(this, t),
				this.v0.fromArray(t.v0),
				this.v1.fromArray(t.v1),
				this.v2.fromArray(t.v2),
				this
			);
		}),
		(Hc.prototype = Object.create(Mc.prototype)),
		(Hc.prototype.constructor = Hc),
		(Hc.prototype.isSplineCurve = !0),
		(Hc.prototype.getPoint = function (t, e) {
			var n = e || new pt(),
				r = this.points,
				i = (r.length - 1) * t,
				a = Math.floor(i),
				o = i - a,
				s = r[0 === a ? a : a - 1],
				c = r[a],
				l = r[a > r.length - 2 ? r.length - 1 : a + 1],
				u = r[a > r.length - 3 ? r.length - 1 : a + 2];
			return n.set(Ic(o, s.x, c.x, l.x, u.x), Ic(o, s.y, c.y, l.y, u.y)), n;
		}),
		(Hc.prototype.copy = function (t) {
			Mc.prototype.copy.call(this, t), (this.points = []);
			for (var e = 0, n = t.points.length; e < n; e++) {
				var r = t.points[e];
				this.points.push(r.clone());
			}
			return this;
		}),
		(Hc.prototype.toJSON = function () {
			var t = Mc.prototype.toJSON.call(this);
			t.points = [];
			for (var e = 0, n = this.points.length; e < n; e++) {
				var r = this.points[e];
				t.points.push(r.toArray());
			}
			return t;
		}),
		(Hc.prototype.fromJSON = function (t) {
			Mc.prototype.fromJSON.call(this, t), (this.points = []);
			for (var e = 0, n = t.points.length; e < n; e++) {
				var r = t.points[e];
				this.points.push(new pt().fromArray(r));
			}
			return this;
		});
	var kc = Object.freeze({
		__proto__: null,
		ArcCurve: Tc,
		CatmullRomCurve3: Pc,
		CubicBezierCurve: Oc,
		CubicBezierCurve3: Bc,
		EllipseCurve: Sc,
		LineCurve: zc,
		LineCurve3: Gc,
		QuadraticBezierCurve: Fc,
		QuadraticBezierCurve3: Uc,
		SplineCurve: Hc,
	});
	function Vc() {
		Mc.call(this),
			(this.type = 'CurvePath'),
			(this.curves = []),
			(this.autoClose = !1);
	}
	function Wc(t) {
		Vc.call(this),
			(this.type = 'Path'),
			(this.currentPoint = new pt()),
			t && this.setFromPoints(t);
	}
	function jc(t) {
		Wc.call(this, t),
			(this.uuid = st.generateUUID()),
			(this.type = 'Shape'),
			(this.holes = []);
	}
	function qc(t, e) {
		be.call(this),
			(this.type = 'Light'),
			(this.color = new Ve(t)),
			(this.intensity = void 0 !== e ? e : 1);
	}
	function Xc(t, e, n) {
		qc.call(this, t, n),
			(this.type = 'HemisphereLight'),
			this.position.copy(be.DefaultUp),
			this.updateMatrix(),
			(this.groundColor = new Ve(e));
	}
	function Yc(t) {
		(this.camera = t),
			(this.bias = 0),
			(this.normalBias = 0),
			(this.radius = 1),
			(this.mapSize = new pt(512, 512)),
			(this.map = null),
			(this.mapPass = null),
			(this.matrix = new Jt()),
			(this.autoUpdate = !0),
			(this.needsUpdate = !1),
			(this._frustum = new Qn()),
			(this._frameExtents = new pt(1, 1)),
			(this._viewportCount = 1),
			(this._viewports = [new yt(0, 0, 1, 1)]);
	}
	function Zc() {
		Yc.call(this, new Vn(50, 1, 0.5, 500)), (this.focus = 1);
	}
	function Jc(t, e, n, r, i, a) {
		qc.call(this, t, e),
			(this.type = 'SpotLight'),
			this.position.copy(be.DefaultUp),
			this.updateMatrix(),
			(this.target = new be()),
			Object.defineProperty(this, 'power', {
				get: function () {
					return this.intensity * Math.PI;
				},
				set: function (t) {
					this.intensity = t / Math.PI;
				},
			}),
			(this.distance = void 0 !== n ? n : 0),
			(this.angle = void 0 !== r ? r : Math.PI / 3),
			(this.penumbra = void 0 !== i ? i : 0),
			(this.decay = void 0 !== a ? a : 1),
			(this.shadow = new Zc());
	}
	function Qc() {
		Yc.call(this, new Vn(90, 1, 0.5, 500)),
			(this._frameExtents = new pt(4, 2)),
			(this._viewportCount = 6),
			(this._viewports = [
				new yt(2, 1, 1, 1),
				new yt(0, 1, 1, 1),
				new yt(3, 1, 1, 1),
				new yt(1, 1, 1, 1),
				new yt(3, 0, 1, 1),
				new yt(1, 0, 1, 1),
			]),
			(this._cubeDirections = [
				new wt(1, 0, 0),
				new wt(-1, 0, 0),
				new wt(0, 0, 1),
				new wt(0, 0, -1),
				new wt(0, 1, 0),
				new wt(0, -1, 0),
			]),
			(this._cubeUps = [
				new wt(0, 1, 0),
				new wt(0, 1, 0),
				new wt(0, 1, 0),
				new wt(0, 1, 0),
				new wt(0, 0, 1),
				new wt(0, 0, -1),
			]);
	}
	function Kc(t, e, n, r) {
		qc.call(this, t, e),
			(this.type = 'PointLight'),
			Object.defineProperty(this, 'power', {
				get: function () {
					return 4 * this.intensity * Math.PI;
				},
				set: function (t) {
					this.intensity = t / (4 * Math.PI);
				},
			}),
			(this.distance = void 0 !== n ? n : 0),
			(this.decay = void 0 !== r ? r : 1),
			(this.shadow = new Qc());
	}
	function $c(t, e, n, r, i, a) {
		kn.call(this),
			(this.type = 'OrthographicCamera'),
			(this.zoom = 1),
			(this.view = null),
			(this.left = void 0 !== t ? t : -1),
			(this.right = void 0 !== e ? e : 1),
			(this.top = void 0 !== n ? n : 1),
			(this.bottom = void 0 !== r ? r : -1),
			(this.near = void 0 !== i ? i : 0.1),
			(this.far = void 0 !== a ? a : 2e3),
			this.updateProjectionMatrix();
	}
	function tl() {
		Yc.call(this, new $c(-5, 5, 5, -5, 0.5, 500));
	}
	function el(t, e) {
		qc.call(this, t, e),
			(this.type = 'DirectionalLight'),
			this.position.copy(be.DefaultUp),
			this.updateMatrix(),
			(this.target = new be()),
			(this.shadow = new tl());
	}
	function nl(t, e) {
		qc.call(this, t, e), (this.type = 'AmbientLight');
	}
	function rl(t, e, n, r) {
		qc.call(this, t, e),
			(this.type = 'RectAreaLight'),
			(this.width = void 0 !== n ? n : 10),
			(this.height = void 0 !== r ? r : 10);
	}
	(Vc.prototype = Object.assign(Object.create(Mc.prototype), {
		constructor: Vc,
		add: function (t) {
			this.curves.push(t);
		},
		closePath: function () {
			var t = this.curves[0].getPoint(0),
				e = this.curves[this.curves.length - 1].getPoint(1);
			t.equals(e) || this.curves.push(new zc(e, t));
		},
		getPoint: function (t) {
			for (
				var e = t * this.getLength(), n = this.getCurveLengths(), r = 0;
				r < n.length;

			) {
				if (n[r] >= e) {
					var i = n[r] - e,
						a = this.curves[r],
						o = a.getLength(),
						s = 0 === o ? 0 : 1 - i / o;
					return a.getPointAt(s);
				}
				r++;
			}
			return null;
		},
		getLength: function () {
			var t = this.getCurveLengths();
			return t[t.length - 1];
		},
		updateArcLengths: function () {
			(this.needsUpdate = !0),
				(this.cacheLengths = null),
				this.getCurveLengths();
		},
		getCurveLengths: function () {
			if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
				return this.cacheLengths;
			for (var t = [], e = 0, n = 0, r = this.curves.length; n < r; n++)
				(e += this.curves[n].getLength()), t.push(e);
			return (this.cacheLengths = t), t;
		},
		getSpacedPoints: function (t) {
			void 0 === t && (t = 40);
			for (var e = [], n = 0; n <= t; n++) e.push(this.getPoint(n / t));
			return this.autoClose && e.push(e[0]), e;
		},
		getPoints: function (t) {
			t = t || 12;
			for (var e, n = [], r = 0, i = this.curves; r < i.length; r++)
				for (
					var a = i[r],
						o =
							a && a.isEllipseCurve
								? 2 * t
								: a && (a.isLineCurve || a.isLineCurve3)
								? 1
								: a && a.isSplineCurve
								? t * a.points.length
								: t,
						s = a.getPoints(o),
						c = 0;
					c < s.length;
					c++
				) {
					var l = s[c];
					(e && e.equals(l)) || (n.push(l), (e = l));
				}
			return (
				this.autoClose &&
					n.length > 1 &&
					!n[n.length - 1].equals(n[0]) &&
					n.push(n[0]),
				n
			);
		},
		copy: function (t) {
			Mc.prototype.copy.call(this, t), (this.curves = []);
			for (var e = 0, n = t.curves.length; e < n; e++) {
				var r = t.curves[e];
				this.curves.push(r.clone());
			}
			return (this.autoClose = t.autoClose), this;
		},
		toJSON: function () {
			var t = Mc.prototype.toJSON.call(this);
			(t.autoClose = this.autoClose), (t.curves = []);
			for (var e = 0, n = this.curves.length; e < n; e++) {
				var r = this.curves[e];
				t.curves.push(r.toJSON());
			}
			return t;
		},
		fromJSON: function (t) {
			Mc.prototype.fromJSON.call(this, t),
				(this.autoClose = t.autoClose),
				(this.curves = []);
			for (var e = 0, n = t.curves.length; e < n; e++) {
				var r = t.curves[e];
				this.curves.push(new kc[r.type]().fromJSON(r));
			}
			return this;
		},
	})),
		(Wc.prototype = Object.assign(Object.create(Vc.prototype), {
			constructor: Wc,
			setFromPoints: function (t) {
				this.moveTo(t[0].x, t[0].y);
				for (var e = 1, n = t.length; e < n; e++) this.lineTo(t[e].x, t[e].y);
				return this;
			},
			moveTo: function (t, e) {
				return this.currentPoint.set(t, e), this;
			},
			lineTo: function (t, e) {
				var n = new zc(this.currentPoint.clone(), new pt(t, e));
				return this.curves.push(n), this.currentPoint.set(t, e), this;
			},
			quadraticCurveTo: function (t, e, n, r) {
				var i = new Fc(this.currentPoint.clone(), new pt(t, e), new pt(n, r));
				return this.curves.push(i), this.currentPoint.set(n, r), this;
			},
			bezierCurveTo: function (t, e, n, r, i, a) {
				var o = new Oc(
					this.currentPoint.clone(),
					new pt(t, e),
					new pt(n, r),
					new pt(i, a)
				);
				return this.curves.push(o), this.currentPoint.set(i, a), this;
			},
			splineThru: function (t) {
				var e = new Hc([this.currentPoint.clone()].concat(t));
				return (
					this.curves.push(e), this.currentPoint.copy(t[t.length - 1]), this
				);
			},
			arc: function (t, e, n, r, i, a) {
				var o = this.currentPoint.x,
					s = this.currentPoint.y;
				return this.absarc(t + o, e + s, n, r, i, a), this;
			},
			absarc: function (t, e, n, r, i, a) {
				return this.absellipse(t, e, n, n, r, i, a), this;
			},
			ellipse: function (t, e, n, r, i, a, o, s) {
				var c = this.currentPoint.x,
					l = this.currentPoint.y;
				return this.absellipse(t + c, e + l, n, r, i, a, o, s), this;
			},
			absellipse: function (t, e, n, r, i, a, o, s) {
				var c = new Sc(t, e, n, r, i, a, o, s);
				if (this.curves.length > 0) {
					var l = c.getPoint(0);
					l.equals(this.currentPoint) || this.lineTo(l.x, l.y);
				}
				this.curves.push(c);
				var u = c.getPoint(1);
				return this.currentPoint.copy(u), this;
			},
			copy: function (t) {
				return (
					Vc.prototype.copy.call(this, t),
					this.currentPoint.copy(t.currentPoint),
					this
				);
			},
			toJSON: function () {
				var t = Vc.prototype.toJSON.call(this);
				return (t.currentPoint = this.currentPoint.toArray()), t;
			},
			fromJSON: function (t) {
				return (
					Vc.prototype.fromJSON.call(this, t),
					this.currentPoint.fromArray(t.currentPoint),
					this
				);
			},
		})),
		(jc.prototype = Object.assign(Object.create(Wc.prototype), {
			constructor: jc,
			getPointsHoles: function (t) {
				for (var e = [], n = 0, r = this.holes.length; n < r; n++)
					e[n] = this.holes[n].getPoints(t);
				return e;
			},
			extractPoints: function (t) {
				return { shape: this.getPoints(t), holes: this.getPointsHoles(t) };
			},
			copy: function (t) {
				Wc.prototype.copy.call(this, t), (this.holes = []);
				for (var e = 0, n = t.holes.length; e < n; e++) {
					var r = t.holes[e];
					this.holes.push(r.clone());
				}
				return this;
			},
			toJSON: function () {
				var t = Wc.prototype.toJSON.call(this);
				(t.uuid = this.uuid), (t.holes = []);
				for (var e = 0, n = this.holes.length; e < n; e++) {
					var r = this.holes[e];
					t.holes.push(r.toJSON());
				}
				return t;
			},
			fromJSON: function (t) {
				Wc.prototype.fromJSON.call(this, t),
					(this.uuid = t.uuid),
					(this.holes = []);
				for (var e = 0, n = t.holes.length; e < n; e++) {
					var r = t.holes[e];
					this.holes.push(new Wc().fromJSON(r));
				}
				return this;
			},
		})),
		(qc.prototype = Object.assign(Object.create(be.prototype), {
			constructor: qc,
			isLight: !0,
			copy: function (t) {
				return (
					be.prototype.copy.call(this, t),
					this.color.copy(t.color),
					(this.intensity = t.intensity),
					this
				);
			},
			toJSON: function (t) {
				var e = be.prototype.toJSON.call(this, t);
				return (
					(e.object.color = this.color.getHex()),
					(e.object.intensity = this.intensity),
					void 0 !== this.groundColor &&
						(e.object.groundColor = this.groundColor.getHex()),
					void 0 !== this.distance && (e.object.distance = this.distance),
					void 0 !== this.angle && (e.object.angle = this.angle),
					void 0 !== this.decay && (e.object.decay = this.decay),
					void 0 !== this.penumbra && (e.object.penumbra = this.penumbra),
					void 0 !== this.shadow && (e.object.shadow = this.shadow.toJSON()),
					e
				);
			},
		})),
		(Xc.prototype = Object.assign(Object.create(qc.prototype), {
			constructor: Xc,
			isHemisphereLight: !0,
			copy: function (t) {
				return (
					qc.prototype.copy.call(this, t),
					this.groundColor.copy(t.groundColor),
					this
				);
			},
		})),
		Object.assign(Yc.prototype, {
			_projScreenMatrix: new Jt(),
			_lightPositionWorld: new wt(),
			_lookTarget: new wt(),
			getViewportCount: function () {
				return this._viewportCount;
			},
			getFrustum: function () {
				return this._frustum;
			},
			updateMatrices: function (t) {
				var e = this.camera,
					n = this.matrix,
					r = this._projScreenMatrix,
					i = this._lookTarget,
					a = this._lightPositionWorld;
				a.setFromMatrixPosition(t.matrixWorld),
					e.position.copy(a),
					i.setFromMatrixPosition(t.target.matrixWorld),
					e.lookAt(i),
					e.updateMatrixWorld(),
					r.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
					this._frustum.setFromProjectionMatrix(r),
					n.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
					n.multiply(e.projectionMatrix),
					n.multiply(e.matrixWorldInverse);
			},
			getViewport: function (t) {
				return this._viewports[t];
			},
			getFrameExtents: function () {
				return this._frameExtents;
			},
			copy: function (t) {
				return (
					(this.camera = t.camera.clone()),
					(this.bias = t.bias),
					(this.radius = t.radius),
					this.mapSize.copy(t.mapSize),
					this
				);
			},
			clone: function () {
				return new this.constructor().copy(this);
			},
			toJSON: function () {
				var t = {};
				return (
					0 !== this.bias && (t.bias = this.bias),
					0 !== this.normalBias && (t.normalBias = this.normalBias),
					1 !== this.radius && (t.radius = this.radius),
					(512 === this.mapSize.x && 512 === this.mapSize.y) ||
						(t.mapSize = this.mapSize.toArray()),
					(t.camera = this.camera.toJSON(!1).object),
					delete t.camera.matrix,
					t
				);
			},
		}),
		(Zc.prototype = Object.assign(Object.create(Yc.prototype), {
			constructor: Zc,
			isSpotLightShadow: !0,
			updateMatrices: function (t) {
				var e = this.camera,
					n = 2 * st.RAD2DEG * t.angle * this.focus,
					r = this.mapSize.width / this.mapSize.height,
					i = t.distance || e.far;
				(n === e.fov && r === e.aspect && i === e.far) ||
					((e.fov = n),
					(e.aspect = r),
					(e.far = i),
					e.updateProjectionMatrix()),
					Yc.prototype.updateMatrices.call(this, t);
			},
		})),
		(Jc.prototype = Object.assign(Object.create(qc.prototype), {
			constructor: Jc,
			isSpotLight: !0,
			copy: function (t) {
				return (
					qc.prototype.copy.call(this, t),
					(this.distance = t.distance),
					(this.angle = t.angle),
					(this.penumbra = t.penumbra),
					(this.decay = t.decay),
					(this.target = t.target.clone()),
					(this.shadow = t.shadow.clone()),
					this
				);
			},
		})),
		(Qc.prototype = Object.assign(Object.create(Yc.prototype), {
			constructor: Qc,
			isPointLightShadow: !0,
			updateMatrices: function (t, e) {
				void 0 === e && (e = 0);
				var n = this.camera,
					r = this.matrix,
					i = this._lightPositionWorld,
					a = this._lookTarget,
					o = this._projScreenMatrix;
				i.setFromMatrixPosition(t.matrixWorld),
					n.position.copy(i),
					a.copy(n.position),
					a.add(this._cubeDirections[e]),
					n.up.copy(this._cubeUps[e]),
					n.lookAt(a),
					n.updateMatrixWorld(),
					r.makeTranslation(-i.x, -i.y, -i.z),
					o.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
					this._frustum.setFromProjectionMatrix(o);
			},
		})),
		(Kc.prototype = Object.assign(Object.create(qc.prototype), {
			constructor: Kc,
			isPointLight: !0,
			copy: function (t) {
				return (
					qc.prototype.copy.call(this, t),
					(this.distance = t.distance),
					(this.decay = t.decay),
					(this.shadow = t.shadow.clone()),
					this
				);
			},
		})),
		($c.prototype = Object.assign(Object.create(kn.prototype), {
			constructor: $c,
			isOrthographicCamera: !0,
			copy: function (t, e) {
				return (
					kn.prototype.copy.call(this, t, e),
					(this.left = t.left),
					(this.right = t.right),
					(this.top = t.top),
					(this.bottom = t.bottom),
					(this.near = t.near),
					(this.far = t.far),
					(this.zoom = t.zoom),
					(this.view = null === t.view ? null : Object.assign({}, t.view)),
					this
				);
			},
			setViewOffset: function (t, e, n, r, i, a) {
				null === this.view &&
					(this.view = {
						enabled: !0,
						fullWidth: 1,
						fullHeight: 1,
						offsetX: 0,
						offsetY: 0,
						width: 1,
						height: 1,
					}),
					(this.view.enabled = !0),
					(this.view.fullWidth = t),
					(this.view.fullHeight = e),
					(this.view.offsetX = n),
					(this.view.offsetY = r),
					(this.view.width = i),
					(this.view.height = a),
					this.updateProjectionMatrix();
			},
			clearViewOffset: function () {
				null !== this.view && (this.view.enabled = !1),
					this.updateProjectionMatrix();
			},
			updateProjectionMatrix: function () {
				var t = (this.right - this.left) / (2 * this.zoom),
					e = (this.top - this.bottom) / (2 * this.zoom),
					n = (this.right + this.left) / 2,
					r = (this.top + this.bottom) / 2,
					i = n - t,
					a = n + t,
					o = r + e,
					s = r - e;
				if (null !== this.view && this.view.enabled) {
					var c = (this.right - this.left) / this.view.fullWidth / this.zoom,
						l = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
					(a = (i += c * this.view.offsetX) + c * this.view.width),
						(s = (o -= l * this.view.offsetY) - l * this.view.height);
				}
				this.projectionMatrix.makeOrthographic(i, a, o, s, this.near, this.far),
					this.projectionMatrixInverse.getInverse(this.projectionMatrix);
			},
			toJSON: function (t) {
				var e = be.prototype.toJSON.call(this, t);
				return (
					(e.object.zoom = this.zoom),
					(e.object.left = this.left),
					(e.object.right = this.right),
					(e.object.top = this.top),
					(e.object.bottom = this.bottom),
					(e.object.near = this.near),
					(e.object.far = this.far),
					null !== this.view && (e.object.view = Object.assign({}, this.view)),
					e
				);
			},
		})),
		(tl.prototype = Object.assign(Object.create(Yc.prototype), {
			constructor: tl,
			isDirectionalLightShadow: !0,
			updateMatrices: function (t) {
				Yc.prototype.updateMatrices.call(this, t);
			},
		})),
		(el.prototype = Object.assign(Object.create(qc.prototype), {
			constructor: el,
			isDirectionalLight: !0,
			copy: function (t) {
				return (
					qc.prototype.copy.call(this, t),
					(this.target = t.target.clone()),
					(this.shadow = t.shadow.clone()),
					this
				);
			},
		})),
		(nl.prototype = Object.assign(Object.create(qc.prototype), {
			constructor: nl,
			isAmbientLight: !0,
		})),
		(rl.prototype = Object.assign(Object.create(qc.prototype), {
			constructor: rl,
			isRectAreaLight: !0,
			copy: function (t) {
				return (
					qc.prototype.copy.call(this, t),
					(this.width = t.width),
					(this.height = t.height),
					this
				);
			},
			toJSON: function (t) {
				var e = qc.prototype.toJSON.call(this, t);
				return (
					(e.object.width = this.width), (e.object.height = this.height), e
				);
			},
		}));
	var il = (function () {
		function t() {
			Object.defineProperty(this, 'isSphericalHarmonics3', { value: !0 }),
				(this.coefficients = []);
			for (var t = 0; t < 9; t++) this.coefficients.push(new wt());
		}
		var e = t.prototype;
		return (
			(e.set = function (t) {
				for (var e = 0; e < 9; e++) this.coefficients[e].copy(t[e]);
				return this;
			}),
			(e.zero = function () {
				for (var t = 0; t < 9; t++) this.coefficients[t].set(0, 0, 0);
				return this;
			}),
			(e.getAt = function (t, e) {
				var n = t.x,
					r = t.y,
					i = t.z,
					a = this.coefficients;
				return (
					e.copy(a[0]).multiplyScalar(0.282095),
					e.addScaledVector(a[1], 0.488603 * r),
					e.addScaledVector(a[2], 0.488603 * i),
					e.addScaledVector(a[3], 0.488603 * n),
					e.addScaledVector(a[4], n * r * 1.092548),
					e.addScaledVector(a[5], r * i * 1.092548),
					e.addScaledVector(a[6], 0.315392 * (3 * i * i - 1)),
					e.addScaledVector(a[7], n * i * 1.092548),
					e.addScaledVector(a[8], 0.546274 * (n * n - r * r)),
					e
				);
			}),
			(e.getIrradianceAt = function (t, e) {
				var n = t.x,
					r = t.y,
					i = t.z,
					a = this.coefficients;
				return (
					e.copy(a[0]).multiplyScalar(0.886227),
					e.addScaledVector(a[1], 1.023328 * r),
					e.addScaledVector(a[2], 1.023328 * i),
					e.addScaledVector(a[3], 1.023328 * n),
					e.addScaledVector(a[4], 0.858086 * n * r),
					e.addScaledVector(a[5], 0.858086 * r * i),
					e.addScaledVector(a[6], 0.743125 * i * i - 0.247708),
					e.addScaledVector(a[7], 0.858086 * n * i),
					e.addScaledVector(a[8], 0.429043 * (n * n - r * r)),
					e
				);
			}),
			(e.add = function (t) {
				for (var e = 0; e < 9; e++) this.coefficients[e].add(t.coefficients[e]);
				return this;
			}),
			(e.addScaledSH = function (t, e) {
				for (var n = 0; n < 9; n++)
					this.coefficients[n].addScaledVector(t.coefficients[n], e);
				return this;
			}),
			(e.scale = function (t) {
				for (var e = 0; e < 9; e++) this.coefficients[e].multiplyScalar(t);
				return this;
			}),
			(e.lerp = function (t, e) {
				for (var n = 0; n < 9; n++)
					this.coefficients[n].lerp(t.coefficients[n], e);
				return this;
			}),
			(e.equals = function (t) {
				for (var e = 0; e < 9; e++)
					if (!this.coefficients[e].equals(t.coefficients[e])) return !1;
				return !0;
			}),
			(e.copy = function (t) {
				return this.set(t.coefficients);
			}),
			(e.clone = function () {
				return new this.constructor().copy(this);
			}),
			(e.fromArray = function (t, e) {
				void 0 === e && (e = 0);
				for (var n = this.coefficients, r = 0; r < 9; r++)
					n[r].fromArray(t, e + 3 * r);
				return this;
			}),
			(e.toArray = function (t, e) {
				void 0 === t && (t = []), void 0 === e && (e = 0);
				for (var n = this.coefficients, r = 0; r < 9; r++)
					n[r].toArray(t, e + 3 * r);
				return t;
			}),
			(t.getBasisAt = function (t, e) {
				var n = t.x,
					r = t.y,
					i = t.z;
				(e[0] = 0.282095),
					(e[1] = 0.488603 * r),
					(e[2] = 0.488603 * i),
					(e[3] = 0.488603 * n),
					(e[4] = 1.092548 * n * r),
					(e[5] = 1.092548 * r * i),
					(e[6] = 0.315392 * (3 * i * i - 1)),
					(e[7] = 1.092548 * n * i),
					(e[8] = 0.546274 * (n * n - r * r));
			}),
			t
		);
	})();
	function al(t, e) {
		qc.call(this, void 0, e),
			(this.type = 'LightProbe'),
			(this.sh = void 0 !== t ? t : new il());
	}
	function ol(t) {
		fc.call(this, t), (this.textures = {});
	}
	(al.prototype = Object.assign(Object.create(qc.prototype), {
		constructor: al,
		isLightProbe: !0,
		copy: function (t) {
			return qc.prototype.copy.call(this, t), this.sh.copy(t.sh), this;
		},
		fromJSON: function (t) {
			return (this.intensity = t.intensity), this.sh.fromArray(t.sh), this;
		},
		toJSON: function (t) {
			var e = qc.prototype.toJSON.call(this, t);
			return (e.object.sh = this.sh.toArray()), e;
		},
	})),
		(ol.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: ol,
			load: function (t, e, n, r) {
				var i = this,
					a = new vc(i.manager);
				a.setPath(i.path),
					a.setRequestHeader(i.requestHeader),
					a.setWithCredentials(i.withCredentials),
					a.load(
						t,
						function (n) {
							try {
								e(i.parse(JSON.parse(n)));
							} catch (e) {
								r ? r(e) : console.error(e), i.manager.itemError(t);
							}
						},
						n,
						r
					);
			},
			parse: function (t) {
				var e = this.textures;
				function n(t) {
					return (
						void 0 === e[t] &&
							console.warn('THREE.MaterialLoader: Undefined texture', t),
						e[t]
					);
				}
				var r = new Zs[t.type]();
				if (
					(void 0 !== t.uuid && (r.uuid = t.uuid),
					void 0 !== t.name && (r.name = t.name),
					void 0 !== t.color && r.color.setHex(t.color),
					void 0 !== t.roughness && (r.roughness = t.roughness),
					void 0 !== t.metalness && (r.metalness = t.metalness),
					void 0 !== t.sheen && (r.sheen = new Ve().setHex(t.sheen)),
					void 0 !== t.emissive && r.emissive.setHex(t.emissive),
					void 0 !== t.specular && r.specular.setHex(t.specular),
					void 0 !== t.shininess && (r.shininess = t.shininess),
					void 0 !== t.clearcoat && (r.clearcoat = t.clearcoat),
					void 0 !== t.clearcoatRoughness &&
						(r.clearcoatRoughness = t.clearcoatRoughness),
					void 0 !== t.fog && (r.fog = t.fog),
					void 0 !== t.flatShading && (r.flatShading = t.flatShading),
					void 0 !== t.blending && (r.blending = t.blending),
					void 0 !== t.combine && (r.combine = t.combine),
					void 0 !== t.side && (r.side = t.side),
					void 0 !== t.opacity && (r.opacity = t.opacity),
					void 0 !== t.transparent && (r.transparent = t.transparent),
					void 0 !== t.alphaTest && (r.alphaTest = t.alphaTest),
					void 0 !== t.depthTest && (r.depthTest = t.depthTest),
					void 0 !== t.depthWrite && (r.depthWrite = t.depthWrite),
					void 0 !== t.colorWrite && (r.colorWrite = t.colorWrite),
					void 0 !== t.stencilWrite && (r.stencilWrite = t.stencilWrite),
					void 0 !== t.stencilWriteMask &&
						(r.stencilWriteMask = t.stencilWriteMask),
					void 0 !== t.stencilFunc && (r.stencilFunc = t.stencilFunc),
					void 0 !== t.stencilRef && (r.stencilRef = t.stencilRef),
					void 0 !== t.stencilFuncMask &&
						(r.stencilFuncMask = t.stencilFuncMask),
					void 0 !== t.stencilFail && (r.stencilFail = t.stencilFail),
					void 0 !== t.stencilZFail && (r.stencilZFail = t.stencilZFail),
					void 0 !== t.stencilZPass && (r.stencilZPass = t.stencilZPass),
					void 0 !== t.wireframe && (r.wireframe = t.wireframe),
					void 0 !== t.wireframeLinewidth &&
						(r.wireframeLinewidth = t.wireframeLinewidth),
					void 0 !== t.wireframeLinecap &&
						(r.wireframeLinecap = t.wireframeLinecap),
					void 0 !== t.wireframeLinejoin &&
						(r.wireframeLinejoin = t.wireframeLinejoin),
					void 0 !== t.rotation && (r.rotation = t.rotation),
					1 !== t.linewidth && (r.linewidth = t.linewidth),
					void 0 !== t.dashSize && (r.dashSize = t.dashSize),
					void 0 !== t.gapSize && (r.gapSize = t.gapSize),
					void 0 !== t.scale && (r.scale = t.scale),
					void 0 !== t.polygonOffset && (r.polygonOffset = t.polygonOffset),
					void 0 !== t.polygonOffsetFactor &&
						(r.polygonOffsetFactor = t.polygonOffsetFactor),
					void 0 !== t.polygonOffsetUnits &&
						(r.polygonOffsetUnits = t.polygonOffsetUnits),
					void 0 !== t.skinning && (r.skinning = t.skinning),
					void 0 !== t.morphTargets && (r.morphTargets = t.morphTargets),
					void 0 !== t.morphNormals && (r.morphNormals = t.morphNormals),
					void 0 !== t.dithering && (r.dithering = t.dithering),
					void 0 !== t.vertexTangents && (r.vertexTangents = t.vertexTangents),
					void 0 !== t.visible && (r.visible = t.visible),
					void 0 !== t.toneMapped && (r.toneMapped = t.toneMapped),
					void 0 !== t.userData && (r.userData = t.userData),
					void 0 !== t.vertexColors &&
						('number' == typeof t.vertexColors
							? (r.vertexColors = t.vertexColors > 0)
							: (r.vertexColors = t.vertexColors)),
					void 0 !== t.uniforms)
				)
					for (var i in t.uniforms) {
						var a = t.uniforms[i];
						switch (((r.uniforms[i] = {}), a.type)) {
							case 't':
								r.uniforms[i].value = n(a.value);
								break;
							case 'c':
								r.uniforms[i].value = new Ve().setHex(a.value);
								break;
							case 'v2':
								r.uniforms[i].value = new pt().fromArray(a.value);
								break;
							case 'v3':
								r.uniforms[i].value = new wt().fromArray(a.value);
								break;
							case 'v4':
								r.uniforms[i].value = new yt().fromArray(a.value);
								break;
							case 'm3':
								r.uniforms[i].value = new ft().fromArray(a.value);
								break;
							case 'm4':
								r.uniforms[i].value = new Jt().fromArray(a.value);
								break;
							default:
								r.uniforms[i].value = a.value;
						}
					}
				if (
					(void 0 !== t.defines && (r.defines = t.defines),
					void 0 !== t.vertexShader && (r.vertexShader = t.vertexShader),
					void 0 !== t.fragmentShader && (r.fragmentShader = t.fragmentShader),
					void 0 !== t.extensions)
				)
					for (var o in t.extensions) r.extensions[o] = t.extensions[o];
				if (
					(void 0 !== t.shading && (r.flatShading = 1 === t.shading),
					void 0 !== t.size && (r.size = t.size),
					void 0 !== t.sizeAttenuation &&
						(r.sizeAttenuation = t.sizeAttenuation),
					void 0 !== t.map && (r.map = n(t.map)),
					void 0 !== t.matcap && (r.matcap = n(t.matcap)),
					void 0 !== t.alphaMap && (r.alphaMap = n(t.alphaMap)),
					void 0 !== t.bumpMap && (r.bumpMap = n(t.bumpMap)),
					void 0 !== t.bumpScale && (r.bumpScale = t.bumpScale),
					void 0 !== t.normalMap && (r.normalMap = n(t.normalMap)),
					void 0 !== t.normalMapType && (r.normalMapType = t.normalMapType),
					void 0 !== t.normalScale)
				) {
					var s = t.normalScale;
					!1 === Array.isArray(s) && (s = [s, s]),
						(r.normalScale = new pt().fromArray(s));
				}
				return (
					void 0 !== t.displacementMap &&
						(r.displacementMap = n(t.displacementMap)),
					void 0 !== t.displacementScale &&
						(r.displacementScale = t.displacementScale),
					void 0 !== t.displacementBias &&
						(r.displacementBias = t.displacementBias),
					void 0 !== t.roughnessMap && (r.roughnessMap = n(t.roughnessMap)),
					void 0 !== t.metalnessMap && (r.metalnessMap = n(t.metalnessMap)),
					void 0 !== t.emissiveMap && (r.emissiveMap = n(t.emissiveMap)),
					void 0 !== t.emissiveIntensity &&
						(r.emissiveIntensity = t.emissiveIntensity),
					void 0 !== t.specularMap && (r.specularMap = n(t.specularMap)),
					void 0 !== t.envMap && (r.envMap = n(t.envMap)),
					void 0 !== t.envMapIntensity &&
						(r.envMapIntensity = t.envMapIntensity),
					void 0 !== t.reflectivity && (r.reflectivity = t.reflectivity),
					void 0 !== t.refractionRatio &&
						(r.refractionRatio = t.refractionRatio),
					void 0 !== t.lightMap && (r.lightMap = n(t.lightMap)),
					void 0 !== t.lightMapIntensity &&
						(r.lightMapIntensity = t.lightMapIntensity),
					void 0 !== t.aoMap && (r.aoMap = n(t.aoMap)),
					void 0 !== t.aoMapIntensity && (r.aoMapIntensity = t.aoMapIntensity),
					void 0 !== t.gradientMap && (r.gradientMap = n(t.gradientMap)),
					void 0 !== t.clearcoatMap && (r.clearcoatMap = n(t.clearcoatMap)),
					void 0 !== t.clearcoatRoughnessMap &&
						(r.clearcoatRoughnessMap = n(t.clearcoatRoughnessMap)),
					void 0 !== t.clearcoatNormalMap &&
						(r.clearcoatNormalMap = n(t.clearcoatNormalMap)),
					void 0 !== t.clearcoatNormalScale &&
						(r.clearcoatNormalScale = new pt().fromArray(
							t.clearcoatNormalScale
						)),
					void 0 !== t.transmission && (r.transmission = t.transmission),
					void 0 !== t.transmissionMap &&
						(r.transmissionMap = n(t.transmissionMap)),
					r
				);
			},
			setTextures: function (t) {
				return (this.textures = t), this;
			},
		}));
	var sl = {
		decodeText: function (t) {
			if ('undefined' != typeof TextDecoder) return new TextDecoder().decode(t);
			for (var e = '', n = 0, r = t.length; n < r; n++)
				e += String.fromCharCode(t[n]);
			try {
				return decodeURIComponent(escape(e));
			} catch (t) {
				return e;
			}
		},
		extractUrlBase: function (t) {
			var e = t.lastIndexOf('/');
			return -1 === e ? './' : t.substr(0, e + 1);
		},
	};
	function cl() {
		vn.call(this),
			(this.type = 'InstancedBufferGeometry'),
			(this.instanceCount = 1 / 0);
	}
	function ll(t, e, n, r) {
		'number' == typeof n &&
			((r = n),
			(n = !1),
			console.error(
				'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.'
			)),
			Je.call(this, t, e, n),
			(this.meshPerAttribute = r || 1);
	}
	function ul(t) {
		fc.call(this, t);
	}
	(cl.prototype = Object.assign(Object.create(vn.prototype), {
		constructor: cl,
		isInstancedBufferGeometry: !0,
		copy: function (t) {
			return (
				vn.prototype.copy.call(this, t),
				(this.instanceCount = t.instanceCount),
				this
			);
		},
		clone: function () {
			return new this.constructor().copy(this);
		},
		toJSON: function () {
			var t = vn.prototype.toJSON.call(this);
			return (
				(t.instanceCount = this.instanceCount),
				(t.isInstancedBufferGeometry = !0),
				t
			);
		},
	})),
		(ll.prototype = Object.assign(Object.create(Je.prototype), {
			constructor: ll,
			isInstancedBufferAttribute: !0,
			copy: function (t) {
				return (
					Je.prototype.copy.call(this, t),
					(this.meshPerAttribute = t.meshPerAttribute),
					this
				);
			},
			toJSON: function () {
				var t = Je.prototype.toJSON.call(this);
				return (
					(t.meshPerAttribute = this.meshPerAttribute),
					(t.isInstancedBufferAttribute = !0),
					t
				);
			},
		})),
		(ul.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: ul,
			load: function (t, e, n, r) {
				var i = this,
					a = new vc(i.manager);
				a.setPath(i.path),
					a.setRequestHeader(i.requestHeader),
					a.setWithCredentials(i.withCredentials),
					a.load(
						t,
						function (n) {
							try {
								e(i.parse(JSON.parse(n)));
							} catch (e) {
								r ? r(e) : console.error(e), i.manager.itemError(t);
							}
						},
						n,
						r
					);
			},
			parse: function (t) {
				var e = {},
					n = {};
				function r(t, r) {
					if (void 0 !== e[r]) return e[r];
					var i = t.interleavedBuffers[r],
						a = (function (t, e) {
							if (void 0 !== n[e]) return n[e];
							var r = t.arrayBuffers[e],
								i = new Uint32Array(r).buffer;
							return (n[e] = i), i;
						})(t, i.buffer),
						o = new ca(new dl[i.type](a), i.stride);
					return (o.uuid = i.uuid), (e[r] = o), o;
				}
				var i = t.isInstancedBufferGeometry ? new cl() : new vn(),
					a = t.data.index;
				if (void 0 !== a) {
					var o = new dl[a.type](a.array);
					i.setIndex(new Je(o, 1));
				}
				var s = t.data.attributes;
				for (var c in s) {
					var l = s[c],
						u = void 0;
					if (l.isInterleavedBufferAttribute) {
						u = new ha(r(t.data, l.data), l.itemSize, l.offset, l.normalized);
					} else {
						var h = new dl[l.type](l.array);
						u = new (l.isInstancedBufferAttribute ? ll : Je)(
							h,
							l.itemSize,
							l.normalized
						);
					}
					void 0 !== l.name && (u.name = l.name), i.setAttribute(c, u);
				}
				var d = t.data.morphAttributes;
				if (d)
					for (var p in d) {
						for (var f = d[p], m = [], v = 0, g = f.length; v < g; v++) {
							var y = f[v],
								x = void 0;
							if (y.isInterleavedBufferAttribute)
								x = new ha(
									r(t.data, y.data),
									y.itemSize,
									y.offset,
									y.normalized
								);
							else
								x = new Je(new dl[y.type](y.array), y.itemSize, y.normalized);
							void 0 !== y.name && (x.name = y.name), m.push(x);
						}
						i.morphAttributes[p] = m;
					}
				t.data.morphTargetsRelative && (i.morphTargetsRelative = !0);
				var _ = t.data.groups || t.data.drawcalls || t.data.offsets;
				if (void 0 !== _)
					for (var b = 0, w = _.length; b !== w; ++b) {
						var M = _[b];
						i.addGroup(M.start, M.count, M.materialIndex);
					}
				var S = t.data.boundingSphere;
				if (void 0 !== S) {
					var T = new wt();
					void 0 !== S.center && T.fromArray(S.center),
						(i.boundingSphere = new Ht(T, S.radius));
				}
				return (
					t.name && (i.name = t.name),
					t.userData && (i.userData = t.userData),
					i
				);
			},
		}));
	var hl,
		dl = {
			Int8Array: Int8Array,
			Uint8Array: Uint8Array,
			Uint8ClampedArray:
				'undefined' != typeof Uint8ClampedArray
					? Uint8ClampedArray
					: Uint8Array,
			Int16Array: Int16Array,
			Uint16Array: Uint16Array,
			Int32Array: Int32Array,
			Uint32Array: Uint32Array,
			Float32Array: Float32Array,
			Float64Array: Float64Array,
		},
		pl = (function (t) {
			function e(e) {
				return t.call(this, e) || this;
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.load = function (t, e, n, r) {
					var i = this,
						a = '' === this.path ? sl.extractUrlBase(t) : this.path;
					this.resourcePath = this.resourcePath || a;
					var o = new vc(this.manager);
					o.setPath(this.path),
						o.setRequestHeader(this.requestHeader),
						o.setWithCredentials(this.withCredentials),
						o.load(
							t,
							function (n) {
								var a = null;
								try {
									a = JSON.parse(n);
								} catch (e) {
									return (
										void 0 !== r && r(e),
										void console.error(
											"THREE:ObjectLoader: Can't parse " + t + '.',
											e.message
										)
									);
								}
								var o = a.metadata;
								void 0 !== o &&
								void 0 !== o.type &&
								'geometry' !== o.type.toLowerCase()
									? i.parse(a, e)
									: console.error("THREE.ObjectLoader: Can't load " + t);
							},
							n,
							r
						);
				}),
				(n.parse = function (t, e) {
					var n = this.parseShape(t.shapes),
						r = this.parseGeometries(t.geometries, n),
						i = this.parseImages(t.images, function () {
							void 0 !== e && e(s);
						}),
						a = this.parseTextures(t.textures, i),
						o = this.parseMaterials(t.materials, a),
						s = this.parseObject(t.object, r, o);
					return (
						t.animations && (s.animations = this.parseAnimations(t.animations)),
						(void 0 !== t.images && 0 !== t.images.length) ||
							(void 0 !== e && e(s)),
						s
					);
				}),
				(n.parseShape = function (t) {
					var e = {};
					if (void 0 !== t)
						for (var n = 0, r = t.length; n < r; n++) {
							var i = new jc().fromJSON(t[n]);
							e[i.uuid] = i;
						}
					return e;
				}),
				(n.parseGeometries = function (t, e) {
					var n,
						r = {};
					if (void 0 !== t)
						for (var i = new ul(), a = 0, o = t.length; a < o; a++) {
							var s = void 0,
								c = t[a];
							switch (c.type) {
								case 'PlaneGeometry':
								case 'PlaneBufferGeometry':
									s = new Gs[c.type](
										c.width,
										c.height,
										c.widthSegments,
										c.heightSegments
									);
									break;
								case 'BoxGeometry':
								case 'BoxBufferGeometry':
								case 'CubeGeometry':
									s = new Gs[c.type](
										c.width,
										c.height,
										c.depth,
										c.widthSegments,
										c.heightSegments,
										c.depthSegments
									);
									break;
								case 'CircleGeometry':
								case 'CircleBufferGeometry':
									s = new Gs[c.type](
										c.radius,
										c.segments,
										c.thetaStart,
										c.thetaLength
									);
									break;
								case 'CylinderGeometry':
								case 'CylinderBufferGeometry':
									s = new Gs[c.type](
										c.radiusTop,
										c.radiusBottom,
										c.height,
										c.radialSegments,
										c.heightSegments,
										c.openEnded,
										c.thetaStart,
										c.thetaLength
									);
									break;
								case 'ConeGeometry':
								case 'ConeBufferGeometry':
									s = new Gs[c.type](
										c.radius,
										c.height,
										c.radialSegments,
										c.heightSegments,
										c.openEnded,
										c.thetaStart,
										c.thetaLength
									);
									break;
								case 'SphereGeometry':
								case 'SphereBufferGeometry':
									s = new Gs[c.type](
										c.radius,
										c.widthSegments,
										c.heightSegments,
										c.phiStart,
										c.phiLength,
										c.thetaStart,
										c.thetaLength
									);
									break;
								case 'DodecahedronGeometry':
								case 'DodecahedronBufferGeometry':
								case 'IcosahedronGeometry':
								case 'IcosahedronBufferGeometry':
								case 'OctahedronGeometry':
								case 'OctahedronBufferGeometry':
								case 'TetrahedronGeometry':
								case 'TetrahedronBufferGeometry':
									s = new Gs[c.type](c.radius, c.detail);
									break;
								case 'RingGeometry':
								case 'RingBufferGeometry':
									s = new Gs[c.type](
										c.innerRadius,
										c.outerRadius,
										c.thetaSegments,
										c.phiSegments,
										c.thetaStart,
										c.thetaLength
									);
									break;
								case 'TorusGeometry':
								case 'TorusBufferGeometry':
									s = new Gs[c.type](
										c.radius,
										c.tube,
										c.radialSegments,
										c.tubularSegments,
										c.arc
									);
									break;
								case 'TorusKnotGeometry':
								case 'TorusKnotBufferGeometry':
									s = new Gs[c.type](
										c.radius,
										c.tube,
										c.tubularSegments,
										c.radialSegments,
										c.p,
										c.q
									);
									break;
								case 'TubeGeometry':
								case 'TubeBufferGeometry':
									s = new Gs[c.type](
										new kc[c.path.type]().fromJSON(c.path),
										c.tubularSegments,
										c.radius,
										c.radialSegments,
										c.closed
									);
									break;
								case 'LatheGeometry':
								case 'LatheBufferGeometry':
									s = new Gs[c.type](
										c.points,
										c.segments,
										c.phiStart,
										c.phiLength
									);
									break;
								case 'PolyhedronGeometry':
								case 'PolyhedronBufferGeometry':
									s = new Gs[c.type](
										c.vertices,
										c.indices,
										c.radius,
										c.details
									);
									break;
								case 'ShapeGeometry':
								case 'ShapeBufferGeometry':
									n = [];
									for (var l = 0, u = c.shapes.length; l < u; l++) {
										var h = e[c.shapes[l]];
										n.push(h);
									}
									s = new Gs[c.type](n, c.curveSegments);
									break;
								case 'ExtrudeGeometry':
								case 'ExtrudeBufferGeometry':
									n = [];
									for (var d = 0, p = c.shapes.length; d < p; d++) {
										var f = e[c.shapes[d]];
										n.push(f);
									}
									var m = c.options.extrudePath;
									void 0 !== m &&
										(c.options.extrudePath = new kc[m.type]().fromJSON(m)),
										(s = new Gs[c.type](n, c.options));
									break;
								case 'BufferGeometry':
								case 'InstancedBufferGeometry':
									s = i.parse(c);
									break;
								case 'Geometry':
									console.error(
										'THREE.ObjectLoader: Loading "Geometry" is not supported anymore.'
									);
									break;
								default:
									console.warn(
										'THREE.ObjectLoader: Unsupported geometry type "' +
											c.type +
											'"'
									);
									continue;
							}
							(s.uuid = c.uuid),
								void 0 !== c.name && (s.name = c.name),
								!0 === s.isBufferGeometry &&
									void 0 !== c.userData &&
									(s.userData = c.userData),
								(r[c.uuid] = s);
						}
					return r;
				}),
				(n.parseMaterials = function (t, e) {
					var n = {},
						r = {};
					if (void 0 !== t) {
						var i = new ol();
						i.setTextures(e);
						for (var a = 0, o = t.length; a < o; a++) {
							var s = t[a];
							if ('MultiMaterial' === s.type) {
								for (var c = [], l = 0; l < s.materials.length; l++) {
									var u = s.materials[l];
									void 0 === n[u.uuid] && (n[u.uuid] = i.parse(u)),
										c.push(n[u.uuid]);
								}
								r[s.uuid] = c;
							} else
								void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)),
									(r[s.uuid] = n[s.uuid]);
						}
					}
					return r;
				}),
				(n.parseAnimations = function (t) {
					for (var e = [], n = 0; n < t.length; n++) {
						var r = t[n],
							i = lc.parse(r);
						void 0 !== r.uuid && (i.uuid = r.uuid), e.push(i);
					}
					return e;
				}),
				(n.parseImages = function (t, e) {
					var n,
						r = this,
						i = {};
					function a(t) {
						return (
							r.manager.itemStart(t),
							n.load(
								t,
								function () {
									r.manager.itemEnd(t);
								},
								void 0,
								function () {
									r.manager.itemError(t), r.manager.itemEnd(t);
								}
							)
						);
					}
					if (void 0 !== t && t.length > 0) {
						var o = new dc(e);
						(n = new xc(o)).setCrossOrigin(this.crossOrigin);
						for (var s = 0, c = t.length; s < c; s++) {
							var l = t[s],
								u = l.url;
							if (Array.isArray(u)) {
								i[l.uuid] = [];
								for (var h = 0, d = u.length; h < d; h++) {
									var p = u[h],
										f = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(p)
											? p
											: r.resourcePath + p;
									i[l.uuid].push(a(f));
								}
							} else {
								var m = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)
									? l.url
									: r.resourcePath + l.url;
								i[l.uuid] = a(m);
							}
						}
					}
					return i;
				}),
				(n.parseTextures = function (t, e) {
					function n(t, e) {
						return 'number' == typeof t
							? t
							: (console.warn(
									'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',
									t
							  ),
							  e[t]);
					}
					var r = {};
					if (void 0 !== t)
						for (var i = 0, a = t.length; i < a; i++) {
							var o = t[i];
							void 0 === o.image &&
								console.warn(
									'THREE.ObjectLoader: No "image" specified for',
									o.uuid
								),
								void 0 === e[o.image] &&
									console.warn('THREE.ObjectLoader: Undefined image', o.image);
							var s = void 0;
							((s = Array.isArray(e[o.image])
								? new qn(e[o.image])
								: new gt(e[o.image])).needsUpdate = !0),
								(s.uuid = o.uuid),
								void 0 !== o.name && (s.name = o.name),
								void 0 !== o.mapping && (s.mapping = n(o.mapping, fl)),
								void 0 !== o.offset && s.offset.fromArray(o.offset),
								void 0 !== o.repeat && s.repeat.fromArray(o.repeat),
								void 0 !== o.center && s.center.fromArray(o.center),
								void 0 !== o.rotation && (s.rotation = o.rotation),
								void 0 !== o.wrap &&
									((s.wrapS = n(o.wrap[0], ml)), (s.wrapT = n(o.wrap[1], ml))),
								void 0 !== o.format && (s.format = o.format),
								void 0 !== o.type && (s.type = o.type),
								void 0 !== o.encoding && (s.encoding = o.encoding),
								void 0 !== o.minFilter && (s.minFilter = n(o.minFilter, vl)),
								void 0 !== o.magFilter && (s.magFilter = n(o.magFilter, vl)),
								void 0 !== o.anisotropy && (s.anisotropy = o.anisotropy),
								void 0 !== o.flipY && (s.flipY = o.flipY),
								void 0 !== o.premultiplyAlpha &&
									(s.premultiplyAlpha = o.premultiplyAlpha),
								void 0 !== o.unpackAlignment &&
									(s.unpackAlignment = o.unpackAlignment),
								(r[o.uuid] = s);
						}
					return r;
				}),
				(n.parseObject = function (t, e, n) {
					var r, i, a;
					function o(t) {
						return (
							void 0 === e[t] &&
								console.warn('THREE.ObjectLoader: Undefined geometry', t),
							e[t]
						);
					}
					function s(t) {
						if (void 0 !== t) {
							if (Array.isArray(t)) {
								for (var e = [], r = 0, i = t.length; r < i; r++) {
									var a = t[r];
									void 0 === n[a] &&
										console.warn('THREE.ObjectLoader: Undefined material', a),
										e.push(n[a]);
								}
								return e;
							}
							return (
								void 0 === n[t] &&
									console.warn('THREE.ObjectLoader: Undefined material', t),
								n[t]
							);
						}
					}
					switch (t.type) {
						case 'Scene':
							(r = new sa()),
								void 0 !== t.background &&
									Number.isInteger(t.background) &&
									(r.background = new Ve(t.background)),
								void 0 !== t.fog &&
									('Fog' === t.fog.type
										? (r.fog = new oa(t.fog.color, t.fog.near, t.fog.far))
										: 'FogExp2' === t.fog.type &&
										  (r.fog = new aa(t.fog.color, t.fog.density)));
							break;
						case 'PerspectiveCamera':
							(r = new Vn(t.fov, t.aspect, t.near, t.far)),
								void 0 !== t.focus && (r.focus = t.focus),
								void 0 !== t.zoom && (r.zoom = t.zoom),
								void 0 !== t.filmGauge && (r.filmGauge = t.filmGauge),
								void 0 !== t.filmOffset && (r.filmOffset = t.filmOffset),
								void 0 !== t.view && (r.view = Object.assign({}, t.view));
							break;
						case 'OrthographicCamera':
							(r = new $c(t.left, t.right, t.top, t.bottom, t.near, t.far)),
								void 0 !== t.zoom && (r.zoom = t.zoom),
								void 0 !== t.view && (r.view = Object.assign({}, t.view));
							break;
						case 'AmbientLight':
							r = new nl(t.color, t.intensity);
							break;
						case 'DirectionalLight':
							r = new el(t.color, t.intensity);
							break;
						case 'PointLight':
							r = new Kc(t.color, t.intensity, t.distance, t.decay);
							break;
						case 'RectAreaLight':
							r = new rl(t.color, t.intensity, t.width, t.height);
							break;
						case 'SpotLight':
							r = new Jc(
								t.color,
								t.intensity,
								t.distance,
								t.angle,
								t.penumbra,
								t.decay
							);
							break;
						case 'HemisphereLight':
							r = new Xc(t.color, t.groundColor, t.intensity);
							break;
						case 'LightProbe':
							r = new al().fromJSON(t);
							break;
						case 'SkinnedMesh':
							console.warn(
								'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.'
							);
						case 'Mesh':
							r = new Nn((i = o(t.geometry)), (a = s(t.material)));
							break;
						case 'InstancedMesh':
							(i = o(t.geometry)), (a = s(t.material));
							var c = t.count,
								l = t.instanceMatrix;
							(r = new Wa(i, a, c)).instanceMatrix = new Je(
								new Float32Array(l.array),
								16
							);
							break;
						case 'LOD':
							r = new Na();
							break;
						case 'Line':
							r = new Qa(o(t.geometry), s(t.material), t.mode);
							break;
						case 'LineLoop':
							r = new eo(o(t.geometry), s(t.material));
							break;
						case 'LineSegments':
							r = new to(o(t.geometry), s(t.material));
							break;
						case 'PointCloud':
						case 'Points':
							r = new so(o(t.geometry), s(t.material));
							break;
						case 'Sprite':
							r = new Ta(s(t.material));
							break;
						case 'Group':
							r = new $i();
							break;
						default:
							r = new be();
					}
					if (
						((r.uuid = t.uuid),
						void 0 !== t.name && (r.name = t.name),
						void 0 !== t.matrix
							? (r.matrix.fromArray(t.matrix),
							  void 0 !== t.matrixAutoUpdate &&
									(r.matrixAutoUpdate = t.matrixAutoUpdate),
							  r.matrixAutoUpdate &&
									r.matrix.decompose(r.position, r.quaternion, r.scale))
							: (void 0 !== t.position && r.position.fromArray(t.position),
							  void 0 !== t.rotation && r.rotation.fromArray(t.rotation),
							  void 0 !== t.quaternion && r.quaternion.fromArray(t.quaternion),
							  void 0 !== t.scale && r.scale.fromArray(t.scale)),
						void 0 !== t.castShadow && (r.castShadow = t.castShadow),
						void 0 !== t.receiveShadow && (r.receiveShadow = t.receiveShadow),
						t.shadow &&
							(void 0 !== t.shadow.bias && (r.shadow.bias = t.shadow.bias),
							void 0 !== t.shadow.normalBias &&
								(r.shadow.normalBias = t.shadow.normalBias),
							void 0 !== t.shadow.radius && (r.shadow.radius = t.shadow.radius),
							void 0 !== t.shadow.mapSize &&
								r.shadow.mapSize.fromArray(t.shadow.mapSize),
							void 0 !== t.shadow.camera &&
								(r.shadow.camera = this.parseObject(t.shadow.camera))),
						void 0 !== t.visible && (r.visible = t.visible),
						void 0 !== t.frustumCulled && (r.frustumCulled = t.frustumCulled),
						void 0 !== t.renderOrder && (r.renderOrder = t.renderOrder),
						void 0 !== t.userData && (r.userData = t.userData),
						void 0 !== t.layers && (r.layers.mask = t.layers),
						void 0 !== t.children)
					)
						for (var u = t.children, h = 0; h < u.length; h++)
							r.add(this.parseObject(u[h], e, n));
					if ('LOD' === t.type) {
						void 0 !== t.autoUpdate && (r.autoUpdate = t.autoUpdate);
						for (var d = t.levels, p = 0; p < d.length; p++) {
							var f = d[p],
								m = r.getObjectByProperty('uuid', f.object);
							void 0 !== m && r.addLevel(m, f.distance);
						}
					}
					return r;
				}),
				(n.setTexturePath = function (t) {
					return (
						console.warn(
							'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().'
						),
						this.setResourcePath(t)
					);
				}),
				e
			);
		})(fc),
		fl = {
			UVMapping: n,
			CubeReflectionMapping: r,
			CubeRefractionMapping: i,
			EquirectangularReflectionMapping: a,
			EquirectangularRefractionMapping: o,
			CubeUVReflectionMapping: s,
			CubeUVRefractionMapping: c,
		},
		ml = {
			RepeatWrapping: l,
			ClampToEdgeWrapping: u,
			MirroredRepeatWrapping: h,
		},
		vl = {
			NearestFilter: d,
			NearestMipmapNearestFilter: p,
			NearestMipmapLinearFilter: f,
			LinearFilter: m,
			LinearMipmapNearestFilter: v,
			LinearMipmapLinearFilter: g,
		};
	function gl(t) {
		'undefined' == typeof createImageBitmap &&
			console.warn(
				'THREE.ImageBitmapLoader: createImageBitmap() not supported.'
			),
			'undefined' == typeof fetch &&
				console.warn('THREE.ImageBitmapLoader: fetch() not supported.'),
			fc.call(this, t),
			(this.options = { premultiplyAlpha: 'none' });
	}
	function yl() {
		(this.type = 'ShapePath'),
			(this.color = new Ve()),
			(this.subPaths = []),
			(this.currentPath = null);
	}
	function xl(t) {
		(this.type = 'Font'), (this.data = t);
	}
	function _l(t, e, n, r, i) {
		var a = i.glyphs[t] || i.glyphs['?'];
		if (a) {
			var o,
				s,
				c,
				l,
				u,
				h,
				d,
				p,
				f = new yl();
			if (a.o)
				for (
					var m = a._cachedOutline || (a._cachedOutline = a.o.split(' ')),
						v = 0,
						g = m.length;
					v < g;

				) {
					switch (m[v++]) {
						case 'm':
							(o = m[v++] * e + n), (s = m[v++] * e + r), f.moveTo(o, s);
							break;
						case 'l':
							(o = m[v++] * e + n), (s = m[v++] * e + r), f.lineTo(o, s);
							break;
						case 'q':
							(c = m[v++] * e + n),
								(l = m[v++] * e + r),
								(u = m[v++] * e + n),
								(h = m[v++] * e + r),
								f.quadraticCurveTo(u, h, c, l);
							break;
						case 'b':
							(c = m[v++] * e + n),
								(l = m[v++] * e + r),
								(u = m[v++] * e + n),
								(h = m[v++] * e + r),
								(d = m[v++] * e + n),
								(p = m[v++] * e + r),
								f.bezierCurveTo(u, h, d, p, c, l);
					}
				}
			return { offsetX: a.ha * e, path: f };
		}
		console.error(
			'THREE.Font: character "' +
				t +
				'" does not exists in font family ' +
				i.familyName +
				'.'
		);
	}
	function bl(t) {
		fc.call(this, t);
	}
	(gl.prototype = Object.assign(Object.create(fc.prototype), {
		constructor: gl,
		isImageBitmapLoader: !0,
		setOptions: function (t) {
			return (this.options = t), this;
		},
		load: function (t, e, n, r) {
			void 0 === t && (t = ''),
				void 0 !== this.path && (t = this.path + t),
				(t = this.manager.resolveURL(t));
			var i = this,
				a = hc.get(t);
			if (void 0 !== a)
				return (
					i.manager.itemStart(t),
					setTimeout(function () {
						e && e(a), i.manager.itemEnd(t);
					}, 0),
					a
				);
			var o = {};
			(o.credentials =
				'anonymous' === this.crossOrigin ? 'same-origin' : 'include'),
				fetch(t, o)
					.then(function (t) {
						return t.blob();
					})
					.then(function (t) {
						return createImageBitmap(t, i.options);
					})
					.then(function (n) {
						hc.add(t, n), e && e(n), i.manager.itemEnd(t);
					})
					.catch(function (e) {
						r && r(e), i.manager.itemError(t), i.manager.itemEnd(t);
					}),
				i.manager.itemStart(t);
		},
	})),
		Object.assign(yl.prototype, {
			moveTo: function (t, e) {
				return (
					(this.currentPath = new Wc()),
					this.subPaths.push(this.currentPath),
					this.currentPath.moveTo(t, e),
					this
				);
			},
			lineTo: function (t, e) {
				return this.currentPath.lineTo(t, e), this;
			},
			quadraticCurveTo: function (t, e, n, r) {
				return this.currentPath.quadraticCurveTo(t, e, n, r), this;
			},
			bezierCurveTo: function (t, e, n, r, i, a) {
				return this.currentPath.bezierCurveTo(t, e, n, r, i, a), this;
			},
			splineThru: function (t) {
				return this.currentPath.splineThru(t), this;
			},
			toShapes: function (t, e) {
				function n(t) {
					for (var e = [], n = 0, r = t.length; n < r; n++) {
						var i = t[n],
							a = new jc();
						(a.curves = i.curves), e.push(a);
					}
					return e;
				}
				function r(t, e) {
					for (var n = e.length, r = !1, i = n - 1, a = 0; a < n; i = a++) {
						var o = e[i],
							s = e[a],
							c = s.x - o.x,
							l = s.y - o.y;
						if (Math.abs(l) > Number.EPSILON) {
							if (
								(l < 0 && ((o = e[a]), (c = -c), (s = e[i]), (l = -l)),
								t.y < o.y || t.y > s.y)
							)
								continue;
							if (t.y === o.y) {
								if (t.x === o.x) return !0;
							} else {
								var u = l * (t.x - o.x) - c * (t.y - o.y);
								if (0 === u) return !0;
								if (u < 0) continue;
								r = !r;
							}
						} else {
							if (t.y !== o.y) continue;
							if ((s.x <= t.x && t.x <= o.x) || (o.x <= t.x && t.x <= s.x))
								return !0;
						}
					}
					return r;
				}
				var i,
					a,
					o,
					s = as.isClockWise,
					c = this.subPaths;
				if (0 === c.length) return [];
				if (!0 === e) return n(c);
				var l = [];
				if (1 === c.length)
					return (a = c[0]), ((o = new jc()).curves = a.curves), l.push(o), l;
				var u = !s(c[0].getPoints());
				u = t ? !u : u;
				var h,
					d,
					p = [],
					f = [],
					m = [],
					v = 0;
				(f[v] = void 0), (m[v] = []);
				for (var g = 0, y = c.length; g < y; g++)
					(i = s((h = (a = c[g]).getPoints()))),
						(i = t ? !i : i)
							? (!u && f[v] && v++,
							  (f[v] = { s: new jc(), p: h }),
							  (f[v].s.curves = a.curves),
							  u && v++,
							  (m[v] = []))
							: m[v].push({ h: a, p: h[0] });
				if (!f[0]) return n(c);
				if (f.length > 1) {
					for (var x = !1, _ = [], b = 0, w = f.length; b < w; b++) p[b] = [];
					for (var M = 0, S = f.length; M < S; M++)
						for (var T = m[M], E = 0; E < T.length; E++) {
							for (var A = T[E], L = !0, R = 0; R < f.length; R++)
								r(A.p, f[R].p) &&
									(M !== R && _.push({ froms: M, tos: R, hole: E }),
									L ? ((L = !1), p[R].push(A)) : (x = !0));
							L && p[M].push(A);
						}
					_.length > 0 && (x || (m = p));
				}
				for (var C = 0, P = f.length; C < P; C++) {
					(o = f[C].s), l.push(o);
					for (var I = 0, D = (d = m[C]).length; I < D; I++)
						o.holes.push(d[I].h);
				}
				return l;
			},
		}),
		Object.assign(xl.prototype, {
			isFont: !0,
			generateShapes: function (t, e) {
				void 0 === e && (e = 100);
				for (
					var n = [],
						r = (function (t, e, n) {
							for (
								var r = Array.from ? Array.from(t) : String(t).split(''),
									i = e / n.resolution,
									a =
										(n.boundingBox.yMax -
											n.boundingBox.yMin +
											n.underlineThickness) *
										i,
									o = [],
									s = 0,
									c = 0,
									l = 0;
								l < r.length;
								l++
							) {
								var u = r[l];
								if ('\n' === u) (s = 0), (c -= a);
								else {
									var h = _l(u, i, s, c, n);
									(s += h.offsetX), o.push(h.path);
								}
							}
							return o;
						})(t, e, this.data),
						i = 0,
						a = r.length;
					i < a;
					i++
				)
					Array.prototype.push.apply(n, r[i].toShapes());
				return n;
			},
		}),
		(bl.prototype = Object.assign(Object.create(fc.prototype), {
			constructor: bl,
			load: function (t, e, n, r) {
				var i = this,
					a = new vc(this.manager);
				a.setPath(this.path),
					a.setRequestHeader(this.requestHeader),
					a.setWithCredentials(i.withCredentials),
					a.load(
						t,
						function (t) {
							var n;
							try {
								n = JSON.parse(t);
							} catch (e) {
								console.warn(
									'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.'
								),
									(n = JSON.parse(t.substring(65, t.length - 2)));
							}
							var r = i.parse(n);
							e && e(r);
						},
						n,
						r
					);
			},
			parse: function (t) {
				return new xl(t);
			},
		}));
	var wl = {
		getContext: function () {
			return (
				void 0 === hl &&
					(hl = new (window.AudioContext || window.webkitAudioContext)()),
				hl
			);
		},
		setContext: function (t) {
			hl = t;
		},
	};
	function Ml(t) {
		fc.call(this, t);
	}
	function Sl(t, e, n) {
		al.call(this, void 0, n);
		var r = new Ve().set(t),
			i = new Ve().set(e),
			a = new wt(r.r, r.g, r.b),
			o = new wt(i.r, i.g, i.b),
			s = Math.sqrt(Math.PI),
			c = s * Math.sqrt(0.75);
		this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),
			this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c);
	}
	function Tl(t, e) {
		al.call(this, void 0, e);
		var n = new Ve().set(t);
		this.sh.coefficients[0]
			.set(n.r, n.g, n.b)
			.multiplyScalar(2 * Math.sqrt(Math.PI));
	}
	(Ml.prototype = Object.assign(Object.create(fc.prototype), {
		constructor: Ml,
		load: function (t, e, n, r) {
			var i = this,
				a = new vc(i.manager);
			a.setResponseType('arraybuffer'),
				a.setPath(i.path),
				a.setRequestHeader(i.requestHeader),
				a.setWithCredentials(i.withCredentials),
				a.load(
					t,
					function (n) {
						try {
							var a = n.slice(0);
							wl.getContext().decodeAudioData(a, function (t) {
								e(t);
							});
						} catch (e) {
							r ? r(e) : console.error(e), i.manager.itemError(t);
						}
					},
					n,
					r
				);
		},
	})),
		(Sl.prototype = Object.assign(Object.create(al.prototype), {
			constructor: Sl,
			isHemisphereLightProbe: !0,
			copy: function (t) {
				return al.prototype.copy.call(this, t), this;
			},
			toJSON: function (t) {
				return al.prototype.toJSON.call(this, t);
			},
		})),
		(Tl.prototype = Object.assign(Object.create(al.prototype), {
			constructor: Tl,
			isAmbientLightProbe: !0,
			copy: function (t) {
				return al.prototype.copy.call(this, t), this;
			},
			toJSON: function (t) {
				return al.prototype.toJSON.call(this, t);
			},
		}));
	var El = new Jt(),
		Al = new Jt();
	function Ll() {
		(this.type = 'StereoCamera'),
			(this.aspect = 1),
			(this.eyeSep = 0.064),
			(this.cameraL = new Vn()),
			this.cameraL.layers.enable(1),
			(this.cameraL.matrixAutoUpdate = !1),
			(this.cameraR = new Vn()),
			this.cameraR.layers.enable(2),
			(this.cameraR.matrixAutoUpdate = !1),
			(this._cache = {
				focus: null,
				fov: null,
				aspect: null,
				near: null,
				far: null,
				zoom: null,
				eyeSep: null,
			});
	}
	Object.assign(Ll.prototype, {
		update: function (t) {
			var e = this._cache;
			if (
				e.focus !== t.focus ||
				e.fov !== t.fov ||
				e.aspect !== t.aspect * this.aspect ||
				e.near !== t.near ||
				e.far !== t.far ||
				e.zoom !== t.zoom ||
				e.eyeSep !== this.eyeSep
			) {
				(e.focus = t.focus),
					(e.fov = t.fov),
					(e.aspect = t.aspect * this.aspect),
					(e.near = t.near),
					(e.far = t.far),
					(e.zoom = t.zoom),
					(e.eyeSep = this.eyeSep);
				var n,
					r,
					i = t.projectionMatrix.clone(),
					a = e.eyeSep / 2,
					o = (a * e.near) / e.focus,
					s = (e.near * Math.tan(st.DEG2RAD * e.fov * 0.5)) / e.zoom;
				(Al.elements[12] = -a),
					(El.elements[12] = a),
					(n = -s * e.aspect + o),
					(r = s * e.aspect + o),
					(i.elements[0] = (2 * e.near) / (r - n)),
					(i.elements[8] = (r + n) / (r - n)),
					this.cameraL.projectionMatrix.copy(i),
					(n = -s * e.aspect - o),
					(r = s * e.aspect - o),
					(i.elements[0] = (2 * e.near) / (r - n)),
					(i.elements[8] = (r + n) / (r - n)),
					this.cameraR.projectionMatrix.copy(i);
			}
			this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Al),
				this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(El);
		},
	});
	var Rl = (function () {
			function t(t) {
				(this.autoStart = void 0 === t || t),
					(this.startTime = 0),
					(this.oldTime = 0),
					(this.elapsedTime = 0),
					(this.running = !1);
			}
			var e = t.prototype;
			return (
				(e.start = function () {
					(this.startTime = (
						'undefined' == typeof performance ? Date : performance
					).now()),
						(this.oldTime = this.startTime),
						(this.elapsedTime = 0),
						(this.running = !0);
				}),
				(e.stop = function () {
					this.getElapsedTime(), (this.running = !1), (this.autoStart = !1);
				}),
				(e.getElapsedTime = function () {
					return this.getDelta(), this.elapsedTime;
				}),
				(e.getDelta = function () {
					var t = 0;
					if (this.autoStart && !this.running) return this.start(), 0;
					if (this.running) {
						var e = (
							'undefined' == typeof performance ? Date : performance
						).now();
						(t = (e - this.oldTime) / 1e3),
							(this.oldTime = e),
							(this.elapsedTime += t);
					}
					return t;
				}),
				t
			);
		})(),
		Cl = new wt(),
		Pl = new bt(),
		Il = new wt(),
		Dl = new wt(),
		Nl = (function (t) {
			function e() {
				var e;
				return (
					((e = t.call(this) || this).type = 'AudioListener'),
					(e.context = wl.getContext()),
					(e.gain = e.context.createGain()),
					e.gain.connect(e.context.destination),
					(e.filter = null),
					(e.timeDelta = 0),
					(e._clock = new Rl()),
					e
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.getInput = function () {
					return this.gain;
				}),
				(n.removeFilter = function () {
					return (
						null !== this.filter &&
							(this.gain.disconnect(this.filter),
							this.filter.disconnect(this.context.destination),
							this.gain.connect(this.context.destination),
							(this.filter = null)),
						this
					);
				}),
				(n.getFilter = function () {
					return this.filter;
				}),
				(n.setFilter = function (t) {
					return (
						null !== this.filter
							? (this.gain.disconnect(this.filter),
							  this.filter.disconnect(this.context.destination))
							: this.gain.disconnect(this.context.destination),
						(this.filter = t),
						this.gain.connect(this.filter),
						this.filter.connect(this.context.destination),
						this
					);
				}),
				(n.getMasterVolume = function () {
					return this.gain.gain.value;
				}),
				(n.setMasterVolume = function (t) {
					return (
						this.gain.gain.setTargetAtTime(t, this.context.currentTime, 0.01),
						this
					);
				}),
				(n.updateMatrixWorld = function (e) {
					t.prototype.updateMatrixWorld.call(this, e);
					var n = this.context.listener,
						r = this.up;
					if (
						((this.timeDelta = this._clock.getDelta()),
						this.matrixWorld.decompose(Cl, Pl, Il),
						Dl.set(0, 0, -1).applyQuaternion(Pl),
						n.positionX)
					) {
						var i = this.context.currentTime + this.timeDelta;
						n.positionX.linearRampToValueAtTime(Cl.x, i),
							n.positionY.linearRampToValueAtTime(Cl.y, i),
							n.positionZ.linearRampToValueAtTime(Cl.z, i),
							n.forwardX.linearRampToValueAtTime(Dl.x, i),
							n.forwardY.linearRampToValueAtTime(Dl.y, i),
							n.forwardZ.linearRampToValueAtTime(Dl.z, i),
							n.upX.linearRampToValueAtTime(r.x, i),
							n.upY.linearRampToValueAtTime(r.y, i),
							n.upZ.linearRampToValueAtTime(r.z, i);
					} else
						n.setPosition(Cl.x, Cl.y, Cl.z),
							n.setOrientation(Dl.x, Dl.y, Dl.z, r.x, r.y, r.z);
				}),
				e
			);
		})(be),
		Ol = (function (t) {
			function e(e) {
				var n;
				return (
					((n = t.call(this) || this).type = 'Audio'),
					(n.listener = e),
					(n.context = e.context),
					(n.gain = n.context.createGain()),
					n.gain.connect(e.getInput()),
					(n.autoplay = !1),
					(n.buffer = null),
					(n.detune = 0),
					(n.loop = !1),
					(n.loopStart = 0),
					(n.loopEnd = 0),
					(n.offset = 0),
					(n.duration = void 0),
					(n.playbackRate = 1),
					(n.isPlaying = !1),
					(n.hasPlaybackControl = !0),
					(n.source = null),
					(n.sourceType = 'empty'),
					(n._startedAt = 0),
					(n._progress = 0),
					(n._connected = !1),
					(n.filters = []),
					n
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.getOutput = function () {
					return this.gain;
				}),
				(n.setNodeSource = function (t) {
					return (
						(this.hasPlaybackControl = !1),
						(this.sourceType = 'audioNode'),
						(this.source = t),
						this.connect(),
						this
					);
				}),
				(n.setMediaElementSource = function (t) {
					return (
						(this.hasPlaybackControl = !1),
						(this.sourceType = 'mediaNode'),
						(this.source = this.context.createMediaElementSource(t)),
						this.connect(),
						this
					);
				}),
				(n.setMediaStreamSource = function (t) {
					return (
						(this.hasPlaybackControl = !1),
						(this.sourceType = 'mediaStreamNode'),
						(this.source = this.context.createMediaStreamSource(t)),
						this.connect(),
						this
					);
				}),
				(n.setBuffer = function (t) {
					return (
						(this.buffer = t),
						(this.sourceType = 'buffer'),
						this.autoplay && this.play(),
						this
					);
				}),
				(n.play = function (t) {
					if ((void 0 === t && (t = 0), !0 !== this.isPlaying)) {
						if (!1 !== this.hasPlaybackControl) {
							this._startedAt = this.context.currentTime + t;
							var e = this.context.createBufferSource();
							return (
								(e.buffer = this.buffer),
								(e.loop = this.loop),
								(e.loopStart = this.loopStart),
								(e.loopEnd = this.loopEnd),
								(e.onended = this.onEnded.bind(this)),
								e.start(
									this._startedAt,
									this._progress + this.offset,
									this.duration
								),
								(this.isPlaying = !0),
								(this.source = e),
								this.setDetune(this.detune),
								this.setPlaybackRate(this.playbackRate),
								this.connect()
							);
						}
						console.warn('THREE.Audio: this Audio has no playback control.');
					} else console.warn('THREE.Audio: Audio is already playing.');
				}),
				(n.pause = function () {
					if (!1 !== this.hasPlaybackControl)
						return (
							!0 === this.isPlaying &&
								((this._progress +=
									Math.max(this.context.currentTime - this._startedAt, 0) *
									this.playbackRate),
								!0 === this.loop &&
									(this._progress =
										this._progress % (this.duration || this.buffer.duration)),
								this.source.stop(),
								(this.source.onended = null),
								(this.isPlaying = !1)),
							this
						);
					console.warn('THREE.Audio: this Audio has no playback control.');
				}),
				(n.stop = function () {
					if (!1 !== this.hasPlaybackControl)
						return (
							(this._progress = 0),
							this.source.stop(),
							(this.source.onended = null),
							(this.isPlaying = !1),
							this
						);
					console.warn('THREE.Audio: this Audio has no playback control.');
				}),
				(n.connect = function () {
					if (this.filters.length > 0) {
						this.source.connect(this.filters[0]);
						for (var t = 1, e = this.filters.length; t < e; t++)
							this.filters[t - 1].connect(this.filters[t]);
						this.filters[this.filters.length - 1].connect(this.getOutput());
					} else this.source.connect(this.getOutput());
					return (this._connected = !0), this;
				}),
				(n.disconnect = function () {
					if (this.filters.length > 0) {
						this.source.disconnect(this.filters[0]);
						for (var t = 1, e = this.filters.length; t < e; t++)
							this.filters[t - 1].disconnect(this.filters[t]);
						this.filters[this.filters.length - 1].disconnect(this.getOutput());
					} else this.source.disconnect(this.getOutput());
					return (this._connected = !1), this;
				}),
				(n.getFilters = function () {
					return this.filters;
				}),
				(n.setFilters = function (t) {
					return (
						t || (t = []),
						!0 === this._connected
							? (this.disconnect(), (this.filters = t), this.connect())
							: (this.filters = t),
						this
					);
				}),
				(n.setDetune = function (t) {
					if (((this.detune = t), void 0 !== this.source.detune))
						return (
							!0 === this.isPlaying &&
								this.source.detune.setTargetAtTime(
									this.detune,
									this.context.currentTime,
									0.01
								),
							this
						);
				}),
				(n.getDetune = function () {
					return this.detune;
				}),
				(n.getFilter = function () {
					return this.getFilters()[0];
				}),
				(n.setFilter = function (t) {
					return this.setFilters(t ? [t] : []);
				}),
				(n.setPlaybackRate = function (t) {
					if (!1 !== this.hasPlaybackControl)
						return (
							(this.playbackRate = t),
							!0 === this.isPlaying &&
								this.source.playbackRate.setTargetAtTime(
									this.playbackRate,
									this.context.currentTime,
									0.01
								),
							this
						);
					console.warn('THREE.Audio: this Audio has no playback control.');
				}),
				(n.getPlaybackRate = function () {
					return this.playbackRate;
				}),
				(n.onEnded = function () {
					this.isPlaying = !1;
				}),
				(n.getLoop = function () {
					return !1 === this.hasPlaybackControl
						? (console.warn('THREE.Audio: this Audio has no playback control.'),
						  !1)
						: this.loop;
				}),
				(n.setLoop = function (t) {
					if (!1 !== this.hasPlaybackControl)
						return (
							(this.loop = t),
							!0 === this.isPlaying && (this.source.loop = this.loop),
							this
						);
					console.warn('THREE.Audio: this Audio has no playback control.');
				}),
				(n.setLoopStart = function (t) {
					return (this.loopStart = t), this;
				}),
				(n.setLoopEnd = function (t) {
					return (this.loopEnd = t), this;
				}),
				(n.getVolume = function () {
					return this.gain.gain.value;
				}),
				(n.setVolume = function (t) {
					return (
						this.gain.gain.setTargetAtTime(t, this.context.currentTime, 0.01),
						this
					);
				}),
				e
			);
		})(be),
		Bl = new wt(),
		zl = new bt(),
		Gl = new wt(),
		Fl = new wt(),
		Ul = (function (t) {
			function e(e) {
				var n;
				return (
					((n = t.call(this, e) || this).panner = n.context.createPanner()),
					(n.panner.panningModel = 'HRTF'),
					n.panner.connect(n.gain),
					n
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.getOutput = function () {
					return this.panner;
				}),
				(n.getRefDistance = function () {
					return this.panner.refDistance;
				}),
				(n.setRefDistance = function (t) {
					return (this.panner.refDistance = t), this;
				}),
				(n.getRolloffFactor = function () {
					return this.panner.rolloffFactor;
				}),
				(n.setRolloffFactor = function (t) {
					return (this.panner.rolloffFactor = t), this;
				}),
				(n.getDistanceModel = function () {
					return this.panner.distanceModel;
				}),
				(n.setDistanceModel = function (t) {
					return (this.panner.distanceModel = t), this;
				}),
				(n.getMaxDistance = function () {
					return this.panner.maxDistance;
				}),
				(n.setMaxDistance = function (t) {
					return (this.panner.maxDistance = t), this;
				}),
				(n.setDirectionalCone = function (t, e, n) {
					return (
						(this.panner.coneInnerAngle = t),
						(this.panner.coneOuterAngle = e),
						(this.panner.coneOuterGain = n),
						this
					);
				}),
				(n.updateMatrixWorld = function (e) {
					if (
						(t.prototype.updateMatrixWorld.call(this, e),
						!0 !== this.hasPlaybackControl || !1 !== this.isPlaying)
					) {
						this.matrixWorld.decompose(Bl, zl, Gl),
							Fl.set(0, 0, 1).applyQuaternion(zl);
						var n = this.panner;
						if (n.positionX) {
							var r = this.context.currentTime + this.listener.timeDelta;
							n.positionX.linearRampToValueAtTime(Bl.x, r),
								n.positionY.linearRampToValueAtTime(Bl.y, r),
								n.positionZ.linearRampToValueAtTime(Bl.z, r),
								n.orientationX.linearRampToValueAtTime(Fl.x, r),
								n.orientationY.linearRampToValueAtTime(Fl.y, r),
								n.orientationZ.linearRampToValueAtTime(Fl.z, r);
						} else
							n.setPosition(Bl.x, Bl.y, Bl.z),
								n.setOrientation(Fl.x, Fl.y, Fl.z);
					}
				}),
				e
			);
		})(Ol),
		Hl = (function () {
			function t(t, e) {
				(this.analyser = t.context.createAnalyser()),
					(this.analyser.fftSize = void 0 !== e ? e : 2048),
					(this.data = new Uint8Array(this.analyser.frequencyBinCount)),
					t.getOutput().connect(this.analyser);
			}
			var e = t.prototype;
			return (
				(e.getFrequencyData = function () {
					return this.analyser.getByteFrequencyData(this.data), this.data;
				}),
				(e.getAverageFrequency = function () {
					for (var t = 0, e = this.getFrequencyData(), n = 0; n < e.length; n++)
						t += e[n];
					return t / e.length;
				}),
				t
			);
		})();
	function kl(t, e, n) {
		var r, i, a;
		switch (((this.binding = t), (this.valueSize = n), e)) {
			case 'quaternion':
				(r = this._slerp),
					(i = this._slerpAdditive),
					(a = this._setAdditiveIdentityQuaternion),
					(this.buffer = new Float64Array(6 * n)),
					(this._workIndex = 5);
				break;
			case 'string':
			case 'bool':
				(r = this._select),
					(i = this._select),
					(a = this._setAdditiveIdentityOther),
					(this.buffer = new Array(5 * n));
				break;
			default:
				(r = this._lerp),
					(i = this._lerpAdditive),
					(a = this._setAdditiveIdentityNumeric),
					(this.buffer = new Float64Array(5 * n));
		}
		(this._mixBufferRegion = r),
			(this._mixBufferRegionAdditive = i),
			(this._setIdentity = a),
			(this._origIndex = 3),
			(this._addIndex = 4),
			(this.cumulativeWeight = 0),
			(this.cumulativeWeightAdditive = 0),
			(this.useCount = 0),
			(this.referenceCount = 0);
	}
	Object.assign(kl.prototype, {
		accumulate: function (t, e) {
			var n = this.buffer,
				r = this.valueSize,
				i = t * r + r,
				a = this.cumulativeWeight;
			if (0 === a) {
				for (var o = 0; o !== r; ++o) n[i + o] = n[o];
				a = e;
			} else {
				var s = e / (a += e);
				this._mixBufferRegion(n, i, 0, s, r);
			}
			this.cumulativeWeight = a;
		},
		accumulateAdditive: function (t) {
			var e = this.buffer,
				n = this.valueSize,
				r = n * this._addIndex;
			0 === this.cumulativeWeightAdditive && this._setIdentity(),
				this._mixBufferRegionAdditive(e, r, 0, t, n),
				(this.cumulativeWeightAdditive += t);
		},
		apply: function (t) {
			var e = this.valueSize,
				n = this.buffer,
				r = t * e + e,
				i = this.cumulativeWeight,
				a = this.cumulativeWeightAdditive,
				o = this.binding;
			if (
				((this.cumulativeWeight = 0),
				(this.cumulativeWeightAdditive = 0),
				i < 1)
			) {
				var s = e * this._origIndex;
				this._mixBufferRegion(n, r, s, 1 - i, e);
			}
			a > 0 && this._mixBufferRegionAdditive(n, r, this._addIndex * e, 1, e);
			for (var c = e, l = e + e; c !== l; ++c)
				if (n[c] !== n[c + e]) {
					o.setValue(n, r);
					break;
				}
		},
		saveOriginalState: function () {
			var t = this.binding,
				e = this.buffer,
				n = this.valueSize,
				r = n * this._origIndex;
			t.getValue(e, r);
			for (var i = n, a = r; i !== a; ++i) e[i] = e[r + (i % n)];
			this._setIdentity(),
				(this.cumulativeWeight = 0),
				(this.cumulativeWeightAdditive = 0);
		},
		restoreOriginalState: function () {
			var t = 3 * this.valueSize;
			this.binding.setValue(this.buffer, t);
		},
		_setAdditiveIdentityNumeric: function () {
			for (
				var t = this._addIndex * this.valueSize, e = t + this.valueSize, n = t;
				n < e;
				n++
			)
				this.buffer[n] = 0;
		},
		_setAdditiveIdentityQuaternion: function () {
			this._setAdditiveIdentityNumeric(),
				(this.buffer[this._addIndex * this.valueSize + 3] = 1);
		},
		_setAdditiveIdentityOther: function () {
			for (
				var t = this._origIndex * this.valueSize,
					e = this._addIndex * this.valueSize,
					n = 0;
				n < this.valueSize;
				n++
			)
				this.buffer[e + n] = this.buffer[t + n];
		},
		_select: function (t, e, n, r, i) {
			if (r >= 0.5) for (var a = 0; a !== i; ++a) t[e + a] = t[n + a];
		},
		_slerp: function (t, e, n, r) {
			bt.slerpFlat(t, e, t, e, t, n, r);
		},
		_slerpAdditive: function (t, e, n, r, i) {
			var a = this._workIndex * i;
			bt.multiplyQuaternionsFlat(t, a, t, e, t, n),
				bt.slerpFlat(t, e, t, e, t, a, r);
		},
		_lerp: function (t, e, n, r, i) {
			for (var a = 1 - r, o = 0; o !== i; ++o) {
				var s = e + o;
				t[s] = t[s] * a + t[n + o] * r;
			}
		},
		_lerpAdditive: function (t, e, n, r, i) {
			for (var a = 0; a !== i; ++a) {
				var o = e + a;
				t[o] = t[o] + t[n + a] * r;
			}
		},
	});
	var Vl = '\\[\\]\\.:\\/',
		Wl = new RegExp('[\\[\\]\\.:\\/]', 'g'),
		jl = '[^\\[\\]\\.:\\/]',
		ql = '[^' + Vl.replace('\\.', '') + ']',
		Xl = /((?:WC+[\/:])*)/.source.replace('WC', jl),
		Yl = /(WCOD+)?/.source.replace('WCOD', ql),
		Zl = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace('WC', jl),
		Jl = /\.(WC+)(?:\[(.+)\])?/.source.replace('WC', jl),
		Ql = new RegExp('^' + Xl + Yl + Zl + Jl + '$'),
		Kl = ['material', 'materials', 'bones'];
	function $l(t, e, n) {
		var r = n || tu.parseTrackName(e);
		(this._targetGroup = t), (this._bindings = t.subscribe_(e, r));
	}
	function tu(t, e, n) {
		(this.path = e),
			(this.parsedPath = n || tu.parseTrackName(e)),
			(this.node = tu.findNode(t, this.parsedPath.nodeName) || t),
			(this.rootNode = t);
	}
	function eu() {
		(this.uuid = st.generateUUID()),
			(this._objects = Array.prototype.slice.call(arguments)),
			(this.nCachedObjects_ = 0);
		var t = {};
		this._indicesByUUID = t;
		for (var e = 0, n = arguments.length; e !== n; ++e)
			t[arguments[e].uuid] = e;
		(this._paths = []),
			(this._parsedPaths = []),
			(this._bindings = []),
			(this._bindingsIndicesByPath = {});
		var r = this;
		this.stats = {
			objects: {
				get total() {
					return r._objects.length;
				},
				get inUse() {
					return this.total - r.nCachedObjects_;
				},
			},
			get bindingsPerObject() {
				return r._bindings.length;
			},
		};
	}
	Object.assign($l.prototype, {
		getValue: function (t, e) {
			this.bind();
			var n = this._targetGroup.nCachedObjects_,
				r = this._bindings[n];
			void 0 !== r && r.getValue(t, e);
		},
		setValue: function (t, e) {
			for (
				var n = this._bindings,
					r = this._targetGroup.nCachedObjects_,
					i = n.length;
				r !== i;
				++r
			)
				n[r].setValue(t, e);
		},
		bind: function () {
			for (
				var t = this._bindings,
					e = this._targetGroup.nCachedObjects_,
					n = t.length;
				e !== n;
				++e
			)
				t[e].bind();
		},
		unbind: function () {
			for (
				var t = this._bindings,
					e = this._targetGroup.nCachedObjects_,
					n = t.length;
				e !== n;
				++e
			)
				t[e].unbind();
		},
	}),
		Object.assign(tu, {
			Composite: $l,
			create: function (t, e, n) {
				return t && t.isAnimationObjectGroup
					? new tu.Composite(t, e, n)
					: new tu(t, e, n);
			},
			sanitizeNodeName: function (t) {
				return t.replace(/\s/g, '_').replace(Wl, '');
			},
			parseTrackName: function (t) {
				var e = Ql.exec(t);
				if (!e)
					throw new Error('PropertyBinding: Cannot parse trackName: ' + t);
				var n = {
						nodeName: e[2],
						objectName: e[3],
						objectIndex: e[4],
						propertyName: e[5],
						propertyIndex: e[6],
					},
					r = n.nodeName && n.nodeName.lastIndexOf('.');
				if (void 0 !== r && -1 !== r) {
					var i = n.nodeName.substring(r + 1);
					-1 !== Kl.indexOf(i) &&
						((n.nodeName = n.nodeName.substring(0, r)), (n.objectName = i));
				}
				if (null === n.propertyName || 0 === n.propertyName.length)
					throw new Error(
						'PropertyBinding: can not parse propertyName from trackName: ' + t
					);
				return n;
			},
			findNode: function (t, e) {
				if (
					!e ||
					'' === e ||
					'.' === e ||
					-1 === e ||
					e === t.name ||
					e === t.uuid
				)
					return t;
				if (t.skeleton) {
					var n = t.skeleton.getBoneByName(e);
					if (void 0 !== n) return n;
				}
				if (t.children) {
					var r = (function t(n) {
						for (var r = 0; r < n.length; r++) {
							var i = n[r];
							if (i.name === e || i.uuid === e) return i;
							var a = t(i.children);
							if (a) return a;
						}
						return null;
					})(t.children);
					if (r) return r;
				}
				return null;
			},
		}),
		Object.assign(tu.prototype, {
			_getValue_unavailable: function () {},
			_setValue_unavailable: function () {},
			BindingType: {
				Direct: 0,
				EntireArray: 1,
				ArrayElement: 2,
				HasFromToArray: 3,
			},
			Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 },
			GetterByBindingType: [
				function (t, e) {
					t[e] = this.node[this.propertyName];
				},
				function (t, e) {
					for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
						t[e++] = n[r];
				},
				function (t, e) {
					t[e] = this.resolvedProperty[this.propertyIndex];
				},
				function (t, e) {
					this.resolvedProperty.toArray(t, e);
				},
			],
			SetterByBindingTypeAndVersioning: [
				[
					function (t, e) {
						this.targetObject[this.propertyName] = t[e];
					},
					function (t, e) {
						(this.targetObject[this.propertyName] = t[e]),
							(this.targetObject.needsUpdate = !0);
					},
					function (t, e) {
						(this.targetObject[this.propertyName] = t[e]),
							(this.targetObject.matrixWorldNeedsUpdate = !0);
					},
				],
				[
					function (t, e) {
						for (
							var n = this.resolvedProperty, r = 0, i = n.length;
							r !== i;
							++r
						)
							n[r] = t[e++];
					},
					function (t, e) {
						for (
							var n = this.resolvedProperty, r = 0, i = n.length;
							r !== i;
							++r
						)
							n[r] = t[e++];
						this.targetObject.needsUpdate = !0;
					},
					function (t, e) {
						for (
							var n = this.resolvedProperty, r = 0, i = n.length;
							r !== i;
							++r
						)
							n[r] = t[e++];
						this.targetObject.matrixWorldNeedsUpdate = !0;
					},
				],
				[
					function (t, e) {
						this.resolvedProperty[this.propertyIndex] = t[e];
					},
					function (t, e) {
						(this.resolvedProperty[this.propertyIndex] = t[e]),
							(this.targetObject.needsUpdate = !0);
					},
					function (t, e) {
						(this.resolvedProperty[this.propertyIndex] = t[e]),
							(this.targetObject.matrixWorldNeedsUpdate = !0);
					},
				],
				[
					function (t, e) {
						this.resolvedProperty.fromArray(t, e);
					},
					function (t, e) {
						this.resolvedProperty.fromArray(t, e),
							(this.targetObject.needsUpdate = !0);
					},
					function (t, e) {
						this.resolvedProperty.fromArray(t, e),
							(this.targetObject.matrixWorldNeedsUpdate = !0);
					},
				],
			],
			getValue: function (t, e) {
				this.bind(), this.getValue(t, e);
			},
			setValue: function (t, e) {
				this.bind(), this.setValue(t, e);
			},
			bind: function () {
				var t = this.node,
					e = this.parsedPath,
					n = e.objectName,
					r = e.propertyName,
					i = e.propertyIndex;
				if (
					(t ||
						((t = tu.findNode(this.rootNode, e.nodeName) || this.rootNode),
						(this.node = t)),
					(this.getValue = this._getValue_unavailable),
					(this.setValue = this._setValue_unavailable),
					t)
				) {
					if (n) {
						var a = e.objectIndex;
						switch (n) {
							case 'materials':
								if (!t.material)
									return void console.error(
										'THREE.PropertyBinding: Can not bind to material as node does not have a material.',
										this
									);
								if (!t.material.materials)
									return void console.error(
										'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',
										this
									);
								t = t.material.materials;
								break;
							case 'bones':
								if (!t.skeleton)
									return void console.error(
										'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',
										this
									);
								t = t.skeleton.bones;
								for (var o = 0; o < t.length; o++)
									if (t[o].name === a) {
										a = o;
										break;
									}
								break;
							default:
								if (void 0 === t[n])
									return void console.error(
										'THREE.PropertyBinding: Can not bind to objectName of node undefined.',
										this
									);
								t = t[n];
						}
						if (void 0 !== a) {
							if (void 0 === t[a])
								return void console.error(
									'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',
									this,
									t
								);
							t = t[a];
						}
					}
					var s = t[r];
					if (void 0 !== s) {
						var c = this.Versioning.None;
						(this.targetObject = t),
							void 0 !== t.needsUpdate
								? (c = this.Versioning.NeedsUpdate)
								: void 0 !== t.matrixWorldNeedsUpdate &&
								  (c = this.Versioning.MatrixWorldNeedsUpdate);
						var l = this.BindingType.Direct;
						if (void 0 !== i) {
							if ('morphTargetInfluences' === r) {
								if (!t.geometry)
									return void console.error(
										'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',
										this
									);
								if (!t.geometry.isBufferGeometry)
									return void console.error(
										'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',
										this
									);
								if (!t.geometry.morphAttributes)
									return void console.error(
										'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',
										this
									);
								void 0 !== t.morphTargetDictionary[i] &&
									(i = t.morphTargetDictionary[i]);
							}
							(l = this.BindingType.ArrayElement),
								(this.resolvedProperty = s),
								(this.propertyIndex = i);
						} else
							void 0 !== s.fromArray && void 0 !== s.toArray
								? ((l = this.BindingType.HasFromToArray),
								  (this.resolvedProperty = s))
								: Array.isArray(s)
								? ((l = this.BindingType.EntireArray),
								  (this.resolvedProperty = s))
								: (this.propertyName = r);
						(this.getValue = this.GetterByBindingType[l]),
							(this.setValue = this.SetterByBindingTypeAndVersioning[l][c]);
					} else {
						var u = e.nodeName;
						console.error(
							'THREE.PropertyBinding: Trying to update property for track: ' +
								u +
								'.' +
								r +
								" but it wasn't found.",
							t
						);
					}
				} else
					console.error(
						'THREE.PropertyBinding: Trying to update node for track: ' +
							this.path +
							" but it wasn't found."
					);
			},
			unbind: function () {
				(this.node = null),
					(this.getValue = this._getValue_unbound),
					(this.setValue = this._setValue_unbound);
			},
		}),
		Object.assign(tu.prototype, {
			_getValue_unbound: tu.prototype.getValue,
			_setValue_unbound: tu.prototype.setValue,
		}),
		Object.assign(eu.prototype, {
			isAnimationObjectGroup: !0,
			add: function () {
				for (
					var t = this._objects,
						e = this._indicesByUUID,
						n = this._paths,
						r = this._parsedPaths,
						i = this._bindings,
						a = i.length,
						o = void 0,
						s = t.length,
						c = this.nCachedObjects_,
						l = 0,
						u = arguments.length;
					l !== u;
					++l
				) {
					var h = arguments[l],
						d = h.uuid,
						p = e[d];
					if (void 0 === p) {
						(p = s++), (e[d] = p), t.push(h);
						for (var f = 0, m = a; f !== m; ++f)
							i[f].push(new tu(h, n[f], r[f]));
					} else if (p < c) {
						o = t[p];
						var v = --c,
							g = t[v];
						(e[g.uuid] = p), (t[p] = g), (e[d] = v), (t[v] = h);
						for (var y = 0, x = a; y !== x; ++y) {
							var _ = i[y],
								b = _[v],
								w = _[p];
							(_[p] = b),
								void 0 === w && (w = new tu(h, n[y], r[y])),
								(_[v] = w);
						}
					} else
						t[p] !== o &&
							console.error(
								'THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.'
							);
				}
				this.nCachedObjects_ = c;
			},
			remove: function () {
				for (
					var t = this._objects,
						e = this._indicesByUUID,
						n = this._bindings,
						r = n.length,
						i = this.nCachedObjects_,
						a = 0,
						o = arguments.length;
					a !== o;
					++a
				) {
					var s = arguments[a],
						c = s.uuid,
						l = e[c];
					if (void 0 !== l && l >= i) {
						var u = i++,
							h = t[u];
						(e[h.uuid] = l), (t[l] = h), (e[c] = u), (t[u] = s);
						for (var d = 0, p = r; d !== p; ++d) {
							var f = n[d],
								m = f[u],
								v = f[l];
							(f[l] = m), (f[u] = v);
						}
					}
				}
				this.nCachedObjects_ = i;
			},
			uncache: function () {
				for (
					var t = this._objects,
						e = this._indicesByUUID,
						n = this._bindings,
						r = n.length,
						i = this.nCachedObjects_,
						a = t.length,
						o = 0,
						s = arguments.length;
					o !== s;
					++o
				) {
					var c = arguments[o],
						l = c.uuid,
						u = e[l];
					if (void 0 !== u)
						if ((delete e[l], u < i)) {
							var h = --i,
								d = t[h],
								p = --a,
								f = t[p];
							(e[d.uuid] = u), (t[u] = d), (e[f.uuid] = h), (t[h] = f), t.pop();
							for (var m = 0, v = r; m !== v; ++m) {
								var g = n[m],
									y = g[h],
									x = g[p];
								(g[u] = y), (g[h] = x), g.pop();
							}
						} else {
							var _ = --a,
								b = t[_];
							(e[b.uuid] = u), (t[u] = b), t.pop();
							for (var w = 0, M = r; w !== M; ++w) {
								var S = n[w];
								(S[u] = S[_]), S.pop();
							}
						}
				}
				this.nCachedObjects_ = i;
			},
			subscribe_: function (t, e) {
				var n = this._bindingsIndicesByPath,
					r = n[t],
					i = this._bindings;
				if (void 0 !== r) return i[r];
				var a = this._paths,
					o = this._parsedPaths,
					s = this._objects,
					c = s.length,
					l = this.nCachedObjects_,
					u = new Array(c);
				(r = i.length), (n[t] = r), a.push(t), o.push(e), i.push(u);
				for (var h = l, d = s.length; h !== d; ++h) {
					var p = s[h];
					u[h] = new tu(p, t, e);
				}
				return u;
			},
			unsubscribe_: function (t) {
				var e = this._bindingsIndicesByPath,
					n = e[t];
				if (void 0 !== n) {
					var r = this._paths,
						i = this._parsedPaths,
						a = this._bindings,
						o = a.length - 1,
						s = a[o];
					(e[t[o]] = n),
						(a[n] = s),
						a.pop(),
						(i[n] = i[o]),
						i.pop(),
						(r[n] = r[o]),
						r.pop();
				}
			},
		});
	var nu = (function () {
		function t(t, e, n, r) {
			(this._mixer = t),
				(this._clip = e),
				(this._localRoot = n || null),
				(this.blendMode = r || e.blendMode);
			for (
				var i = e.tracks,
					a = i.length,
					o = new Array(a),
					s = { endingStart: H, endingEnd: H },
					c = 0;
				c !== a;
				++c
			) {
				var l = i[c].createInterpolant(null);
				(o[c] = l), (l.settings = s);
			}
			(this._interpolantSettings = s),
				(this._interpolants = o),
				(this._propertyBindings = new Array(a)),
				(this._cacheIndex = null),
				(this._byClipCacheIndex = null),
				(this._timeScaleInterpolant = null),
				(this._weightInterpolant = null),
				(this.loop = 2201),
				(this._loopCount = -1),
				(this._startTime = null),
				(this.time = 0),
				(this.timeScale = 1),
				(this._effectiveTimeScale = 1),
				(this.weight = 1),
				(this._effectiveWeight = 1),
				(this.repetitions = 1 / 0),
				(this.paused = !1),
				(this.enabled = !0),
				(this.clampWhenFinished = !1),
				(this.zeroSlopeAtStart = !0),
				(this.zeroSlopeAtEnd = !0);
		}
		var e = t.prototype;
		return (
			(e.play = function () {
				return this._mixer._activateAction(this), this;
			}),
			(e.stop = function () {
				return this._mixer._deactivateAction(this), this.reset();
			}),
			(e.reset = function () {
				return (
					(this.paused = !1),
					(this.enabled = !0),
					(this.time = 0),
					(this._loopCount = -1),
					(this._startTime = null),
					this.stopFading().stopWarping()
				);
			}),
			(e.isRunning = function () {
				return (
					this.enabled &&
					!this.paused &&
					0 !== this.timeScale &&
					null === this._startTime &&
					this._mixer._isActiveAction(this)
				);
			}),
			(e.isScheduled = function () {
				return this._mixer._isActiveAction(this);
			}),
			(e.startAt = function (t) {
				return (this._startTime = t), this;
			}),
			(e.setLoop = function (t, e) {
				return (this.loop = t), (this.repetitions = e), this;
			}),
			(e.setEffectiveWeight = function (t) {
				return (
					(this.weight = t),
					(this._effectiveWeight = this.enabled ? t : 0),
					this.stopFading()
				);
			}),
			(e.getEffectiveWeight = function () {
				return this._effectiveWeight;
			}),
			(e.fadeIn = function (t) {
				return this._scheduleFading(t, 0, 1);
			}),
			(e.fadeOut = function (t) {
				return this._scheduleFading(t, 1, 0);
			}),
			(e.crossFadeFrom = function (t, e, n) {
				if ((t.fadeOut(e), this.fadeIn(e), n)) {
					var r = this._clip.duration,
						i = t._clip.duration,
						a = i / r,
						o = r / i;
					t.warp(1, a, e), this.warp(o, 1, e);
				}
				return this;
			}),
			(e.crossFadeTo = function (t, e, n) {
				return t.crossFadeFrom(this, e, n);
			}),
			(e.stopFading = function () {
				var t = this._weightInterpolant;
				return (
					null !== t &&
						((this._weightInterpolant = null),
						this._mixer._takeBackControlInterpolant(t)),
					this
				);
			}),
			(e.setEffectiveTimeScale = function (t) {
				return (
					(this.timeScale = t),
					(this._effectiveTimeScale = this.paused ? 0 : t),
					this.stopWarping()
				);
			}),
			(e.getEffectiveTimeScale = function () {
				return this._effectiveTimeScale;
			}),
			(e.setDuration = function (t) {
				return (this.timeScale = this._clip.duration / t), this.stopWarping();
			}),
			(e.syncWith = function (t) {
				return (
					(this.time = t.time),
					(this.timeScale = t.timeScale),
					this.stopWarping()
				);
			}),
			(e.halt = function (t) {
				return this.warp(this._effectiveTimeScale, 0, t);
			}),
			(e.warp = function (t, e, n) {
				var r = this._mixer,
					i = r.time,
					a = this.timeScale,
					o = this._timeScaleInterpolant;
				null === o &&
					((o = r._lendControlInterpolant()), (this._timeScaleInterpolant = o));
				var s = o.parameterPositions,
					c = o.sampleValues;
				return (s[0] = i), (s[1] = i + n), (c[0] = t / a), (c[1] = e / a), this;
			}),
			(e.stopWarping = function () {
				var t = this._timeScaleInterpolant;
				return (
					null !== t &&
						((this._timeScaleInterpolant = null),
						this._mixer._takeBackControlInterpolant(t)),
					this
				);
			}),
			(e.getMixer = function () {
				return this._mixer;
			}),
			(e.getClip = function () {
				return this._clip;
			}),
			(e.getRoot = function () {
				return this._localRoot || this._mixer._root;
			}),
			(e._update = function (t, e, n, r) {
				if (this.enabled) {
					var i = this._startTime;
					if (null !== i) {
						var a = (t - i) * n;
						if (a < 0 || 0 === n) return;
						(this._startTime = null), (e = n * a);
					}
					e *= this._updateTimeScale(t);
					var o = this._updateTime(e),
						s = this._updateWeight(t);
					if (s > 0) {
						var c = this._interpolants,
							l = this._propertyBindings;
						switch (this.blendMode) {
							case j:
								for (var u = 0, h = c.length; u !== h; ++u)
									c[u].evaluate(o), l[u].accumulateAdditive(s);
								break;
							case W:
							default:
								for (var d = 0, p = c.length; d !== p; ++d)
									c[d].evaluate(o), l[d].accumulate(r, s);
						}
					}
				} else this._updateWeight(t);
			}),
			(e._updateWeight = function (t) {
				var e = 0;
				if (this.enabled) {
					e = this.weight;
					var n = this._weightInterpolant;
					if (null !== n) {
						var r = n.evaluate(t)[0];
						(e *= r),
							t > n.parameterPositions[1] &&
								(this.stopFading(), 0 === r && (this.enabled = !1));
					}
				}
				return (this._effectiveWeight = e), e;
			}),
			(e._updateTimeScale = function (t) {
				var e = 0;
				if (!this.paused) {
					e = this.timeScale;
					var n = this._timeScaleInterpolant;
					if (null !== n)
						(e *= n.evaluate(t)[0]),
							t > n.parameterPositions[1] &&
								(this.stopWarping(),
								0 === e ? (this.paused = !0) : (this.timeScale = e));
				}
				return (this._effectiveTimeScale = e), e;
			}),
			(e._updateTime = function (t) {
				var e = this._clip.duration,
					n = this.loop,
					r = this.time + t,
					i = this._loopCount,
					a = 2202 === n;
				if (0 === t) return -1 === i ? r : a && 1 == (1 & i) ? e - r : r;
				if (2200 === n) {
					-1 === i && ((this._loopCount = 0), this._setEndings(!0, !0, !1));
					t: {
						if (r >= e) r = e;
						else {
							if (!(r < 0)) {
								this.time = r;
								break t;
							}
							r = 0;
						}
						this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1),
							(this.time = r),
							this._mixer.dispatchEvent({
								type: 'finished',
								action: this,
								direction: t < 0 ? -1 : 1,
							});
					}
				} else {
					if (
						(-1 === i &&
							(t >= 0
								? ((i = 0), this._setEndings(!0, 0 === this.repetitions, a))
								: this._setEndings(0 === this.repetitions, !0, a)),
						r >= e || r < 0)
					) {
						var o = Math.floor(r / e);
						(r -= e * o), (i += Math.abs(o));
						var s = this.repetitions - i;
						if (s <= 0)
							this.clampWhenFinished ? (this.paused = !0) : (this.enabled = !1),
								(r = t > 0 ? e : 0),
								(this.time = r),
								this._mixer.dispatchEvent({
									type: 'finished',
									action: this,
									direction: t > 0 ? 1 : -1,
								});
						else {
							if (1 === s) {
								var c = t < 0;
								this._setEndings(c, !c, a);
							} else this._setEndings(!1, !1, a);
							(this._loopCount = i),
								(this.time = r),
								this._mixer.dispatchEvent({
									type: 'loop',
									action: this,
									loopDelta: o,
								});
						}
					} else this.time = r;
					if (a && 1 == (1 & i)) return e - r;
				}
				return r;
			}),
			(e._setEndings = function (t, e, n) {
				var r = this._interpolantSettings;
				n
					? ((r.endingStart = k), (r.endingEnd = k))
					: ((r.endingStart = t ? (this.zeroSlopeAtStart ? k : H) : V),
					  (r.endingEnd = e ? (this.zeroSlopeAtEnd ? k : H) : V));
			}),
			(e._scheduleFading = function (t, e, n) {
				var r = this._mixer,
					i = r.time,
					a = this._weightInterpolant;
				null === a &&
					((a = r._lendControlInterpolant()), (this._weightInterpolant = a));
				var o = a.parameterPositions,
					s = a.sampleValues;
				return (o[0] = i), (s[0] = e), (o[1] = i + t), (s[1] = n), this;
			}),
			t
		);
	})();
	function ru(t) {
		(this._root = t),
			this._initMemoryManager(),
			(this._accuIndex = 0),
			(this.time = 0),
			(this.timeScale = 1);
	}
	ru.prototype = Object.assign(Object.create(rt.prototype), {
		constructor: ru,
		_bindAction: function (t, e) {
			var n = t._localRoot || this._root,
				r = t._clip.tracks,
				i = r.length,
				a = t._propertyBindings,
				o = t._interpolants,
				s = n.uuid,
				c = this._bindingsByRootAndName,
				l = c[s];
			void 0 === l && ((l = {}), (c[s] = l));
			for (var u = 0; u !== i; ++u) {
				var h = r[u],
					d = h.name,
					p = l[d];
				if (void 0 !== p) a[u] = p;
				else {
					if (void 0 !== (p = a[u])) {
						null === p._cacheIndex &&
							(++p.referenceCount, this._addInactiveBinding(p, s, d));
						continue;
					}
					var f = e && e._propertyBindings[u].binding.parsedPath;
					++(p = new kl(tu.create(n, d, f), h.ValueTypeName, h.getValueSize()))
						.referenceCount,
						this._addInactiveBinding(p, s, d),
						(a[u] = p);
				}
				o[u].resultBuffer = p.buffer;
			}
		},
		_activateAction: function (t) {
			if (!this._isActiveAction(t)) {
				if (null === t._cacheIndex) {
					var e = (t._localRoot || this._root).uuid,
						n = t._clip.uuid,
						r = this._actionsByClip[n];
					this._bindAction(t, r && r.knownActions[0]),
						this._addInactiveAction(t, n, e);
				}
				for (var i = t._propertyBindings, a = 0, o = i.length; a !== o; ++a) {
					var s = i[a];
					0 == s.useCount++ && (this._lendBinding(s), s.saveOriginalState());
				}
				this._lendAction(t);
			}
		},
		_deactivateAction: function (t) {
			if (this._isActiveAction(t)) {
				for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
					var i = e[n];
					0 == --i.useCount &&
						(i.restoreOriginalState(), this._takeBackBinding(i));
				}
				this._takeBackAction(t);
			}
		},
		_initMemoryManager: function () {
			(this._actions = []),
				(this._nActiveActions = 0),
				(this._actionsByClip = {}),
				(this._bindings = []),
				(this._nActiveBindings = 0),
				(this._bindingsByRootAndName = {}),
				(this._controlInterpolants = []),
				(this._nActiveControlInterpolants = 0);
			var t = this;
			this.stats = {
				actions: {
					get total() {
						return t._actions.length;
					},
					get inUse() {
						return t._nActiveActions;
					},
				},
				bindings: {
					get total() {
						return t._bindings.length;
					},
					get inUse() {
						return t._nActiveBindings;
					},
				},
				controlInterpolants: {
					get total() {
						return t._controlInterpolants.length;
					},
					get inUse() {
						return t._nActiveControlInterpolants;
					},
				},
			};
		},
		_isActiveAction: function (t) {
			var e = t._cacheIndex;
			return null !== e && e < this._nActiveActions;
		},
		_addInactiveAction: function (t, e, n) {
			var r = this._actions,
				i = this._actionsByClip,
				a = i[e];
			if (void 0 === a)
				(a = { knownActions: [t], actionByRoot: {} }),
					(t._byClipCacheIndex = 0),
					(i[e] = a);
			else {
				var o = a.knownActions;
				(t._byClipCacheIndex = o.length), o.push(t);
			}
			(t._cacheIndex = r.length), r.push(t), (a.actionByRoot[n] = t);
		},
		_removeInactiveAction: function (t) {
			var e = this._actions,
				n = e[e.length - 1],
				r = t._cacheIndex;
			(n._cacheIndex = r), (e[r] = n), e.pop(), (t._cacheIndex = null);
			var i = t._clip.uuid,
				a = this._actionsByClip,
				o = a[i],
				s = o.knownActions,
				c = s[s.length - 1],
				l = t._byClipCacheIndex;
			(c._byClipCacheIndex = l),
				(s[l] = c),
				s.pop(),
				(t._byClipCacheIndex = null),
				delete o.actionByRoot[(t._localRoot || this._root).uuid],
				0 === s.length && delete a[i],
				this._removeInactiveBindingsForAction(t);
		},
		_removeInactiveBindingsForAction: function (t) {
			for (var e = t._propertyBindings, n = 0, r = e.length; n !== r; ++n) {
				var i = e[n];
				0 == --i.referenceCount && this._removeInactiveBinding(i);
			}
		},
		_lendAction: function (t) {
			var e = this._actions,
				n = t._cacheIndex,
				r = this._nActiveActions++,
				i = e[r];
			(t._cacheIndex = r), (e[r] = t), (i._cacheIndex = n), (e[n] = i);
		},
		_takeBackAction: function (t) {
			var e = this._actions,
				n = t._cacheIndex,
				r = --this._nActiveActions,
				i = e[r];
			(t._cacheIndex = r), (e[r] = t), (i._cacheIndex = n), (e[n] = i);
		},
		_addInactiveBinding: function (t, e, n) {
			var r = this._bindingsByRootAndName,
				i = this._bindings,
				a = r[e];
			void 0 === a && ((a = {}), (r[e] = a)),
				(a[n] = t),
				(t._cacheIndex = i.length),
				i.push(t);
		},
		_removeInactiveBinding: function (t) {
			var e = this._bindings,
				n = t.binding,
				r = n.rootNode.uuid,
				i = n.path,
				a = this._bindingsByRootAndName,
				o = a[r],
				s = e[e.length - 1],
				c = t._cacheIndex;
			(s._cacheIndex = c),
				(e[c] = s),
				e.pop(),
				delete o[i],
				0 === Object.keys(o).length && delete a[r];
		},
		_lendBinding: function (t) {
			var e = this._bindings,
				n = t._cacheIndex,
				r = this._nActiveBindings++,
				i = e[r];
			(t._cacheIndex = r), (e[r] = t), (i._cacheIndex = n), (e[n] = i);
		},
		_takeBackBinding: function (t) {
			var e = this._bindings,
				n = t._cacheIndex,
				r = --this._nActiveBindings,
				i = e[r];
			(t._cacheIndex = r), (e[r] = t), (i._cacheIndex = n), (e[n] = i);
		},
		_lendControlInterpolant: function () {
			var t = this._controlInterpolants,
				e = this._nActiveControlInterpolants++,
				n = t[e];
			return (
				void 0 === n &&
					(((n = new $s(
						new Float32Array(2),
						new Float32Array(2),
						1,
						this._controlInterpolantsResultBuffer
					)).__cacheIndex = e),
					(t[e] = n)),
				n
			);
		},
		_takeBackControlInterpolant: function (t) {
			var e = this._controlInterpolants,
				n = t.__cacheIndex,
				r = --this._nActiveControlInterpolants,
				i = e[r];
			(t.__cacheIndex = r), (e[r] = t), (i.__cacheIndex = n), (e[n] = i);
		},
		_controlInterpolantsResultBuffer: new Float32Array(1),
		clipAction: function (t, e, n) {
			var r = e || this._root,
				i = r.uuid,
				a = 'string' == typeof t ? lc.findByName(r, t) : t,
				o = null !== a ? a.uuid : t,
				s = this._actionsByClip[o],
				c = null;
			if ((void 0 === n && (n = null !== a ? a.blendMode : W), void 0 !== s)) {
				var l = s.actionByRoot[i];
				if (void 0 !== l && l.blendMode === n) return l;
				(c = s.knownActions[0]), null === a && (a = c._clip);
			}
			if (null === a) return null;
			var u = new nu(this, a, e, n);
			return this._bindAction(u, c), this._addInactiveAction(u, o, i), u;
		},
		existingAction: function (t, e) {
			var n = e || this._root,
				r = n.uuid,
				i = 'string' == typeof t ? lc.findByName(n, t) : t,
				a = i ? i.uuid : t,
				o = this._actionsByClip[a];
			return (void 0 !== o && o.actionByRoot[r]) || null;
		},
		stopAllAction: function () {
			for (var t = this._actions, e = this._nActiveActions - 1; e >= 0; --e)
				t[e].stop();
			return this;
		},
		update: function (t) {
			t *= this.timeScale;
			for (
				var e = this._actions,
					n = this._nActiveActions,
					r = (this.time += t),
					i = Math.sign(t),
					a = (this._accuIndex ^= 1),
					o = 0;
				o !== n;
				++o
			) {
				e[o]._update(r, t, i, a);
			}
			for (
				var s = this._bindings, c = this._nActiveBindings, l = 0;
				l !== c;
				++l
			)
				s[l].apply(a);
			return this;
		},
		setTime: function (t) {
			this.time = 0;
			for (var e = 0; e < this._actions.length; e++) this._actions[e].time = 0;
			return this.update(t);
		},
		getRoot: function () {
			return this._root;
		},
		uncacheClip: function (t) {
			var e = this._actions,
				n = t.uuid,
				r = this._actionsByClip,
				i = r[n];
			if (void 0 !== i) {
				for (var a = i.knownActions, o = 0, s = a.length; o !== s; ++o) {
					var c = a[o];
					this._deactivateAction(c);
					var l = c._cacheIndex,
						u = e[e.length - 1];
					(c._cacheIndex = null),
						(c._byClipCacheIndex = null),
						(u._cacheIndex = l),
						(e[l] = u),
						e.pop(),
						this._removeInactiveBindingsForAction(c);
				}
				delete r[n];
			}
		},
		uncacheRoot: function (t) {
			var e = t.uuid,
				n = this._actionsByClip;
			for (var r in n) {
				var i = n[r].actionByRoot[e];
				void 0 !== i &&
					(this._deactivateAction(i), this._removeInactiveAction(i));
			}
			var a = this._bindingsByRootAndName[e];
			if (void 0 !== a)
				for (var o in a) {
					var s = a[o];
					s.restoreOriginalState(), this._removeInactiveBinding(s);
				}
		},
		uncacheAction: function (t, e) {
			var n = this.existingAction(t, e);
			null !== n && (this._deactivateAction(n), this._removeInactiveAction(n));
		},
	});
	var iu = (function () {
		function t(t) {
			'string' == typeof t &&
				(console.warn('THREE.Uniform: Type parameter is no longer needed.'),
				(t = arguments[1])),
				(this.value = t);
		}
		return (
			(t.prototype.clone = function () {
				return new t(
					void 0 === this.value.clone ? this.value : this.value.clone()
				);
			}),
			t
		);
	})();
	function au(t, e, n) {
		ca.call(this, t, e), (this.meshPerAttribute = n || 1);
	}
	function ou(t, e, n, r, i) {
		(this.buffer = t),
			(this.type = e),
			(this.itemSize = n),
			(this.elementSize = r),
			(this.count = i),
			(this.version = 0);
	}
	function su(t, e, n, r) {
		(this.ray = new Zt(t, e)),
			(this.near = n || 0),
			(this.far = r || 1 / 0),
			(this.camera = null),
			(this.layers = new se()),
			(this.params = {
				Mesh: {},
				Line: { threshold: 1 },
				LOD: {},
				Points: { threshold: 1 },
				Sprite: {},
			}),
			Object.defineProperties(this.params, {
				PointCloud: {
					get: function () {
						return (
							console.warn(
								'THREE.Raycaster: params.PointCloud has been renamed to params.Points.'
							),
							this.Points
						);
					},
				},
			});
	}
	function cu(t, e) {
		return t.distance - e.distance;
	}
	function lu(t, e, n, r) {
		if ((t.layers.test(e.layers) && t.raycast(e, n), !0 === r))
			for (var i = t.children, a = 0, o = i.length; a < o; a++)
				lu(i[a], e, n, !0);
	}
	(au.prototype = Object.assign(Object.create(ca.prototype), {
		constructor: au,
		isInstancedInterleavedBuffer: !0,
		copy: function (t) {
			return (
				ca.prototype.copy.call(this, t),
				(this.meshPerAttribute = t.meshPerAttribute),
				this
			);
		},
		clone: function (t) {
			var e = ca.prototype.clone.call(this, t);
			return (e.meshPerAttribute = this.meshPerAttribute), e;
		},
		toJSON: function (t) {
			var e = ca.prototype.toJSON.call(this, t);
			return (
				(e.isInstancedInterleavedBuffer = !0),
				(e.meshPerAttribute = this.meshPerAttribute),
				e
			);
		},
	})),
		Object.defineProperty(ou.prototype, 'needsUpdate', {
			set: function (t) {
				!0 === t && this.version++;
			},
		}),
		Object.assign(ou.prototype, {
			isGLBufferAttribute: !0,
			setBuffer: function (t) {
				return (this.buffer = t), this;
			},
			setType: function (t, e) {
				return (this.type = t), (this.elementSize = e), this;
			},
			setItemSize: function (t) {
				return (this.itemSize = t), this;
			},
			setCount: function (t) {
				return (this.count = t), this;
			},
		}),
		Object.assign(su.prototype, {
			set: function (t, e) {
				this.ray.set(t, e);
			},
			setFromCamera: function (t, e) {
				e && e.isPerspectiveCamera
					? (this.ray.origin.setFromMatrixPosition(e.matrixWorld),
					  this.ray.direction
							.set(t.x, t.y, 0.5)
							.unproject(e)
							.sub(this.ray.origin)
							.normalize(),
					  (this.camera = e))
					: e && e.isOrthographicCamera
					? (this.ray.origin
							.set(t.x, t.y, (e.near + e.far) / (e.near - e.far))
							.unproject(e),
					  this.ray.direction.set(0, 0, -1).transformDirection(e.matrixWorld),
					  (this.camera = e))
					: console.error('THREE.Raycaster: Unsupported camera type.');
			},
			intersectObject: function (t, e, n) {
				var r = n || [];
				return lu(t, this, r, e), r.sort(cu), r;
			},
			intersectObjects: function (t, e, n) {
				var r = n || [];
				if (!1 === Array.isArray(t))
					return (
						console.warn(
							'THREE.Raycaster.intersectObjects: objects is not an Array.'
						),
						r
					);
				for (var i = 0, a = t.length; i < a; i++) lu(t[i], this, r, e);
				return r.sort(cu), r;
			},
		});
	var uu = (function () {
			function t(t, e, n) {
				return (
					void 0 === t && (t = 1),
					void 0 === e && (e = 0),
					void 0 === n && (n = 0),
					(this.radius = t),
					(this.phi = e),
					(this.theta = n),
					this
				);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e, n) {
					return (this.radius = t), (this.phi = e), (this.theta = n), this;
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return (
						(this.radius = t.radius),
						(this.phi = t.phi),
						(this.theta = t.theta),
						this
					);
				}),
				(e.makeSafe = function () {
					var t = 1e-6;
					return (
						(this.phi = Math.max(t, Math.min(Math.PI - t, this.phi))), this
					);
				}),
				(e.setFromVector3 = function (t) {
					return this.setFromCartesianCoords(t.x, t.y, t.z);
				}),
				(e.setFromCartesianCoords = function (t, e, n) {
					return (
						(this.radius = Math.sqrt(t * t + e * e + n * n)),
						0 === this.radius
							? ((this.theta = 0), (this.phi = 0))
							: ((this.theta = Math.atan2(t, n)),
							  (this.phi = Math.acos(st.clamp(e / this.radius, -1, 1)))),
						this
					);
				}),
				t
			);
		})(),
		hu = (function () {
			function t(t, e, n) {
				return (
					(this.radius = void 0 !== t ? t : 1),
					(this.theta = void 0 !== e ? e : 0),
					(this.y = void 0 !== n ? n : 0),
					this
				);
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e, n) {
					return (this.radius = t), (this.theta = e), (this.y = n), this;
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return (
						(this.radius = t.radius),
						(this.theta = t.theta),
						(this.y = t.y),
						this
					);
				}),
				(e.setFromVector3 = function (t) {
					return this.setFromCartesianCoords(t.x, t.y, t.z);
				}),
				(e.setFromCartesianCoords = function (t, e, n) {
					return (
						(this.radius = Math.sqrt(t * t + n * n)),
						(this.theta = Math.atan2(t, n)),
						(this.y = e),
						this
					);
				}),
				t
			);
		})(),
		du = new pt(),
		pu = (function () {
			function t(t, e) {
				Object.defineProperty(this, 'isBox2', { value: !0 }),
					(this.min = void 0 !== t ? t : new pt(1 / 0, 1 / 0)),
					(this.max = void 0 !== e ? e : new pt(-1 / 0, -1 / 0));
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e) {
					return this.min.copy(t), this.max.copy(e), this;
				}),
				(e.setFromPoints = function (t) {
					this.makeEmpty();
					for (var e = 0, n = t.length; e < n; e++) this.expandByPoint(t[e]);
					return this;
				}),
				(e.setFromCenterAndSize = function (t, e) {
					var n = du.copy(e).multiplyScalar(0.5);
					return this.min.copy(t).sub(n), this.max.copy(t).add(n), this;
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return this.min.copy(t.min), this.max.copy(t.max), this;
				}),
				(e.makeEmpty = function () {
					return (
						(this.min.x = this.min.y = 1 / 0),
						(this.max.x = this.max.y = -1 / 0),
						this
					);
				}),
				(e.isEmpty = function () {
					return this.max.x < this.min.x || this.max.y < this.min.y;
				}),
				(e.getCenter = function (t) {
					return (
						void 0 === t &&
							(console.warn('THREE.Box2: .getCenter() target is now required'),
							(t = new pt())),
						this.isEmpty()
							? t.set(0, 0)
							: t.addVectors(this.min, this.max).multiplyScalar(0.5)
					);
				}),
				(e.getSize = function (t) {
					return (
						void 0 === t &&
							(console.warn('THREE.Box2: .getSize() target is now required'),
							(t = new pt())),
						this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min)
					);
				}),
				(e.expandByPoint = function (t) {
					return this.min.min(t), this.max.max(t), this;
				}),
				(e.expandByVector = function (t) {
					return this.min.sub(t), this.max.add(t), this;
				}),
				(e.expandByScalar = function (t) {
					return this.min.addScalar(-t), this.max.addScalar(t), this;
				}),
				(e.containsPoint = function (t) {
					return !(
						t.x < this.min.x ||
						t.x > this.max.x ||
						t.y < this.min.y ||
						t.y > this.max.y
					);
				}),
				(e.containsBox = function (t) {
					return (
						this.min.x <= t.min.x &&
						t.max.x <= this.max.x &&
						this.min.y <= t.min.y &&
						t.max.y <= this.max.y
					);
				}),
				(e.getParameter = function (t, e) {
					return (
						void 0 === e &&
							(console.warn(
								'THREE.Box2: .getParameter() target is now required'
							),
							(e = new pt())),
						e.set(
							(t.x - this.min.x) / (this.max.x - this.min.x),
							(t.y - this.min.y) / (this.max.y - this.min.y)
						)
					);
				}),
				(e.intersectsBox = function (t) {
					return !(
						t.max.x < this.min.x ||
						t.min.x > this.max.x ||
						t.max.y < this.min.y ||
						t.min.y > this.max.y
					);
				}),
				(e.clampPoint = function (t, e) {
					return (
						void 0 === e &&
							(console.warn('THREE.Box2: .clampPoint() target is now required'),
							(e = new pt())),
						e.copy(t).clamp(this.min, this.max)
					);
				}),
				(e.distanceToPoint = function (t) {
					return du.copy(t).clamp(this.min, this.max).sub(t).length();
				}),
				(e.intersect = function (t) {
					return this.min.max(t.min), this.max.min(t.max), this;
				}),
				(e.union = function (t) {
					return this.min.min(t.min), this.max.max(t.max), this;
				}),
				(e.translate = function (t) {
					return this.min.add(t), this.max.add(t), this;
				}),
				(e.equals = function (t) {
					return t.min.equals(this.min) && t.max.equals(this.max);
				}),
				t
			);
		})(),
		fu = new wt(),
		mu = new wt(),
		vu = (function () {
			function t(t, e) {
				(this.start = void 0 !== t ? t : new wt()),
					(this.end = void 0 !== e ? e : new wt());
			}
			var e = t.prototype;
			return (
				(e.set = function (t, e) {
					return this.start.copy(t), this.end.copy(e), this;
				}),
				(e.clone = function () {
					return new this.constructor().copy(this);
				}),
				(e.copy = function (t) {
					return this.start.copy(t.start), this.end.copy(t.end), this;
				}),
				(e.getCenter = function (t) {
					return (
						void 0 === t &&
							(console.warn('THREE.Line3: .getCenter() target is now required'),
							(t = new wt())),
						t.addVectors(this.start, this.end).multiplyScalar(0.5)
					);
				}),
				(e.delta = function (t) {
					return (
						void 0 === t &&
							(console.warn('THREE.Line3: .delta() target is now required'),
							(t = new wt())),
						t.subVectors(this.end, this.start)
					);
				}),
				(e.distanceSq = function () {
					return this.start.distanceToSquared(this.end);
				}),
				(e.distance = function () {
					return this.start.distanceTo(this.end);
				}),
				(e.at = function (t, e) {
					return (
						void 0 === e &&
							(console.warn('THREE.Line3: .at() target is now required'),
							(e = new wt())),
						this.delta(e).multiplyScalar(t).add(this.start)
					);
				}),
				(e.closestPointToPointParameter = function (t, e) {
					fu.subVectors(t, this.start), mu.subVectors(this.end, this.start);
					var n = mu.dot(mu),
						r = mu.dot(fu) / n;
					return e && (r = st.clamp(r, 0, 1)), r;
				}),
				(e.closestPointToPoint = function (t, e, n) {
					var r = this.closestPointToPointParameter(t, e);
					return (
						void 0 === n &&
							(console.warn(
								'THREE.Line3: .closestPointToPoint() target is now required'
							),
							(n = new wt())),
						this.delta(n).multiplyScalar(r).add(this.start)
					);
				}),
				(e.applyMatrix4 = function (t) {
					return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this;
				}),
				(e.equals = function (t) {
					return t.start.equals(this.start) && t.end.equals(this.end);
				}),
				t
			);
		})();
	function gu(t) {
		be.call(this),
			(this.material = t),
			(this.render = function () {}),
			(this.hasPositions = !1),
			(this.hasNormals = !1),
			(this.hasColors = !1),
			(this.hasUvs = !1),
			(this.positionArray = null),
			(this.normalArray = null),
			(this.colorArray = null),
			(this.uvArray = null),
			(this.count = 0);
	}
	(gu.prototype = Object.create(be.prototype)),
		(gu.prototype.constructor = gu),
		(gu.prototype.isImmediateRenderObject = !0);
	var yu = new wt(),
		xu = (function (t) {
			function e(e, n) {
				var r;
				((r = t.call(this) || this).light = e),
					r.light.updateMatrixWorld(),
					(r.matrix = e.matrixWorld),
					(r.matrixAutoUpdate = !1),
					(r.color = n);
				for (
					var i = new vn(),
						a = [
							0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0,
							1, 1, 0, 0, 0, 0, -1, 1,
						],
						o = 0,
						s = 1;
					o < 32;
					o++, s++
				) {
					var c = (o / 32) * Math.PI * 2,
						l = (s / 32) * Math.PI * 2;
					a.push(Math.cos(c), Math.sin(c), 1, Math.cos(l), Math.sin(l), 1);
				}
				i.setAttribute('position', new an(a, 3));
				var u = new ja({ fog: !1, toneMapped: !1 });
				return (r.cone = new to(i, u)), r.add(r.cone), r.update(), r;
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.dispose = function () {
					this.cone.geometry.dispose(), this.cone.material.dispose();
				}),
				(n.update = function () {
					this.light.updateMatrixWorld();
					var t = this.light.distance ? this.light.distance : 1e3,
						e = t * Math.tan(this.light.angle);
					this.cone.scale.set(e, e, t),
						yu.setFromMatrixPosition(this.light.target.matrixWorld),
						this.cone.lookAt(yu),
						void 0 !== this.color
							? this.cone.material.color.set(this.color)
							: this.cone.material.color.copy(this.light.color);
				}),
				e
			);
		})(be),
		_u = new wt(),
		bu = new Jt(),
		wu = new Jt(),
		Mu = (function (t) {
			function e(e) {
				for (
					var n,
						r = Su(e),
						i = new vn(),
						a = [],
						o = [],
						s = new Ve(0, 0, 1),
						c = new Ve(0, 1, 0),
						l = 0;
					l < r.length;
					l++
				) {
					var u = r[l];
					u.parent &&
						u.parent.isBone &&
						(a.push(0, 0, 0),
						a.push(0, 0, 0),
						o.push(s.r, s.g, s.b),
						o.push(c.r, c.g, c.b));
				}
				i.setAttribute('position', new an(a, 3)),
					i.setAttribute('color', new an(o, 3));
				var h = new ja({
					vertexColors: !0,
					depthTest: !1,
					depthWrite: !1,
					toneMapped: !1,
					transparent: !0,
				});
				return (
					((n = t.call(this, i, h) || this).type = 'SkeletonHelper'),
					(n.isSkeletonHelper = !0),
					(n.root = e),
					(n.bones = r),
					(n.matrix = e.matrixWorld),
					(n.matrixAutoUpdate = !1),
					n
				);
			}
			return (
				ut(e, t),
				(e.prototype.updateMatrixWorld = function (e) {
					var n = this.bones,
						r = this.geometry,
						i = r.getAttribute('position');
					wu.getInverse(this.root.matrixWorld);
					for (var a = 0, o = 0; a < n.length; a++) {
						var s = n[a];
						s.parent &&
							s.parent.isBone &&
							(bu.multiplyMatrices(wu, s.matrixWorld),
							_u.setFromMatrixPosition(bu),
							i.setXYZ(o, _u.x, _u.y, _u.z),
							bu.multiplyMatrices(wu, s.parent.matrixWorld),
							_u.setFromMatrixPosition(bu),
							i.setXYZ(o + 1, _u.x, _u.y, _u.z),
							(o += 2));
					}
					(r.getAttribute('position').needsUpdate = !0),
						t.prototype.updateMatrixWorld.call(this, e);
				}),
				e
			);
		})(to);
	function Su(t) {
		var e = [];
		t && t.isBone && e.push(t);
		for (var n = 0; n < t.children.length; n++)
			e.push.apply(e, Su(t.children[n]));
		return e;
	}
	var Tu = (function (t) {
			function e(e, n, r) {
				var i,
					a = new Ts(n, 4, 2),
					o = new Xe({ wireframe: !0, fog: !1, toneMapped: !1 });
				return (
					((i = t.call(this, a, o) || this).light = e),
					i.light.updateMatrixWorld(),
					(i.color = r),
					(i.type = 'PointLightHelper'),
					(i.matrix = i.light.matrixWorld),
					(i.matrixAutoUpdate = !1),
					i.update(),
					i
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.dispose = function () {
					this.geometry.dispose(), this.material.dispose();
				}),
				(n.update = function () {
					void 0 !== this.color
						? this.material.color.set(this.color)
						: this.material.color.copy(this.light.color);
				}),
				e
			);
		})(Nn),
		Eu = new wt(),
		Au = new Ve(),
		Lu = new Ve(),
		Ru = (function (t) {
			function e(e, n, r) {
				var i;
				((i = t.call(this) || this).light = e),
					i.light.updateMatrixWorld(),
					(i.matrix = e.matrixWorld),
					(i.matrixAutoUpdate = !1),
					(i.color = r);
				var a = new ms(n);
				a.rotateY(0.5 * Math.PI),
					(i.material = new Xe({ wireframe: !0, fog: !1, toneMapped: !1 })),
					void 0 === i.color && (i.material.vertexColors = !0);
				var o = a.getAttribute('position'),
					s = new Float32Array(3 * o.count);
				return (
					a.setAttribute('color', new Je(s, 3)),
					i.add(new Nn(a, i.material)),
					i.update(),
					i
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.dispose = function () {
					this.children[0].geometry.dispose(),
						this.children[0].material.dispose();
				}),
				(n.update = function () {
					var t = this.children[0];
					if (void 0 !== this.color) this.material.color.set(this.color);
					else {
						var e = t.geometry.getAttribute('color');
						Au.copy(this.light.color), Lu.copy(this.light.groundColor);
						for (var n = 0, r = e.count; n < r; n++) {
							var i = n < r / 2 ? Au : Lu;
							e.setXYZ(n, i.r, i.g, i.b);
						}
						e.needsUpdate = !0;
					}
					t.lookAt(Eu.setFromMatrixPosition(this.light.matrixWorld).negate());
				}),
				e
			);
		})(be),
		Cu = (function (t) {
			function e(e, n, r, i) {
				var a;
				(e = e || 10),
					(n = n || 10),
					(r = new Ve(void 0 !== r ? r : 4473924)),
					(i = new Ve(void 0 !== i ? i : 8947848));
				for (
					var o = n / 2,
						s = e / n,
						c = e / 2,
						l = [],
						u = [],
						h = 0,
						d = 0,
						p = -c;
					h <= n;
					h++, p += s
				) {
					l.push(-c, 0, p, c, 0, p), l.push(p, 0, -c, p, 0, c);
					var f = h === o ? r : i;
					f.toArray(u, d),
						(d += 3),
						f.toArray(u, d),
						(d += 3),
						f.toArray(u, d),
						(d += 3),
						f.toArray(u, d),
						(d += 3);
				}
				var m = new vn();
				m.setAttribute('position', new an(l, 3)),
					m.setAttribute('color', new an(u, 3));
				var v = new ja({ vertexColors: !0, toneMapped: !1 });
				return ((a = t.call(this, m, v) || this).type = 'GridHelper'), a;
			}
			return ut(e, t), e;
		})(to),
		Pu = (function (t) {
			function e(e, n, r, i, a, o) {
				var s;
				(e = e || 10),
					(n = n || 16),
					(r = r || 8),
					(i = i || 64),
					(a = new Ve(void 0 !== a ? a : 4473924)),
					(o = new Ve(void 0 !== o ? o : 8947848));
				for (var c = [], l = [], u = 0; u <= n; u++) {
					var h = (u / n) * (2 * Math.PI),
						d = Math.sin(h) * e,
						p = Math.cos(h) * e;
					c.push(0, 0, 0), c.push(d, 0, p);
					var f = 1 & u ? a : o;
					l.push(f.r, f.g, f.b), l.push(f.r, f.g, f.b);
				}
				for (var m = 0; m <= r; m++)
					for (var v = 1 & m ? a : o, g = e - (e / r) * m, y = 0; y < i; y++) {
						var x = (y / i) * (2 * Math.PI),
							_ = Math.sin(x) * g,
							b = Math.cos(x) * g;
						c.push(_, 0, b),
							l.push(v.r, v.g, v.b),
							(x = ((y + 1) / i) * (2 * Math.PI)),
							(_ = Math.sin(x) * g),
							(b = Math.cos(x) * g),
							c.push(_, 0, b),
							l.push(v.r, v.g, v.b);
					}
				var w = new vn();
				w.setAttribute('position', new an(c, 3)),
					w.setAttribute('color', new an(l, 3));
				var M = new ja({ vertexColors: !0, toneMapped: !1 });
				return ((s = t.call(this, w, M) || this).type = 'PolarGridHelper'), s;
			}
			return ut(e, t), e;
		})(to),
		Iu = new wt(),
		Du = new wt(),
		Nu = new wt(),
		Ou = (function (t) {
			function e(e, n, r) {
				var i;
				((i = t.call(this) || this).light = e),
					i.light.updateMatrixWorld(),
					(i.matrix = e.matrixWorld),
					(i.matrixAutoUpdate = !1),
					(i.color = r),
					void 0 === n && (n = 1);
				var a = new vn();
				a.setAttribute(
					'position',
					new an([-n, n, 0, n, n, 0, n, -n, 0, -n, -n, 0, -n, n, 0], 3)
				);
				var o = new ja({ fog: !1, toneMapped: !1 });
				return (
					(i.lightPlane = new Qa(a, o)),
					i.add(i.lightPlane),
					(a = new vn()).setAttribute(
						'position',
						new an([0, 0, 0, 0, 0, 1], 3)
					),
					(i.targetLine = new Qa(a, o)),
					i.add(i.targetLine),
					i.update(),
					i
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.dispose = function () {
					this.lightPlane.geometry.dispose(),
						this.lightPlane.material.dispose(),
						this.targetLine.geometry.dispose(),
						this.targetLine.material.dispose();
				}),
				(n.update = function () {
					Iu.setFromMatrixPosition(this.light.matrixWorld),
						Du.setFromMatrixPosition(this.light.target.matrixWorld),
						Nu.subVectors(Du, Iu),
						this.lightPlane.lookAt(Du),
						void 0 !== this.color
							? (this.lightPlane.material.color.set(this.color),
							  this.targetLine.material.color.set(this.color))
							: (this.lightPlane.material.color.copy(this.light.color),
							  this.targetLine.material.color.copy(this.light.color)),
						this.targetLine.lookAt(Du),
						(this.targetLine.scale.z = Nu.length());
				}),
				e
			);
		})(be),
		Bu = new wt(),
		zu = new kn(),
		Gu = (function (t) {
			function e(e) {
				var n,
					r = new vn(),
					i = new ja({ color: 16777215, vertexColors: !0, toneMapped: !1 }),
					a = [],
					o = [],
					s = {},
					c = new Ve(16755200),
					l = new Ve(16711680),
					u = new Ve(43775),
					h = new Ve(16777215),
					d = new Ve(3355443);
				function p(t, e, n) {
					f(t, n), f(e, n);
				}
				function f(t, e) {
					a.push(0, 0, 0),
						o.push(e.r, e.g, e.b),
						void 0 === s[t] && (s[t] = []),
						s[t].push(a.length / 3 - 1);
				}
				return (
					p('n1', 'n2', c),
					p('n2', 'n4', c),
					p('n4', 'n3', c),
					p('n3', 'n1', c),
					p('f1', 'f2', c),
					p('f2', 'f4', c),
					p('f4', 'f3', c),
					p('f3', 'f1', c),
					p('n1', 'f1', c),
					p('n2', 'f2', c),
					p('n3', 'f3', c),
					p('n4', 'f4', c),
					p('p', 'n1', l),
					p('p', 'n2', l),
					p('p', 'n3', l),
					p('p', 'n4', l),
					p('u1', 'u2', u),
					p('u2', 'u3', u),
					p('u3', 'u1', u),
					p('c', 't', h),
					p('p', 'c', d),
					p('cn1', 'cn2', d),
					p('cn3', 'cn4', d),
					p('cf1', 'cf2', d),
					p('cf3', 'cf4', d),
					r.setAttribute('position', new an(a, 3)),
					r.setAttribute('color', new an(o, 3)),
					((n = t.call(this, r, i) || this).type = 'CameraHelper'),
					(n.camera = e),
					n.camera.updateProjectionMatrix && n.camera.updateProjectionMatrix(),
					(n.matrix = e.matrixWorld),
					(n.matrixAutoUpdate = !1),
					(n.pointMap = s),
					n.update(),
					n
				);
			}
			return (
				ut(e, t),
				(e.prototype.update = function () {
					var t = this.geometry,
						e = this.pointMap;
					zu.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
						Fu('c', e, t, zu, 0, 0, -1),
						Fu('t', e, t, zu, 0, 0, 1),
						Fu('n1', e, t, zu, -1, -1, -1),
						Fu('n2', e, t, zu, 1, -1, -1),
						Fu('n3', e, t, zu, -1, 1, -1),
						Fu('n4', e, t, zu, 1, 1, -1),
						Fu('f1', e, t, zu, -1, -1, 1),
						Fu('f2', e, t, zu, 1, -1, 1),
						Fu('f3', e, t, zu, -1, 1, 1),
						Fu('f4', e, t, zu, 1, 1, 1),
						Fu('u1', e, t, zu, 0.7, 1.1, -1),
						Fu('u2', e, t, zu, -0.7, 1.1, -1),
						Fu('u3', e, t, zu, 0, 2, -1),
						Fu('cf1', e, t, zu, -1, 0, 1),
						Fu('cf2', e, t, zu, 1, 0, 1),
						Fu('cf3', e, t, zu, 0, -1, 1),
						Fu('cf4', e, t, zu, 0, 1, 1),
						Fu('cn1', e, t, zu, -1, 0, -1),
						Fu('cn2', e, t, zu, 1, 0, -1),
						Fu('cn3', e, t, zu, 0, -1, -1),
						Fu('cn4', e, t, zu, 0, 1, -1),
						(t.getAttribute('position').needsUpdate = !0);
				}),
				e
			);
		})(to);
	function Fu(t, e, n, r, i, a, o) {
		Bu.set(i, a, o).unproject(r);
		var s = e[t];
		if (void 0 !== s)
			for (var c = n.getAttribute('position'), l = 0, u = s.length; l < u; l++)
				c.setXYZ(s[l], Bu.x, Bu.y, Bu.z);
	}
	var Uu,
		Hu,
		ku,
		Vu = new Tt(),
		Wu = (function (t) {
			function e(e, n) {
				var r;
				void 0 === n && (n = 16776960);
				var i = new Uint16Array([
						0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3,
						7,
					]),
					a = new Float32Array(24),
					o = new vn();
				return (
					o.setIndex(new Je(i, 1)),
					o.setAttribute('position', new Je(a, 3)),
					((r =
						t.call(this, o, new ja({ color: n, toneMapped: !1 })) ||
						this).object = e),
					(r.type = 'BoxHelper'),
					(r.matrixAutoUpdate = !1),
					r.update(),
					r
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.update = function (t) {
					if (
						(void 0 !== t &&
							console.warn(
								'THREE.BoxHelper: .update() has no longer arguments.'
							),
						void 0 !== this.object && Vu.setFromObject(this.object),
						!Vu.isEmpty())
					) {
						var e = Vu.min,
							n = Vu.max,
							r = this.geometry.attributes.position,
							i = r.array;
						(i[0] = n.x),
							(i[1] = n.y),
							(i[2] = n.z),
							(i[3] = e.x),
							(i[4] = n.y),
							(i[5] = n.z),
							(i[6] = e.x),
							(i[7] = e.y),
							(i[8] = n.z),
							(i[9] = n.x),
							(i[10] = e.y),
							(i[11] = n.z),
							(i[12] = n.x),
							(i[13] = n.y),
							(i[14] = e.z),
							(i[15] = e.x),
							(i[16] = n.y),
							(i[17] = e.z),
							(i[18] = e.x),
							(i[19] = e.y),
							(i[20] = e.z),
							(i[21] = n.x),
							(i[22] = e.y),
							(i[23] = e.z),
							(r.needsUpdate = !0),
							this.geometry.computeBoundingSphere();
					}
				}),
				(n.setFromObject = function (t) {
					return (this.object = t), this.update(), this;
				}),
				(n.copy = function (t) {
					return (
						to.prototype.copy.call(this, t), (this.object = t.object), this
					);
				}),
				e
			);
		})(to),
		ju = (function (t) {
			function e(e, n) {
				var r;
				void 0 === n && (n = 16776960);
				var i = new Uint16Array([
						0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3,
						7,
					]),
					a = new vn();
				return (
					a.setIndex(new Je(i, 1)),
					a.setAttribute(
						'position',
						new an(
							[
								1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1,
								-1, -1, 1, -1, -1,
							],
							3
						)
					),
					((r =
						t.call(this, a, new ja({ color: n, toneMapped: !1 })) || this).box =
						e),
					(r.type = 'Box3Helper'),
					r.geometry.computeBoundingSphere(),
					r
				);
			}
			return (
				ut(e, t),
				(e.prototype.updateMatrixWorld = function (e) {
					var n = this.box;
					n.isEmpty() ||
						(n.getCenter(this.position),
						n.getSize(this.scale),
						this.scale.multiplyScalar(0.5),
						t.prototype.updateMatrixWorld.call(this, e));
				}),
				e
			);
		})(to),
		qu = (function (t) {
			function e(e, n, r) {
				var i,
					a = void 0 !== r ? r : 16776960,
					o = new vn();
				o.setAttribute(
					'position',
					new an(
						[
							1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1,
							-1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0,
						],
						3
					)
				),
					o.computeBoundingSphere(),
					((i =
						t.call(this, o, new ja({ color: a, toneMapped: !1 })) ||
						this).type = 'PlaneHelper'),
					(i.plane = e),
					(i.size = void 0 === n ? 1 : n);
				var s = new vn();
				return (
					s.setAttribute(
						'position',
						new an(
							[1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],
							3
						)
					),
					s.computeBoundingSphere(),
					i.add(
						new Nn(
							s,
							new Xe({
								color: a,
								opacity: 0.2,
								transparent: !0,
								depthWrite: !1,
								toneMapped: !1,
							})
						)
					),
					i
				);
			}
			return (
				ut(e, t),
				(e.prototype.updateMatrixWorld = function (e) {
					var n = -this.plane.constant;
					Math.abs(n) < 1e-8 && (n = 1e-8),
						this.scale.set(0.5 * this.size, 0.5 * this.size, n),
						(this.children[0].material.side = n < 0 ? 1 : 0),
						this.lookAt(this.plane.normal),
						t.prototype.updateMatrixWorld.call(this, e);
				}),
				e
			);
		})(Qa),
		Xu = new wt(),
		Yu = (function (t) {
			function e(e, n, r, i, a, o) {
				var s;
				return (
					((s = t.call(this) || this).type = 'ArrowHelper'),
					void 0 === e && (e = new wt(0, 0, 1)),
					void 0 === n && (n = new wt(0, 0, 0)),
					void 0 === r && (r = 1),
					void 0 === i && (i = 16776960),
					void 0 === a && (a = 0.2 * r),
					void 0 === o && (o = 0.2 * a),
					void 0 === Uu &&
						((Uu = new vn()).setAttribute(
							'position',
							new an([0, 0, 0, 0, 1, 0], 3)
						),
						(Hu = new wo(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)),
					s.position.copy(n),
					(s.line = new Qa(Uu, new ja({ color: i, toneMapped: !1 }))),
					(s.line.matrixAutoUpdate = !1),
					s.add(s.line),
					(s.cone = new Nn(Hu, new Xe({ color: i, toneMapped: !1 }))),
					(s.cone.matrixAutoUpdate = !1),
					s.add(s.cone),
					s.setDirection(e),
					s.setLength(r, a, o),
					s
				);
			}
			ut(e, t);
			var n = e.prototype;
			return (
				(n.setDirection = function (t) {
					if (t.y > 0.99999) this.quaternion.set(0, 0, 0, 1);
					else if (t.y < -0.99999) this.quaternion.set(1, 0, 0, 0);
					else {
						Xu.set(t.z, 0, -t.x).normalize();
						var e = Math.acos(t.y);
						this.quaternion.setFromAxisAngle(Xu, e);
					}
				}),
				(n.setLength = function (t, e, n) {
					void 0 === e && (e = 0.2 * t),
						void 0 === n && (n = 0.2 * e),
						this.line.scale.set(1, Math.max(1e-4, t - e), 1),
						this.line.updateMatrix(),
						this.cone.scale.set(n, e, n),
						(this.cone.position.y = t),
						this.cone.updateMatrix();
				}),
				(n.setColor = function (t) {
					this.line.material.color.set(t), this.cone.material.color.set(t);
				}),
				(n.copy = function (e) {
					return (
						t.prototype.copy.call(this, e, !1),
						this.line.copy(e.line),
						this.cone.copy(e.cone),
						this
					);
				}),
				e
			);
		})(be),
		Zu = (function (t) {
			function e(e) {
				var n;
				void 0 === e && (e = 1);
				var r = [0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],
					i = new vn();
				i.setAttribute('position', new an(r, 3)),
					i.setAttribute(
						'color',
						new an(
							[1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1],
							3
						)
					);
				var a = new ja({ vertexColors: !0, toneMapped: !1 });
				return ((n = t.call(this, i, a) || this).type = 'AxesHelper'), n;
			}
			return ut(e, t), e;
		})(to),
		Ju = Math.pow(2, 8),
		Qu = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
		Ku = 5 + Qu.length,
		$u = 20,
		th =
			(((ku = {})[3e3] = 0),
			(ku[3001] = 1),
			(ku[3002] = 2),
			(ku[3004] = 3),
			(ku[3005] = 4),
			(ku[3006] = 5),
			(ku[3007] = 6),
			ku),
		eh = new $c(),
		nh = dh(),
		rh = nh._lodPlanes,
		ih = nh._sizeLods,
		ah = nh._sigmas,
		oh = null,
		sh = (1 + Math.sqrt(5)) / 2,
		ch = 1 / sh,
		lh = [
			new wt(1, 1, 1),
			new wt(-1, 1, 1),
			new wt(1, 1, -1),
			new wt(-1, 1, -1),
			new wt(0, sh, ch),
			new wt(0, sh, -ch),
			new wt(ch, 0, sh),
			new wt(-ch, 0, sh),
			new wt(sh, ch, 0),
			new wt(-sh, ch, 0),
		],
		uh = (function () {
			function t(t) {
				var e, n, r;
				(this._renderer = t),
					(this._pingPongRenderTarget = null),
					(this._blurMaterial =
						((e = $u),
						(n = new Float32Array(e)),
						(r = new wt(0, 1, 0)),
						new Us({
							name: 'SphericalGaussianBlur',
							defines: { n: e },
							uniforms: {
								envMap: { value: null },
								samples: { value: 1 },
								weights: { value: n },
								latitudinal: { value: !1 },
								dTheta: { value: 0 },
								mipInt: { value: 0 },
								poleAxis: { value: r },
								inputEncoding: { value: th[3e3] },
								outputEncoding: { value: th[3e3] },
							},
							vertexShader:
								'\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t',
							fragmentShader:
								"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",
							blending: 0,
							depthTest: !1,
							depthWrite: !1,
						}))),
					(this._equirectShader = null),
					(this._cubemapShader = null),
					this._compileMaterial(this._blurMaterial);
			}
			var e = t.prototype;
			return (
				(e.fromScene = function (t, e, n, r) {
					void 0 === e && (e = 0),
						void 0 === n && (n = 0.1),
						void 0 === r && (r = 100),
						(oh = this._renderer.getRenderTarget());
					var i = this._allocateTargets();
					return (
						this._sceneToCubeUV(t, n, r, i),
						e > 0 && this._blur(i, 0, 0, e),
						this._applyPMREM(i),
						this._cleanup(i),
						i
					);
				}),
				(e.fromEquirectangular = function (t) {
					return this._fromTexture(t);
				}),
				(e.fromCubemap = function (t) {
					return this._fromTexture(t);
				}),
				(e.compileCubemapShader = function () {
					null === this._cubemapShader &&
						((this._cubemapShader = vh()),
						this._compileMaterial(this._cubemapShader));
				}),
				(e.compileEquirectangularShader = function () {
					null === this._equirectShader &&
						((this._equirectShader = mh()),
						this._compileMaterial(this._equirectShader));
				}),
				(e.dispose = function () {
					this._blurMaterial.dispose(),
						null !== this._cubemapShader && this._cubemapShader.dispose(),
						null !== this._equirectShader && this._equirectShader.dispose();
					for (var t = 0; t < rh.length; t++) rh[t].dispose();
				}),
				(e._cleanup = function (t) {
					this._pingPongRenderTarget.dispose(),
						this._renderer.setRenderTarget(oh),
						(t.scissorTest = !1),
						fh(t, 0, 0, t.width, t.height);
				}),
				(e._fromTexture = function (t) {
					oh = this._renderer.getRenderTarget();
					var e = this._allocateTargets(t);
					return (
						this._textureToCubeUV(t, e),
						this._applyPMREM(e),
						this._cleanup(e),
						e
					);
				}),
				(e._allocateTargets = function (t) {
					var e = {
							magFilter: d,
							minFilter: d,
							generateMipmaps: !1,
							type: y,
							format: 1023,
							encoding: hh(t) ? t.encoding : Z,
							depthBuffer: !1,
						},
						n = ph(e);
					return (n.depthBuffer = !t), (this._pingPongRenderTarget = ph(e)), n;
				}),
				(e._compileMaterial = function (t) {
					var e = new Nn(rh[0], t);
					this._renderer.compile(e, eh);
				}),
				(e._sceneToCubeUV = function (t, e, n, r) {
					var i = new Vn(90, 1, e, n),
						a = [1, -1, 1, 1, 1, 1],
						o = [1, 1, 1, -1, -1, -1],
						s = this._renderer,
						c = s.outputEncoding,
						l = s.toneMapping,
						u = s.getClearColor(),
						h = s.getClearAlpha();
					(s.toneMapping = 0), (s.outputEncoding = q);
					var d = t.background;
					if (d && d.isColor) {
						d.convertSRGBToLinear();
						var p = Math.max(d.r, d.g, d.b),
							f = Math.min(Math.max(Math.ceil(Math.log2(p)), -128), 127);
						d = d.multiplyScalar(Math.pow(2, -f));
						var m = (f + 128) / 255;
						s.setClearColor(d, m), (t.background = null);
					}
					for (var v = 0; v < 6; v++) {
						var g = v % 3;
						0 == g
							? (i.up.set(0, a[v], 0), i.lookAt(o[v], 0, 0))
							: 1 == g
							? (i.up.set(0, 0, a[v]), i.lookAt(0, o[v], 0))
							: (i.up.set(0, a[v], 0), i.lookAt(0, 0, o[v])),
							fh(r, g * Ju, v > 2 ? Ju : 0, Ju, Ju),
							s.setRenderTarget(r),
							s.render(t, i);
					}
					(s.toneMapping = l), (s.outputEncoding = c), s.setClearColor(u, h);
				}),
				(e._textureToCubeUV = function (t, e) {
					var n = this._renderer;
					t.isCubeTexture
						? null == this._cubemapShader && (this._cubemapShader = vh())
						: null == this._equirectShader && (this._equirectShader = mh());
					var r = t.isCubeTexture ? this._cubemapShader : this._equirectShader,
						i = new Nn(rh[0], r),
						a = r.uniforms;
					(a.envMap.value = t),
						t.isCubeTexture ||
							a.texelSize.value.set(1 / t.image.width, 1 / t.image.height),
						(a.inputEncoding.value = th[t.encoding]),
						(a.outputEncoding.value = th[e.texture.encoding]),
						fh(e, 0, 0, 3 * Ju, 2 * Ju),
						n.setRenderTarget(e),
						n.render(i, eh);
				}),
				(e._applyPMREM = function (t) {
					var e = this._renderer,
						n = e.autoClear;
					e.autoClear = !1;
					for (var r = 1; r < Ku; r++) {
						var i = Math.sqrt(ah[r] * ah[r] - ah[r - 1] * ah[r - 1]),
							a = lh[(r - 1) % lh.length];
						this._blur(t, r - 1, r, i, a);
					}
					e.autoClear = n;
				}),
				(e._blur = function (t, e, n, r, i) {
					var a = this._pingPongRenderTarget;
					this._halfBlur(t, a, e, n, r, 'latitudinal', i),
						this._halfBlur(a, t, n, n, r, 'longitudinal', i);
				}),
				(e._halfBlur = function (t, e, n, r, i, a, o) {
					var s = this._renderer,
						c = this._blurMaterial;
					'latitudinal' !== a &&
						'longitudinal' !== a &&
						console.error(
							'blur direction must be either latitudinal or longitudinal!'
						);
					var l = new Nn(rh[r], c),
						u = c.uniforms,
						h = ih[n] - 1,
						d = isFinite(i) ? Math.PI / (2 * h) : (2 * Math.PI) / 39,
						p = i / d,
						f = isFinite(i) ? 1 + Math.floor(3 * p) : $u;
					f > $u &&
						console.warn(
							'sigmaRadians, ' +
								i +
								', is too large and will clip, as it requested ' +
								f +
								' samples when the maximum is set to ' +
								$u
						);
					for (var m = [], v = 0, g = 0; g < $u; ++g) {
						var y = g / p,
							x = Math.exp((-y * y) / 2);
						m.push(x), 0 == g ? (v += x) : g < f && (v += 2 * x);
					}
					for (var _ = 0; _ < m.length; _++) m[_] = m[_] / v;
					(u.envMap.value = t.texture),
						(u.samples.value = f),
						(u.weights.value = m),
						(u.latitudinal.value = 'latitudinal' === a),
						o && (u.poleAxis.value = o),
						(u.dTheta.value = d),
						(u.mipInt.value = 8 - n),
						(u.inputEncoding.value = th[t.texture.encoding]),
						(u.outputEncoding.value = th[t.texture.encoding]);
					var b = ih[r];
					fh(
						e,
						3 * Math.max(0, Ju - 2 * b),
						(0 === r ? 0 : 2 * Ju) + 2 * b * (r > 4 ? r - 8 + 4 : 0),
						3 * b,
						2 * b
					),
						s.setRenderTarget(e),
						s.render(l, eh);
				}),
				t
			);
		})();
	function hh(t) {
		return (
			void 0 !== t &&
			t.type === y &&
			(t.encoding === q || t.encoding === X || t.encoding === Y)
		);
	}
	function dh() {
		for (var t = [], e = [], n = [], r = 8, i = 0; i < Ku; i++) {
			var a = Math.pow(2, r);
			e.push(a);
			var o = 1 / a;
			i > 4 ? (o = Qu[i - 8 + 4 - 1]) : 0 == i && (o = 0), n.push(o);
			for (
				var s = 1 / (a - 1),
					c = -s / 2,
					l = 1 + s / 2,
					u = [c, c, l, c, l, l, c, c, l, l, c, l],
					h = new Float32Array(108),
					d = new Float32Array(72),
					p = new Float32Array(36),
					f = 0;
				f < 6;
				f++
			) {
				var m = ((f % 3) * 2) / 3 - 1,
					v = f > 2 ? 0 : -1,
					g = [
						m,
						v,
						0,
						m + 2 / 3,
						v,
						0,
						m + 2 / 3,
						v + 1,
						0,
						m,
						v,
						0,
						m + 2 / 3,
						v + 1,
						0,
						m,
						v + 1,
						0,
					];
				h.set(g, 18 * f), d.set(u, 12 * f);
				var y = [f, f, f, f, f, f];
				p.set(y, 6 * f);
			}
			var x = new vn();
			x.setAttribute('position', new Je(h, 3)),
				x.setAttribute('uv', new Je(d, 2)),
				x.setAttribute('faceIndex', new Je(p, 1)),
				t.push(x),
				r > 4 && r--;
		}
		return { _lodPlanes: t, _sizeLods: e, _sigmas: n };
	}
	function ph(t) {
		var e = new xt(3 * Ju, 3 * Ju, t);
		return (
			(e.texture.mapping = s),
			(e.texture.name = 'PMREM.cubeUv'),
			(e.scissorTest = !0),
			e
		);
	}
	function fh(t, e, n, r, i) {
		t.viewport.set(e, n, r, i), t.scissor.set(e, n, r, i);
	}
	function mh() {
		return new Us({
			name: 'EquirectangularToCubeUV',
			uniforms: {
				envMap: { value: null },
				texelSize: { value: new pt(1, 1) },
				inputEncoding: { value: th[3e3] },
				outputEncoding: { value: th[3e3] },
			},
			vertexShader:
				'\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t',
			fragmentShader:
				'\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t',
			blending: 0,
			depthTest: !1,
			depthWrite: !1,
		});
	}
	function vh() {
		return new Us({
			name: 'CubemapToCubeUV',
			uniforms: {
				envMap: { value: null },
				inputEncoding: { value: th[3e3] },
				outputEncoding: { value: th[3e3] },
			},
			vertexShader:
				'\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t',
			fragmentShader:
				'\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t',
			blending: 0,
			depthTest: !1,
			depthWrite: !1,
		});
	}
	function gh(t) {
		console.warn(
			'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.'
		),
			Pc.call(this, t),
			(this.type = 'catmullrom'),
			(this.closed = !0);
	}
	function yh(t) {
		console.warn(
			'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.'
		),
			Pc.call(this, t),
			(this.type = 'catmullrom');
	}
	function xh(t) {
		console.warn(
			'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.'
		),
			Pc.call(this, t),
			(this.type = 'catmullrom');
	}
	(Mc.create = function (t, e) {
		return (
			console.log('THREE.Curve.create() has been deprecated'),
			(t.prototype = Object.create(Mc.prototype)),
			(t.prototype.constructor = t),
			(t.prototype.getPoint = e),
			t
		);
	}),
		Object.assign(Vc.prototype, {
			createPointsGeometry: function (t) {
				console.warn(
					'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'
				);
				var e = this.getPoints(t);
				return this.createGeometry(e);
			},
			createSpacedPointsGeometry: function (t) {
				console.warn(
					'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'
				);
				var e = this.getSpacedPoints(t);
				return this.createGeometry(e);
			},
			createGeometry: function (t) {
				console.warn(
					'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'
				);
				for (var e = new yo(), n = 0, r = t.length; n < r; n++) {
					var i = t[n];
					e.vertices.push(new wt(i.x, i.y, i.z || 0));
				}
				return e;
			},
		}),
		Object.assign(Wc.prototype, {
			fromPoints: function (t) {
				return (
					console.warn(
						'THREE.Path: .fromPoints() has been renamed to .setFromPoints().'
					),
					this.setFromPoints(t)
				);
			},
		}),
		(gh.prototype = Object.create(Pc.prototype)),
		(yh.prototype = Object.create(Pc.prototype)),
		(xh.prototype = Object.create(Pc.prototype)),
		Object.assign(xh.prototype, {
			initFromArray: function () {
				console.error('THREE.Spline: .initFromArray() has been removed.');
			},
			getControlPointsArray: function () {
				console.error(
					'THREE.Spline: .getControlPointsArray() has been removed.'
				);
			},
			reparametrizeByArcLength: function () {
				console.error(
					'THREE.Spline: .reparametrizeByArcLength() has been removed.'
				);
			},
		}),
		(Cu.prototype.setColors = function () {
			console.error(
				'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.'
			);
		}),
		(Mu.prototype.update = function () {
			console.error(
				'THREE.SkeletonHelper: update() no longer needs to be called.'
			);
		}),
		Object.assign(fc.prototype, {
			extractUrlBase: function (t) {
				return (
					console.warn(
						'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.'
					),
					sl.extractUrlBase(t)
				);
			},
		}),
		(fc.Handlers = {
			add: function () {
				console.error(
					'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.'
				);
			},
			get: function () {
				console.error(
					'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.'
				);
			},
		}),
		Object.assign(pu.prototype, {
			center: function (t) {
				return (
					console.warn(
						'THREE.Box2: .center() has been renamed to .getCenter().'
					),
					this.getCenter(t)
				);
			},
			empty: function () {
				return (
					console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().'),
					this.isEmpty()
				);
			},
			isIntersectionBox: function (t) {
				return (
					console.warn(
						'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().'
					),
					this.intersectsBox(t)
				);
			},
			size: function (t) {
				return (
					console.warn('THREE.Box2: .size() has been renamed to .getSize().'),
					this.getSize(t)
				);
			},
		}),
		Object.assign(Tt.prototype, {
			center: function (t) {
				return (
					console.warn(
						'THREE.Box3: .center() has been renamed to .getCenter().'
					),
					this.getCenter(t)
				);
			},
			empty: function () {
				return (
					console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().'),
					this.isEmpty()
				);
			},
			isIntersectionBox: function (t) {
				return (
					console.warn(
						'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().'
					),
					this.intersectsBox(t)
				);
			},
			isIntersectionSphere: function (t) {
				return (
					console.warn(
						'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().'
					),
					this.intersectsSphere(t)
				);
			},
			size: function (t) {
				return (
					console.warn('THREE.Box3: .size() has been renamed to .getSize().'),
					this.getSize(t)
				);
			},
		}),
		Object.assign(Ht.prototype, {
			empty: function () {
				return (
					console.warn(
						'THREE.Sphere: .empty() has been renamed to .isEmpty().'
					),
					this.isEmpty()
				);
			},
		}),
		(Qn.prototype.setFromMatrix = function (t) {
			return (
				console.warn(
					'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().'
				),
				this.setFromProjectionMatrix(t)
			);
		}),
		(vu.prototype.center = function (t) {
			return (
				console.warn(
					'THREE.Line3: .center() has been renamed to .getCenter().'
				),
				this.getCenter(t)
			);
		}),
		Object.assign(st, {
			random16: function () {
				return (
					console.warn(
						'THREE.Math: .random16() has been deprecated. Use Math.random() instead.'
					),
					Math.random()
				);
			},
			nearestPowerOfTwo: function (t) {
				return (
					console.warn(
						'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().'
					),
					st.floorPowerOfTwo(t)
				);
			},
			nextPowerOfTwo: function (t) {
				return (
					console.warn(
						'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().'
					),
					st.ceilPowerOfTwo(t)
				);
			},
		}),
		Object.assign(ft.prototype, {
			flattenToArrayOffset: function (t, e) {
				return (
					console.warn(
						'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.'
					),
					this.toArray(t, e)
				);
			},
			multiplyVector3: function (t) {
				return (
					console.warn(
						'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.'
					),
					t.applyMatrix3(this)
				);
			},
			multiplyVector3Array: function () {
				console.error(
					'THREE.Matrix3: .multiplyVector3Array() has been removed.'
				);
			},
			applyToBufferAttribute: function (t) {
				return (
					console.warn(
						'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.'
					),
					t.applyMatrix3(this)
				);
			},
			applyToVector3Array: function () {
				console.error(
					'THREE.Matrix3: .applyToVector3Array() has been removed.'
				);
			},
		}),
		Object.assign(Jt.prototype, {
			extractPosition: function (t) {
				return (
					console.warn(
						'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().'
					),
					this.copyPosition(t)
				);
			},
			flattenToArrayOffset: function (t, e) {
				return (
					console.warn(
						'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.'
					),
					this.toArray(t, e)
				);
			},
			getPosition: function () {
				return (
					console.warn(
						'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.'
					),
					new wt().setFromMatrixColumn(this, 3)
				);
			},
			setRotationFromQuaternion: function (t) {
				return (
					console.warn(
						'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().'
					),
					this.makeRotationFromQuaternion(t)
				);
			},
			multiplyToArray: function () {
				console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');
			},
			multiplyVector3: function (t) {
				return (
					console.warn(
						'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.'
					),
					t.applyMatrix4(this)
				);
			},
			multiplyVector4: function (t) {
				return (
					console.warn(
						'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.'
					),
					t.applyMatrix4(this)
				);
			},
			multiplyVector3Array: function () {
				console.error(
					'THREE.Matrix4: .multiplyVector3Array() has been removed.'
				);
			},
			rotateAxis: function (t) {
				console.warn(
					'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.'
				),
					t.transformDirection(this);
			},
			crossVector: function (t) {
				return (
					console.warn(
						'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.'
					),
					t.applyMatrix4(this)
				);
			},
			translate: function () {
				console.error('THREE.Matrix4: .translate() has been removed.');
			},
			rotateX: function () {
				console.error('THREE.Matrix4: .rotateX() has been removed.');
			},
			rotateY: function () {
				console.error('THREE.Matrix4: .rotateY() has been removed.');
			},
			rotateZ: function () {
				console.error('THREE.Matrix4: .rotateZ() has been removed.');
			},
			rotateByAxis: function () {
				console.error('THREE.Matrix4: .rotateByAxis() has been removed.');
			},
			applyToBufferAttribute: function (t) {
				return (
					console.warn(
						'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.'
					),
					t.applyMatrix4(this)
				);
			},
			applyToVector3Array: function () {
				console.error(
					'THREE.Matrix4: .applyToVector3Array() has been removed.'
				);
			},
			makeFrustum: function (t, e, n, r, i, a) {
				return (
					console.warn(
						'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.'
					),
					this.makePerspective(t, e, r, n, i, a)
				);
			},
		}),
		(Te.prototype.isIntersectionLine = function (t) {
			return (
				console.warn(
					'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().'
				),
				this.intersectsLine(t)
			);
		}),
		(bt.prototype.multiplyVector3 = function (t) {
			return (
				console.warn(
					'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.'
				),
				t.applyQuaternion(this)
			);
		}),
		Object.assign(Zt.prototype, {
			isIntersectionBox: function (t) {
				return (
					console.warn(
						'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().'
					),
					this.intersectsBox(t)
				);
			},
			isIntersectionPlane: function (t) {
				return (
					console.warn(
						'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().'
					),
					this.intersectsPlane(t)
				);
			},
			isIntersectionSphere: function (t) {
				return (
					console.warn(
						'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().'
					),
					this.intersectsSphere(t)
				);
			},
		}),
		Object.assign(Be.prototype, {
			area: function () {
				return (
					console.warn(
						'THREE.Triangle: .area() has been renamed to .getArea().'
					),
					this.getArea()
				);
			},
			barycoordFromPoint: function (t, e) {
				return (
					console.warn(
						'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().'
					),
					this.getBarycoord(t, e)
				);
			},
			midpoint: function (t) {
				return (
					console.warn(
						'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().'
					),
					this.getMidpoint(t)
				);
			},
			normal: function (t) {
				return (
					console.warn(
						'THREE.Triangle: .normal() has been renamed to .getNormal().'
					),
					this.getNormal(t)
				);
			},
			plane: function (t) {
				return (
					console.warn(
						'THREE.Triangle: .plane() has been renamed to .getPlane().'
					),
					this.getPlane(t)
				);
			},
		}),
		Object.assign(Be, {
			barycoordFromPoint: function (t, e, n, r, i) {
				return (
					console.warn(
						'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().'
					),
					Be.getBarycoord(t, e, n, r, i)
				);
			},
			normal: function (t, e, n, r) {
				return (
					console.warn(
						'THREE.Triangle: .normal() has been renamed to .getNormal().'
					),
					Be.getNormal(t, e, n, r)
				);
			},
		}),
		Object.assign(jc.prototype, {
			extractAllPoints: function (t) {
				return (
					console.warn(
						'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.'
					),
					this.extractPoints(t)
				);
			},
			extrude: function (t) {
				return (
					console.warn(
						'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.'
					),
					new us(this, t)
				);
			},
			makeGeometry: function (t) {
				return (
					console.warn(
						'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.'
					),
					new Ss(this, t)
				);
			},
		}),
		Object.assign(pt.prototype, {
			fromAttribute: function (t, e, n) {
				return (
					console.warn(
						'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().'
					),
					this.fromBufferAttribute(t, e, n)
				);
			},
			distanceToManhattan: function (t) {
				return (
					console.warn(
						'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().'
					),
					this.manhattanDistanceTo(t)
				);
			},
			lengthManhattan: function () {
				return (
					console.warn(
						'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().'
					),
					this.manhattanLength()
				);
			},
		}),
		Object.assign(wt.prototype, {
			setEulerFromRotationMatrix: function () {
				console.error(
					'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.'
				);
			},
			setEulerFromQuaternion: function () {
				console.error(
					'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.'
				);
			},
			getPositionFromMatrix: function (t) {
				return (
					console.warn(
						'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().'
					),
					this.setFromMatrixPosition(t)
				);
			},
			getScaleFromMatrix: function (t) {
				return (
					console.warn(
						'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().'
					),
					this.setFromMatrixScale(t)
				);
			},
			getColumnFromMatrix: function (t, e) {
				return (
					console.warn(
						'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().'
					),
					this.setFromMatrixColumn(e, t)
				);
			},
			applyProjection: function (t) {
				return (
					console.warn(
						'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.'
					),
					this.applyMatrix4(t)
				);
			},
			fromAttribute: function (t, e, n) {
				return (
					console.warn(
						'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().'
					),
					this.fromBufferAttribute(t, e, n)
				);
			},
			distanceToManhattan: function (t) {
				return (
					console.warn(
						'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().'
					),
					this.manhattanDistanceTo(t)
				);
			},
			lengthManhattan: function () {
				return (
					console.warn(
						'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().'
					),
					this.manhattanLength()
				);
			},
		}),
		Object.assign(yt.prototype, {
			fromAttribute: function (t, e, n) {
				return (
					console.warn(
						'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().'
					),
					this.fromBufferAttribute(t, e, n)
				);
			},
			lengthManhattan: function () {
				return (
					console.warn(
						'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().'
					),
					this.manhattanLength()
				);
			},
		}),
		Object.assign(yo.prototype, {
			computeTangents: function () {
				console.error('THREE.Geometry: .computeTangents() has been removed.');
			},
			computeLineDistances: function () {
				console.error(
					'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.'
				);
			},
			applyMatrix: function (t) {
				return (
					console.warn(
						'THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().'
					),
					this.applyMatrix4(t)
				);
			},
		}),
		Object.assign(be.prototype, {
			getChildByName: function (t) {
				return (
					console.warn(
						'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().'
					),
					this.getObjectByName(t)
				);
			},
			renderDepth: function () {
				console.warn(
					'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.'
				);
			},
			translate: function (t, e) {
				return (
					console.warn(
						'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.'
					),
					this.translateOnAxis(e, t)
				);
			},
			getWorldRotation: function () {
				console.error(
					'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.'
				);
			},
			applyMatrix: function (t) {
				return (
					console.warn(
						'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().'
					),
					this.applyMatrix4(t)
				);
			},
		}),
		Object.defineProperties(be.prototype, {
			eulerOrder: {
				get: function () {
					return (
						console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.'),
						this.rotation.order
					);
				},
				set: function (t) {
					console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.'),
						(this.rotation.order = t);
				},
			},
			useQuaternion: {
				get: function () {
					console.warn(
						'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.'
					);
				},
				set: function () {
					console.warn(
						'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.'
					);
				},
			},
		}),
		Object.assign(Nn.prototype, {
			setDrawMode: function () {
				console.error(
					'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.'
				);
			},
		}),
		Object.defineProperties(Nn.prototype, {
			drawMode: {
				get: function () {
					return (
						console.error(
							'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.'
						),
						0
					);
				},
				set: function () {
					console.error(
						'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.'
					);
				},
			},
		}),
		Object.defineProperties(Na.prototype, {
			objects: {
				get: function () {
					return (
						console.warn('THREE.LOD: .objects has been renamed to .levels.'),
						this.levels
					);
				},
			},
		}),
		Object.defineProperty(Ga.prototype, 'useVertexTexture', {
			get: function () {
				console.warn('THREE.Skeleton: useVertexTexture has been removed.');
			},
			set: function () {
				console.warn('THREE.Skeleton: useVertexTexture has been removed.');
			},
		}),
		(Oa.prototype.initBones = function () {
			console.error('THREE.SkinnedMesh: initBones() has been removed.');
		}),
		Object.defineProperty(Mc.prototype, '__arcLengthDivisions', {
			get: function () {
				return (
					console.warn(
						'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.'
					),
					this.arcLengthDivisions
				);
			},
			set: function (t) {
				console.warn(
					'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.'
				),
					(this.arcLengthDivisions = t);
			},
		}),
		(Vn.prototype.setLens = function (t, e) {
			console.warn(
				'THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.'
			),
				void 0 !== e && (this.filmGauge = e),
				this.setFocalLength(t);
		}),
		Object.defineProperties(qc.prototype, {
			onlyShadow: {
				set: function () {
					console.warn('THREE.Light: .onlyShadow has been removed.');
				},
			},
			shadowCameraFov: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.'
					),
						(this.shadow.camera.fov = t);
				},
			},
			shadowCameraLeft: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.'
					),
						(this.shadow.camera.left = t);
				},
			},
			shadowCameraRight: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowCameraRight is now .shadow.camera.right.'
					),
						(this.shadow.camera.right = t);
				},
			},
			shadowCameraTop: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowCameraTop is now .shadow.camera.top.'
					),
						(this.shadow.camera.top = t);
				},
			},
			shadowCameraBottom: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.'
					),
						(this.shadow.camera.bottom = t);
				},
			},
			shadowCameraNear: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowCameraNear is now .shadow.camera.near.'
					),
						(this.shadow.camera.near = t);
				},
			},
			shadowCameraFar: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowCameraFar is now .shadow.camera.far.'
					),
						(this.shadow.camera.far = t);
				},
			},
			shadowCameraVisible: {
				set: function () {
					console.warn(
						'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.'
					);
				},
			},
			shadowBias: {
				set: function (t) {
					console.warn('THREE.Light: .shadowBias is now .shadow.bias.'),
						(this.shadow.bias = t);
				},
			},
			shadowDarkness: {
				set: function () {
					console.warn('THREE.Light: .shadowDarkness has been removed.');
				},
			},
			shadowMapWidth: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.'
					),
						(this.shadow.mapSize.width = t);
				},
			},
			shadowMapHeight: {
				set: function (t) {
					console.warn(
						'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.'
					),
						(this.shadow.mapSize.height = t);
				},
			},
		}),
		Object.defineProperties(Je.prototype, {
			length: {
				get: function () {
					return (
						console.warn(
							'THREE.BufferAttribute: .length has been deprecated. Use .count instead.'
						),
						this.array.length
					);
				},
			},
			dynamic: {
				get: function () {
					return (
						console.warn(
							'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.'
						),
						this.usage === et
					);
				},
				set: function () {
					console.warn(
						'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.'
					),
						this.setUsage(et);
				},
			},
		}),
		Object.assign(Je.prototype, {
			setDynamic: function (t) {
				return (
					console.warn(
						'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.'
					),
					this.setUsage(!0 === t ? et : tt),
					this
				);
			},
			copyIndicesArray: function () {
				console.error(
					'THREE.BufferAttribute: .copyIndicesArray() has been removed.'
				);
			},
			setArray: function () {
				console.error(
					'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers'
				);
			},
		}),
		Object.assign(vn.prototype, {
			addIndex: function (t) {
				console.warn(
					'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().'
				),
					this.setIndex(t);
			},
			addAttribute: function (t, e) {
				return (
					console.warn(
						'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().'
					),
					(e && e.isBufferAttribute) || (e && e.isInterleavedBufferAttribute)
						? 'index' === t
							? (console.warn(
									'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.'
							  ),
							  this.setIndex(e),
							  this)
							: this.setAttribute(t, e)
						: (console.warn(
								'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).'
						  ),
						  this.setAttribute(t, new Je(arguments[1], arguments[2])))
				);
			},
			addDrawCall: function (t, e, n) {
				void 0 !== n &&
					console.warn(
						'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.'
					),
					console.warn(
						'THREE.BufferGeometry: .addDrawCall() is now .addGroup().'
					),
					this.addGroup(t, e);
			},
			clearDrawCalls: function () {
				console.warn(
					'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().'
				),
					this.clearGroups();
			},
			computeTangents: function () {
				console.warn(
					'THREE.BufferGeometry: .computeTangents() has been removed.'
				);
			},
			computeOffsets: function () {
				console.warn(
					'THREE.BufferGeometry: .computeOffsets() has been removed.'
				);
			},
			removeAttribute: function (t) {
				return (
					console.warn(
						'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().'
					),
					this.deleteAttribute(t)
				);
			},
			applyMatrix: function (t) {
				return (
					console.warn(
						'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().'
					),
					this.applyMatrix4(t)
				);
			},
		}),
		Object.defineProperties(vn.prototype, {
			drawcalls: {
				get: function () {
					return (
						console.error(
							'THREE.BufferGeometry: .drawcalls has been renamed to .groups.'
						),
						this.groups
					);
				},
			},
			offsets: {
				get: function () {
					return (
						console.warn(
							'THREE.BufferGeometry: .offsets has been renamed to .groups.'
						),
						this.groups
					);
				},
			},
		}),
		Object.defineProperties(cl.prototype, {
			maxInstancedCount: {
				get: function () {
					return (
						console.warn(
							'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.'
						),
						this.instanceCount
					);
				},
				set: function (t) {
					console.warn(
						'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.'
					),
						(this.instanceCount = t);
				},
			},
		}),
		Object.defineProperties(su.prototype, {
			linePrecision: {
				get: function () {
					return (
						console.warn(
							'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.'
						),
						this.params.Line.threshold
					);
				},
				set: function (t) {
					console.warn(
						'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.'
					),
						(this.params.Line.threshold = t);
				},
			},
		}),
		Object.defineProperties(ca.prototype, {
			dynamic: {
				get: function () {
					return (
						console.warn(
							'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.'
						),
						this.usage === et
					);
				},
				set: function (t) {
					console.warn(
						'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.'
					),
						this.setUsage(t);
				},
			},
		}),
		Object.assign(ca.prototype, {
			setDynamic: function (t) {
				return (
					console.warn(
						'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.'
					),
					this.setUsage(!0 === t ? et : tt),
					this
				);
			},
			setArray: function () {
				console.error(
					'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers'
				);
			},
		}),
		Object.assign(cs.prototype, {
			getArrays: function () {
				console.error(
					'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.'
				);
			},
			addShapeList: function () {
				console.error(
					'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.'
				);
			},
			addShape: function () {
				console.error(
					'THREE.ExtrudeBufferGeometry: .addShape() has been removed.'
				);
			},
		}),
		Object.assign(sa.prototype, {
			dispose: function () {
				console.error('THREE.Scene: .dispose() has been removed.');
			},
		}),
		Object.defineProperties(iu.prototype, {
			dynamic: {
				set: function () {
					console.warn(
						'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.'
					);
				},
			},
			onUpdate: {
				value: function () {
					return (
						console.warn(
							'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.'
						),
						this
					);
				},
			},
		}),
		Object.defineProperties(qe.prototype, {
			wrapAround: {
				get: function () {
					console.warn('THREE.Material: .wrapAround has been removed.');
				},
				set: function () {
					console.warn('THREE.Material: .wrapAround has been removed.');
				},
			},
			overdraw: {
				get: function () {
					console.warn('THREE.Material: .overdraw has been removed.');
				},
				set: function () {
					console.warn('THREE.Material: .overdraw has been removed.');
				},
			},
			wrapRGB: {
				get: function () {
					return (
						console.warn('THREE.Material: .wrapRGB has been removed.'), new Ve()
					);
				},
			},
			shading: {
				get: function () {
					console.error(
						'THREE.' +
							this.type +
							': .shading has been removed. Use the boolean .flatShading instead.'
					);
				},
				set: function (t) {
					console.warn(
						'THREE.' +
							this.type +
							': .shading has been removed. Use the boolean .flatShading instead.'
					),
						(this.flatShading = 1 === t);
				},
			},
			stencilMask: {
				get: function () {
					return (
						console.warn(
							'THREE.' +
								this.type +
								': .stencilMask has been removed. Use .stencilFuncMask instead.'
						),
						this.stencilFuncMask
					);
				},
				set: function (t) {
					console.warn(
						'THREE.' +
							this.type +
							': .stencilMask has been removed. Use .stencilFuncMask instead.'
					),
						(this.stencilFuncMask = t);
				},
			},
		}),
		Object.defineProperties(Vs.prototype, {
			metal: {
				get: function () {
					return (
						console.warn(
							'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.'
						),
						!1
					);
				},
				set: function () {
					console.warn(
						'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead'
					);
				},
			},
		}),
		Object.defineProperties(ks.prototype, {
			transparency: {
				get: function () {
					return (
						console.warn(
							'THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.'
						),
						this.transmission
					);
				},
				set: function (t) {
					console.warn(
						'THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.'
					),
						(this.transmission = t);
				},
			},
		}),
		Object.defineProperties(Hn.prototype, {
			derivatives: {
				get: function () {
					return (
						console.warn(
							'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.'
						),
						this.extensions.derivatives
					);
				},
				set: function (t) {
					console.warn(
						'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.'
					),
						(this.extensions.derivatives = t);
				},
			},
		}),
		Object.assign(ra.prototype, {
			clearTarget: function (t, e, n, r) {
				console.warn(
					'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.'
				),
					this.setRenderTarget(t),
					this.clear(e, n, r);
			},
			animate: function (t) {
				console.warn(
					'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().'
				),
					this.setAnimationLoop(t);
			},
			getCurrentRenderTarget: function () {
				return (
					console.warn(
						'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().'
					),
					this.getRenderTarget()
				);
			},
			getMaxAnisotropy: function () {
				return (
					console.warn(
						'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().'
					),
					this.capabilities.getMaxAnisotropy()
				);
			},
			getPrecision: function () {
				return (
					console.warn(
						'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.'
					),
					this.capabilities.precision
				);
			},
			resetGLState: function () {
				return (
					console.warn(
						'THREE.WebGLRenderer: .resetGLState() is now .state.reset().'
					),
					this.state.reset()
				);
			},
			supportsFloatTextures: function () {
				return (
					console.warn(
						"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."
					),
					this.extensions.get('OES_texture_float')
				);
			},
			supportsHalfFloatTextures: function () {
				return (
					console.warn(
						"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."
					),
					this.extensions.get('OES_texture_half_float')
				);
			},
			supportsStandardDerivatives: function () {
				return (
					console.warn(
						"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."
					),
					this.extensions.get('OES_standard_derivatives')
				);
			},
			supportsCompressedTextureS3TC: function () {
				return (
					console.warn(
						"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."
					),
					this.extensions.get('WEBGL_compressed_texture_s3tc')
				);
			},
			supportsCompressedTexturePVRTC: function () {
				return (
					console.warn(
						"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."
					),
					this.extensions.get('WEBGL_compressed_texture_pvrtc')
				);
			},
			supportsBlendMinMax: function () {
				return (
					console.warn(
						"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."
					),
					this.extensions.get('EXT_blend_minmax')
				);
			},
			supportsVertexTextures: function () {
				return (
					console.warn(
						'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.'
					),
					this.capabilities.vertexTextures
				);
			},
			supportsInstancedArrays: function () {
				return (
					console.warn(
						"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."
					),
					this.extensions.get('ANGLE_instanced_arrays')
				);
			},
			enableScissorTest: function (t) {
				console.warn(
					'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().'
				),
					this.setScissorTest(t);
			},
			initMaterial: function () {
				console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');
			},
			addPrePlugin: function () {
				console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');
			},
			addPostPlugin: function () {
				console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');
			},
			updateShadowMap: function () {
				console.warn(
					'THREE.WebGLRenderer: .updateShadowMap() has been removed.'
				);
			},
			setFaceCulling: function () {
				console.warn(
					'THREE.WebGLRenderer: .setFaceCulling() has been removed.'
				);
			},
			allocTextureUnit: function () {
				console.warn(
					'THREE.WebGLRenderer: .allocTextureUnit() has been removed.'
				);
			},
			setTexture: function () {
				console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');
			},
			setTexture2D: function () {
				console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');
			},
			setTextureCube: function () {
				console.warn(
					'THREE.WebGLRenderer: .setTextureCube() has been removed.'
				);
			},
			getActiveMipMapLevel: function () {
				return (
					console.warn(
						'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().'
					),
					this.getActiveMipmapLevel()
				);
			},
		}),
		Object.defineProperties(ra.prototype, {
			shadowMapEnabled: {
				get: function () {
					return this.shadowMap.enabled;
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.'
					),
						(this.shadowMap.enabled = t);
				},
			},
			shadowMapType: {
				get: function () {
					return this.shadowMap.type;
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.'
					),
						(this.shadowMap.type = t);
				},
			},
			shadowMapCullFace: {
				get: function () {
					console.warn(
						'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.'
					);
				},
				set: function () {
					console.warn(
						'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.'
					);
				},
			},
			context: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.'
						),
						this.getContext()
					);
				},
			},
			vr: {
				get: function () {
					return (
						console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr'),
						this.xr
					);
				},
			},
			gammaInput: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.'
						),
						!1
					);
				},
				set: function () {
					console.warn(
						'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.'
					);
				},
			},
			gammaOutput: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.'
						),
						!1
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.'
					),
						(this.outputEncoding = !0 === t ? X : q);
				},
			},
			toneMappingWhitePoint: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.'
						),
						1
					);
				},
				set: function () {
					console.warn(
						'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.'
					);
				},
			},
		}),
		Object.defineProperties(Yi.prototype, {
			cullFace: {
				get: function () {
					console.warn(
						'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.'
					);
				},
				set: function () {
					console.warn(
						'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.'
					);
				},
			},
			renderReverseSided: {
				get: function () {
					console.warn(
						'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.'
					);
				},
				set: function () {
					console.warn(
						'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.'
					);
				},
			},
			renderSingleSided: {
				get: function () {
					console.warn(
						'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.'
					);
				},
				set: function () {
					console.warn(
						'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.'
					);
				},
			},
		}),
		Object.defineProperties(xt.prototype, {
			wrapS: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.'
						),
						this.texture.wrapS
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.'
					),
						(this.texture.wrapS = t);
				},
			},
			wrapT: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.'
						),
						this.texture.wrapT
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.'
					),
						(this.texture.wrapT = t);
				},
			},
			magFilter: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.'
						),
						this.texture.magFilter
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.'
					),
						(this.texture.magFilter = t);
				},
			},
			minFilter: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.'
						),
						this.texture.minFilter
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.'
					),
						(this.texture.minFilter = t);
				},
			},
			anisotropy: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.'
						),
						this.texture.anisotropy
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.'
					),
						(this.texture.anisotropy = t);
				},
			},
			offset: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .offset is now .texture.offset.'
						),
						this.texture.offset
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .offset is now .texture.offset.'
					),
						(this.texture.offset = t);
				},
			},
			repeat: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.'
						),
						this.texture.repeat
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.'
					),
						(this.texture.repeat = t);
				},
			},
			format: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .format is now .texture.format.'
						),
						this.texture.format
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .format is now .texture.format.'
					),
						(this.texture.format = t);
				},
			},
			type: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .type is now .texture.type.'
						),
						this.texture.type
					);
				},
				set: function (t) {
					console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.'),
						(this.texture.type = t);
				},
			},
			generateMipmaps: {
				get: function () {
					return (
						console.warn(
							'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.'
						),
						this.texture.generateMipmaps
					);
				},
				set: function (t) {
					console.warn(
						'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.'
					),
						(this.texture.generateMipmaps = t);
				},
			},
		}),
		Object.defineProperties(Ol.prototype, {
			load: {
				value: function (t) {
					console.warn(
						'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.'
					);
					var e = this;
					return (
						new Ml().load(t, function (t) {
							e.setBuffer(t);
						}),
						this
					);
				},
			},
			startTime: {
				set: function () {
					console.warn('THREE.Audio: .startTime is now .play( delay ).');
				},
			},
		}),
		(Hl.prototype.getData = function () {
			return (
				console.warn(
					'THREE.AudioAnalyser: .getData() is now .getFrequencyData().'
				),
				this.getFrequencyData()
			);
		}),
		(jn.prototype.updateCubeMap = function (t, e) {
			return (
				console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().'),
				this.update(t, e)
			);
		});
	var _h = {
		merge: function (t, e, n) {
			var r;
			console.warn(
				'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.'
			),
				e.isMesh &&
					(e.matrixAutoUpdate && e.updateMatrix(),
					(r = e.matrix),
					(e = e.geometry)),
				t.merge(e, r, n);
		},
		center: function (t) {
			return (
				console.warn(
					'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.'
				),
				t.center()
			);
		},
	};
	(mt.crossOrigin = void 0),
		(mt.loadTexture = function (t, e, n, r) {
			console.warn(
				'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.'
			);
			var i = new wc();
			i.setCrossOrigin(this.crossOrigin);
			var a = i.load(t, n, void 0, r);
			return e && (a.mapping = e), a;
		}),
		(mt.loadTextureCube = function (t, e, n, r) {
			console.warn(
				'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.'
			);
			var i = new _c();
			i.setCrossOrigin(this.crossOrigin);
			var a = i.load(t, n, void 0, r);
			return e && (a.mapping = e), a;
		}),
		(mt.loadCompressedTexture = function () {
			console.error(
				'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.'
			);
		}),
		(mt.loadCompressedTextureCube = function () {
			console.error(
				'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.'
			);
		});
	var bh = {
		createMultiMaterialObject: function () {
			console.error(
				'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js'
			);
		},
		detach: function () {
			console.error(
				'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js'
			);
		},
		attach: function () {
			console.error(
				'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js'
			);
		},
	};
	'undefined' != typeof __THREE_DEVTOOLS__ &&
		__THREE_DEVTOOLS__.dispatchEvent(
			new CustomEvent('register', { detail: { revision: '121' } })
		),
		(t.ACESFilmicToneMapping = 4),
		(t.AddEquation = e),
		(t.AddOperation = 2),
		(t.AdditiveAnimationBlendMode = j),
		(t.AdditiveBlending = 2),
		(t.AlphaFormat = 1021),
		(t.AlwaysDepth = 1),
		(t.AlwaysStencilFunc = 519),
		(t.AmbientLight = nl),
		(t.AmbientLightProbe = Tl),
		(t.AnimationClip = lc),
		(t.AnimationLoader = gc),
		(t.AnimationMixer = ru),
		(t.AnimationObjectGroup = eu),
		(t.AnimationUtils = Js),
		(t.ArcCurve = Tc),
		(t.ArrayCamera = Ki),
		(t.ArrowHelper = Yu),
		(t.Audio = Ol),
		(t.AudioAnalyser = Hl),
		(t.AudioContext = wl),
		(t.AudioListener = Nl),
		(t.AudioLoader = Ml),
		(t.AxesHelper = Zu),
		(t.AxisHelper = function (t) {
			return (
				console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.'),
				new Zu(t)
			);
		}),
		(t.BackSide = 1),
		(t.BasicDepthPacking = 3200),
		(t.BasicShadowMap = 0),
		(t.BinaryTextureLoader = function (t) {
			return (
				console.warn(
					'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.'
				),
				new bc(t)
			);
		}),
		(t.Bone = Fa),
		(t.BooleanKeyframeTrack = nc),
		(t.BoundingBoxHelper = function (t, e) {
			return (
				console.warn(
					'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.'
				),
				new Wu(t, e)
			);
		}),
		(t.Box2 = pu),
		(t.Box3 = Tt),
		(t.Box3Helper = ju),
		(t.BoxBufferGeometry = zn),
		(t.BoxGeometry = xo),
		(t.BoxHelper = Wu),
		(t.BufferAttribute = Je),
		(t.BufferGeometry = vn),
		(t.BufferGeometryLoader = ul),
		(t.ByteType = 1010),
		(t.Cache = hc),
		(t.Camera = kn),
		(t.CameraHelper = Gu),
		(t.CanvasRenderer = function () {
			console.error('THREE.CanvasRenderer has been removed');
		}),
		(t.CanvasTexture = ho),
		(t.CatmullRomCurve3 = Pc),
		(t.CineonToneMapping = 3),
		(t.CircleBufferGeometry = _o),
		(t.CircleGeometry = bo),
		(t.ClampToEdgeWrapping = u),
		(t.Clock = Rl),
		(t.ClosedSplineCurve3 = gh),
		(t.Color = Ve),
		(t.ColorKeyframeTrack = rc),
		(t.CompressedTexture = uo),
		(t.CompressedTextureLoader = yc),
		(t.ConeBufferGeometry = To),
		(t.ConeGeometry = So),
		(t.CubeCamera = jn),
		(t.CubeGeometry = xo),
		(t.CubeReflectionMapping = r),
		(t.CubeRefractionMapping = i),
		(t.CubeTexture = qn),
		(t.CubeTextureLoader = _c),
		(t.CubeUVReflectionMapping = s),
		(t.CubeUVRefractionMapping = c),
		(t.CubicBezierCurve = Oc),
		(t.CubicBezierCurve3 = Bc),
		(t.CubicInterpolant = Ks),
		(t.CullFaceBack = 1),
		(t.CullFaceFront = 2),
		(t.CullFaceFrontBack = 3),
		(t.CullFaceNone = 0),
		(t.Curve = Mc),
		(t.CurvePath = Vc),
		(t.CustomBlending = 5),
		(t.CustomToneMapping = 5),
		(t.CylinderBufferGeometry = wo),
		(t.CylinderGeometry = Mo),
		(t.Cylindrical = hu),
		(t.DataTexture = Yn),
		(t.DataTexture2DArray = yr),
		(t.DataTexture3D = xr),
		(t.DataTextureLoader = bc),
		(t.DecrementStencilOp = 7683),
		(t.DecrementWrapStencilOp = 34056),
		(t.DefaultLoadingManager = pc),
		(t.DepthFormat = E),
		(t.DepthStencilFormat = A),
		(t.DepthTexture = po),
		(t.DirectionalLight = el),
		(t.DirectionalLightHelper = Ou),
		(t.DiscreteInterpolant = tc),
		(t.DodecahedronBufferGeometry = Ao),
		(t.DodecahedronGeometry = Lo),
		(t.DoubleSide = 2),
		(t.DstAlphaFactor = 206),
		(t.DstColorFactor = 208),
		(t.DynamicBufferAttribute = function (t, e) {
			return (
				console.warn(
					'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.'
				),
				new Je(t, e).setUsage(et)
			);
		}),
		(t.DynamicCopyUsage = 35050),
		(t.DynamicDrawUsage = et),
		(t.DynamicReadUsage = 35049),
		(t.EdgesGeometry = Do),
		(t.EdgesHelper = function (t, e) {
			return (
				console.warn(
					'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.'
				),
				new to(
					new Do(t.geometry),
					new ja({ color: void 0 !== e ? e : 16777215 })
				)
			);
		}),
		(t.EllipseCurve = Sc),
		(t.EqualDepth = 4),
		(t.EqualStencilFunc = 514),
		(t.EquirectangularReflectionMapping = a),
		(t.EquirectangularRefractionMapping = o),
		(t.Euler = ie),
		(t.EventDispatcher = rt),
		(t.ExtrudeBufferGeometry = cs),
		(t.ExtrudeGeometry = us),
		(t.Face3 = We),
		(t.Face4 = function (t, e, n, r, i, a, o) {
			return (
				console.warn(
					'THREE.Face4 has been removed. A THREE.Face3 will be created instead.'
				),
				new We(t, e, n, i, a, o)
			);
		}),
		(t.FaceColors = 1),
		(t.FileLoader = vc),
		(t.FlatShading = 1),
		(t.Float32Attribute = function (t, e) {
			return (
				console.warn(
					'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.'
				),
				new an(t, e)
			);
		}),
		(t.Float32BufferAttribute = an),
		(t.Float64Attribute = function (t, e) {
			return (
				console.warn(
					'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.'
				),
				new on(t, e)
			);
		}),
		(t.Float64BufferAttribute = on),
		(t.FloatType = b),
		(t.Fog = oa),
		(t.FogExp2 = aa),
		(t.Font = xl),
		(t.FontLoader = bl),
		(t.FrontSide = 0),
		(t.Frustum = Qn),
		(t.GLBufferAttribute = ou),
		(t.GLSL1 = '100'),
		(t.GLSL3 = nt),
		(t.GammaEncoding = Y),
		(t.Geometry = yo),
		(t.GeometryUtils = _h),
		(t.GreaterDepth = 6),
		(t.GreaterEqualDepth = 5),
		(t.GreaterEqualStencilFunc = 518),
		(t.GreaterStencilFunc = 516),
		(t.GridHelper = Cu),
		(t.Group = $i),
		(t.HalfFloatType = w),
		(t.HemisphereLight = Xc),
		(t.HemisphereLightHelper = Ru),
		(t.HemisphereLightProbe = Sl),
		(t.IcosahedronBufferGeometry = hs),
		(t.IcosahedronGeometry = ds),
		(t.ImageBitmapLoader = gl),
		(t.ImageLoader = xc),
		(t.ImageUtils = mt),
		(t.ImmediateRenderObject = gu),
		(t.IncrementStencilOp = 7682),
		(t.IncrementWrapStencilOp = 34055),
		(t.InstancedBufferAttribute = ll),
		(t.InstancedBufferGeometry = cl),
		(t.InstancedInterleavedBuffer = au),
		(t.InstancedMesh = Wa),
		(t.Int16Attribute = function (t, e) {
			return (
				console.warn(
					'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.'
				),
				new tn(t, e)
			);
		}),
		(t.Int16BufferAttribute = tn),
		(t.Int32Attribute = function (t, e) {
			return (
				console.warn(
					'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.'
				),
				new nn(t, e)
			);
		}),
		(t.Int32BufferAttribute = nn),
		(t.Int8Attribute = function (t, e) {
			return (
				console.warn(
					'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.'
				),
				new Qe(t, e)
			);
		}),
		(t.Int8BufferAttribute = Qe),
		(t.IntType = 1013),
		(t.InterleavedBuffer = ca),
		(t.InterleavedBufferAttribute = ha),
		(t.Interpolant = Qs),
		(t.InterpolateDiscrete = G),
		(t.InterpolateLinear = F),
		(t.InterpolateSmooth = U),
		(t.InvertStencilOp = 5386),
		(t.JSONLoader = function () {
			console.error('THREE.JSONLoader has been removed.');
		}),
		(t.KeepStencilOp = $),
		(t.KeyframeTrack = ec),
		(t.LOD = Na),
		(t.LatheBufferGeometry = ps),
		(t.LatheGeometry = fs),
		(t.Layers = se),
		(t.LensFlare = function () {
			console.error(
				'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js'
			);
		}),
		(t.LessDepth = 2),
		(t.LessEqualDepth = 3),
		(t.LessEqualStencilFunc = 515),
		(t.LessStencilFunc = 513),
		(t.Light = qc),
		(t.LightProbe = al),
		(t.Line = Qa),
		(t.Line3 = vu),
		(t.LineBasicMaterial = ja),
		(t.LineCurve = zc),
		(t.LineCurve3 = Gc),
		(t.LineDashedMaterial = Ys),
		(t.LineLoop = eo),
		(t.LinePieces = 1),
		(t.LineSegments = to),
		(t.LineStrip = 0),
		(t.LinearEncoding = q),
		(t.LinearFilter = m),
		(t.LinearInterpolant = $s),
		(t.LinearMipMapLinearFilter = 1008),
		(t.LinearMipMapNearestFilter = 1007),
		(t.LinearMipmapLinearFilter = g),
		(t.LinearMipmapNearestFilter = v),
		(t.LinearToneMapping = 1),
		(t.Loader = fc),
		(t.LoaderUtils = sl),
		(t.LoadingManager = dc),
		(t.LogLuvEncoding = 3003),
		(t.LoopOnce = 2200),
		(t.LoopPingPong = 2202),
		(t.LoopRepeat = 2201),
		(t.LuminanceAlphaFormat = 1025),
		(t.LuminanceFormat = 1024),
		(t.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 }),
		(t.Material = qe),
		(t.MaterialLoader = ol),
		(t.Math = st),
		(t.MathUtils = st),
		(t.Matrix3 = ft),
		(t.Matrix4 = Jt),
		(t.MaxEquation = 104),
		(t.Mesh = Nn),
		(t.MeshBasicMaterial = Xe),
		(t.MeshDepthMaterial = qi),
		(t.MeshDistanceMaterial = Xi),
		(t.MeshFaceMaterial = function (t) {
			return (
				console.warn(
					'THREE.MeshFaceMaterial has been removed. Use an Array instead.'
				),
				t
			);
		}),
		(t.MeshLambertMaterial = qs),
		(t.MeshMatcapMaterial = Xs),
		(t.MeshNormalMaterial = js),
		(t.MeshPhongMaterial = Vs),
		(t.MeshPhysicalMaterial = ks),
		(t.MeshStandardMaterial = Hs),
		(t.MeshToonMaterial = Ws),
		(t.MinEquation = 103),
		(t.MirroredRepeatWrapping = h),
		(t.MixOperation = 1),
		(t.MultiMaterial = function (t) {
			return (
				void 0 === t && (t = []),
				console.warn(
					'THREE.MultiMaterial has been removed. Use an Array instead.'
				),
				(t.isMultiMaterial = !0),
				(t.materials = t),
				(t.clone = function () {
					return t.slice();
				}),
				t
			);
		}),
		(t.MultiplyBlending = 4),
		(t.MultiplyOperation = 0),
		(t.NearestFilter = d),
		(t.NearestMipMapLinearFilter = 1005),
		(t.NearestMipMapNearestFilter = 1004),
		(t.NearestMipmapLinearFilter = f),
		(t.NearestMipmapNearestFilter = p),
		(t.NeverDepth = 0),
		(t.NeverStencilFunc = 512),
		(t.NoBlending = 0),
		(t.NoColors = 0),
		(t.NoToneMapping = 0),
		(t.NormalAnimationBlendMode = W),
		(t.NormalBlending = 1),
		(t.NotEqualDepth = 7),
		(t.NotEqualStencilFunc = 517),
		(t.NumberKeyframeTrack = ic),
		(t.Object3D = be),
		(t.ObjectLoader = pl),
		(t.ObjectSpaceNormalMap = 1),
		(t.OctahedronBufferGeometry = ms),
		(t.OctahedronGeometry = vs),
		(t.OneFactor = 201),
		(t.OneMinusDstAlphaFactor = 207),
		(t.OneMinusDstColorFactor = 209),
		(t.OneMinusSrcAlphaFactor = 205),
		(t.OneMinusSrcColorFactor = 203),
		(t.OrthographicCamera = $c),
		(t.PCFShadowMap = 1),
		(t.PCFSoftShadowMap = 2),
		(t.PMREMGenerator = uh),
		(t.ParametricBufferGeometry = gs),
		(t.ParametricGeometry = ys),
		(t.Particle = function (t) {
			return (
				console.warn('THREE.Particle has been renamed to THREE.Sprite.'),
				new Ta(t)
			);
		}),
		(t.ParticleBasicMaterial = function (t) {
			return (
				console.warn(
					'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.'
				),
				new no(t)
			);
		}),
		(t.ParticleSystem = function (t, e) {
			return (
				console.warn('THREE.ParticleSystem has been renamed to THREE.Points.'),
				new so(t, e)
			);
		}),
		(t.ParticleSystemMaterial = function (t) {
			return (
				console.warn(
					'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.'
				),
				new no(t)
			);
		}),
		(t.Path = Wc),
		(t.PerspectiveCamera = Vn),
		(t.Plane = Te),
		(t.PlaneBufferGeometry = tr),
		(t.PlaneGeometry = xs),
		(t.PlaneHelper = qu),
		(t.PointCloud = function (t, e) {
			return (
				console.warn('THREE.PointCloud has been renamed to THREE.Points.'),
				new so(t, e)
			);
		}),
		(t.PointCloudMaterial = function (t) {
			return (
				console.warn(
					'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.'
				),
				new no(t)
			);
		}),
		(t.PointLight = Kc),
		(t.PointLightHelper = Tu),
		(t.Points = so),
		(t.PointsMaterial = no),
		(t.PolarGridHelper = Pu),
		(t.PolyhedronBufferGeometry = Eo),
		(t.PolyhedronGeometry = _s),
		(t.PositionalAudio = Ul),
		(t.PropertyBinding = tu),
		(t.PropertyMixer = kl),
		(t.QuadraticBezierCurve = Fc),
		(t.QuadraticBezierCurve3 = Uc),
		(t.Quaternion = bt),
		(t.QuaternionKeyframeTrack = oc),
		(t.QuaternionLinearInterpolant = ac),
		(t.REVISION = '121'),
		(t.RGBADepthPacking = 3201),
		(t.RGBAFormat = T),
		(t.RGBAIntegerFormat = 1033),
		(t.RGBA_ASTC_10x10_Format = 37819),
		(t.RGBA_ASTC_10x5_Format = 37816),
		(t.RGBA_ASTC_10x6_Format = 37817),
		(t.RGBA_ASTC_10x8_Format = 37818),
		(t.RGBA_ASTC_12x10_Format = 37820),
		(t.RGBA_ASTC_12x12_Format = 37821),
		(t.RGBA_ASTC_4x4_Format = 37808),
		(t.RGBA_ASTC_5x4_Format = 37809),
		(t.RGBA_ASTC_5x5_Format = 37810),
		(t.RGBA_ASTC_6x5_Format = 37811),
		(t.RGBA_ASTC_6x6_Format = 37812),
		(t.RGBA_ASTC_8x5_Format = 37813),
		(t.RGBA_ASTC_8x6_Format = 37814),
		(t.RGBA_ASTC_8x8_Format = 37815),
		(t.RGBA_BPTC_Format = 36492),
		(t.RGBA_ETC2_EAC_Format = z),
		(t.RGBA_PVRTC_2BPPV1_Format = O),
		(t.RGBA_PVRTC_4BPPV1_Format = N),
		(t.RGBA_S3TC_DXT1_Format = R),
		(t.RGBA_S3TC_DXT3_Format = C),
		(t.RGBA_S3TC_DXT5_Format = P),
		(t.RGBDEncoding = K),
		(t.RGBEEncoding = Z),
		(t.RGBEFormat = 1023),
		(t.RGBFormat = S),
		(t.RGBIntegerFormat = 1032),
		(t.RGBM16Encoding = Q),
		(t.RGBM7Encoding = J),
		(t.RGB_ETC1_Format = 36196),
		(t.RGB_ETC2_Format = B),
		(t.RGB_PVRTC_2BPPV1_Format = D),
		(t.RGB_PVRTC_4BPPV1_Format = I),
		(t.RGB_S3TC_DXT1_Format = L),
		(t.RGFormat = 1030),
		(t.RGIntegerFormat = 1031),
		(t.RawShaderMaterial = Us),
		(t.Ray = Zt),
		(t.Raycaster = su),
		(t.RectAreaLight = rl),
		(t.RedFormat = 1028),
		(t.RedIntegerFormat = 1029),
		(t.ReinhardToneMapping = 2),
		(t.RepeatWrapping = l),
		(t.ReplaceStencilOp = 7681),
		(t.ReverseSubtractEquation = 102),
		(t.RingBufferGeometry = bs),
		(t.RingGeometry = ws),
		(t.SRGB8_ALPHA8_ASTC_10x10_Format = 37851),
		(t.SRGB8_ALPHA8_ASTC_10x5_Format = 37848),
		(t.SRGB8_ALPHA8_ASTC_10x6_Format = 37849),
		(t.SRGB8_ALPHA8_ASTC_10x8_Format = 37850),
		(t.SRGB8_ALPHA8_ASTC_12x10_Format = 37852),
		(t.SRGB8_ALPHA8_ASTC_12x12_Format = 37853),
		(t.SRGB8_ALPHA8_ASTC_4x4_Format = 37840),
		(t.SRGB8_ALPHA8_ASTC_5x4_Format = 37841),
		(t.SRGB8_ALPHA8_ASTC_5x5_Format = 37842),
		(t.SRGB8_ALPHA8_ASTC_6x5_Format = 37843),
		(t.SRGB8_ALPHA8_ASTC_6x6_Format = 37844),
		(t.SRGB8_ALPHA8_ASTC_8x5_Format = 37845),
		(t.SRGB8_ALPHA8_ASTC_8x6_Format = 37846),
		(t.SRGB8_ALPHA8_ASTC_8x8_Format = 37847),
		(t.Scene = sa),
		(t.SceneUtils = bh),
		(t.ShaderChunk = er),
		(t.ShaderLib = rr),
		(t.ShaderMaterial = Hn),
		(t.ShadowMaterial = Fs),
		(t.Shape = jc),
		(t.ShapeBufferGeometry = Ms),
		(t.ShapeGeometry = Ss),
		(t.ShapePath = yl),
		(t.ShapeUtils = as),
		(t.ShortType = 1011),
		(t.Skeleton = Ga),
		(t.SkeletonHelper = Mu),
		(t.SkinnedMesh = Oa),
		(t.SmoothShading = 2),
		(t.Sphere = Ht),
		(t.SphereBufferGeometry = Ts),
		(t.SphereGeometry = Es),
		(t.Spherical = uu),
		(t.SphericalHarmonics3 = il),
		(t.Spline = xh),
		(t.SplineCurve = Hc),
		(t.SplineCurve3 = yh),
		(t.SpotLight = Jc),
		(t.SpotLightHelper = xu),
		(t.Sprite = Ta),
		(t.SpriteMaterial = da),
		(t.SrcAlphaFactor = 204),
		(t.SrcAlphaSaturateFactor = 210),
		(t.SrcColorFactor = 202),
		(t.StaticCopyUsage = 35046),
		(t.StaticDrawUsage = tt),
		(t.StaticReadUsage = 35045),
		(t.StereoCamera = Ll),
		(t.StreamCopyUsage = 35042),
		(t.StreamDrawUsage = 35040),
		(t.StreamReadUsage = 35041),
		(t.StringKeyframeTrack = sc),
		(t.SubtractEquation = 101),
		(t.SubtractiveBlending = 3),
		(t.TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 }),
		(t.TangentSpaceNormalMap = 0),
		(t.TetrahedronBufferGeometry = As),
		(t.TetrahedronGeometry = Ls),
		(t.TextBufferGeometry = Rs),
		(t.TextGeometry = Cs),
		(t.Texture = gt),
		(t.TextureLoader = wc),
		(t.TorusBufferGeometry = Ps),
		(t.TorusGeometry = Is),
		(t.TorusKnotBufferGeometry = Ds),
		(t.TorusKnotGeometry = Ns),
		(t.Triangle = Be),
		(t.TriangleFanDrawMode = 2),
		(t.TriangleStripDrawMode = 1),
		(t.TrianglesDrawMode = 0),
		(t.TubeBufferGeometry = Os),
		(t.TubeGeometry = Bs),
		(t.UVMapping = n),
		(t.Uint16Attribute = function (t, e) {
			return (
				console.warn(
					'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.'
				),
				new en(t, e)
			);
		}),
		(t.Uint16BufferAttribute = en),
		(t.Uint32Attribute = function (t, e) {
			return (
				console.warn(
					'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.'
				),
				new rn(t, e)
			);
		}),
		(t.Uint32BufferAttribute = rn),
		(t.Uint8Attribute = function (t, e) {
			return (
				console.warn(
					'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.'
				),
				new Ke(t, e)
			);
		}),
		(t.Uint8BufferAttribute = Ke),
		(t.Uint8ClampedAttribute = function (t, e) {
			return (
				console.warn(
					'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.'
				),
				new $e(t, e)
			);
		}),
		(t.Uint8ClampedBufferAttribute = $e),
		(t.Uniform = iu),
		(t.UniformsLib = nr),
		(t.UniformsUtils = Un),
		(t.UnsignedByteType = y),
		(t.UnsignedInt248Type = M),
		(t.UnsignedIntType = _),
		(t.UnsignedShort4444Type = 1017),
		(t.UnsignedShort5551Type = 1018),
		(t.UnsignedShort565Type = 1019),
		(t.UnsignedShortType = x),
		(t.VSMShadowMap = 3),
		(t.Vector2 = pt),
		(t.Vector3 = wt),
		(t.Vector4 = yt),
		(t.VectorKeyframeTrack = cc),
		(t.Vertex = function (t, e, n) {
			return (
				console.warn(
					'THREE.Vertex has been removed. Use THREE.Vector3 instead.'
				),
				new wt(t, e, n)
			);
		}),
		(t.VertexColors = 2),
		(t.VideoTexture = lo),
		(t.WebGL1Renderer = ia),
		(t.WebGLCubeRenderTarget = Xn),
		(t.WebGLMultisampleRenderTarget = _t),
		(t.WebGLRenderTarget = xt),
		(t.WebGLRenderTargetCube = function (t, e, n) {
			return (
				console.warn(
					'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).'
				),
				new Xn(t, n)
			);
		}),
		(t.WebGLRenderer = ra),
		(t.WebGLUtils = Qi),
		(t.WireframeGeometry = zs),
		(t.WireframeHelper = function (t, e) {
			return (
				console.warn(
					'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.'
				),
				new to(
					new zs(t.geometry),
					new ja({ color: void 0 !== e ? e : 16777215 })
				)
			);
		}),
		(t.WrapAroundEnding = V),
		(t.XHRLoader = function (t) {
			return (
				console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.'),
				new vc(t)
			);
		}),
		(t.ZeroCurvatureEnding = H),
		(t.ZeroFactor = 200),
		(t.ZeroSlopeEnding = k),
		(t.ZeroStencilOp = 0),
		(t.sRGBEncoding = X),
		Object.defineProperty(t, '__esModule', { value: !0 });
});

!(function (t, e) {
	'object' == typeof exports && 'object' == typeof module
		? (module.exports = e())
		: 'function' == typeof define && define.amd
		? define([], e)
		: 'object' == typeof exports
		? (exports._vantaEffect = e())
		: (t._vantaEffect = e());
})('undefined' != typeof self ? self : this, function () {
	return (function (t) {
		var e = {};
		function i(o) {
			if (e[o]) return e[o].exports;
			var n = (e[o] = { i: o, l: !1, exports: {} });
			return t[o].call(n.exports, n, n.exports, i), (n.l = !0), n.exports;
		}
		return (
			(i.m = t),
			(i.c = e),
			(i.d = function (t, e, o) {
				i.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: o });
			}),
			(i.r = function (t) {
				'undefined' != typeof Symbol &&
					Symbol.toStringTag &&
					Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }),
					Object.defineProperty(t, '__esModule', { value: !0 });
			}),
			(i.t = function (t, e) {
				if ((1 & e && (t = i(t)), 8 & e)) return t;
				if (4 & e && 'object' == typeof t && t && t.__esModule) return t;
				var o = Object.create(null);
				if (
					(i.r(o),
					Object.defineProperty(o, 'default', { enumerable: !0, value: t }),
					2 & e && 'string' != typeof t)
				)
					for (var n in t)
						i.d(
							o,
							n,
							function (e) {
								return t[e];
							}.bind(null, n)
						);
				return o;
			}),
			(i.n = function (t) {
				var e =
					t && t.__esModule
						? function () {
								return t.default;
						  }
						: function () {
								return t;
						  };
				return i.d(e, 'a', e), e;
			}),
			(i.o = function (t, e) {
				return Object.prototype.hasOwnProperty.call(t, e);
			}),
			(i.p = ''),
			i((i.s = 5))
		);
	})([
		function (t, e, i) {
			'use strict';
			function o(t, e) {
				for (let i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
				return t;
			}
			function n() {
				return 'undefined' != typeof navigator
					? /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
							navigator.userAgent
					  ) || window.innerWidth < 600
					: null;
			}
			i.d(e, 'c', function () {
				return o;
			}),
				i.d(e, 'e', function () {
					return n;
				}),
				i.d(e, 'i', function () {
					return s;
				}),
				i.d(e, 'h', function () {
					return r;
				}),
				i.d(e, 'g', function () {
					return h;
				}),
				i.d(e, 'f', function () {
					return a;
				}),
				i.d(e, 'a', function () {
					return u;
				}),
				i.d(e, 'b', function () {
					return c;
				}),
				i.d(e, 'd', function () {
					return l;
				}),
				(Number.prototype.clamp = function (t, e) {
					return Math.min(Math.max(this, t), e);
				});
			const s = (t) => t[Math.floor(Math.random() * t.length)];
			function r(t, e) {
				return (
					null == t && (t = 0),
					null == e && (e = 1),
					t + Math.random() * (e - t)
				);
			}
			function h(t, e) {
				return (
					null == t && (t = 0),
					null == e && (e = 1),
					Math.floor(t + Math.random() * (e - t + 1))
				);
			}
			const a = (t) => document.querySelector(t),
				u = (t) =>
					'number' == typeof t ? '#' + ('00000' + t.toString(16)).slice(-6) : t,
				c = (t, e = 1) => {
					const i = u(t),
						o = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(i),
						n = o
							? {
									r: parseInt(o[1], 16),
									g: parseInt(o[2], 16),
									b: parseInt(o[3], 16),
							  }
							: null;
					return 'rgba(' + n.r + ',' + n.g + ',' + n.b + ',' + e + ')';
				},
				l = (t) => 0.299 * t.r + 0.587 * t.g + 0.114 * t.b;
		},
		function (t, e, i) {
			'use strict';
			i.d(e, 'a', function () {
				return r;
			});
			var o = i(0);
			const n = 'object' == typeof window;
			let s = (n && window.THREE) || {};
			n && !window.VANTA && (window.VANTA = {});
			const r = (n && window.VANTA) || {};
			(r.register = (t, e) => (r[t] = (t) => new e(t))), (r.version = '0.5.21');
			const h = function () {
				return (
					Array.prototype.unshift.call(arguments, '[VANTA]'),
					console.error.apply(this, arguments)
				);
			};
			(r.VantaBase = class {
				constructor(t = {}) {
					if (!n) return !1;
					(r.current = this),
						(this.windowMouseMoveWrapper =
							this.windowMouseMoveWrapper.bind(this)),
						(this.windowTouchWrapper = this.windowTouchWrapper.bind(this)),
						(this.windowGyroWrapper = this.windowGyroWrapper.bind(this)),
						(this.resize = this.resize.bind(this)),
						(this.animationLoop = this.animationLoop.bind(this)),
						(this.restart = this.restart.bind(this));
					const e =
						'function' == typeof this.getDefaultOptions
							? this.getDefaultOptions()
							: this.defaultOptions;
					if (
						((this.options = Object(o.c)(
							{
								mouseControls: !0,
								touchControls: !0,
								gyroControls: !1,
								minHeight: 200,
								minWidth: 200,
								scale: 1,
								scaleMobile: 1,
							},
							e
						)),
						(t instanceof HTMLElement || 'string' == typeof t) &&
							(t = { el: t }),
						Object(o.c)(this.options, t),
						this.options.THREE && (s = this.options.THREE),
						(this.el = this.options.el),
						null == this.el)
					)
						h('Instance needs "el" param!');
					else if (!(this.options.el instanceof HTMLElement)) {
						const t = this.el;
						if (((this.el = Object(o.f)(t)), !this.el))
							return void h('Cannot find element', t);
					}
					this.prepareEl(), this.initThree(), this.setSize();
					try {
						this.init();
					} catch (t) {
						return (
							h('Init error', t),
							this.renderer &&
								this.renderer.domElement &&
								this.el.removeChild(this.renderer.domElement),
							void (
								this.options.backgroundColor &&
								(console.log('[VANTA] Falling back to backgroundColor'),
								(this.el.style.background = Object(o.a)(
									this.options.backgroundColor
								)))
							)
						);
					}
					this.initMouse(), this.resize(), this.animationLoop();
					const i = window.addEventListener;
					i('resize', this.resize),
						window.requestAnimationFrame(this.resize),
						this.options.mouseControls &&
							(i('scroll', this.windowMouseMoveWrapper),
							i('mousemove', this.windowMouseMoveWrapper)),
						this.options.touchControls &&
							(i('touchstart', this.windowTouchWrapper),
							i('touchmove', this.windowTouchWrapper)),
						this.options.gyroControls &&
							i('deviceorientation', this.windowGyroWrapper);
				}
				setOptions(t = {}) {
					Object(o.c)(this.options, t), this.triggerMouseMove();
				}
				prepareEl() {
					let t, e;
					if ('undefined' != typeof Node && Node.TEXT_NODE)
						for (t = 0; t < this.el.childNodes.length; t++) {
							const e = this.el.childNodes[t];
							if (e.nodeType === Node.TEXT_NODE) {
								const t = document.createElement('span');
								(t.textContent = e.textContent),
									e.parentElement.insertBefore(t, e),
									e.remove();
							}
						}
					for (t = 0; t < this.el.children.length; t++)
						(e = this.el.children[t]),
							'static' === getComputedStyle(e).position &&
								(e.style.position = 'relative'),
							'auto' === getComputedStyle(e).zIndex && (e.style.zIndex = 1);
					'static' === getComputedStyle(this.el).position &&
						(this.el.style.position = 'relative');
				}
				applyCanvasStyles(t, e = {}) {
					Object(o.c)(t.style, {
						position: 'absolute',
						zIndex: 0,
						top: 0,
						left: 0,
						background: '',
					}),
						Object(o.c)(t.style, e),
						t.classList.add('vanta-canvas');
				}
				initThree() {
					s.WebGLRenderer
						? ((this.renderer = new s.WebGLRenderer({
								alpha: !0,
								antialias: !0,
						  })),
						  this.el.appendChild(this.renderer.domElement),
						  this.applyCanvasStyles(this.renderer.domElement),
						  isNaN(this.options.backgroundAlpha) &&
								(this.options.backgroundAlpha = 1),
						  (this.scene = new s.Scene()))
						: console.warn('[VANTA] No THREE defined on window');
				}
				getCanvasElement() {
					return this.renderer
						? this.renderer.domElement
						: this.p5renderer
						? this.p5renderer.canvas
						: void 0;
				}
				getCanvasRect() {
					const t = this.getCanvasElement();
					return !!t && t.getBoundingClientRect();
				}
				windowMouseMoveWrapper(t) {
					const e = this.getCanvasRect();
					if (!e) return !1;
					const i = t.clientX - e.left,
						o = t.clientY - e.top;
					i >= 0 &&
						o >= 0 &&
						i <= e.width &&
						o <= e.height &&
						((this.mouseX = i),
						(this.mouseY = o),
						this.options.mouseEase || this.triggerMouseMove(i, o));
				}
				windowTouchWrapper(t) {
					const e = this.getCanvasRect();
					if (!e) return !1;
					if (1 === t.touches.length) {
						const i = t.touches[0].clientX - e.left,
							o = t.touches[0].clientY - e.top;
						i >= 0 &&
							o >= 0 &&
							i <= e.width &&
							o <= e.height &&
							((this.mouseX = i),
							(this.mouseY = o),
							this.options.mouseEase || this.triggerMouseMove(i, o));
					}
				}
				windowGyroWrapper(t) {
					const e = this.getCanvasRect();
					if (!e) return !1;
					const i = Math.round(2 * t.alpha) - e.left,
						o = Math.round(2 * t.beta) - e.top;
					i >= 0 &&
						o >= 0 &&
						i <= e.width &&
						o <= e.height &&
						((this.mouseX = i),
						(this.mouseY = o),
						this.options.mouseEase || this.triggerMouseMove(i, o));
				}
				triggerMouseMove(t, e) {
					void 0 === t &&
						void 0 === e &&
						(this.options.mouseEase
							? ((t = this.mouseEaseX), (e = this.mouseEaseY))
							: ((t = this.mouseX), (e = this.mouseY))),
						this.uniforms &&
							((this.uniforms.iMouse.value.x = t / this.scale),
							(this.uniforms.iMouse.value.y = e / this.scale));
					const i = t / this.width,
						o = e / this.height;
					'function' == typeof this.onMouseMove && this.onMouseMove(i, o);
				}
				setSize() {
					this.scale || (this.scale = 1),
						Object(o.e)() && this.options.scaleMobile
							? (this.scale = this.options.scaleMobile)
							: this.options.scale && (this.scale = this.options.scale),
						(this.width = Math.max(this.el.offsetWidth, this.options.minWidth)),
						(this.height = Math.max(
							this.el.offsetHeight,
							this.options.minHeight
						));
				}
				initMouse() {
					((!this.mouseX && !this.mouseY) ||
						(this.mouseX === this.options.minWidth / 2 &&
							this.mouseY === this.options.minHeight / 2)) &&
						((this.mouseX = this.width / 2),
						(this.mouseY = this.height / 2),
						this.triggerMouseMove(this.mouseX, this.mouseY));
				}
				resize() {
					this.setSize(),
						this.camera &&
							((this.camera.aspect = this.width / this.height),
							'function' == typeof this.camera.updateProjectionMatrix &&
								this.camera.updateProjectionMatrix()),
						this.renderer &&
							(this.renderer.setSize(this.width, this.height),
							this.renderer.setPixelRatio(
								window.devicePixelRatio / this.scale
							)),
						'function' == typeof this.onResize && this.onResize();
				}
				isOnScreen() {
					const t = this.el.offsetHeight,
						e = this.el.getBoundingClientRect(),
						i =
							window.pageYOffset ||
							(
								document.documentElement ||
								document.body.parentNode ||
								document.body
							).scrollTop,
						o = e.top + i;
					return o - window.innerHeight <= i && i <= o + t;
				}
				animationLoop() {
					return (
						this.t || (this.t = 0),
						(this.t += 1),
						this.t2 || (this.t2 = 0),
						(this.t2 += this.options.speed || 1),
						this.uniforms && (this.uniforms.iTime.value = 0.016667 * this.t2),
						this.options.mouseEase &&
							((this.mouseEaseX = this.mouseEaseX || this.mouseX || 0),
							(this.mouseEaseY = this.mouseEaseY || this.mouseY || 0),
							Math.abs(this.mouseEaseX - this.mouseX) +
								Math.abs(this.mouseEaseY - this.mouseY) >
								0.1 &&
								((this.mouseEaseX += 0.05 * (this.mouseX - this.mouseEaseX)),
								(this.mouseEaseY += 0.05 * (this.mouseY - this.mouseEaseY)),
								this.triggerMouseMove(this.mouseEaseX, this.mouseEaseY))),
						(this.isOnScreen() || this.options.forceAnimate) &&
							('function' == typeof this.onUpdate && this.onUpdate(),
							this.scene &&
								this.camera &&
								(this.renderer.render(this.scene, this.camera),
								this.renderer.setClearColor(
									this.options.backgroundColor,
									this.options.backgroundAlpha
								)),
							this.fps && this.fps.update && this.fps.update(),
							'function' == typeof this.afterRender && this.afterRender()),
						(this.req = window.requestAnimationFrame(this.animationLoop))
					);
				}
				restart() {
					if (this.scene)
						for (; this.scene.children.length; )
							this.scene.remove(this.scene.children[0]);
					'function' == typeof this.onRestart && this.onRestart(), this.init();
				}
				init() {
					'function' == typeof this.onInit && this.onInit();
				}
				destroy() {
					'function' == typeof this.onDestroy && this.onDestroy();
					const t = window.removeEventListener;
					t('touchstart', this.windowTouchWrapper),
						t('touchmove', this.windowTouchWrapper),
						t('scroll', this.windowMouseMoveWrapper),
						t('mousemove', this.windowMouseMoveWrapper),
						t('deviceorientation', this.windowGyroWrapper),
						t('resize', this.resize),
						window.cancelAnimationFrame(this.req),
						this.renderer &&
							(this.renderer.domElement &&
								this.el.removeChild(this.renderer.domElement),
							(this.renderer = null),
							(this.scene = null)),
						r.current === this && (r.current = null);
				}
			}),
				(e.b = r.VantaBase);
		},
		function (t, e, i) {
			'use strict';
			i.d(e, 'b', function () {
				return r;
			});
			var o = i(1),
				n = i(0);
			i.d(e, 'a', function () {
				return o.a;
			});
			let s = 'object' == typeof window && window.THREE;
			class r extends o.b {
				constructor(t) {
					((s = t.THREE || s).Color.prototype.toVector = function () {
						return new s.Vector3(this.r, this.g, this.b);
					}),
						super(t),
						(this.updateUniforms = this.updateUniforms.bind(this));
				}
				init() {
					(this.mode = 'shader'),
						(this.uniforms = {
							iTime: { type: 'f', value: 1 },
							iResolution: { type: 'v2', value: new s.Vector2(1, 1) },
							iDpr: { type: 'f', value: window.devicePixelRatio || 1 },
							iMouse: {
								type: 'v2',
								value: new s.Vector2(this.mouseX || 0, this.mouseY || 0),
							},
						}),
						super.init(),
						this.fragmentShader && this.initBasicShader();
				}
				setOptions(t) {
					super.setOptions(t), this.updateUniforms();
				}
				initBasicShader(t = this.fragmentShader, e = this.vertexShader) {
					e ||
						(e =
							'uniform float uTime;\nuniform vec2 uResolution;\nvoid main() {\n  gl_Position = vec4( position, 1.0 );\n}'),
						this.updateUniforms(),
						'function' == typeof this.valuesChanger && this.valuesChanger();
					const i = new s.ShaderMaterial({
							uniforms: this.uniforms,
							vertexShader: e,
							fragmentShader: t,
						}),
						o = this.options.texturePath;
					o &&
						(this.uniforms.iTex = {
							type: 't',
							value: new s.TextureLoader().load(o),
						});
					const n = new s.Mesh(new s.PlaneGeometry(2, 2), i);
					this.scene.add(n),
						(this.camera = new s.Camera()),
						(this.camera.position.z = 1);
				}
				updateUniforms() {
					const t = {};
					let e, i;
					for (e in this.options)
						(i = this.options[e]),
							-1 !== e.toLowerCase().indexOf('color')
								? (t[e] = { type: 'v3', value: new s.Color(i).toVector() })
								: 'number' == typeof i && (t[e] = { type: 'f', value: i });
					return Object(n.c)(this.uniforms, t);
				}
				resize() {
					super.resize(),
						(this.uniforms.iResolution.value.x = this.width / this.scale),
						(this.uniforms.iResolution.value.y = this.height / this.scale);
				}
			}
		},
		,
		,
		function (t, e, i) {
			'use strict';
			i.r(e);
			var o = i(2);
			class n extends o.b {}
			(e.default = o.a.register('CELLS', n)),
				(n.prototype.defaultOptions = {
					color1: 35980,
					color2: 15918901,
					backgroundColor: 14155663,
					amplitudeFactor: 1,
					ringFactor: 1,
					rotationFactor: 1,
					size: 1.5,
					speed: 1,
					scaleMobile: 3,
				}),
				(n.prototype.fragmentShader =
					'uniform vec2 iResolution;\nuniform vec2 iMouse;\nuniform float iTime;\n\nuniform float blurFactor;\nuniform vec3 color1;\nuniform vec3 color2;\nuniform vec3 backgroundColor;\nuniform float size;\nuniform float amplitudeFactor;\nuniform float ringFactor;\nuniform float rotationFactor;\n\nfloat length2(vec2 p) { return dot(p, p); }\n\nfloat noise(vec2 p){\n    return fract(sin(fract(sin(p.x) * (43.13311)) + p.y) * 31.0011);\n}\n\nfloat worley(vec2 p) {\n    float d = 1e30;\n    for (int xo = -1; xo <= 1; ++xo) {\n        for (int yo = -1; yo <= 1; ++yo) {\n            vec2 tp = floor(p) + vec2(xo, yo);\n            d = min(d, length2(p - tp - vec2(noise(tp))));\n        }\n    }\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\n    float timeOffset =  0.15 * sin(iTime * 2.0 + 10.0*(uv.x - uv.y));\n    return 3.0*exp(-4.0*abs(2.0*d - 1.0 + timeOffset));\n}\n\nfloat fworley(vec2 p) {\n    return sqrt(sqrt(sqrt(\n    1.1 * // light\n    worley(p*5. + .3 + iTime*.0525) *\n    sqrt(worley(p * 50. / size + 0.3 + iTime * -0.15)) *\n    sqrt(sqrt(worley(p * -10. + 9.3))))));\n}\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\n    float t = fworley(uv * iResolution.xy / 1500.0);\n    t *= exp(-length2(abs(0.7*uv - 1.0)));\n\n    float tExp = pow(t, 0.5 - t);\n    vec3 c1 = color1 * (1.0 - t);\n    vec3 c2 = color2 * tExp;\n\n    gl_FragColor = vec4(pow(t, 1.0 - t) * (c1 + c2), 1.0);\n}\n');
		},
	]);
});

!(function (e, t) {
	'object' == typeof exports && 'undefined' != typeof module
		? (module.exports = t())
		: 'function' == typeof define && define.amd
		? define(t)
		: (e.AOS = t());
})(this, function () {
	'use strict';
	var e =
			'undefined' != typeof window
				? window
				: 'undefined' != typeof global
				? global
				: 'undefined' != typeof self
				? self
				: {},
		t = 'Expected a function',
		n = NaN,
		o = '[object Symbol]',
		i = /^\s+|\s+$/g,
		a = /^[-+]0x[0-9a-f]+$/i,
		r = /^0b[01]+$/i,
		c = /^0o[0-7]+$/i,
		s = parseInt,
		u = 'object' == typeof e && e && e.Object === Object && e,
		d = 'object' == typeof self && self && self.Object === Object && self,
		l = u || d || Function('return this')(),
		f = Object.prototype.toString,
		m = Math.max,
		p = Math.min,
		b = function () {
			return l.Date.now();
		};
	function v(e, n, o) {
		var i,
			a,
			r,
			c,
			s,
			u,
			d = 0,
			l = !1,
			f = !1,
			v = !0;
		if ('function' != typeof e) throw new TypeError(t);
		function y(t) {
			var n = i,
				o = a;
			return (i = a = void 0), (d = t), (c = e.apply(o, n));
		}
		function h(e) {
			var t = e - u;
			return void 0 === u || t >= n || t < 0 || (f && e - d >= r);
		}
		function k() {
			var e = b();
			if (h(e)) return x(e);
			s = setTimeout(
				k,
				(function (e) {
					var t = n - (e - u);
					return f ? p(t, r - (e - d)) : t;
				})(e)
			);
		}
		function x(e) {
			return (s = void 0), v && i ? y(e) : ((i = a = void 0), c);
		}
		function O() {
			var e = b(),
				t = h(e);
			if (((i = arguments), (a = this), (u = e), t)) {
				if (void 0 === s)
					return (function (e) {
						return (d = e), (s = setTimeout(k, n)), l ? y(e) : c;
					})(u);
				if (f) return (s = setTimeout(k, n)), y(u);
			}
			return void 0 === s && (s = setTimeout(k, n)), c;
		}
		return (
			(n = w(n) || 0),
			g(o) &&
				((l = !!o.leading),
				(r = (f = 'maxWait' in o) ? m(w(o.maxWait) || 0, n) : r),
				(v = 'trailing' in o ? !!o.trailing : v)),
			(O.cancel = function () {
				void 0 !== s && clearTimeout(s), (d = 0), (i = u = a = s = void 0);
			}),
			(O.flush = function () {
				return void 0 === s ? c : x(b());
			}),
			O
		);
	}
	function g(e) {
		var t = typeof e;
		return !!e && ('object' == t || 'function' == t);
	}
	function w(e) {
		if ('number' == typeof e) return e;
		if (
			(function (e) {
				return (
					'symbol' == typeof e ||
					((function (e) {
						return !!e && 'object' == typeof e;
					})(e) &&
						f.call(e) == o)
				);
			})(e)
		)
			return n;
		if (g(e)) {
			var t = 'function' == typeof e.valueOf ? e.valueOf() : e;
			e = g(t) ? t + '' : t;
		}
		if ('string' != typeof e) return 0 === e ? e : +e;
		e = e.replace(i, '');
		var u = r.test(e);
		return u || c.test(e) ? s(e.slice(2), u ? 2 : 8) : a.test(e) ? n : +e;
	}
	var y = function (e, n, o) {
			var i = !0,
				a = !0;
			if ('function' != typeof e) throw new TypeError(t);
			return (
				g(o) &&
					((i = 'leading' in o ? !!o.leading : i),
					(a = 'trailing' in o ? !!o.trailing : a)),
				v(e, n, { leading: i, maxWait: n, trailing: a })
			);
		},
		h = 'Expected a function',
		k = NaN,
		x = '[object Symbol]',
		O = /^\s+|\s+$/g,
		j = /^[-+]0x[0-9a-f]+$/i,
		E = /^0b[01]+$/i,
		N = /^0o[0-7]+$/i,
		z = parseInt,
		C = 'object' == typeof e && e && e.Object === Object && e,
		A = 'object' == typeof self && self && self.Object === Object && self,
		q = C || A || Function('return this')(),
		L = Object.prototype.toString,
		T = Math.max,
		M = Math.min,
		S = function () {
			return q.Date.now();
		};
	function D(e) {
		var t = typeof e;
		return !!e && ('object' == t || 'function' == t);
	}
	function H(e) {
		if ('number' == typeof e) return e;
		if (
			(function (e) {
				return (
					'symbol' == typeof e ||
					((function (e) {
						return !!e && 'object' == typeof e;
					})(e) &&
						L.call(e) == x)
				);
			})(e)
		)
			return k;
		if (D(e)) {
			var t = 'function' == typeof e.valueOf ? e.valueOf() : e;
			e = D(t) ? t + '' : t;
		}
		if ('string' != typeof e) return 0 === e ? e : +e;
		e = e.replace(O, '');
		var n = E.test(e);
		return n || N.test(e) ? z(e.slice(2), n ? 2 : 8) : j.test(e) ? k : +e;
	}
	var $ = function (e, t, n) {
			var o,
				i,
				a,
				r,
				c,
				s,
				u = 0,
				d = !1,
				l = !1,
				f = !0;
			if ('function' != typeof e) throw new TypeError(h);
			function m(t) {
				var n = o,
					a = i;
				return (o = i = void 0), (u = t), (r = e.apply(a, n));
			}
			function p(e) {
				var n = e - s;
				return void 0 === s || n >= t || n < 0 || (l && e - u >= a);
			}
			function b() {
				var e = S();
				if (p(e)) return v(e);
				c = setTimeout(
					b,
					(function (e) {
						var n = t - (e - s);
						return l ? M(n, a - (e - u)) : n;
					})(e)
				);
			}
			function v(e) {
				return (c = void 0), f && o ? m(e) : ((o = i = void 0), r);
			}
			function g() {
				var e = S(),
					n = p(e);
				if (((o = arguments), (i = this), (s = e), n)) {
					if (void 0 === c)
						return (function (e) {
							return (u = e), (c = setTimeout(b, t)), d ? m(e) : r;
						})(s);
					if (l) return (c = setTimeout(b, t)), m(s);
				}
				return void 0 === c && (c = setTimeout(b, t)), r;
			}
			return (
				(t = H(t) || 0),
				D(n) &&
					((d = !!n.leading),
					(a = (l = 'maxWait' in n) ? T(H(n.maxWait) || 0, t) : a),
					(f = 'trailing' in n ? !!n.trailing : f)),
				(g.cancel = function () {
					void 0 !== c && clearTimeout(c), (u = 0), (o = s = i = c = void 0);
				}),
				(g.flush = function () {
					return void 0 === c ? r : v(S());
				}),
				g
			);
		},
		W = function () {};
	function P(e) {
		e &&
			e.forEach(function (e) {
				var t = Array.prototype.slice.call(e.addedNodes),
					n = Array.prototype.slice.call(e.removedNodes);
				if (
					(function e(t) {
						var n = void 0,
							o = void 0;
						for (n = 0; n < t.length; n += 1) {
							if ((o = t[n]).dataset && o.dataset.aos) return !0;
							if (o.children && e(o.children)) return !0;
						}
						return !1;
					})(t.concat(n))
				)
					return W();
			});
	}
	function Y() {
		return (
			window.MutationObserver ||
			window.WebKitMutationObserver ||
			window.MozMutationObserver
		);
	}
	var _ = {
			isSupported: function () {
				return !!Y();
			},
			ready: function (e, t) {
				var n = window.document,
					o = new (Y())(P);
				(W = t),
					o.observe(n.documentElement, {
						childList: !0,
						subtree: !0,
						removedNodes: !0,
					});
			},
		},
		B = function (e, t) {
			if (!(e instanceof t))
				throw new TypeError('Cannot call a class as a function');
		},
		F = (function () {
			function e(e, t) {
				for (var n = 0; n < t.length; n++) {
					var o = t[n];
					(o.enumerable = o.enumerable || !1),
						(o.configurable = !0),
						'value' in o && (o.writable = !0),
						Object.defineProperty(e, o.key, o);
				}
			}
			return function (t, n, o) {
				return n && e(t.prototype, n), o && e(t, o), t;
			};
		})(),
		I =
			Object.assign ||
			function (e) {
				for (var t = 1; t < arguments.length; t++) {
					var n = arguments[t];
					for (var o in n)
						Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
				}
				return e;
			},
		K =
			/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
		G =
			/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
		J =
			/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,
		Q =
			/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i;
	function R() {
		return navigator.userAgent || navigator.vendor || window.opera || '';
	}
	var U = new ((function () {
			function e() {
				B(this, e);
			}
			return (
				F(e, [
					{
						key: 'phone',
						value: function () {
							var e = R();
							return !(!K.test(e) && !G.test(e.substr(0, 4)));
						},
					},
					{
						key: 'mobile',
						value: function () {
							var e = R();
							return !(!J.test(e) && !Q.test(e.substr(0, 4)));
						},
					},
					{
						key: 'tablet',
						value: function () {
							return this.mobile() && !this.phone();
						},
					},
					{
						key: 'ie11',
						value: function () {
							return (
								'-ms-scroll-limit' in document.documentElement.style &&
								'-ms-ime-align' in document.documentElement.style
							);
						},
					},
				]),
				e
			);
		})())(),
		V = function (e, t) {
			var n = void 0;
			return (
				U.ie11()
					? (n = document.createEvent('CustomEvent')).initCustomEvent(
							e,
							!0,
							!0,
							{ detail: t }
					  )
					: (n = new CustomEvent(e, { detail: t })),
				document.dispatchEvent(n)
			);
		},
		X = function (e) {
			return e.forEach(function (e, t) {
				return (function (e, t) {
					var n = e.options,
						o = e.position,
						i = e.node,
						a =
							(e.data,
							function () {
								e.animated &&
									((function (e, t) {
										t &&
											t.forEach(function (t) {
												return e.classList.remove(t);
											});
									})(i, n.animatedClassNames),
									V('aos:out', i),
									e.options.id && V('aos:in:' + e.options.id, i),
									(e.animated = !1));
							});
					n.mirror && t >= o.out && !n.once
						? a()
						: t >= o.in
						? e.animated ||
						  ((function (e, t) {
								t &&
									t.forEach(function (t) {
										return e.classList.add(t);
									});
						  })(i, n.animatedClassNames),
						  V('aos:in', i),
						  e.options.id && V('aos:in:' + e.options.id, i),
						  (e.animated = !0))
						: e.animated && !n.once && a();
				})(e, window.pageYOffset);
			});
		},
		Z = function (e) {
			for (var t = 0, n = 0; e && !isNaN(e.offsetLeft) && !isNaN(e.offsetTop); )
				(t += e.offsetLeft - ('BODY' != e.tagName ? e.scrollLeft : 0)),
					(n += e.offsetTop - ('BODY' != e.tagName ? e.scrollTop : 0)),
					(e = e.offsetParent);
			return { top: n, left: t };
		},
		ee = function (e, t, n) {
			var o = e.getAttribute('data-aos-' + t);
			if (void 0 !== o) {
				if ('true' === o) return !0;
				if ('false' === o) return !1;
			}
			return o || n;
		},
		te = function (e, t) {
			return (
				e.forEach(function (e, n) {
					var o = ee(e.node, 'mirror', t.mirror),
						i = ee(e.node, 'once', t.once),
						a = ee(e.node, 'id'),
						r = t.useClassNames && e.node.getAttribute('data-aos'),
						c = [t.animatedClassName]
							.concat(r ? r.split(' ') : [])
							.filter(function (e) {
								return 'string' == typeof e;
							});
					t.initClassName && e.node.classList.add(t.initClassName),
						(e.position = {
							in: (function (e, t, n) {
								var o = window.innerHeight,
									i = ee(e, 'anchor'),
									a = ee(e, 'anchor-placement'),
									r = Number(ee(e, 'offset', a ? 0 : t)),
									c = a || n,
									s = e;
								i &&
									document.querySelectorAll(i) &&
									(s = document.querySelectorAll(i)[0]);
								var u = Z(s).top - o;
								switch (c) {
									case 'top-bottom':
										break;
									case 'center-bottom':
										u += s.offsetHeight / 2;
										break;
									case 'bottom-bottom':
										u += s.offsetHeight;
										break;
									case 'top-center':
										u += o / 2;
										break;
									case 'center-center':
										u += o / 2 + s.offsetHeight / 2;
										break;
									case 'bottom-center':
										u += o / 2 + s.offsetHeight;
										break;
									case 'top-top':
										u += o;
										break;
									case 'bottom-top':
										u += o + s.offsetHeight;
										break;
									case 'center-top':
										u += o + s.offsetHeight / 2;
								}
								return u + r;
							})(e.node, t.offset, t.anchorPlacement),
							out:
								o &&
								(function (e, t) {
									window.innerHeight;
									var n = ee(e, 'anchor'),
										o = ee(e, 'offset', t),
										i = e;
									return (
										n &&
											document.querySelectorAll(n) &&
											(i = document.querySelectorAll(n)[0]),
										Z(i).top + i.offsetHeight - o
									);
								})(e.node, t.offset),
						}),
						(e.options = { once: i, mirror: o, animatedClassNames: c, id: a });
				}),
				e
			);
		},
		ne = function () {
			var e = document.querySelectorAll('[data-aos]');
			return Array.prototype.map.call(e, function (e) {
				return { node: e };
			});
		},
		oe = [],
		ie = !1,
		ae = {
			offset: 120,
			delay: 0,
			easing: 'ease',
			duration: 400,
			disable: !1,
			once: !1,
			mirror: !1,
			anchorPlacement: 'top-bottom',
			startEvent: 'DOMContentLoaded',
			animatedClassName: 'aos-animate',
			initClassName: 'aos-init',
			useClassNames: !1,
			disableMutationObserver: !1,
			throttleDelay: 99,
			debounceDelay: 50,
		},
		re = function () {
			return document.all && !window.atob;
		},
		ce = function () {
			arguments.length > 0 &&
				void 0 !== arguments[0] &&
				arguments[0] &&
				(ie = !0),
				ie &&
					((oe = te(oe, ae)),
					X(oe),
					window.addEventListener(
						'scroll',
						y(function () {
							X(oe, ae.once);
						}, ae.throttleDelay)
					));
		},
		se = function () {
			if (((oe = ne()), de(ae.disable) || re())) return ue();
			ce();
		},
		ue = function () {
			oe.forEach(function (e, t) {
				e.node.removeAttribute('data-aos'),
					e.node.removeAttribute('data-aos-easing'),
					e.node.removeAttribute('data-aos-duration'),
					e.node.removeAttribute('data-aos-delay'),
					ae.initClassName && e.node.classList.remove(ae.initClassName),
					ae.animatedClassName && e.node.classList.remove(ae.animatedClassName);
			});
		},
		de = function (e) {
			return (
				!0 === e ||
				('mobile' === e && U.mobile()) ||
				('phone' === e && U.phone()) ||
				('tablet' === e && U.tablet()) ||
				('function' == typeof e && !0 === e())
			);
		};
	return {
		init: function (e) {
			return (
				(ae = I(ae, e)),
				(oe = ne()),
				ae.disableMutationObserver ||
					_.isSupported() ||
					(console.info(
						'\n      aos: MutationObserver is not supported on this browser,\n      code mutations observing has been disabled.\n      You may have to call "refreshHard()" by yourself.\n    '
					),
					(ae.disableMutationObserver = !0)),
				ae.disableMutationObserver || _.ready('[data-aos]', se),
				de(ae.disable) || re()
					? ue()
					: (document
							.querySelector('body')
							.setAttribute('data-aos-easing', ae.easing),
					  document
							.querySelector('body')
							.setAttribute('data-aos-duration', ae.duration),
					  document
							.querySelector('body')
							.setAttribute('data-aos-delay', ae.delay),
					  -1 === ['DOMContentLoaded', 'load'].indexOf(ae.startEvent)
							? document.addEventListener(ae.startEvent, function () {
									ce(!0);
							  })
							: window.addEventListener('load', function () {
									ce(!0);
							  }),
					  'DOMContentLoaded' === ae.startEvent &&
							['complete', 'interactive'].indexOf(document.readyState) > -1 &&
							ce(!0),
					  window.addEventListener('resize', $(ce, ae.debounceDelay, !0)),
					  window.addEventListener(
							'orientationchange',
							$(ce, ae.debounceDelay, !0)
					  ),
					  oe)
			);
		},
		refresh: ce,
		refreshHard: se,
	};
});

// ------------------------------------------
// Rellax.js
// Buttery smooth parallax library
// Copyright (c) 2016 Moe Amaya (@moeamaya)
// MIT license
//
// Thanks to Paraxify.js and Jaime Cabllero
// for parallax concepts
// ------------------------------------------

(function (root, factory) {
	if (typeof define === 'function' && define.amd) {
		// AMD. Register as an anonymous module.
		define([], factory);
	} else if (typeof module === 'object' && module.exports) {
		// Node. Does not work with strict CommonJS, but
		// only CommonJS-like environments that support module.exports,
		// like Node.
		module.exports = factory();
	} else {
		// Browser globals (root is window)
		root.Rellax = factory();
	}
})(typeof window !== 'undefined' ? window : global, function () {
	var Rellax = function (el, options) {
		'use strict';

		var self = Object.create(Rellax.prototype);

		var posY = 0;
		var screenY = 0;
		var posX = 0;
		var screenX = 0;
		var blocks = [];
		var pause = true;

		// check what requestAnimationFrame to use, and if
		// it's not supported, use the onscroll event
		var loop =
			window.requestAnimationFrame ||
			window.webkitRequestAnimationFrame ||
			window.mozRequestAnimationFrame ||
			window.msRequestAnimationFrame ||
			window.oRequestAnimationFrame ||
			function (callback) {
				return setTimeout(callback, 1000 / 60);
			};

		// store the id for later use
		var loopId = null;

		// Test via a getter in the options object to see if the passive property is accessed
		var supportsPassive = false;
		try {
			var opts = Object.defineProperty({}, 'passive', {
				get: function () {
					supportsPassive = true;
				},
			});
			window.addEventListener('testPassive', null, opts);
			window.removeEventListener('testPassive', null, opts);
		} catch (e) {}

		// check what cancelAnimation method to use
		var clearLoop =
			window.cancelAnimationFrame ||
			window.mozCancelAnimationFrame ||
			clearTimeout;

		// check which transform property to use
		var transformProp =
			window.transformProp ||
			(function () {
				var testEl = document.createElement('div');
				if (testEl.style.transform === null) {
					var vendors = ['Webkit', 'Moz', 'ms'];
					for (var vendor in vendors) {
						if (testEl.style[vendors[vendor] + 'Transform'] !== undefined) {
							return vendors[vendor] + 'Transform';
						}
					}
				}
				return 'transform';
			})();

		// Default Settings
		self.options = {
			speed: -2,
			verticalSpeed: null,
			horizontalSpeed: null,
			breakpoints: [576, 768, 1201],
			center: false,
			wrapper: null,
			relativeToWrapper: false,
			round: true,
			vertical: true,
			horizontal: false,
			verticalScrollAxis: 'y',
			horizontalScrollAxis: 'x',
			callback: function () {},
		};

		// User defined options (might have more in the future)
		if (options) {
			Object.keys(options).forEach(function (key) {
				self.options[key] = options[key];
			});
		}

		function validateCustomBreakpoints() {
			if (
				self.options.breakpoints.length === 3 &&
				Array.isArray(self.options.breakpoints)
			) {
				var isAscending = true;
				var isNumerical = true;
				var lastVal;
				self.options.breakpoints.forEach(function (i) {
					if (typeof i !== 'number') isNumerical = false;
					if (lastVal !== null) {
						if (i < lastVal) isAscending = false;
					}
					lastVal = i;
				});
				if (isAscending && isNumerical) return;
			}
			// revert defaults if set incorrectly
			self.options.breakpoints = [576, 768, 1201];
			console.warn(
				'Rellax: You must pass an array of 3 numbers in ascending order to the breakpoints option. Defaults reverted'
			);
		}

		if (options && options.breakpoints) {
			validateCustomBreakpoints();
		}

		// By default, rellax class
		if (!el) {
			el = '.rellax';
		}

		// check if el is a className or a node
		var elements =
			typeof el === 'string' ? document.querySelectorAll(el) : [el];

		// Now query selector
		if (elements.length > 0) {
			self.elems = elements;
		}

		// The elements don't exist
		else {
			console.warn("Rellax: The elements you're trying to select don't exist.");
			return;
		}

		// Has a wrapper and it exists
		if (self.options.wrapper) {
			if (!self.options.wrapper.nodeType) {
				var wrapper = document.querySelector(self.options.wrapper);

				if (wrapper) {
					self.options.wrapper = wrapper;
				} else {
					console.warn(
						"Rellax: The wrapper you're trying to use doesn't exist."
					);
					return;
				}
			}
		}

		// set a placeholder for the current breakpoint
		var currentBreakpoint;

		// helper to determine current breakpoint
		var getCurrentBreakpoint = function (w) {
			var bp = self.options.breakpoints;
			if (w < bp[0]) return 'xs';
			if (w >= bp[0] && w < bp[1]) return 'sm';
			if (w >= bp[1] && w < bp[2]) return 'md';
			return 'lg';
		};

		// Get and cache initial position of all elements
		var cacheBlocks = function () {
			for (var i = 0; i < self.elems.length; i++) {
				var block = createBlock(self.elems[i]);
				blocks.push(block);
			}
		};

		// Let's kick this script off
		// Build array for cached element values
		var init = function () {
			for (var i = 0; i < blocks.length; i++) {
				self.elems[i].style.cssText = blocks[i].style;
			}

			blocks = [];

			screenY = window.innerHeight;
			screenX = window.innerWidth;
			currentBreakpoint = getCurrentBreakpoint(screenX);

			setPosition();

			cacheBlocks();

			animate();

			// If paused, unpause and set listener for window resizing events
			if (pause) {
				window.addEventListener('resize', init);
				pause = false;
				// Start the loop
				update();
			}
		};

		// We want to cache the parallax blocks'
		// values: base, top, height, speed
		// el: is dom object, return: el cache values
		var createBlock = function (el) {
			var dataPercentage = el.getAttribute('data-rellax-percentage');
			var dataSpeed = el.getAttribute('data-rellax-speed');
			var dataXsSpeed = el.getAttribute('data-rellax-xs-speed');
			var dataMobileSpeed = el.getAttribute('data-rellax-mobile-speed');
			var dataTabletSpeed = el.getAttribute('data-rellax-tablet-speed');
			var dataDesktopSpeed = el.getAttribute('data-rellax-desktop-speed');
			var dataVerticalSpeed = el.getAttribute('data-rellax-vertical-speed');
			var dataHorizontalSpeed = el.getAttribute('data-rellax-horizontal-speed');
			var dataVericalScrollAxis = el.getAttribute(
				'data-rellax-vertical-scroll-axis'
			);
			var dataHorizontalScrollAxis = el.getAttribute(
				'data-rellax-horizontal-scroll-axis'
			);
			var dataZindex = el.getAttribute('data-rellax-zindex') || 0;
			var dataMin = el.getAttribute('data-rellax-min');
			var dataMax = el.getAttribute('data-rellax-max');
			var dataMinX = el.getAttribute('data-rellax-min-x');
			var dataMaxX = el.getAttribute('data-rellax-max-x');
			var dataMinY = el.getAttribute('data-rellax-min-y');
			var dataMaxY = el.getAttribute('data-rellax-max-y');
			var mapBreakpoints;
			var breakpoints = true;

			if (
				!dataXsSpeed &&
				!dataMobileSpeed &&
				!dataTabletSpeed &&
				!dataDesktopSpeed
			) {
				breakpoints = false;
			} else {
				mapBreakpoints = {
					xs: dataXsSpeed,
					sm: dataMobileSpeed,
					md: dataTabletSpeed,
					lg: dataDesktopSpeed,
				};
			}

			// initializing at scrollY = 0 (top of browser), scrollX = 0 (left of browser)
			// ensures elements are positioned based on HTML layout.
			//
			// If the element has the percentage attribute, the posY and posX needs to be
			// the current scroll position's value, so that the elements are still positioned based on HTML layout
			var wrapperPosY = self.options.wrapper
				? self.options.wrapper.scrollTop
				: window.pageYOffset ||
				  document.documentElement.scrollTop ||
				  document.body.scrollTop;
			// If the option relativeToWrapper is true, use the wrappers offset to top, subtracted from the current page scroll.
			if (self.options.relativeToWrapper) {
				var scrollPosY =
					window.pageYOffset ||
					document.documentElement.scrollTop ||
					document.body.scrollTop;
				wrapperPosY = scrollPosY - self.options.wrapper.offsetTop;
			}
			var posY = self.options.vertical
				? dataPercentage || self.options.center
					? wrapperPosY
					: 0
				: 0;
			var posX = self.options.horizontal
				? dataPercentage || self.options.center
					? self.options.wrapper
						? self.options.wrapper.scrollLeft
						: window.pageXOffset ||
						  document.documentElement.scrollLeft ||
						  document.body.scrollLeft
					: 0
				: 0;

			var blockTop = posY + el.getBoundingClientRect().top;
			var blockHeight = el.clientHeight || el.offsetHeight || el.scrollHeight;

			var blockLeft = posX + el.getBoundingClientRect().left;
			var blockWidth = el.clientWidth || el.offsetWidth || el.scrollWidth;

			// apparently parallax equation everyone uses
			var percentageY = dataPercentage
				? dataPercentage
				: (posY - blockTop + screenY) / (blockHeight + screenY);
			var percentageX = dataPercentage
				? dataPercentage
				: (posX - blockLeft + screenX) / (blockWidth + screenX);
			if (self.options.center) {
				percentageX = 0.5;
				percentageY = 0.5;
			}

			// Optional individual block speed as data attr, otherwise global speed
			var speed =
				breakpoints && mapBreakpoints[currentBreakpoint] !== null
					? Number(mapBreakpoints[currentBreakpoint])
					: dataSpeed
					? dataSpeed
					: self.options.speed;
			var verticalSpeed = dataVerticalSpeed
				? dataVerticalSpeed
				: self.options.verticalSpeed;
			var horizontalSpeed = dataHorizontalSpeed
				? dataHorizontalSpeed
				: self.options.horizontalSpeed;

			// Optional individual block movement axis direction as data attr, otherwise global movement direction
			var verticalScrollAxis = dataVericalScrollAxis
				? dataVericalScrollAxis
				: self.options.verticalScrollAxis;
			var horizontalScrollAxis = dataHorizontalScrollAxis
				? dataHorizontalScrollAxis
				: self.options.horizontalScrollAxis;

			var bases = updatePosition(
				percentageX,
				percentageY,
				speed,
				verticalSpeed,
				horizontalSpeed
			);

			// ~~Store non-translate3d transforms~~
			// Store inline styles and extract transforms
			var style = el.style.cssText;
			var transform = '';

			// Check if there's an inline styled transform
			var searchResult = /transform\s*:/i.exec(style);
			if (searchResult) {
				// Get the index of the transform
				var index = searchResult.index;

				// Trim the style to the transform point and get the following semi-colon index
				var trimmedStyle = style.slice(index);
				var delimiter = trimmedStyle.indexOf(';');

				// Remove "transform" string and save the attribute
				if (delimiter) {
					transform =
						' ' + trimmedStyle.slice(11, delimiter).replace(/\s/g, '');
				} else {
					transform = ' ' + trimmedStyle.slice(11).replace(/\s/g, '');
				}
			}

			return {
				baseX: bases.x,
				baseY: bases.y,
				top: blockTop,
				left: blockLeft,
				height: blockHeight,
				width: blockWidth,
				speed: speed,
				verticalSpeed: verticalSpeed,
				horizontalSpeed: horizontalSpeed,
				verticalScrollAxis: verticalScrollAxis,
				horizontalScrollAxis: horizontalScrollAxis,
				style: style,
				transform: transform,
				zindex: dataZindex,
				min: dataMin,
				max: dataMax,
				minX: dataMinX,
				maxX: dataMaxX,
				minY: dataMinY,
				maxY: dataMaxY,
			};
		};

		// set scroll position (posY, posX)
		// side effect method is not ideal, but okay for now
		// returns true if the scroll changed, false if nothing happened
		var setPosition = function () {
			var oldY = posY;
			var oldX = posX;

			posY = self.options.wrapper
				? self.options.wrapper.scrollTop
				: (
						document.documentElement ||
						document.body.parentNode ||
						document.body
				  ).scrollTop || window.pageYOffset;
			posX = self.options.wrapper
				? self.options.wrapper.scrollLeft
				: (
						document.documentElement ||
						document.body.parentNode ||
						document.body
				  ).scrollLeft || window.pageXOffset;
			// If option relativeToWrapper is true, use relative wrapper value instead.
			if (self.options.relativeToWrapper) {
				var scrollPosY =
					(
						document.documentElement ||
						document.body.parentNode ||
						document.body
					).scrollTop || window.pageYOffset;
				posY = scrollPosY - self.options.wrapper.offsetTop;
			}

			if (oldY != posY && self.options.vertical) {
				// scroll changed, return true
				return true;
			}

			if (oldX != posX && self.options.horizontal) {
				// scroll changed, return true
				return true;
			}

			// scroll did not change
			return false;
		};

		// Ahh a pure function, gets new transform value
		// based on scrollPosition and speed
		// Allow for decimal pixel values
		var updatePosition = function (
			percentageX,
			percentageY,
			speed,
			verticalSpeed,
			horizontalSpeed
		) {
			var result = {};
			var valueX =
				(horizontalSpeed ? horizontalSpeed : speed) * (100 * (1 - percentageX));
			var valueY =
				(verticalSpeed ? verticalSpeed : speed) * (100 * (1 - percentageY));

			result.x = self.options.round
				? Math.round(valueX)
				: Math.round(valueX * 100) / 100;
			result.y = self.options.round
				? Math.round(valueY)
				: Math.round(valueY * 100) / 100;

			return result;
		};

		// Remove event listeners and loop again
		var deferredUpdate = function () {
			window.removeEventListener('resize', deferredUpdate);
			window.removeEventListener('orientationchange', deferredUpdate);
			(self.options.wrapper
				? self.options.wrapper
				: window
			).removeEventListener('scroll', deferredUpdate);
			(self.options.wrapper
				? self.options.wrapper
				: document
			).removeEventListener('touchmove', deferredUpdate);

			// loop again
			loopId = loop(update);
		};

		// Loop
		var update = function () {
			if (setPosition() && pause === false) {
				animate();

				// loop again
				loopId = loop(update);
			} else {
				loopId = null;

				// Don't animate until we get a position updating event
				window.addEventListener('resize', deferredUpdate);
				window.addEventListener('orientationchange', deferredUpdate);
				(self.options.wrapper ? self.options.wrapper : window).addEventListener(
					'scroll',
					deferredUpdate,
					supportsPassive ? { passive: true } : false
				);
				(self.options.wrapper
					? self.options.wrapper
					: document
				).addEventListener(
					'touchmove',
					deferredUpdate,
					supportsPassive ? { passive: true } : false
				);
			}
		};

		// Transform3d on parallax element
		var animate = function () {
			var positions;
			for (var i = 0; i < self.elems.length; i++) {
				// Determine relevant movement directions
				var verticalScrollAxis = blocks[i].verticalScrollAxis.toLowerCase();
				var horizontalScrollAxis = blocks[i].horizontalScrollAxis.toLowerCase();
				var verticalScrollX = verticalScrollAxis.indexOf('x') != -1 ? posY : 0;
				var verticalScrollY = verticalScrollAxis.indexOf('y') != -1 ? posY : 0;
				var horizontalScrollX =
					horizontalScrollAxis.indexOf('x') != -1 ? posX : 0;
				var horizontalScrollY =
					horizontalScrollAxis.indexOf('y') != -1 ? posX : 0;

				var percentageY =
					(verticalScrollY + horizontalScrollY - blocks[i].top + screenY) /
					(blocks[i].height + screenY);
				var percentageX =
					(verticalScrollX + horizontalScrollX - blocks[i].left + screenX) /
					(blocks[i].width + screenX);

				// Subtracting initialize value, so element stays in same spot as HTML
				positions = updatePosition(
					percentageX,
					percentageY,
					blocks[i].speed,
					blocks[i].verticalSpeed,
					blocks[i].horizontalSpeed
				);
				var positionY = positions.y - blocks[i].baseY;
				var positionX = positions.x - blocks[i].baseX;

				// The next two "if" blocks go like this:
				// Check if a limit is defined (first "min", then "max");
				// Check if we need to change the Y or the X
				// (Currently working only if just one of the axes is enabled)
				// Then, check if the new position is inside the allowed limit
				// If so, use new position. If not, set position to limit.

				// Check if a min limit is defined
				if (blocks[i].min !== null) {
					if (self.options.vertical && !self.options.horizontal) {
						positionY = positionY <= blocks[i].min ? blocks[i].min : positionY;
					}
					if (self.options.horizontal && !self.options.vertical) {
						positionX = positionX <= blocks[i].min ? blocks[i].min : positionX;
					}
				}

				// Check if directional min limits are defined
				if (blocks[i].minY != null) {
					positionY = positionY <= blocks[i].minY ? blocks[i].minY : positionY;
				}
				if (blocks[i].minX != null) {
					positionX = positionX <= blocks[i].minX ? blocks[i].minX : positionX;
				}

				// Check if a max limit is defined
				if (blocks[i].max !== null) {
					if (self.options.vertical && !self.options.horizontal) {
						positionY = positionY >= blocks[i].max ? blocks[i].max : positionY;
					}
					if (self.options.horizontal && !self.options.vertical) {
						positionX = positionX >= blocks[i].max ? blocks[i].max : positionX;
					}
				}

				// Check if directional max limits are defined
				if (blocks[i].maxY != null) {
					positionY = positionY >= blocks[i].maxY ? blocks[i].maxY : positionY;
				}
				if (blocks[i].maxX != null) {
					positionX = positionX >= blocks[i].maxX ? blocks[i].maxX : positionX;
				}

				var zindex = blocks[i].zindex;

				// Move that element
				// (Set the new translation and append initial inline transforms.)
				var translate =
					'translate3d(' +
					(self.options.horizontal ? positionX : '0') +
					'px,' +
					(self.options.vertical ? positionY : '0') +
					'px,' +
					zindex +
					'px) ' +
					blocks[i].transform;
				self.elems[i].style[transformProp] = translate;
			}
			self.options.callback(positions);
		};

		self.destroy = function () {
			for (var i = 0; i < self.elems.length; i++) {
				self.elems[i].style.cssText = blocks[i].style;
			}

			// Remove resize event listener if not pause, and pause
			if (!pause) {
				window.removeEventListener('resize', init);
				pause = true;
			}

			// Clear the animation loop to prevent possible memory leak
			clearLoop(loopId);
			loopId = null;
		};

		// Init
		init();

		// Allow to recalculate the initial values whenever we want
		self.refresh = init;

		return self;
	};
	return Rellax;
});
